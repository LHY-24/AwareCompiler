{
  "program_id": "linux-v0_6064.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 58,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 11,
    "oneSuccessor": 51,
    "twoPred": 18,
    "twoPredOneSuc": 1,
    "twoEach": 11,
    "twoSuccessor": 28,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 109,
    "BeginPhi": 0,
    "BranchCount": 79,
    "returnInt": 16,
    "CriticalCount": 2,
    "NumEdges": 107,
    "const32Bit": 358,
    "const64Bit": 15,
    "numConstZeroes": 144,
    "numConstOnes": 163,
    "UncondBranches": 51,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 123,
    "NumAndInst": 2,
    "BlockMid": 16,
    "BlockLow": 93,
    "NumBitCastInst": 21,
    "NumBrInst": 79,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 105,
    "NumICmpInst": 32,
    "NumLShrInst": 1,
    "NumLoadInst": 288,
    "NumMulInst": 1,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 30,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 175,
    "NumSubInst": 3,
    "NumTruncInst": 6,
    "NumXorInst": 6,
    "NumZExtInst": 26,
    "TotalBlocks": 109,
    "TotalInsts": 984,
    "TotalMemInst": 746,
    "TotalFuncs": 45,
    "ArgsPhi": 0,
    "testUnary": 480
  },
  "baseline_oz_instcount": 985,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--instsimplify",
    "--instcombine",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--loweratomic",
    "--aggressive-instcombine",
    "--mem2reg",
    "--simplifycfg",
    "--adce",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-cleanup",
          "--dse",
          "--globaldce",
          "--ipsccp",
          "--reassociate",
          "--correlated-propagation",
          "--constprop",
          "--gvn-hoist",
          "--tailcallelim",
          "--callsite-splitting",
          "--speculative-execution",
          "--pgo-memop-opt",
          "--partial-inliner",
          "--early-cse",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-cleanup",
      "--dse",
      "--globaldce",
      "--ipsccp",
      "--reassociate",
      "--correlated-propagation",
      "--constprop",
      "--gvn-hoist",
      "--tailcallelim",
      "--callsite-splitting",
      "--speculative-execution",
      "--pgo-memop-opt",
      "--partial-inliner",
      "--early-cse",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}