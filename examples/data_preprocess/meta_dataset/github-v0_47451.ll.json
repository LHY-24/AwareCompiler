{
  "program_id": "github-v0_47451.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 69,
    "onePredOneSuc": 59,
    "onePredTwoSuc": 6,
    "oneSuccessor": 69,
    "twoPred": 29,
    "twoPredOneSuc": 6,
    "twoEach": 18,
    "twoSuccessor": 29,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 109,
    "BeginPhi": 0,
    "BranchCount": 98,
    "returnInt": 17,
    "CriticalCount": 5,
    "NumEdges": 127,
    "const32Bit": 320,
    "const64Bit": 32,
    "numConstZeroes": 185,
    "numConstOnes": 105,
    "UncondBranches": 69,
    "binaryConstArg": 73,
    "NumAShrInst": 2,
    "NumAddInst": 32,
    "NumAllocaInst": 72,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 101,
    "NumBitCastInst": 0,
    "NumBrInst": 98,
    "NumCallInst": 66,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 30,
    "NumLShrInst": 0,
    "NumLoadInst": 176,
    "NumMulInst": 19,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 30,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 98,
    "NumSubInst": 5,
    "NumTruncInst": 6,
    "NumXorInst": 1,
    "NumZExtInst": 11,
    "TotalBlocks": 109,
    "TotalInsts": 770,
    "TotalMemInst": 499,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 299
  },
  "baseline_oz_instcount": 770,
  "knowledge_base_entry": [
    "--early-cse",
    "--loop-reroll",
    "--gvn",
    "--die",
    "--correlated-propagation",
    "--ipsccp",
    "--dce",
    "--gvn",
    "--mergefunc",
    "--loop-simplifycfg",
    "--dse",
    "--gvn",
    "--lower-expect",
    "--adce",
    "--early-cse-memssa",
    "--bdce",
    "--aggressive-instcombine",
    "--newgvn",
    "--loop-simplifycfg",
    "--gvn",
    "--sccp",
    "--dse",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--instcombine",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--separate-const-offset-from-gep",
          "--dce",
          "--deadargelim",
          "--loop-deletion",
          "--simplifycfg",
          "--lowerinvoke",
          "--constmerge",
          "--elim-avail-extern",
          "--pgo-memop-opt",
          "--sancov",
          "--strip-debug-declare",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--separate-const-offset-from-gep",
      "--dce",
      "--deadargelim",
      "--loop-deletion",
      "--simplifycfg",
      "--lowerinvoke",
      "--constmerge",
      "--elim-avail-extern",
      "--pgo-memop-opt",
      "--sancov",
      "--strip-debug-declare",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}