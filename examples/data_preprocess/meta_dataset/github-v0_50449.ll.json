{
  "program_id": "github-v0_50449.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 3,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 5,
    "BeginPhi": 2,
    "BranchCount": 6,
    "returnInt": 3,
    "CriticalCount": 3,
    "NumEdges": 9,
    "const32Bit": 10,
    "const64Bit": 2,
    "numConstZeroes": 5,
    "numConstOnes": 3,
    "UncondBranches": 3,
    "binaryConstArg": 6,
    "NumAShrInst": 1,
    "NumAddInst": 9,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 1,
    "BlockLow": 6,
    "NumBitCastInst": 2,
    "NumBrInst": 6,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 3,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 1,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 2,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 7,
    "TotalInsts": 54,
    "TotalMemInst": 14,
    "TotalFuncs": 4,
    "ArgsPhi": 6,
    "testUnary": 11
  },
  "baseline_oz_instcount": 54,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--prune-eh",
    "--elim-avail-extern",
    "--lower-expect",
    "--loop-rotate",
    "--jump-threading",
    "--loop-rotate",
    "--instcombine",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--adce",
    "--slp-vectorizer",
    "--dce",
    "--reassociate",
    "--sccp",
    "--adce",
    "--dse",
    "--nary-reassociate",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--deadargelim",
          "--load-store-vectorizer",
          "--post-inline-ee-instrument",
          "--early-cse-memssa",
          "--barrier",
          "--inline",
          "--rpo-functionattrs",
          "--loweratomic",
          "--licm",
          "--instnamer",
          "--lower-guard-intrinsic",
          "--flattencfg",
          "--simplifycfg",
          "--constmerge",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--deadargelim",
      "--load-store-vectorizer",
      "--post-inline-ee-instrument",
      "--early-cse-memssa",
      "--barrier",
      "--inline",
      "--rpo-functionattrs",
      "--loweratomic",
      "--licm",
      "--instnamer",
      "--lower-guard-intrinsic",
      "--flattencfg",
      "--simplifycfg",
      "--constmerge",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}