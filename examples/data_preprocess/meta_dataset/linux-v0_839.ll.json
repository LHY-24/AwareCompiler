{
  "program_id": "linux-v0_839.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 44,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 11,
    "oneSuccessor": 39,
    "twoPred": 20,
    "twoPredOneSuc": 6,
    "twoEach": 8,
    "twoSuccessor": 27,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 3,
    "BranchCount": 66,
    "returnInt": 3,
    "CriticalCount": 11,
    "NumEdges": 93,
    "const32Bit": 234,
    "const64Bit": 19,
    "numConstZeroes": 86,
    "numConstOnes": 59,
    "UncondBranches": 39,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 55,
    "NumAndInst": 10,
    "BlockMid": 19,
    "BlockLow": 60,
    "NumBitCastInst": 12,
    "NumBrInst": 66,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 83,
    "NumICmpInst": 27,
    "NumLShrInst": 0,
    "NumLoadInst": 222,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 3,
    "NumRetInst": 13,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 89,
    "NumSubInst": 2,
    "NumTruncInst": 21,
    "NumXorInst": 0,
    "NumZExtInst": 32,
    "TotalBlocks": 79,
    "TotalInsts": 705,
    "TotalMemInst": 501,
    "TotalFuncs": 36,
    "ArgsPhi": 6,
    "testUnary": 346
  },
  "baseline_oz_instcount": 706,
  "knowledge_base_entry": [
    "--adce",
    "--reassociate",
    "--correlated-propagation",
    "--bdce",
    "--aggressive-instcombine",
    "--sroa",
    "--mergefunc",
    "--load-store-vectorizer",
    "--lower-expect",
    "--gvn",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergereturn",
          "--mergeicmps",
          "--inferattrs",
          "--forceattrs",
          "--always-inline",
          "--mldst-motion",
          "--alignment-from-assumptions",
          "--die",
          "--consthoist",
          "--separate-const-offset-from-gep",
          "--load-store-vectorizer",
          "--aggressive-instcombine",
          "--pgo-memop-opt",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergereturn",
      "--mergeicmps",
      "--inferattrs",
      "--forceattrs",
      "--always-inline",
      "--mldst-motion",
      "--alignment-from-assumptions",
      "--die",
      "--consthoist",
      "--separate-const-offset-from-gep",
      "--load-store-vectorizer",
      "--aggressive-instcombine",
      "--pgo-memop-opt",
      "--instcombine"
    ],
    "performance_vs_Oz": "+3.5%"
  }
}