{
  "program_id": "github-v0_41951.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 62,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 19,
    "oneSuccessor": 55,
    "twoPred": 27,
    "twoPredOneSuc": 10,
    "twoEach": 14,
    "twoSuccessor": 38,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 102,
    "BeginPhi": 0,
    "BranchCount": 93,
    "returnInt": 50,
    "CriticalCount": 20,
    "NumEdges": 131,
    "const32Bit": 211,
    "const64Bit": 24,
    "numConstZeroes": 118,
    "numConstOnes": 87,
    "UncondBranches": 55,
    "binaryConstArg": 33,
    "NumAShrInst": 0,
    "NumAddInst": 22,
    "NumAllocaInst": 53,
    "NumAndInst": 0,
    "BlockMid": 14,
    "BlockLow": 88,
    "NumBitCastInst": 26,
    "NumBrInst": 93,
    "NumCallInst": 93,
    "NumGetElementPtrInst": 78,
    "NumICmpInst": 37,
    "NumLShrInst": 0,
    "NumLoadInst": 262,
    "NumMulInst": 8,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 100,
    "NumSubInst": 5,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 17,
    "TotalBlocks": 102,
    "TotalInsts": 839,
    "TotalMemInst": 586,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 380
  },
  "baseline_oz_instcount": 840,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--simplifycfg",
    "--lower-expect",
    "--instsimplify",
    "--mem2reg",
    "--globalopt",
    "--reassociate",
    "--dce",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instcombine",
          "--loop-data-prefetch",
          "--sancov",
          "--callsite-splitting",
          "--irce",
          "--loop-vectorize",
          "--called-value-propagation",
          "--early-cse",
          "--globalsplit",
          "--globalopt",
          "--aggressive-instcombine",
          "--loop-fusion",
          "--instnamer",
          "--cross-dso-cfi",
          "--dce",
          "--prune-eh",
          "--tailcallelim",
          "--jump-threading",
          "--lowerswitch",
          "--strip-debug-declare",
          "--loop-versioning",
          "--strip-dead-prototypes",
          "--sccp",
          "--elim-avail-extern",
          "--coro-elide"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instcombine",
      "--loop-data-prefetch",
      "--sancov",
      "--callsite-splitting",
      "--irce",
      "--loop-vectorize",
      "--called-value-propagation",
      "--early-cse",
      "--globalsplit",
      "--globalopt",
      "--aggressive-instcombine",
      "--loop-fusion",
      "--instnamer",
      "--cross-dso-cfi",
      "--dce",
      "--prune-eh",
      "--tailcallelim",
      "--jump-threading",
      "--lowerswitch",
      "--strip-debug-declare",
      "--loop-versioning",
      "--strip-dead-prototypes",
      "--sccp",
      "--elim-avail-extern",
      "--coro-elide"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}