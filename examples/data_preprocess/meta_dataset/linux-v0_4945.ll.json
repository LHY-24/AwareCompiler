{
  "program_id": "linux-v0_4945.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 29,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 5,
    "oneSuccessor": 26,
    "twoPred": 10,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 52,
    "BeginPhi": 1,
    "BranchCount": 40,
    "returnInt": 13,
    "CriticalCount": 2,
    "NumEdges": 54,
    "const32Bit": 235,
    "const64Bit": 36,
    "numConstZeroes": 88,
    "numConstOnes": 75,
    "UncondBranches": 26,
    "binaryConstArg": 27,
    "NumAShrInst": 1,
    "NumAddInst": 3,
    "NumAllocaInst": 56,
    "NumAndInst": 12,
    "BlockMid": 13,
    "BlockLow": 40,
    "NumBitCastInst": 2,
    "NumBrInst": 40,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 14,
    "NumLShrInst": 3,
    "NumLoadInst": 165,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 1,
    "NumRetInst": 13,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 104,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 53,
    "TotalInsts": 569,
    "TotalMemInst": 444,
    "TotalFuncs": 26,
    "ArgsPhi": 2,
    "testUnary": 249
  },
  "baseline_oz_instcount": 570,
  "knowledge_base_entry": [
    "--die",
    "--slp-vectorizer",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--dse",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--sroa",
    "--load-store-vectorizer",
    "--newgvn",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--deadargelim",
          "--div-rem-pairs",
          "--aggressive-instcombine",
          "--loop-deletion",
          "--loop-simplify",
          "--load-store-vectorizer",
          "--loop-load-elim",
          "--name-anon-globals",
          "--loop-data-prefetch",
          "--simplifycfg",
          "--licm",
          "--functionattrs",
          "--rpo-functionattrs",
          "--coro-elide",
          "--prune-eh",
          "--loop-unroll-and-jam",
          "--gvn",
          "--pgo-memop-opt",
          "--loop-idiom"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--deadargelim",
      "--div-rem-pairs",
      "--aggressive-instcombine",
      "--loop-deletion",
      "--loop-simplify",
      "--load-store-vectorizer",
      "--loop-load-elim",
      "--name-anon-globals",
      "--loop-data-prefetch",
      "--simplifycfg",
      "--licm",
      "--functionattrs",
      "--rpo-functionattrs",
      "--coro-elide",
      "--prune-eh",
      "--loop-unroll-and-jam",
      "--gvn",
      "--pgo-memop-opt",
      "--loop-idiom"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}