{
  "program_id": "linux-v0_10612.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 36,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 11,
    "oneSuccessor": 31,
    "twoPred": 9,
    "twoPredOneSuc": 6,
    "twoEach": 2,
    "twoSuccessor": 17,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 0,
    "BranchCount": 48,
    "returnInt": 7,
    "CriticalCount": 4,
    "NumEdges": 65,
    "const32Bit": 263,
    "const64Bit": 9,
    "numConstZeroes": 121,
    "numConstOnes": 68,
    "UncondBranches": 31,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 56,
    "NumAndInst": 3,
    "BlockMid": 12,
    "BlockLow": 47,
    "NumBitCastInst": 10,
    "NumBrInst": 48,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 92,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 166,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 76,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 11,
    "TotalBlocks": 59,
    "TotalInsts": 549,
    "TotalMemInst": 423,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 259
  },
  "baseline_oz_instcount": 549,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--gvn",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--newgvn",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--loop-deletion",
    "--mem2reg",
    "--jump-threading",
    "--aggressive-instcombine",
    "--die",
    "--reassociate",
    "--bdce",
    "--dse",
    "--sccp",
    "--licm",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--loop-load-elim",
          "--coro-split",
          "--callsite-splitting",
          "--mem2reg",
          "--guard-widening",
          "--globalsplit",
          "--adce",
          "--loop-unswitch",
          "--ee-instrument",
          "--simple-loop-unswitch",
          "--aggressive-instcombine",
          "--early-cse-memssa",
          "--coro-elide",
          "--div-rem-pairs",
          "--redundant-dbg-inst-elim",
          "--coro-early",
          "--lower-widenable-condition",
          "--cross-dso-cfi",
          "--loop-sink",
          "--loop-interchange",
          "--always-inline",
          "--ipsccp",
          "--gvn-hoist",
          "--hotcoldsplit",
          "--lowerswitch",
          "--prune-eh",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--loop-load-elim",
      "--coro-split",
      "--callsite-splitting",
      "--mem2reg",
      "--guard-widening",
      "--globalsplit",
      "--adce",
      "--loop-unswitch",
      "--ee-instrument",
      "--simple-loop-unswitch",
      "--aggressive-instcombine",
      "--early-cse-memssa",
      "--coro-elide",
      "--div-rem-pairs",
      "--redundant-dbg-inst-elim",
      "--coro-early",
      "--lower-widenable-condition",
      "--cross-dso-cfi",
      "--loop-sink",
      "--loop-interchange",
      "--always-inline",
      "--ipsccp",
      "--gvn-hoist",
      "--hotcoldsplit",
      "--lowerswitch",
      "--prune-eh",
      "--indvars"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}