{
  "program_id": "linux-v0_13638.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 30,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 2,
    "oneSuccessor": 30,
    "twoPred": 12,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 12,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 68,
    "BeginPhi": 2,
    "BranchCount": 42,
    "returnInt": 11,
    "CriticalCount": 7,
    "NumEdges": 64,
    "const32Bit": 179,
    "const64Bit": 9,
    "numConstZeroes": 74,
    "numConstOnes": 87,
    "UncondBranches": 30,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 75,
    "NumAndInst": 0,
    "BlockMid": 10,
    "BlockLow": 60,
    "NumBitCastInst": 31,
    "NumBrInst": 42,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 145,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 26,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 101,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 70,
    "TotalInsts": 536,
    "TotalMemInst": 407,
    "TotalFuncs": 38,
    "ArgsPhi": 4,
    "testUnary": 263
  },
  "baseline_oz_instcount": 535,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--simplifycfg",
    "--loop-reroll",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--instcombine",
    "--jump-threading",
    "--globalopt",
    "--loop-instsimplify",
    "--ipsccp",
    "--elim-avail-extern",
    "--flattencfg",
    "--sroa",
    "--ipsccp",
    "--lower-expect",
    "--gvn-hoist",
    "--instsimplify",
    "--mergefunc",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--loop-load-elim",
          "--instnamer",
          "--lowerinvoke",
          "--inline",
          "--mergereturn",
          "--separate-const-offset-from-gep",
          "--callsite-splitting",
          "--simplifycfg",
          "--bdce",
          "--libcalls-shrinkwrap",
          "--elim-avail-extern",
          "--indvars",
          "--mldst-motion",
          "--loop-fusion",
          "--licm",
          "--dce",
          "--strip-debug-declare",
          "--ipsccp",
          "--lcssa",
          "--loop-simplifycfg",
          "--instsimplify",
          "--rewrite-statepoints-for-gc",
          "--constmerge",
          "--loop-reroll",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--loop-load-elim",
      "--instnamer",
      "--lowerinvoke",
      "--inline",
      "--mergereturn",
      "--separate-const-offset-from-gep",
      "--callsite-splitting",
      "--simplifycfg",
      "--bdce",
      "--libcalls-shrinkwrap",
      "--elim-avail-extern",
      "--indvars",
      "--mldst-motion",
      "--loop-fusion",
      "--licm",
      "--dce",
      "--strip-debug-declare",
      "--ipsccp",
      "--lcssa",
      "--loop-simplifycfg",
      "--instsimplify",
      "--rewrite-statepoints-for-gc",
      "--constmerge",
      "--loop-reroll",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}