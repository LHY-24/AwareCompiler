{
  "program_id": "linux-v0_763.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 2,
    "oneSuccessor": 19,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 5,
    "CriticalCount": 2,
    "NumEdges": 37,
    "const32Bit": 114,
    "const64Bit": 7,
    "numConstZeroes": 55,
    "numConstOnes": 52,
    "UncondBranches": 19,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 26,
    "NumAndInst": 10,
    "BlockMid": 10,
    "BlockLow": 34,
    "NumBitCastInst": 4,
    "NumBrInst": 28,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 104,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 61,
    "NumSubInst": 9,
    "NumTruncInst": 11,
    "NumXorInst": 1,
    "NumZExtInst": 34,
    "TotalBlocks": 44,
    "TotalInsts": 398,
    "TotalMemInst": 261,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 181
  },
  "baseline_oz_instcount": 398,
  "knowledge_base_entry": [
    "--flattencfg",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse-memssa",
    "--simplifycfg",
    "--flattencfg",
    "--mergefunc",
    "--early-cse",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--dce",
          "--irce",
          "--post-inline-ee-instrument",
          "--aggressive-instcombine",
          "--lower-constant-intrinsics",
          "--loop-guard-widening",
          "--loop-interchange",
          "--coro-elide",
          "--speculative-execution",
          "--loweratomic",
          "--slp-vectorizer",
          "--loop-deletion",
          "--ipsccp",
          "--jump-threading",
          "--ipconstprop",
          "--slsr",
          "--simplifycfg",
          "--globalsplit",
          "-loop-reduce",
          "--globalopt",
          "--constmerge",
          "--loop-fusion",
          "--loop-versioning-licm",
          "--pgo-memop-opt",
          "--div-rem-pairs",
          "--mem2reg",
          "--insert-gcov-profiling",
          "--sancov",
          "--libcalls-shrinkwrap"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--dce",
      "--irce",
      "--post-inline-ee-instrument",
      "--aggressive-instcombine",
      "--lower-constant-intrinsics",
      "--loop-guard-widening",
      "--loop-interchange",
      "--coro-elide",
      "--speculative-execution",
      "--loweratomic",
      "--slp-vectorizer",
      "--loop-deletion",
      "--ipsccp",
      "--jump-threading",
      "--ipconstprop",
      "--slsr",
      "--simplifycfg",
      "--globalsplit",
      "-loop-reduce",
      "--globalopt",
      "--constmerge",
      "--loop-fusion",
      "--loop-versioning-licm",
      "--pgo-memop-opt",
      "--div-rem-pairs",
      "--mem2reg",
      "--insert-gcov-profiling",
      "--sancov",
      "--libcalls-shrinkwrap"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}