{
  "program_id": "linux-v0_4534.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 5,
    "oneSuccessor": 24,
    "twoPred": 8,
    "twoPredOneSuc": 4,
    "twoEach": 1,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 32,
    "returnInt": 7,
    "CriticalCount": 6,
    "NumEdges": 49,
    "const32Bit": 127,
    "const64Bit": 20,
    "numConstZeroes": 49,
    "numConstOnes": 62,
    "UncondBranches": 24,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 47,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 44,
    "NumBitCastInst": 11,
    "NumBrInst": 32,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 81,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 69,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 50,
    "TotalInsts": 330,
    "TotalMemInst": 252,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 147
  },
  "baseline_oz_instcount": 332,
  "knowledge_base_entry": [
    "--mem2reg",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--mergefunc",
    "--early-cse-memssa",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--partial-inliner",
          "--loop-idiom",
          "--globaldce",
          "--forceattrs",
          "--sancov",
          "--consthoist",
          "--cross-dso-cfi",
          "--correlated-propagation",
          "--reassociate",
          "--dce",
          "--infer-address-spaces",
          "--slsr",
          "--jump-threading",
          "--loop-distribute",
          "--loop-unroll",
          "--loop-instsimplify",
          "--name-anon-globals",
          "--flattencfg",
          "--libcalls-shrinkwrap",
          "--instnamer",
          "--always-inline",
          "--inject-tli-mappings",
          "--aggressive-instcombine",
          "--instsimplify",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--partial-inliner",
      "--loop-idiom",
      "--globaldce",
      "--forceattrs",
      "--sancov",
      "--consthoist",
      "--cross-dso-cfi",
      "--correlated-propagation",
      "--reassociate",
      "--dce",
      "--infer-address-spaces",
      "--slsr",
      "--jump-threading",
      "--loop-distribute",
      "--loop-unroll",
      "--loop-instsimplify",
      "--name-anon-globals",
      "--flattencfg",
      "--libcalls-shrinkwrap",
      "--instnamer",
      "--always-inline",
      "--inject-tli-mappings",
      "--aggressive-instcombine",
      "--instsimplify",
      "--instcombine"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}