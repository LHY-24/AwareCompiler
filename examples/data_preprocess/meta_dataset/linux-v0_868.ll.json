{
  "program_id": "linux-v0_868.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 54,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 17,
    "oneSuccessor": 54,
    "twoPred": 26,
    "twoPredOneSuc": 12,
    "twoEach": 7,
    "twoSuccessor": 32,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 107,
    "BeginPhi": 1,
    "BranchCount": 84,
    "returnInt": 7,
    "CriticalCount": 17,
    "NumEdges": 122,
    "const32Bit": 328,
    "const64Bit": 32,
    "numConstZeroes": 133,
    "numConstOnes": 107,
    "UncondBranches": 52,
    "binaryConstArg": 42,
    "NumAShrInst": 6,
    "NumAddInst": 8,
    "NumAllocaInst": 69,
    "NumAndInst": 24,
    "BlockMid": 22,
    "BlockLow": 86,
    "NumBitCastInst": 5,
    "NumBrInst": 84,
    "NumCallInst": 58,
    "NumGetElementPtrInst": 107,
    "NumICmpInst": 33,
    "NumLShrInst": 0,
    "NumLoadInst": 274,
    "NumMulInst": 4,
    "NumOrInst": 5,
    "NumPHIInst": 1,
    "NumRetInst": 21,
    "NumSExtInst": 3,
    "NumSelectInst": 3,
    "NumShlInst": 2,
    "NumStoreInst": 122,
    "NumSubInst": 2,
    "NumTruncInst": 13,
    "NumXorInst": 0,
    "NumZExtInst": 59,
    "TotalBlocks": 108,
    "TotalInsts": 914,
    "TotalMemInst": 630,
    "TotalFuncs": 47,
    "ArgsPhi": 2,
    "testUnary": 428
  },
  "baseline_oz_instcount": 912,
  "knowledge_base_entry": [
    "--bdce",
    "--gvn-hoist",
    "-loop-reduce",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--dse",
    "--nary-reassociate",
    "--ipsccp",
    "--correlated-propagation",
    "--early-cse-memssa",
    "-loop-reduce",
    "--nary-reassociate",
    "--slsr",
    "--indvars",
    "--instcombine",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--gvn",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--redundant-dbg-inst-elim",
          "--instcombine",
          "--licm",
          "--loop-rotate",
          "--partial-inliner",
          "--insert-gcov-profiling",
          "--speculative-execution",
          "--functionattrs",
          "--guard-widening",
          "--partially-inline-libcalls",
          "--mergeicmps",
          "--aggressive-instcombine",
          "--coro-early",
          "--correlated-propagation",
          "--ipsccp",
          "--loop-versioning",
          "--libcalls-shrinkwrap",
          "--mldst-motion",
          "--lower-matrix-intrinsics",
          "--loop-simplifycfg",
          "--inferattrs",
          "--coro-split",
          "--rewrite-statepoints-for-gc",
          "--coro-cleanup",
          "--newgvn",
          "--globalsplit",
          "--loop-data-prefetch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--redundant-dbg-inst-elim",
      "--instcombine",
      "--licm",
      "--loop-rotate",
      "--partial-inliner",
      "--insert-gcov-profiling",
      "--speculative-execution",
      "--functionattrs",
      "--guard-widening",
      "--partially-inline-libcalls",
      "--mergeicmps",
      "--aggressive-instcombine",
      "--coro-early",
      "--correlated-propagation",
      "--ipsccp",
      "--loop-versioning",
      "--libcalls-shrinkwrap",
      "--mldst-motion",
      "--lower-matrix-intrinsics",
      "--loop-simplifycfg",
      "--inferattrs",
      "--coro-split",
      "--rewrite-statepoints-for-gc",
      "--coro-cleanup",
      "--newgvn",
      "--globalsplit",
      "--loop-data-prefetch"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}