{
  "program_id": "github-v0_40399.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 3,
    "oneSuccessor": 11,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 25,
    "const32Bit": 32,
    "const64Bit": 24,
    "numConstZeroes": 27,
    "numConstOnes": 20,
    "UncondBranches": 11,
    "binaryConstArg": 10,
    "NumAShrInst": 2,
    "NumAddInst": 4,
    "NumAllocaInst": 12,
    "NumAndInst": 1,
    "BlockMid": 4,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 18,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 7,
    "NumLShrInst": 1,
    "NumLoadInst": 27,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 22,
    "TotalInsts": 140,
    "TotalMemInst": 77,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 62
  },
  "baseline_oz_instcount": 140,
  "knowledge_base_entry": [
    "--globalopt",
    "--gvn",
    "--jump-threading",
    "--gvn",
    "--aggressive-instcombine",
    "--bdce",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--dse",
    "--globalopt",
    "--instcombine",
    "--mergefunc",
    "--inline",
    "--early-cse",
    "--early-cse",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "--cross-dso-cfi",
          "--strip",
          "--always-inline",
          "--mergereturn",
          "--loop-interchange",
          "--loop-unroll",
          "--strip-nondebug",
          "--aggressive-instcombine",
          "--loop-distribute",
          "--correlated-propagation",
          "--guard-widening",
          "--loop-fusion",
          "--libcalls-shrinkwrap",
          "--rewrite-statepoints-for-gc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "--cross-dso-cfi",
      "--strip",
      "--always-inline",
      "--mergereturn",
      "--loop-interchange",
      "--loop-unroll",
      "--strip-nondebug",
      "--aggressive-instcombine",
      "--loop-distribute",
      "--correlated-propagation",
      "--guard-widening",
      "--loop-fusion",
      "--libcalls-shrinkwrap",
      "--rewrite-statepoints-for-gc"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}