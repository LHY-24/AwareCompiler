{
  "program_id": "tensorflow-v0_1145.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 22,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 8,
    "oneSuccessor": 16,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 15,
    "morePreds": 3,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 5,
    "BranchCount": 31,
    "returnInt": 0,
    "CriticalCount": 8,
    "NumEdges": 46,
    "const32Bit": 117,
    "const64Bit": 96,
    "numConstZeroes": 134,
    "numConstOnes": 25,
    "UncondBranches": 16,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 4,
    "BlockLow": 38,
    "NumBitCastInst": 47,
    "NumBrInst": 31,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 85,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 56,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 6,
    "NumRetInst": 10,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 47,
    "NumSubInst": 3,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 42,
    "TotalInsts": 325,
    "TotalMemInst": 203,
    "TotalFuncs": 16,
    "ArgsPhi": 14,
    "testUnary": 111
  },
  "baseline_oz_instcount": 324,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--indvars",
    "--newgvn",
    "--sroa",
    "--nary-reassociate",
    "--sroa",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--load-store-vectorizer",
    "--jump-threading",
    "--loop-instsimplify",
    "--lower-expect",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--newgvn",
    "--loop-instsimplify",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "--mergefunc",
          "--partially-inline-libcalls",
          "--globalsplit",
          "--inline",
          "--correlated-propagation",
          "--load-store-vectorizer",
          "--instnamer",
          "--loop-guard-widening",
          "--instcombine",
          "--float2int",
          "--globalopt",
          "--loop-instsimplify",
          "--mergeicmps",
          "--coro-elide",
          "--mem2reg",
          "--libcalls-shrinkwrap",
          "--lower-widenable-condition"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "--mergefunc",
      "--partially-inline-libcalls",
      "--globalsplit",
      "--inline",
      "--correlated-propagation",
      "--load-store-vectorizer",
      "--instnamer",
      "--loop-guard-widening",
      "--instcombine",
      "--float2int",
      "--globalopt",
      "--loop-instsimplify",
      "--mergeicmps",
      "--coro-elide",
      "--mem2reg",
      "--libcalls-shrinkwrap",
      "--lower-widenable-condition"
    ],
    "performance_vs_Oz": "+3.1%"
  }
}