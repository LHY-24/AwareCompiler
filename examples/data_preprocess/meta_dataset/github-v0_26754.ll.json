{
  "program_id": "github-v0_26754.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 6,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 3,
    "CriticalCount": 8,
    "NumEdges": 33,
    "const32Bit": 31,
    "const64Bit": 0,
    "numConstZeroes": 8,
    "numConstOnes": 13,
    "UncondBranches": 13,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 9,
    "NumAndInst": 5,
    "BlockMid": 4,
    "BlockLow": 22,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 57,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 24,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 26,
    "TotalInsts": 186,
    "TotalMemInst": 104,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 99
  },
  "baseline_oz_instcount": 186,
  "knowledge_base_entry": [
    "--simple-loop-unswitch",
    "--jump-threading",
    "--aggressive-instcombine",
    "--reassociate",
    "--loop-instsimplify",
    "--jump-threading",
    "--sccp",
    "--loop-deletion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--loweratomic",
          "--coro-early",
          "--lower-matrix-intrinsics",
          "--ee-instrument",
          "--redundant-dbg-inst-elim",
          "--loop-unroll",
          "--speculative-execution",
          "--reassociate",
          "--div-rem-pairs",
          "--consthoist",
          "--pgo-memop-opt",
          "--dce",
          "--loop-simplifycfg",
          "--separate-const-offset-from-gep",
          "--loop-rotate",
          "--coro-cleanup",
          "--loop-reroll",
          "--early-cse-memssa",
          "--ipconstprop",
          "--mergereturn",
          "--constmerge",
          "--elim-avail-extern",
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--attributor",
          "--slp-vectorizer",
          "--strip-nondebug",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--loweratomic",
      "--coro-early",
      "--lower-matrix-intrinsics",
      "--ee-instrument",
      "--redundant-dbg-inst-elim",
      "--loop-unroll",
      "--speculative-execution",
      "--reassociate",
      "--div-rem-pairs",
      "--consthoist",
      "--pgo-memop-opt",
      "--dce",
      "--loop-simplifycfg",
      "--separate-const-offset-from-gep",
      "--loop-rotate",
      "--coro-cleanup",
      "--loop-reroll",
      "--early-cse-memssa",
      "--ipconstprop",
      "--mergereturn",
      "--constmerge",
      "--elim-avail-extern",
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--attributor",
      "--slp-vectorizer",
      "--strip-nondebug",
      "--indvars"
    ],
    "performance_vs_Oz": "+3.2%"
  }
}