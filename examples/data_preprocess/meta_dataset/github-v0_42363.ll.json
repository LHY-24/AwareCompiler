{
  "program_id": "github-v0_42363.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 8,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 16,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 16,
    "const64Bit": 0,
    "numConstZeroes": 16,
    "numConstOnes": 0,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 8,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 16,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 8,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 8,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 8,
    "TotalInsts": 74,
    "TotalMemInst": 56,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 18
  },
  "baseline_oz_instcount": 74,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--gvn",
    "--mergefunc",
    "--globalopt",
    "--dse",
    "--lower-expect",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--mergefunc",
          "--prune-eh",
          "--ipsccp",
          "--strip",
          "--loop-idiom",
          "--loop-deletion",
          "--globalsplit",
          "--strip-debug-declare",
          "--loop-load-elim",
          "--insert-gcov-profiling",
          "--loop-versioning-licm",
          "--die",
          "--inferattrs",
          "--inject-tli-mappings",
          "--elim-avail-extern",
          "--sancov",
          "--inline",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+17.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--mergefunc",
      "--prune-eh",
      "--ipsccp",
      "--strip",
      "--loop-idiom",
      "--loop-deletion",
      "--globalsplit",
      "--strip-debug-declare",
      "--loop-load-elim",
      "--insert-gcov-profiling",
      "--loop-versioning-licm",
      "--die",
      "--inferattrs",
      "--inject-tli-mappings",
      "--elim-avail-extern",
      "--sancov",
      "--inline",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+17.6%"
  }
}