{
  "program_id": "poj104-v1_46_640.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 46,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 4,
    "oneSuccessor": 46,
    "twoPred": 18,
    "twoPredOneSuc": 3,
    "twoEach": 14,
    "twoSuccessor": 18,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 66,
    "BeginPhi": 1,
    "BranchCount": 64,
    "returnInt": 14,
    "CriticalCount": 2,
    "NumEdges": 82,
    "const32Bit": 43,
    "const64Bit": 40,
    "numConstZeroes": 29,
    "numConstOnes": 28,
    "UncondBranches": 46,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 65,
    "NumBitCastInst": 16,
    "NumBrInst": 64,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 107,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 24,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 31,
    "NumSubInst": 20,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 67,
    "TotalInsts": 367,
    "TotalMemInst": 203,
    "TotalFuncs": 10,
    "ArgsPhi": 2,
    "testUnary": 156
  },
  "baseline_oz_instcount": 206,
  "knowledge_base_entry": [
    "--break-crit-edges",
    "--gvn-hoist",
    "--licm",
    "--mldst-motion",
    "--slp-vectorizer",
    "--bdce",
    "--newgvn",
    "--loop-reroll",
    "--jump-threading",
    "--simplifycfg",
    "--instcombine",
    "--die",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--die",
    "--die",
    "--mergefunc",
    "--flattencfg",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--instcombine",
    "--adce",
    "--dce",
    "--slp-vectorizer",
    "--instcombine",
    "--instsimplify",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--reassociate",
    "--newgvn",
    "--loop-simplifycfg",
    "--instcombine",
    "--die",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--die",
    "--die",
    "--mergefunc",
    "--flattencfg",
    "--loop-simplifycfg",
    "--early-cse",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--instcombine",
    "--simplifycfg",
    "--lower-expect",
    "--mergefunc",
    "--mem2reg",
    "--globalopt",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--loop-reroll",
    "--correlated-propagation",
    "--dce",
    "--jump-threading",
    "--dse",
    "--aggressive-instcombine",
    "--inline",
    "--globalopt",
    "--early-cse",
    "--loop-fusion",
    "--loop-reroll",
    "--sroa",
    "--instcombine",
    "--newgvn",
    "--dse",
    "--newgvn",
    "--adce",
    "--simplifycfg",
    "--instsimplify",
    "--dse",
    "--elim-avail-extern",
    "--newgvn",
    "--instcombine",
    "--lower-expect",
    "--mergefunc",
    "--mem2reg",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--coro-split",
          "--loop-idiom",
          "--sancov",
          "--strip",
          "--coro-early",
          "--sink",
          "--jump-threading",
          "--mergereturn",
          "--lower-matrix-intrinsics",
          "--sroa",
          "--elim-avail-extern",
          "--div-rem-pairs",
          "--ipsccp",
          "--inline",
          "--instcombine",
          "--newgvn",
          "--lower-widenable-condition",
          "--always-inline",
          "--early-cse-memssa",
          "--aggressive-instcombine",
          "--reassociate",
          "--prune-eh",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--coro-split",
      "--loop-idiom",
      "--sancov",
      "--strip",
      "--coro-early",
      "--sink",
      "--jump-threading",
      "--mergereturn",
      "--lower-matrix-intrinsics",
      "--sroa",
      "--elim-avail-extern",
      "--div-rem-pairs",
      "--ipsccp",
      "--inline",
      "--instcombine",
      "--newgvn",
      "--lower-widenable-condition",
      "--always-inline",
      "--early-cse-memssa",
      "--aggressive-instcombine",
      "--reassociate",
      "--prune-eh",
      "--die"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}