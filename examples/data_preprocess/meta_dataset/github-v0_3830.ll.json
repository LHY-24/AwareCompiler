{
  "program_id": "github-v0_3830.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 1,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 0,
    "oneSuccessor": 1,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 2,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 3,
    "const32Bit": 18,
    "const64Bit": 0,
    "numConstZeroes": 7,
    "numConstOnes": 10,
    "UncondBranches": 1,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 8,
    "NumBitCastInst": 1,
    "NumBrInst": 2,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 17,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 11,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 57,
    "TotalMemInst": 46,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 28
  },
  "baseline_oz_instcount": 57,
  "knowledge_base_entry": [
    "--loop-predication",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--instsimplify",
    "--ipsccp",
    "--sroa",
    "--gvn",
    "--mergefunc",
    "--early-cse",
    "--flattencfg",
    "--mergefunc",
    "--aggressive-instcombine",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--early-cse",
          "--add-discriminators",
          "--loop-simplifycfg",
          "--instcombine",
          "--mergefunc",
          "--flattencfg",
          "--lower-matrix-intrinsics",
          "--coro-elide",
          "--loop-versioning-licm",
          "--sancov",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--early-cse",
      "--add-discriminators",
      "--loop-simplifycfg",
      "--instcombine",
      "--mergefunc",
      "--flattencfg",
      "--lower-matrix-intrinsics",
      "--coro-elide",
      "--loop-versioning-licm",
      "--sancov",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+3.5%"
  }
}