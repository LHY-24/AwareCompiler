{
  "program_id": "linux-v0_1316.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 2,
    "oneSuccessor": 6,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 1,
    "CriticalCount": 4,
    "NumEdges": 14,
    "const32Bit": 26,
    "const64Bit": 0,
    "numConstZeroes": 12,
    "numConstOnes": 4,
    "UncondBranches": 6,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 3,
    "NumAndInst": 1,
    "BlockMid": 0,
    "BlockLow": 11,
    "NumBitCastInst": 0,
    "NumBrInst": 9,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 16,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 4,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 11,
    "TotalInsts": 47,
    "TotalMemInst": 32,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 19
  },
  "baseline_oz_instcount": 48,
  "knowledge_base_entry": [
    "--bdce",
    "--ipsccp",
    "--lower-expect",
    "--elim-avail-extern",
    "--newgvn",
    "--dse",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--jump-threading",
    "--mergefunc",
    "--flattencfg",
    "--sroa",
    "--die",
    "--early-cse",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--licm",
          "--early-cse-memssa",
          "--lower-expect",
          "--loop-predication",
          "--strip-nondebug",
          "--inline",
          "--gvn-hoist",
          "--bdce",
          "--loop-deletion",
          "--die",
          "--loop-guard-widening",
          "--loop-vectorize",
          "--loop-unroll-and-jam",
          "--partial-inliner",
          "--correlated-propagation",
          "--loop-idiom"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--licm",
      "--early-cse-memssa",
      "--lower-expect",
      "--loop-predication",
      "--strip-nondebug",
      "--inline",
      "--gvn-hoist",
      "--bdce",
      "--loop-deletion",
      "--die",
      "--loop-guard-widening",
      "--loop-vectorize",
      "--loop-unroll-and-jam",
      "--partial-inliner",
      "--correlated-propagation",
      "--loop-idiom"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}