{
  "program_id": "github-v0_22469.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 1,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 4,
    "const64Bit": 7,
    "numConstZeroes": 6,
    "numConstOnes": 5,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 0,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 8,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 4,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 1,
    "TotalInsts": 33,
    "TotalMemInst": 22,
    "TotalFuncs": 1,
    "ArgsPhi": 0,
    "testUnary": 21
  },
  "baseline_oz_instcount": 33,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--early-cse",
    "--early-cse-memssa",
    "--newgvn",
    "--sroa",
    "--mergefunc",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--mem2reg",
    "--prune-eh",
    "--gvn",
    "-loop-reduce",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--cross-dso-cfi",
          "--partial-inliner",
          "--called-value-propagation",
          "--nary-reassociate",
          "--alignment-from-assumptions",
          "--tailcallelim",
          "--lowerinvoke",
          "--dse",
          "--speculative-execution",
          "--loop-guard-widening",
          "--sancov",
          "--canonicalize-aliases",
          "--argpromotion",
          "--jump-threading",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--cross-dso-cfi",
      "--partial-inliner",
      "--called-value-propagation",
      "--nary-reassociate",
      "--alignment-from-assumptions",
      "--tailcallelim",
      "--lowerinvoke",
      "--dse",
      "--speculative-execution",
      "--loop-guard-widening",
      "--sancov",
      "--canonicalize-aliases",
      "--argpromotion",
      "--jump-threading",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+9.1%"
  }
}