{
  "program_id": "github-v0_36395.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 69,
    "onePredOneSuc": 46,
    "onePredTwoSuc": 17,
    "oneSuccessor": 67,
    "twoPred": 26,
    "twoPredOneSuc": 15,
    "twoEach": 9,
    "twoSuccessor": 30,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 108,
    "BeginPhi": 1,
    "BranchCount": 97,
    "returnInt": 12,
    "CriticalCount": 19,
    "NumEdges": 127,
    "const32Bit": 306,
    "const64Bit": 17,
    "numConstZeroes": 162,
    "numConstOnes": 112,
    "UncondBranches": 67,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 59,
    "NumAndInst": 2,
    "BlockMid": 13,
    "BlockLow": 96,
    "NumBitCastInst": 14,
    "NumBrInst": 97,
    "NumCallInst": 72,
    "NumGetElementPtrInst": 137,
    "NumICmpInst": 30,
    "NumLShrInst": 0,
    "NumLoadInst": 258,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 12,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 123,
    "NumSubInst": 4,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 109,
    "TotalInsts": 848,
    "TotalMemInst": 649,
    "TotalFuncs": 25,
    "ArgsPhi": 2,
    "testUnary": 366
  },
  "baseline_oz_instcount": 849,
  "knowledge_base_entry": [
    "--sroa",
    "--ipsccp",
    "--dce",
    "--gvn",
    "--sccp",
    "--instcombine",
    "--newgvn",
    "--slp-vectorizer",
    "--die",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mem2reg",
          "--dce",
          "--reassociate",
          "--hotcoldsplit",
          "--adce",
          "--ee-instrument",
          "--simplifycfg",
          "--lowerinvoke",
          "--add-discriminators",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mem2reg",
      "--dce",
      "--reassociate",
      "--hotcoldsplit",
      "--adce",
      "--ee-instrument",
      "--simplifycfg",
      "--lowerinvoke",
      "--add-discriminators",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}