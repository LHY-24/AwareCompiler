{
  "program_id": "linux-v0_11721.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 49,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 2,
    "oneSuccessor": 49,
    "twoPred": 9,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 9,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 1,
    "BranchCount": 58,
    "returnInt": 12,
    "CriticalCount": 5,
    "NumEdges": 95,
    "const32Bit": 287,
    "const64Bit": 22,
    "numConstZeroes": 151,
    "numConstOnes": 118,
    "UncondBranches": 49,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 80,
    "NumAndInst": 3,
    "BlockMid": 14,
    "BlockLow": 68,
    "NumBitCastInst": 71,
    "NumBrInst": 58,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 83,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 211,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 18,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 115,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 6,
    "NumZExtInst": 4,
    "TotalBlocks": 82,
    "TotalInsts": 736,
    "TotalMemInst": 545,
    "TotalFuncs": 26,
    "ArgsPhi": 2,
    "testUnary": 376
  },
  "baseline_oz_instcount": 736,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--early-cse",
    "--loop-simplifycfg",
    "--jump-threading",
    "--flattencfg",
    "--ipsccp",
    "--die",
    "--loop-instsimplify",
    "--adce",
    "--die",
    "--correlated-propagation",
    "--mergefunc",
    "--loop-instsimplify",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--mergefunc",
          "--correlated-propagation",
          "--loop-data-prefetch",
          "--coro-elide",
          "--gvn",
          "--inline",
          "--loop-unroll-and-jam",
          "--reassociate",
          "--nary-reassociate",
          "--memcpyopt",
          "--indvars",
          "--gvn-hoist",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--mergefunc",
      "--correlated-propagation",
      "--loop-data-prefetch",
      "--coro-elide",
      "--gvn",
      "--inline",
      "--loop-unroll-and-jam",
      "--reassociate",
      "--nary-reassociate",
      "--memcpyopt",
      "--indvars",
      "--gvn-hoist",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}