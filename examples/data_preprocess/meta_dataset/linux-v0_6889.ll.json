{
  "program_id": "linux-v0_6889.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 4,
    "oneSuccessor": 28,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 6,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 52,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 3,
    "CriticalCount": 4,
    "NumEdges": 50,
    "const32Bit": 127,
    "const64Bit": 2,
    "numConstZeroes": 38,
    "numConstOnes": 78,
    "UncondBranches": 28,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 68,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 45,
    "NumBitCastInst": 21,
    "NumBrInst": 34,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 16,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 81,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 75,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 5,
    "NumZExtInst": 5,
    "TotalBlocks": 52,
    "TotalInsts": 356,
    "TotalMemInst": 260,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 181
  },
  "baseline_oz_instcount": 354,
  "knowledge_base_entry": [
    "--gvn",
    "--jump-threading",
    "--adce",
    "--die",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--inline",
    "--instcombine",
    "--mergefunc",
    "--globalopt",
    "--globaldce",
    "--mergefunc",
    "--simplifycfg",
    "-loop-reduce",
    "--mergefunc",
    "--ipsccp",
    "--adce",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--licm",
          "--lower-matrix-intrinsics",
          "--instcombine",
          "--float2int",
          "--speculative-execution",
          "--canonicalize-aliases",
          "--coro-early",
          "--newgvn",
          "--bdce",
          "--lower-widenable-condition",
          "--loop-versioning",
          "--strip",
          "--mergefunc",
          "--loop-distribute",
          "--jump-threading",
          "--globalopt",
          "--reassociate",
          "--dse",
          "--instnamer",
          "--inline",
          "--instsimplify",
          "--mldst-motion",
          "--constmerge",
          "--sancov",
          "--sroa",
          "--forceattrs",
          "--loop-load-elim",
          "--early-cse-memssa",
          "--globalsplit",
          "--loop-sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--licm",
      "--lower-matrix-intrinsics",
      "--instcombine",
      "--float2int",
      "--speculative-execution",
      "--canonicalize-aliases",
      "--coro-early",
      "--newgvn",
      "--bdce",
      "--lower-widenable-condition",
      "--loop-versioning",
      "--strip",
      "--mergefunc",
      "--loop-distribute",
      "--jump-threading",
      "--globalopt",
      "--reassociate",
      "--dse",
      "--instnamer",
      "--inline",
      "--instsimplify",
      "--mldst-motion",
      "--constmerge",
      "--sancov",
      "--sroa",
      "--forceattrs",
      "--loop-load-elim",
      "--early-cse-memssa",
      "--globalsplit",
      "--loop-sink"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}