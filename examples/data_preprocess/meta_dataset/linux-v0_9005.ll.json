{
  "program_id": "linux-v0_9005.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 19,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 1,
    "oneSuccessor": 19,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 1,
    "BranchCount": 24,
    "returnInt": 10,
    "CriticalCount": 1,
    "NumEdges": 38,
    "const32Bit": 152,
    "const64Bit": 18,
    "numConstZeroes": 71,
    "numConstOnes": 37,
    "UncondBranches": 19,
    "binaryConstArg": 58,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 30,
    "NumAndInst": 37,
    "BlockMid": 5,
    "BlockLow": 26,
    "NumBitCastInst": 65,
    "NumBrInst": 24,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 5,
    "NumLShrInst": 7,
    "NumLoadInst": 144,
    "NumMulInst": 0,
    "NumOrInst": 13,
    "NumPHIInst": 1,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 7,
    "NumStoreInst": 60,
    "NumSubInst": 2,
    "NumTruncInst": 21,
    "NumXorInst": 1,
    "NumZExtInst": 13,
    "TotalBlocks": 31,
    "TotalInsts": 514,
    "TotalMemInst": 305,
    "TotalFuncs": 10,
    "ArgsPhi": 2,
    "testUnary": 276
  },
  "baseline_oz_instcount": 514,
  "knowledge_base_entry": [
    "--early-cse",
    "--flattencfg",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--reassociate",
    "--reassociate",
    "--ipsccp",
    "--globaldce",
    "--mergefunc",
    "--sroa",
    "--gvn",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--separate-const-offset-from-gep",
          "--loop-vectorize",
          "--gvn",
          "-loop-reduce",
          "--sccp",
          "--early-cse-memssa",
          "--aggressive-instcombine",
          "--prune-eh",
          "--loop-rotate",
          "--canonicalize-aliases"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--separate-const-offset-from-gep",
      "--loop-vectorize",
      "--gvn",
      "-loop-reduce",
      "--sccp",
      "--early-cse-memssa",
      "--aggressive-instcombine",
      "--prune-eh",
      "--loop-rotate",
      "--canonicalize-aliases"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}