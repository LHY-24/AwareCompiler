{
  "program_id": "linux-v0_6568.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 77,
    "onePredOneSuc": 61,
    "onePredTwoSuc": 16,
    "oneSuccessor": 75,
    "twoPred": 26,
    "twoPredOneSuc": 11,
    "twoEach": 7,
    "twoSuccessor": 31,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 120,
    "BeginPhi": 0,
    "BranchCount": 106,
    "returnInt": 12,
    "CriticalCount": 10,
    "NumEdges": 141,
    "const32Bit": 538,
    "const64Bit": 43,
    "numConstZeroes": 288,
    "numConstOnes": 122,
    "UncondBranches": 75,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 91,
    "NumAndInst": 3,
    "BlockMid": 16,
    "BlockLow": 104,
    "NumBitCastInst": 156,
    "NumBrInst": 106,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 197,
    "NumICmpInst": 33,
    "NumLShrInst": 0,
    "NumLoadInst": 146,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 158,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 6,
    "NumZExtInst": 3,
    "TotalBlocks": 120,
    "TotalInsts": 967,
    "TotalMemInst": 637,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 404
  },
  "baseline_oz_instcount": 964,
  "knowledge_base_entry": [
    "--functionattrs",
    "--adce",
    "--inline",
    "--load-store-vectorizer",
    "--indvars",
    "--gvn",
    "--adce",
    "--mergefunc",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--prune-eh",
    "--mem2reg",
    "--newgvn",
    "--lower-expect",
    "--sccp",
    "--early-cse",
    "--reassociate",
    "--globalopt",
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalsplit",
          "--flattencfg",
          "--ee-instrument",
          "--name-anon-globals",
          "--div-rem-pairs",
          "--coro-split",
          "--prune-eh",
          "--constprop",
          "--mergereturn",
          "--aggressive-instcombine",
          "--memcpyopt",
          "--globalopt",
          "--canonicalize-aliases",
          "--functionattrs",
          "--strip",
          "--forceattrs",
          "--gvn-hoist",
          "--loop-guard-widening",
          "--dse",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalsplit",
      "--flattencfg",
      "--ee-instrument",
      "--name-anon-globals",
      "--div-rem-pairs",
      "--coro-split",
      "--prune-eh",
      "--constprop",
      "--mergereturn",
      "--aggressive-instcombine",
      "--memcpyopt",
      "--globalopt",
      "--canonicalize-aliases",
      "--functionattrs",
      "--strip",
      "--forceattrs",
      "--gvn-hoist",
      "--loop-guard-widening",
      "--dse",
      "--float2int"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}