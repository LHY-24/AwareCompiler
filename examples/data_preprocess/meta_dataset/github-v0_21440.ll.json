{
  "program_id": "github-v0_21440.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 1,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 2,
    "const64Bit": 8,
    "numConstZeroes": 4,
    "numConstOnes": 4,
    "UncondBranches": 0,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 0,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 0,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 1,
    "TotalInsts": 27,
    "TotalMemInst": 3,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 7
  },
  "baseline_oz_instcount": 27,
  "knowledge_base_entry": [
    "--flattencfg",
    "--sroa",
    "--ipsccp",
    "--globaldce",
    "--mergefunc",
    "--bdce",
    "--inline",
    "--prune-eh",
    "--jump-threading",
    "--loop-instsimplify",
    "--dse",
    "--elim-avail-extern",
    "--licm",
    "--elim-avail-extern",
    "--sroa",
    "--newgvn",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--reg2mem",
          "--adce",
          "--loop-vectorize",
          "--sroa",
          "--scalarizer",
          "--dse",
          "--infer-address-spaces",
          "--name-anon-globals",
          "--inferattrs",
          "--alignment-from-assumptions",
          "--loop-simplifycfg",
          "--instnamer",
          "--correlated-propagation",
          "--gvn-hoist",
          "--newgvn",
          "--loop-versioning",
          "--div-rem-pairs",
          "--redundant-dbg-inst-elim",
          "--gvn",
          "--constprop",
          "--cross-dso-cfi",
          "--functionattrs",
          "--partially-inline-libcalls",
          "--dce",
          "--loweratomic",
          "--strip-dead-prototypes"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+22.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--reg2mem",
      "--adce",
      "--loop-vectorize",
      "--sroa",
      "--scalarizer",
      "--dse",
      "--infer-address-spaces",
      "--name-anon-globals",
      "--inferattrs",
      "--alignment-from-assumptions",
      "--loop-simplifycfg",
      "--instnamer",
      "--correlated-propagation",
      "--gvn-hoist",
      "--newgvn",
      "--loop-versioning",
      "--div-rem-pairs",
      "--redundant-dbg-inst-elim",
      "--gvn",
      "--constprop",
      "--cross-dso-cfi",
      "--functionattrs",
      "--partially-inline-libcalls",
      "--dce",
      "--loweratomic",
      "--strip-dead-prototypes"
    ],
    "performance_vs_Oz": "+22.2%"
  }
}