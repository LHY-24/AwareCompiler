{
  "program_id": "linux-v0_6548.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 39,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 7,
    "oneSuccessor": 35,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 14,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 69,
    "BeginPhi": 0,
    "BranchCount": 49,
    "returnInt": 17,
    "CriticalCount": 7,
    "NumEdges": 77,
    "const32Bit": 181,
    "const64Bit": 15,
    "numConstZeroes": 86,
    "numConstOnes": 83,
    "UncondBranches": 35,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 59,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 61,
    "NumBitCastInst": 25,
    "NumBrInst": 49,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 51,
    "NumICmpInst": 16,
    "NumLShrInst": 1,
    "NumLoadInst": 137,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 80,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 4,
    "NumZExtInst": 6,
    "TotalBlocks": 69,
    "TotalInsts": 502,
    "TotalMemInst": 365,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 237
  },
  "baseline_oz_instcount": 502,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--loop-simplifycfg",
    "--lower-expect",
    "--simplifycfg",
    "--correlated-propagation",
    "--gvn-hoist",
    "--gvn",
    "--inline",
    "--sccp",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--constmerge",
          "--loop-idiom",
          "--correlated-propagation",
          "--loop-deletion",
          "--dce",
          "--forceattrs",
          "--cross-dso-cfi",
          "--argpromotion",
          "--slp-vectorizer",
          "--indvars",
          "--constprop",
          "--lower-matrix-intrinsics",
          "--sccp",
          "--ipconstprop",
          "--loop-unswitch",
          "--loop-distribute",
          "--loop-data-prefetch",
          "--rewrite-statepoints-for-gc",
          "--partially-inline-libcalls",
          "--attributor",
          "--mergefunc",
          "--rpo-functionattrs",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--constmerge",
      "--loop-idiom",
      "--correlated-propagation",
      "--loop-deletion",
      "--dce",
      "--forceattrs",
      "--cross-dso-cfi",
      "--argpromotion",
      "--slp-vectorizer",
      "--indvars",
      "--constprop",
      "--lower-matrix-intrinsics",
      "--sccp",
      "--ipconstprop",
      "--loop-unswitch",
      "--loop-distribute",
      "--loop-data-prefetch",
      "--rewrite-statepoints-for-gc",
      "--partially-inline-libcalls",
      "--attributor",
      "--mergefunc",
      "--rpo-functionattrs",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}