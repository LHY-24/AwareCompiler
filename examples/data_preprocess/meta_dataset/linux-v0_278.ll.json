{
  "program_id": "linux-v0_278.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 88,
    "onePredOneSuc": 58,
    "onePredTwoSuc": 29,
    "oneSuccessor": 74,
    "twoPred": 25,
    "twoPredOneSuc": 9,
    "twoEach": 10,
    "twoSuccessor": 49,
    "morePreds": 12,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 139,
    "BeginPhi": 4,
    "BranchCount": 123,
    "returnInt": 11,
    "CriticalCount": 22,
    "NumEdges": 178,
    "const32Bit": 229,
    "const64Bit": 28,
    "numConstZeroes": 76,
    "numConstOnes": 107,
    "UncondBranches": 74,
    "binaryConstArg": 42,
    "NumAShrInst": 2,
    "NumAddInst": 11,
    "NumAllocaInst": 83,
    "NumAndInst": 20,
    "BlockMid": 12,
    "BlockLow": 131,
    "NumBitCastInst": 8,
    "NumBrInst": 123,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 49,
    "NumICmpInst": 48,
    "NumLShrInst": 3,
    "NumLoadInst": 236,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 4,
    "NumRetInst": 18,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 148,
    "NumSubInst": 7,
    "NumTruncInst": 16,
    "NumXorInst": 1,
    "NumZExtInst": 24,
    "TotalBlocks": 143,
    "TotalInsts": 858,
    "TotalMemInst": 548,
    "TotalFuncs": 25,
    "ArgsPhi": 9,
    "testUnary": 380
  },
  "baseline_oz_instcount": 862,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--globalopt",
    "--sccp",
    "--sroa",
    "--nary-reassociate",
    "--instsimplify",
    "--slp-vectorizer",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--always-inline",
          "--slsr",
          "--rpo-functionattrs",
          "--inline",
          "--guard-widening",
          "--loop-data-prefetch",
          "--callsite-splitting",
          "--sccp",
          "--mergefunc",
          "--lower-matrix-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--always-inline",
      "--slsr",
      "--rpo-functionattrs",
      "--inline",
      "--guard-widening",
      "--loop-data-prefetch",
      "--callsite-splitting",
      "--sccp",
      "--mergefunc",
      "--lower-matrix-intrinsics"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}