{
  "program_id": "github-v0_22965.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 25,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 4,
    "oneSuccessor": 24,
    "twoPred": 16,
    "twoPredOneSuc": 3,
    "twoEach": 10,
    "twoSuccessor": 18,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 3,
    "BranchCount": 42,
    "returnInt": 8,
    "CriticalCount": 12,
    "NumEdges": 60,
    "const32Bit": 64,
    "const64Bit": 3,
    "numConstZeroes": 15,
    "numConstOnes": 37,
    "UncondBranches": 24,
    "binaryConstArg": 19,
    "NumAShrInst": 3,
    "NumAddInst": 5,
    "NumAllocaInst": 22,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 44,
    "NumBitCastInst": 0,
    "NumBrInst": 42,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 18,
    "NumLShrInst": 1,
    "NumLoadInst": 78,
    "NumMulInst": 5,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 7,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 52,
    "NumSubInst": 3,
    "NumTruncInst": 11,
    "NumXorInst": 2,
    "NumZExtInst": 11,
    "TotalBlocks": 49,
    "TotalInsts": 297,
    "TotalMemInst": 167,
    "TotalFuncs": 8,
    "ArgsPhi": 6,
    "testUnary": 137
  },
  "baseline_oz_instcount": 297,
  "knowledge_base_entry": [
    "--inferattrs",
    "--gvn",
    "--newgvn",
    "--gvn",
    "--flattencfg",
    "--mergefunc",
    "--gvn-hoist",
    "--newgvn",
    "--correlated-propagation",
    "--dce",
    "--correlated-propagation",
    "--lower-expect",
    "--instcombine",
    "--gvn-hoist",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--jump-threading",
    "--slsr",
    "--gvn",
    "--loop-rotate",
    "--licm",
    "--adce",
    "--bdce",
    "--dse",
    "--aggressive-instcombine",
    "--lower-expect",
    "--newgvn",
    "--mldst-motion",
    "--gvn-hoist",
    "--licm",
    "--early-cse",
    "--ipsccp",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--sroa",
    "--flattencfg",
    "--licm",
    "--gvn-hoist",
    "--ipsccp",
    "--dce",
    "--ipsccp",
    "--instsimplify",
    "--die",
    "--lower-expect",
    "--die",
    "--elim-avail-extern",
    "--newgvn",
    "-loop-reduce",
    "--indvars",
    "--instcombine",
    "--reassociate",
    "--gvn",
    "--flattencfg",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse-memssa",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-guard-intrinsic",
          "--die",
          "--gvn",
          "--speculative-execution",
          "--argpromotion",
          "--always-inline",
          "--rewrite-statepoints-for-gc",
          "--globaldce",
          "--coro-early",
          "--partially-inline-libcalls",
          "--aggressive-instcombine",
          "--reassociate",
          "--lower-expect",
          "--separate-const-offset-from-gep",
          "--loop-load-elim",
          "--jump-threading",
          "--mergereturn",
          "--loop-unswitch",
          "--cross-dso-cfi",
          "--loop-simplifycfg",
          "--coro-elide",
          "--instcombine",
          "--irce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-guard-intrinsic",
      "--die",
      "--gvn",
      "--speculative-execution",
      "--argpromotion",
      "--always-inline",
      "--rewrite-statepoints-for-gc",
      "--globaldce",
      "--coro-early",
      "--partially-inline-libcalls",
      "--aggressive-instcombine",
      "--reassociate",
      "--lower-expect",
      "--separate-const-offset-from-gep",
      "--loop-load-elim",
      "--jump-threading",
      "--mergereturn",
      "--loop-unswitch",
      "--cross-dso-cfi",
      "--loop-simplifycfg",
      "--coro-elide",
      "--instcombine",
      "--irce"
    ],
    "performance_vs_Oz": "+3.0%"
  }
}