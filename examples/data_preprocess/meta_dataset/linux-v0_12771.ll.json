{
  "program_id": "linux-v0_12771.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 51,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 8,
    "oneSuccessor": 44,
    "twoPred": 12,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 23,
    "morePreds": 7,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 87,
    "BeginPhi": 4,
    "BranchCount": 66,
    "returnInt": 27,
    "CriticalCount": 6,
    "NumEdges": 101,
    "const32Bit": 155,
    "const64Bit": 21,
    "numConstZeroes": 39,
    "numConstOnes": 99,
    "UncondBranches": 44,
    "binaryConstArg": 21,
    "NumAShrInst": 3,
    "NumAddInst": 0,
    "NumAllocaInst": 91,
    "NumAndInst": 2,
    "BlockMid": 11,
    "BlockLow": 80,
    "NumBitCastInst": 7,
    "NumBrInst": 66,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 22,
    "NumLShrInst": 1,
    "NumLoadInst": 153,
    "NumMulInst": 4,
    "NumOrInst": 1,
    "NumPHIInst": 4,
    "NumRetInst": 21,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 118,
    "NumSubInst": 5,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 91,
    "TotalInsts": 598,
    "TotalMemInst": 413,
    "TotalFuncs": 28,
    "ArgsPhi": 8,
    "testUnary": 290
  },
  "baseline_oz_instcount": 599,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--gvn-hoist",
    "--loop-deletion",
    "--newgvn",
    "--prune-eh",
    "--loop-simplifycfg",
    "--adce",
    "--inline",
    "--sroa",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-guard-intrinsic",
          "--loop-simplifycfg",
          "--tailcallelim",
          "--elim-avail-extern",
          "--coro-cleanup",
          "--loop-simplify",
          "--partially-inline-libcalls",
          "--instnamer",
          "--flattencfg",
          "--loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-guard-intrinsic",
      "--loop-simplifycfg",
      "--tailcallelim",
      "--elim-avail-extern",
      "--coro-cleanup",
      "--loop-simplify",
      "--partially-inline-libcalls",
      "--instnamer",
      "--flattencfg",
      "--loop-unswitch"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}