{
  "program_id": "linux-v0_3823.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 47,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 13,
    "oneSuccessor": 39,
    "twoPred": 15,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 28,
    "morePreds": 5,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 91,
    "BeginPhi": 3,
    "BranchCount": 67,
    "returnInt": 18,
    "CriticalCount": 23,
    "NumEdges": 95,
    "const32Bit": 221,
    "const64Bit": 17,
    "numConstZeroes": 126,
    "numConstOnes": 75,
    "UncondBranches": 39,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 52,
    "NumAndInst": 9,
    "BlockMid": 7,
    "BlockLow": 87,
    "NumBitCastInst": 26,
    "NumBrInst": 67,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 69,
    "NumICmpInst": 30,
    "NumLShrInst": 2,
    "NumLoadInst": 143,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 3,
    "NumRetInst": 27,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 73,
    "NumSubInst": 2,
    "NumTruncInst": 10,
    "NumXorInst": 9,
    "NumZExtInst": 17,
    "TotalBlocks": 94,
    "TotalInsts": 606,
    "TotalMemInst": 387,
    "TotalFuncs": 35,
    "ArgsPhi": 7,
    "testUnary": 262
  },
  "baseline_oz_instcount": 596,
  "knowledge_base_entry": [
    "--newgvn",
    "-loop-reduce",
    "--jump-threading",
    "--bdce",
    "--early-cse",
    "--loop-fusion",
    "--simplifycfg",
    "--instcombine",
    "--slp-vectorizer",
    "--simplifycfg",
    "--newgvn",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--adce",
    "--ipsccp",
    "--aggressive-instcombine",
    "--inline",
    "--ipsccp",
    "--dce",
    "--mergefunc",
    "--inline",
    "--flattencfg",
    "--licm",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--post-inline-ee-instrument",
          "--irce",
          "--cross-dso-cfi",
          "--gvn",
          "--lower-matrix-intrinsics",
          "--strip-nondebug",
          "--ipsccp",
          "--instnamer",
          "--slsr",
          "--loop-unroll-and-jam",
          "--sccp",
          "--loop-rotate",
          "-loop-reduce",
          "--constmerge",
          "--constprop",
          "--partial-inliner",
          "--loop-idiom",
          "--loop-unswitch",
          "--loop-data-prefetch",
          "--ipconstprop",
          "--loop-interchange",
          "--aggressive-instcombine",
          "--coro-cleanup",
          "--rewrite-statepoints-for-gc",
          "--loop-versioning-licm",
          "--loop-deletion",
          "--loop-simplify",
          "--lower-widenable-condition",
          "--redundant-dbg-inst-elim",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--post-inline-ee-instrument",
      "--irce",
      "--cross-dso-cfi",
      "--gvn",
      "--lower-matrix-intrinsics",
      "--strip-nondebug",
      "--ipsccp",
      "--instnamer",
      "--slsr",
      "--loop-unroll-and-jam",
      "--sccp",
      "--loop-rotate",
      "-loop-reduce",
      "--constmerge",
      "--constprop",
      "--partial-inliner",
      "--loop-idiom",
      "--loop-unswitch",
      "--loop-data-prefetch",
      "--ipconstprop",
      "--loop-interchange",
      "--aggressive-instcombine",
      "--coro-cleanup",
      "--rewrite-statepoints-for-gc",
      "--loop-versioning-licm",
      "--loop-deletion",
      "--loop-simplify",
      "--lower-widenable-condition",
      "--redundant-dbg-inst-elim",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}