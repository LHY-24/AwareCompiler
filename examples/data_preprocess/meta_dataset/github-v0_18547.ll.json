{
  "program_id": "github-v0_18547.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 39,
    "const64Bit": 29,
    "numConstZeroes": 31,
    "numConstOnes": 28,
    "UncondBranches": 11,
    "binaryConstArg": 19,
    "NumAShrInst": 3,
    "NumAddInst": 7,
    "NumAllocaInst": 13,
    "NumAndInst": 4,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 19,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 1,
    "NumZExtInst": 18,
    "TotalBlocks": 21,
    "TotalInsts": 173,
    "TotalMemInst": 91,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 77
  },
  "baseline_oz_instcount": 173,
  "knowledge_base_entry": [
    "--inferattrs",
    "--gvn",
    "--prune-eh",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--instcombine",
    "--simplifycfg",
    "--mergefunc",
    "--lower-expect",
    "--reassociate",
    "--sroa",
    "--mldst-motion",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--dse",
          "--loop-guard-widening",
          "--die",
          "--barrier",
          "--rewrite-statepoints-for-gc",
          "--adce",
          "--sroa",
          "--aggressive-instcombine",
          "--loop-simplify",
          "--bdce",
          "--lowerswitch",
          "--gvn-hoist",
          "--partially-inline-libcalls",
          "--slsr",
          "--prune-eh",
          "--sancov",
          "--loop-idiom",
          "--ee-instrument",
          "--globalsplit",
          "--flattencfg",
          "--strip-debug-declare",
          "--loop-load-elim",
          "--globalopt",
          "--partial-inliner",
          "--jump-threading",
          "--loop-versioning",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--dse",
      "--loop-guard-widening",
      "--die",
      "--barrier",
      "--rewrite-statepoints-for-gc",
      "--adce",
      "--sroa",
      "--aggressive-instcombine",
      "--loop-simplify",
      "--bdce",
      "--lowerswitch",
      "--gvn-hoist",
      "--partially-inline-libcalls",
      "--slsr",
      "--prune-eh",
      "--sancov",
      "--loop-idiom",
      "--ee-instrument",
      "--globalsplit",
      "--flattencfg",
      "--strip-debug-declare",
      "--loop-load-elim",
      "--globalopt",
      "--partial-inliner",
      "--jump-threading",
      "--loop-versioning",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+3.5%"
  }
}