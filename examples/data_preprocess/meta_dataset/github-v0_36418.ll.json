{
  "program_id": "github-v0_36418.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 62,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 20,
    "oneSuccessor": 56,
    "twoPred": 31,
    "twoPredOneSuc": 12,
    "twoEach": 15,
    "twoSuccessor": 40,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 101,
    "BeginPhi": 2,
    "BranchCount": 96,
    "returnInt": 28,
    "CriticalCount": 25,
    "NumEdges": 136,
    "const32Bit": 141,
    "const64Bit": 6,
    "numConstZeroes": 59,
    "numConstOnes": 65,
    "UncondBranches": 56,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 30,
    "NumAllocaInst": 42,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 100,
    "NumBitCastInst": 5,
    "NumBrInst": 96,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 39,
    "NumLShrInst": 0,
    "NumLoadInst": 170,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 7,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 71,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 103,
    "TotalInsts": 559,
    "TotalMemInst": 365,
    "TotalFuncs": 19,
    "ArgsPhi": 4,
    "testUnary": 227
  },
  "baseline_oz_instcount": 551,
  "knowledge_base_entry": [
    "--ipsccp",
    "--gvn",
    "--instcombine",
    "--flattencfg",
    "--globalopt",
    "--globaldce",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--dse",
    "--gvn-hoist",
    "--ipsccp",
    "--nary-reassociate",
    "--instsimplify",
    "--adce",
    "--sroa",
    "--bdce",
    "--simplifycfg",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--inline",
          "--adce",
          "--sancov",
          "--aggressive-instcombine",
          "--argpromotion",
          "--gvn-hoist",
          "--instsimplify",
          "--strip-dead-prototypes",
          "--name-anon-globals",
          "--lower-constant-intrinsics",
          "--functionattrs",
          "--globaldce",
          "--strip",
          "--mergereturn",
          "--newgvn",
          "--ipsccp",
          "--lower-matrix-intrinsics",
          "--bdce",
          "--loop-versioning",
          "--dce",
          "--speculative-execution"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--inline",
      "--adce",
      "--sancov",
      "--aggressive-instcombine",
      "--argpromotion",
      "--gvn-hoist",
      "--instsimplify",
      "--strip-dead-prototypes",
      "--name-anon-globals",
      "--lower-constant-intrinsics",
      "--functionattrs",
      "--globaldce",
      "--strip",
      "--mergereturn",
      "--newgvn",
      "--ipsccp",
      "--lower-matrix-intrinsics",
      "--bdce",
      "--loop-versioning",
      "--dce",
      "--speculative-execution"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}