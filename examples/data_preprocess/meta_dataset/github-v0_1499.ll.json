{
  "program_id": "github-v0_1499.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 47,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 10,
    "oneSuccessor": 51,
    "twoPred": 19,
    "twoPredOneSuc": 10,
    "twoEach": 5,
    "twoSuccessor": 15,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 0,
    "BranchCount": 66,
    "returnInt": 35,
    "CriticalCount": 7,
    "NumEdges": 97,
    "const32Bit": 138,
    "const64Bit": 5,
    "numConstZeroes": 47,
    "numConstOnes": 65,
    "UncondBranches": 51,
    "binaryConstArg": 29,
    "NumAShrInst": 3,
    "NumAddInst": 18,
    "NumAllocaInst": 43,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 67,
    "NumBitCastInst": 8,
    "NumBrInst": 66,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 177,
    "NumMulInst": 5,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 87,
    "NumSubInst": 0,
    "NumTruncInst": 20,
    "NumXorInst": 0,
    "NumZExtInst": 43,
    "TotalBlocks": 76,
    "TotalInsts": 586,
    "TotalMemInst": 391,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 293
  },
  "baseline_oz_instcount": 586,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--globalopt",
    "--early-cse",
    "--loop-reroll",
    "--memcpyopt",
    "--licm",
    "--lower-expect",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--dse",
    "--dce",
    "--early-cse",
    "--loop-rotate",
    "--instsimplify",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn",
          "--separate-const-offset-from-gep",
          "--coro-early",
          "--loop-rotate",
          "--loop-reroll",
          "--simplifycfg",
          "--simple-loop-unswitch",
          "--rpo-functionattrs",
          "--aggressive-instcombine",
          "--globalopt",
          "--partially-inline-libcalls",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn",
      "--separate-const-offset-from-gep",
      "--coro-early",
      "--loop-rotate",
      "--loop-reroll",
      "--simplifycfg",
      "--simple-loop-unswitch",
      "--rpo-functionattrs",
      "--aggressive-instcombine",
      "--globalopt",
      "--partially-inline-libcalls",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+6.1%"
  }
}