{
  "program_id": "linux-v0_4457.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 80,
    "onePredOneSuc": 58,
    "onePredTwoSuc": 22,
    "oneSuccessor": 77,
    "twoPred": 24,
    "twoPredOneSuc": 15,
    "twoEach": 4,
    "twoSuccessor": 30,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 122,
    "BeginPhi": 2,
    "BranchCount": 107,
    "returnInt": 13,
    "CriticalCount": 23,
    "NumEdges": 137,
    "const32Bit": 282,
    "const64Bit": 30,
    "numConstZeroes": 107,
    "numConstOnes": 134,
    "UncondBranches": 77,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 93,
    "NumAndInst": 3,
    "BlockMid": 17,
    "BlockLow": 107,
    "NumBitCastInst": 0,
    "NumBrInst": 107,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 78,
    "NumICmpInst": 34,
    "NumLShrInst": 4,
    "NumLoadInst": 226,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 17,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 115,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 20,
    "NumZExtInst": 20,
    "TotalBlocks": 124,
    "TotalInsts": 777,
    "TotalMemInst": 554,
    "TotalFuncs": 27,
    "ArgsPhi": 4,
    "testUnary": 352
  },
  "baseline_oz_instcount": 771,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--early-cse-memssa",
    "--mergefunc",
    "--gvn-hoist",
    "--globalopt",
    "--aggressive-instcombine",
    "--jump-threading",
    "--loop-deletion",
    "--mem2reg",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-guard-widening",
          "--ipsccp",
          "--strip",
          "--dse",
          "--constmerge",
          "--coro-elide",
          "--always-inline",
          "--mergereturn",
          "--loop-deletion",
          "--licm",
          "--loop-predication",
          "--sancov",
          "--mergefunc",
          "--adce",
          "--loop-versioning",
          "--instnamer",
          "--instsimplify",
          "--partial-inliner",
          "--ipconstprop",
          "--argpromotion",
          "--loop-load-elim",
          "--loop-unswitch",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-guard-widening",
      "--ipsccp",
      "--strip",
      "--dse",
      "--constmerge",
      "--coro-elide",
      "--always-inline",
      "--mergereturn",
      "--loop-deletion",
      "--licm",
      "--loop-predication",
      "--sancov",
      "--mergefunc",
      "--adce",
      "--loop-versioning",
      "--instnamer",
      "--instsimplify",
      "--partial-inliner",
      "--ipconstprop",
      "--argpromotion",
      "--loop-load-elim",
      "--loop-unswitch",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}