{
  "program_id": "linux-v0_5424.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 8,
    "oneSuccessor": 26,
    "twoPred": 11,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 19,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 61,
    "BeginPhi": 0,
    "BranchCount": 45,
    "returnInt": 17,
    "CriticalCount": 14,
    "NumEdges": 69,
    "const32Bit": 85,
    "const64Bit": 5,
    "numConstZeroes": 32,
    "numConstOnes": 43,
    "UncondBranches": 26,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 31,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 58,
    "NumBitCastInst": 13,
    "NumBrInst": 45,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 56,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 61,
    "TotalInsts": 268,
    "TotalMemInst": 173,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 96
  },
  "baseline_oz_instcount": 270,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--globalopt",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--newgvn",
    "--dse",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--globalopt",
          "--callsite-splitting",
          "--loop-deletion",
          "--slp-vectorizer",
          "--strip-nondebug",
          "--rpo-functionattrs",
          "--loop-idiom",
          "--aggressive-instcombine",
          "--pgo-memop-opt",
          "--loop-guard-widening",
          "--loweratomic",
          "--adce",
          "--mldst-motion",
          "--ipsccp",
          "--strip-debug-declare",
          "--gvn-hoist",
          "--tailcallelim",
          "--indvars",
          "--lower-widenable-condition",
          "--mergereturn",
          "--attributor",
          "--sink",
          "--early-cse-memssa",
          "--early-cse",
          "--gvn",
          "--loop-reroll",
          "--post-inline-ee-instrument",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--globalopt",
      "--callsite-splitting",
      "--loop-deletion",
      "--slp-vectorizer",
      "--strip-nondebug",
      "--rpo-functionattrs",
      "--loop-idiom",
      "--aggressive-instcombine",
      "--pgo-memop-opt",
      "--loop-guard-widening",
      "--loweratomic",
      "--adce",
      "--mldst-motion",
      "--ipsccp",
      "--strip-debug-declare",
      "--gvn-hoist",
      "--tailcallelim",
      "--indvars",
      "--lower-widenable-condition",
      "--mergereturn",
      "--attributor",
      "--sink",
      "--early-cse-memssa",
      "--early-cse",
      "--gvn",
      "--loop-reroll",
      "--post-inline-ee-instrument",
      "--bdce"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}