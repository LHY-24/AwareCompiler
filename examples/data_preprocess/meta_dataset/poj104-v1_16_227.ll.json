{
  "program_id": "poj104-v1_16_227.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 0,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 9,
    "CriticalCount": 0,
    "NumEdges": 16,
    "const32Bit": 26,
    "const64Bit": 12,
    "numConstZeroes": 9,
    "numConstOnes": 18,
    "UncondBranches": 8,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 14,
    "NumBitCastInst": 10,
    "NumBrInst": 12,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 19,
    "NumMulInst": 5,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 16,
    "TotalInsts": 107,
    "TotalMemInst": 60,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 39
  },
  "baseline_oz_instcount": 82,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--dse",
    "--licm",
    "--prune-eh",
    "--instsimplify",
    "--loop-simplifycfg",
    "--instsimplify",
    "--sroa",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--instcombine",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--sccp",
    "--dse",
    "--licm",
    "--gvn-hoist",
    "--jump-threading",
    "--slsr",
    "--simplifycfg",
    "--instcombine",
    "--gvn-hoist",
    "--sroa",
    "--dce",
    "--dse",
    "--gvn-hoist",
    "--gvn-hoist",
    "--newgvn",
    "--licm",
    "--sroa",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--instsimplify",
    "--loop-simplifycfg",
    "--instsimplify",
    "--sroa",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--instcombine",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--mldst-motion",
    "--slp-vectorizer",
    "--mldst-motion",
    "--dse",
    "--aggressive-instcombine",
    "--instcombine",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--instcombine",
    "--simplifycfg",
    "--mem2reg",
    "--globalopt",
    "--licm",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--sccp",
    "--dse",
    "--licm",
    "--gvn-hoist",
    "--jump-threading",
    "--slsr",
    "--early-cse-memssa",
    "--adce",
    "--mem2reg",
    "--instcombine",
    "--simplifycfg",
    "--instsimplify",
    "--dce",
    "--sroa",
    "--loop-simplifycfg",
    "--inline",
    "--mergefunc",
    "--gvn",
    "--early-cse",
    "--slsr",
    "--simplifycfg",
    "--instcombine",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--mldst-motion",
    "--slp-vectorizer",
    "--mldst-motion",
    "--dse",
    "--aggressive-instcombine",
    "--instcombine",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--instcombine",
    "--simplifycfg",
    "--mem2reg",
    "--globalopt",
    "--licm",
    "--prune-eh",
    "--instsimplify",
    "--loop-simplifycfg",
    "--instsimplify",
    "--sroa",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--instcombine",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--instsimplify",
    "--loop-simplifycfg",
    "--instsimplify",
    "--sroa",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--instcombine",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--sccp",
    "--dse",
    "--licm",
    "--gvn-hoist",
    "--jump-threading",
    "--slsr",
    "--early-cse-memssa",
    "--adce",
    "--mem2reg",
    "--instcombine",
    "--simplifycfg",
    "--instsimplify",
    "--dce",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-expect",
          "--sroa",
          "--scalarizer",
          "--strip-dead-prototypes",
          "--loop-instsimplify",
          "--div-rem-pairs",
          "--functionattrs",
          "--loop-idiom",
          "--correlated-propagation",
          "--reassociate",
          "--loop-load-elim",
          "--newgvn",
          "--tailcallelim",
          "--sccp",
          "--loop-simplify",
          "--inferattrs",
          "--speculative-execution",
          "--lower-guard-intrinsic",
          "--loop-unswitch",
          "--sink",
          "--mergeicmps",
          "--slsr"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+28.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-expect",
      "--sroa",
      "--scalarizer",
      "--strip-dead-prototypes",
      "--loop-instsimplify",
      "--div-rem-pairs",
      "--functionattrs",
      "--loop-idiom",
      "--correlated-propagation",
      "--reassociate",
      "--loop-load-elim",
      "--newgvn",
      "--tailcallelim",
      "--sccp",
      "--loop-simplify",
      "--inferattrs",
      "--speculative-execution",
      "--lower-guard-intrinsic",
      "--loop-unswitch",
      "--sink",
      "--mergeicmps",
      "--slsr"
    ],
    "performance_vs_Oz": "+28.0%"
  }
}