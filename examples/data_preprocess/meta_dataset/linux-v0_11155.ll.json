{
  "program_id": "linux-v0_11155.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 8,
    "oneSuccessor": 22,
    "twoPred": 9,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 0,
    "BranchCount": 35,
    "returnInt": 8,
    "CriticalCount": 4,
    "NumEdges": 48,
    "const32Bit": 126,
    "const64Bit": 9,
    "numConstZeroes": 60,
    "numConstOnes": 43,
    "UncondBranches": 22,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 29,
    "NumAndInst": 3,
    "BlockMid": 7,
    "BlockLow": 39,
    "NumBitCastInst": 12,
    "NumBrInst": 35,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 87,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 47,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 5,
    "TotalBlocks": 46,
    "TotalInsts": 320,
    "TotalMemInst": 230,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 137
  },
  "baseline_oz_instcount": 320,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--licm",
    "--aggressive-instcombine",
    "--instcombine",
    "-loop-reduce",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--instcombine",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simple-loop-unswitch",
          "--flattencfg",
          "--attributor",
          "--speculative-execution",
          "--loop-predication",
          "--instnamer",
          "--strip",
          "--libcalls-shrinkwrap",
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--rpo-functionattrs",
          "--canonicalize-aliases",
          "--mldst-motion",
          "--simplifycfg",
          "--load-store-vectorizer",
          "--instcombine",
          "--sccp",
          "--loop-unswitch",
          "--strip-nondebug",
          "--slp-vectorizer",
          "--separate-const-offset-from-gep",
          "--constprop",
          "--mergereturn",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simple-loop-unswitch",
      "--flattencfg",
      "--attributor",
      "--speculative-execution",
      "--loop-predication",
      "--instnamer",
      "--strip",
      "--libcalls-shrinkwrap",
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--rpo-functionattrs",
      "--canonicalize-aliases",
      "--mldst-motion",
      "--simplifycfg",
      "--load-store-vectorizer",
      "--instcombine",
      "--sccp",
      "--loop-unswitch",
      "--strip-nondebug",
      "--slp-vectorizer",
      "--separate-const-offset-from-gep",
      "--constprop",
      "--mergereturn",
      "--coro-split"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}