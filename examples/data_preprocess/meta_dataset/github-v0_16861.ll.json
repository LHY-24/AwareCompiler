{
  "program_id": "github-v0_16861.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 6,
    "oneSuccessor": 36,
    "twoPred": 8,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 10,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 51,
    "BeginPhi": 0,
    "BranchCount": 46,
    "returnInt": 14,
    "CriticalCount": 2,
    "NumEdges": 73,
    "const32Bit": 58,
    "const64Bit": 12,
    "numConstZeroes": 19,
    "numConstOnes": 24,
    "UncondBranches": 36,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 49,
    "NumBitCastInst": 0,
    "NumBrInst": 46,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 39,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 51,
    "TotalInsts": 211,
    "TotalMemInst": 127,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 73
  },
  "baseline_oz_instcount": 211,
  "knowledge_base_entry": [
    "--globalopt",
    "--lower-expect",
    "--aggressive-instcombine",
    "--early-cse",
    "--load-store-vectorizer",
    "--early-cse",
    "--loop-reroll",
    "--early-cse-memssa",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--mergeicmps",
          "--prune-eh",
          "--lower-matrix-intrinsics",
          "--instnamer",
          "--insert-gcov-profiling",
          "--aggressive-instcombine",
          "--speculative-execution",
          "--flattencfg",
          "--deadargelim",
          "--simple-loop-unswitch",
          "--early-cse-memssa",
          "--mldst-motion",
          "--indvars",
          "--loop-unroll-and-jam",
          "--ipconstprop",
          "--loop-simplify",
          "--redundant-dbg-inst-elim",
          "--memcpyopt",
          "--sancov",
          "--mem2reg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--mergeicmps",
      "--prune-eh",
      "--lower-matrix-intrinsics",
      "--instnamer",
      "--insert-gcov-profiling",
      "--aggressive-instcombine",
      "--speculative-execution",
      "--flattencfg",
      "--deadargelim",
      "--simple-loop-unswitch",
      "--early-cse-memssa",
      "--mldst-motion",
      "--indvars",
      "--loop-unroll-and-jam",
      "--ipconstprop",
      "--loop-simplify",
      "--redundant-dbg-inst-elim",
      "--memcpyopt",
      "--sancov",
      "--mem2reg"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}