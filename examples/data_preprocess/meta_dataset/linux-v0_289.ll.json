{
  "program_id": "linux-v0_289.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 76,
    "onePredOneSuc": 52,
    "onePredTwoSuc": 22,
    "oneSuccessor": 63,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 1,
    "twoSuccessor": 26,
    "morePreds": 11,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 118,
    "BeginPhi": 0,
    "BranchCount": 89,
    "returnInt": 20,
    "CriticalCount": 9,
    "NumEdges": 141,
    "const32Bit": 256,
    "const64Bit": 24,
    "numConstZeroes": 96,
    "numConstOnes": 101,
    "UncondBranches": 63,
    "binaryConstArg": 21,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 82,
    "NumAndInst": 11,
    "BlockMid": 14,
    "BlockLow": 104,
    "NumBitCastInst": 31,
    "NumBrInst": 89,
    "NumCallInst": 77,
    "NumGetElementPtrInst": 52,
    "NumICmpInst": 25,
    "NumLShrInst": 1,
    "NumLoadInst": 205,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 24,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 127,
    "NumSubInst": 2,
    "NumTruncInst": 14,
    "NumXorInst": 5,
    "NumZExtInst": 7,
    "TotalBlocks": 118,
    "TotalInsts": 790,
    "TotalMemInst": 543,
    "TotalFuncs": 46,
    "ArgsPhi": 0,
    "testUnary": 368
  },
  "baseline_oz_instcount": 790,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--licm",
    "--sccp",
    "--early-cse-memssa",
    "--lower-expect",
    "--dce",
    "--loop-instsimplify",
    "--jump-threading",
    "--loop-reroll",
    "--lower-constant-intrinsics",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergereturn",
          "--lcssa",
          "--elim-avail-extern",
          "--instsimplify",
          "--loop-sink",
          "--loop-unroll",
          "--sancov",
          "--insert-gcov-profiling",
          "--die",
          "--memcpyopt",
          "--cross-dso-cfi",
          "--coro-elide",
          "--globaldce",
          "--lowerinvoke",
          "--instnamer",
          "--nary-reassociate",
          "--lower-expect",
          "--loop-idiom",
          "--licm",
          "--gvn-hoist",
          "--pgo-memop-opt",
          "--loop-instsimplify",
          "--mergefunc",
          "--deadargelim",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergereturn",
      "--lcssa",
      "--elim-avail-extern",
      "--instsimplify",
      "--loop-sink",
      "--loop-unroll",
      "--sancov",
      "--insert-gcov-profiling",
      "--die",
      "--memcpyopt",
      "--cross-dso-cfi",
      "--coro-elide",
      "--globaldce",
      "--lowerinvoke",
      "--instnamer",
      "--nary-reassociate",
      "--lower-expect",
      "--loop-idiom",
      "--licm",
      "--gvn-hoist",
      "--pgo-memop-opt",
      "--loop-instsimplify",
      "--mergefunc",
      "--deadargelim",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}