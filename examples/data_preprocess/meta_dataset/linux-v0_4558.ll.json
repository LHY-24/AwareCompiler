{
  "program_id": "linux-v0_4558.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 36,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 7,
    "oneSuccessor": 33,
    "twoPred": 12,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 17,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 0,
    "BranchCount": 48,
    "returnInt": 16,
    "CriticalCount": 9,
    "NumEdges": 77,
    "const32Bit": 242,
    "const64Bit": 19,
    "numConstZeroes": 104,
    "numConstOnes": 102,
    "UncondBranches": 33,
    "binaryConstArg": 17,
    "NumAShrInst": 2,
    "NumAddInst": 3,
    "NumAllocaInst": 80,
    "NumAndInst": 2,
    "BlockMid": 12,
    "BlockLow": 65,
    "NumBitCastInst": 33,
    "NumBrInst": 48,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 67,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 182,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 120,
    "NumSubInst": 1,
    "NumTruncInst": 9,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 77,
    "TotalInsts": 672,
    "TotalMemInst": 501,
    "TotalFuncs": 40,
    "ArgsPhi": 0,
    "testUnary": 324
  },
  "baseline_oz_instcount": 673,
  "knowledge_base_entry": [
    "--loweratomic",
    "--ipsccp",
    "--loop-instsimplify",
    "--licm",
    "--ipsccp",
    "--gvn",
    "--slp-vectorizer",
    "--jump-threading",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--dse",
    "--instsimplify",
    "--gvn",
    "--lower-expect",
    "--dce",
    "--elim-avail-extern",
    "--flattencfg",
    "--early-cse",
    "--simplifycfg",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--bdce",
          "--aggressive-instcombine",
          "--coro-split",
          "--gvn-hoist",
          "--hotcoldsplit",
          "--slp-vectorizer",
          "--strip-dead-prototypes",
          "--instsimplify",
          "--pgo-memop-opt",
          "--prune-eh",
          "--gvn",
          "--coro-cleanup",
          "--load-store-vectorizer",
          "--ee-instrument",
          "--inferattrs",
          "--inject-tli-mappings",
          "--scalarizer",
          "-loop-reduce",
          "--ipsccp",
          "--loop-versioning-licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--bdce",
      "--aggressive-instcombine",
      "--coro-split",
      "--gvn-hoist",
      "--hotcoldsplit",
      "--slp-vectorizer",
      "--strip-dead-prototypes",
      "--instsimplify",
      "--pgo-memop-opt",
      "--prune-eh",
      "--gvn",
      "--coro-cleanup",
      "--load-store-vectorizer",
      "--ee-instrument",
      "--inferattrs",
      "--inject-tli-mappings",
      "--scalarizer",
      "-loop-reduce",
      "--ipsccp",
      "--loop-versioning-licm"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}