{
  "program_id": "linux-v0_10917.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 38,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 10,
    "oneSuccessor": 33,
    "twoPred": 13,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 19,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 0,
    "BranchCount": 52,
    "returnInt": 10,
    "CriticalCount": 6,
    "NumEdges": 75,
    "const32Bit": 291,
    "const64Bit": 9,
    "numConstZeroes": 115,
    "numConstOnes": 85,
    "UncondBranches": 33,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 64,
    "NumAndInst": 5,
    "BlockMid": 10,
    "BlockLow": 71,
    "NumBitCastInst": 17,
    "NumBrInst": 52,
    "NumCallInst": 61,
    "NumGetElementPtrInst": 77,
    "NumICmpInst": 17,
    "NumLShrInst": 1,
    "NumLoadInst": 196,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 28,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 103,
    "NumSubInst": 0,
    "NumTruncInst": 13,
    "NumXorInst": 4,
    "NumZExtInst": 11,
    "TotalBlocks": 81,
    "TotalInsts": 666,
    "TotalMemInst": 501,
    "TotalFuncs": 37,
    "ArgsPhi": 0,
    "testUnary": 308
  },
  "baseline_oz_instcount": 666,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--instsimplify",
    "--mergefunc",
    "--jump-threading",
    "--slp-vectorizer",
    "--mem2reg",
    "--adce",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip",
          "--loop-interchange",
          "--loweratomic",
          "--hotcoldsplit",
          "--gvn-hoist",
          "--mergefunc",
          "--globalsplit",
          "--loop-instsimplify",
          "--early-cse-memssa",
          "--globalopt",
          "--coro-elide",
          "--lowerinvoke",
          "-loop-reduce",
          "--loop-load-elim",
          "--argpromotion",
          "--loop-unswitch",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip",
      "--loop-interchange",
      "--loweratomic",
      "--hotcoldsplit",
      "--gvn-hoist",
      "--mergefunc",
      "--globalsplit",
      "--loop-instsimplify",
      "--early-cse-memssa",
      "--globalopt",
      "--coro-elide",
      "--lowerinvoke",
      "-loop-reduce",
      "--loop-load-elim",
      "--argpromotion",
      "--loop-unswitch",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}