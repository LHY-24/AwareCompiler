{
  "program_id": "github-v0_20856.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 1,
    "onePred": 3,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 1,
    "BBNoPhi": 8,
    "BeginPhi": 2,
    "BranchCount": 5,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 7,
    "const32Bit": 11,
    "const64Bit": 0,
    "numConstZeroes": 6,
    "numConstOnes": 5,
    "UncondBranches": 3,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 7,
    "NumBitCastInst": 0,
    "NumBrInst": 5,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 3,
    "NumOrInst": 5,
    "NumPHIInst": 5,
    "NumRetInst": 5,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 6,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 10,
    "TotalInsts": 93,
    "TotalMemInst": 23,
    "TotalFuncs": 9,
    "ArgsPhi": 10,
    "testUnary": 27
  },
  "baseline_oz_instcount": 93,
  "knowledge_base_entry": [
    "--indvars",
    "--gvn",
    "--gvn-hoist",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--flattencfg",
    "--inline",
    "--mergefunc",
    "--simplifycfg",
    "--slp-vectorizer",
    "--mergefunc",
    "--jump-threading",
    "--loop-simplifycfg",
    "--flattencfg",
    "--inline",
    "--mergefunc",
    "--simplifycfg",
    "--newgvn",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inject-tli-mappings",
          "--loop-interchange",
          "--deadargelim",
          "--globalsplit",
          "--callsite-splitting",
          "--irce",
          "--early-cse",
          "--mergereturn",
          "--canonicalize-aliases",
          "--loop-idiom",
          "--licm",
          "--dse",
          "--lower-constant-intrinsics",
          "--lcssa",
          "--globaldce",
          "--gvn-hoist",
          "--attributor",
          "--strip-debug-declare",
          "--mem2reg",
          "--coro-early",
          "--redundant-dbg-inst-elim",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inject-tli-mappings",
      "--loop-interchange",
      "--deadargelim",
      "--globalsplit",
      "--callsite-splitting",
      "--irce",
      "--early-cse",
      "--mergereturn",
      "--canonicalize-aliases",
      "--loop-idiom",
      "--licm",
      "--dse",
      "--lower-constant-intrinsics",
      "--lcssa",
      "--globaldce",
      "--gvn-hoist",
      "--attributor",
      "--strip-debug-declare",
      "--mem2reg",
      "--coro-early",
      "--redundant-dbg-inst-elim",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+3.2%"
  }
}