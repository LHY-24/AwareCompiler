{
  "program_id": "github-v0_10865.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 1,
    "onePred": 20,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 4,
    "oneSuccessor": 19,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 2,
    "BranchCount": 31,
    "returnInt": 8,
    "CriticalCount": 4,
    "NumEdges": 43,
    "const32Bit": 72,
    "const64Bit": 48,
    "numConstZeroes": 19,
    "numConstOnes": 39,
    "UncondBranches": 19,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 20,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 38,
    "NumBitCastInst": 127,
    "NumBrInst": 31,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 55,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 16,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 1,
    "TotalBlocks": 47,
    "TotalInsts": 409,
    "TotalMemInst": 204,
    "TotalFuncs": 26,
    "ArgsPhi": 8,
    "testUnary": 209
  },
  "baseline_oz_instcount": 297,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--jump-threading",
    "--mem2reg",
    "--aggressive-instcombine",
    "--globalopt",
    "--ipsccp",
    "--ipsccp",
    "--mergefunc",
    "--gvn",
    "--gvn",
    "--dce",
    "--sroa",
    "--lower-expect",
    "--sccp",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--licm",
    "--newgvn",
    "--instsimplify",
    "--early-cse",
    "--prune-eh",
    "--simplifycfg",
    "--slsr",
    "--early-cse",
    "--slp-vectorizer",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--lower-expect",
    "--bdce",
    "--elim-avail-extern",
    "--globalopt",
    "--ipsccp",
    "--ipsccp",
    "--mergefunc",
    "--gvn",
    "--gvn",
    "--dce",
    "--sroa",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--libcalls-shrinkwrap",
          "--globalsplit",
          "--gvn",
          "--break-crit-edges",
          "--pgo-memop-opt",
          "--sroa",
          "--simplifycfg",
          "--flattencfg",
          "--lower-guard-intrinsic",
          "--lower-expect",
          "--coro-elide",
          "--partially-inline-libcalls",
          "--adce",
          "--loop-vectorize",
          "--redundant-dbg-inst-elim",
          "--elim-avail-extern",
          "--dce",
          "--strip-dead-prototypes"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--libcalls-shrinkwrap",
      "--globalsplit",
      "--gvn",
      "--break-crit-edges",
      "--pgo-memop-opt",
      "--sroa",
      "--simplifycfg",
      "--flattencfg",
      "--lower-guard-intrinsic",
      "--lower-expect",
      "--coro-elide",
      "--partially-inline-libcalls",
      "--adce",
      "--loop-vectorize",
      "--redundant-dbg-inst-elim",
      "--elim-avail-extern",
      "--dce",
      "--strip-dead-prototypes"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}