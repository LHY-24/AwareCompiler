{
  "program_id": "github-v0_42350.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 2,
    "onePred": 4,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 2,
    "oneSuccessor": 4,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 4,
    "BranchCount": 8,
    "returnInt": 4,
    "CriticalCount": 4,
    "NumEdges": 12,
    "const32Bit": 52,
    "const64Bit": 24,
    "numConstZeroes": 37,
    "numConstOnes": 28,
    "UncondBranches": 4,
    "binaryConstArg": 64,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 6,
    "NumBitCastInst": 0,
    "NumBrInst": 8,
    "NumCallInst": 138,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 8,
    "NumRetInst": 5,
    "NumSExtInst": 1,
    "NumSelectInst": 6,
    "NumShlInst": 4,
    "NumStoreInst": 1,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 13,
    "TotalInsts": 372,
    "TotalMemInst": 140,
    "TotalFuncs": 21,
    "ArgsPhi": 16,
    "testUnary": 9
  },
  "baseline_oz_instcount": 372,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse-memssa",
    "--prune-eh",
    "--reassociate",
    "--slsr",
    "--slp-vectorizer",
    "--instcombine",
    "--dse",
    "--ipsccp",
    "--sroa",
    "--inline",
    "--newgvn",
    "--sccp",
    "--lower-expect",
    "--correlated-propagation",
    "--dse",
    "--gvn",
    "--mergefunc",
    "--flattencfg",
    "--mergefunc",
    "-loop-reduce",
    "--sroa",
    "--instcombine",
    "--jump-threading",
    "--bdce",
    "--mergefunc",
    "--slp-vectorizer",
    "--instcombine",
    "--dse",
    "--mem2reg",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slp-vectorizer",
          "--jump-threading",
          "--redundant-dbg-inst-elim",
          "--loweratomic",
          "--attributor",
          "--called-value-propagation",
          "--instcombine",
          "--alignment-from-assumptions",
          "--lowerswitch",
          "--constprop",
          "--separate-const-offset-from-gep",
          "--adce",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slp-vectorizer",
      "--jump-threading",
      "--redundant-dbg-inst-elim",
      "--loweratomic",
      "--attributor",
      "--called-value-propagation",
      "--instcombine",
      "--alignment-from-assumptions",
      "--lowerswitch",
      "--constprop",
      "--separate-const-offset-from-gep",
      "--adce",
      "--dse"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}