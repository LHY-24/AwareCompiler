{
  "program_id": "linux-v0_12281.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 60,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 19,
    "oneSuccessor": 55,
    "twoPred": 21,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 33,
    "morePreds": 11,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 118,
    "BeginPhi": 5,
    "BranchCount": 88,
    "returnInt": 40,
    "CriticalCount": 37,
    "NumEdges": 143,
    "const32Bit": 375,
    "const64Bit": 22,
    "numConstZeroes": 159,
    "numConstOnes": 130,
    "UncondBranches": 55,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 98,
    "NumAndInst": 8,
    "BlockMid": 9,
    "BlockLow": 114,
    "NumBitCastInst": 11,
    "NumBrInst": 88,
    "NumCallInst": 89,
    "NumGetElementPtrInst": 80,
    "NumICmpInst": 39,
    "NumLShrInst": 1,
    "NumLoadInst": 202,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 5,
    "NumRetInst": 31,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 110,
    "NumSubInst": 4,
    "NumTruncInst": 4,
    "NumXorInst": 6,
    "NumZExtInst": 12,
    "TotalBlocks": 123,
    "TotalInsts": 811,
    "TotalMemInst": 579,
    "TotalFuncs": 60,
    "ArgsPhi": 14,
    "testUnary": 332
  },
  "baseline_oz_instcount": 815,
  "knowledge_base_entry": [
    "--dce",
    "--load-store-vectorizer",
    "--inline",
    "--sccp",
    "--bdce",
    "--aggressive-instcombine",
    "--reassociate",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--barrier",
          "--globalopt",
          "--inject-tli-mappings",
          "--elim-avail-extern",
          "--pgo-memop-opt",
          "--loop-data-prefetch",
          "--ipconstprop",
          "--div-rem-pairs",
          "--constprop",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--barrier",
      "--globalopt",
      "--inject-tli-mappings",
      "--elim-avail-extern",
      "--pgo-memop-opt",
      "--loop-data-prefetch",
      "--ipconstprop",
      "--div-rem-pairs",
      "--constprop",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}