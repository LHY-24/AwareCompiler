{
  "program_id": "linux-v0_9002.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 33,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 6,
    "oneSuccessor": 32,
    "twoPred": 11,
    "twoPredOneSuc": 4,
    "twoEach": 1,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 61,
    "BeginPhi": 0,
    "BranchCount": 45,
    "returnInt": 9,
    "CriticalCount": 4,
    "NumEdges": 63,
    "const32Bit": 214,
    "const64Bit": 28,
    "numConstZeroes": 116,
    "numConstOnes": 75,
    "UncondBranches": 32,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 46,
    "NumAndInst": 7,
    "BlockMid": 11,
    "BlockLow": 50,
    "NumBitCastInst": 9,
    "NumBrInst": 45,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 14,
    "NumLShrInst": 3,
    "NumLoadInst": 113,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 3,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 69,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 7,
    "NumZExtInst": 11,
    "TotalBlocks": 61,
    "TotalInsts": 454,
    "TotalMemInst": 332,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 187
  },
  "baseline_oz_instcount": 455,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--newgvn",
    "--slsr",
    "--early-cse-memssa",
    "--instcombine",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--mem2reg",
    "--slp-vectorizer",
    "--mldst-motion",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--early-cse",
    "--adce",
    "--gvn",
    "--mldst-motion",
    "--sroa",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--instcombine",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--mem2reg",
    "--slp-vectorizer",
    "--mldst-motion",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loweratomic",
          "--load-store-vectorizer",
          "--lower-matrix-intrinsics",
          "--mergereturn",
          "--attributor",
          "--functionattrs",
          "--lowerinvoke",
          "--strip-dead-prototypes",
          "--reassociate",
          "--div-rem-pairs",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loweratomic",
      "--load-store-vectorizer",
      "--lower-matrix-intrinsics",
      "--mergereturn",
      "--attributor",
      "--functionattrs",
      "--lowerinvoke",
      "--strip-dead-prototypes",
      "--reassociate",
      "--div-rem-pairs",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}