{
  "program_id": "github-v0_19244.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 64,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 20,
    "oneSuccessor": 54,
    "twoPred": 30,
    "twoPredOneSuc": 7,
    "twoEach": 5,
    "twoSuccessor": 45,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 124,
    "BeginPhi": 0,
    "BranchCount": 99,
    "returnInt": 21,
    "CriticalCount": 29,
    "NumEdges": 144,
    "const32Bit": 302,
    "const64Bit": 2,
    "numConstZeroes": 147,
    "numConstOnes": 104,
    "UncondBranches": 54,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 63,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 122,
    "NumBitCastInst": 9,
    "NumBrInst": 99,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 65,
    "NumICmpInst": 45,
    "NumLShrInst": 0,
    "NumLoadInst": 157,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 90,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 124,
    "TotalInsts": 601,
    "TotalMemInst": 418,
    "TotalFuncs": 42,
    "ArgsPhi": 0,
    "testUnary": 229
  },
  "baseline_oz_instcount": 603,
  "knowledge_base_entry": [
    "--early-cse",
    "--aggressive-instcombine",
    "--jump-threading",
    "--slsr",
    "--newgvn",
    "--sroa",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--ipconstprop",
          "--early-cse",
          "--nary-reassociate",
          "--scalarizer",
          "--rpo-functionattrs",
          "--called-value-propagation",
          "--dse",
          "--loop-unroll-and-jam",
          "--gvn",
          "--loop-distribute",
          "--attributor",
          "--lower-guard-intrinsic",
          "--loweratomic",
          "--coro-early",
          "--strip",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--ipconstprop",
      "--early-cse",
      "--nary-reassociate",
      "--scalarizer",
      "--rpo-functionattrs",
      "--called-value-propagation",
      "--dse",
      "--loop-unroll-and-jam",
      "--gvn",
      "--loop-distribute",
      "--attributor",
      "--lower-guard-intrinsic",
      "--loweratomic",
      "--coro-early",
      "--strip",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}