{
  "program_id": "github-v0_3900.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 123,
    "onePredOneSuc": 65,
    "onePredTwoSuc": 33,
    "oneSuccessor": 76,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 1,
    "twoSuccessor": 43,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 158,
    "BeginPhi": 0,
    "BranchCount": 119,
    "returnInt": 63,
    "CriticalCount": 6,
    "NumEdges": 165,
    "const32Bit": 187,
    "const64Bit": 11,
    "numConstZeroes": 85,
    "numConstOnes": 75,
    "UncondBranches": 76,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 49,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 154,
    "NumBitCastInst": 22,
    "NumBrInst": 119,
    "NumCallInst": 118,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 43,
    "NumLShrInst": 0,
    "NumLoadInst": 152,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 89,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 158,
    "TotalInsts": 664,
    "TotalMemInst": 428,
    "TotalFuncs": 45,
    "ArgsPhi": 0,
    "testUnary": 233
  },
  "baseline_oz_instcount": 662,
  "knowledge_base_entry": [
    "--irce",
    "--jump-threading",
    "--sroa",
    "--loop-deletion",
    "--early-cse",
    "--mergefunc",
    "--instcombine",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--prune-eh",
    "--mem2reg",
    "--bdce",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--mem2reg",
    "--bdce",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--bdce",
    "--instcombine",
    "--ipsccp",
    "--licm",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--lower-expect",
    "--loop-rotate",
    "--inline",
    "--gvn",
    "--inline",
    "--jump-threading",
    "--sroa",
    "--loop-deletion",
    "--early-cse",
    "--prune-eh",
    "--gvn-hoist",
    "--instcombine",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--ipconstprop",
          "--nary-reassociate",
          "--slsr",
          "--loop-reroll",
          "--ipsccp",
          "--guard-widening",
          "--loweratomic",
          "--elim-avail-extern",
          "--globaldce",
          "--partially-inline-libcalls",
          "--called-value-propagation",
          "--loop-guard-widening",
          "--consthoist",
          "--lcssa",
          "--reassociate",
          "--strip-nondebug",
          "--libcalls-shrinkwrap",
          "--prune-eh",
          "--mem2reg",
          "--functionattrs",
          "--instnamer",
          "--always-inline",
          "--lowerinvoke",
          "--bdce",
          "--barrier",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--ipconstprop",
      "--nary-reassociate",
      "--slsr",
      "--loop-reroll",
      "--ipsccp",
      "--guard-widening",
      "--loweratomic",
      "--elim-avail-extern",
      "--globaldce",
      "--partially-inline-libcalls",
      "--called-value-propagation",
      "--loop-guard-widening",
      "--consthoist",
      "--lcssa",
      "--reassociate",
      "--strip-nondebug",
      "--libcalls-shrinkwrap",
      "--prune-eh",
      "--mem2reg",
      "--functionattrs",
      "--instnamer",
      "--always-inline",
      "--lowerinvoke",
      "--bdce",
      "--barrier",
      "--early-cse"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}