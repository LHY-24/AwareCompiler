{
  "program_id": "linux-v0_2496.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 94,
    "onePredOneSuc": 63,
    "onePredTwoSuc": 29,
    "oneSuccessor": 85,
    "twoPred": 29,
    "twoPredOneSuc": 11,
    "twoEach": 7,
    "twoSuccessor": 43,
    "morePreds": 5,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 152,
    "BeginPhi": 3,
    "BranchCount": 128,
    "returnInt": 35,
    "CriticalCount": 23,
    "NumEdges": 171,
    "const32Bit": 271,
    "const64Bit": 52,
    "numConstZeroes": 122,
    "numConstOnes": 173,
    "UncondBranches": 85,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 149,
    "NumAndInst": 1,
    "BlockMid": 14,
    "BlockLow": 141,
    "NumBitCastInst": 36,
    "NumBrInst": 128,
    "NumCallInst": 47,
    "NumGetElementPtrInst": 71,
    "NumICmpInst": 46,
    "NumLShrInst": 0,
    "NumLoadInst": 236,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 27,
    "NumSExtInst": 27,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 186,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 7,
    "NumZExtInst": 8,
    "TotalBlocks": 155,
    "TotalInsts": 996,
    "TotalMemInst": 689,
    "TotalFuncs": 43,
    "ArgsPhi": 6,
    "testUnary": 466
  },
  "baseline_oz_instcount": 996,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--early-cse",
    "-loop-reduce",
    "--slsr",
    "--newgvn",
    "--ipsccp",
    "--jump-threading",
    "--globalopt",
    "--reassociate",
    "--bdce",
    "--instcombine",
    "--prune-eh",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--load-store-vectorizer",
          "--loop-interchange",
          "--div-rem-pairs",
          "--hotcoldsplit",
          "--lowerinvoke",
          "--mergefunc",
          "--instsimplify",
          "--globalopt",
          "--jump-threading",
          "--loop-rotate",
          "--redundant-dbg-inst-elim",
          "--loop-reroll",
          "--strip-nondebug",
          "--loop-instsimplify",
          "--adce",
          "--instnamer",
          "--sroa",
          "--strip-dead-prototypes",
          "--callsite-splitting",
          "--coro-early",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--load-store-vectorizer",
      "--loop-interchange",
      "--div-rem-pairs",
      "--hotcoldsplit",
      "--lowerinvoke",
      "--mergefunc",
      "--instsimplify",
      "--globalopt",
      "--jump-threading",
      "--loop-rotate",
      "--redundant-dbg-inst-elim",
      "--loop-reroll",
      "--strip-nondebug",
      "--loop-instsimplify",
      "--adce",
      "--instnamer",
      "--sroa",
      "--strip-dead-prototypes",
      "--callsite-splitting",
      "--coro-early",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}