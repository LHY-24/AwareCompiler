{
  "program_id": "linux-v0_7390.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 73,
    "onePredOneSuc": 63,
    "onePredTwoSuc": 10,
    "oneSuccessor": 72,
    "twoPred": 21,
    "twoPredOneSuc": 7,
    "twoEach": 3,
    "twoSuccessor": 23,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 131,
    "BeginPhi": 0,
    "BranchCount": 95,
    "returnInt": 26,
    "CriticalCount": 8,
    "NumEdges": 140,
    "const32Bit": 267,
    "const64Bit": 18,
    "numConstZeroes": 63,
    "numConstOnes": 114,
    "UncondBranches": 72,
    "binaryConstArg": 26,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 88,
    "NumAndInst": 6,
    "BlockMid": 7,
    "BlockLow": 124,
    "NumBitCastInst": 18,
    "NumBrInst": 95,
    "NumCallInst": 74,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 25,
    "NumLShrInst": 1,
    "NumLoadInst": 149,
    "NumMulInst": 0,
    "NumOrInst": 15,
    "NumPHIInst": 0,
    "NumRetInst": 34,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 10,
    "NumStoreInst": 151,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 5,
    "NumZExtInst": 14,
    "TotalBlocks": 131,
    "TotalInsts": 731,
    "TotalMemInst": 491,
    "TotalFuncs": 53,
    "ArgsPhi": 0,
    "testUnary": 281
  },
  "baseline_oz_instcount": 731,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--instcombine",
    "--newgvn",
    "--dce",
    "--mergefunc",
    "--gvn",
    "--aggressive-instcombine",
    "--bdce",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--instsimplify",
    "--mergefunc",
    "--jump-threading",
    "--ipsccp",
    "--aggressive-instcombine",
    "--mem2reg",
    "--loop-rotate",
    "--lower-expect",
    "--instsimplify",
    "--slp-vectorizer",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-instsimplify",
          "--loop-versioning",
          "--tailcallelim",
          "--loop-versioning-licm",
          "--ee-instrument",
          "--mldst-motion",
          "--mergefunc",
          "--coro-split",
          "--early-cse",
          "--prune-eh",
          "--gvn",
          "--libcalls-shrinkwrap",
          "--loop-unroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-instsimplify",
      "--loop-versioning",
      "--tailcallelim",
      "--loop-versioning-licm",
      "--ee-instrument",
      "--mldst-motion",
      "--mergefunc",
      "--coro-split",
      "--early-cse",
      "--prune-eh",
      "--gvn",
      "--libcalls-shrinkwrap",
      "--loop-unroll"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}