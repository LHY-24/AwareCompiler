{
  "program_id": "linux-v0_6425.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 77,
    "onePredOneSuc": 60,
    "onePredTwoSuc": 16,
    "oneSuccessor": 73,
    "twoPred": 19,
    "twoPredOneSuc": 5,
    "twoEach": 7,
    "twoSuccessor": 25,
    "morePreds": 9,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 131,
    "BeginPhi": 0,
    "BranchCount": 98,
    "returnInt": 37,
    "CriticalCount": 22,
    "NumEdges": 163,
    "const32Bit": 374,
    "const64Bit": 25,
    "numConstZeroes": 149,
    "numConstOnes": 108,
    "UncondBranches": 73,
    "binaryConstArg": 45,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 70,
    "NumAndInst": 13,
    "BlockMid": 10,
    "BlockLow": 121,
    "NumBitCastInst": 9,
    "NumBrInst": 98,
    "NumCallInst": 69,
    "NumGetElementPtrInst": 89,
    "NumICmpInst": 28,
    "NumLShrInst": 2,
    "NumLoadInst": 219,
    "NumMulInst": 1,
    "NumOrInst": 14,
    "NumPHIInst": 0,
    "NumRetInst": 26,
    "NumSExtInst": 22,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 124,
    "NumSubInst": 2,
    "NumTruncInst": 22,
    "NumXorInst": 6,
    "NumZExtInst": 25,
    "TotalBlocks": 131,
    "TotalInsts": 863,
    "TotalMemInst": 571,
    "TotalFuncs": 52,
    "ArgsPhi": 0,
    "testUnary": 371
  },
  "baseline_oz_instcount": 865,
  "knowledge_base_entry": [
    "--reassociate",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--load-store-vectorizer",
          "--strip-nondebug",
          "--lower-expect",
          "--mergereturn",
          "--speculative-execution",
          "--alignment-from-assumptions",
          "--aggressive-instcombine",
          "--forceattrs",
          "--constprop",
          "--instsimplify",
          "--early-cse-memssa",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--load-store-vectorizer",
      "--strip-nondebug",
      "--lower-expect",
      "--mergereturn",
      "--speculative-execution",
      "--alignment-from-assumptions",
      "--aggressive-instcombine",
      "--forceattrs",
      "--constprop",
      "--instsimplify",
      "--early-cse-memssa",
      "--dse"
    ],
    "performance_vs_Oz": "+3.7%"
  }
}