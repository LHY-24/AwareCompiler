{
  "program_id": "linux-v0_561.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 15,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 1,
    "oneSuccessor": 15,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 2,
    "BranchCount": 20,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 25,
    "const32Bit": 70,
    "const64Bit": 13,
    "numConstZeroes": 16,
    "numConstOnes": 57,
    "UncondBranches": 15,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 36,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 18,
    "NumBitCastInst": 6,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 9,
    "NumLShrInst": 2,
    "NumLoadInst": 67,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 2,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 46,
    "NumSubInst": 5,
    "NumTruncInst": 9,
    "NumXorInst": 6,
    "NumZExtInst": 16,
    "TotalBlocks": 22,
    "TotalInsts": 261,
    "TotalMemInst": 163,
    "TotalFuncs": 4,
    "ArgsPhi": 4,
    "testUnary": 136
  },
  "baseline_oz_instcount": 262,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--simplifycfg",
    "--globalopt",
    "--mergefunc",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--prune-eh",
    "--mem2reg",
    "--die",
    "--early-cse",
    "--inline",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--loop-distribute",
          "--strip-debug-declare",
          "--partial-inliner",
          "--argpromotion",
          "--cross-dso-cfi",
          "--lower-expect",
          "--loop-vectorize",
          "--instcombine",
          "--adce",
          "--loop-unroll-and-jam",
          "--coro-cleanup",
          "--scalarizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--loop-distribute",
      "--strip-debug-declare",
      "--partial-inliner",
      "--argpromotion",
      "--cross-dso-cfi",
      "--lower-expect",
      "--loop-vectorize",
      "--instcombine",
      "--adce",
      "--loop-unroll-and-jam",
      "--coro-cleanup",
      "--scalarizer"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}