{
  "program_id": "linux-v0_4741.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 14,
    "twoPred": 12,
    "twoPredOneSuc": 4,
    "twoEach": 7,
    "twoSuccessor": 12,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 6,
    "CriticalCount": 11,
    "NumEdges": 38,
    "const32Bit": 59,
    "const64Bit": 39,
    "numConstZeroes": 24,
    "numConstOnes": 39,
    "UncondBranches": 14,
    "binaryConstArg": 34,
    "NumAShrInst": 3,
    "NumAddInst": 29,
    "NumAllocaInst": 30,
    "NumAndInst": 12,
    "BlockMid": 7,
    "BlockLow": 26,
    "NumBitCastInst": 15,
    "NumBrInst": 26,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 13,
    "NumLShrInst": 5,
    "NumLoadInst": 95,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 61,
    "NumSubInst": 2,
    "NumTruncInst": 7,
    "NumXorInst": 3,
    "NumZExtInst": 28,
    "TotalBlocks": 33,
    "TotalInsts": 366,
    "TotalMemInst": 205,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 180
  },
  "baseline_oz_instcount": 366,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--licm",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--dse",
    "--dse",
    "--mem2reg",
    "--loop-deletion",
    "--gvn",
    "--early-cse",
    "--mergefunc",
    "--globaldce",
    "--ipsccp",
    "--dce",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--simplifycfg",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "--cross-dso-cfi",
          "--loop-simplifycfg",
          "--loop-reroll",
          "--lowerinvoke",
          "--guard-widening",
          "--strip-nondebug",
          "--partially-inline-libcalls",
          "--loop-idiom",
          "--lower-matrix-intrinsics",
          "--canonicalize-aliases",
          "--strip",
          "--mergereturn",
          "--forceattrs",
          "--sancov",
          "--loweratomic",
          "--instsimplify",
          "--aggressive-instcombine",
          "--lowerswitch",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "--cross-dso-cfi",
      "--loop-simplifycfg",
      "--loop-reroll",
      "--lowerinvoke",
      "--guard-widening",
      "--strip-nondebug",
      "--partially-inline-libcalls",
      "--loop-idiom",
      "--lower-matrix-intrinsics",
      "--canonicalize-aliases",
      "--strip",
      "--mergereturn",
      "--forceattrs",
      "--sancov",
      "--loweratomic",
      "--instsimplify",
      "--aggressive-instcombine",
      "--lowerswitch",
      "--die"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}