{
  "program_id": "github-v0_39806.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 4,
    "oneSuccessor": 17,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 9,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 35,
    "const32Bit": 48,
    "const64Bit": 7,
    "numConstZeroes": 27,
    "numConstOnes": 29,
    "UncondBranches": 17,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 27,
    "NumBitCastInst": 3,
    "NumBrInst": 26,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 73,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 35,
    "NumSubInst": 3,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 31,
    "TotalInsts": 241,
    "TotalMemInst": 153,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 121
  },
  "baseline_oz_instcount": 243,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--adce",
    "--dce",
    "--correlated-propagation",
    "--gvn",
    "--nary-reassociate",
    "--simplifycfg",
    "--slp-vectorizer",
    "--newgvn",
    "--prune-eh",
    "--reassociate",
    "--aggressive-instcombine",
    "--inline",
    "--load-store-vectorizer",
    "--early-cse",
    "--sroa",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--newgvn",
    "--prune-eh",
    "--reassociate",
    "--aggressive-instcombine",
    "--inline",
    "--load-store-vectorizer",
    "--early-cse",
    "--bdce",
    "--simplifycfg",
    "--adce",
    "--gvn",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--loop-interchange",
          "--functionattrs",
          "--loop-versioning-licm",
          "--add-discriminators",
          "--div-rem-pairs",
          "--irce",
          "--aggressive-instcombine",
          "--loop-vectorize",
          "--reassociate",
          "--early-cse",
          "--float2int",
          "--coro-split",
          "--reg2mem",
          "--dce",
          "--redundant-dbg-inst-elim",
          "--lower-guard-intrinsic",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--loop-interchange",
      "--functionattrs",
      "--loop-versioning-licm",
      "--add-discriminators",
      "--div-rem-pairs",
      "--irce",
      "--aggressive-instcombine",
      "--loop-vectorize",
      "--reassociate",
      "--early-cse",
      "--float2int",
      "--coro-split",
      "--reg2mem",
      "--dce",
      "--redundant-dbg-inst-elim",
      "--lower-guard-intrinsic",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}