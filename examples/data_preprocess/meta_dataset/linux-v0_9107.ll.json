{
  "program_id": "linux-v0_9107.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 38,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 13,
    "oneSuccessor": 36,
    "twoPred": 20,
    "twoPredOneSuc": 11,
    "twoEach": 2,
    "twoSuccessor": 24,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 3,
    "BranchCount": 60,
    "returnInt": 23,
    "CriticalCount": 12,
    "NumEdges": 84,
    "const32Bit": 142,
    "const64Bit": 8,
    "numConstZeroes": 49,
    "numConstOnes": 68,
    "UncondBranches": 36,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 58,
    "NumAndInst": 8,
    "BlockMid": 6,
    "BlockLow": 78,
    "NumBitCastInst": 15,
    "NumBrInst": 60,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 25,
    "NumLShrInst": 1,
    "NumLoadInst": 130,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 24,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 82,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 6,
    "NumZExtInst": 10,
    "TotalBlocks": 84,
    "TotalInsts": 525,
    "TotalMemInst": 360,
    "TotalFuncs": 54,
    "ArgsPhi": 6,
    "testUnary": 225
  },
  "baseline_oz_instcount": 525,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--die",
    "--sccp",
    "--sroa",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--licm",
    "--nary-reassociate",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--dse",
    "--aggressive-instcombine",
    "--dse",
    "--mem2reg",
    "--elim-avail-extern",
    "--mem2reg",
    "--prune-eh",
    "--licm",
    "--ipsccp",
    "--aggressive-instcombine",
    "--gvn",
    "--memcpyopt",
    "--early-cse",
    "--aggressive-instcombine",
    "--die",
    "--simplifycfg",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--hotcoldsplit",
          "--loop-interchange",
          "--loop-sink",
          "--aggressive-instcombine",
          "--mem2reg",
          "--deadargelim",
          "--inferattrs",
          "--gvn",
          "--cross-dso-cfi",
          "--loop-fusion",
          "--mergereturn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--hotcoldsplit",
      "--loop-interchange",
      "--loop-sink",
      "--aggressive-instcombine",
      "--mem2reg",
      "--deadargelim",
      "--inferattrs",
      "--gvn",
      "--cross-dso-cfi",
      "--loop-fusion",
      "--mergereturn"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}