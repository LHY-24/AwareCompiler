{
  "program_id": "poj104-v1_35_1375.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 4,
    "oneSuccessor": 25,
    "twoPred": 11,
    "twoPredOneSuc": 3,
    "twoEach": 7,
    "twoSuccessor": 11,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 36,
    "returnInt": 6,
    "CriticalCount": 4,
    "NumEdges": 47,
    "const32Bit": 32,
    "const64Bit": 42,
    "numConstZeroes": 40,
    "numConstOnes": 18,
    "UncondBranches": 25,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 35,
    "NumBitCastInst": 16,
    "NumBrInst": 36,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 53,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 20,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 39,
    "TotalInsts": 226,
    "TotalMemInst": 132,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 98
  },
  "baseline_oz_instcount": 129,
  "knowledge_base_entry": [
    "--loop-fusion",
    "--simplifycfg",
    "--early-cse-memssa",
    "--mem2reg",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--gvn",
    "--globalopt",
    "--newgvn",
    "--elim-avail-extern",
    "--ipsccp",
    "--newgvn",
    "--adce",
    "--sccp",
    "--dce",
    "--dse",
    "--sroa",
    "--early-cse-memssa",
    "--mem2reg",
    "--licm",
    "--early-cse",
    "--instcombine",
    "--mem2reg",
    "--sccp",
    "--sroa",
    "--licm",
    "--jump-threading",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--loop-deletion",
    "--instcombine",
    "--mergefunc",
    "--mem2reg",
    "--ipsccp",
    "--sccp",
    "--dce",
    "--inline",
    "--die",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--correlated-propagation",
    "--instcombine",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--reassociate",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--bdce",
    "--early-cse",
    "--early-cse-memssa",
    "--inline",
    "--memcpyopt",
    "--instcombine",
    "--slsr",
    "--simplifycfg",
    "--dse",
    "--correlated-propagation",
    "--bdce",
    "--instcombine",
    "--die",
    "--jump-threading",
    "--mem2reg",
    "--jump-threading",
    "--aggressive-instcombine",
    "--instcombine",
    "--instsimplify",
    "--dse",
    "--loop-instsimplify",
    "--dce",
    "--mem2reg",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--gvn",
    "--globalopt",
    "--newgvn",
    "--elim-avail-extern",
    "--ipsccp",
    "--newgvn",
    "--adce",
    "--sccp",
    "--dce",
    "--dse",
    "--sroa",
    "--early-cse-memssa",
    "--mem2reg",
    "--licm",
    "--early-cse",
    "--instcombine",
    "--mem2reg",
    "--sccp",
    "--sroa",
    "--licm",
    "--jump-threading",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--loop-deletion",
    "--instcombine",
    "--mergefunc",
    "--mem2reg",
    "--ipsccp",
    "--sccp",
    "--dce",
    "--inline",
    "--die",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalsplit",
          "--lcssa",
          "--gvn",
          "--lower-constant-intrinsics",
          "--globaldce",
          "--early-cse",
          "--coro-early",
          "--load-store-vectorizer",
          "--early-cse-memssa",
          "--rpo-functionattrs",
          "--aggressive-instcombine",
          "--strip-dead-prototypes",
          "--alignment-from-assumptions",
          "--newgvn",
          "--loop-unroll",
          "--correlated-propagation",
          "--globalopt",
          "--elim-avail-extern",
          "--loop-simplify",
          "--loop-data-prefetch",
          "--loop-fusion",
          "--sroa",
          "--callsite-splitting",
          "--inferattrs",
          "--libcalls-shrinkwrap",
          "--infer-address-spaces",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalsplit",
      "--lcssa",
      "--gvn",
      "--lower-constant-intrinsics",
      "--globaldce",
      "--early-cse",
      "--coro-early",
      "--load-store-vectorizer",
      "--early-cse-memssa",
      "--rpo-functionattrs",
      "--aggressive-instcombine",
      "--strip-dead-prototypes",
      "--alignment-from-assumptions",
      "--newgvn",
      "--loop-unroll",
      "--correlated-propagation",
      "--globalopt",
      "--elim-avail-extern",
      "--loop-simplify",
      "--loop-data-prefetch",
      "--loop-fusion",
      "--sroa",
      "--callsite-splitting",
      "--inferattrs",
      "--libcalls-shrinkwrap",
      "--infer-address-spaces",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+8.5%"
  }
}