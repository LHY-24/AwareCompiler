{
  "program_id": "linux-v0_4031.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 30,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 3,
    "oneSuccessor": 29,
    "twoPred": 12,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 65,
    "BeginPhi": 0,
    "BranchCount": 43,
    "returnInt": 9,
    "CriticalCount": 7,
    "NumEdges": 57,
    "const32Bit": 155,
    "const64Bit": 8,
    "numConstZeroes": 56,
    "numConstOnes": 62,
    "UncondBranches": 29,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 55,
    "NumAndInst": 3,
    "BlockMid": 7,
    "BlockLow": 58,
    "NumBitCastInst": 8,
    "NumBrInst": 43,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 117,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 74,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 65,
    "TotalInsts": 437,
    "TotalMemInst": 325,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 189
  },
  "baseline_oz_instcount": 437,
  "knowledge_base_entry": [
    "--sink",
    "--correlated-propagation",
    "--sroa",
    "--indvars",
    "--jump-threading",
    "--mergefunc",
    "--mem2reg",
    "--licm",
    "--adce",
    "--inline",
    "--mldst-motion",
    "--simplifycfg",
    "--prune-eh",
    "--newgvn",
    "--aggressive-instcombine",
    "--die",
    "--dse",
    "--dce",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--dse",
          "--loop-distribute",
          "--loop-guard-widening",
          "--mergefunc",
          "--callsite-splitting",
          "--loop-interchange",
          "-loop-reduce",
          "--globalsplit",
          "--inline",
          "--licm",
          "--alignment-from-assumptions",
          "--instcombine",
          "--aggressive-instcombine",
          "--loop-rotate",
          "--nary-reassociate",
          "--infer-address-spaces",
          "--loop-fusion",
          "--lower-guard-intrinsic",
          "--globaldce",
          "--attributor",
          "--early-cse-memssa",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--dse",
      "--loop-distribute",
      "--loop-guard-widening",
      "--mergefunc",
      "--callsite-splitting",
      "--loop-interchange",
      "-loop-reduce",
      "--globalsplit",
      "--inline",
      "--licm",
      "--alignment-from-assumptions",
      "--instcombine",
      "--aggressive-instcombine",
      "--loop-rotate",
      "--nary-reassociate",
      "--infer-address-spaces",
      "--loop-fusion",
      "--lower-guard-intrinsic",
      "--globaldce",
      "--attributor",
      "--early-cse-memssa",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}