{
  "program_id": "linux-v0_6136.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 35,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 15,
    "oneSuccessor": 28,
    "twoPred": 14,
    "twoPredOneSuc": 7,
    "twoEach": 3,
    "twoSuccessor": 24,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 73,
    "BeginPhi": 2,
    "BranchCount": 52,
    "returnInt": 18,
    "CriticalCount": 15,
    "NumEdges": 76,
    "const32Bit": 349,
    "const64Bit": 61,
    "numConstZeroes": 206,
    "numConstOnes": 78,
    "UncondBranches": 28,
    "binaryConstArg": 12,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 61,
    "NumAndInst": 2,
    "BlockMid": 13,
    "BlockLow": 62,
    "NumBitCastInst": 13,
    "NumBrInst": 52,
    "NumCallInst": 53,
    "NumGetElementPtrInst": 147,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 212,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 23,
    "NumSExtInst": 19,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 96,
    "NumSubInst": 1,
    "NumTruncInst": 13,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 75,
    "TotalInsts": 744,
    "TotalMemInst": 569,
    "TotalFuncs": 37,
    "ArgsPhi": 4,
    "testUnary": 334
  },
  "baseline_oz_instcount": 744,
  "knowledge_base_entry": [
    "--inline",
    "--load-store-vectorizer",
    "--instcombine",
    "--mergefunc",
    "--mem2reg",
    "--instsimplify",
    "--die",
    "--mergefunc",
    "--bdce",
    "--aggressive-instcombine",
    "--bdce",
    "--mem2reg",
    "--aggressive-instcombine",
    "--adce",
    "--gvn",
    "-loop-reduce",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-interchange",
          "--licm",
          "--globalopt",
          "--strip-dead-prototypes",
          "--insert-gcov-profiling",
          "--tailcallelim",
          "--inject-tli-mappings",
          "--ipconstprop",
          "--called-value-propagation",
          "--strip-nondebug",
          "--lower-matrix-intrinsics",
          "--infer-address-spaces",
          "--early-cse",
          "--canonicalize-aliases",
          "--simple-loop-unswitch",
          "--lower-expect",
          "--loop-simplifycfg",
          "--gvn",
          "--instnamer",
          "--attributor",
          "--mergeicmps",
          "--loop-deletion",
          "--sccp",
          "--die",
          "--deadargelim",
          "--mergefunc",
          "--scalarizer",
          "--forceattrs",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-interchange",
      "--licm",
      "--globalopt",
      "--strip-dead-prototypes",
      "--insert-gcov-profiling",
      "--tailcallelim",
      "--inject-tli-mappings",
      "--ipconstprop",
      "--called-value-propagation",
      "--strip-nondebug",
      "--lower-matrix-intrinsics",
      "--infer-address-spaces",
      "--early-cse",
      "--canonicalize-aliases",
      "--simple-loop-unswitch",
      "--lower-expect",
      "--loop-simplifycfg",
      "--gvn",
      "--instnamer",
      "--attributor",
      "--mergeicmps",
      "--loop-deletion",
      "--sccp",
      "--die",
      "--deadargelim",
      "--mergefunc",
      "--scalarizer",
      "--forceattrs",
      "--reassociate"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}