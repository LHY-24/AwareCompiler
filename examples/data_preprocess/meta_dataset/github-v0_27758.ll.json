{
  "program_id": "github-v0_27758.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 4,
    "oneSuccessor": 4,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 7,
    "CriticalCount": 4,
    "NumEdges": 14,
    "const32Bit": 29,
    "const64Bit": 0,
    "numConstZeroes": 6,
    "numConstOnes": 13,
    "UncondBranches": 4,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 8,
    "NumBitCastInst": 0,
    "NumBrInst": 9,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 45,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 11,
    "TotalInsts": 139,
    "TotalMemInst": 86,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 66
  },
  "baseline_oz_instcount": 141,
  "knowledge_base_entry": [
    "--bdce",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--adce",
    "--sccp",
    "--sroa",
    "--newgvn",
    "--instsimplify",
    "--load-store-vectorizer",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--jump-threading",
          "--load-store-vectorizer",
          "--sccp",
          "--name-anon-globals",
          "--loop-unroll-and-jam",
          "--attributor",
          "--instcombine",
          "--loweratomic",
          "--called-value-propagation",
          "--strip-debug-declare",
          "--reassociate",
          "--mem2reg",
          "--mergereturn",
          "--infer-address-spaces"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--jump-threading",
      "--load-store-vectorizer",
      "--sccp",
      "--name-anon-globals",
      "--loop-unroll-and-jam",
      "--attributor",
      "--instcombine",
      "--loweratomic",
      "--called-value-propagation",
      "--strip-debug-declare",
      "--reassociate",
      "--mem2reg",
      "--mergereturn",
      "--infer-address-spaces"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}