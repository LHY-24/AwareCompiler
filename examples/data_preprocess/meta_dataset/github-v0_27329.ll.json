{
  "program_id": "github-v0_27329.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 7,
    "BeginPhi": 0,
    "BranchCount": 6,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 8,
    "const32Bit": 5,
    "const64Bit": 0,
    "numConstZeroes": 2,
    "numConstOnes": 4,
    "UncondBranches": 4,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 3,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 7,
    "NumBitCastInst": 0,
    "NumBrInst": 6,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 7,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 4,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 7,
    "TotalInsts": 26,
    "TotalMemInst": 15,
    "TotalFuncs": 1,
    "ArgsPhi": 0,
    "testUnary": 11
  },
  "baseline_oz_instcount": 27,
  "knowledge_base_entry": [
    "--early-cse",
    "--slsr",
    "--gvn-hoist",
    "--lower-expect",
    "--jump-threading",
    "--mergefunc",
    "--inline",
    "--early-cse-memssa",
    "--sccp",
    "--dse",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--cross-dso-cfi",
          "--constmerge",
          "--forceattrs",
          "--name-anon-globals",
          "--coro-early",
          "--mldst-motion",
          "--insert-gcov-profiling",
          "--strip",
          "--always-inline",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--cross-dso-cfi",
      "--constmerge",
      "--forceattrs",
      "--name-anon-globals",
      "--coro-early",
      "--mldst-motion",
      "--insert-gcov-profiling",
      "--strip",
      "--always-inline",
      "--early-cse"
    ],
    "performance_vs_Oz": "+3.7%"
  }
}