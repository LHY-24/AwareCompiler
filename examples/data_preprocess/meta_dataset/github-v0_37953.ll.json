{
  "program_id": "github-v0_37953.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 0,
    "BranchCount": 5,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 7,
    "const32Bit": 9,
    "const64Bit": 0,
    "numConstZeroes": 3,
    "numConstOnes": 4,
    "UncondBranches": 3,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 6,
    "NumBitCastInst": 0,
    "NumBrInst": 5,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 3,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 5,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 6,
    "TotalInsts": 23,
    "TotalMemInst": 15,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 7
  },
  "baseline_oz_instcount": 24,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--sroa",
    "--memcpyopt",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--simplifycfg",
    "--bdce",
    "--mergefunc",
    "--instcombine",
    "--adce",
    "--correlated-propagation",
    "--nary-reassociate",
    "--ipsccp",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--gvn",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--globalopt",
    "--aggressive-instcombine",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--inferattrs",
          "--elim-avail-extern",
          "--die",
          "--attributor",
          "--ipsccp",
          "--constprop",
          "--slp-vectorizer",
          "--mldst-motion",
          "--inject-tli-mappings",
          "--forceattrs",
          "--loop-vectorize"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--inferattrs",
      "--elim-avail-extern",
      "--die",
      "--attributor",
      "--ipsccp",
      "--constprop",
      "--slp-vectorizer",
      "--mldst-motion",
      "--inject-tli-mappings",
      "--forceattrs",
      "--loop-vectorize"
    ],
    "performance_vs_Oz": "+4.2%"
  }
}