{
  "program_id": "github-v0_40718.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 33,
    "const64Bit": 86,
    "numConstZeroes": 79,
    "numConstOnes": 34,
    "UncondBranches": 15,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 21,
    "NumBitCastInst": 24,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 63,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 56,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 23,
    "TotalBlocks": 27,
    "TotalInsts": 273,
    "TotalMemInst": 175,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 125
  },
  "baseline_oz_instcount": 273,
  "knowledge_base_entry": [
    "--loop-fusion",
    "--early-cse",
    "--dse",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--dse",
    "--loop-simplifycfg",
    "--jump-threading",
    "--instcombine",
    "--gvn",
    "--aggressive-instcombine",
    "--die",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--bdce",
    "--aggressive-instcombine",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--functionattrs",
          "--infer-address-spaces",
          "--dse",
          "--globalopt",
          "--ipsccp",
          "--div-rem-pairs",
          "--licm",
          "--attributor",
          "--strip-dead-prototypes"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--functionattrs",
      "--infer-address-spaces",
      "--dse",
      "--globalopt",
      "--ipsccp",
      "--div-rem-pairs",
      "--licm",
      "--attributor",
      "--strip-dead-prototypes"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}