{
  "program_id": "linux-v0_6918.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 33,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 15,
    "oneSuccessor": 22,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 22,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 0,
    "BranchCount": 44,
    "returnInt": 10,
    "CriticalCount": 11,
    "NumEdges": 66,
    "const32Bit": 94,
    "const64Bit": 9,
    "numConstZeroes": 11,
    "numConstOnes": 40,
    "UncondBranches": 22,
    "binaryConstArg": 30,
    "NumAShrInst": 5,
    "NumAddInst": 8,
    "NumAllocaInst": 20,
    "NumAndInst": 7,
    "BlockMid": 9,
    "BlockLow": 39,
    "NumBitCastInst": 0,
    "NumBrInst": 44,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 89,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 7,
    "NumStoreInst": 66,
    "NumSubInst": 3,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 48,
    "TotalInsts": 351,
    "TotalMemInst": 212,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 143
  },
  "baseline_oz_instcount": 351,
  "knowledge_base_entry": [
    "--ipsccp",
    "--early-cse",
    "--elim-avail-extern",
    "--gvn",
    "--memcpyopt",
    "--newgvn",
    "--instsimplify",
    "--simplifycfg",
    "--die",
    "--early-cse",
    "--jump-threading",
    "--gvn-hoist",
    "--instsimplify",
    "--gvn",
    "--gvn-hoist",
    "--dce",
    "--mem2reg",
    "--sccp",
    "--elim-avail-extern",
    "--bdce",
    "--instcombine",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--tailcallelim",
          "--ipsccp",
          "--coro-split",
          "--mergeicmps",
          "--div-rem-pairs",
          "--dce",
          "--inline",
          "--always-inline",
          "--canonicalize-aliases",
          "--separate-const-offset-from-gep",
          "--pgo-memop-opt",
          "--aggressive-instcombine",
          "--early-cse",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--tailcallelim",
      "--ipsccp",
      "--coro-split",
      "--mergeicmps",
      "--div-rem-pairs",
      "--dce",
      "--inline",
      "--always-inline",
      "--canonicalize-aliases",
      "--separate-const-offset-from-gep",
      "--pgo-memop-opt",
      "--aggressive-instcombine",
      "--early-cse",
      "--instcombine"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}