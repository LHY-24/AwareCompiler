{
  "program_id": "linux-v0_11977.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 58,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 22,
    "oneSuccessor": 50,
    "twoPred": 17,
    "twoPredOneSuc": 11,
    "twoEach": 4,
    "twoSuccessor": 29,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 97,
    "BeginPhi": 0,
    "BranchCount": 79,
    "returnInt": 20,
    "CriticalCount": 17,
    "NumEdges": 108,
    "const32Bit": 187,
    "const64Bit": 31,
    "numConstZeroes": 76,
    "numConstOnes": 98,
    "UncondBranches": 50,
    "binaryConstArg": 44,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 59,
    "NumAndInst": 20,
    "BlockMid": 5,
    "BlockLow": 92,
    "NumBitCastInst": 10,
    "NumBrInst": 79,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 36,
    "NumLShrInst": 7,
    "NumLoadInst": 165,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 83,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 16,
    "NumZExtInst": 16,
    "TotalBlocks": 97,
    "TotalInsts": 622,
    "TotalMemInst": 402,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 266
  },
  "baseline_oz_instcount": 623,
  "knowledge_base_entry": [
    "--flattencfg",
    "--newgvn",
    "--mergefunc",
    "--bdce",
    "--sroa",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slp-vectorizer",
          "--aggressive-instcombine",
          "--loop-versioning",
          "--globalopt",
          "--ipsccp",
          "--partial-inliner",
          "--guard-widening",
          "--jump-threading",
          "--loop-data-prefetch",
          "--loop-unroll-and-jam",
          "--coro-elide",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slp-vectorizer",
      "--aggressive-instcombine",
      "--loop-versioning",
      "--globalopt",
      "--ipsccp",
      "--partial-inliner",
      "--guard-widening",
      "--jump-threading",
      "--loop-data-prefetch",
      "--loop-unroll-and-jam",
      "--coro-elide",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}