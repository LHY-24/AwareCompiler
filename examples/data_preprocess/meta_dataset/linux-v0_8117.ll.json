{
  "program_id": "linux-v0_8117.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 37,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 4,
    "oneSuccessor": 35,
    "twoPred": 10,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 68,
    "BeginPhi": 1,
    "BranchCount": 48,
    "returnInt": 21,
    "CriticalCount": 5,
    "NumEdges": 64,
    "const32Bit": 217,
    "const64Bit": 13,
    "numConstZeroes": 88,
    "numConstOnes": 85,
    "UncondBranches": 35,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 73,
    "NumAndInst": 5,
    "BlockMid": 10,
    "BlockLow": 59,
    "NumBitCastInst": 20,
    "NumBrInst": 48,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 63,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 165,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 97,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 3,
    "NumZExtInst": 6,
    "TotalBlocks": 69,
    "TotalInsts": 583,
    "TotalMemInst": 450,
    "TotalFuncs": 40,
    "ArgsPhi": 2,
    "testUnary": 277
  },
  "baseline_oz_instcount": 583,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--slsr",
    "--indvars",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--mldst-motion",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--jump-threading",
    "--reassociate",
    "--instsimplify",
    "--inline",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--instsimplify",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--prune-eh",
    "--licm",
    "--ipsccp",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rewrite-statepoints-for-gc",
          "--bdce",
          "--coro-early",
          "--speculative-execution",
          "--early-cse-memssa",
          "--loop-interchange",
          "--loop-guard-widening",
          "--float2int",
          "--licm",
          "--gvn-hoist",
          "--cross-dso-cfi",
          "--aggressive-instcombine",
          "--elim-avail-extern",
          "--inline",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rewrite-statepoints-for-gc",
      "--bdce",
      "--coro-early",
      "--speculative-execution",
      "--early-cse-memssa",
      "--loop-interchange",
      "--loop-guard-widening",
      "--float2int",
      "--licm",
      "--gvn-hoist",
      "--cross-dso-cfi",
      "--aggressive-instcombine",
      "--elim-avail-extern",
      "--inline",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}