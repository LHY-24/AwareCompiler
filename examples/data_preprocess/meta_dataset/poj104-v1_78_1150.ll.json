{
  "program_id": "poj104-v1_78_1150.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 41,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 12,
    "oneSuccessor": 34,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 21,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 0,
    "BranchCount": 55,
    "returnInt": 7,
    "CriticalCount": 9,
    "NumEdges": 76,
    "const32Bit": 74,
    "const64Bit": 43,
    "numConstZeroes": 7,
    "numConstOnes": 62,
    "UncondBranches": 34,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 41,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 66,
    "NumBitCastInst": 40,
    "NumBrInst": 55,
    "NumCallInst": 75,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 115,
    "NumMulInst": 4,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 85,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 71,
    "TotalInsts": 479,
    "TotalMemInst": 326,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 200
  },
  "baseline_oz_instcount": 201,
  "knowledge_base_entry": [
    "--mem2reg",
    "--loop-rotate",
    "--elim-avail-extern",
    "--instcombine",
    "--loop-rotate",
    "--gvn",
    "--loop-deletion",
    "--elim-avail-extern",
    "--sroa",
    "--jump-threading",
    "--loop-simplifycfg",
    "--early-cse-memssa",
    "--gvn",
    "--correlated-propagation",
    "--dse",
    "--early-cse",
    "--correlated-propagation",
    "--instcombine",
    "--aggressive-instcombine",
    "--inline",
    "--gvn-hoist",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-reroll",
          "--gvn",
          "--libcalls-shrinkwrap",
          "--coro-cleanup",
          "--reassociate",
          "--rpo-functionattrs",
          "--mergefunc",
          "--elim-avail-extern",
          "--guard-widening",
          "--strip-dead-prototypes",
          "--called-value-propagation",
          "--loop-deletion",
          "--lower-constant-intrinsics",
          "--coro-early",
          "--always-inline",
          "--lower-matrix-intrinsics",
          "--strip",
          "--loop-unroll-and-jam",
          "--pgo-memop-opt",
          "--slp-vectorizer",
          "--sancov",
          "--loop-vectorize",
          "--instcombine",
          "--early-cse-memssa",
          "--canonicalize-aliases",
          "--inline",
          "--prune-eh",
          "--insert-gcov-profiling",
          "--attributor",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+14.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-reroll",
      "--gvn",
      "--libcalls-shrinkwrap",
      "--coro-cleanup",
      "--reassociate",
      "--rpo-functionattrs",
      "--mergefunc",
      "--elim-avail-extern",
      "--guard-widening",
      "--strip-dead-prototypes",
      "--called-value-propagation",
      "--loop-deletion",
      "--lower-constant-intrinsics",
      "--coro-early",
      "--always-inline",
      "--lower-matrix-intrinsics",
      "--strip",
      "--loop-unroll-and-jam",
      "--pgo-memop-opt",
      "--slp-vectorizer",
      "--sancov",
      "--loop-vectorize",
      "--instcombine",
      "--early-cse-memssa",
      "--canonicalize-aliases",
      "--inline",
      "--prune-eh",
      "--insert-gcov-profiling",
      "--attributor",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+14.9%"
  }
}