{
  "program_id": "github-v0_40705.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 38,
    "const64Bit": 80,
    "numConstZeroes": 70,
    "numConstOnes": 33,
    "UncondBranches": 15,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 17,
    "NumAndInst": 1,
    "BlockMid": 7,
    "BlockLow": 20,
    "NumBitCastInst": 20,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 59,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 58,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 32,
    "NumSubInst": 3,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 27,
    "TotalInsts": 258,
    "TotalMemInst": 173,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 113
  },
  "baseline_oz_instcount": 258,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--instcombine",
    "--inline",
    "--bdce",
    "--sccp",
    "--licm",
    "--mergefunc",
    "--flattencfg",
    "--licm",
    "--aggressive-instcombine",
    "--licm",
    "--slp-vectorizer",
    "--adce",
    "--dse",
    "--sroa",
    "--newgvn",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--globalopt",
    "--globaldce",
    "--ipsccp",
    "--newgvn",
    "--early-cse",
    "--mem2reg",
    "--globalopt",
    "--jump-threading",
    "--loop-instsimplify",
    "--gvn",
    "--dce",
    "--aggressive-instcombine",
    "--licm",
    "--slp-vectorizer",
    "--adce",
    "--load-store-vectorizer",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--inline",
          "--loop-unswitch",
          "--memcpyopt",
          "--lower-expect",
          "--sccp",
          "--loop-idiom",
          "--bdce",
          "--post-inline-ee-instrument",
          "--loop-sink",
          "--aggressive-instcombine",
          "--coro-early",
          "--ipsccp",
          "--die",
          "--loop-interchange",
          "--inferattrs",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--inline",
      "--loop-unswitch",
      "--memcpyopt",
      "--lower-expect",
      "--sccp",
      "--loop-idiom",
      "--bdce",
      "--post-inline-ee-instrument",
      "--loop-sink",
      "--aggressive-instcombine",
      "--coro-early",
      "--ipsccp",
      "--die",
      "--loop-interchange",
      "--inferattrs",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}