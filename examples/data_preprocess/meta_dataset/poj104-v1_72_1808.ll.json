{
  "program_id": "poj104-v1_72_1808.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 28,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 4,
    "oneSuccessor": 23,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 5,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 3,
    "CriticalCount": 4,
    "NumEdges": 45,
    "const32Bit": 62,
    "const64Bit": 48,
    "numConstZeroes": 40,
    "numConstOnes": 45,
    "UncondBranches": 23,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 22,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 38,
    "NumBitCastInst": 21,
    "NumBrInst": 34,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 71,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 24,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 4,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 45,
    "TotalInsts": 317,
    "TotalMemInst": 197,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 139
  },
  "baseline_oz_instcount": 123,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--memcpyopt",
    "--instcombine",
    "--mldst-motion",
    "--instsimplify",
    "--lower-expect",
    "--mem2reg",
    "--early-cse-memssa",
    "--early-cse",
    "--aggressive-instcombine",
    "--early-cse",
    "--mem2reg",
    "--load-store-vectorizer",
    "--reassociate",
    "--elim-avail-extern",
    "--flattencfg",
    "--ipsccp",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--dce",
    "--newgvn",
    "--elim-avail-extern",
    "--licm",
    "--jump-threading",
    "--globalopt",
    "--aggressive-instcombine",
    "--instcombine",
    "--inline",
    "--newgvn",
    "--sroa",
    "--inline",
    "--gvn-hoist",
    "--die",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--licm",
    "--mem2reg",
    "--early-cse-memssa",
    "--early-cse",
    "--aggressive-instcombine",
    "--early-cse",
    "--mem2reg",
    "--load-store-vectorizer",
    "--reassociate",
    "--elim-avail-extern",
    "--flattencfg",
    "--ipsccp",
    "--loop-instsimplify",
    "--sccp",
    "--instcombine",
    "--inline",
    "--newgvn",
    "--elim-avail-extern",
    "--licm",
    "--jump-threading",
    "--globalopt",
    "--aggressive-instcombine",
    "--instcombine",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--ipsccp",
    "--aggressive-instcombine",
    "--reassociate",
    "--dce",
    "--early-cse-memssa",
    "--prune-eh",
    "--licm",
    "--mem2reg",
    "--early-cse-memssa",
    "--dce",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--flattencfg",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--licm",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--nary-reassociate",
    "--early-cse",
    "--instcombine",
    "--correlated-propagation",
    "--loop-reroll",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--ipsccp",
    "--aggressive-instcombine",
    "--reassociate",
    "--sccp",
    "--instcombine",
    "--inline",
    "--newgvn",
    "--mem2reg",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-dead-prototypes",
          "--coro-cleanup",
          "--tailcallelim",
          "--globalsplit",
          "--attributor",
          "--inject-tli-mappings",
          "--slp-vectorizer",
          "--redundant-dbg-inst-elim",
          "--newgvn",
          "--loop-vectorize",
          "--canonicalize-aliases",
          "--inferattrs",
          "--loop-reroll",
          "--alignment-from-assumptions",
          "--mldst-motion",
          "--loop-versioning-licm",
          "--dse",
          "--jump-threading",
          "--sancov",
          "--elim-avail-extern",
          "--loop-unswitch",
          "--instsimplify",
          "--dce",
          "--hotcoldsplit",
          "--correlated-propagation",
          "--loop-simplifycfg",
          "--instcombine",
          "--strip-nondebug",
          "--load-store-vectorizer",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+12.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-dead-prototypes",
      "--coro-cleanup",
      "--tailcallelim",
      "--globalsplit",
      "--attributor",
      "--inject-tli-mappings",
      "--slp-vectorizer",
      "--redundant-dbg-inst-elim",
      "--newgvn",
      "--loop-vectorize",
      "--canonicalize-aliases",
      "--inferattrs",
      "--loop-reroll",
      "--alignment-from-assumptions",
      "--mldst-motion",
      "--loop-versioning-licm",
      "--dse",
      "--jump-threading",
      "--sancov",
      "--elim-avail-extern",
      "--loop-unswitch",
      "--instsimplify",
      "--dce",
      "--hotcoldsplit",
      "--correlated-propagation",
      "--loop-simplifycfg",
      "--instcombine",
      "--strip-nondebug",
      "--load-store-vectorizer",
      "--globalopt"
    ],
    "performance_vs_Oz": "+12.2%"
  }
}