{
  "program_id": "github-v0_40756.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 34,
    "const64Bit": 38,
    "numConstZeroes": 40,
    "numConstOnes": 22,
    "UncondBranches": 9,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 13,
    "NumBitCastInst": 8,
    "NumBrInst": 14,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 5,
    "NumLShrInst": 1,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 18,
    "TotalInsts": 136,
    "TotalMemInst": 91,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 52
  },
  "baseline_oz_instcount": 136,
  "knowledge_base_entry": [
    "--licm",
    "--dse",
    "--ipsccp",
    "--dce",
    "--aggressive-instcombine",
    "--early-cse",
    "--loop-deletion",
    "--early-cse-memssa",
    "--licm",
    "--mem2reg",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--die",
          "--lower-widenable-condition",
          "--coro-early",
          "--reassociate",
          "--dce",
          "--consthoist",
          "--instsimplify",
          "--correlated-propagation",
          "--tailcallelim",
          "--strip",
          "--mem2reg",
          "--instnamer",
          "--aggressive-instcombine",
          "--inferattrs",
          "--memcpyopt",
          "--indvars",
          "--callsite-splitting",
          "--guard-widening",
          "--name-anon-globals",
          "--redundant-dbg-inst-elim",
          "--alignment-from-assumptions",
          "--forceattrs",
          "--loop-instsimplify",
          "--flattencfg",
          "--always-inline",
          "--inject-tli-mappings",
          "--loop-reroll",
          "--gvn-hoist",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--die",
      "--lower-widenable-condition",
      "--coro-early",
      "--reassociate",
      "--dce",
      "--consthoist",
      "--instsimplify",
      "--correlated-propagation",
      "--tailcallelim",
      "--strip",
      "--mem2reg",
      "--instnamer",
      "--aggressive-instcombine",
      "--inferattrs",
      "--memcpyopt",
      "--indvars",
      "--callsite-splitting",
      "--guard-widening",
      "--name-anon-globals",
      "--redundant-dbg-inst-elim",
      "--alignment-from-assumptions",
      "--forceattrs",
      "--loop-instsimplify",
      "--flattencfg",
      "--always-inline",
      "--inject-tli-mappings",
      "--loop-reroll",
      "--gvn-hoist",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}