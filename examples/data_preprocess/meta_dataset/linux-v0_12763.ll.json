{
  "program_id": "linux-v0_12763.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 36,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 6,
    "oneSuccessor": 34,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 16,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 3,
    "BranchCount": 50,
    "returnInt": 26,
    "CriticalCount": 10,
    "NumEdges": 70,
    "const32Bit": 227,
    "const64Bit": 21,
    "numConstZeroes": 79,
    "numConstOnes": 111,
    "UncondBranches": 34,
    "binaryConstArg": 24,
    "NumAShrInst": 2,
    "NumAddInst": 7,
    "NumAllocaInst": 84,
    "NumAndInst": 5,
    "BlockMid": 13,
    "BlockLow": 62,
    "NumBitCastInst": 13,
    "NumBrInst": 50,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 58,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 175,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 3,
    "NumRetInst": 24,
    "NumSExtInst": 13,
    "NumSelectInst": 1,
    "NumShlInst": 3,
    "NumStoreInst": 103,
    "NumSubInst": 3,
    "NumTruncInst": 14,
    "NumXorInst": 2,
    "NumZExtInst": 14,
    "TotalBlocks": 75,
    "TotalInsts": 658,
    "TotalMemInst": 470,
    "TotalFuncs": 41,
    "ArgsPhi": 6,
    "testUnary": 317
  },
  "baseline_oz_instcount": 658,
  "knowledge_base_entry": [
    "--loop-unroll",
    "--jump-threading",
    "--ipsccp",
    "--elim-avail-extern",
    "--globalopt",
    "--loweratomic",
    "--globalopt",
    "--aggressive-instcombine",
    "--lower-expect",
    "--instcombine",
    "--instsimplify",
    "--aggressive-instcombine",
    "--instcombine",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--mem2reg",
    "--simplifycfg",
    "--loop-reroll",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--mem2reg",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--lower-expect",
    "--instcombine",
    "--instsimplify",
    "--aggressive-instcombine",
    "--instcombine",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--lower-expect",
    "--adce",
    "--reassociate",
    "--adce",
    "--reassociate",
    "--die",
    "--early-cse-memssa",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--lower-guard-intrinsic",
          "--lowerinvoke",
          "--indvars",
          "--loop-unswitch",
          "--load-store-vectorizer",
          "--loop-rotate",
          "--cross-dso-cfi",
          "--gvn",
          "--add-discriminators",
          "--irce",
          "--guard-widening",
          "--insert-gcov-profiling",
          "--consthoist",
          "--jump-threading",
          "--loop-unroll-and-jam",
          "--inferattrs",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--lower-guard-intrinsic",
      "--lowerinvoke",
      "--indvars",
      "--loop-unswitch",
      "--load-store-vectorizer",
      "--loop-rotate",
      "--cross-dso-cfi",
      "--gvn",
      "--add-discriminators",
      "--irce",
      "--guard-widening",
      "--insert-gcov-profiling",
      "--consthoist",
      "--jump-threading",
      "--loop-unroll-and-jam",
      "--inferattrs",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}