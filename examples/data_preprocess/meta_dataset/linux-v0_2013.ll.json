{
  "program_id": "linux-v0_2013.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 52,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 10,
    "oneSuccessor": 47,
    "twoPred": 16,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 23,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 101,
    "BeginPhi": 1,
    "BranchCount": 70,
    "returnInt": 13,
    "CriticalCount": 10,
    "NumEdges": 103,
    "const32Bit": 322,
    "const64Bit": 35,
    "numConstZeroes": 125,
    "numConstOnes": 119,
    "UncondBranches": 47,
    "binaryConstArg": 42,
    "NumAShrInst": 1,
    "NumAddInst": 4,
    "NumAllocaInst": 93,
    "NumAndInst": 11,
    "BlockMid": 13,
    "BlockLow": 89,
    "NumBitCastInst": 31,
    "NumBrInst": 70,
    "NumCallInst": 71,
    "NumGetElementPtrInst": 100,
    "NumICmpInst": 22,
    "NumLShrInst": 1,
    "NumLoadInst": 261,
    "NumMulInst": 0,
    "NumOrInst": 14,
    "NumPHIInst": 1,
    "NumRetInst": 30,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 8,
    "NumStoreInst": 139,
    "NumSubInst": 4,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 7,
    "TotalBlocks": 102,
    "TotalInsts": 887,
    "TotalMemInst": 664,
    "TotalFuncs": 47,
    "ArgsPhi": 2,
    "testUnary": 406
  },
  "baseline_oz_instcount": 885,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--mergefunc",
    "--mem2reg",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--mem2reg",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--mergefunc",
    "--reassociate",
    "--jump-threading",
    "--gvn",
    "--aggressive-instcombine",
    "--mem2reg",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--dce",
    "--early-cse-memssa",
    "--newgvn",
    "--loop-simplifycfg",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--sccp",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--bdce",
    "--licm",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--speculative-execution",
          "--simplifycfg",
          "--sroa",
          "--barrier",
          "--coro-early",
          "--dse",
          "--lower-matrix-intrinsics",
          "--irce",
          "--aggressive-instcombine",
          "--loop-unroll",
          "--mergefunc",
          "--loop-fusion",
          "--sink",
          "--globalsplit",
          "--ipsccp",
          "--loop-simplify",
          "--constmerge",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--speculative-execution",
      "--simplifycfg",
      "--sroa",
      "--barrier",
      "--coro-early",
      "--dse",
      "--lower-matrix-intrinsics",
      "--irce",
      "--aggressive-instcombine",
      "--loop-unroll",
      "--mergefunc",
      "--loop-fusion",
      "--sink",
      "--globalsplit",
      "--ipsccp",
      "--loop-simplify",
      "--constmerge",
      "--sancov"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}