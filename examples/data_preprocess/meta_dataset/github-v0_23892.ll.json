{
  "program_id": "github-v0_23892.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 41,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 1,
    "oneSuccessor": 41,
    "twoPred": 9,
    "twoPredOneSuc": 1,
    "twoEach": 8,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 52,
    "BeginPhi": 1,
    "BranchCount": 50,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 59,
    "const32Bit": 88,
    "const64Bit": 502,
    "numConstZeroes": 264,
    "numConstOnes": 32,
    "UncondBranches": 41,
    "binaryConstArg": 79,
    "NumAShrInst": 0,
    "NumAddInst": 44,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 10,
    "BlockLow": 43,
    "NumBitCastInst": 9,
    "NumBrInst": 50,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 248,
    "NumICmpInst": 9,
    "NumLShrInst": 32,
    "NumLoadInst": 250,
    "NumMulInst": 0,
    "NumOrInst": 32,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 37,
    "NumStoreInst": 128,
    "NumSubInst": 3,
    "NumTruncInst": 1,
    "NumXorInst": 33,
    "NumZExtInst": 2,
    "TotalBlocks": 53,
    "TotalInsts": 907,
    "TotalMemInst": 651,
    "TotalFuncs": 4,
    "ArgsPhi": 2,
    "testUnary": 278
  },
  "baseline_oz_instcount": 907,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--jump-threading",
    "--gvn",
    "--mem2reg",
    "--dce",
    "--simplifycfg",
    "--loop-rotate",
    "--newgvn",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mldst-motion",
          "--loop-load-elim",
          "--mergefunc",
          "--hotcoldsplit",
          "--elim-avail-extern",
          "--guard-widening",
          "--die",
          "--partial-inliner",
          "--pgo-memop-opt",
          "--lower-matrix-intrinsics",
          "--instsimplify",
          "--loop-versioning",
          "--barrier",
          "--adce",
          "--name-anon-globals",
          "--reassociate",
          "--loop-idiom",
          "--libcalls-shrinkwrap",
          "--post-inline-ee-instrument",
          "--gvn-hoist",
          "--slsr",
          "--callsite-splitting",
          "--strip-debug-declare",
          "--mergereturn",
          "--lowerinvoke",
          "--indvars",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mldst-motion",
      "--loop-load-elim",
      "--mergefunc",
      "--hotcoldsplit",
      "--elim-avail-extern",
      "--guard-widening",
      "--die",
      "--partial-inliner",
      "--pgo-memop-opt",
      "--lower-matrix-intrinsics",
      "--instsimplify",
      "--loop-versioning",
      "--barrier",
      "--adce",
      "--name-anon-globals",
      "--reassociate",
      "--loop-idiom",
      "--libcalls-shrinkwrap",
      "--post-inline-ee-instrument",
      "--gvn-hoist",
      "--slsr",
      "--callsite-splitting",
      "--strip-debug-declare",
      "--mergereturn",
      "--lowerinvoke",
      "--indvars",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}