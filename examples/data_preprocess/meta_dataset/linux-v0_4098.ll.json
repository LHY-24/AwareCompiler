{
  "program_id": "linux-v0_4098.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 44,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 8,
    "oneSuccessor": 40,
    "twoPred": 13,
    "twoPredOneSuc": 3,
    "twoEach": 6,
    "twoSuccessor": 19,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 82,
    "BeginPhi": 1,
    "BranchCount": 59,
    "returnInt": 10,
    "CriticalCount": 7,
    "NumEdges": 88,
    "const32Bit": 238,
    "const64Bit": 12,
    "numConstZeroes": 101,
    "numConstOnes": 104,
    "UncondBranches": 40,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 81,
    "NumAndInst": 4,
    "BlockMid": 11,
    "BlockLow": 72,
    "NumBitCastInst": 29,
    "NumBrInst": 59,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 69,
    "NumICmpInst": 19,
    "NumLShrInst": 1,
    "NumLoadInst": 201,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 22,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 119,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 15,
    "TotalBlocks": 83,
    "TotalInsts": 682,
    "TotalMemInst": 514,
    "TotalFuncs": 35,
    "ArgsPhi": 2,
    "testUnary": 335
  },
  "baseline_oz_instcount": 682,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--ipsccp",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--aggressive-instcombine",
    "--ipsccp",
    "--dce",
    "--reassociate",
    "--mergefunc",
    "--instsimplify",
    "--inline",
    "--sccp",
    "--sroa",
    "--nary-reassociate",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--mldst-motion",
          "--infer-address-spaces",
          "--lower-guard-intrinsic",
          "--loop-reroll",
          "--sancov",
          "--div-rem-pairs",
          "--ipsccp",
          "--flattencfg",
          "--early-cse",
          "--memcpyopt",
          "--coro-split",
          "--loop-deletion",
          "--elim-avail-extern",
          "--gvn",
          "--mergeicmps",
          "--mem2reg",
          "--lcssa",
          "--loop-versioning-licm",
          "--float2int",
          "--jump-threading"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--mldst-motion",
      "--infer-address-spaces",
      "--lower-guard-intrinsic",
      "--loop-reroll",
      "--sancov",
      "--div-rem-pairs",
      "--ipsccp",
      "--flattencfg",
      "--early-cse",
      "--memcpyopt",
      "--coro-split",
      "--loop-deletion",
      "--elim-avail-extern",
      "--gvn",
      "--mergeicmps",
      "--mem2reg",
      "--lcssa",
      "--loop-versioning-licm",
      "--float2int",
      "--jump-threading"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}