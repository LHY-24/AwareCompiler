{
  "program_id": "linux-v0_6285.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 34,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 15,
    "oneSuccessor": 25,
    "twoPred": 12,
    "twoPredOneSuc": 5,
    "twoEach": 5,
    "twoSuccessor": 27,
    "morePreds": 6,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 2,
    "BranchCount": 52,
    "returnInt": 21,
    "CriticalCount": 26,
    "NumEdges": 79,
    "const32Bit": 274,
    "const64Bit": 11,
    "numConstZeroes": 149,
    "numConstOnes": 74,
    "UncondBranches": 25,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 65,
    "NumAndInst": 12,
    "BlockMid": 10,
    "BlockLow": 64,
    "NumBitCastInst": 9,
    "NumBrInst": 52,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 26,
    "NumLShrInst": 1,
    "NumLoadInst": 180,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 22,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 82,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 1,
    "NumZExtInst": 5,
    "TotalBlocks": 74,
    "TotalInsts": 613,
    "TotalMemInst": 469,
    "TotalFuncs": 52,
    "ArgsPhi": 5,
    "testUnary": 269
  },
  "baseline_oz_instcount": 613,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--mergefunc",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--bdce",
    "--die",
    "--elim-avail-extern",
    "--simplifycfg",
    "--dse",
    "--die",
    "--early-cse-memssa",
    "--inline",
    "--instsimplify",
    "--elim-avail-extern",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--strip-debug-declare",
          "--name-anon-globals",
          "--loop-fusion",
          "--loop-versioning",
          "--separate-const-offset-from-gep",
          "--strip",
          "--sancov",
          "--loop-load-elim",
          "--load-store-vectorizer",
          "--pgo-memop-opt",
          "--mergefunc",
          "--infer-address-spaces",
          "--licm",
          "--loop-reroll",
          "--loop-versioning-licm",
          "--called-value-propagation",
          "--loop-simplifycfg",
          "--loop-vectorize",
          "--loop-instsimplify",
          "--speculative-execution",
          "--coro-cleanup",
          "--adce",
          "--deadargelim",
          "--loop-sink",
          "--loop-idiom"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--strip-debug-declare",
      "--name-anon-globals",
      "--loop-fusion",
      "--loop-versioning",
      "--separate-const-offset-from-gep",
      "--strip",
      "--sancov",
      "--loop-load-elim",
      "--load-store-vectorizer",
      "--pgo-memop-opt",
      "--mergefunc",
      "--infer-address-spaces",
      "--licm",
      "--loop-reroll",
      "--loop-versioning-licm",
      "--called-value-propagation",
      "--loop-simplifycfg",
      "--loop-vectorize",
      "--loop-instsimplify",
      "--speculative-execution",
      "--coro-cleanup",
      "--adce",
      "--deadargelim",
      "--loop-sink",
      "--loop-idiom"
    ],
    "performance_vs_Oz": "+3.3%"
  }
}