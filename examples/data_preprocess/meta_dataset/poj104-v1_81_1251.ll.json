{
  "program_id": "poj104-v1_81_1251.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 8,
    "oneSuccessor": 22,
    "twoPred": 9,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 7,
    "CriticalCount": 4,
    "NumEdges": 46,
    "const32Bit": 26,
    "const64Bit": 20,
    "numConstZeroes": 16,
    "numConstOnes": 11,
    "UncondBranches": 22,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 36,
    "NumBitCastInst": 12,
    "NumBrInst": 34,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 37,
    "TotalInsts": 154,
    "TotalMemInst": 81,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 60
  },
  "baseline_oz_instcount": 102,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--early-cse-memssa",
    "--loop-fusion",
    "--gvn-hoist",
    "--newgvn",
    "--loop-simplifycfg",
    "--mergefunc",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--lower-expect",
    "--nary-reassociate",
    "--inline",
    "--adce",
    "--sccp",
    "--instcombine",
    "--loop-reroll",
    "--nary-reassociate",
    "--simplifycfg",
    "--mem2reg",
    "--loop-rotate",
    "--inline",
    "--memcpyopt",
    "--early-cse",
    "--loop-instsimplify",
    "--dce",
    "--mergefunc",
    "--loop-reroll",
    "--gvn-hoist",
    "--flattencfg",
    "--sroa",
    "--bdce",
    "--inline",
    "--instsimplify",
    "--nary-reassociate",
    "--correlated-propagation",
    "--newgvn",
    "--mergefunc",
    "--reassociate",
    "--bdce",
    "--inline",
    "--reassociate",
    "--newgvn",
    "--gvn-hoist",
    "--loop-reroll",
    "--load-store-vectorizer",
    "--slsr",
    "--jump-threading",
    "--simplifycfg",
    "--mem2reg",
    "--loop-rotate",
    "--inline",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--adce",
    "--instcombine",
    "--slp-vectorizer",
    "--mem2reg",
    "--loop-rotate",
    "--early-cse",
    "--memcpyopt",
    "--instcombine",
    "--early-cse",
    "--slsr",
    "--nary-reassociate",
    "--sroa",
    "--mergefunc",
    "--newgvn",
    "--memcpyopt",
    "--instsimplify",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--jump-threading",
    "--early-cse",
    "--indvars",
    "--sroa",
    "--indvars",
    "--jump-threading",
    "--prune-eh",
    "--instsimplify",
    "--load-store-vectorizer",
    "--bdce",
    "--loop-simplifycfg",
    "--dse",
    "--globalopt",
    "--gvn-hoist",
    "--mldst-motion",
    "--early-cse",
    "--loop-rotate",
    "--inline",
    "--memcpyopt",
    "--early-cse",
    "--loop-instsimplify",
    "--dce",
    "--mergefunc",
    "--loop-reroll",
    "--gvn-hoist",
    "--flattencfg",
    "--sroa",
    "--bdce",
    "--inline",
    "--instsimplify",
    "--nary-reassociate",
    "--correlated-propagation",
    "--newgvn",
    "--mergefunc",
    "--reassociate",
    "--bdce",
    "--inline",
    "--reassociate",
    "--newgvn",
    "--gvn-hoist",
    "--loop-reroll",
    "--load-store-vectorizer",
    "--slsr",
    "--jump-threading",
    "--simplifycfg",
    "--mem2reg",
    "--loop-rotate",
    "--inline",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--adce",
    "--instcombine",
    "--slp-vectorizer",
    "--mem2reg",
    "--loop-rotate",
    "--early-cse",
    "--memcpyopt",
    "--instcombine",
    "--early-cse",
    "--slsr",
    "--nary-reassociate",
    "--sroa",
    "--mergefunc",
    "--newgvn",
    "--memcpyopt",
    "--instsimplify",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--jump-threading",
    "--early-cse",
    "--indvars",
    "--sroa",
    "--indvars",
    "--jump-threading",
    "--prune-eh",
    "--instsimplify",
    "--load-store-vectorizer",
    "--bdce",
    "--loop-simplifycfg",
    "--dse",
    "--globalopt",
    "--gvn-hoist",
    "--mldst-motion",
    "--early-cse",
    "--loop-rotate",
    "--lower-expect",
    "--early-cse-memssa",
    "--memcpyopt",
    "--early-cse",
    "--loop-instsimplify",
    "--dce",
    "--mergefunc",
    "--loop-reroll",
    "--gvn-hoist",
    "--flattencfg",
    "--sroa",
    "--bdce",
    "--inline",
    "--instsimplify",
    "--nary-reassociate",
    "--correlated-propagation",
    "--newgvn",
    "--mergefunc",
    "--reassociate",
    "--bdce",
    "--inline",
    "--reassociate",
    "--newgvn",
    "--gvn-hoist",
    "--loop-reroll",
    "--load-store-vectorizer",
    "--slsr",
    "--jump-threading",
    "--simplifycfg",
    "--instcombine",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--loop-unswitch",
          "--forceattrs",
          "--mldst-motion",
          "--newgvn",
          "--gvn-hoist",
          "--loop-unroll",
          "--loop-fusion",
          "--sroa",
          "--indvars",
          "--nary-reassociate",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+28.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--loop-unswitch",
      "--forceattrs",
      "--mldst-motion",
      "--newgvn",
      "--gvn-hoist",
      "--loop-unroll",
      "--loop-fusion",
      "--sroa",
      "--indvars",
      "--nary-reassociate",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+28.4%"
  }
}