{
  "program_id": "linux-v0_4508.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 21,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 4,
    "oneSuccessor": 19,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 9,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 1,
    "BranchCount": 28,
    "returnInt": 9,
    "CriticalCount": 3,
    "NumEdges": 41,
    "const32Bit": 144,
    "const64Bit": 8,
    "numConstZeroes": 58,
    "numConstOnes": 50,
    "UncondBranches": 19,
    "binaryConstArg": 7,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 37,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 38,
    "NumBitCastInst": 5,
    "NumBrInst": 28,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 82,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 61,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 43,
    "TotalInsts": 320,
    "TotalMemInst": 242,
    "TotalFuncs": 22,
    "ArgsPhi": 2,
    "testUnary": 133
  },
  "baseline_oz_instcount": 320,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--loop-reroll",
    "--jump-threading",
    "--reassociate",
    "--prune-eh",
    "--lower-expect",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--reassociate",
    "--sroa",
    "--early-cse",
    "--slsr",
    "-loop-reduce",
    "--early-cse-memssa",
    "--simplifycfg",
    "--ipsccp",
    "--die",
    "--ipsccp",
    "--instcombine",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--reassociate",
    "--ipsccp",
    "--instsimplify",
    "--gvn",
    "--lower-constant-intrinsics",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--bdce",
          "--ipsccp",
          "--post-inline-ee-instrument",
          "--loop-data-prefetch",
          "--loop-versioning-licm",
          "--die",
          "--always-inline",
          "--partial-inliner",
          "--called-value-propagation",
          "--instnamer",
          "--constprop",
          "--lower-matrix-intrinsics",
          "--lower-guard-intrinsic",
          "--loop-distribute",
          "--aggressive-instcombine",
          "--float2int",
          "--loop-load-elim",
          "--loop-unswitch",
          "--jump-threading",
          "--loop-idiom",
          "--flattencfg",
          "--indvars",
          "--loop-unroll",
          "--coro-cleanup"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--bdce",
      "--ipsccp",
      "--post-inline-ee-instrument",
      "--loop-data-prefetch",
      "--loop-versioning-licm",
      "--die",
      "--always-inline",
      "--partial-inliner",
      "--called-value-propagation",
      "--instnamer",
      "--constprop",
      "--lower-matrix-intrinsics",
      "--lower-guard-intrinsic",
      "--loop-distribute",
      "--aggressive-instcombine",
      "--float2int",
      "--loop-load-elim",
      "--loop-unswitch",
      "--jump-threading",
      "--loop-idiom",
      "--flattencfg",
      "--indvars",
      "--loop-unroll",
      "--coro-cleanup"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}