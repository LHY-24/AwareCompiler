{
  "program_id": "linux-v0_11672.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 10,
    "oneSuccessor": 25,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 1,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 13,
    "CriticalCount": 9,
    "NumEdges": 59,
    "const32Bit": 104,
    "const64Bit": 16,
    "numConstZeroes": 44,
    "numConstOnes": 44,
    "UncondBranches": 25,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 29,
    "NumAndInst": 2,
    "BlockMid": 3,
    "BlockLow": 47,
    "NumBitCastInst": 4,
    "NumBrInst": 38,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 81,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 5,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 48,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 5,
    "TotalBlocks": 50,
    "TotalInsts": 309,
    "TotalMemInst": 203,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 136
  },
  "baseline_oz_instcount": 309,
  "knowledge_base_entry": [
    "--functionattrs",
    "--adce",
    "--lower-expect",
    "--aggressive-instcombine",
    "--inline",
    "--ipsccp",
    "--elim-avail-extern",
    "--bdce",
    "--reassociate",
    "--prune-eh",
    "--licm",
    "--die",
    "--newgvn",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--loop-simplifycfg",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--forceattrs",
          "--loop-idiom",
          "--mergefunc",
          "--strip-dead-prototypes",
          "--bdce",
          "--pgo-memop-opt",
          "--called-value-propagation",
          "--sancov",
          "--instnamer",
          "--speculative-execution",
          "--scalarizer",
          "--lower-widenable-condition",
          "--guard-widening",
          "--load-store-vectorizer",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--forceattrs",
      "--loop-idiom",
      "--mergefunc",
      "--strip-dead-prototypes",
      "--bdce",
      "--pgo-memop-opt",
      "--called-value-propagation",
      "--sancov",
      "--instnamer",
      "--speculative-execution",
      "--scalarizer",
      "--lower-widenable-condition",
      "--guard-widening",
      "--load-store-vectorizer",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}