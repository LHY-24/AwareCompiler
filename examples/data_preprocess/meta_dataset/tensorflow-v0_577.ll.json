{
  "program_id": "tensorflow-v0_577.ll",
  "autophase_features": {
    "BBNumArgsHi": 6,
    "BBNumArgsLo": 15,
    "onePred": 79,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 50,
    "oneSuccessor": 36,
    "twoPred": 30,
    "twoPredOneSuc": 5,
    "twoEach": 18,
    "twoSuccessor": 74,
    "morePreds": 5,
    "BB03Phi": 21,
    "BBHiPhi": 0,
    "BBNoPhi": 100,
    "BeginPhi": 21,
    "BranchCount": 65,
    "returnInt": 0,
    "CriticalCount": 69,
    "NumEdges": 184,
    "const32Bit": 199,
    "const64Bit": 178,
    "numConstZeroes": 234,
    "numConstOnes": 63,
    "UncondBranches": 36,
    "binaryConstArg": 47,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 5,
    "NumAndInst": 18,
    "BlockMid": 8,
    "BlockLow": 113,
    "NumBitCastInst": 36,
    "NumBrInst": 65,
    "NumCallInst": 80,
    "NumGetElementPtrInst": 86,
    "NumICmpInst": 37,
    "NumLShrInst": 14,
    "NumLoadInst": 75,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 35,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 10,
    "NumShlInst": 1,
    "NumStoreInst": 57,
    "NumSubInst": 4,
    "NumTruncInst": 16,
    "NumXorInst": 11,
    "NumZExtInst": 17,
    "TotalBlocks": 121,
    "TotalInsts": 667,
    "TotalMemInst": 348,
    "TotalFuncs": 21,
    "ArgsPhi": 72,
    "testUnary": 169
  },
  "baseline_oz_instcount": 645,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--loop-simplifycfg",
    "--adce",
    "--die",
    "--reassociate",
    "--bdce",
    "--simplifycfg",
    "--jump-threading",
    "--slsr",
    "--load-store-vectorizer",
    "--instcombine",
    "--globalopt",
    "--globaldce",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--bdce",
    "--sccp",
    "--early-cse-memssa",
    "--inline",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--mergefunc",
    "--memcpyopt",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unswitch",
          "--constmerge",
          "--instcombine",
          "--slp-vectorizer",
          "--loop-simplifycfg",
          "--infer-address-spaces",
          "--mem2reg",
          "--nary-reassociate",
          "--slsr",
          "--memcpyopt",
          "--pgo-memop-opt",
          "--loop-predication",
          "--mergefunc",
          "--globaldce",
          "--sroa",
          "--lcssa",
          "--mldst-motion",
          "--dce",
          "--redundant-dbg-inst-elim",
          "--dse",
          "--globalsplit",
          "--elim-avail-extern",
          "--prune-eh",
          "--simplifycfg",
          "--load-store-vectorizer",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unswitch",
      "--constmerge",
      "--instcombine",
      "--slp-vectorizer",
      "--loop-simplifycfg",
      "--infer-address-spaces",
      "--mem2reg",
      "--nary-reassociate",
      "--slsr",
      "--memcpyopt",
      "--pgo-memop-opt",
      "--loop-predication",
      "--mergefunc",
      "--globaldce",
      "--sroa",
      "--lcssa",
      "--mldst-motion",
      "--dce",
      "--redundant-dbg-inst-elim",
      "--dse",
      "--globalsplit",
      "--elim-avail-extern",
      "--prune-eh",
      "--simplifycfg",
      "--load-store-vectorizer",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+4.2%"
  }
}