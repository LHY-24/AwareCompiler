{
  "program_id": "linux-v0_10972.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 10,
    "oneSuccessor": 42,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 11,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 70,
    "BeginPhi": 0,
    "BranchCount": 53,
    "returnInt": 10,
    "CriticalCount": 7,
    "NumEdges": 64,
    "const32Bit": 353,
    "const64Bit": 40,
    "numConstZeroes": 159,
    "numConstOnes": 129,
    "UncondBranches": 42,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 95,
    "NumAndInst": 3,
    "BlockMid": 20,
    "BlockLow": 50,
    "NumBitCastInst": 24,
    "NumBrInst": 53,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 143,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 223,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 106,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 6,
    "NumZExtInst": 8,
    "TotalBlocks": 70,
    "TotalInsts": 760,
    "TotalMemInst": 618,
    "TotalFuncs": 42,
    "ArgsPhi": 0,
    "testUnary": 364
  },
  "baseline_oz_instcount": 760,
  "knowledge_base_entry": [
    "--newgvn",
    "--aggressive-instcombine",
    "--mem2reg",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--sccp",
    "--dse",
    "--loop-rotate",
    "--jump-threading",
    "--licm",
    "--sroa",
    "--adce",
    "--simplifycfg",
    "--early-cse-memssa",
    "--sccp",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--slsr",
    "--newgvn",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--hotcoldsplit",
          "--loweratomic",
          "--coro-split",
          "--redundant-dbg-inst-elim",
          "--speculative-execution",
          "--constprop",
          "--loop-guard-widening",
          "--aggressive-instcombine",
          "--sccp",
          "--post-inline-ee-instrument",
          "--lower-expect",
          "--instsimplify",
          "--loop-load-elim",
          "--simplifycfg",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--hotcoldsplit",
      "--loweratomic",
      "--coro-split",
      "--redundant-dbg-inst-elim",
      "--speculative-execution",
      "--constprop",
      "--loop-guard-widening",
      "--aggressive-instcombine",
      "--sccp",
      "--post-inline-ee-instrument",
      "--lower-expect",
      "--instsimplify",
      "--loop-load-elim",
      "--simplifycfg",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}