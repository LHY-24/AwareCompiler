{
  "program_id": "opencv-v0_30.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 27,
    "onePred": 103,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 66,
    "oneSuccessor": 62,
    "twoPred": 14,
    "twoPredOneSuc": 13,
    "twoEach": 1,
    "twoSuccessor": 70,
    "morePreds": 18,
    "BB03Phi": 30,
    "BBHiPhi": 0,
    "BBNoPhi": 107,
    "BeginPhi": 30,
    "BranchCount": 132,
    "returnInt": 33,
    "CriticalCount": 52,
    "NumEdges": 217,
    "const32Bit": 140,
    "const64Bit": 72,
    "numConstZeroes": 58,
    "numConstOnes": 41,
    "UncondBranches": 62,
    "binaryConstArg": 24,
    "NumAShrInst": 4,
    "NumAddInst": 0,
    "NumAllocaInst": 14,
    "NumAndInst": 38,
    "BlockMid": 2,
    "BlockLow": 135,
    "NumBitCastInst": 49,
    "NumBrInst": 132,
    "NumCallInst": 68,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 73,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 30,
    "NumRetInst": 2,
    "NumSExtInst": 1,
    "NumSelectInst": 2,
    "NumShlInst": 4,
    "NumStoreInst": 36,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 137,
    "TotalInsts": 569,
    "TotalMemInst": 178,
    "TotalFuncs": 31,
    "ArgsPhi": 110,
    "testUnary": 123
  },
  "baseline_oz_instcount": 565,
  "knowledge_base_entry": [
    "--reg2mem",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--newgvn",
    "--nary-reassociate",
    "--lower-expect",
    "--nary-reassociate",
    "--gvn",
    "--mldst-motion",
    "--early-cse",
    "--memcpyopt",
    "--instsimplify",
    "--loop-reroll",
    "--newgvn",
    "--instcombine",
    "--memcpyopt",
    "--instsimplify",
    "--dce",
    "--mem2reg",
    "--globalopt",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--early-cse",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--simplifycfg",
    "--mem2reg",
    "--ipsccp",
    "--mergefunc",
    "--early-cse",
    "--loop-deletion",
    "--sroa",
    "--loop-reroll",
    "--newgvn",
    "--instcombine",
    "--mldst-motion",
    "--jump-threading",
    "--lower-expect",
    "--gvn-hoist",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--break-crit-edges",
          "--globaldce",
          "--sroa",
          "--separate-const-offset-from-gep",
          "--loop-rotate",
          "--loop-versioning",
          "--lower-guard-intrinsic",
          "--insert-gcov-profiling",
          "--lcssa",
          "--loop-sink",
          "--slp-vectorizer",
          "--loweratomic",
          "--loop-guard-widening",
          "--instcombine",
          "--add-discriminators",
          "--early-cse-memssa",
          "--simplifycfg",
          "--inject-tli-mappings",
          "--die",
          "--inferattrs",
          "--consthoist",
          "--jump-threading",
          "--partially-inline-libcalls",
          "--sccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--break-crit-edges",
      "--globaldce",
      "--sroa",
      "--separate-const-offset-from-gep",
      "--loop-rotate",
      "--loop-versioning",
      "--lower-guard-intrinsic",
      "--insert-gcov-profiling",
      "--lcssa",
      "--loop-sink",
      "--slp-vectorizer",
      "--loweratomic",
      "--loop-guard-widening",
      "--instcombine",
      "--add-discriminators",
      "--early-cse-memssa",
      "--simplifycfg",
      "--inject-tli-mappings",
      "--die",
      "--inferattrs",
      "--consthoist",
      "--jump-threading",
      "--partially-inline-libcalls",
      "--sccp"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}