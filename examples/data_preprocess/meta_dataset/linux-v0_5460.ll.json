{
  "program_id": "linux-v0_5460.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 7,
    "oneSuccessor": 28,
    "twoPred": 14,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 16,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 0,
    "BranchCount": 44,
    "returnInt": 32,
    "CriticalCount": 11,
    "NumEdges": 60,
    "const32Bit": 306,
    "const64Bit": 71,
    "numConstZeroes": 205,
    "numConstOnes": 83,
    "UncondBranches": 28,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 53,
    "NumAndInst": 8,
    "BlockMid": 11,
    "BlockLow": 53,
    "NumBitCastInst": 13,
    "NumBrInst": 44,
    "NumCallInst": 58,
    "NumGetElementPtrInst": 129,
    "NumICmpInst": 21,
    "NumLShrInst": 4,
    "NumLoadInst": 189,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 82,
    "NumSubInst": 1,
    "NumTruncInst": 10,
    "NumXorInst": 10,
    "NumZExtInst": 26,
    "TotalBlocks": 64,
    "TotalInsts": 681,
    "TotalMemInst": 511,
    "TotalFuncs": 37,
    "ArgsPhi": 0,
    "testUnary": 300
  },
  "baseline_oz_instcount": 681,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--slsr",
    "--jump-threading",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--loop-versioning",
          "--deadargelim",
          "--aggressive-instcombine",
          "--libcalls-shrinkwrap",
          "--licm",
          "--lcssa",
          "--loop-rotate",
          "--infer-address-spaces",
          "--callsite-splitting",
          "--tailcallelim",
          "--called-value-propagation",
          "--dse",
          "--attributor",
          "--early-cse-memssa",
          "--sccp",
          "--loop-data-prefetch",
          "--guard-widening",
          "--load-store-vectorizer",
          "--strip-debug-declare",
          "--lower-expect",
          "--loop-distribute",
          "--instsimplify",
          "--lowerswitch",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--loop-versioning",
      "--deadargelim",
      "--aggressive-instcombine",
      "--libcalls-shrinkwrap",
      "--licm",
      "--lcssa",
      "--loop-rotate",
      "--infer-address-spaces",
      "--callsite-splitting",
      "--tailcallelim",
      "--called-value-propagation",
      "--dse",
      "--attributor",
      "--early-cse-memssa",
      "--sccp",
      "--loop-data-prefetch",
      "--guard-widening",
      "--load-store-vectorizer",
      "--strip-debug-declare",
      "--lower-expect",
      "--loop-distribute",
      "--instsimplify",
      "--lowerswitch",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}