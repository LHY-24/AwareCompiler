{
  "program_id": "github-v0_44452.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 12,
    "onePred": 95,
    "onePredOneSuc": 55,
    "onePredTwoSuc": 40,
    "oneSuccessor": 82,
    "twoPred": 51,
    "twoPredOneSuc": 24,
    "twoEach": 22,
    "twoSuccessor": 69,
    "morePreds": 5,
    "BB03Phi": 13,
    "BBHiPhi": 0,
    "BBNoPhi": 143,
    "BeginPhi": 13,
    "BranchCount": 151,
    "returnInt": 13,
    "CriticalCount": 49,
    "NumEdges": 220,
    "const32Bit": 188,
    "const64Bit": 39,
    "numConstZeroes": 90,
    "numConstOnes": 77,
    "UncondBranches": 82,
    "binaryConstArg": 69,
    "NumAShrInst": 0,
    "NumAddInst": 27,
    "NumAllocaInst": 25,
    "NumAndInst": 11,
    "BlockMid": 12,
    "BlockLow": 144,
    "NumBitCastInst": 0,
    "NumBrInst": 151,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 73,
    "NumICmpInst": 69,
    "NumLShrInst": 1,
    "NumLoadInst": 280,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 13,
    "NumRetInst": 5,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 132,
    "NumSubInst": 36,
    "NumTruncInst": 19,
    "NumXorInst": 9,
    "NumZExtInst": 94,
    "TotalBlocks": 156,
    "TotalInsts": 986,
    "TotalMemInst": 531,
    "TotalFuncs": 10,
    "ArgsPhi": 33,
    "testUnary": 430
  },
  "baseline_oz_instcount": 992,
  "knowledge_base_entry": [
    "--inferattrs",
    "--instcombine",
    "--aggressive-instcombine",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--slsr",
          "--ipsccp",
          "--attributor",
          "--loop-data-prefetch",
          "--forceattrs",
          "--add-discriminators",
          "--newgvn",
          "--strip-dead-prototypes",
          "--indvars",
          "--coro-elide",
          "--sroa",
          "--loop-guard-widening",
          "--inline",
          "--float2int",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--slsr",
      "--ipsccp",
      "--attributor",
      "--loop-data-prefetch",
      "--forceattrs",
      "--add-discriminators",
      "--newgvn",
      "--strip-dead-prototypes",
      "--indvars",
      "--coro-elide",
      "--sroa",
      "--loop-guard-widening",
      "--inline",
      "--float2int",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}