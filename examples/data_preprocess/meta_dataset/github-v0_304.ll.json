{
  "program_id": "github-v0_304.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 2,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 17,
    "const32Bit": 370,
    "const64Bit": 38,
    "numConstZeroes": 216,
    "numConstOnes": 48,
    "UncondBranches": 9,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 29,
    "NumAndInst": 1,
    "BlockMid": 11,
    "BlockLow": 12,
    "NumBitCastInst": 21,
    "NumBrInst": 13,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 166,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 234,
    "NumMulInst": 5,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 116,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 23,
    "TotalInsts": 649,
    "TotalMemInst": 579,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 296
  },
  "baseline_oz_instcount": 649,
  "knowledge_base_entry": [
    "--instcombine",
    "--jump-threading",
    "--early-cse",
    "--aggressive-instcombine",
    "--adce",
    "--gvn",
    "--correlated-propagation",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--licm",
    "--die",
    "--lower-expect",
    "--loop-simplifycfg",
    "--instsimplify",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--barrier",
          "--alignment-from-assumptions",
          "--mem2reg",
          "--lower-widenable-condition",
          "--speculative-execution",
          "--consthoist",
          "--constmerge",
          "--loop-reroll",
          "--loop-simplify",
          "--post-inline-ee-instrument",
          "--memcpyopt",
          "--lower-matrix-intrinsics",
          "--lower-expect",
          "--instcombine",
          "--newgvn",
          "--aggressive-instcombine",
          "--nary-reassociate",
          "--dse",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--barrier",
      "--alignment-from-assumptions",
      "--mem2reg",
      "--lower-widenable-condition",
      "--speculative-execution",
      "--consthoist",
      "--constmerge",
      "--loop-reroll",
      "--loop-simplify",
      "--post-inline-ee-instrument",
      "--memcpyopt",
      "--lower-matrix-intrinsics",
      "--lower-expect",
      "--instcombine",
      "--newgvn",
      "--aggressive-instcombine",
      "--nary-reassociate",
      "--dse",
      "--licm"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}