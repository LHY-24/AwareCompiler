{
  "program_id": "github-v0_7440.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 75,
    "onePredOneSuc": 58,
    "onePredTwoSuc": 16,
    "oneSuccessor": 65,
    "twoPred": 30,
    "twoPredOneSuc": 7,
    "twoEach": 17,
    "twoSuccessor": 45,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 119,
    "BeginPhi": 0,
    "BranchCount": 110,
    "returnInt": 4,
    "CriticalCount": 22,
    "NumEdges": 160,
    "const32Bit": 158,
    "const64Bit": 51,
    "numConstZeroes": 36,
    "numConstOnes": 89,
    "UncondBranches": 65,
    "binaryConstArg": 52,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 59,
    "NumAndInst": 18,
    "BlockMid": 11,
    "BlockLow": 108,
    "NumBitCastInst": 0,
    "NumBrInst": 110,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 45,
    "NumLShrInst": 7,
    "NumLoadInst": 238,
    "NumMulInst": 0,
    "NumOrInst": 13,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 172,
    "NumSubInst": 9,
    "NumTruncInst": 27,
    "NumXorInst": 0,
    "NumZExtInst": 39,
    "TotalBlocks": 119,
    "TotalInsts": 811,
    "TotalMemInst": 507,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 371
  },
  "baseline_oz_instcount": 812,
  "knowledge_base_entry": [
    "--dse",
    "--mldst-motion",
    "--instsimplify",
    "--aggressive-instcombine",
    "--inline",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--mem2reg",
    "--flattencfg",
    "--adce",
    "--instcombine",
    "--bdce",
    "--mergefunc",
    "--instcombine",
    "--gvn",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--jump-threading",
    "--reassociate",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slp-vectorizer",
          "--scalarizer",
          "--jump-threading",
          "--loop-vectorize",
          "--cross-dso-cfi",
          "--inject-tli-mappings",
          "--sccp",
          "--loop-predication",
          "--flattencfg",
          "--sroa",
          "--early-cse",
          "--lower-widenable-condition",
          "--loop-reroll",
          "--coro-split",
          "--die",
          "--simple-loop-unswitch",
          "--dse",
          "--strip-debug-declare",
          "--strip",
          "--post-inline-ee-instrument",
          "--gvn-hoist",
          "--aggressive-instcombine",
          "--sancov",
          "--slsr"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slp-vectorizer",
      "--scalarizer",
      "--jump-threading",
      "--loop-vectorize",
      "--cross-dso-cfi",
      "--inject-tli-mappings",
      "--sccp",
      "--loop-predication",
      "--flattencfg",
      "--sroa",
      "--early-cse",
      "--lower-widenable-condition",
      "--loop-reroll",
      "--coro-split",
      "--die",
      "--simple-loop-unswitch",
      "--dse",
      "--strip-debug-declare",
      "--strip",
      "--post-inline-ee-instrument",
      "--gvn-hoist",
      "--aggressive-instcombine",
      "--sancov",
      "--slsr"
    ],
    "performance_vs_Oz": "+3.9%"
  }
}