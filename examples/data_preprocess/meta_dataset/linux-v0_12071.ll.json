{
  "program_id": "linux-v0_12071.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 61,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 12,
    "oneSuccessor": 57,
    "twoPred": 19,
    "twoPredOneSuc": 8,
    "twoEach": 6,
    "twoSuccessor": 26,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 119,
    "BeginPhi": 1,
    "BranchCount": 83,
    "returnInt": 26,
    "CriticalCount": 18,
    "NumEdges": 123,
    "const32Bit": 221,
    "const64Bit": 26,
    "numConstZeroes": 79,
    "numConstOnes": 142,
    "UncondBranches": 57,
    "binaryConstArg": 30,
    "NumAShrInst": 1,
    "NumAddInst": 10,
    "NumAllocaInst": 118,
    "NumAndInst": 6,
    "BlockMid": 15,
    "BlockLow": 105,
    "NumBitCastInst": 27,
    "NumBrInst": 83,
    "NumCallInst": 68,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 32,
    "NumLShrInst": 2,
    "NumLoadInst": 225,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 34,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 144,
    "NumSubInst": 8,
    "NumTruncInst": 9,
    "NumXorInst": 10,
    "NumZExtInst": 9,
    "TotalBlocks": 120,
    "TotalInsts": 850,
    "TotalMemInst": 589,
    "TotalFuncs": 47,
    "ArgsPhi": 2,
    "testUnary": 408
  },
  "baseline_oz_instcount": 851,
  "knowledge_base_entry": [
    "--inline",
    "--sroa",
    "--aggressive-instcombine",
    "--early-cse",
    "--correlated-propagation",
    "--mergefunc",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--loop-interchange",
          "--loop-simplify",
          "--elim-avail-extern",
          "--sroa",
          "--loop-load-elim",
          "--speculative-execution",
          "--scalarizer",
          "--strip-nondebug",
          "--instcombine",
          "--partial-inliner",
          "--aggressive-instcombine",
          "--partially-inline-libcalls",
          "--post-inline-ee-instrument",
          "--infer-address-spaces",
          "-loop-reduce",
          "--loop-versioning",
          "--irce",
          "--mergefunc",
          "--ee-instrument",
          "--mergeicmps",
          "--strip-debug-declare",
          "--rpo-functionattrs",
          "--early-cse-memssa",
          "--newgvn",
          "--deadargelim",
          "--adce",
          "--instsimplify",
          "--argpromotion",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--loop-interchange",
      "--loop-simplify",
      "--elim-avail-extern",
      "--sroa",
      "--loop-load-elim",
      "--speculative-execution",
      "--scalarizer",
      "--strip-nondebug",
      "--instcombine",
      "--partial-inliner",
      "--aggressive-instcombine",
      "--partially-inline-libcalls",
      "--post-inline-ee-instrument",
      "--infer-address-spaces",
      "-loop-reduce",
      "--loop-versioning",
      "--irce",
      "--mergefunc",
      "--ee-instrument",
      "--mergeicmps",
      "--strip-debug-declare",
      "--rpo-functionattrs",
      "--early-cse-memssa",
      "--newgvn",
      "--deadargelim",
      "--adce",
      "--instsimplify",
      "--argpromotion",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}