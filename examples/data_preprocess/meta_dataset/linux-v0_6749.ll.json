{
  "program_id": "linux-v0_6749.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 44,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 13,
    "oneSuccessor": 38,
    "twoPred": 16,
    "twoPredOneSuc": 6,
    "twoEach": 6,
    "twoSuccessor": 26,
    "morePreds": 4,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 74,
    "BeginPhi": 3,
    "BranchCount": 64,
    "returnInt": 4,
    "CriticalCount": 11,
    "NumEdges": 90,
    "const32Bit": 246,
    "const64Bit": 9,
    "numConstZeroes": 95,
    "numConstOnes": 65,
    "UncondBranches": 38,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 55,
    "NumAndInst": 11,
    "BlockMid": 14,
    "BlockLow": 63,
    "NumBitCastInst": 4,
    "NumBrInst": 64,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 82,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 217,
    "NumMulInst": 1,
    "NumOrInst": 5,
    "NumPHIInst": 3,
    "NumRetInst": 13,
    "NumSExtInst": 2,
    "NumSelectInst": 2,
    "NumShlInst": 4,
    "NumStoreInst": 77,
    "NumSubInst": 3,
    "NumTruncInst": 16,
    "NumXorInst": 0,
    "NumZExtInst": 29,
    "TotalBlocks": 77,
    "TotalInsts": 669,
    "TotalMemInst": 476,
    "TotalFuncs": 30,
    "ArgsPhi": 6,
    "testUnary": 325
  },
  "baseline_oz_instcount": 670,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--bdce",
    "--simplifycfg",
    "--memcpyopt",
    "--slp-vectorizer",
    "--instsimplify",
    "--dse",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--strip",
          "--loop-instsimplify",
          "--rpo-functionattrs",
          "--always-inline",
          "--loop-versioning-licm",
          "--instcombine",
          "--lower-guard-intrinsic",
          "--inline",
          "--globalopt",
          "--inject-tli-mappings",
          "--sink",
          "--slsr",
          "--float2int",
          "-loop-reduce",
          "--loop-unroll",
          "--instsimplify",
          "--aggressive-instcombine",
          "--lower-matrix-intrinsics",
          "--argpromotion",
          "--strip-nondebug",
          "--forceattrs",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--strip",
      "--loop-instsimplify",
      "--rpo-functionattrs",
      "--always-inline",
      "--loop-versioning-licm",
      "--instcombine",
      "--lower-guard-intrinsic",
      "--inline",
      "--globalopt",
      "--inject-tli-mappings",
      "--sink",
      "--slsr",
      "--float2int",
      "-loop-reduce",
      "--loop-unroll",
      "--instsimplify",
      "--aggressive-instcombine",
      "--lower-matrix-intrinsics",
      "--argpromotion",
      "--strip-nondebug",
      "--forceattrs",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}