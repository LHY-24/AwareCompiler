{
  "program_id": "github-v0_3040.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 29,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 7,
    "oneSuccessor": 28,
    "twoPred": 14,
    "twoPredOneSuc": 5,
    "twoEach": 6,
    "twoSuccessor": 17,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 54,
    "BeginPhi": 3,
    "BranchCount": 45,
    "returnInt": 8,
    "CriticalCount": 12,
    "NumEdges": 68,
    "const32Bit": 223,
    "const64Bit": 5,
    "numConstZeroes": 118,
    "numConstOnes": 58,
    "UncondBranches": 28,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 24,
    "NumAndInst": 5,
    "BlockMid": 6,
    "BlockLow": 51,
    "NumBitCastInst": 6,
    "NumBrInst": 45,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 83,
    "NumICmpInst": 22,
    "NumLShrInst": 5,
    "NumLoadInst": 85,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 6,
    "NumSExtInst": 0,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 50,
    "NumSubInst": 4,
    "NumTruncInst": 14,
    "NumXorInst": 0,
    "NumZExtInst": 18,
    "TotalBlocks": 57,
    "TotalInsts": 406,
    "TotalMemInst": 265,
    "TotalFuncs": 11,
    "ArgsPhi": 6,
    "testUnary": 147
  },
  "baseline_oz_instcount": 401,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--die",
    "--aggressive-instcombine",
    "--sroa",
    "--ipsccp",
    "--licm",
    "--prune-eh",
    "--gvn-hoist",
    "--simplifycfg",
    "--loop-instsimplify",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--rewrite-statepoints-for-gc",
          "--constmerge",
          "--forceattrs",
          "--reassociate",
          "--sccp",
          "--loop-unswitch",
          "--float2int",
          "--prune-eh",
          "--partially-inline-libcalls",
          "--indvars",
          "--dce",
          "--libcalls-shrinkwrap",
          "--mem2reg",
          "--rpo-functionattrs",
          "--jump-threading",
          "--ipsccp",
          "--aggressive-instcombine",
          "--inject-tli-mappings",
          "--speculative-execution",
          "--always-inline",
          "--loop-simplify",
          "--loop-simplifycfg",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--rewrite-statepoints-for-gc",
      "--constmerge",
      "--forceattrs",
      "--reassociate",
      "--sccp",
      "--loop-unswitch",
      "--float2int",
      "--prune-eh",
      "--partially-inline-libcalls",
      "--indvars",
      "--dce",
      "--libcalls-shrinkwrap",
      "--mem2reg",
      "--rpo-functionattrs",
      "--jump-threading",
      "--ipsccp",
      "--aggressive-instcombine",
      "--inject-tli-mappings",
      "--speculative-execution",
      "--always-inline",
      "--loop-simplify",
      "--loop-simplifycfg",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}