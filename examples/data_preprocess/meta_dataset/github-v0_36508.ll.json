{
  "program_id": "github-v0_36508.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 7,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 17,
    "const32Bit": 17,
    "const64Bit": 0,
    "numConstZeroes": 5,
    "numConstOnes": 10,
    "UncondBranches": 7,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 6,
    "NumAndInst": 2,
    "BlockMid": 1,
    "BlockLow": 14,
    "NumBitCastInst": 0,
    "NumBrInst": 12,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 18,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 15,
    "TotalInsts": 81,
    "TotalMemInst": 51,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 30
  },
  "baseline_oz_instcount": 82,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--dse",
    "--inline",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--mldst-motion",
    "--licm",
    "--mergefunc",
    "--mem2reg",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--bdce",
          "--callsite-splitting",
          "--strip-dead-prototypes",
          "--loop-data-prefetch",
          "--guard-widening",
          "--simplifycfg",
          "--mergefunc",
          "--lower-widenable-condition",
          "-loop-reduce",
          "--globalsplit",
          "--argpromotion",
          "--mergeicmps",
          "--loop-unroll-and-jam",
          "--loop-sink",
          "--lowerswitch",
          "--rewrite-statepoints-for-gc",
          "--early-cse-memssa",
          "--hotcoldsplit",
          "--functionattrs",
          "--strip-debug-declare",
          "--aggressive-instcombine",
          "--loweratomic",
          "--coro-elide",
          "--mem2reg",
          "--called-value-propagation",
          "--loop-fusion",
          "--redundant-dbg-inst-elim",
          "--mldst-motion",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--bdce",
      "--callsite-splitting",
      "--strip-dead-prototypes",
      "--loop-data-prefetch",
      "--guard-widening",
      "--simplifycfg",
      "--mergefunc",
      "--lower-widenable-condition",
      "-loop-reduce",
      "--globalsplit",
      "--argpromotion",
      "--mergeicmps",
      "--loop-unroll-and-jam",
      "--loop-sink",
      "--lowerswitch",
      "--rewrite-statepoints-for-gc",
      "--early-cse-memssa",
      "--hotcoldsplit",
      "--functionattrs",
      "--strip-debug-declare",
      "--aggressive-instcombine",
      "--loweratomic",
      "--coro-elide",
      "--mem2reg",
      "--called-value-propagation",
      "--loop-fusion",
      "--redundant-dbg-inst-elim",
      "--mldst-motion",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+6.1%"
  }
}