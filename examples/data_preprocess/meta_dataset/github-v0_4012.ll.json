{
  "program_id": "github-v0_4012.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 6,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 0,
    "oneSuccessor": 6,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 2,
    "BranchCount": 9,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 12,
    "const32Bit": 17,
    "const64Bit": 0,
    "numConstZeroes": 10,
    "numConstOnes": 6,
    "UncondBranches": 6,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 3,
    "NumAndInst": 2,
    "BlockMid": 0,
    "BlockLow": 11,
    "NumBitCastInst": 0,
    "NumBrInst": 9,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 7,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 11,
    "TotalInsts": 54,
    "TotalMemInst": 25,
    "TotalFuncs": 2,
    "ArgsPhi": 4,
    "testUnary": 23
  },
  "baseline_oz_instcount": 54,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--early-cse",
    "--elim-avail-extern",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--gvn",
          "--inferattrs",
          "--globalopt",
          "--licm",
          "--reassociate",
          "--correlated-propagation",
          "--coro-cleanup",
          "--loop-data-prefetch",
          "--loop-unswitch",
          "--coro-elide",
          "--loop-vectorize",
          "--loop-reroll",
          "--hotcoldsplit",
          "--libcalls-shrinkwrap",
          "--mldst-motion",
          "--gvn-hoist",
          "--lower-widenable-condition",
          "--inject-tli-mappings",
          "--adce",
          "--add-discriminators",
          "--aggressive-instcombine",
          "--loop-deletion",
          "--speculative-execution"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--gvn",
      "--inferattrs",
      "--globalopt",
      "--licm",
      "--reassociate",
      "--correlated-propagation",
      "--coro-cleanup",
      "--loop-data-prefetch",
      "--loop-unswitch",
      "--coro-elide",
      "--loop-vectorize",
      "--loop-reroll",
      "--hotcoldsplit",
      "--libcalls-shrinkwrap",
      "--mldst-motion",
      "--gvn-hoist",
      "--lower-widenable-condition",
      "--inject-tli-mappings",
      "--adce",
      "--add-discriminators",
      "--aggressive-instcombine",
      "--loop-deletion",
      "--speculative-execution"
    ],
    "performance_vs_Oz": "+7.4%"
  }
}