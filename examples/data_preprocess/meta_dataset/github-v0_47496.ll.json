{
  "program_id": "github-v0_47496.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 6,
    "oneSuccessor": 22,
    "twoPred": 13,
    "twoPredOneSuc": 4,
    "twoEach": 8,
    "twoSuccessor": 16,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 2,
    "CriticalCount": 9,
    "NumEdges": 54,
    "const32Bit": 34,
    "const64Bit": 73,
    "numConstZeroes": 7,
    "numConstOnes": 25,
    "UncondBranches": 22,
    "binaryConstArg": 35,
    "NumAShrInst": 0,
    "NumAddInst": 78,
    "NumAllocaInst": 18,
    "NumAndInst": 6,
    "BlockMid": 4,
    "BlockLow": 38,
    "NumBitCastInst": 0,
    "NumBrInst": 38,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 16,
    "NumLShrInst": 3,
    "NumLoadInst": 235,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 116,
    "NumSubInst": 11,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 37,
    "TotalBlocks": 42,
    "TotalInsts": 618,
    "TotalMemInst": 408,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 291
  },
  "baseline_oz_instcount": 618,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--prune-eh",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--dce",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--inline",
    "--flattencfg",
    "--sroa",
    "--globalopt",
    "--sccp",
    "--lower-constant-intrinsics",
    "--sroa",
    "--mergefunc",
    "--gvn",
    "--load-store-vectorizer",
    "--dse",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--die",
          "--always-inline",
          "--loop-load-elim",
          "--dse",
          "--rewrite-statepoints-for-gc",
          "--coro-early",
          "--guard-widening",
          "--mergefunc",
          "--early-cse",
          "--ipsccp",
          "--attributor",
          "--forceattrs",
          "--cross-dso-cfi",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--die",
      "--always-inline",
      "--loop-load-elim",
      "--dse",
      "--rewrite-statepoints-for-gc",
      "--coro-early",
      "--guard-widening",
      "--mergefunc",
      "--early-cse",
      "--ipsccp",
      "--attributor",
      "--forceattrs",
      "--cross-dso-cfi",
      "--constmerge"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}