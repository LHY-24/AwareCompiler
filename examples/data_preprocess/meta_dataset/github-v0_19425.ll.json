{
  "program_id": "github-v0_19425.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 48,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 19,
    "oneSuccessor": 40,
    "twoPred": 19,
    "twoPredOneSuc": 11,
    "twoEach": 8,
    "twoSuccessor": 30,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 0,
    "BranchCount": 70,
    "returnInt": 16,
    "CriticalCount": 15,
    "NumEdges": 100,
    "const32Bit": 130,
    "const64Bit": 7,
    "numConstZeroes": 43,
    "numConstOnes": 55,
    "UncondBranches": 40,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 36,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 74,
    "NumBitCastInst": 0,
    "NumBrInst": 70,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 31,
    "NumLShrInst": 0,
    "NumLoadInst": 106,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 6,
    "NumSelectInst": 1,
    "NumShlInst": 3,
    "NumStoreInst": 58,
    "NumSubInst": 6,
    "NumTruncInst": 5,
    "NumXorInst": 1,
    "NumZExtInst": 9,
    "TotalBlocks": 77,
    "TotalInsts": 393,
    "TotalMemInst": 241,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 162
  },
  "baseline_oz_instcount": 393,
  "knowledge_base_entry": [
    "--loop-interchange",
    "--gvn-hoist",
    "--nary-reassociate",
    "--loop-fusion",
    "--jump-threading",
    "--ipsccp",
    "--aggressive-instcombine",
    "--die",
    "--sroa",
    "--lower-expect",
    "--gvn-hoist",
    "--simplifycfg",
    "--loop-reroll",
    "--newgvn",
    "--instsimplify",
    "--reassociate",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--indvars",
          "--simple-loop-unswitch",
          "--constmerge",
          "--separate-const-offset-from-gep",
          "--ipsccp",
          "--loop-deletion",
          "--loop-fusion",
          "--always-inline",
          "--newgvn",
          "--aggressive-instcombine",
          "--lower-widenable-condition",
          "--strip-nondebug",
          "--instsimplify",
          "--lowerswitch",
          "--loweratomic",
          "--gvn",
          "--instnamer",
          "--loop-versioning-licm",
          "--jump-threading",
          "--simplifycfg",
          "--mergeicmps",
          "--licm",
          "--loop-guard-widening",
          "--ee-instrument",
          "--loop-interchange",
          "--called-value-propagation",
          "--coro-cleanup",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--indvars",
      "--simple-loop-unswitch",
      "--constmerge",
      "--separate-const-offset-from-gep",
      "--ipsccp",
      "--loop-deletion",
      "--loop-fusion",
      "--always-inline",
      "--newgvn",
      "--aggressive-instcombine",
      "--lower-widenable-condition",
      "--strip-nondebug",
      "--instsimplify",
      "--lowerswitch",
      "--loweratomic",
      "--gvn",
      "--instnamer",
      "--loop-versioning-licm",
      "--jump-threading",
      "--simplifycfg",
      "--mergeicmps",
      "--licm",
      "--loop-guard-widening",
      "--ee-instrument",
      "--loop-interchange",
      "--called-value-propagation",
      "--coro-cleanup",
      "--strip"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}