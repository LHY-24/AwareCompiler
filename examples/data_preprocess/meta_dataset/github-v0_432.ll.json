{
  "program_id": "github-v0_432.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 0,
    "oneSuccessor": 6,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 10,
    "const32Bit": 20,
    "const64Bit": 1,
    "numConstZeroes": 7,
    "numConstOnes": 13,
    "UncondBranches": 6,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 7,
    "NumBitCastInst": 1,
    "NumBrInst": 8,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 30,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 93,
    "TotalMemInst": 64,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 53
  },
  "baseline_oz_instcount": 93,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--elim-avail-extern",
    "--globalopt",
    "--gvn",
    "--instsimplify",
    "--ipsccp",
    "--instsimplify",
    "--correlated-propagation",
    "--loop-reroll",
    "--indvars",
    "--newgvn",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--adce",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergeicmps",
          "--aggressive-instcombine",
          "--loop-unswitch",
          "--hotcoldsplit",
          "--add-discriminators",
          "--float2int",
          "--break-crit-edges",
          "--mldst-motion",
          "--lower-expect",
          "--loop-interchange",
          "--globalsplit",
          "--redundant-dbg-inst-elim",
          "--consthoist",
          "--barrier",
          "--loop-vectorize",
          "--cross-dso-cfi",
          "--reassociate",
          "--coro-early",
          "--constmerge",
          "--post-inline-ee-instrument",
          "--loop-predication",
          "--load-store-vectorizer",
          "--bdce",
          "--globaldce",
          "--loweratomic",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergeicmps",
      "--aggressive-instcombine",
      "--loop-unswitch",
      "--hotcoldsplit",
      "--add-discriminators",
      "--float2int",
      "--break-crit-edges",
      "--mldst-motion",
      "--lower-expect",
      "--loop-interchange",
      "--globalsplit",
      "--redundant-dbg-inst-elim",
      "--consthoist",
      "--barrier",
      "--loop-vectorize",
      "--cross-dso-cfi",
      "--reassociate",
      "--coro-early",
      "--constmerge",
      "--post-inline-ee-instrument",
      "--loop-predication",
      "--load-store-vectorizer",
      "--bdce",
      "--globaldce",
      "--loweratomic",
      "--gvn"
    ],
    "performance_vs_Oz": "+6.5%"
  }
}