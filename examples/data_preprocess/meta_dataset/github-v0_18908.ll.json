{
  "program_id": "github-v0_18908.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 2,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 22,
    "const32Bit": 31,
    "const64Bit": 33,
    "numConstZeroes": 30,
    "numConstOnes": 24,
    "UncondBranches": 10,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 16,
    "NumBitCastInst": 8,
    "NumBrInst": 16,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 20,
    "TotalInsts": 164,
    "TotalMemInst": 104,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 76
  },
  "baseline_oz_instcount": 164,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--jump-threading",
    "--globalopt",
    "--licm",
    "--aggressive-instcombine",
    "--bdce",
    "--gvn",
    "--instcombine",
    "--dse",
    "--reassociate",
    "--loop-simplifycfg",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--called-value-propagation",
          "--barrier",
          "--redundant-dbg-inst-elim",
          "--jump-threading",
          "--name-anon-globals",
          "--loop-fusion",
          "--simple-loop-unswitch",
          "--loop-predication",
          "--aggressive-instcombine",
          "--indvars",
          "--loop-versioning",
          "--lower-expect",
          "--rewrite-statepoints-for-gc",
          "--nary-reassociate",
          "--adce",
          "--mem2reg",
          "--infer-address-spaces",
          "--functionattrs",
          "--bdce",
          "--instsimplify",
          "--loop-unroll-and-jam",
          "--div-rem-pairs",
          "--gvn-hoist",
          "--loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--called-value-propagation",
      "--barrier",
      "--redundant-dbg-inst-elim",
      "--jump-threading",
      "--name-anon-globals",
      "--loop-fusion",
      "--simple-loop-unswitch",
      "--loop-predication",
      "--aggressive-instcombine",
      "--indvars",
      "--loop-versioning",
      "--lower-expect",
      "--rewrite-statepoints-for-gc",
      "--nary-reassociate",
      "--adce",
      "--mem2reg",
      "--infer-address-spaces",
      "--functionattrs",
      "--bdce",
      "--instsimplify",
      "--loop-unroll-and-jam",
      "--div-rem-pairs",
      "--gvn-hoist",
      "--loop-unswitch"
    ],
    "performance_vs_Oz": "+3.7%"
  }
}