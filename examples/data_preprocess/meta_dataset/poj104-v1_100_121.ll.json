{
  "program_id": "poj104-v1_100_121.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 4,
    "oneSuccessor": 12,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 4,
    "CriticalCount": 4,
    "NumEdges": 26,
    "const32Bit": 24,
    "const64Bit": 23,
    "numConstZeroes": 21,
    "numConstOnes": 11,
    "UncondBranches": 12,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 21,
    "NumBitCastInst": 11,
    "NumBrInst": 19,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 24,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 11,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 22,
    "TotalInsts": 130,
    "TotalMemInst": 69,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 55
  },
  "baseline_oz_instcount": 109,
  "knowledge_base_entry": [
    "--gvn",
    "--mldst-motion",
    "--inline",
    "--mldst-motion",
    "--instcombine",
    "--load-store-vectorizer",
    "--bdce",
    "--jump-threading",
    "--sroa",
    "--sccp",
    "--reassociate",
    "--mergefunc",
    "--loop-reroll",
    "--indvars",
    "--gvn",
    "--reassociate",
    "--lower-expect",
    "--early-cse-memssa",
    "--flattencfg",
    "--mergefunc",
    "--instcombine",
    "--inline",
    "--sroa",
    "--memcpyopt",
    "--instcombine",
    "--die",
    "--gvn",
    "--indvars",
    "--gvn-hoist",
    "--adce",
    "--elim-avail-extern",
    "--instsimplify",
    "--elim-avail-extern",
    "--mergefunc",
    "--licm",
    "--loop-instsimplify",
    "--adce",
    "--newgvn",
    "--correlated-propagation",
    "--gvn-hoist",
    "--bdce",
    "--gvn-hoist",
    "--flattencfg",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--newgvn",
    "--memcpyopt",
    "--loop-reroll",
    "--instcombine",
    "--slp-vectorizer",
    "--gvn",
    "--mldst-motion",
    "--inline",
    "--mldst-motion",
    "--instcombine",
    "--load-store-vectorizer",
    "--bdce",
    "--jump-threading",
    "--sroa",
    "--sccp",
    "--reassociate",
    "--mergefunc",
    "--loop-reroll",
    "--indvars",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--mem2reg",
    "--dce",
    "--newgvn",
    "--mergefunc",
    "--instsimplify",
    "--load-store-vectorizer",
    "--mergefunc",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--gvn-hoist",
    "--bdce",
    "--gvn-hoist",
    "--flattencfg",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--newgvn",
    "--memcpyopt",
    "--loop-reroll",
    "--instcombine",
    "--slp-vectorizer",
    "--gvn",
    "--instcombine",
    "--dse",
    "--mergefunc",
    "--simplifycfg",
    "--lower-expect",
    "--dce",
    "--slp-vectorizer",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--early-cse",
          "--guard-widening",
          "--loop-versioning-licm",
          "--div-rem-pairs",
          "--always-inline",
          "--newgvn",
          "--loop-interchange",
          "--lower-expect",
          "--instcombine",
          "--cross-dso-cfi",
          "--die",
          "--loop-guard-widening",
          "--called-value-propagation",
          "--sancov",
          "--slp-vectorizer",
          "--speculative-execution",
          "--globalopt",
          "--post-inline-ee-instrument",
          "--loweratomic",
          "--loop-simplifycfg",
          "--mem2reg",
          "--gvn",
          "--attributor",
          "--alignment-from-assumptions",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+31.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--early-cse",
      "--guard-widening",
      "--loop-versioning-licm",
      "--div-rem-pairs",
      "--always-inline",
      "--newgvn",
      "--loop-interchange",
      "--lower-expect",
      "--instcombine",
      "--cross-dso-cfi",
      "--die",
      "--loop-guard-widening",
      "--called-value-propagation",
      "--sancov",
      "--slp-vectorizer",
      "--speculative-execution",
      "--globalopt",
      "--post-inline-ee-instrument",
      "--loweratomic",
      "--loop-simplifycfg",
      "--mem2reg",
      "--gvn",
      "--attributor",
      "--alignment-from-assumptions",
      "--strip"
    ],
    "performance_vs_Oz": "+31.2%"
  }
}