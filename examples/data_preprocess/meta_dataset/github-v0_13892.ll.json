{
  "program_id": "github-v0_13892.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 1,
    "CriticalCount": 1,
    "NumEdges": 11,
    "const32Bit": 32,
    "const64Bit": 9,
    "numConstZeroes": 25,
    "numConstOnes": 8,
    "UncondBranches": 5,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 8,
    "NumBitCastInst": 2,
    "NumBrInst": 7,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 28,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 10,
    "TotalInsts": 87,
    "TotalMemInst": 72,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 36
  },
  "baseline_oz_instcount": 88,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--mldst-motion",
    "--newgvn",
    "--bdce",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--loop-predication",
          "--instnamer",
          "--reassociate",
          "--loop-versioning-licm",
          "--barrier",
          "--constmerge",
          "--mergeicmps",
          "--add-discriminators",
          "--strip-debug-declare",
          "--slp-vectorizer",
          "--libcalls-shrinkwrap",
          "--loop-versioning",
          "--functionattrs",
          "--tailcallelim",
          "--lcssa",
          "--name-anon-globals",
          "--elim-avail-extern",
          "--called-value-propagation",
          "--infer-address-spaces",
          "--forceattrs",
          "--coro-split",
          "--loop-simplifycfg",
          "--loop-simplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--loop-predication",
      "--instnamer",
      "--reassociate",
      "--loop-versioning-licm",
      "--barrier",
      "--constmerge",
      "--mergeicmps",
      "--add-discriminators",
      "--strip-debug-declare",
      "--slp-vectorizer",
      "--libcalls-shrinkwrap",
      "--loop-versioning",
      "--functionattrs",
      "--tailcallelim",
      "--lcssa",
      "--name-anon-globals",
      "--elim-avail-extern",
      "--called-value-propagation",
      "--infer-address-spaces",
      "--forceattrs",
      "--coro-split",
      "--loop-simplifycfg",
      "--loop-simplify"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}