{
  "program_id": "linux-v0_11498.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 38,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 20,
    "oneSuccessor": 29,
    "twoPred": 15,
    "twoPredOneSuc": 9,
    "twoEach": 4,
    "twoSuccessor": 30,
    "morePreds": 6,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 3,
    "BranchCount": 59,
    "returnInt": 15,
    "CriticalCount": 24,
    "NumEdges": 89,
    "const32Bit": 219,
    "const64Bit": 14,
    "numConstZeroes": 86,
    "numConstOnes": 98,
    "UncondBranches": 29,
    "binaryConstArg": 23,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 73,
    "NumAndInst": 16,
    "BlockMid": 7,
    "BlockLow": 72,
    "NumBitCastInst": 11,
    "NumBrInst": 59,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 37,
    "NumLShrInst": 0,
    "NumLoadInst": 145,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 3,
    "NumRetInst": 20,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 73,
    "NumSubInst": 3,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 79,
    "TotalInsts": 546,
    "TotalMemInst": 371,
    "TotalFuncs": 30,
    "ArgsPhi": 7,
    "testUnary": 247
  },
  "baseline_oz_instcount": 546,
  "knowledge_base_entry": [
    "--lower-expect",
    "--dse",
    "--jump-threading",
    "--aggressive-instcombine",
    "--prune-eh",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--instsimplify",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--hotcoldsplit",
          "--mergefunc",
          "--loop-deletion",
          "--loop-unswitch",
          "--inferattrs",
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--simplifycfg",
          "--canonicalize-aliases",
          "--sccp",
          "--barrier",
          "--loop-interchange",
          "--adce",
          "--simple-loop-unswitch",
          "--instnamer",
          "--lowerswitch",
          "--inline",
          "--ipsccp",
          "--loop-idiom",
          "--infer-address-spaces",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--hotcoldsplit",
      "--mergefunc",
      "--loop-deletion",
      "--loop-unswitch",
      "--inferattrs",
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--simplifycfg",
      "--canonicalize-aliases",
      "--sccp",
      "--barrier",
      "--loop-interchange",
      "--adce",
      "--simple-loop-unswitch",
      "--instnamer",
      "--lowerswitch",
      "--inline",
      "--ipsccp",
      "--loop-idiom",
      "--infer-address-spaces",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}