{
  "program_id": "linux-v0_13528.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 30,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 10,
    "oneSuccessor": 25,
    "twoPred": 12,
    "twoPredOneSuc": 4,
    "twoEach": 0,
    "twoSuccessor": 19,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 79,
    "BeginPhi": 1,
    "BranchCount": 44,
    "returnInt": 33,
    "CriticalCount": 9,
    "NumEdges": 63,
    "const32Bit": 335,
    "const64Bit": 12,
    "numConstZeroes": 107,
    "numConstOnes": 125,
    "UncondBranches": 25,
    "binaryConstArg": 48,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 94,
    "NumAndInst": 5,
    "BlockMid": 14,
    "BlockLow": 66,
    "NumBitCastInst": 17,
    "NumBrInst": 44,
    "NumCallInst": 96,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 242,
    "NumMulInst": 15,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 36,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 124,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 9,
    "NumZExtInst": 9,
    "TotalBlocks": 80,
    "TotalInsts": 812,
    "TotalMemInst": 626,
    "TotalFuncs": 54,
    "ArgsPhi": 2,
    "testUnary": 372
  },
  "baseline_oz_instcount": 812,
  "knowledge_base_entry": [
    "--gvn",
    "--mergefunc",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--mergefunc",
    "--aggressive-instcombine",
    "--instcombine",
    "--simplifycfg",
    "--loop-rotate",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse-memssa",
          "--constmerge",
          "--constprop",
          "--lcssa",
          "--licm",
          "--coro-early",
          "--loop-idiom",
          "--globaldce",
          "--alignment-from-assumptions",
          "--aggressive-instcombine",
          "--loweratomic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse-memssa",
      "--constmerge",
      "--constprop",
      "--lcssa",
      "--licm",
      "--coro-early",
      "--loop-idiom",
      "--globaldce",
      "--alignment-from-assumptions",
      "--aggressive-instcombine",
      "--loweratomic"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}