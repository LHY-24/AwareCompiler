{
  "program_id": "github-v0_47219.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 100,
    "onePredOneSuc": 69,
    "onePredTwoSuc": 31,
    "oneSuccessor": 87,
    "twoPred": 38,
    "twoPredOneSuc": 13,
    "twoEach": 21,
    "twoSuccessor": 59,
    "morePreds": 8,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 149,
    "BeginPhi": 6,
    "BranchCount": 146,
    "returnInt": 46,
    "CriticalCount": 20,
    "NumEdges": 205,
    "const32Bit": 205,
    "const64Bit": 11,
    "numConstZeroes": 61,
    "numConstOnes": 94,
    "UncondBranches": 87,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 28,
    "NumAllocaInst": 71,
    "NumAndInst": 5,
    "BlockMid": 13,
    "BlockLow": 142,
    "NumBitCastInst": 0,
    "NumBrInst": 146,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 59,
    "NumLShrInst": 0,
    "NumLoadInst": 245,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 6,
    "NumRetInst": 9,
    "NumSExtInst": 32,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 114,
    "NumSubInst": 25,
    "NumTruncInst": 19,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 155,
    "TotalInsts": 874,
    "TotalMemInst": 506,
    "TotalFuncs": 19,
    "ArgsPhi": 12,
    "testUnary": 404
  },
  "baseline_oz_instcount": 876,
  "knowledge_base_entry": [
    "--mem2reg",
    "--die",
    "--slp-vectorizer",
    "--early-cse",
    "--inline",
    "--aggressive-instcombine",
    "--ipsccp",
    "--newgvn",
    "--lower-expect",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--aggressive-instcombine",
          "--loop-reroll",
          "--ipconstprop",
          "--mergeicmps",
          "--rpo-functionattrs",
          "--argpromotion",
          "--loop-guard-widening",
          "--jump-threading",
          "--loop-interchange",
          "--attributor",
          "--callsite-splitting",
          "--called-value-propagation",
          "--always-inline",
          "--mldst-motion",
          "--forceattrs",
          "--infer-address-spaces",
          "--insert-gcov-profiling",
          "--memcpyopt",
          "--elim-avail-extern",
          "--speculative-execution",
          "--bdce",
          "--lower-guard-intrinsic",
          "--lcssa",
          "--adce",
          "--pgo-memop-opt",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--aggressive-instcombine",
      "--loop-reroll",
      "--ipconstprop",
      "--mergeicmps",
      "--rpo-functionattrs",
      "--argpromotion",
      "--loop-guard-widening",
      "--jump-threading",
      "--loop-interchange",
      "--attributor",
      "--callsite-splitting",
      "--called-value-propagation",
      "--always-inline",
      "--mldst-motion",
      "--forceattrs",
      "--infer-address-spaces",
      "--insert-gcov-profiling",
      "--memcpyopt",
      "--elim-avail-extern",
      "--speculative-execution",
      "--bdce",
      "--lower-guard-intrinsic",
      "--lcssa",
      "--adce",
      "--pgo-memop-opt",
      "--reassociate"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}