{
  "program_id": "linux-v0_1896.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 34,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 8,
    "oneSuccessor": 30,
    "twoPred": 12,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 17,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 74,
    "BeginPhi": 0,
    "BranchCount": 47,
    "returnInt": 23,
    "CriticalCount": 2,
    "NumEdges": 64,
    "const32Bit": 247,
    "const64Bit": 32,
    "numConstZeroes": 101,
    "numConstOnes": 107,
    "UncondBranches": 30,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 88,
    "NumAndInst": 4,
    "BlockMid": 16,
    "BlockLow": 58,
    "NumBitCastInst": 17,
    "NumBrInst": 47,
    "NumCallInst": 66,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 17,
    "NumLShrInst": 1,
    "NumLoadInst": 217,
    "NumMulInst": 4,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 27,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 126,
    "NumSubInst": 0,
    "NumTruncInst": 11,
    "NumXorInst": 2,
    "NumZExtInst": 13,
    "TotalBlocks": 74,
    "TotalInsts": 729,
    "TotalMemInst": 567,
    "TotalFuncs": 47,
    "ArgsPhi": 0,
    "testUnary": 354
  },
  "baseline_oz_instcount": 729,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--simplifycfg",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--memcpyopt",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn-hoist",
          "--sccp",
          "--functionattrs",
          "--elim-avail-extern",
          "--deadargelim",
          "--loop-fusion",
          "--simplifycfg",
          "--mldst-motion",
          "--libcalls-shrinkwrap",
          "--loop-reroll",
          "--rpo-functionattrs",
          "--mergefunc",
          "--early-cse-memssa",
          "--nary-reassociate",
          "--aggressive-instcombine",
          "--lower-constant-intrinsics",
          "--post-inline-ee-instrument",
          "--strip-nondebug",
          "--loop-unroll-and-jam",
          "--indvars",
          "--tailcallelim",
          "--loop-versioning-licm",
          "--barrier",
          "--mergereturn",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn-hoist",
      "--sccp",
      "--functionattrs",
      "--elim-avail-extern",
      "--deadargelim",
      "--loop-fusion",
      "--simplifycfg",
      "--mldst-motion",
      "--libcalls-shrinkwrap",
      "--loop-reroll",
      "--rpo-functionattrs",
      "--mergefunc",
      "--early-cse-memssa",
      "--nary-reassociate",
      "--aggressive-instcombine",
      "--lower-constant-intrinsics",
      "--post-inline-ee-instrument",
      "--strip-nondebug",
      "--loop-unroll-and-jam",
      "--indvars",
      "--tailcallelim",
      "--loop-versioning-licm",
      "--barrier",
      "--mergereturn",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}