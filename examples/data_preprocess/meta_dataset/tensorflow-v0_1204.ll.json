{
  "program_id": "tensorflow-v0_1204.ll",
  "autophase_features": {
    "BBNumArgsHi": 4,
    "BBNumArgsLo": 7,
    "onePred": 48,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 18,
    "oneSuccessor": 35,
    "twoPred": 30,
    "twoPredOneSuc": 8,
    "twoEach": 14,
    "twoSuccessor": 38,
    "morePreds": 1,
    "BB03Phi": 11,
    "BBHiPhi": 0,
    "BBNoPhi": 80,
    "BeginPhi": 11,
    "BranchCount": 65,
    "returnInt": 4,
    "CriticalCount": 28,
    "NumEdges": 111,
    "const32Bit": 79,
    "const64Bit": 83,
    "numConstZeroes": 108,
    "numConstOnes": 22,
    "UncondBranches": 35,
    "binaryConstArg": 10,
    "NumAShrInst": 3,
    "NumAddInst": 1,
    "NumAllocaInst": 5,
    "NumAndInst": 5,
    "BlockMid": 0,
    "BlockLow": 91,
    "NumBitCastInst": 20,
    "NumBrInst": 65,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 49,
    "NumICmpInst": 31,
    "NumLShrInst": 0,
    "NumLoadInst": 38,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 21,
    "NumRetInst": 12,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 24,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 91,
    "TotalInsts": 369,
    "TotalMemInst": 176,
    "TotalFuncs": 37,
    "ArgsPhi": 42,
    "testUnary": 79
  },
  "baseline_oz_instcount": 362,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--early-cse",
    "--jump-threading",
    "--loop-rotate",
    "--inline",
    "--bdce",
    "--correlated-propagation",
    "--simplifycfg",
    "--mldst-motion",
    "--early-cse",
    "--slp-vectorizer",
    "--dce",
    "--lower-expect",
    "--instcombine",
    "--mergefunc",
    "--licm",
    "--dce",
    "--sroa",
    "--memcpyopt",
    "--simplifycfg",
    "--prune-eh",
    "--lower-expect",
    "--dse",
    "--gvn",
    "--flattencfg",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--bdce",
          "--infer-address-spaces",
          "--hotcoldsplit",
          "--aggressive-instcombine",
          "--globalsplit",
          "--instsimplify",
          "--libcalls-shrinkwrap",
          "--mergeicmps",
          "--ee-instrument",
          "--lowerinvoke",
          "--nary-reassociate",
          "--loop-instsimplify",
          "--lower-widenable-condition",
          "--die",
          "-loop-reduce",
          "--newgvn",
          "--mem2reg",
          "--lower-guard-intrinsic",
          "--loop-predication",
          "--separate-const-offset-from-gep",
          "--simple-loop-unswitch",
          "--strip-debug-declare",
          "--sancov",
          "--sccp",
          "--globaldce",
          "--attributor",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+12.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--bdce",
      "--infer-address-spaces",
      "--hotcoldsplit",
      "--aggressive-instcombine",
      "--globalsplit",
      "--instsimplify",
      "--libcalls-shrinkwrap",
      "--mergeicmps",
      "--ee-instrument",
      "--lowerinvoke",
      "--nary-reassociate",
      "--loop-instsimplify",
      "--lower-widenable-condition",
      "--die",
      "-loop-reduce",
      "--newgvn",
      "--mem2reg",
      "--lower-guard-intrinsic",
      "--loop-predication",
      "--separate-const-offset-from-gep",
      "--simple-loop-unswitch",
      "--strip-debug-declare",
      "--sancov",
      "--sccp",
      "--globaldce",
      "--attributor",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+12.7%"
  }
}