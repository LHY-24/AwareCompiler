{
  "program_id": "github-v0_33155.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 23,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 5,
    "oneSuccessor": 23,
    "twoPred": 14,
    "twoPredOneSuc": 3,
    "twoEach": 7,
    "twoSuccessor": 14,
    "morePreds": 0,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 4,
    "BranchCount": 37,
    "returnInt": 0,
    "CriticalCount": 6,
    "NumEdges": 51,
    "const32Bit": 291,
    "const64Bit": 32,
    "numConstZeroes": 160,
    "numConstOnes": 58,
    "UncondBranches": 23,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 39,
    "NumAndInst": 5,
    "BlockMid": 11,
    "BlockLow": 37,
    "NumBitCastInst": 56,
    "NumBrInst": 37,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 115,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 205,
    "NumMulInst": 10,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 11,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 88,
    "NumSubInst": 4,
    "NumTruncInst": 8,
    "NumXorInst": 3,
    "NumZExtInst": 9,
    "TotalBlocks": 48,
    "TotalInsts": 655,
    "TotalMemInst": 470,
    "TotalFuncs": 15,
    "ArgsPhi": 8,
    "testUnary": 334
  },
  "baseline_oz_instcount": 655,
  "knowledge_base_entry": [
    "--mergefunc",
    "--aggressive-instcombine",
    "--gvn",
    "--flattencfg",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--sccp",
    "--sroa",
    "--elim-avail-extern",
    "--sccp",
    "--gvn",
    "--newgvn",
    "--lower-expect",
    "--correlated-propagation",
    "--gvn-hoist",
    "--simplifycfg",
    "-loop-reduce",
    "--newgvn",
    "--instcombine",
    "--die",
    "--lower-expect",
    "--reassociate",
    "--newgvn",
    "--mergefunc",
    "--aggressive-instcombine",
    "--gvn",
    "--flattencfg",
    "--jump-threading",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--dce",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--inject-tli-mappings",
          "--rewrite-statepoints-for-gc",
          "--infer-address-spaces",
          "--argpromotion",
          "--loop-instsimplify",
          "--loop-rotate",
          "--partially-inline-libcalls",
          "--libcalls-shrinkwrap",
          "--early-cse",
          "--mergereturn",
          "--coro-elide",
          "--inferattrs",
          "--correlated-propagation",
          "--loop-simplify",
          "--early-cse-memssa",
          "--post-inline-ee-instrument",
          "--callsite-splitting",
          "--mergeicmps",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--inject-tli-mappings",
      "--rewrite-statepoints-for-gc",
      "--infer-address-spaces",
      "--argpromotion",
      "--loop-instsimplify",
      "--loop-rotate",
      "--partially-inline-libcalls",
      "--libcalls-shrinkwrap",
      "--early-cse",
      "--mergereturn",
      "--coro-elide",
      "--inferattrs",
      "--correlated-propagation",
      "--loop-simplify",
      "--early-cse-memssa",
      "--post-inline-ee-instrument",
      "--callsite-splitting",
      "--mergeicmps",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}