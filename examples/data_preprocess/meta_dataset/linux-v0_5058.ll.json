{
  "program_id": "linux-v0_5058.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 9,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 1,
    "BranchCount": 12,
    "returnInt": 2,
    "CriticalCount": 3,
    "NumEdges": 15,
    "const32Bit": 53,
    "const64Bit": 4,
    "numConstZeroes": 10,
    "numConstOnes": 50,
    "UncondBranches": 9,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 36,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 23,
    "NumBitCastInst": 2,
    "NumBrInst": 12,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 21,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 13,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 9,
    "NumZExtInst": 4,
    "TotalBlocks": 25,
    "TotalInsts": 158,
    "TotalMemInst": 105,
    "TotalFuncs": 16,
    "ArgsPhi": 2,
    "testUnary": 69
  },
  "baseline_oz_instcount": 159,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--licm",
    "--mldst-motion",
    "--inline",
    "--instsimplify",
    "--dse",
    "--elim-avail-extern",
    "--jump-threading",
    "--newgvn",
    "--mem2reg",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--sroa",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--mergefunc",
          "--coro-elide",
          "--slp-vectorizer",
          "--cross-dso-cfi",
          "--functionattrs",
          "--loop-versioning-licm",
          "--coro-split",
          "--post-inline-ee-instrument",
          "--attributor",
          "--loop-vectorize",
          "--inline",
          "--constprop",
          "--speculative-execution",
          "--early-cse-memssa",
          "--sccp",
          "--loop-interchange",
          "--float2int",
          "--bdce",
          "--lower-widenable-condition",
          "--simplifycfg",
          "--dce",
          "--instnamer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--mergefunc",
      "--coro-elide",
      "--slp-vectorizer",
      "--cross-dso-cfi",
      "--functionattrs",
      "--loop-versioning-licm",
      "--coro-split",
      "--post-inline-ee-instrument",
      "--attributor",
      "--loop-vectorize",
      "--inline",
      "--constprop",
      "--speculative-execution",
      "--early-cse-memssa",
      "--sccp",
      "--loop-interchange",
      "--float2int",
      "--bdce",
      "--lower-widenable-condition",
      "--simplifycfg",
      "--dce",
      "--instnamer"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}