{
  "program_id": "github-v0_45106.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 1,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 25,
    "const32Bit": 52,
    "const64Bit": 5,
    "numConstZeroes": 15,
    "numConstOnes": 22,
    "UncondBranches": 13,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 16,
    "NumAndInst": 8,
    "BlockMid": 3,
    "BlockLow": 26,
    "NumBitCastInst": 0,
    "NumBrInst": 19,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 6,
    "NumLShrInst": 7,
    "NumLoadInst": 40,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 27,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 6,
    "NumZExtInst": 4,
    "TotalBlocks": 29,
    "TotalInsts": 178,
    "TotalMemInst": 105,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 70
  },
  "baseline_oz_instcount": 172,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--instsimplify",
    "--sroa",
    "--gvn-hoist",
    "--correlated-propagation",
    "--gvn-hoist",
    "--loop-rotate",
    "--gvn",
    "--correlated-propagation",
    "--ipsccp",
    "--lower-expect",
    "--sccp",
    "--loop-deletion",
    "--instcombine",
    "--licm",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--prune-eh",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-split",
          "--rpo-functionattrs",
          "--pgo-memop-opt",
          "--barrier",
          "--libcalls-shrinkwrap",
          "--lower-widenable-condition",
          "--lcssa",
          "-loop-reduce",
          "--instsimplify",
          "--strip-nondebug",
          "--simple-loop-unswitch",
          "--float2int",
          "--name-anon-globals",
          "--loop-rotate",
          "--slsr",
          "--aggressive-instcombine",
          "--lower-constant-intrinsics",
          "--loop-deletion",
          "--load-store-vectorizer",
          "--gvn-hoist",
          "--inferattrs",
          "--reassociate",
          "--coro-elide",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-split",
      "--rpo-functionattrs",
      "--pgo-memop-opt",
      "--barrier",
      "--libcalls-shrinkwrap",
      "--lower-widenable-condition",
      "--lcssa",
      "-loop-reduce",
      "--instsimplify",
      "--strip-nondebug",
      "--simple-loop-unswitch",
      "--float2int",
      "--name-anon-globals",
      "--loop-rotate",
      "--slsr",
      "--aggressive-instcombine",
      "--lower-constant-intrinsics",
      "--loop-deletion",
      "--load-store-vectorizer",
      "--gvn-hoist",
      "--inferattrs",
      "--reassociate",
      "--coro-elide",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}