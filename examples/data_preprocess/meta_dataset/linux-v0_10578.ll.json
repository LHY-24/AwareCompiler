{
  "program_id": "linux-v0_10578.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 52,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 13,
    "oneSuccessor": 47,
    "twoPred": 17,
    "twoPredOneSuc": 6,
    "twoEach": 7,
    "twoSuccessor": 23,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 91,
    "BeginPhi": 0,
    "BranchCount": 70,
    "returnInt": 16,
    "CriticalCount": 8,
    "NumEdges": 93,
    "const32Bit": 270,
    "const64Bit": 21,
    "numConstZeroes": 116,
    "numConstOnes": 106,
    "UncondBranches": 47,
    "binaryConstArg": 46,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 66,
    "NumAndInst": 17,
    "BlockMid": 11,
    "BlockLow": 80,
    "NumBitCastInst": 10,
    "NumBrInst": 70,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 71,
    "NumICmpInst": 28,
    "NumLShrInst": 4,
    "NumLoadInst": 177,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 99,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 10,
    "NumZExtInst": 9,
    "TotalBlocks": 91,
    "TotalInsts": 669,
    "TotalMemInst": 465,
    "TotalFuncs": 39,
    "ArgsPhi": 0,
    "testUnary": 282
  },
  "baseline_oz_instcount": 669,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--jump-threading",
    "--reassociate",
    "--reassociate",
    "--bdce",
    "--correlated-propagation",
    "--gvn",
    "--aggressive-instcombine",
    "--gvn",
    "--indvars",
    "--gvn",
    "--sroa",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-expect",
          "--loop-data-prefetch",
          "--indvars",
          "--libcalls-shrinkwrap",
          "--name-anon-globals",
          "--aggressive-instcombine",
          "--sroa",
          "--partially-inline-libcalls",
          "--prune-eh",
          "--constprop",
          "--redundant-dbg-inst-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-expect",
      "--loop-data-prefetch",
      "--indvars",
      "--libcalls-shrinkwrap",
      "--name-anon-globals",
      "--aggressive-instcombine",
      "--sroa",
      "--partially-inline-libcalls",
      "--prune-eh",
      "--constprop",
      "--redundant-dbg-inst-elim"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}