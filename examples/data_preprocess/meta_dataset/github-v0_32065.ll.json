{
  "program_id": "github-v0_32065.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 1,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 0,
    "oneSuccessor": 1,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 2,
    "BeginPhi": 2,
    "BranchCount": 3,
    "returnInt": 1,
    "CriticalCount": 3,
    "NumEdges": 5,
    "const32Bit": 3,
    "const64Bit": 2,
    "numConstZeroes": 2,
    "numConstOnes": 1,
    "UncondBranches": 1,
    "binaryConstArg": 3,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 4,
    "NumBitCastInst": 0,
    "NumBrInst": 3,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 1,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 1,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 1,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 4,
    "TotalInsts": 24,
    "TotalMemInst": 5,
    "TotalFuncs": 2,
    "ArgsPhi": 6,
    "testUnary": 4
  },
  "baseline_oz_instcount": 25,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--instcombine",
    "--slp-vectorizer",
    "--mldst-motion",
    "--instsimplify",
    "--dse",
    "--simplifycfg",
    "--ipsccp",
    "--simplifycfg",
    "--inline",
    "--die",
    "--mem2reg",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--die",
          "--always-inline",
          "--break-crit-edges",
          "--lower-widenable-condition",
          "--loop-versioning",
          "--libcalls-shrinkwrap",
          "--functionattrs",
          "--early-cse",
          "--float2int",
          "--loop-instsimplify",
          "--lower-matrix-intrinsics",
          "--dse",
          "--bdce",
          "--simplifycfg",
          "--attributor",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--die",
      "--always-inline",
      "--break-crit-edges",
      "--lower-widenable-condition",
      "--loop-versioning",
      "--libcalls-shrinkwrap",
      "--functionattrs",
      "--early-cse",
      "--float2int",
      "--loop-instsimplify",
      "--lower-matrix-intrinsics",
      "--dse",
      "--bdce",
      "--simplifycfg",
      "--attributor",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+8.0%"
  }
}