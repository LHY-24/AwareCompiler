{
  "program_id": "linux-v0_8968.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 5,
    "oneSuccessor": 18,
    "twoPred": 4,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 3,
    "CriticalCount": 2,
    "NumEdges": 30,
    "const32Bit": 37,
    "const64Bit": 9,
    "numConstZeroes": 15,
    "numConstOnes": 15,
    "UncondBranches": 18,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 14,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 24,
    "NumBitCastInst": 2,
    "NumBrInst": 24,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 26,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 21,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 27,
    "TotalInsts": 123,
    "TotalMemInst": 79,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 46
  },
  "baseline_oz_instcount": 121,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--load-store-vectorizer",
    "--dce",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--load-store-vectorizer",
    "--instsimplify",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--inline",
    "--simplifycfg",
    "-loop-reduce",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--strip-nondebug",
          "--cross-dso-cfi",
          "--loop-idiom",
          "--ipsccp",
          "--irce",
          "--strip",
          "--loop-simplify",
          "--redundant-dbg-inst-elim",
          "--ee-instrument",
          "--mergefunc",
          "--loop-distribute",
          "--early-cse",
          "--flattencfg",
          "--mldst-motion",
          "--loop-load-elim",
          "--reg2mem",
          "--constprop",
          "--loop-guard-widening",
          "--inferattrs",
          "--loop-versioning-licm",
          "--deadargelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--strip-nondebug",
      "--cross-dso-cfi",
      "--loop-idiom",
      "--ipsccp",
      "--irce",
      "--strip",
      "--loop-simplify",
      "--redundant-dbg-inst-elim",
      "--ee-instrument",
      "--mergefunc",
      "--loop-distribute",
      "--early-cse",
      "--flattencfg",
      "--mldst-motion",
      "--loop-load-elim",
      "--reg2mem",
      "--constprop",
      "--loop-guard-widening",
      "--inferattrs",
      "--loop-versioning-licm",
      "--deadargelim"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}