{
  "program_id": "github-v0_18176.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 2,
    "oneSuccessor": 15,
    "twoPred": 2,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 1,
    "CriticalCount": 1,
    "NumEdges": 31,
    "const32Bit": 98,
    "const64Bit": 0,
    "numConstZeroes": 41,
    "numConstOnes": 20,
    "UncondBranches": 15,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 72,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 27,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 20,
    "TotalInsts": 190,
    "TotalMemInst": 145,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 86
  },
  "baseline_oz_instcount": 190,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--reassociate",
    "--licm",
    "--globalopt",
    "--aggressive-instcombine",
    "--instcombine",
    "--prune-eh",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--separate-const-offset-from-gep",
          "--adce",
          "--loop-unroll-and-jam",
          "--sink",
          "--aggressive-instcombine",
          "--libcalls-shrinkwrap",
          "--inject-tli-mappings",
          "--tailcallelim",
          "--lower-widenable-condition",
          "--loop-data-prefetch",
          "--redundant-dbg-inst-elim",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--separate-const-offset-from-gep",
      "--adce",
      "--loop-unroll-and-jam",
      "--sink",
      "--aggressive-instcombine",
      "--libcalls-shrinkwrap",
      "--inject-tli-mappings",
      "--tailcallelim",
      "--lower-widenable-condition",
      "--loop-data-prefetch",
      "--redundant-dbg-inst-elim",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}