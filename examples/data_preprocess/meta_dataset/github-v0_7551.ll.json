{
  "program_id": "github-v0_7551.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 2,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 22,
    "const32Bit": 32,
    "const64Bit": 29,
    "numConstZeroes": 29,
    "numConstOnes": 21,
    "UncondBranches": 10,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 16,
    "NumBitCastInst": 4,
    "NumBrInst": 16,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 6,
    "NumLShrInst": 1,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 20,
    "TotalInsts": 130,
    "TotalMemInst": 82,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 52
  },
  "baseline_oz_instcount": 130,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--jump-threading",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--early-cse",
    "--adce",
    "--aggressive-instcombine",
    "--mem2reg",
    "--instsimplify",
    "--dce",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--dse",
    "--aggressive-instcombine",
    "--die",
    "--gvn-hoist",
    "--loop-rotate",
    "--early-cse",
    "--instcombine",
    "--sroa",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--lower-constant-intrinsics",
          "--globalopt",
          "--lowerinvoke",
          "--loop-interchange",
          "--ipsccp",
          "--dce",
          "--div-rem-pairs",
          "--loop-sink",
          "--aggressive-instcombine",
          "--speculative-execution"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--lower-constant-intrinsics",
      "--globalopt",
      "--lowerinvoke",
      "--loop-interchange",
      "--ipsccp",
      "--dce",
      "--div-rem-pairs",
      "--loop-sink",
      "--aggressive-instcombine",
      "--speculative-execution"
    ],
    "performance_vs_Oz": "+3.1%"
  }
}