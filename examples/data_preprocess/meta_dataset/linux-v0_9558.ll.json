{
  "program_id": "linux-v0_9558.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 77,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 15,
    "oneSuccessor": 75,
    "twoPred": 17,
    "twoPredOneSuc": 9,
    "twoEach": 0,
    "twoSuccessor": 21,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 131,
    "BeginPhi": 0,
    "BranchCount": 96,
    "returnInt": 27,
    "CriticalCount": 6,
    "NumEdges": 122,
    "const32Bit": 319,
    "const64Bit": 30,
    "numConstZeroes": 134,
    "numConstOnes": 191,
    "UncondBranches": 75,
    "binaryConstArg": 23,
    "NumAShrInst": 2,
    "NumAddInst": 10,
    "NumAllocaInst": 134,
    "NumAndInst": 2,
    "BlockMid": 16,
    "BlockLow": 115,
    "NumBitCastInst": 15,
    "NumBrInst": 96,
    "NumCallInst": 75,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 33,
    "NumLShrInst": 2,
    "NumLoadInst": 231,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 34,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 147,
    "NumSubInst": 8,
    "NumTruncInst": 1,
    "NumXorInst": 6,
    "NumZExtInst": 16,
    "TotalBlocks": 131,
    "TotalInsts": 899,
    "TotalMemInst": 655,
    "TotalFuncs": 44,
    "ArgsPhi": 0,
    "testUnary": 409
  },
  "baseline_oz_instcount": 899,
  "knowledge_base_entry": [
    "--float2int",
    "--newgvn",
    "--gvn",
    "--ipsccp",
    "--loop-simplifycfg",
    "--correlated-propagation",
    "--jump-threading",
    "--loop-instsimplify",
    "--dse",
    "--inline",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--flattencfg",
    "--loop-simplifycfg",
    "--correlated-propagation",
    "--jump-threading",
    "--loop-instsimplify",
    "--dse",
    "--inline",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--licm",
    "--instsimplify",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--ipsccp",
    "--loop-instsimplify",
    "--instcombine",
    "--dce",
    "--sccp",
    "--dce",
    "--mergefunc",
    "--aggressive-instcombine",
    "--early-cse",
    "--ipsccp",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--bdce",
    "--mem2reg",
    "--instsimplify",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--flattencfg",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--slp-vectorizer",
    "--sroa",
    "--newgvn",
    "--loop-deletion",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globaldce",
          "--mldst-motion",
          "--mergefunc",
          "--aggressive-instcombine",
          "--scalarizer",
          "--dse",
          "--loop-deletion",
          "--inferattrs",
          "--reassociate",
          "--redundant-dbg-inst-elim",
          "--hotcoldsplit",
          "--mergereturn",
          "--early-cse",
          "--slp-vectorizer",
          "--simple-loop-unswitch",
          "--correlated-propagation",
          "--loop-rotate",
          "--coro-cleanup",
          "--simplifycfg",
          "--speculative-execution",
          "--loop-load-elim",
          "--loop-versioning-licm",
          "--forceattrs",
          "--sccp",
          "--barrier",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globaldce",
      "--mldst-motion",
      "--mergefunc",
      "--aggressive-instcombine",
      "--scalarizer",
      "--dse",
      "--loop-deletion",
      "--inferattrs",
      "--reassociate",
      "--redundant-dbg-inst-elim",
      "--hotcoldsplit",
      "--mergereturn",
      "--early-cse",
      "--slp-vectorizer",
      "--simple-loop-unswitch",
      "--correlated-propagation",
      "--loop-rotate",
      "--coro-cleanup",
      "--simplifycfg",
      "--speculative-execution",
      "--loop-load-elim",
      "--loop-versioning-licm",
      "--forceattrs",
      "--sccp",
      "--barrier",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}