{
  "program_id": "github-v0_35237.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 9,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 19,
    "const32Bit": 15,
    "const64Bit": 2,
    "numConstZeroes": 6,
    "numConstOnes": 7,
    "UncondBranches": 9,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 15,
    "NumBitCastInst": 0,
    "NumBrInst": 14,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 11,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 15,
    "TotalInsts": 62,
    "TotalMemInst": 38,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 23
  },
  "baseline_oz_instcount": 63,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--simplifycfg",
    "--dse",
    "--newgvn",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--separate-const-offset-from-gep",
          "--loweratomic",
          "--mldst-motion",
          "--sccp",
          "--alignment-from-assumptions",
          "--strip-dead-prototypes",
          "--strip-debug-declare",
          "--lcssa",
          "--rpo-functionattrs",
          "--constmerge",
          "--ipconstprop",
          "--guard-widening",
          "--lower-widenable-condition",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--separate-const-offset-from-gep",
      "--loweratomic",
      "--mldst-motion",
      "--sccp",
      "--alignment-from-assumptions",
      "--strip-dead-prototypes",
      "--strip-debug-declare",
      "--lcssa",
      "--rpo-functionattrs",
      "--constmerge",
      "--ipconstprop",
      "--guard-widening",
      "--lower-widenable-condition",
      "--adce"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}