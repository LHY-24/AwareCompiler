{
  "program_id": "poj104-v1_91_845.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 7,
    "BeginPhi": 0,
    "BranchCount": 4,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 5,
    "const32Bit": 13,
    "const64Bit": 21,
    "numConstZeroes": 12,
    "numConstOnes": 11,
    "UncondBranches": 3,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 4,
    "NumBitCastInst": 10,
    "NumBrInst": 4,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 7,
    "TotalInsts": 85,
    "TotalMemInst": 56,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 37
  },
  "baseline_oz_instcount": 39,
  "knowledge_base_entry": [
    "--instsimplify",
    "--ipsccp",
    "--loop-simplifycfg",
    "--instcombine",
    "--mergefunc",
    "--instcombine",
    "--load-store-vectorizer",
    "--adce",
    "--ipsccp",
    "--correlated-propagation",
    "--newgvn",
    "--inline",
    "--licm",
    "--gvn",
    "--ipsccp",
    "--reassociate",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--mem2reg",
    "--globalopt",
    "--reassociate",
    "--early-cse-memssa",
    "--gvn",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--die",
    "--sroa",
    "--instsimplify",
    "--licm",
    "--flattencfg",
    "--globalopt",
    "--early-cse-memssa",
    "--early-cse",
    "-loop-reduce",
    "--slsr",
    "--gvn-hoist",
    "--gvn-hoist",
    "--gvn",
    "--mldst-motion",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--called-value-propagation",
          "--jump-threading",
          "--instcombine",
          "--loop-unroll-and-jam",
          "--callsite-splitting",
          "--simplifycfg",
          "--sroa",
          "--gvn",
          "--ipsccp",
          "--licm",
          "--tailcallelim",
          "--flattencfg",
          "--loop-vectorize",
          "--div-rem-pairs",
          "--barrier",
          "--lowerinvoke",
          "--slp-vectorizer",
          "--loop-simplifycfg",
          "--prune-eh",
          "--loop-distribute",
          "--functionattrs",
          "--guard-widening",
          "-loop-reduce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--called-value-propagation",
      "--jump-threading",
      "--instcombine",
      "--loop-unroll-and-jam",
      "--callsite-splitting",
      "--simplifycfg",
      "--sroa",
      "--gvn",
      "--ipsccp",
      "--licm",
      "--tailcallelim",
      "--flattencfg",
      "--loop-vectorize",
      "--div-rem-pairs",
      "--barrier",
      "--lowerinvoke",
      "--slp-vectorizer",
      "--loop-simplifycfg",
      "--prune-eh",
      "--loop-distribute",
      "--functionattrs",
      "--guard-widening",
      "-loop-reduce"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}