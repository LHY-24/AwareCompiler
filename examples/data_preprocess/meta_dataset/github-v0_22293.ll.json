{
  "program_id": "github-v0_22293.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 28,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 12,
    "oneSuccessor": 26,
    "twoPred": 13,
    "twoPredOneSuc": 8,
    "twoEach": 4,
    "twoSuccessor": 17,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 0,
    "BranchCount": 43,
    "returnInt": 4,
    "CriticalCount": 10,
    "NumEdges": 60,
    "const32Bit": 56,
    "const64Bit": 0,
    "numConstZeroes": 20,
    "numConstOnes": 28,
    "UncondBranches": 26,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 25,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 44,
    "NumBitCastInst": 0,
    "NumBrInst": 43,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 45,
    "TotalInsts": 189,
    "TotalMemInst": 113,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 78
  },
  "baseline_oz_instcount": 192,
  "knowledge_base_entry": [
    "--early-cse",
    "--jump-threading",
    "--early-cse-memssa",
    "--adce",
    "--sroa",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--dse",
    "--adce",
    "--instsimplify",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--strip-dead-prototypes",
          "--aggressive-instcombine",
          "--memcpyopt",
          "--inline",
          "--gvn-hoist",
          "--lower-widenable-condition",
          "--instsimplify",
          "--cross-dso-cfi",
          "--mldst-motion",
          "--inferattrs",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--strip-dead-prototypes",
      "--aggressive-instcombine",
      "--memcpyopt",
      "--inline",
      "--gvn-hoist",
      "--lower-widenable-condition",
      "--instsimplify",
      "--cross-dso-cfi",
      "--mldst-motion",
      "--inferattrs",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}