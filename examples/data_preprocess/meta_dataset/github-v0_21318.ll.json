{
  "program_id": "github-v0_21318.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 1,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 0,
    "oneSuccessor": 1,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 4,
    "BeginPhi": 1,
    "BranchCount": 3,
    "returnInt": 44,
    "CriticalCount": 3,
    "NumEdges": 5,
    "const32Bit": 57,
    "const64Bit": 16,
    "numConstZeroes": 27,
    "numConstOnes": 21,
    "UncondBranches": 1,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 0,
    "NumAndInst": 3,
    "BlockMid": 2,
    "BlockLow": 3,
    "NumBitCastInst": 0,
    "NumBrInst": 3,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 5,
    "NumMulInst": 11,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 5,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 4,
    "TotalBlocks": 5,
    "TotalInsts": 112,
    "TotalMemInst": 66,
    "TotalFuncs": 9,
    "ArgsPhi": 2,
    "testUnary": 11
  },
  "baseline_oz_instcount": 136,
  "knowledge_base_entry": [
    "--inferattrs",
    "--gvn",
    "--sroa",
    "--ipsccp",
    "--loop-deletion",
    "--instcombine",
    "--dce",
    "--aggressive-instcombine",
    "--loweratomic",
    "--globalopt",
    "--correlated-propagation",
    "--instcombine",
    "--prune-eh",
    "--newgvn",
    "--globalopt",
    "--early-cse-memssa",
    "--loop-reroll",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--indvars",
    "--loop-reroll",
    "--early-cse-memssa",
    "--adce",
    "--slp-vectorizer",
    "--dse",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--simplifycfg",
    "--globalopt",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--prune-eh",
    "--newgvn",
    "--globalopt",
    "--early-cse-memssa",
    "--loop-reroll",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--mem2reg",
    "--inline",
    "--mem2reg",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--indvars",
    "--loop-reroll",
    "--early-cse-memssa",
    "--adce",
    "--slp-vectorizer",
    "--dse",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--simplifycfg",
    "--globalopt",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--bdce",
    "--instcombine",
    "--mem2reg",
    "--elim-avail-extern",
    "--instsimplify",
    "--dce",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--early-cse",
    "--loop-fusion",
    "--instcombine",
    "--loop-reroll",
    "--memcpyopt",
    "--simplifycfg",
    "--adce",
    "--dse",
    "--slp-vectorizer",
    "--mem2reg",
    "--inline",
    "--bdce",
    "--inline",
    "--mem2reg",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-reroll",
          "--loop-predication",
          "--hotcoldsplit",
          "--rewrite-statepoints-for-gc",
          "--callsite-splitting",
          "--float2int",
          "--inject-tli-mappings",
          "--jump-threading",
          "--loop-unroll-and-jam",
          "--alignment-from-assumptions",
          "--coro-split",
          "--lower-guard-intrinsic",
          "--loop-simplifycfg",
          "--sroa",
          "--loop-deletion",
          "--lower-expect",
          "--simplifycfg",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+24.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-reroll",
      "--loop-predication",
      "--hotcoldsplit",
      "--rewrite-statepoints-for-gc",
      "--callsite-splitting",
      "--float2int",
      "--inject-tli-mappings",
      "--jump-threading",
      "--loop-unroll-and-jam",
      "--alignment-from-assumptions",
      "--coro-split",
      "--lower-guard-intrinsic",
      "--loop-simplifycfg",
      "--sroa",
      "--loop-deletion",
      "--lower-expect",
      "--simplifycfg",
      "--dce"
    ],
    "performance_vs_Oz": "+24.3%"
  }
}