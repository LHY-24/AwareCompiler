{
  "program_id": "linux-v0_13266.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 36,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 7,
    "oneSuccessor": 31,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 15,
    "morePreds": 6,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 4,
    "BranchCount": 46,
    "returnInt": 4,
    "CriticalCount": 10,
    "NumEdges": 69,
    "const32Bit": 77,
    "const64Bit": 4,
    "numConstZeroes": 18,
    "numConstOnes": 50,
    "UncondBranches": 31,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 35,
    "NumAndInst": 2,
    "BlockMid": 3,
    "BlockLow": 59,
    "NumBitCastInst": 0,
    "NumBrInst": 46,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 19,
    "NumLShrInst": 1,
    "NumLoadInst": 69,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 4,
    "NumRetInst": 14,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 49,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 8,
    "NumZExtInst": 9,
    "TotalBlocks": 62,
    "TotalInsts": 310,
    "TotalMemInst": 186,
    "TotalFuncs": 16,
    "ArgsPhi": 10,
    "testUnary": 126
  },
  "baseline_oz_instcount": 310,
  "knowledge_base_entry": [
    "--mergefunc",
    "--gvn",
    "--sroa",
    "--adce",
    "--bdce",
    "--lower-expect",
    "--licm",
    "--simplifycfg",
    "--jump-threading",
    "--aggressive-instcombine",
    "--globalopt",
    "--gvn",
    "--newgvn",
    "--early-cse-memssa",
    "--instcombine",
    "--memcpyopt",
    "--gvn",
    "--early-cse",
    "--loop-instsimplify",
    "--gvn",
    "--lower-constant-intrinsics",
    "--licm",
    "--inline",
    "--nary-reassociate",
    "--mem2reg",
    "--loop-simplifycfg",
    "--prune-eh",
    "--instsimplify",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simple-loop-unswitch",
          "--sccp",
          "--forceattrs",
          "--mldst-motion",
          "--cross-dso-cfi",
          "--mergefunc",
          "--reassociate",
          "--lcssa",
          "--loop-fusion",
          "--indvars",
          "--loop-vectorize",
          "--sroa",
          "--lower-constant-intrinsics",
          "--name-anon-globals",
          "--deadargelim",
          "--simplifycfg",
          "--guard-widening",
          "--called-value-propagation",
          "--globalopt",
          "--load-store-vectorizer",
          "--globalsplit",
          "--slsr",
          "--mem2reg",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simple-loop-unswitch",
      "--sccp",
      "--forceattrs",
      "--mldst-motion",
      "--cross-dso-cfi",
      "--mergefunc",
      "--reassociate",
      "--lcssa",
      "--loop-fusion",
      "--indvars",
      "--loop-vectorize",
      "--sroa",
      "--lower-constant-intrinsics",
      "--name-anon-globals",
      "--deadargelim",
      "--simplifycfg",
      "--guard-widening",
      "--called-value-propagation",
      "--globalopt",
      "--load-store-vectorizer",
      "--globalsplit",
      "--slsr",
      "--mem2reg",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}