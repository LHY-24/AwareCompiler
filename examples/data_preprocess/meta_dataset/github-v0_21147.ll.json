{
  "program_id": "github-v0_21147.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 13,
    "onePred": 30,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 5,
    "oneSuccessor": 28,
    "twoPred": 32,
    "twoPredOneSuc": 3,
    "twoEach": 26,
    "twoSuccessor": 36,
    "morePreds": 2,
    "BB03Phi": 13,
    "BBHiPhi": 2,
    "BBNoPhi": 53,
    "BeginPhi": 15,
    "BranchCount": 64,
    "returnInt": 4,
    "CriticalCount": 42,
    "NumEdges": 100,
    "const32Bit": 80,
    "const64Bit": 53,
    "numConstZeroes": 49,
    "numConstOnes": 27,
    "UncondBranches": 28,
    "binaryConstArg": 64,
    "NumAShrInst": 11,
    "NumAddInst": 54,
    "NumAllocaInst": 0,
    "NumAndInst": 4,
    "BlockMid": 5,
    "BlockLow": 63,
    "NumBitCastInst": 6,
    "NumBrInst": 64,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 41,
    "NumLShrInst": 0,
    "NumLoadInst": 45,
    "NumMulInst": 19,
    "NumOrInst": 2,
    "NumPHIInst": 27,
    "NumRetInst": 4,
    "NumSExtInst": 19,
    "NumSelectInst": 7,
    "NumShlInst": 13,
    "NumStoreInst": 18,
    "NumSubInst": 8,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 68,
    "TotalInsts": 513,
    "TotalMemInst": 152,
    "TotalFuncs": 11,
    "ArgsPhi": 55,
    "testUnary": 80
  },
  "baseline_oz_instcount": 506,
  "knowledge_base_entry": [
    "--mergefunc",
    "--dce",
    "--mergefunc",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--lower-expect",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--memcpyopt",
    "--loop-reroll",
    "--instcombine",
    "--adce",
    "--instsimplify",
    "--mergefunc",
    "--early-cse-memssa",
    "--inline",
    "--mldst-motion",
    "--jump-threading",
    "--loop-deletion",
    "--gvn-hoist",
    "--prune-eh",
    "--instcombine",
    "--globalopt",
    "--newgvn",
    "--ipsccp",
    "--globalopt",
    "--newgvn",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--mem2reg",
    "--simplifycfg",
    "--ipsccp",
    "--globalopt",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--lower-expect",
    "--instsimplify",
    "--bdce",
    "--sroa",
    "--lower-expect",
    "--mergefunc",
    "--slp-vectorizer",
    "--adce",
    "--simplifycfg",
    "--newgvn",
    "--ipsccp",
    "--globalopt",
    "--newgvn",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--mem2reg",
    "--instsimplify",
    "--aggressive-instcombine",
    "--prune-eh",
    "--mem2reg",
    "--memcpyopt",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--mem2reg",
    "--sccp",
    "--globalopt",
    "--ipsccp",
    "--jump-threading",
    "--early-cse-memssa",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse-memssa",
          "--lower-expect",
          "--coro-early",
          "--functionattrs",
          "--prune-eh",
          "--globaldce",
          "--coro-cleanup",
          "--lower-widenable-condition",
          "--flattencfg",
          "--bdce",
          "--instsimplify",
          "--separate-const-offset-from-gep",
          "--name-anon-globals",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse-memssa",
      "--lower-expect",
      "--coro-early",
      "--functionattrs",
      "--prune-eh",
      "--globaldce",
      "--coro-cleanup",
      "--lower-widenable-condition",
      "--flattencfg",
      "--bdce",
      "--instsimplify",
      "--separate-const-offset-from-gep",
      "--name-anon-globals",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}