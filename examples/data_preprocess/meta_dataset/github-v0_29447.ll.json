{
  "program_id": "github-v0_29447.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 47,
    "const64Bit": 47,
    "numConstZeroes": 49,
    "numConstOnes": 29,
    "UncondBranches": 15,
    "binaryConstArg": 27,
    "NumAShrInst": 9,
    "NumAddInst": 3,
    "NumAllocaInst": 11,
    "NumAndInst": 10,
    "BlockMid": 5,
    "BlockLow": 22,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 18,
    "NumSubInst": 0,
    "NumTruncInst": 13,
    "NumXorInst": 0,
    "NumZExtInst": 18,
    "TotalBlocks": 27,
    "TotalInsts": 198,
    "TotalMemInst": 92,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 82
  },
  "baseline_oz_instcount": 198,
  "knowledge_base_entry": [
    "--instcombine",
    "-loop-reduce",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--early-cse",
    "--sroa",
    "--early-cse",
    "--die",
    "--sccp",
    "--licm",
    "--sroa",
    "--early-cse",
    "--die",
    "--aggressive-instcombine",
    "--globalopt",
    "--sroa",
    "--early-cse",
    "--sccp",
    "--loop-deletion",
    "--newgvn",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--inject-tli-mappings",
          "--gvn-hoist",
          "--coro-early",
          "--partial-inliner",
          "--globalopt",
          "--aggressive-instcombine",
          "--loop-idiom",
          "--loop-load-elim",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--inject-tli-mappings",
      "--gvn-hoist",
      "--coro-early",
      "--partial-inliner",
      "--globalopt",
      "--aggressive-instcombine",
      "--loop-idiom",
      "--loop-load-elim",
      "--die"
    ],
    "performance_vs_Oz": "+6.1%"
  }
}