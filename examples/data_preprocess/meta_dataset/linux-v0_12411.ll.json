{
  "program_id": "linux-v0_12411.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 58,
    "onePredOneSuc": 50,
    "onePredTwoSuc": 3,
    "oneSuccessor": 57,
    "twoPred": 10,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 12,
    "morePreds": 4,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 101,
    "BeginPhi": 3,
    "BranchCount": 69,
    "returnInt": 32,
    "CriticalCount": 7,
    "NumEdges": 96,
    "const32Bit": 376,
    "const64Bit": 28,
    "numConstZeroes": 137,
    "numConstOnes": 136,
    "UncondBranches": 57,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 120,
    "NumAndInst": 12,
    "BlockMid": 18,
    "BlockLow": 86,
    "NumBitCastInst": 28,
    "NumBrInst": 69,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 104,
    "NumICmpInst": 16,
    "NumLShrInst": 2,
    "NumLoadInst": 304,
    "NumMulInst": 6,
    "NumOrInst": 4,
    "NumPHIInst": 3,
    "NumRetInst": 32,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 165,
    "NumSubInst": 4,
    "NumTruncInst": 12,
    "NumXorInst": 2,
    "NumZExtInst": 18,
    "TotalBlocks": 104,
    "TotalInsts": 995,
    "TotalMemInst": 756,
    "TotalFuncs": 43,
    "ArgsPhi": 6,
    "testUnary": 493
  },
  "baseline_oz_instcount": 995,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--early-cse",
    "--dse",
    "--die",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--simplifycfg",
    "--correlated-propagation",
    "--reassociate",
    "--dce",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--redundant-dbg-inst-elim",
          "--globalsplit",
          "--loop-simplify",
          "--slsr",
          "--alignment-from-assumptions",
          "--ee-instrument",
          "--load-store-vectorizer",
          "--loop-predication",
          "--loop-vectorize",
          "--insert-gcov-profiling",
          "--speculative-execution",
          "--licm",
          "--memcpyopt",
          "--inject-tli-mappings",
          "--mergefunc",
          "--libcalls-shrinkwrap",
          "--aggressive-instcombine",
          "--loweratomic",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--redundant-dbg-inst-elim",
      "--globalsplit",
      "--loop-simplify",
      "--slsr",
      "--alignment-from-assumptions",
      "--ee-instrument",
      "--load-store-vectorizer",
      "--loop-predication",
      "--loop-vectorize",
      "--insert-gcov-profiling",
      "--speculative-execution",
      "--licm",
      "--memcpyopt",
      "--inject-tli-mappings",
      "--mergefunc",
      "--libcalls-shrinkwrap",
      "--aggressive-instcombine",
      "--loweratomic",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}