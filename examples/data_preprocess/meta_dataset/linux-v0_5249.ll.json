{
  "program_id": "linux-v0_5249.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 2,
    "oneSuccessor": 27,
    "twoPred": 15,
    "twoPredOneSuc": 3,
    "twoEach": 8,
    "twoSuccessor": 15,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 0,
    "BranchCount": 42,
    "returnInt": 5,
    "CriticalCount": 8,
    "NumEdges": 60,
    "const32Bit": 290,
    "const64Bit": 7,
    "numConstZeroes": 109,
    "numConstOnes": 66,
    "UncondBranches": 27,
    "binaryConstArg": 52,
    "NumAShrInst": 4,
    "NumAddInst": 7,
    "NumAllocaInst": 47,
    "NumAndInst": 19,
    "BlockMid": 13,
    "BlockLow": 40,
    "NumBitCastInst": 4,
    "NumBrInst": 42,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 94,
    "NumICmpInst": 15,
    "NumLShrInst": 2,
    "NumLoadInst": 179,
    "NumMulInst": 3,
    "NumOrInst": 10,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 14,
    "NumStoreInst": 74,
    "NumSubInst": 12,
    "NumTruncInst": 9,
    "NumXorInst": 4,
    "NumZExtInst": 40,
    "TotalBlocks": 53,
    "TotalInsts": 622,
    "TotalMemInst": 417,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 288
  },
  "baseline_oz_instcount": 622,
  "knowledge_base_entry": [
    "--mem2reg",
    "--ipsccp",
    "--aggressive-instcombine",
    "--loweratomic",
    "--instcombine",
    "--early-cse-memssa",
    "--loop-fusion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--constprop",
          "--slsr",
          "--loop-instsimplify",
          "--mldst-motion",
          "--early-cse",
          "--called-value-propagation",
          "--loop-distribute",
          "--hotcoldsplit",
          "--instnamer",
          "--bdce",
          "--loop-simplify",
          "--loop-load-elim",
          "--sccp",
          "--nary-reassociate",
          "--loweratomic",
          "--lower-matrix-intrinsics",
          "--flattencfg",
          "--elim-avail-extern",
          "--alignment-from-assumptions",
          "--forceattrs",
          "--correlated-propagation",
          "--memcpyopt",
          "--functionattrs",
          "--aggressive-instcombine",
          "--scalarizer",
          "--jump-threading",
          "--loop-simplifycfg",
          "--lower-constant-intrinsics",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--constprop",
      "--slsr",
      "--loop-instsimplify",
      "--mldst-motion",
      "--early-cse",
      "--called-value-propagation",
      "--loop-distribute",
      "--hotcoldsplit",
      "--instnamer",
      "--bdce",
      "--loop-simplify",
      "--loop-load-elim",
      "--sccp",
      "--nary-reassociate",
      "--loweratomic",
      "--lower-matrix-intrinsics",
      "--flattencfg",
      "--elim-avail-extern",
      "--alignment-from-assumptions",
      "--forceattrs",
      "--correlated-propagation",
      "--memcpyopt",
      "--functionattrs",
      "--aggressive-instcombine",
      "--scalarizer",
      "--jump-threading",
      "--loop-simplifycfg",
      "--lower-constant-intrinsics",
      "--dse"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}