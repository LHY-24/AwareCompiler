{
  "program_id": "linux-v0_8922.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 60,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 13,
    "oneSuccessor": 55,
    "twoPred": 14,
    "twoPredOneSuc": 8,
    "twoEach": 0,
    "twoSuccessor": 21,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 85,
    "BeginPhi": 0,
    "BranchCount": 76,
    "returnInt": 12,
    "CriticalCount": 11,
    "NumEdges": 97,
    "const32Bit": 189,
    "const64Bit": 21,
    "numConstZeroes": 76,
    "numConstOnes": 88,
    "UncondBranches": 55,
    "binaryConstArg": 51,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 57,
    "NumAndInst": 19,
    "BlockMid": 6,
    "BlockLow": 79,
    "NumBitCastInst": 17,
    "NumBrInst": 76,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 27,
    "NumLShrInst": 9,
    "NumLoadInst": 124,
    "NumMulInst": 3,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 79,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 14,
    "NumZExtInst": 22,
    "TotalBlocks": 85,
    "TotalInsts": 548,
    "TotalMemInst": 328,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 235
  },
  "baseline_oz_instcount": 547,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--prune-eh",
    "--mem2reg",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--ipsccp",
    "--jump-threading",
    "--newgvn",
    "--licm",
    "--nary-reassociate",
    "--ipsccp",
    "--elim-avail-extern",
    "--mem2reg",
    "--aggressive-instcombine",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--argpromotion",
          "--bdce",
          "--prune-eh",
          "--aggressive-instcombine",
          "--simple-loop-unswitch",
          "--loop-unswitch",
          "--loop-simplify",
          "--load-store-vectorizer",
          "--instsimplify",
          "--lower-matrix-intrinsics",
          "--coro-cleanup",
          "--reassociate",
          "--deadargelim",
          "--cross-dso-cfi",
          "--ipsccp",
          "--loop-unroll",
          "--coro-split",
          "--callsite-splitting",
          "--post-inline-ee-instrument",
          "--functionattrs",
          "--dse",
          "--strip",
          "--loop-versioning-licm",
          "--libcalls-shrinkwrap",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--argpromotion",
      "--bdce",
      "--prune-eh",
      "--aggressive-instcombine",
      "--simple-loop-unswitch",
      "--loop-unswitch",
      "--loop-simplify",
      "--load-store-vectorizer",
      "--instsimplify",
      "--lower-matrix-intrinsics",
      "--coro-cleanup",
      "--reassociate",
      "--deadargelim",
      "--cross-dso-cfi",
      "--ipsccp",
      "--loop-unroll",
      "--coro-split",
      "--callsite-splitting",
      "--post-inline-ee-instrument",
      "--functionattrs",
      "--dse",
      "--strip",
      "--loop-versioning-licm",
      "--libcalls-shrinkwrap",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}