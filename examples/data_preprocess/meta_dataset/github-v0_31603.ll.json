{
  "program_id": "github-v0_31603.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 2,
    "onePred": 3,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 3,
    "BranchCount": 8,
    "returnInt": 4,
    "CriticalCount": 7,
    "NumEdges": 13,
    "const32Bit": 9,
    "const64Bit": 0,
    "numConstZeroes": 7,
    "numConstOnes": 2,
    "UncondBranches": 3,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 8,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 2,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 7,
    "NumRetInst": 1,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 2,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 50,
    "TotalMemInst": 14,
    "TotalFuncs": 7,
    "ArgsPhi": 14,
    "testUnary": 9
  },
  "baseline_oz_instcount": 54,
  "knowledge_base_entry": [
    "--jump-threading",
    "--adce",
    "--instsimplify",
    "--nary-reassociate",
    "--inline",
    "--loop-instsimplify",
    "--mergefunc",
    "--jump-threading",
    "--instsimplify",
    "--mldst-motion",
    "--gvn",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--gvn",
          "--constprop",
          "--sroa",
          "--mergereturn",
          "--bdce",
          "--inferattrs",
          "--dce",
          "--loop-data-prefetch",
          "--partially-inline-libcalls",
          "--lcssa",
          "--post-inline-ee-instrument",
          "--argpromotion",
          "--always-inline",
          "--coro-early",
          "--aggressive-instcombine",
          "--loop-interchange",
          "--correlated-propagation",
          "--newgvn",
          "--strip-debug-declare",
          "--jump-threading"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--gvn",
      "--constprop",
      "--sroa",
      "--mergereturn",
      "--bdce",
      "--inferattrs",
      "--dce",
      "--loop-data-prefetch",
      "--partially-inline-libcalls",
      "--lcssa",
      "--post-inline-ee-instrument",
      "--argpromotion",
      "--always-inline",
      "--coro-early",
      "--aggressive-instcombine",
      "--loop-interchange",
      "--correlated-propagation",
      "--newgvn",
      "--strip-debug-declare",
      "--jump-threading"
    ],
    "performance_vs_Oz": "+7.4%"
  }
}