{
  "program_id": "github-v0_10081.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 3,
    "BeginPhi": 1,
    "BranchCount": 3,
    "returnInt": 1,
    "CriticalCount": 0,
    "NumEdges": 4,
    "const32Bit": 2,
    "const64Bit": 4,
    "numConstZeroes": 1,
    "numConstOnes": 0,
    "UncondBranches": 2,
    "binaryConstArg": 4,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 4,
    "NumBitCastInst": 0,
    "NumBrInst": 3,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 5,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 1,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 4,
    "TotalInsts": 27,
    "TotalMemInst": 12,
    "TotalFuncs": 2,
    "ArgsPhi": 4,
    "testUnary": 6
  },
  "baseline_oz_instcount": 27,
  "knowledge_base_entry": [
    "--break-crit-edges",
    "--jump-threading",
    "--adce",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--newgvn",
    "--loop-instsimplify",
    "--simplifycfg",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn-hoist",
          "--bdce",
          "--early-cse",
          "--slp-vectorizer",
          "--loop-distribute",
          "--partial-inliner",
          "--indvars",
          "--loop-rotate",
          "--name-anon-globals",
          "--gvn",
          "--alignment-from-assumptions",
          "--attributor",
          "--dce",
          "--pgo-memop-opt",
          "--speculative-execution",
          "--dse",
          "--strip-nondebug",
          "--break-crit-edges",
          "--inferattrs",
          "--instcombine",
          "--loop-sink",
          "--ipsccp",
          "--strip-debug-declare",
          "--coro-early",
          "--separate-const-offset-from-gep",
          "--jump-threading",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+33.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn-hoist",
      "--bdce",
      "--early-cse",
      "--slp-vectorizer",
      "--loop-distribute",
      "--partial-inliner",
      "--indvars",
      "--loop-rotate",
      "--name-anon-globals",
      "--gvn",
      "--alignment-from-assumptions",
      "--attributor",
      "--dce",
      "--pgo-memop-opt",
      "--speculative-execution",
      "--dse",
      "--strip-nondebug",
      "--break-crit-edges",
      "--inferattrs",
      "--instcombine",
      "--loop-sink",
      "--ipsccp",
      "--strip-debug-declare",
      "--coro-early",
      "--separate-const-offset-from-gep",
      "--jump-threading",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+33.3%"
  }
}