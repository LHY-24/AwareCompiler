{
  "program_id": "linux-v0_6850.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 1,
    "oneSuccessor": 6,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 3,
    "CriticalCount": 6,
    "NumEdges": 17,
    "const32Bit": 90,
    "const64Bit": 1,
    "numConstZeroes": 39,
    "numConstOnes": 34,
    "UncondBranches": 6,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 28,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 12,
    "NumBitCastInst": 7,
    "NumBrInst": 10,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 66,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 2,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 38,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 3,
    "NumZExtInst": 8,
    "TotalBlocks": 19,
    "TotalInsts": 223,
    "TotalMemInst": 170,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 116
  },
  "baseline_oz_instcount": 223,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--early-cse-memssa",
    "--mldst-motion",
    "--licm",
    "--jump-threading",
    "--die",
    "--aggressive-instcombine",
    "--adce",
    "--elim-avail-extern",
    "--dse",
    "--dce",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--guard-widening",
          "--add-discriminators",
          "--name-anon-globals",
          "--memcpyopt",
          "--elim-avail-extern",
          "--strip",
          "--loop-rotate",
          "--loop-instsimplify",
          "--scalarizer",
          "--callsite-splitting",
          "--inferattrs",
          "--adce",
          "--ipconstprop",
          "--loop-predication",
          "--loop-versioning-licm",
          "--alignment-from-assumptions",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--guard-widening",
      "--add-discriminators",
      "--name-anon-globals",
      "--memcpyopt",
      "--elim-avail-extern",
      "--strip",
      "--loop-rotate",
      "--loop-instsimplify",
      "--scalarizer",
      "--callsite-splitting",
      "--inferattrs",
      "--adce",
      "--ipconstprop",
      "--loop-predication",
      "--loop-versioning-licm",
      "--alignment-from-assumptions",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}