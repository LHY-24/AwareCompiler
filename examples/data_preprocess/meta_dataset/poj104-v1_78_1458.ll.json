{
  "program_id": "poj104-v1_78_1458.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 4,
    "oneSuccessor": 27,
    "twoPred": 10,
    "twoPredOneSuc": 1,
    "twoEach": 7,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 57,
    "BeginPhi": 0,
    "BranchCount": 41,
    "returnInt": 7,
    "CriticalCount": 4,
    "NumEdges": 55,
    "const32Bit": 72,
    "const64Bit": 53,
    "numConstZeroes": 33,
    "numConstOnes": 53,
    "UncondBranches": 27,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 31,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 52,
    "NumBitCastInst": 28,
    "NumBrInst": 41,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 30,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 88,
    "NumMulInst": 4,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 50,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 57,
    "TotalInsts": 379,
    "TotalMemInst": 244,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 160
  },
  "baseline_oz_instcount": 283,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--newgvn",
    "--instcombine",
    "--slp-vectorizer",
    "--gvn",
    "--aggressive-instcombine",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--lower-expect",
    "--loop-rotate",
    "--newgvn",
    "--indvars",
    "--jump-threading",
    "--memcpyopt",
    "--elim-avail-extern",
    "--simplifycfg",
    "--mem2reg",
    "--inline",
    "--load-store-vectorizer",
    "--reassociate",
    "--instcombine",
    "--slp-vectorizer",
    "--gvn",
    "--instsimplify",
    "--adce",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--dse",
          "--early-cse-memssa",
          "--correlated-propagation",
          "--adce",
          "--elim-avail-extern",
          "--slp-vectorizer",
          "--strip-dead-prototypes",
          "--sccp",
          "--add-discriminators",
          "--dce",
          "--instsimplify",
          "--lowerinvoke",
          "--instcombine",
          "--loop-unroll-and-jam",
          "--inline",
          "--mergefunc",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+57.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--dse",
      "--early-cse-memssa",
      "--correlated-propagation",
      "--adce",
      "--elim-avail-extern",
      "--slp-vectorizer",
      "--strip-dead-prototypes",
      "--sccp",
      "--add-discriminators",
      "--dce",
      "--instsimplify",
      "--lowerinvoke",
      "--instcombine",
      "--loop-unroll-and-jam",
      "--inline",
      "--mergefunc",
      "--bdce"
    ],
    "performance_vs_Oz": "+57.6%"
  }
}