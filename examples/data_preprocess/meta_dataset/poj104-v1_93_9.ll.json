{
  "program_id": "poj104-v1_93_9.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 5,
    "oneSuccessor": 8,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 8,
    "CriticalCount": 12,
    "NumEdges": 30,
    "const32Bit": 25,
    "const64Bit": 2,
    "numConstZeroes": 12,
    "numConstOnes": 2,
    "UncondBranches": 8,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 2,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 22,
    "NumBitCastInst": 2,
    "NumBrInst": 19,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 1,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 22,
    "TotalInsts": 73,
    "TotalMemInst": 27,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 16
  },
  "baseline_oz_instcount": 55,
  "knowledge_base_entry": [
    "--bdce",
    "--inline",
    "--gvn-hoist",
    "--mldst-motion",
    "--newgvn",
    "--inline",
    "--sccp",
    "--jump-threading",
    "--gvn-hoist",
    "--memcpyopt",
    "--mem2reg",
    "--jump-threading",
    "--prune-eh",
    "--sroa",
    "-loop-reduce",
    "--early-cse-memssa",
    "--instsimplify",
    "--mergefunc",
    "--inline",
    "--dce",
    "--sccp",
    "--jump-threading",
    "--elim-avail-extern",
    "--inline",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--loop-simplifycfg",
          "--called-value-propagation",
          "--early-cse-memssa",
          "--instsimplify",
          "--reassociate",
          "--aggressive-instcombine",
          "--strip",
          "--lower-widenable-condition",
          "--loop-vectorize",
          "--libcalls-shrinkwrap",
          "--lowerswitch",
          "--pgo-memop-opt",
          "--jump-threading",
          "--coro-early",
          "--loop-predication",
          "--insert-gcov-profiling",
          "--licm",
          "--mem2reg",
          "--simplifycfg",
          "--nary-reassociate",
          "--inject-tli-mappings",
          "--constprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--loop-simplifycfg",
      "--called-value-propagation",
      "--early-cse-memssa",
      "--instsimplify",
      "--reassociate",
      "--aggressive-instcombine",
      "--strip",
      "--lower-widenable-condition",
      "--loop-vectorize",
      "--libcalls-shrinkwrap",
      "--lowerswitch",
      "--pgo-memop-opt",
      "--jump-threading",
      "--coro-early",
      "--loop-predication",
      "--insert-gcov-profiling",
      "--licm",
      "--mem2reg",
      "--simplifycfg",
      "--nary-reassociate",
      "--inject-tli-mappings",
      "--constprop"
    ],
    "performance_vs_Oz": "+5.5%"
  }
}