{
  "program_id": "linux-v0_4498.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 50,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 7,
    "oneSuccessor": 46,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 15,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 88,
    "BeginPhi": 0,
    "BranchCount": 61,
    "returnInt": 19,
    "CriticalCount": 11,
    "NumEdges": 100,
    "const32Bit": 282,
    "const64Bit": 47,
    "numConstZeroes": 110,
    "numConstOnes": 103,
    "UncondBranches": 46,
    "binaryConstArg": 36,
    "NumAShrInst": 8,
    "NumAddInst": 1,
    "NumAllocaInst": 83,
    "NumAndInst": 21,
    "BlockMid": 16,
    "BlockLow": 72,
    "NumBitCastInst": 10,
    "NumBrInst": 61,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 84,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 205,
    "NumMulInst": 0,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 8,
    "NumStoreInst": 144,
    "NumSubInst": 1,
    "NumTruncInst": 21,
    "NumXorInst": 0,
    "NumZExtInst": 52,
    "TotalBlocks": 88,
    "TotalInsts": 794,
    "TotalMemInst": 554,
    "TotalFuncs": 33,
    "ArgsPhi": 0,
    "testUnary": 376
  },
  "baseline_oz_instcount": 794,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--flattencfg",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse-memssa",
    "--ipsccp",
    "--aggressive-instcombine",
    "--mem2reg",
    "--inline",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--prune-eh",
    "--simplifycfg",
    "--reassociate",
    "--jump-threading",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--licm",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--globaldce",
          "--rewrite-statepoints-for-gc",
          "--loop-guard-widening",
          "-loop-reduce",
          "--aggressive-instcombine",
          "--instcombine",
          "--gvn",
          "--infer-address-spaces",
          "--simplifycfg",
          "--redundant-dbg-inst-elim",
          "--mergeicmps",
          "--libcalls-shrinkwrap",
          "--jump-threading",
          "--loop-distribute",
          "--dse",
          "--memcpyopt",
          "--lower-constant-intrinsics",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--globaldce",
      "--rewrite-statepoints-for-gc",
      "--loop-guard-widening",
      "-loop-reduce",
      "--aggressive-instcombine",
      "--instcombine",
      "--gvn",
      "--infer-address-spaces",
      "--simplifycfg",
      "--redundant-dbg-inst-elim",
      "--mergeicmps",
      "--libcalls-shrinkwrap",
      "--jump-threading",
      "--loop-distribute",
      "--dse",
      "--memcpyopt",
      "--lower-constant-intrinsics",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}