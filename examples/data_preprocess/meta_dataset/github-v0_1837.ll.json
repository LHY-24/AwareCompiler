{
  "program_id": "github-v0_1837.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 25,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 3,
    "oneSuccessor": 21,
    "twoPred": 12,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 14,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 52,
    "BeginPhi": 1,
    "BranchCount": 35,
    "returnInt": 4,
    "CriticalCount": 6,
    "NumEdges": 49,
    "const32Bit": 454,
    "const64Bit": 36,
    "numConstZeroes": 234,
    "numConstOnes": 85,
    "UncondBranches": 21,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 58,
    "NumAndInst": 2,
    "BlockMid": 19,
    "BlockLow": 34,
    "NumBitCastInst": 40,
    "NumBrInst": 35,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 199,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 329,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 16,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 180,
    "NumSubInst": 5,
    "NumTruncInst": 11,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 53,
    "TotalInsts": 981,
    "TotalMemInst": 811,
    "TotalFuncs": 34,
    "ArgsPhi": 2,
    "testUnary": 467
  },
  "baseline_oz_instcount": 981,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--newgvn",
    "--ipsccp",
    "--aggressive-instcombine",
    "--newgvn",
    "--slp-vectorizer",
    "--slsr",
    "--early-cse",
    "--sroa",
    "--instcombine",
    "--licm",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--dce",
    "--gvn",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-predication",
          "--lower-matrix-intrinsics",
          "--sink",
          "--die",
          "--ee-instrument",
          "--simplifycfg",
          "--lowerinvoke",
          "--argpromotion",
          "--mergefunc",
          "--flattencfg",
          "--rpo-functionattrs",
          "--loop-load-elim",
          "--inferattrs",
          "--elim-avail-extern",
          "--aggressive-instcombine",
          "--lower-guard-intrinsic",
          "--strip-dead-prototypes",
          "--load-store-vectorizer",
          "--indvars",
          "--loop-unswitch",
          "--coro-early",
          "--float2int",
          "--instsimplify",
          "--lower-expect",
          "--loop-reroll",
          "--separate-const-offset-from-gep",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-predication",
      "--lower-matrix-intrinsics",
      "--sink",
      "--die",
      "--ee-instrument",
      "--simplifycfg",
      "--lowerinvoke",
      "--argpromotion",
      "--mergefunc",
      "--flattencfg",
      "--rpo-functionattrs",
      "--loop-load-elim",
      "--inferattrs",
      "--elim-avail-extern",
      "--aggressive-instcombine",
      "--lower-guard-intrinsic",
      "--strip-dead-prototypes",
      "--load-store-vectorizer",
      "--indvars",
      "--loop-unswitch",
      "--coro-early",
      "--float2int",
      "--instsimplify",
      "--lower-expect",
      "--loop-reroll",
      "--separate-const-offset-from-gep",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+2.4%"
  }
}