{
  "program_id": "github-v0_22995.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 5,
    "oneSuccessor": 33,
    "twoPred": 21,
    "twoPredOneSuc": 9,
    "twoEach": 6,
    "twoSuccessor": 18,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 66,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 18,
    "CriticalCount": 21,
    "NumEdges": 83,
    "const32Bit": 214,
    "const64Bit": 15,
    "numConstZeroes": 99,
    "numConstOnes": 74,
    "UncondBranches": 33,
    "binaryConstArg": 17,
    "NumAShrInst": 1,
    "NumAddInst": 12,
    "NumAllocaInst": 49,
    "NumAndInst": 1,
    "BlockMid": 11,
    "BlockLow": 55,
    "NumBitCastInst": 15,
    "NumBrInst": 51,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 71,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 185,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 26,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 89,
    "NumSubInst": 4,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 66,
    "TotalInsts": 592,
    "TotalMemInst": 439,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 279
  },
  "baseline_oz_instcount": 592,
  "knowledge_base_entry": [
    "--irce",
    "--instcombine",
    "--ipsccp",
    "--dse",
    "--newgvn",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--jump-threading",
    "--sroa",
    "--instcombine",
    "--ipsccp",
    "--dse",
    "--sroa",
    "--aggressive-instcombine",
    "--jump-threading",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--ipsccp",
    "--licm",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--instsimplify",
    "--slp-vectorizer",
    "--early-cse",
    "--simplifycfg",
    "--reassociate",
    "-loop-reduce",
    "--newgvn",
    "--elim-avail-extern",
    "--early-cse",
    "--licm",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--ipsccp",
    "--dse",
    "--sroa",
    "--aggressive-instcombine",
    "--jump-threading",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--simplifycfg",
          "--lower-matrix-intrinsics",
          "--aggressive-instcombine",
          "--load-store-vectorizer",
          "--canonicalize-aliases",
          "--loop-idiom",
          "--lower-expect",
          "--pgo-memop-opt",
          "--die",
          "--infer-address-spaces",
          "--functionattrs",
          "--name-anon-globals",
          "--ee-instrument",
          "--loop-sink",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--simplifycfg",
      "--lower-matrix-intrinsics",
      "--aggressive-instcombine",
      "--load-store-vectorizer",
      "--canonicalize-aliases",
      "--loop-idiom",
      "--lower-expect",
      "--pgo-memop-opt",
      "--die",
      "--infer-address-spaces",
      "--functionattrs",
      "--name-anon-globals",
      "--ee-instrument",
      "--loop-sink",
      "--sancov"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}