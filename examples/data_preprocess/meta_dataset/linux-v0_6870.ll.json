{
  "program_id": "linux-v0_6870.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 66,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 17,
    "oneSuccessor": 58,
    "twoPred": 23,
    "twoPredOneSuc": 9,
    "twoEach": 9,
    "twoSuccessor": 35,
    "morePreds": 5,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 114,
    "BeginPhi": 2,
    "BranchCount": 93,
    "returnInt": 22,
    "CriticalCount": 14,
    "NumEdges": 133,
    "const32Bit": 366,
    "const64Bit": 7,
    "numConstZeroes": 151,
    "numConstOnes": 109,
    "UncondBranches": 58,
    "binaryConstArg": 23,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 81,
    "NumAndInst": 8,
    "BlockMid": 13,
    "BlockLow": 103,
    "NumBitCastInst": 30,
    "NumBrInst": 93,
    "NumCallInst": 75,
    "NumGetElementPtrInst": 99,
    "NumICmpInst": 39,
    "NumLShrInst": 2,
    "NumLoadInst": 253,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 22,
    "NumSExtInst": 5,
    "NumSelectInst": 3,
    "NumShlInst": 2,
    "NumStoreInst": 118,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 8,
    "NumZExtInst": 17,
    "TotalBlocks": 116,
    "TotalInsts": 872,
    "TotalMemInst": 626,
    "TotalFuncs": 51,
    "ArgsPhi": 4,
    "testUnary": 396
  },
  "baseline_oz_instcount": 872,
  "knowledge_base_entry": [
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--lower-expect",
    "--loop-rotate",
    "--dse",
    "--early-cse",
    "--mem2reg",
    "--load-store-vectorizer",
    "--newgvn",
    "--memcpyopt",
    "--inline",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--dse",
          "--sink",
          "--mergefunc",
          "--partial-inliner",
          "--add-discriminators",
          "--coro-split",
          "--consthoist",
          "--mldst-motion",
          "--simplifycfg",
          "--sroa",
          "--pgo-memop-opt",
          "--alignment-from-assumptions",
          "--strip-debug-declare",
          "--memcpyopt",
          "--infer-address-spaces",
          "--newgvn",
          "--nary-reassociate",
          "--lower-guard-intrinsic",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--dse",
      "--sink",
      "--mergefunc",
      "--partial-inliner",
      "--add-discriminators",
      "--coro-split",
      "--consthoist",
      "--mldst-motion",
      "--simplifycfg",
      "--sroa",
      "--pgo-memop-opt",
      "--alignment-from-assumptions",
      "--strip-debug-declare",
      "--memcpyopt",
      "--infer-address-spaces",
      "--newgvn",
      "--nary-reassociate",
      "--lower-guard-intrinsic",
      "--adce"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}