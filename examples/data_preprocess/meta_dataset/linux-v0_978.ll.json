{
  "program_id": "linux-v0_978.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 7,
    "oneSuccessor": 16,
    "twoPred": 7,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 12,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 15,
    "CriticalCount": 5,
    "NumEdges": 40,
    "const32Bit": 65,
    "const64Bit": 7,
    "numConstZeroes": 22,
    "numConstOnes": 33,
    "UncondBranches": 16,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 25,
    "NumAndInst": 11,
    "BlockMid": 7,
    "BlockLow": 30,
    "NumBitCastInst": 14,
    "NumBrInst": 28,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 12,
    "NumLShrInst": 2,
    "NumLoadInst": 71,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 36,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 37,
    "TotalInsts": 265,
    "TotalMemInst": 168,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 126
  },
  "baseline_oz_instcount": 265,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--dse",
    "--sroa",
    "--dse",
    "--dce",
    "--early-cse",
    "--dce",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--sroa",
    "--mem2reg",
    "--prune-eh",
    "--sroa",
    "--instsimplify",
    "--ipsccp",
    "--sccp",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--newgvn",
    "-loop-reduce",
    "--indvars",
    "--instcombine",
    "--globalopt",
    "--aggressive-instcombine",
    "--jump-threading",
    "--early-cse-memssa",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip",
          "--coro-early",
          "--strip-nondebug",
          "--loop-unswitch",
          "--name-anon-globals",
          "--loop-distribute",
          "--loop-simplify",
          "--instsimplify",
          "--div-rem-pairs",
          "--sink",
          "--always-inline",
          "--inferattrs",
          "-loop-reduce",
          "--flattencfg",
          "--strip-dead-prototypes",
          "--early-cse",
          "--constprop",
          "--memcpyopt",
          "--consthoist",
          "--aggressive-instcombine",
          "--bdce",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip",
      "--coro-early",
      "--strip-nondebug",
      "--loop-unswitch",
      "--name-anon-globals",
      "--loop-distribute",
      "--loop-simplify",
      "--instsimplify",
      "--div-rem-pairs",
      "--sink",
      "--always-inline",
      "--inferattrs",
      "-loop-reduce",
      "--flattencfg",
      "--strip-dead-prototypes",
      "--early-cse",
      "--constprop",
      "--memcpyopt",
      "--consthoist",
      "--aggressive-instcombine",
      "--bdce",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}