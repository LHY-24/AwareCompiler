{
  "program_id": "linux-v0_4253.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 10,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 32,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 14,
    "CriticalCount": 2,
    "NumEdges": 22,
    "const32Bit": 100,
    "const64Bit": 21,
    "numConstZeroes": 35,
    "numConstOnes": 37,
    "UncondBranches": 10,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 32,
    "NumAndInst": 5,
    "BlockMid": 3,
    "BlockLow": 29,
    "NumBitCastInst": 6,
    "NumBrInst": 16,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 102,
    "NumMulInst": 0,
    "NumOrInst": 10,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 62,
    "NumSubInst": 1,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 32,
    "TotalInsts": 355,
    "TotalMemInst": 257,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 173
  },
  "baseline_oz_instcount": 355,
  "knowledge_base_entry": [
    "--simple-loop-unswitch",
    "--newgvn",
    "--aggressive-instcombine",
    "--loweratomic",
    "--globalopt",
    "--early-cse-memssa",
    "--slsr",
    "--gvn-hoist",
    "--gvn",
    "--jump-threading",
    "--load-store-vectorizer",
    "--indvars",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--inject-tli-mappings",
          "--partial-inliner",
          "--reassociate",
          "--barrier",
          "--called-value-propagation",
          "--nary-reassociate",
          "--strip-nondebug",
          "--forceattrs",
          "--speculative-execution",
          "--loop-versioning",
          "--loop-vectorize",
          "--coro-cleanup",
          "--aggressive-instcombine",
          "--attributor",
          "--loweratomic",
          "--loop-idiom",
          "--early-cse",
          "--elim-avail-extern",
          "--indvars",
          "--lower-matrix-intrinsics",
          "--globalopt",
          "--alignment-from-assumptions",
          "--simple-loop-unswitch",
          "--libcalls-shrinkwrap",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--inject-tli-mappings",
      "--partial-inliner",
      "--reassociate",
      "--barrier",
      "--called-value-propagation",
      "--nary-reassociate",
      "--strip-nondebug",
      "--forceattrs",
      "--speculative-execution",
      "--loop-versioning",
      "--loop-vectorize",
      "--coro-cleanup",
      "--aggressive-instcombine",
      "--attributor",
      "--loweratomic",
      "--loop-idiom",
      "--early-cse",
      "--elim-avail-extern",
      "--indvars",
      "--lower-matrix-intrinsics",
      "--globalopt",
      "--alignment-from-assumptions",
      "--simple-loop-unswitch",
      "--libcalls-shrinkwrap",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+5.1%"
  }
}