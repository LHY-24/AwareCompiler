{
  "program_id": "linux-v0_7617.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 60,
    "onePredOneSuc": 44,
    "onePredTwoSuc": 13,
    "oneSuccessor": 53,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 20,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 95,
    "BeginPhi": 0,
    "BranchCount": 73,
    "returnInt": 15,
    "CriticalCount": 8,
    "NumEdges": 102,
    "const32Bit": 318,
    "const64Bit": 29,
    "numConstZeroes": 147,
    "numConstOnes": 119,
    "UncondBranches": 53,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 95,
    "NumAndInst": 8,
    "BlockMid": 15,
    "BlockLow": 80,
    "NumBitCastInst": 36,
    "NumBrInst": 73,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 89,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 202,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 105,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 18,
    "TotalBlocks": 95,
    "TotalInsts": 750,
    "TotalMemInst": 554,
    "TotalFuncs": 43,
    "ArgsPhi": 0,
    "testUnary": 360
  },
  "baseline_oz_instcount": 750,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--dce",
    "--licm",
    "--memcpyopt",
    "--simplifycfg",
    "--gvn-hoist",
    "--instcombine",
    "--dce",
    "--licm",
    "--memcpyopt",
    "--simplifycfg",
    "--gvn-hoist",
    "--instcombine",
    "--dce",
    "--aggressive-instcombine",
    "--mem2reg",
    "--early-cse",
    "--sroa",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--bdce",
          "--aggressive-instcombine",
          "--scalarizer",
          "--hotcoldsplit",
          "--simple-loop-unswitch",
          "--globaldce",
          "--licm",
          "--die",
          "--loop-idiom",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--bdce",
      "--aggressive-instcombine",
      "--scalarizer",
      "--hotcoldsplit",
      "--simple-loop-unswitch",
      "--globaldce",
      "--licm",
      "--die",
      "--loop-idiom",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}