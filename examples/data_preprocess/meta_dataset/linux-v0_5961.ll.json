{
  "program_id": "linux-v0_5961.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 40,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 11,
    "oneSuccessor": 34,
    "twoPred": 14,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 22,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 80,
    "BeginPhi": 1,
    "BranchCount": 56,
    "returnInt": 21,
    "CriticalCount": 10,
    "NumEdges": 78,
    "const32Bit": 263,
    "const64Bit": 30,
    "numConstZeroes": 107,
    "numConstOnes": 92,
    "UncondBranches": 34,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 72,
    "NumAndInst": 5,
    "BlockMid": 16,
    "BlockLow": 65,
    "NumBitCastInst": 20,
    "NumBrInst": 56,
    "NumCallInst": 68,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 208,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 1,
    "NumRetInst": 25,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 4,
    "NumStoreInst": 109,
    "NumSubInst": 2,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 9,
    "TotalBlocks": 81,
    "TotalInsts": 718,
    "TotalMemInst": 544,
    "TotalFuncs": 45,
    "ArgsPhi": 2,
    "testUnary": 325
  },
  "baseline_oz_instcount": 718,
  "knowledge_base_entry": [
    "--globaldce",
    "--ipsccp",
    "--globalopt",
    "--licm",
    "--loop-rotate",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--sccp",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--die",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--instsimplify",
    "--loop-reroll",
    "--simplifycfg",
    "--bdce",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--loop-unroll",
          "--infer-address-spaces",
          "--mergereturn",
          "--loop-vectorize",
          "--loop-versioning-licm",
          "--functionattrs",
          "--gvn-hoist",
          "--correlated-propagation",
          "--reassociate",
          "--cross-dso-cfi",
          "--mldst-motion",
          "--loop-idiom",
          "--constprop",
          "--strip-debug-declare",
          "--elim-avail-extern",
          "--globaldce",
          "--sccp",
          "--pgo-memop-opt",
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--die",
          "--libcalls-shrinkwrap",
          "--partial-inliner",
          "--indvars",
          "--strip-dead-prototypes",
          "--canonicalize-aliases"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--loop-unroll",
      "--infer-address-spaces",
      "--mergereturn",
      "--loop-vectorize",
      "--loop-versioning-licm",
      "--functionattrs",
      "--gvn-hoist",
      "--correlated-propagation",
      "--reassociate",
      "--cross-dso-cfi",
      "--mldst-motion",
      "--loop-idiom",
      "--constprop",
      "--strip-debug-declare",
      "--elim-avail-extern",
      "--globaldce",
      "--sccp",
      "--pgo-memop-opt",
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--die",
      "--libcalls-shrinkwrap",
      "--partial-inliner",
      "--indvars",
      "--strip-dead-prototypes",
      "--canonicalize-aliases"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}