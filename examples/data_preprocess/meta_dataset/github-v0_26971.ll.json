{
  "program_id": "github-v0_26971.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 3,
    "oneSuccessor": 11,
    "twoPred": 11,
    "twoPredOneSuc": 3,
    "twoEach": 7,
    "twoSuccessor": 11,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 4,
    "CriticalCount": 11,
    "NumEdges": 33,
    "const32Bit": 9,
    "const64Bit": 0,
    "numConstZeroes": 11,
    "numConstOnes": 10,
    "UncondBranches": 11,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 22,
    "NumBitCastInst": 0,
    "NumBrInst": 22,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 18,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 5,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 23,
    "TotalInsts": 89,
    "TotalMemInst": 49,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 28
  },
  "baseline_oz_instcount": 89,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--adce",
    "--instsimplify",
    "--dse",
    "--inline",
    "--sccp",
    "--lower-expect",
    "--die",
    "--early-cse-memssa",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-dead-prototypes",
          "--mergefunc",
          "--nary-reassociate",
          "--argpromotion",
          "--simplifycfg",
          "--slsr",
          "--aggressive-instcombine",
          "--mergereturn",
          "--load-store-vectorizer",
          "--lower-widenable-condition",
          "--functionattrs",
          "--scalarizer",
          "--name-anon-globals",
          "--constprop",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-dead-prototypes",
      "--mergefunc",
      "--nary-reassociate",
      "--argpromotion",
      "--simplifycfg",
      "--slsr",
      "--aggressive-instcombine",
      "--mergereturn",
      "--load-store-vectorizer",
      "--lower-widenable-condition",
      "--functionattrs",
      "--scalarizer",
      "--name-anon-globals",
      "--constprop",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}