{
  "program_id": "github-v0_29113.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 107,
    "onePredOneSuc": 87,
    "onePredTwoSuc": 20,
    "oneSuccessor": 97,
    "twoPred": 36,
    "twoPredOneSuc": 8,
    "twoEach": 28,
    "twoSuccessor": 50,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 148,
    "BeginPhi": 0,
    "BranchCount": 147,
    "returnInt": 37,
    "CriticalCount": 14,
    "NumEdges": 197,
    "const32Bit": 132,
    "const64Bit": 98,
    "numConstZeroes": 129,
    "numConstOnes": 81,
    "UncondBranches": 97,
    "binaryConstArg": 53,
    "NumAShrInst": 0,
    "NumAddInst": 43,
    "NumAllocaInst": 38,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 140,
    "NumBitCastInst": 2,
    "NumBrInst": 147,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 66,
    "NumICmpInst": 49,
    "NumLShrInst": 0,
    "NumLoadInst": 219,
    "NumMulInst": 22,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 103,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 148,
    "TotalInsts": 783,
    "TotalMemInst": 470,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 287
  },
  "baseline_oz_instcount": 789,
  "knowledge_base_entry": [
    "--gvn",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "--argpromotion",
          "--infer-address-spaces",
          "--pgo-memop-opt",
          "--simplifycfg",
          "--post-inline-ee-instrument",
          "--lower-guard-intrinsic",
          "--partially-inline-libcalls",
          "--div-rem-pairs",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "--argpromotion",
      "--infer-address-spaces",
      "--pgo-memop-opt",
      "--simplifycfg",
      "--post-inline-ee-instrument",
      "--lower-guard-intrinsic",
      "--partially-inline-libcalls",
      "--div-rem-pairs",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}