{
  "program_id": "github-v0_8158.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 30,
    "const64Bit": 41,
    "numConstZeroes": 45,
    "numConstOnes": 19,
    "UncondBranches": 13,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 47,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 2,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 32,
    "TotalBlocks": 24,
    "TotalInsts": 205,
    "TotalMemInst": 116,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 104
  },
  "baseline_oz_instcount": 205,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--aggressive-instcombine",
    "--bdce",
    "--sroa",
    "--reassociate",
    "--mem2reg",
    "--loop-deletion",
    "--gvn-hoist",
    "--newgvn",
    "--loop-rotate",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--flattencfg",
          "--libcalls-shrinkwrap",
          "--loop-guard-widening",
          "--partial-inliner",
          "--coro-early",
          "--rpo-functionattrs",
          "--reassociate",
          "--loop-unroll-and-jam",
          "--aggressive-instcombine",
          "--strip-nondebug",
          "--indvars",
          "--consthoist",
          "--lcssa",
          "--tailcallelim",
          "--lower-constant-intrinsics",
          "--loop-distribute",
          "--loop-simplifycfg",
          "--float2int",
          "--gvn",
          "--argpromotion",
          "--loop-vectorize",
          "--reg2mem",
          "--speculative-execution",
          "--post-inline-ee-instrument",
          "--ipsccp",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--flattencfg",
      "--libcalls-shrinkwrap",
      "--loop-guard-widening",
      "--partial-inliner",
      "--coro-early",
      "--rpo-functionattrs",
      "--reassociate",
      "--loop-unroll-and-jam",
      "--aggressive-instcombine",
      "--strip-nondebug",
      "--indvars",
      "--consthoist",
      "--lcssa",
      "--tailcallelim",
      "--lower-constant-intrinsics",
      "--loop-distribute",
      "--loop-simplifycfg",
      "--float2int",
      "--gvn",
      "--argpromotion",
      "--loop-vectorize",
      "--reg2mem",
      "--speculative-execution",
      "--post-inline-ee-instrument",
      "--ipsccp",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+11.7%"
  }
}