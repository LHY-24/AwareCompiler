{
  "program_id": "github-v0_27696.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 0,
    "oneSuccessor": 6,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 2,
    "CriticalCount": 2,
    "NumEdges": 14,
    "const32Bit": 27,
    "const64Bit": 6,
    "numConstZeroes": 6,
    "numConstOnes": 18,
    "UncondBranches": 6,
    "binaryConstArg": 8,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 11,
    "NumAndInst": 1,
    "BlockMid": 2,
    "BlockLow": 12,
    "NumBitCastInst": 0,
    "NumBrInst": 10,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 27,
    "NumSubInst": 3,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 14,
    "TotalInsts": 122,
    "TotalMemInst": 78,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 57
  },
  "baseline_oz_instcount": 121,
  "knowledge_base_entry": [
    "--loop-versioning-licm",
    "--jump-threading",
    "--nary-reassociate",
    "--mem2reg",
    "--instcombine",
    "--globalopt",
    "--lower-expect",
    "--die",
    "--reassociate",
    "--jump-threading",
    "--early-cse",
    "--loop-deletion",
    "--jump-threading",
    "--instsimplify",
    "--inline",
    "--globalopt",
    "--mergefunc",
    "--aggressive-instcombine",
    "--inline",
    "--globalopt",
    "--loop-deletion",
    "--sccp",
    "--loop-deletion",
    "--sroa",
    "--nary-reassociate",
    "--simplifycfg",
    "--gvn",
    "--inline",
    "--nary-reassociate",
    "--inline",
    "--bdce",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--partial-inliner",
          "--aggressive-instcombine",
          "--deadargelim",
          "--forceattrs",
          "--strip",
          "--load-store-vectorizer",
          "--adce",
          "--instsimplify",
          "--canonicalize-aliases",
          "--loop-versioning",
          "--loop-sink",
          "--mergefunc",
          "--partially-inline-libcalls",
          "--inline",
          "--guard-widening",
          "--lowerswitch",
          "--indvars",
          "--loweratomic",
          "--loop-fusion",
          "--loop-rotate",
          "--constmerge",
          "--lower-guard-intrinsic",
          "--loop-distribute",
          "--speculative-execution",
          "--licm",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--partial-inliner",
      "--aggressive-instcombine",
      "--deadargelim",
      "--forceattrs",
      "--strip",
      "--load-store-vectorizer",
      "--adce",
      "--instsimplify",
      "--canonicalize-aliases",
      "--loop-versioning",
      "--loop-sink",
      "--mergefunc",
      "--partially-inline-libcalls",
      "--inline",
      "--guard-widening",
      "--lowerswitch",
      "--indvars",
      "--loweratomic",
      "--loop-fusion",
      "--loop-rotate",
      "--constmerge",
      "--lower-guard-intrinsic",
      "--loop-distribute",
      "--speculative-execution",
      "--licm",
      "--coro-split"
    ],
    "performance_vs_Oz": "+7.4%"
  }
}