{
  "program_id": "linux-v0_3972.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 37,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 8,
    "oneSuccessor": 35,
    "twoPred": 13,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 17,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 1,
    "BranchCount": 52,
    "returnInt": 12,
    "CriticalCount": 8,
    "NumEdges": 78,
    "const32Bit": 216,
    "const64Bit": 4,
    "numConstZeroes": 95,
    "numConstOnes": 71,
    "UncondBranches": 35,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 53,
    "NumAndInst": 8,
    "BlockMid": 12,
    "BlockLow": 60,
    "NumBitCastInst": 20,
    "NumBrInst": 52,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 19,
    "NumLShrInst": 3,
    "NumLoadInst": 178,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 18,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 78,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 9,
    "NumZExtInst": 18,
    "TotalBlocks": 72,
    "TotalInsts": 565,
    "TotalMemInst": 408,
    "TotalFuncs": 27,
    "ArgsPhi": 2,
    "testUnary": 273
  },
  "baseline_oz_instcount": 565,
  "knowledge_base_entry": [
    "--functionattrs",
    "--mergefunc",
    "--adce",
    "--sroa",
    "--mergefunc",
    "--adce",
    "--sroa",
    "--jump-threading",
    "--dce",
    "--elim-avail-extern",
    "--dse",
    "--loop-simplifycfg",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--lower-widenable-condition",
          "--inferattrs",
          "--loop-unswitch",
          "--alignment-from-assumptions",
          "--loop-unroll",
          "--hotcoldsplit",
          "--add-discriminators",
          "--loop-guard-widening",
          "--strip-nondebug",
          "--lower-expect",
          "--dce",
          "--loop-fusion",
          "--loop-vectorize",
          "--cross-dso-cfi",
          "--early-cse",
          "--forceattrs",
          "--loop-sink",
          "--irce",
          "--lower-guard-intrinsic",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--lower-widenable-condition",
      "--inferattrs",
      "--loop-unswitch",
      "--alignment-from-assumptions",
      "--loop-unroll",
      "--hotcoldsplit",
      "--add-discriminators",
      "--loop-guard-widening",
      "--strip-nondebug",
      "--lower-expect",
      "--dce",
      "--loop-fusion",
      "--loop-vectorize",
      "--cross-dso-cfi",
      "--early-cse",
      "--forceattrs",
      "--loop-sink",
      "--irce",
      "--lower-guard-intrinsic",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}