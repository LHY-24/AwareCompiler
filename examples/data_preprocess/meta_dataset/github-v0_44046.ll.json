{
  "program_id": "github-v0_44046.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 36,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 5,
    "oneSuccessor": 33,
    "twoPred": 14,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 19,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 0,
    "BranchCount": 52,
    "returnInt": 4,
    "CriticalCount": 5,
    "NumEdges": 71,
    "const32Bit": 125,
    "const64Bit": 23,
    "numConstZeroes": 92,
    "numConstOnes": 34,
    "UncondBranches": 33,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 31,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 62,
    "NumBitCastInst": 1,
    "NumBrInst": 52,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 52,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 112,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 57,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 64,
    "TotalInsts": 360,
    "TotalMemInst": 263,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 156
  },
  "baseline_oz_instcount": 361,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--newgvn",
    "--nary-reassociate",
    "--gvn-hoist",
    "--ipsccp",
    "--nary-reassociate",
    "--newgvn",
    "--inline",
    "--mergefunc",
    "--instcombine",
    "--mem2reg",
    "--lower-expect",
    "--slp-vectorizer",
    "--sroa",
    "--ipsccp",
    "--early-cse",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--instnamer",
          "--mergeicmps",
          "--attributor",
          "--dse",
          "--post-inline-ee-instrument",
          "--infer-address-spaces",
          "--libcalls-shrinkwrap",
          "--constmerge",
          "--lowerswitch",
          "--coro-cleanup",
          "--redundant-dbg-inst-elim",
          "-loop-reduce",
          "--prune-eh",
          "--memcpyopt",
          "--insert-gcov-profiling",
          "--mldst-motion",
          "--loop-vectorize",
          "--speculative-execution",
          "--lower-constant-intrinsics",
          "--sroa",
          "--deadargelim",
          "--mergereturn",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--instnamer",
      "--mergeicmps",
      "--attributor",
      "--dse",
      "--post-inline-ee-instrument",
      "--infer-address-spaces",
      "--libcalls-shrinkwrap",
      "--constmerge",
      "--lowerswitch",
      "--coro-cleanup",
      "--redundant-dbg-inst-elim",
      "-loop-reduce",
      "--prune-eh",
      "--memcpyopt",
      "--insert-gcov-profiling",
      "--mldst-motion",
      "--loop-vectorize",
      "--speculative-execution",
      "--lower-constant-intrinsics",
      "--sroa",
      "--deadargelim",
      "--mergereturn",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}