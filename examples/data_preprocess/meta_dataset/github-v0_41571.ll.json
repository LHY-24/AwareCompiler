{
  "program_id": "github-v0_41571.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 43,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 38,
    "oneSuccessor": 35,
    "twoPred": 45,
    "twoPredOneSuc": 25,
    "twoEach": 18,
    "twoSuccessor": 58,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 95,
    "BeginPhi": 0,
    "BranchCount": 93,
    "returnInt": 18,
    "CriticalCount": 73,
    "NumEdges": 151,
    "const32Bit": 119,
    "const64Bit": 43,
    "numConstZeroes": 94,
    "numConstOnes": 39,
    "UncondBranches": 35,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 92,
    "NumBitCastInst": 1,
    "NumBrInst": 93,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 58,
    "NumLShrInst": 0,
    "NumLoadInst": 99,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 52,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 19,
    "TotalBlocks": 95,
    "TotalInsts": 404,
    "TotalMemInst": 231,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 135
  },
  "baseline_oz_instcount": 404,
  "knowledge_base_entry": [
    "--sroa",
    "--globalopt",
    "--jump-threading",
    "--adce",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--bdce",
    "--licm",
    "--globalopt",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--gvn",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--guard-widening",
          "--loop-sink",
          "--constprop",
          "--loop-simplify",
          "--loop-versioning-licm",
          "--gvn-hoist",
          "--mldst-motion",
          "--memcpyopt",
          "--loop-deletion",
          "--globalsplit",
          "--prune-eh",
          "--redundant-dbg-inst-elim",
          "--flattencfg",
          "--infer-address-spaces",
          "--loop-rotate",
          "--loop-unroll",
          "--ee-instrument",
          "--loop-distribute",
          "--inline",
          "--scalarizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--guard-widening",
      "--loop-sink",
      "--constprop",
      "--loop-simplify",
      "--loop-versioning-licm",
      "--gvn-hoist",
      "--mldst-motion",
      "--memcpyopt",
      "--loop-deletion",
      "--globalsplit",
      "--prune-eh",
      "--redundant-dbg-inst-elim",
      "--flattencfg",
      "--infer-address-spaces",
      "--loop-rotate",
      "--loop-unroll",
      "--ee-instrument",
      "--loop-distribute",
      "--inline",
      "--scalarizer"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}