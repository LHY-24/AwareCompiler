{
  "program_id": "github-v0_22319.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 7,
    "oneSuccessor": 24,
    "twoPred": 14,
    "twoPredOneSuc": 5,
    "twoEach": 8,
    "twoSuccessor": 17,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 0,
    "BranchCount": 41,
    "returnInt": 2,
    "CriticalCount": 9,
    "NumEdges": 58,
    "const32Bit": 35,
    "const64Bit": 75,
    "numConstZeroes": 8,
    "numConstOnes": 26,
    "UncondBranches": 24,
    "binaryConstArg": 35,
    "NumAShrInst": 0,
    "NumAddInst": 78,
    "NumAllocaInst": 19,
    "NumAndInst": 6,
    "BlockMid": 4,
    "BlockLow": 41,
    "NumBitCastInst": 0,
    "NumBrInst": 41,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 17,
    "NumLShrInst": 3,
    "NumLoadInst": 238,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 119,
    "NumSubInst": 11,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 37,
    "TotalBlocks": 45,
    "TotalInsts": 629,
    "TotalMemInst": 415,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 295
  },
  "baseline_oz_instcount": 629,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--jump-threading",
    "--licm",
    "--instcombine",
    "--mergefunc",
    "--bdce",
    "--simplifycfg",
    "--mem2reg",
    "--lower-expect",
    "--gvn",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--early-cse-memssa",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-guard-widening",
          "--strip-nondebug",
          "--cross-dso-cfi",
          "--strip-dead-prototypes",
          "--add-discriminators",
          "--loop-reroll",
          "--speculative-execution",
          "--mldst-motion",
          "--loop-unroll",
          "--coro-cleanup",
          "--coro-early",
          "--rpo-functionattrs",
          "--mergeicmps",
          "--mergefunc",
          "--inject-tli-mappings",
          "--consthoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-guard-widening",
      "--strip-nondebug",
      "--cross-dso-cfi",
      "--strip-dead-prototypes",
      "--add-discriminators",
      "--loop-reroll",
      "--speculative-execution",
      "--mldst-motion",
      "--loop-unroll",
      "--coro-cleanup",
      "--coro-early",
      "--rpo-functionattrs",
      "--mergeicmps",
      "--mergefunc",
      "--inject-tli-mappings",
      "--consthoist"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}