{
  "program_id": "github-v0_41974.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 1,
    "oneSuccessor": 12,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 11,
    "CriticalCount": 4,
    "NumEdges": 26,
    "const32Bit": 46,
    "const64Bit": 1,
    "numConstZeroes": 18,
    "numConstOnes": 21,
    "UncondBranches": 12,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 19,
    "NumBitCastInst": 3,
    "NumBrInst": 19,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 16,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 21,
    "TotalInsts": 104,
    "TotalMemInst": 68,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 38
  },
  "baseline_oz_instcount": 105,
  "knowledge_base_entry": [
    "--die",
    "--sroa",
    "--ipsccp",
    "--early-cse",
    "--mldst-motion",
    "--inline",
    "--gvn",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partial-inliner",
          "--correlated-propagation",
          "--tailcallelim",
          "--partially-inline-libcalls",
          "--consthoist",
          "--slsr",
          "--called-value-propagation",
          "--libcalls-shrinkwrap",
          "--lower-matrix-intrinsics",
          "--mergeicmps",
          "--die",
          "--speculative-execution",
          "--canonicalize-aliases"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partial-inliner",
      "--correlated-propagation",
      "--tailcallelim",
      "--partially-inline-libcalls",
      "--consthoist",
      "--slsr",
      "--called-value-propagation",
      "--libcalls-shrinkwrap",
      "--lower-matrix-intrinsics",
      "--mergeicmps",
      "--die",
      "--speculative-execution",
      "--canonicalize-aliases"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}