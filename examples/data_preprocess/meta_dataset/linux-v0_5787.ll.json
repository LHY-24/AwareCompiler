{
  "program_id": "linux-v0_5787.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 0,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 6,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 8,
    "const32Bit": 75,
    "const64Bit": 3,
    "numConstZeroes": 28,
    "numConstOnes": 39,
    "UncondBranches": 4,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 33,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 14,
    "NumBitCastInst": 5,
    "NumBrInst": 6,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 19,
    "TotalInsts": 188,
    "TotalMemInst": 151,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 93
  },
  "baseline_oz_instcount": 188,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--gvn",
    "--dce",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--indvars",
    "--correlated-propagation",
    "--globalopt",
    "--aggressive-instcombine",
    "--jump-threading",
    "--slp-vectorizer",
    "--inline",
    "--mergefunc",
    "--flattencfg",
    "--mem2reg",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--pgo-memop-opt",
          "--loop-idiom",
          "--loop-versioning",
          "--rewrite-statepoints-for-gc",
          "--functionattrs",
          "--loop-simplify",
          "--rpo-functionattrs",
          "--speculative-execution",
          "--name-anon-globals",
          "--aggressive-instcombine",
          "--flattencfg",
          "--consthoist",
          "--reassociate",
          "--attributor",
          "--lower-matrix-intrinsics",
          "--deadargelim",
          "--lower-expect",
          "--sroa",
          "--loop-distribute",
          "--libcalls-shrinkwrap",
          "--coro-elide",
          "--lowerswitch",
          "--loop-simplifycfg",
          "--mergefunc",
          "--sancov",
          "--instnamer",
          "--insert-gcov-profiling",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--pgo-memop-opt",
      "--loop-idiom",
      "--loop-versioning",
      "--rewrite-statepoints-for-gc",
      "--functionattrs",
      "--loop-simplify",
      "--rpo-functionattrs",
      "--speculative-execution",
      "--name-anon-globals",
      "--aggressive-instcombine",
      "--flattencfg",
      "--consthoist",
      "--reassociate",
      "--attributor",
      "--lower-matrix-intrinsics",
      "--deadargelim",
      "--lower-expect",
      "--sroa",
      "--loop-distribute",
      "--libcalls-shrinkwrap",
      "--coro-elide",
      "--lowerswitch",
      "--loop-simplifycfg",
      "--mergefunc",
      "--sancov",
      "--instnamer",
      "--insert-gcov-profiling",
      "--constmerge"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}