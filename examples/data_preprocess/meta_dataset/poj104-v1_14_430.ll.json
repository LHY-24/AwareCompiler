{
  "program_id": "poj104-v1_14_430.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 2,
    "oneSuccessor": 14,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 26,
    "const32Bit": 32,
    "const64Bit": 36,
    "numConstZeroes": 33,
    "numConstOnes": 14,
    "UncondBranches": 14,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 21,
    "NumBitCastInst": 18,
    "NumBrInst": 20,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 23,
    "TotalInsts": 151,
    "TotalMemInst": 100,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 61
  },
  "baseline_oz_instcount": 114,
  "knowledge_base_entry": [
    "--mergefunc",
    "--simplifycfg",
    "--ipsccp",
    "--early-cse-memssa",
    "--instsimplify",
    "--prune-eh",
    "--inline",
    "--ipsccp",
    "--nary-reassociate",
    "--instsimplify",
    "--instcombine",
    "--early-cse",
    "--flattencfg",
    "--aggressive-instcombine",
    "--ipsccp",
    "--lower-expect",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--sroa",
    "--mem2reg",
    "--gvn",
    "--ipsccp",
    "--adce",
    "--instcombine",
    "--slp-vectorizer",
    "--simplifycfg",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mem2reg",
          "--slp-vectorizer",
          "--lower-guard-intrinsic",
          "--functionattrs",
          "--loop-deletion",
          "--forceattrs",
          "--mergereturn",
          "--instcombine",
          "--consthoist",
          "--loop-versioning",
          "--float2int",
          "--partial-inliner",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+29.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mem2reg",
      "--slp-vectorizer",
      "--lower-guard-intrinsic",
      "--functionattrs",
      "--loop-deletion",
      "--forceattrs",
      "--mergereturn",
      "--instcombine",
      "--consthoist",
      "--loop-versioning",
      "--float2int",
      "--partial-inliner",
      "--gvn"
    ],
    "performance_vs_Oz": "+29.8%"
  }
}