{
  "program_id": "linux-v0_3925.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 38,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 8,
    "oneSuccessor": 39,
    "twoPred": 18,
    "twoPredOneSuc": 9,
    "twoEach": 6,
    "twoSuccessor": 19,
    "morePreds": 5,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 74,
    "BeginPhi": 2,
    "BranchCount": 58,
    "returnInt": 10,
    "CriticalCount": 16,
    "NumEdges": 93,
    "const32Bit": 285,
    "const64Bit": 11,
    "numConstZeroes": 141,
    "numConstOnes": 78,
    "UncondBranches": 39,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 59,
    "NumAndInst": 0,
    "BlockMid": 14,
    "BlockLow": 62,
    "NumBitCastInst": 40,
    "NumBrInst": 58,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 90,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 193,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 15,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 95,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 6,
    "TotalBlocks": 76,
    "TotalInsts": 640,
    "TotalMemInst": 491,
    "TotalFuncs": 33,
    "ArgsPhi": 4,
    "testUnary": 302
  },
  "baseline_oz_instcount": 640,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--gvn",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--loop-simplifycfg",
    "--die",
    "--mergefunc",
    "--simplifycfg",
    "--loop-reroll",
    "-loop-reduce",
    "--slsr",
    "--slp-vectorizer",
    "--instcombine",
    "--lower-expect",
    "--dce",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--memcpyopt",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--insert-gcov-profiling",
          "--alignment-from-assumptions",
          "--attributor",
          "--loop-interchange",
          "--constmerge",
          "--ee-instrument",
          "--globaldce",
          "--forceattrs",
          "--correlated-propagation",
          "--coro-elide",
          "--loop-reroll",
          "--mergefunc",
          "--pgo-memop-opt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--insert-gcov-profiling",
      "--alignment-from-assumptions",
      "--attributor",
      "--loop-interchange",
      "--constmerge",
      "--ee-instrument",
      "--globaldce",
      "--forceattrs",
      "--correlated-propagation",
      "--coro-elide",
      "--loop-reroll",
      "--mergefunc",
      "--pgo-memop-opt"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}