{
  "program_id": "github-v0_43042.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 12,
    "onePred": 10,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 8,
    "twoPred": 14,
    "twoPredOneSuc": 0,
    "twoEach": 12,
    "twoSuccessor": 18,
    "morePreds": 2,
    "BB03Phi": 15,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 15,
    "BranchCount": 26,
    "returnInt": 2,
    "CriticalCount": 26,
    "NumEdges": 44,
    "const32Bit": 63,
    "const64Bit": 19,
    "numConstZeroes": 40,
    "numConstOnes": 10,
    "UncondBranches": 8,
    "binaryConstArg": 37,
    "NumAShrInst": 1,
    "NumAddInst": 31,
    "NumAllocaInst": 1,
    "NumAndInst": 2,
    "BlockMid": 3,
    "BlockLow": 25,
    "NumBitCastInst": 0,
    "NumBrInst": 26,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 22,
    "NumMulInst": 9,
    "NumOrInst": 7,
    "NumPHIInst": 26,
    "NumRetInst": 2,
    "NumSExtInst": 28,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 10,
    "NumSubInst": 8,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 28,
    "TotalInsts": 236,
    "TotalMemInst": 70,
    "TotalFuncs": 5,
    "ArgsPhi": 53,
    "testUnary": 57
  },
  "baseline_oz_instcount": 229,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--mldst-motion",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--sroa",
    "--newgvn",
    "--sccp",
    "--bdce",
    "--jump-threading",
    "--early-cse",
    "--sroa",
    "--loop-simplifycfg",
    "--sroa",
    "--newgvn",
    "--sccp",
    "--bdce",
    "--jump-threading",
    "--lower-expect",
    "--jump-threading",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--sccp",
    "--newgvn",
    "--mldst-motion",
    "--inline",
    "--newgvn",
    "--sccp",
    "--bdce",
    "--jump-threading",
    "--gvn-hoist",
    "--slsr",
    "--loop-reroll",
    "--early-cse",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--sroa",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--dce",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--dce",
    "--jump-threading",
    "--early-cse",
    "--dse",
    "--sroa",
    "--load-store-vectorizer",
    "--instcombine",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--functionattrs",
          "--inferattrs",
          "--strip-debug-declare",
          "--rewrite-statepoints-for-gc",
          "--loop-reroll",
          "--guard-widening",
          "--lower-widenable-condition",
          "--ipconstprop",
          "--loop-simplifycfg",
          "--simple-loop-unswitch",
          "--post-inline-ee-instrument",
          "--partial-inliner",
          "--aggressive-instcombine",
          "--speculative-execution",
          "--constprop",
          "--early-cse-memssa",
          "--constmerge",
          "--barrier",
          "--inject-tli-mappings",
          "--coro-cleanup",
          "--newgvn",
          "--strip",
          "--mergereturn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--functionattrs",
      "--inferattrs",
      "--strip-debug-declare",
      "--rewrite-statepoints-for-gc",
      "--loop-reroll",
      "--guard-widening",
      "--lower-widenable-condition",
      "--ipconstprop",
      "--loop-simplifycfg",
      "--simple-loop-unswitch",
      "--post-inline-ee-instrument",
      "--partial-inliner",
      "--aggressive-instcombine",
      "--speculative-execution",
      "--constprop",
      "--early-cse-memssa",
      "--constmerge",
      "--barrier",
      "--inject-tli-mappings",
      "--coro-cleanup",
      "--newgvn",
      "--strip",
      "--mergereturn"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}