{
  "program_id": "poj104-v1_48_804.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 30,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 2,
    "oneSuccessor": 29,
    "twoPred": 10,
    "twoPredOneSuc": 1,
    "twoEach": 9,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 0,
    "BranchCount": 41,
    "returnInt": 8,
    "CriticalCount": 3,
    "NumEdges": 53,
    "const32Bit": 53,
    "const64Bit": 46,
    "numConstZeroes": 36,
    "numConstOnes": 37,
    "UncondBranches": 29,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 23,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 41,
    "NumBitCastInst": 14,
    "NumBrInst": 41,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 30,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 64,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 28,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 6,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 45,
    "TotalInsts": 279,
    "TotalMemInst": 149,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 114
  },
  "baseline_oz_instcount": 168,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--mem2reg",
    "--dce",
    "--jump-threading",
    "--instsimplify",
    "--inline",
    "--instcombine",
    "--instsimplify",
    "--globalopt",
    "--aggressive-instcombine",
    "--sroa",
    "--sccp",
    "--licm",
    "--early-cse",
    "--lower-expect",
    "--jump-threading",
    "--correlated-propagation",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--dce",
    "--mergefunc",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--indvars",
    "--early-cse",
    "--die",
    "--sroa",
    "--mldst-motion",
    "--licm",
    "--reassociate",
    "--dse",
    "--loop-instsimplify",
    "--gvn",
    "--slsr",
    "--instcombine",
    "--correlated-propagation",
    "--ipsccp",
    "--reassociate",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--loweratomic",
    "--ipsccp",
    "--ipsccp",
    "--sroa",
    "--sccp",
    "--licm",
    "--early-cse",
    "--lower-expect",
    "--loop-rotate",
    "--lower-expect",
    "--jump-threading",
    "--correlated-propagation",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--dce",
    "--mergefunc",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--indvars",
    "--early-cse",
    "--die",
    "--sroa",
    "--mldst-motion",
    "--licm",
    "--reassociate",
    "--dse",
    "--loop-instsimplify",
    "--gvn",
    "--instcombine",
    "--flattencfg",
    "--aggressive-instcombine",
    "--die",
    "--mem2reg",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--lower-expect",
    "--licm",
    "--ipsccp",
    "--globalopt",
    "--loweratomic",
    "--globalopt",
    "--sccp",
    "--elim-avail-extern",
    "--lower-expect",
    "--sroa",
    "--indvars",
    "--gvn",
    "--indvars",
    "--slsr",
    "--instcombine",
    "--mergefunc",
    "--mem2reg",
    "--adce",
    "--bdce",
    "--simplifycfg",
    "--loop-reroll",
    "--gvn",
    "--flattencfg",
    "--early-cse",
    "--simplifycfg",
    "--die",
    "--die",
    "--gvn-hoist",
    "--mergefunc",
    "--elim-avail-extern",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--add-discriminators",
          "--forceattrs",
          "--indvars",
          "--inline",
          "--bdce",
          "--strip",
          "--slsr",
          "--mem2reg",
          "--sancov",
          "--early-cse",
          "--alignment-from-assumptions",
          "--loop-idiom",
          "--lcssa",
          "--constprop",
          "--elim-avail-extern",
          "--gvn",
          "--strip-debug-declare",
          "--jump-threading",
          "--ipconstprop",
          "--loop-sink",
          "--mergereturn",
          "--canonicalize-aliases",
          "--correlated-propagation",
          "--loop-reroll",
          "--nary-reassociate",
          "--functionattrs",
          "--name-anon-globals",
          "--loop-rotate",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+13.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--add-discriminators",
      "--forceattrs",
      "--indvars",
      "--inline",
      "--bdce",
      "--strip",
      "--slsr",
      "--mem2reg",
      "--sancov",
      "--early-cse",
      "--alignment-from-assumptions",
      "--loop-idiom",
      "--lcssa",
      "--constprop",
      "--elim-avail-extern",
      "--gvn",
      "--strip-debug-declare",
      "--jump-threading",
      "--ipconstprop",
      "--loop-sink",
      "--mergereturn",
      "--canonicalize-aliases",
      "--correlated-propagation",
      "--loop-reroll",
      "--nary-reassociate",
      "--functionattrs",
      "--name-anon-globals",
      "--loop-rotate",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+13.7%"
  }
}