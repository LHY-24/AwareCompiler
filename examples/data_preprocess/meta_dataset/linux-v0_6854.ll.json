{
  "program_id": "linux-v0_6854.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 5,
    "oneSuccessor": 23,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 14,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 43,
    "BeginPhi": 0,
    "BranchCount": 37,
    "returnInt": 3,
    "CriticalCount": 8,
    "NumEdges": 51,
    "const32Bit": 107,
    "const64Bit": 19,
    "numConstZeroes": 47,
    "numConstOnes": 58,
    "UncondBranches": 23,
    "binaryConstArg": 28,
    "NumAShrInst": 1,
    "NumAddInst": 10,
    "NumAllocaInst": 38,
    "NumAndInst": 8,
    "BlockMid": 7,
    "BlockLow": 36,
    "NumBitCastInst": 5,
    "NumBrInst": 37,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 80,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 50,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 6,
    "NumZExtInst": 27,
    "TotalBlocks": 43,
    "TotalInsts": 342,
    "TotalMemInst": 209,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 161
  },
  "baseline_oz_instcount": 342,
  "knowledge_base_entry": [
    "--loweratomic",
    "--aggressive-instcombine",
    "--instcombine",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--globalopt",
    "--gvn-hoist",
    "--lower-expect",
    "--dse",
    "--aggressive-instcombine",
    "--instcombine",
    "--mldst-motion",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--loop-idiom",
          "--lcssa",
          "--partial-inliner",
          "--aggressive-instcombine",
          "--ee-instrument",
          "--separate-const-offset-from-gep",
          "--loop-sink",
          "--argpromotion",
          "--mem2reg",
          "--prune-eh",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--loop-idiom",
      "--lcssa",
      "--partial-inliner",
      "--aggressive-instcombine",
      "--ee-instrument",
      "--separate-const-offset-from-gep",
      "--loop-sink",
      "--argpromotion",
      "--mem2reg",
      "--prune-eh",
      "--coro-split"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}