{
  "program_id": "linux-v0_7003.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 81,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 32,
    "oneSuccessor": 68,
    "twoPred": 22,
    "twoPredOneSuc": 9,
    "twoEach": 4,
    "twoSuccessor": 47,
    "morePreds": 13,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 133,
    "BeginPhi": 4,
    "BranchCount": 115,
    "returnInt": 29,
    "CriticalCount": 22,
    "NumEdges": 169,
    "const32Bit": 292,
    "const64Bit": 11,
    "numConstZeroes": 148,
    "numConstOnes": 111,
    "UncondBranches": 68,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 78,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 130,
    "NumBitCastInst": 10,
    "NumBrInst": 115,
    "NumCallInst": 79,
    "NumGetElementPtrInst": 72,
    "NumICmpInst": 51,
    "NumLShrInst": 0,
    "NumLoadInst": 229,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 21,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 118,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 12,
    "NumZExtInst": 4,
    "TotalBlocks": 137,
    "TotalInsts": 801,
    "TotalMemInst": 576,
    "TotalFuncs": 36,
    "ArgsPhi": 8,
    "testUnary": 325
  },
  "baseline_oz_instcount": 801,
  "knowledge_base_entry": [
    "--prune-eh",
    "--newgvn",
    "--adce",
    "--mergefunc",
    "--newgvn",
    "--flattencfg",
    "--simplifycfg",
    "--bdce",
    "--simplifycfg",
    "--instcombine",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--sroa",
    "--gvn-hoist",
    "--inline",
    "--bdce",
    "--mergefunc",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-expect",
          "--sccp",
          "--licm",
          "--pgo-memop-opt",
          "--consthoist",
          "--adce",
          "--loop-idiom",
          "--loop-interchange",
          "--loop-predication",
          "--div-rem-pairs",
          "--irce",
          "--mergefunc",
          "--reassociate",
          "--inject-tli-mappings",
          "--loop-unroll",
          "--slp-vectorizer",
          "--hotcoldsplit",
          "--coro-split",
          "--die",
          "--insert-gcov-profiling",
          "--mem2reg",
          "--gvn",
          "--ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+19.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-expect",
      "--sccp",
      "--licm",
      "--pgo-memop-opt",
      "--consthoist",
      "--adce",
      "--loop-idiom",
      "--loop-interchange",
      "--loop-predication",
      "--div-rem-pairs",
      "--irce",
      "--mergefunc",
      "--reassociate",
      "--inject-tli-mappings",
      "--loop-unroll",
      "--slp-vectorizer",
      "--hotcoldsplit",
      "--coro-split",
      "--die",
      "--insert-gcov-profiling",
      "--mem2reg",
      "--gvn",
      "--ee-instrument"
    ],
    "performance_vs_Oz": "+19.7%"
  }
}