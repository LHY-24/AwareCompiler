{
  "program_id": "linux-v0_8118.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 86,
    "onePredOneSuc": 67,
    "onePredTwoSuc": 18,
    "oneSuccessor": 80,
    "twoPred": 26,
    "twoPredOneSuc": 10,
    "twoEach": 7,
    "twoSuccessor": 36,
    "morePreds": 4,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 138,
    "BeginPhi": 2,
    "BranchCount": 116,
    "returnInt": 26,
    "CriticalCount": 27,
    "NumEdges": 152,
    "const32Bit": 179,
    "const64Bit": 35,
    "numConstZeroes": 55,
    "numConstOnes": 123,
    "UncondBranches": 80,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 100,
    "NumAndInst": 3,
    "BlockMid": 10,
    "BlockLow": 130,
    "NumBitCastInst": 5,
    "NumBrInst": 116,
    "NumCallInst": 68,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 33,
    "NumLShrInst": 3,
    "NumLoadInst": 162,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 24,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 135,
    "NumSubInst": 3,
    "NumTruncInst": 8,
    "NumXorInst": 10,
    "NumZExtInst": 14,
    "TotalBlocks": 140,
    "TotalInsts": 742,
    "TotalMemInst": 478,
    "TotalFuncs": 55,
    "ArgsPhi": 4,
    "testUnary": 319
  },
  "baseline_oz_instcount": 741,
  "knowledge_base_entry": [
    "--loop-deletion",
    "--loop-simplifycfg",
    "--newgvn",
    "--lower-expect",
    "--sroa",
    "--slp-vectorizer",
    "--mergefunc",
    "--globalopt",
    "--sroa",
    "--simplifycfg",
    "--die",
    "--aggressive-instcombine",
    "--lower-expect",
    "--ipsccp",
    "--loop-instsimplify",
    "--instcombine",
    "--early-cse-memssa",
    "--loop-reroll",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--globalsplit",
          "--flattencfg",
          "--strip-nondebug",
          "--loop-data-prefetch",
          "--ipsccp",
          "--coro-early",
          "--loop-instsimplify",
          "--early-cse-memssa",
          "--cross-dso-cfi",
          "--strip-debug-declare",
          "--canonicalize-aliases",
          "--callsite-splitting",
          "-loop-reduce",
          "--loop-unroll",
          "--consthoist",
          "--die",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--globalsplit",
      "--flattencfg",
      "--strip-nondebug",
      "--loop-data-prefetch",
      "--ipsccp",
      "--coro-early",
      "--loop-instsimplify",
      "--early-cse-memssa",
      "--cross-dso-cfi",
      "--strip-debug-declare",
      "--canonicalize-aliases",
      "--callsite-splitting",
      "-loop-reduce",
      "--loop-unroll",
      "--consthoist",
      "--die",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}