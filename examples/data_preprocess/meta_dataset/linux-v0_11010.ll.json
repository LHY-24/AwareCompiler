{
  "program_id": "linux-v0_11010.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 48,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 9,
    "oneSuccessor": 48,
    "twoPred": 26,
    "twoPredOneSuc": 8,
    "twoEach": 12,
    "twoSuccessor": 26,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 89,
    "BeginPhi": 0,
    "BranchCount": 74,
    "returnInt": 12,
    "CriticalCount": 19,
    "NumEdges": 107,
    "const32Bit": 202,
    "const64Bit": 7,
    "numConstZeroes": 57,
    "numConstOnes": 66,
    "UncondBranches": 48,
    "binaryConstArg": 34,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 48,
    "NumAndInst": 8,
    "BlockMid": 6,
    "BlockLow": 83,
    "NumBitCastInst": 2,
    "NumBrInst": 74,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 19,
    "NumLShrInst": 1,
    "NumLoadInst": 147,
    "NumMulInst": 5,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 5,
    "NumStoreInst": 82,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 1,
    "NumZExtInst": 13,
    "TotalBlocks": 89,
    "TotalInsts": 525,
    "TotalMemInst": 351,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 219
  },
  "baseline_oz_instcount": 528,
  "knowledge_base_entry": [
    "--sink",
    "--ipsccp",
    "--die",
    "--dse",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--sccp",
          "--jump-threading",
          "--bdce",
          "--coro-early",
          "--rpo-functionattrs",
          "--barrier",
          "--post-inline-ee-instrument",
          "--mldst-motion",
          "--alignment-from-assumptions",
          "--slp-vectorizer",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--sccp",
      "--jump-threading",
      "--bdce",
      "--coro-early",
      "--rpo-functionattrs",
      "--barrier",
      "--post-inline-ee-instrument",
      "--mldst-motion",
      "--alignment-from-assumptions",
      "--slp-vectorizer",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}