{
  "program_id": "github-v0_49748.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 1,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 1,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 2,
    "BeginPhi": 1,
    "BranchCount": 2,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 3,
    "const32Bit": 26,
    "const64Bit": 0,
    "numConstZeroes": 2,
    "numConstOnes": 6,
    "UncondBranches": 1,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 30,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 1,
    "NumBitCastInst": 0,
    "NumBrInst": 2,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 12,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 2,
    "NumShlInst": 2,
    "NumStoreInst": 2,
    "NumSubInst": 4,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 22,
    "TotalBlocks": 3,
    "TotalInsts": 112,
    "TotalMemInst": 28,
    "TotalFuncs": 3,
    "ArgsPhi": 2,
    "testUnary": 37
  },
  "baseline_oz_instcount": 113,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--early-cse",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--early-cse",
    "--reassociate",
    "--early-cse",
    "--newgvn",
    "--mldst-motion",
    "--early-cse-memssa",
    "--loop-reroll",
    "--instcombine",
    "--licm",
    "--gvn",
    "--slsr",
    "--slp-vectorizer",
    "--early-cse",
    "--die",
    "--slp-vectorizer",
    "--mergefunc",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--instcombine",
    "--loop-rotate",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--dse",
    "--gvn-hoist",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--gvn",
    "--ipsccp",
    "--instcombine",
    "--flattencfg",
    "--mem2reg",
    "--dce",
    "--simplifycfg",
    "--loop-deletion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--elim-avail-extern",
          "--early-cse-memssa",
          "--coro-early",
          "--loop-vectorize",
          "--loop-rotate",
          "--canonicalize-aliases",
          "--loop-unroll",
          "--loop-instsimplify",
          "--nary-reassociate",
          "--loop-interchange",
          "--sink",
          "--lcssa",
          "--loop-fusion",
          "--loop-sink",
          "--slsr",
          "--sancov",
          "--loop-reroll",
          "--coro-elide"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--elim-avail-extern",
      "--early-cse-memssa",
      "--coro-early",
      "--loop-vectorize",
      "--loop-rotate",
      "--canonicalize-aliases",
      "--loop-unroll",
      "--loop-instsimplify",
      "--nary-reassociate",
      "--loop-interchange",
      "--sink",
      "--lcssa",
      "--loop-fusion",
      "--loop-sink",
      "--slsr",
      "--sancov",
      "--loop-reroll",
      "--coro-elide"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}