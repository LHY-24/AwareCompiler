{
  "program_id": "tensorflow-v0_1906.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 23,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 8,
    "oneSuccessor": 11,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 15,
    "morePreds": 1,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 6,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 7,
    "NumEdges": 41,
    "const32Bit": 68,
    "const64Bit": 52,
    "numConstZeroes": 89,
    "numConstOnes": 19,
    "UncondBranches": 11,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 1,
    "NumAndInst": 5,
    "BlockMid": 1,
    "BlockLow": 42,
    "NumBitCastInst": 30,
    "NumBrInst": 23,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 6,
    "NumRetInst": 11,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 2,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 43,
    "TotalInsts": 224,
    "TotalMemInst": 115,
    "TotalFuncs": 37,
    "ArgsPhi": 14,
    "testUnary": 60
  },
  "baseline_oz_instcount": 224,
  "knowledge_base_entry": [
    "--adce",
    "--lower-expect",
    "--simplifycfg",
    "--bdce",
    "--licm",
    "--early-cse",
    "--gvn",
    "--sccp",
    "--early-cse-memssa",
    "--ipsccp",
    "--ipsccp",
    "--lower-expect",
    "--early-cse-memssa",
    "--newgvn",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--strip-dead-prototypes",
          "--consthoist",
          "--instsimplify",
          "--lowerswitch",
          "--inline",
          "--strip",
          "--nary-reassociate",
          "--die",
          "--mergereturn",
          "--coro-split",
          "--separate-const-offset-from-gep",
          "--ee-instrument",
          "--instcombine",
          "--called-value-propagation",
          "--sccp",
          "--simplifycfg",
          "--argpromotion",
          "--partial-inliner",
          "--loweratomic",
          "--insert-gcov-profiling",
          "--loop-sink",
          "--globaldce",
          "--mergeicmps",
          "--rpo-functionattrs",
          "--instnamer",
          "--gvn-hoist",
          "--aggressive-instcombine",
          "--pgo-memop-opt",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--strip-dead-prototypes",
      "--consthoist",
      "--instsimplify",
      "--lowerswitch",
      "--inline",
      "--strip",
      "--nary-reassociate",
      "--die",
      "--mergereturn",
      "--coro-split",
      "--separate-const-offset-from-gep",
      "--ee-instrument",
      "--instcombine",
      "--called-value-propagation",
      "--sccp",
      "--simplifycfg",
      "--argpromotion",
      "--partial-inliner",
      "--loweratomic",
      "--insert-gcov-profiling",
      "--loop-sink",
      "--globaldce",
      "--mergeicmps",
      "--rpo-functionattrs",
      "--instnamer",
      "--gvn-hoist",
      "--aggressive-instcombine",
      "--pgo-memop-opt",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+9.8%"
  }
}