{
  "program_id": "github-v0_20143.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 5,
    "oneSuccessor": 21,
    "twoPred": 12,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 0,
    "BranchCount": 32,
    "returnInt": 15,
    "CriticalCount": 9,
    "NumEdges": 49,
    "const32Bit": 54,
    "const64Bit": 16,
    "numConstZeroes": 19,
    "numConstOnes": 36,
    "UncondBranches": 21,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 22,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 32,
    "NumBitCastInst": 0,
    "NumBrInst": 32,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 80,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 18,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 53,
    "NumSubInst": 5,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 36,
    "TotalInsts": 293,
    "TotalMemInst": 194,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 131
  },
  "baseline_oz_instcount": 294,
  "knowledge_base_entry": [
    "--scalarizer",
    "--early-cse",
    "--aggressive-instcombine",
    "--sroa",
    "--slp-vectorizer",
    "--instcombine",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--instcombine",
    "--gvn-hoist",
    "--flattencfg",
    "--elim-avail-extern",
    "--jump-threading",
    "--mem2reg",
    "--load-store-vectorizer",
    "--mergefunc",
    "--adce",
    "--reassociate",
    "--sroa",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--simple-loop-unswitch",
          "--dse",
          "--lower-matrix-intrinsics",
          "--globalsplit",
          "--licm",
          "--elim-avail-extern",
          "--prune-eh",
          "--div-rem-pairs",
          "--flattencfg",
          "--dce",
          "--aggressive-instcombine",
          "--lcssa",
          "--constprop",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--simple-loop-unswitch",
      "--dse",
      "--lower-matrix-intrinsics",
      "--globalsplit",
      "--licm",
      "--elim-avail-extern",
      "--prune-eh",
      "--div-rem-pairs",
      "--flattencfg",
      "--dce",
      "--aggressive-instcombine",
      "--lcssa",
      "--constprop",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+3.7%"
  }
}