{
  "program_id": "linux-v0_13013.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 59,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 25,
    "oneSuccessor": 43,
    "twoPred": 12,
    "twoPredOneSuc": 7,
    "twoEach": 3,
    "twoSuccessor": 30,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 95,
    "BeginPhi": 0,
    "BranchCount": 73,
    "returnInt": 23,
    "CriticalCount": 8,
    "NumEdges": 103,
    "const32Bit": 295,
    "const64Bit": 18,
    "numConstZeroes": 130,
    "numConstOnes": 104,
    "UncondBranches": 43,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 66,
    "NumAndInst": 6,
    "BlockMid": 14,
    "BlockLow": 81,
    "NumBitCastInst": 12,
    "NumBrInst": 73,
    "NumCallInst": 74,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 32,
    "NumLShrInst": 3,
    "NumLoadInst": 233,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 109,
    "NumSubInst": 4,
    "NumTruncInst": 4,
    "NumXorInst": 11,
    "NumZExtInst": 5,
    "TotalBlocks": 95,
    "TotalInsts": 742,
    "TotalMemInst": 552,
    "TotalFuncs": 44,
    "ArgsPhi": 0,
    "testUnary": 329
  },
  "baseline_oz_instcount": 743,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--jump-threading",
    "--globalopt",
    "--correlated-propagation",
    "--sroa",
    "--globalopt",
    "--mem2reg",
    "--memcpyopt",
    "--instcombine",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--globaldce",
          "--mergereturn",
          "--lower-constant-intrinsics",
          "--ipsccp",
          "--attributor",
          "--partially-inline-libcalls",
          "--tailcallelim",
          "--strip-dead-prototypes",
          "--scalarizer",
          "--lower-expect",
          "--simplifycfg",
          "--loop-vectorize",
          "--gvn-hoist",
          "--alignment-from-assumptions",
          "--argpromotion",
          "--pgo-memop-opt",
          "--strip-debug-declare",
          "--infer-address-spaces",
          "--coro-early",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--globaldce",
      "--mergereturn",
      "--lower-constant-intrinsics",
      "--ipsccp",
      "--attributor",
      "--partially-inline-libcalls",
      "--tailcallelim",
      "--strip-dead-prototypes",
      "--scalarizer",
      "--lower-expect",
      "--simplifycfg",
      "--loop-vectorize",
      "--gvn-hoist",
      "--alignment-from-assumptions",
      "--argpromotion",
      "--pgo-memop-opt",
      "--strip-debug-declare",
      "--infer-address-spaces",
      "--coro-early",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}