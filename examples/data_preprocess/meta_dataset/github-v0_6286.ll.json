{
  "program_id": "github-v0_6286.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 2,
    "oneSuccessor": 9,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 15,
    "returnInt": 2,
    "CriticalCount": 3,
    "NumEdges": 21,
    "const32Bit": 18,
    "const64Bit": 0,
    "numConstZeroes": 8,
    "numConstOnes": 8,
    "UncondBranches": 9,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 3,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 24,
    "NumBitCastInst": 0,
    "NumBrInst": 15,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 9,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 8,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 24,
    "TotalInsts": 67,
    "TotalMemInst": 34,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 13
  },
  "baseline_oz_instcount": 68,
  "knowledge_base_entry": [
    "--globalopt",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--sccp",
    "--lower-expect",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--partial-inliner",
          "--slp-vectorizer",
          "--loop-guard-widening",
          "--rpo-functionattrs",
          "--div-rem-pairs",
          "--inferattrs",
          "--loop-distribute",
          "--globalopt",
          "--loop-deletion",
          "--loop-load-elim",
          "--mergereturn",
          "--dse",
          "--coro-split",
          "--called-value-propagation",
          "--memcpyopt",
          "--flattencfg",
          "--loop-data-prefetch",
          "--functionattrs",
          "--loop-predication",
          "--deadargelim",
          "--globalsplit",
          "--irce",
          "--die",
          "--aggressive-instcombine",
          "--constprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--partial-inliner",
      "--slp-vectorizer",
      "--loop-guard-widening",
      "--rpo-functionattrs",
      "--div-rem-pairs",
      "--inferattrs",
      "--loop-distribute",
      "--globalopt",
      "--loop-deletion",
      "--loop-load-elim",
      "--mergereturn",
      "--dse",
      "--coro-split",
      "--called-value-propagation",
      "--memcpyopt",
      "--flattencfg",
      "--loop-data-prefetch",
      "--functionattrs",
      "--loop-predication",
      "--deadargelim",
      "--globalsplit",
      "--irce",
      "--die",
      "--aggressive-instcombine",
      "--constprop"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}