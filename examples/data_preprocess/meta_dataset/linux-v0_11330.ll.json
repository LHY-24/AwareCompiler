{
  "program_id": "linux-v0_11330.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 49,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 17,
    "oneSuccessor": 39,
    "twoPred": 12,
    "twoPredOneSuc": 5,
    "twoEach": 6,
    "twoSuccessor": 28,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 73,
    "BeginPhi": 1,
    "BranchCount": 67,
    "returnInt": 13,
    "CriticalCount": 8,
    "NumEdges": 95,
    "const32Bit": 144,
    "const64Bit": 16,
    "numConstZeroes": 66,
    "numConstOnes": 55,
    "UncondBranches": 39,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 42,
    "NumAndInst": 4,
    "BlockMid": 7,
    "BlockLow": 67,
    "NumBitCastInst": 8,
    "NumBrInst": 67,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 127,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 7,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 71,
    "NumSubInst": 4,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 16,
    "TotalBlocks": 74,
    "TotalInsts": 456,
    "TotalMemInst": 296,
    "TotalFuncs": 17,
    "ArgsPhi": 2,
    "testUnary": 202
  },
  "baseline_oz_instcount": 459,
  "knowledge_base_entry": [
    "--dce",
    "--lower-expect",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--early-cse",
    "--sccp",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--instsimplify",
    "--correlated-propagation",
    "--mergefunc",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instcombine",
          "--mergefunc",
          "--callsite-splitting",
          "--load-store-vectorizer",
          "--div-rem-pairs",
          "--loop-data-prefetch",
          "--newgvn",
          "--sroa",
          "--pgo-memop-opt",
          "--strip",
          "--reassociate",
          "--infer-address-spaces",
          "--instnamer",
          "--loop-interchange",
          "--canonicalize-aliases",
          "--inline",
          "--argpromotion",
          "--sink",
          "--inject-tli-mappings",
          "--early-cse-memssa",
          "--name-anon-globals",
          "--globalsplit",
          "--aggressive-instcombine",
          "--dse",
          "--globaldce",
          "--elim-avail-extern",
          "--loop-unroll-and-jam",
          "--ipsccp",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instcombine",
      "--mergefunc",
      "--callsite-splitting",
      "--load-store-vectorizer",
      "--div-rem-pairs",
      "--loop-data-prefetch",
      "--newgvn",
      "--sroa",
      "--pgo-memop-opt",
      "--strip",
      "--reassociate",
      "--infer-address-spaces",
      "--instnamer",
      "--loop-interchange",
      "--canonicalize-aliases",
      "--inline",
      "--argpromotion",
      "--sink",
      "--inject-tli-mappings",
      "--early-cse-memssa",
      "--name-anon-globals",
      "--globalsplit",
      "--aggressive-instcombine",
      "--dse",
      "--globaldce",
      "--elim-avail-extern",
      "--loop-unroll-and-jam",
      "--ipsccp",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}