{
  "program_id": "github-v0_12424.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 14,
    "twoPred": 4,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 10,
    "CriticalCount": 1,
    "NumEdges": 27,
    "const32Bit": 47,
    "const64Bit": 0,
    "numConstZeroes": 19,
    "numConstOnes": 10,
    "UncondBranches": 14,
    "binaryConstArg": 9,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 8,
    "NumAndInst": 1,
    "BlockMid": 2,
    "BlockLow": 17,
    "NumBitCastInst": 4,
    "NumBrInst": 17,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 15,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 19,
    "TotalInsts": 155,
    "TotalMemInst": 100,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 80
  },
  "baseline_oz_instcount": 155,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--early-cse-memssa",
    "--globalopt",
    "--reassociate",
    "--licm",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--instcombine",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--deadargelim",
          "--pgo-memop-opt",
          "--instnamer",
          "--early-cse-memssa",
          "--inject-tli-mappings",
          "--aggressive-instcombine",
          "--post-inline-ee-instrument",
          "--early-cse",
          "--rpo-functionattrs",
          "--float2int",
          "--loop-vectorize",
          "--barrier",
          "--loop-idiom",
          "--insert-gcov-profiling",
          "--loop-load-elim",
          "--lcssa",
          "--die",
          "--reassociate",
          "--simplifycfg",
          "--newgvn",
          "--dce",
          "--lowerinvoke",
          "--strip-debug-declare",
          "--jump-threading"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--deadargelim",
      "--pgo-memop-opt",
      "--instnamer",
      "--early-cse-memssa",
      "--inject-tli-mappings",
      "--aggressive-instcombine",
      "--post-inline-ee-instrument",
      "--early-cse",
      "--rpo-functionattrs",
      "--float2int",
      "--loop-vectorize",
      "--barrier",
      "--loop-idiom",
      "--insert-gcov-profiling",
      "--loop-load-elim",
      "--lcssa",
      "--die",
      "--reassociate",
      "--simplifycfg",
      "--newgvn",
      "--dce",
      "--lowerinvoke",
      "--strip-debug-declare",
      "--jump-threading"
    ],
    "performance_vs_Oz": "+7.1%"
  }
}