{
  "program_id": "github-v0_20496.ll",
  "autophase_features": {
    "BBNumArgsHi": 4,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 2,
    "BBNoPhi": 3,
    "BeginPhi": 4,
    "BranchCount": 6,
    "returnInt": 3,
    "CriticalCount": 6,
    "NumEdges": 10,
    "const32Bit": 10,
    "const64Bit": 2,
    "numConstZeroes": 6,
    "numConstOnes": 4,
    "UncondBranches": 2,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 3,
    "NumBitCastInst": 10,
    "NumBrInst": 6,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 14,
    "NumRetInst": 1,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 11,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 7,
    "TotalInsts": 133,
    "TotalMemInst": 72,
    "TotalFuncs": 7,
    "ArgsPhi": 28,
    "testUnary": 29
  },
  "baseline_oz_instcount": 133,
  "knowledge_base_entry": [
    "--sroa",
    "--newgvn",
    "--sroa",
    "--bdce",
    "--mem2reg",
    "--elim-avail-extern",
    "--inline",
    "--licm",
    "--die",
    "--load-store-vectorizer",
    "--inline",
    "--loop-instsimplify",
    "--bdce",
    "--instcombine",
    "--memcpyopt",
    "--simplifycfg",
    "--sroa",
    "--early-cse",
    "--gvn-hoist",
    "--memcpyopt",
    "--slp-vectorizer",
    "--instsimplify",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--sroa",
    "--loop-rotate",
    "--instsimplify",
    "--bdce",
    "--mem2reg",
    "--instcombine",
    "--mergefunc",
    "--simplifycfg",
    "--memcpyopt",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simplifycfg",
          "--div-rem-pairs",
          "--scalarizer",
          "--reassociate",
          "--loweratomic",
          "--always-inline",
          "--prune-eh",
          "--early-cse",
          "--mldst-motion",
          "--sccp",
          "--partially-inline-libcalls",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simplifycfg",
      "--div-rem-pairs",
      "--scalarizer",
      "--reassociate",
      "--loweratomic",
      "--always-inline",
      "--prune-eh",
      "--early-cse",
      "--mldst-motion",
      "--sccp",
      "--partially-inline-libcalls",
      "--adce"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}