{
  "program_id": "linux-v0_5117.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 46,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 10,
    "oneSuccessor": 43,
    "twoPred": 16,
    "twoPredOneSuc": 7,
    "twoEach": 2,
    "twoSuccessor": 21,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 85,
    "BeginPhi": 0,
    "BranchCount": 64,
    "returnInt": 14,
    "CriticalCount": 10,
    "NumEdges": 85,
    "const32Bit": 406,
    "const64Bit": 67,
    "numConstZeroes": 228,
    "numConstOnes": 133,
    "UncondBranches": 43,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 79,
    "NumAndInst": 6,
    "BlockMid": 12,
    "BlockLow": 73,
    "NumBitCastInst": 21,
    "NumBrInst": 64,
    "NumCallInst": 60,
    "NumGetElementPtrInst": 161,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 192,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 9,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 121,
    "NumSubInst": 6,
    "NumTruncInst": 4,
    "NumXorInst": 11,
    "NumZExtInst": 16,
    "TotalBlocks": 85,
    "TotalInsts": 816,
    "TotalMemInst": 613,
    "TotalFuncs": 47,
    "ArgsPhi": 0,
    "testUnary": 330
  },
  "baseline_oz_instcount": 816,
  "knowledge_base_entry": [
    "--loweratomic",
    "--aggressive-instcombine",
    "--mergefunc",
    "--instsimplify",
    "--nary-reassociate",
    "--gvn-hoist",
    "--jump-threading",
    "--gvn",
    "-loop-reduce",
    "--instcombine",
    "--loop-deletion",
    "--newgvn",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--sink",
          "--instcombine",
          "--insert-gcov-profiling",
          "--forceattrs",
          "--flattencfg",
          "--argpromotion",
          "--loop-vectorize",
          "--lowerinvoke",
          "--globaldce",
          "--separate-const-offset-from-gep",
          "--early-cse",
          "--mergefunc",
          "--newgvn",
          "--speculative-execution",
          "--loop-unroll",
          "--loop-unroll-and-jam",
          "--consthoist",
          "--licm",
          "--correlated-propagation",
          "--rewrite-statepoints-for-gc",
          "--functionattrs",
          "--sancov",
          "--lowerswitch",
          "--infer-address-spaces",
          "--rpo-functionattrs",
          "--slp-vectorizer",
          "--mem2reg",
          "--loop-idiom"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--sink",
      "--instcombine",
      "--insert-gcov-profiling",
      "--forceattrs",
      "--flattencfg",
      "--argpromotion",
      "--loop-vectorize",
      "--lowerinvoke",
      "--globaldce",
      "--separate-const-offset-from-gep",
      "--early-cse",
      "--mergefunc",
      "--newgvn",
      "--speculative-execution",
      "--loop-unroll",
      "--loop-unroll-and-jam",
      "--consthoist",
      "--licm",
      "--correlated-propagation",
      "--rewrite-statepoints-for-gc",
      "--functionattrs",
      "--sancov",
      "--lowerswitch",
      "--infer-address-spaces",
      "--rpo-functionattrs",
      "--slp-vectorizer",
      "--mem2reg",
      "--loop-idiom"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}