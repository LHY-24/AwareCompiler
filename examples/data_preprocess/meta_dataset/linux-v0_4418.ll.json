{
  "program_id": "linux-v0_4418.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 57,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 15,
    "oneSuccessor": 52,
    "twoPred": 25,
    "twoPredOneSuc": 9,
    "twoEach": 11,
    "twoSuccessor": 33,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 110,
    "BeginPhi": 0,
    "BranchCount": 85,
    "returnInt": 52,
    "CriticalCount": 23,
    "NumEdges": 127,
    "const32Bit": 399,
    "const64Bit": 39,
    "numConstZeroes": 205,
    "numConstOnes": 119,
    "UncondBranches": 52,
    "binaryConstArg": 17,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 67,
    "NumAndInst": 9,
    "BlockMid": 12,
    "BlockLow": 98,
    "NumBitCastInst": 15,
    "NumBrInst": 85,
    "NumCallInst": 80,
    "NumGetElementPtrInst": 132,
    "NumICmpInst": 34,
    "NumLShrInst": 4,
    "NumLoadInst": 279,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 103,
    "NumSubInst": 0,
    "NumTruncInst": 17,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 110,
    "TotalInsts": 867,
    "TotalMemInst": 661,
    "TotalFuncs": 39,
    "ArgsPhi": 0,
    "testUnary": 390
  },
  "baseline_oz_instcount": 867,
  "knowledge_base_entry": [
    "--bdce",
    "--dse",
    "--lower-expect",
    "--sroa",
    "--sccp",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--dce",
    "--gvn-hoist",
    "--instsimplify",
    "--die",
    "--reassociate",
    "--inline",
    "--prune-eh",
    "--elim-avail-extern",
    "--early-cse",
    "--early-cse-memssa",
    "--reassociate",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--newgvn",
    "--lower-expect",
    "--sroa",
    "--globalopt",
    "--jump-threading",
    "--reassociate",
    "--ipsccp",
    "--dce",
    "--gvn-hoist",
    "--instsimplify",
    "--aggressive-instcombine",
    "--inline",
    "--adce",
    "--newgvn",
    "--gvn",
    "--dse",
    "--mergefunc",
    "--adce",
    "--elim-avail-extern",
    "--newgvn",
    "--memcpyopt",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--post-inline-ee-instrument",
          "--globalopt",
          "--prune-eh",
          "--constprop",
          "--scalarizer",
          "--partially-inline-libcalls",
          "--newgvn",
          "--consthoist",
          "--float2int",
          "--mergereturn",
          "--early-cse",
          "--cross-dso-cfi",
          "--lower-guard-intrinsic",
          "--loop-data-prefetch",
          "--deadargelim",
          "--strip-dead-prototypes",
          "--bdce",
          "--ipsccp",
          "--loweratomic",
          "--alignment-from-assumptions",
          "--tailcallelim",
          "--dse",
          "--nary-reassociate",
          "--constmerge",
          "--dce",
          "--memcpyopt",
          "--sancov",
          "--inline",
          "--slp-vectorizer",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--post-inline-ee-instrument",
      "--globalopt",
      "--prune-eh",
      "--constprop",
      "--scalarizer",
      "--partially-inline-libcalls",
      "--newgvn",
      "--consthoist",
      "--float2int",
      "--mergereturn",
      "--early-cse",
      "--cross-dso-cfi",
      "--lower-guard-intrinsic",
      "--loop-data-prefetch",
      "--deadargelim",
      "--strip-dead-prototypes",
      "--bdce",
      "--ipsccp",
      "--loweratomic",
      "--alignment-from-assumptions",
      "--tailcallelim",
      "--dse",
      "--nary-reassociate",
      "--constmerge",
      "--dce",
      "--memcpyopt",
      "--sancov",
      "--inline",
      "--slp-vectorizer",
      "--adce"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}