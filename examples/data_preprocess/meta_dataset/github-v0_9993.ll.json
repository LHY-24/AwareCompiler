{
  "program_id": "github-v0_9993.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 1,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 120,
    "const64Bit": 0,
    "numConstZeroes": 47,
    "numConstOnes": 53,
    "UncondBranches": 0,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 171,
    "NumAllocaInst": 0,
    "NumAndInst": 18,
    "BlockMid": 0,
    "BlockLow": 0,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 62,
    "NumICmpInst": 95,
    "NumLShrInst": 0,
    "NumLoadInst": 93,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 5,
    "NumShlInst": 2,
    "NumStoreInst": 2,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 152,
    "TotalBlocks": 1,
    "TotalInsts": 612,
    "TotalMemInst": 159,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 247
  },
  "baseline_oz_instcount": 612,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--newgvn",
    "--instcombine",
    "--slsr",
    "--instcombine",
    "-loop-reduce",
    "--jump-threading",
    "--bdce",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--ipsccp",
    "--jump-threading",
    "--slp-vectorizer",
    "--slsr",
    "--instcombine",
    "-loop-reduce",
    "--jump-threading",
    "--bdce",
    "--loop-instsimplify",
    "--reassociate",
    "--simplifycfg",
    "--die",
    "--slp-vectorizer",
    "--early-cse",
    "--adce",
    "--newgvn",
    "--instcombine",
    "--slsr",
    "--instcombine",
    "-loop-reduce",
    "--jump-threading",
    "--bdce",
    "--licm",
    "--adce",
    "--reassociate",
    "--reassociate",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--reassociate",
    "--inline",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--ipsccp",
    "--jump-threading",
    "--slp-vectorizer",
    "--slsr",
    "--slp-vectorizer",
    "--mldst-motion",
    "--licm",
    "--lower-expect",
    "--loop-instsimplify",
    "--reassociate",
    "--gvn",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--bdce",
    "--correlated-propagation",
    "--reassociate",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--jump-threading",
    "--loop-deletion",
    "--newgvn",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--nary-reassociate",
    "--gvn",
    "--reassociate",
    "-loop-reduce",
    "--early-cse-memssa",
    "--mem2reg",
    "--loop-deletion",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--alignment-from-assumptions",
          "--ipconstprop",
          "--loop-unroll-and-jam",
          "--speculative-execution",
          "--strip-dead-prototypes",
          "--load-store-vectorizer",
          "--dse",
          "--lower-matrix-intrinsics",
          "--loop-rotate",
          "--insert-gcov-profiling",
          "--early-cse-memssa",
          "--functionattrs",
          "--loop-vectorize",
          "--die",
          "--loop-deletion",
          "--reassociate",
          "--inject-tli-mappings",
          "--licm",
          "--correlated-propagation",
          "--slp-vectorizer",
          "--div-rem-pairs",
          "--flattencfg",
          "--loop-interchange"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+20.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--alignment-from-assumptions",
      "--ipconstprop",
      "--loop-unroll-and-jam",
      "--speculative-execution",
      "--strip-dead-prototypes",
      "--load-store-vectorizer",
      "--dse",
      "--lower-matrix-intrinsics",
      "--loop-rotate",
      "--insert-gcov-profiling",
      "--early-cse-memssa",
      "--functionattrs",
      "--loop-vectorize",
      "--die",
      "--loop-deletion",
      "--reassociate",
      "--inject-tli-mappings",
      "--licm",
      "--correlated-propagation",
      "--slp-vectorizer",
      "--div-rem-pairs",
      "--flattencfg",
      "--loop-interchange"
    ],
    "performance_vs_Oz": "+20.6%"
  }
}