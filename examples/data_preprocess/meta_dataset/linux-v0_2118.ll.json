{
  "program_id": "linux-v0_2118.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 15,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 2,
    "BranchCount": 21,
    "returnInt": 2,
    "CriticalCount": 2,
    "NumEdges": 29,
    "const32Bit": 38,
    "const64Bit": 4,
    "numConstZeroes": 6,
    "numConstOnes": 32,
    "UncondBranches": 13,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 30,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 32,
    "NumBitCastInst": 4,
    "NumBrInst": 21,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 28,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 11,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 36,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 32,
    "TotalInsts": 158,
    "TotalMemInst": 108,
    "TotalFuncs": 13,
    "ArgsPhi": 4,
    "testUnary": 65
  },
  "baseline_oz_instcount": 158,
  "knowledge_base_entry": [
    "--mergefunc",
    "--adce",
    "--mergefunc",
    "--early-cse",
    "--reassociate",
    "--dse",
    "--simplifycfg",
    "--bdce",
    "--lower-expect",
    "--prune-eh",
    "--elim-avail-extern",
    "--loop-rotate",
    "--inline",
    "--mem2reg",
    "--adce",
    "--mergefunc",
    "--early-cse",
    "--reassociate",
    "--dse",
    "--simplifycfg",
    "--slsr",
    "-loop-reduce",
    "--nary-reassociate",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--aggressive-instcombine",
          "--loop-idiom",
          "--post-inline-ee-instrument",
          "--lower-guard-intrinsic",
          "--loop-distribute",
          "--barrier",
          "--ipsccp",
          "--die",
          "--deadargelim",
          "--instsimplify",
          "--dse",
          "--called-value-propagation",
          "--early-cse",
          "--early-cse-memssa",
          "--prune-eh",
          "--globalopt",
          "--callsite-splitting",
          "--mergefunc",
          "--break-crit-edges",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--aggressive-instcombine",
      "--loop-idiom",
      "--post-inline-ee-instrument",
      "--lower-guard-intrinsic",
      "--loop-distribute",
      "--barrier",
      "--ipsccp",
      "--die",
      "--deadargelim",
      "--instsimplify",
      "--dse",
      "--called-value-propagation",
      "--early-cse",
      "--early-cse-memssa",
      "--prune-eh",
      "--globalopt",
      "--callsite-splitting",
      "--mergefunc",
      "--break-crit-edges",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}