{
  "program_id": "linux-v0_12880.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 8,
    "oneSuccessor": 15,
    "twoPred": 4,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 9,
    "CriticalCount": 4,
    "NumEdges": 38,
    "const32Bit": 224,
    "const64Bit": 8,
    "numConstZeroes": 136,
    "numConstOnes": 47,
    "UncondBranches": 15,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 26,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 26,
    "NumBitCastInst": 11,
    "NumBrInst": 23,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 89,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 97,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 69,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 33,
    "TotalInsts": 359,
    "TotalMemInst": 302,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 138
  },
  "baseline_oz_instcount": 361,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--loop-rotate",
    "--newgvn",
    "--indvars",
    "--early-cse-memssa",
    "--instcombine",
    "--slsr",
    "--load-store-vectorizer",
    "--jump-threading",
    "--adce",
    "--gvn-hoist",
    "--prune-eh",
    "--jump-threading",
    "--lower-expect",
    "--ipsccp",
    "--loop-instsimplify",
    "--inline",
    "--dce",
    "--sroa",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--libcalls-shrinkwrap",
          "--gvn",
          "--callsite-splitting",
          "--strip-dead-prototypes",
          "--lowerinvoke",
          "--coro-split",
          "--nary-reassociate",
          "--hotcoldsplit",
          "--tailcallelim",
          "--loop-deletion",
          "--sroa",
          "--sink",
          "--coro-elide",
          "--inject-tli-mappings",
          "--separate-const-offset-from-gep",
          "--slsr",
          "--alignment-from-assumptions",
          "--simple-loop-unswitch",
          "--licm",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--libcalls-shrinkwrap",
      "--gvn",
      "--callsite-splitting",
      "--strip-dead-prototypes",
      "--lowerinvoke",
      "--coro-split",
      "--nary-reassociate",
      "--hotcoldsplit",
      "--tailcallelim",
      "--loop-deletion",
      "--sroa",
      "--sink",
      "--coro-elide",
      "--inject-tli-mappings",
      "--separate-const-offset-from-gep",
      "--slsr",
      "--alignment-from-assumptions",
      "--simple-loop-unswitch",
      "--licm",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}