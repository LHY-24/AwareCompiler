{
  "program_id": "github-v0_29620.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 40,
    "const64Bit": 56,
    "numConstZeroes": 61,
    "numConstOnes": 27,
    "UncondBranches": 15,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 13,
    "NumAndInst": 4,
    "BlockMid": 5,
    "BlockLow": 22,
    "NumBitCastInst": 8,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 8,
    "NumLShrInst": 1,
    "NumLoadInst": 34,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 27,
    "TotalInsts": 175,
    "TotalMemInst": 112,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 61
  },
  "baseline_oz_instcount": 175,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--newgvn",
    "--dce",
    "--aggressive-instcombine",
    "--early-cse",
    "--slsr",
    "--jump-threading",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--lower-guard-intrinsic",
          "--ipconstprop",
          "--mergefunc",
          "--aggressive-instcombine",
          "--loop-unswitch",
          "--loop-simplify",
          "--simple-loop-unswitch",
          "--insert-gcov-profiling",
          "--partial-inliner",
          "--sancov",
          "--loop-instsimplify",
          "--rewrite-statepoints-for-gc",
          "--constmerge",
          "--ee-instrument",
          "--redundant-dbg-inst-elim",
          "--sroa",
          "--elim-avail-extern",
          "--ipsccp",
          "--loop-distribute",
          "--sccp",
          "--loop-versioning-licm",
          "--loop-deletion",
          "--loweratomic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--lower-guard-intrinsic",
      "--ipconstprop",
      "--mergefunc",
      "--aggressive-instcombine",
      "--loop-unswitch",
      "--loop-simplify",
      "--simple-loop-unswitch",
      "--insert-gcov-profiling",
      "--partial-inliner",
      "--sancov",
      "--loop-instsimplify",
      "--rewrite-statepoints-for-gc",
      "--constmerge",
      "--ee-instrument",
      "--redundant-dbg-inst-elim",
      "--sroa",
      "--elim-avail-extern",
      "--ipsccp",
      "--loop-distribute",
      "--sccp",
      "--loop-versioning-licm",
      "--loop-deletion",
      "--loweratomic"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}