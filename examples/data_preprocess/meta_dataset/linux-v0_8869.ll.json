{
  "program_id": "linux-v0_8869.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 37,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 7,
    "oneSuccessor": 36,
    "twoPred": 16,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 73,
    "BeginPhi": 2,
    "BranchCount": 52,
    "returnInt": 10,
    "CriticalCount": 8,
    "NumEdges": 76,
    "const32Bit": 268,
    "const64Bit": 29,
    "numConstZeroes": 129,
    "numConstOnes": 95,
    "UncondBranches": 36,
    "binaryConstArg": 15,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 69,
    "NumAndInst": 2,
    "BlockMid": 14,
    "BlockLow": 61,
    "NumBitCastInst": 16,
    "NumBrInst": 52,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 91,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 187,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 20,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 88,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 6,
    "NumZExtInst": 27,
    "TotalBlocks": 75,
    "TotalInsts": 654,
    "TotalMemInst": 490,
    "TotalFuncs": 36,
    "ArgsPhi": 4,
    "testUnary": 309
  },
  "baseline_oz_instcount": 656,
  "knowledge_base_entry": [
    "--ipsccp",
    "--loop-instsimplify",
    "--early-cse",
    "--sccp",
    "--instcombine",
    "--mldst-motion",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--dce",
    "--loop-simplifycfg",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--libcalls-shrinkwrap",
          "--post-inline-ee-instrument",
          "--loweratomic",
          "--coro-split",
          "--mergereturn",
          "--ipsccp",
          "--sroa",
          "--globaldce",
          "--slsr",
          "--partially-inline-libcalls",
          "--infer-address-spaces",
          "--simplifycfg",
          "--licm",
          "--loop-idiom",
          "--loop-reroll",
          "--called-value-propagation",
          "--irce",
          "--loop-distribute",
          "--ipconstprop",
          "--memcpyopt",
          "--globalsplit",
          "--loop-load-elim",
          "--loop-predication",
          "--mergeicmps",
          "--sink",
          "--loop-data-prefetch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--libcalls-shrinkwrap",
      "--post-inline-ee-instrument",
      "--loweratomic",
      "--coro-split",
      "--mergereturn",
      "--ipsccp",
      "--sroa",
      "--globaldce",
      "--slsr",
      "--partially-inline-libcalls",
      "--infer-address-spaces",
      "--simplifycfg",
      "--licm",
      "--loop-idiom",
      "--loop-reroll",
      "--called-value-propagation",
      "--irce",
      "--loop-distribute",
      "--ipconstprop",
      "--memcpyopt",
      "--globalsplit",
      "--loop-load-elim",
      "--loop-predication",
      "--mergeicmps",
      "--sink",
      "--loop-data-prefetch"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}