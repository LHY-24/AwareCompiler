{
  "program_id": "github-v0_14060.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 39,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 12,
    "oneSuccessor": 41,
    "twoPred": 22,
    "twoPredOneSuc": 10,
    "twoEach": 4,
    "twoSuccessor": 24,
    "morePreds": 9,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 86,
    "BeginPhi": 0,
    "BranchCount": 65,
    "returnInt": 27,
    "CriticalCount": 38,
    "NumEdges": 118,
    "const32Bit": 365,
    "const64Bit": 14,
    "numConstZeroes": 132,
    "numConstOnes": 99,
    "UncondBranches": 41,
    "binaryConstArg": 91,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 60,
    "NumAndInst": 53,
    "BlockMid": 16,
    "BlockLow": 70,
    "NumBitCastInst": 130,
    "NumBrInst": 65,
    "NumCallInst": 59,
    "NumGetElementPtrInst": 62,
    "NumICmpInst": 25,
    "NumLShrInst": 16,
    "NumLoadInst": 166,
    "NumMulInst": 0,
    "NumOrInst": 22,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 105,
    "NumSubInst": 0,
    "NumTruncInst": 15,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 86,
    "TotalInsts": 812,
    "TotalMemInst": 452,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 383
  },
  "baseline_oz_instcount": 812,
  "knowledge_base_entry": [
    "--jump-threading",
    "--mldst-motion",
    "--simplifycfg",
    "--instsimplify",
    "--instcombine",
    "--loop-simplifycfg",
    "--dce",
    "--mergefunc",
    "--jump-threading",
    "--correlated-propagation",
    "--nary-reassociate",
    "--dse",
    "--dse",
    "--early-cse",
    "--aggressive-instcombine",
    "--dse",
    "--correlated-propagation",
    "--die",
    "--inline",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--bdce",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-split",
          "--barrier",
          "--constmerge",
          "--inject-tli-mappings",
          "--lower-expect",
          "--aggressive-instcombine",
          "--flattencfg",
          "--always-inline",
          "--argpromotion",
          "--lcssa",
          "--loop-unroll",
          "--bdce",
          "--loop-instsimplify",
          "--loop-distribute",
          "--forceattrs",
          "--mergefunc",
          "--loop-unroll-and-jam",
          "--early-cse",
          "--coro-early",
          "--strip",
          "--early-cse-memssa",
          "--nary-reassociate",
          "--mldst-motion",
          "--attributor",
          "--indvars",
          "--pgo-memop-opt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-split",
      "--barrier",
      "--constmerge",
      "--inject-tli-mappings",
      "--lower-expect",
      "--aggressive-instcombine",
      "--flattencfg",
      "--always-inline",
      "--argpromotion",
      "--lcssa",
      "--loop-unroll",
      "--bdce",
      "--loop-instsimplify",
      "--loop-distribute",
      "--forceattrs",
      "--mergefunc",
      "--loop-unroll-and-jam",
      "--early-cse",
      "--coro-early",
      "--strip",
      "--early-cse-memssa",
      "--nary-reassociate",
      "--mldst-motion",
      "--attributor",
      "--indvars",
      "--pgo-memop-opt"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}