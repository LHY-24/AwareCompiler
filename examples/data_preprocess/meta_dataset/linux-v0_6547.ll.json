{
  "program_id": "linux-v0_6547.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 38,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 9,
    "oneSuccessor": 33,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 15,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 69,
    "BeginPhi": 0,
    "BranchCount": 48,
    "returnInt": 21,
    "CriticalCount": 10,
    "NumEdges": 77,
    "const32Bit": 214,
    "const64Bit": 16,
    "numConstZeroes": 107,
    "numConstOnes": 84,
    "UncondBranches": 33,
    "binaryConstArg": 23,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 56,
    "NumAndInst": 8,
    "BlockMid": 12,
    "BlockLow": 57,
    "NumBitCastInst": 24,
    "NumBrInst": 48,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 16,
    "NumLShrInst": 3,
    "NumLoadInst": 149,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 77,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 4,
    "NumZExtInst": 9,
    "TotalBlocks": 69,
    "TotalInsts": 540,
    "TotalMemInst": 384,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 249
  },
  "baseline_oz_instcount": 516,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--slp-vectorizer",
    "--gvn",
    "--early-cse",
    "--inline",
    "--mergefunc",
    "--flattencfg",
    "--adce",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse-memssa",
          "--globalopt",
          "--float2int",
          "--ee-instrument",
          "--consthoist",
          "--mergefunc",
          "--rpo-functionattrs",
          "--lowerinvoke",
          "--called-value-propagation",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse-memssa",
      "--globalopt",
      "--float2int",
      "--ee-instrument",
      "--consthoist",
      "--mergefunc",
      "--rpo-functionattrs",
      "--lowerinvoke",
      "--called-value-propagation",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}