{
  "program_id": "linux-v0_8471.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 41,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 11,
    "oneSuccessor": 38,
    "twoPred": 9,
    "twoPredOneSuc": 5,
    "twoEach": 1,
    "twoSuccessor": 15,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 15,
    "CriticalCount": 6,
    "NumEdges": 73,
    "const32Bit": 285,
    "const64Bit": 12,
    "numConstZeroes": 123,
    "numConstOnes": 91,
    "UncondBranches": 38,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 68,
    "NumAndInst": 3,
    "BlockMid": 13,
    "BlockLow": 64,
    "NumBitCastInst": 29,
    "NumBrInst": 51,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 84,
    "NumICmpInst": 15,
    "NumLShrInst": 1,
    "NumLoadInst": 173,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 96,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 4,
    "NumZExtInst": 3,
    "TotalBlocks": 77,
    "TotalInsts": 616,
    "TotalMemInst": 475,
    "TotalFuncs": 48,
    "ArgsPhi": 0,
    "testUnary": 281
  },
  "baseline_oz_instcount": 604,
  "knowledge_base_entry": [
    "--jump-threading",
    "--instsimplify",
    "--sccp",
    "--instsimplify",
    "--early-cse-memssa",
    "--early-cse",
    "--loop-rotate",
    "--inline",
    "--ipsccp",
    "--early-cse",
    "--gvn",
    "--jump-threading",
    "--early-cse",
    "--sroa",
    "--newgvn",
    "--loop-simplifycfg",
    "--mergefunc",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--mldst-motion",
          "--globaldce",
          "--lower-guard-intrinsic",
          "--rpo-functionattrs",
          "--hotcoldsplit",
          "--slsr",
          "--mergeicmps",
          "--loop-rotate",
          "--mergefunc",
          "--simple-loop-unswitch",
          "--ipconstprop",
          "--ipsccp",
          "--globalsplit",
          "--speculative-execution",
          "--callsite-splitting",
          "--lower-widenable-condition",
          "--coro-early",
          "--lower-matrix-intrinsics",
          "--loop-versioning-licm",
          "--flattencfg",
          "--load-store-vectorizer",
          "--constprop",
          "--strip-dead-prototypes",
          "--infer-address-spaces",
          "--aggressive-instcombine",
          "--float2int",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--mldst-motion",
      "--globaldce",
      "--lower-guard-intrinsic",
      "--rpo-functionattrs",
      "--hotcoldsplit",
      "--slsr",
      "--mergeicmps",
      "--loop-rotate",
      "--mergefunc",
      "--simple-loop-unswitch",
      "--ipconstprop",
      "--ipsccp",
      "--globalsplit",
      "--speculative-execution",
      "--callsite-splitting",
      "--lower-widenable-condition",
      "--coro-early",
      "--lower-matrix-intrinsics",
      "--loop-versioning-licm",
      "--flattencfg",
      "--load-store-vectorizer",
      "--constprop",
      "--strip-dead-prototypes",
      "--infer-address-spaces",
      "--aggressive-instcombine",
      "--float2int",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}