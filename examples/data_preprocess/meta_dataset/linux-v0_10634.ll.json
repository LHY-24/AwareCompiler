{
  "program_id": "linux-v0_10634.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 7,
    "oneSuccessor": 24,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 13,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 37,
    "returnInt": 8,
    "CriticalCount": 3,
    "NumEdges": 50,
    "const32Bit": 207,
    "const64Bit": 17,
    "numConstZeroes": 100,
    "numConstOnes": 78,
    "UncondBranches": 24,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 53,
    "NumAndInst": 4,
    "BlockMid": 12,
    "BlockLow": 38,
    "NumBitCastInst": 10,
    "NumBrInst": 37,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 66,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 129,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 85,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 4,
    "NumZExtInst": 18,
    "TotalBlocks": 50,
    "TotalInsts": 498,
    "TotalMemInst": 377,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 218
  },
  "baseline_oz_instcount": 498,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--die",
    "--loop-simplifycfg",
    "--instcombine",
    "--slsr",
    "--early-cse",
    "--prune-eh",
    "--mem2reg",
    "--dse",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--jump-threading",
          "--sancov",
          "--coro-cleanup",
          "--loop-reroll",
          "--insert-gcov-profiling",
          "--instsimplify",
          "--elim-avail-extern",
          "--gvn-hoist",
          "--memcpyopt",
          "--loop-guard-widening",
          "--loop-sink",
          "--loop-versioning-licm",
          "--inject-tli-mappings",
          "--lower-expect",
          "--globaldce",
          "--scalarizer",
          "--lcssa",
          "--aggressive-instcombine",
          "--loop-unswitch",
          "--alignment-from-assumptions",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--jump-threading",
      "--sancov",
      "--coro-cleanup",
      "--loop-reroll",
      "--insert-gcov-profiling",
      "--instsimplify",
      "--elim-avail-extern",
      "--gvn-hoist",
      "--memcpyopt",
      "--loop-guard-widening",
      "--loop-sink",
      "--loop-versioning-licm",
      "--inject-tli-mappings",
      "--lower-expect",
      "--globaldce",
      "--scalarizer",
      "--lcssa",
      "--aggressive-instcombine",
      "--loop-unswitch",
      "--alignment-from-assumptions",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+2.8%"
  }
}