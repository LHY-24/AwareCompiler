{
  "program_id": "poj104-v1_11_790.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 12,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 6,
    "CriticalCount": 5,
    "NumEdges": 12,
    "const32Bit": 31,
    "const64Bit": 39,
    "numConstZeroes": 21,
    "numConstOnes": 11,
    "UncondBranches": 4,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 10,
    "NumBitCastInst": 12,
    "NumBrInst": 8,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 14,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 12,
    "TotalInsts": 110,
    "TotalMemInst": 74,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 34
  },
  "baseline_oz_instcount": 77,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--bdce",
    "--aggressive-instcombine",
    "--die",
    "--ipsccp",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--sroa",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--simplifycfg",
    "--instcombine",
    "--aggressive-instcombine",
    "--sroa",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--inline",
    "--loop-instsimplify",
    "--gvn",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--instsimplify",
    "--sccp",
    "--sroa",
    "--instsimplify",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--inline",
    "--sroa",
    "--jump-threading",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--reassociate",
    "--early-cse-memssa",
    "--indvars",
    "--sroa",
    "--nary-reassociate",
    "--correlated-propagation",
    "--instcombine",
    "--gvn-hoist",
    "--loop-reroll",
    "--memcpyopt",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "-loop-reduce",
          "--sroa",
          "--redundant-dbg-inst-elim",
          "--lcssa",
          "--rpo-functionattrs",
          "--pgo-memop-opt",
          "--functionattrs",
          "--early-cse-memssa",
          "--separate-const-offset-from-gep",
          "--sink",
          "--coro-cleanup",
          "--div-rem-pairs",
          "--always-inline",
          "--callsite-splitting",
          "--loop-simplify",
          "--load-store-vectorizer",
          "--jump-threading",
          "--loop-data-prefetch",
          "--cross-dso-cfi",
          "--attributor",
          "--lowerinvoke",
          "--mergereturn",
          "--aggressive-instcombine",
          "--partial-inliner",
          "--loop-guard-widening",
          "--die",
          "--forceattrs",
          "--sccp",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+16.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "-loop-reduce",
      "--sroa",
      "--redundant-dbg-inst-elim",
      "--lcssa",
      "--rpo-functionattrs",
      "--pgo-memop-opt",
      "--functionattrs",
      "--early-cse-memssa",
      "--separate-const-offset-from-gep",
      "--sink",
      "--coro-cleanup",
      "--div-rem-pairs",
      "--always-inline",
      "--callsite-splitting",
      "--loop-simplify",
      "--load-store-vectorizer",
      "--jump-threading",
      "--loop-data-prefetch",
      "--cross-dso-cfi",
      "--attributor",
      "--lowerinvoke",
      "--mergereturn",
      "--aggressive-instcombine",
      "--partial-inliner",
      "--loop-guard-widening",
      "--die",
      "--forceattrs",
      "--sccp",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+16.9%"
  }
}