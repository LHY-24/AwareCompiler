{
  "program_id": "github-v0_19220.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 67,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 24,
    "oneSuccessor": 58,
    "twoPred": 36,
    "twoPredOneSuc": 11,
    "twoEach": 17,
    "twoSuccessor": 52,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 123,
    "BeginPhi": 0,
    "BranchCount": 110,
    "returnInt": 23,
    "CriticalCount": 39,
    "NumEdges": 162,
    "const32Bit": 319,
    "const64Bit": 7,
    "numConstZeroes": 133,
    "numConstOnes": 93,
    "UncondBranches": 58,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 75,
    "NumAndInst": 5,
    "BlockMid": 15,
    "BlockLow": 108,
    "NumBitCastInst": 10,
    "NumBrInst": 110,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 99,
    "NumICmpInst": 52,
    "NumLShrInst": 2,
    "NumLoadInst": 261,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 98,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 7,
    "TotalBlocks": 123,
    "TotalInsts": 803,
    "TotalMemInst": 595,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 353
  },
  "baseline_oz_instcount": 806,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--die",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--newgvn",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--early-cse",
          "--loop-versioning",
          "--name-anon-globals",
          "--loop-unroll-and-jam",
          "--flattencfg",
          "--adce",
          "--instsimplify",
          "--infer-address-spaces",
          "--sink",
          "--sccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--early-cse",
      "--loop-versioning",
      "--name-anon-globals",
      "--loop-unroll-and-jam",
      "--flattencfg",
      "--adce",
      "--instsimplify",
      "--infer-address-spaces",
      "--sink",
      "--sccp"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}