{
  "program_id": "linux-v0_3051.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 41,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 6,
    "oneSuccessor": 39,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 12,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 67,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 6,
    "CriticalCount": 4,
    "NumEdges": 78,
    "const32Bit": 144,
    "const64Bit": 26,
    "numConstZeroes": 53,
    "numConstOnes": 67,
    "UncondBranches": 39,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 46,
    "NumAndInst": 12,
    "BlockMid": 4,
    "BlockLow": 63,
    "NumBitCastInst": 10,
    "NumBrInst": 51,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 14,
    "NumLShrInst": 3,
    "NumLoadInst": 104,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 74,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 4,
    "NumZExtInst": 6,
    "TotalBlocks": 67,
    "TotalInsts": 415,
    "TotalMemInst": 287,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 170
  },
  "baseline_oz_instcount": 415,
  "knowledge_base_entry": [
    "--globalopt",
    "--loweratomic",
    "--aggressive-instcombine",
    "--prune-eh",
    "--newgvn",
    "--nary-reassociate",
    "--dse",
    "--gvn",
    "--early-cse",
    "--loop-instsimplify",
    "--mergefunc",
    "--reassociate",
    "--instsimplify",
    "--newgvn",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "--callsite-splitting",
          "--cross-dso-cfi",
          "--inferattrs",
          "--coro-cleanup",
          "--aggressive-instcombine",
          "--loop-fusion",
          "--lcssa",
          "--slsr",
          "--coro-early",
          "--infer-address-spaces",
          "--loop-rotate",
          "--scalarizer",
          "--adce",
          "--strip-debug-declare",
          "--load-store-vectorizer",
          "--mergereturn",
          "--loop-versioning-licm",
          "--ipsccp",
          "--rpo-functionattrs",
          "--strip-nondebug",
          "--mergeicmps",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "--callsite-splitting",
      "--cross-dso-cfi",
      "--inferattrs",
      "--coro-cleanup",
      "--aggressive-instcombine",
      "--loop-fusion",
      "--lcssa",
      "--slsr",
      "--coro-early",
      "--infer-address-spaces",
      "--loop-rotate",
      "--scalarizer",
      "--adce",
      "--strip-debug-declare",
      "--load-store-vectorizer",
      "--mergereturn",
      "--loop-versioning-licm",
      "--ipsccp",
      "--rpo-functionattrs",
      "--strip-nondebug",
      "--mergeicmps",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}