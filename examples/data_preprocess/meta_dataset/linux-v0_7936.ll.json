{
  "program_id": "linux-v0_7936.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 30,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 6,
    "oneSuccessor": 30,
    "twoPred": 12,
    "twoPredOneSuc": 6,
    "twoEach": 2,
    "twoSuccessor": 14,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 0,
    "BranchCount": 44,
    "returnInt": 10,
    "CriticalCount": 15,
    "NumEdges": 73,
    "const32Bit": 289,
    "const64Bit": 23,
    "numConstZeroes": 96,
    "numConstOnes": 124,
    "UncondBranches": 30,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 85,
    "NumAndInst": 2,
    "BlockMid": 13,
    "BlockLow": 59,
    "NumBitCastInst": 14,
    "NumBrInst": 44,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 86,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 213,
    "NumMulInst": 8,
    "NumOrInst": 8,
    "NumPHIInst": 0,
    "NumRetInst": 27,
    "NumSExtInst": 2,
    "NumSelectInst": 4,
    "NumShlInst": 5,
    "NumStoreInst": 111,
    "NumSubInst": 0,
    "NumTruncInst": 12,
    "NumXorInst": 1,
    "NumZExtInst": 17,
    "TotalBlocks": 72,
    "TotalInsts": 715,
    "TotalMemInst": 550,
    "TotalFuncs": 38,
    "ArgsPhi": 0,
    "testUnary": 343
  },
  "baseline_oz_instcount": 714,
  "knowledge_base_entry": [
    "--ipsccp",
    "--sroa",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--instsimplify",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--mem2reg",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--mergereturn",
          "--adce",
          "--partially-inline-libcalls",
          "--coro-split",
          "--sancov",
          "--scalarizer",
          "--canonicalize-aliases",
          "--libcalls-shrinkwrap",
          "--dse",
          "--slp-vectorizer",
          "--loop-instsimplify",
          "--licm",
          "--lower-guard-intrinsic",
          "--ipsccp",
          "--functionattrs",
          "--loop-versioning-licm",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--mergereturn",
      "--adce",
      "--partially-inline-libcalls",
      "--coro-split",
      "--sancov",
      "--scalarizer",
      "--canonicalize-aliases",
      "--libcalls-shrinkwrap",
      "--dse",
      "--slp-vectorizer",
      "--loop-instsimplify",
      "--licm",
      "--lower-guard-intrinsic",
      "--ipsccp",
      "--functionattrs",
      "--loop-versioning-licm",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}