{
  "program_id": "github-v0_46686.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 37,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 5,
    "oneSuccessor": 35,
    "twoPred": 21,
    "twoPredOneSuc": 2,
    "twoEach": 11,
    "twoSuccessor": 25,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 3,
    "BranchCount": 60,
    "returnInt": 11,
    "CriticalCount": 15,
    "NumEdges": 85,
    "const32Bit": 250,
    "const64Bit": 9,
    "numConstZeroes": 118,
    "numConstOnes": 56,
    "UncondBranches": 35,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 38,
    "NumAndInst": 5,
    "BlockMid": 5,
    "BlockLow": 74,
    "NumBitCastInst": 6,
    "NumBrInst": 60,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 84,
    "NumICmpInst": 27,
    "NumLShrInst": 0,
    "NumLoadInst": 164,
    "NumMulInst": 2,
    "NumOrInst": 2,
    "NumPHIInst": 3,
    "NumRetInst": 19,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 79,
    "NumSubInst": 3,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 79,
    "TotalInsts": 553,
    "TotalMemInst": 399,
    "TotalFuncs": 37,
    "ArgsPhi": 6,
    "testUnary": 222
  },
  "baseline_oz_instcount": 553,
  "knowledge_base_entry": [
    "--loop-sink",
    "--instcombine",
    "--aggressive-instcombine",
    "--prune-eh",
    "--gvn",
    "--mergefunc",
    "--lower-expect",
    "--die",
    "--loop-instsimplify",
    "--bdce",
    "--loop-simplifycfg",
    "--adce",
    "--elim-avail-extern",
    "--flattencfg",
    "--load-store-vectorizer",
    "--slsr",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--adce",
          "--hotcoldsplit",
          "--lower-expect",
          "--loop-versioning",
          "--consthoist",
          "--post-inline-ee-instrument",
          "--reassociate",
          "--aggressive-instcombine",
          "--constmerge",
          "--separate-const-offset-from-gep",
          "--instcombine",
          "--loop-vectorize",
          "--mem2reg",
          "--simple-loop-unswitch",
          "--early-cse",
          "--loop-predication",
          "--strip-debug-declare",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--adce",
      "--hotcoldsplit",
      "--lower-expect",
      "--loop-versioning",
      "--consthoist",
      "--post-inline-ee-instrument",
      "--reassociate",
      "--aggressive-instcombine",
      "--constmerge",
      "--separate-const-offset-from-gep",
      "--instcombine",
      "--loop-vectorize",
      "--mem2reg",
      "--simple-loop-unswitch",
      "--early-cse",
      "--loop-predication",
      "--strip-debug-declare",
      "--globalopt"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}