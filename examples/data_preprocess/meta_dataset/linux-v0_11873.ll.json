{
  "program_id": "linux-v0_11873.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 10,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 3,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 1,
    "BranchCount": 15,
    "returnInt": 5,
    "CriticalCount": 3,
    "NumEdges": 21,
    "const32Bit": 45,
    "const64Bit": 11,
    "numConstZeroes": 33,
    "numConstOnes": 14,
    "UncondBranches": 9,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 15,
    "NumBitCastInst": 1,
    "NumBrInst": 15,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 4,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 13,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 19,
    "TotalInsts": 127,
    "TotalMemInst": 88,
    "TotalFuncs": 15,
    "ArgsPhi": 2,
    "testUnary": 52
  },
  "baseline_oz_instcount": 128,
  "knowledge_base_entry": [
    "--functionattrs",
    "--die",
    "--simplifycfg",
    "--adce",
    "--gvn-hoist",
    "--bdce",
    "--jump-threading",
    "--dce",
    "--ipsccp",
    "--mem2reg",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--libcalls-shrinkwrap",
          "--inline",
          "--mem2reg",
          "--argpromotion",
          "--dce",
          "--constmerge",
          "--coro-early",
          "--sancov",
          "--called-value-propagation",
          "--sccp",
          "--inject-tli-mappings"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--libcalls-shrinkwrap",
      "--inline",
      "--mem2reg",
      "--argpromotion",
      "--dce",
      "--constmerge",
      "--coro-early",
      "--sancov",
      "--called-value-propagation",
      "--sccp",
      "--inject-tli-mappings"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}