{
  "program_id": "linux-v0_2498.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 60,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 14,
    "oneSuccessor": 53,
    "twoPred": 25,
    "twoPredOneSuc": 4,
    "twoEach": 10,
    "twoSuccessor": 34,
    "morePreds": 2,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 122,
    "BeginPhi": 4,
    "BranchCount": 87,
    "returnInt": 55,
    "CriticalCount": 18,
    "NumEdges": 121,
    "const32Bit": 337,
    "const64Bit": 50,
    "numConstZeroes": 146,
    "numConstOnes": 149,
    "UncondBranches": 53,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 124,
    "NumAndInst": 10,
    "BlockMid": 15,
    "BlockLow": 111,
    "NumBitCastInst": 26,
    "NumBrInst": 87,
    "NumCallInst": 94,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 39,
    "NumLShrInst": 0,
    "NumLoadInst": 250,
    "NumMulInst": 2,
    "NumOrInst": 5,
    "NumPHIInst": 4,
    "NumRetInst": 39,
    "NumSExtInst": 1,
    "NumSelectInst": 3,
    "NumShlInst": 0,
    "NumStoreInst": 164,
    "NumSubInst": 0,
    "NumTruncInst": 12,
    "NumXorInst": 9,
    "NumZExtInst": 20,
    "TotalBlocks": 126,
    "TotalInsts": 978,
    "TotalMemInst": 711,
    "TotalFuncs": 64,
    "ArgsPhi": 8,
    "testUnary": 438
  },
  "baseline_oz_instcount": 978,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--instcombine",
    "--aggressive-instcombine",
    "--mem2reg",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--correlated-propagation",
    "--ipsccp",
    "--loop-deletion",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplify",
          "--simple-loop-unswitch",
          "--simplifycfg",
          "--dse",
          "--strip-nondebug",
          "--dce",
          "--partial-inliner",
          "--speculative-execution",
          "--licm",
          "--loop-interchange",
          "--canonicalize-aliases",
          "--div-rem-pairs",
          "--adce",
          "--consthoist",
          "--ee-instrument",
          "--loop-versioning",
          "--guard-widening",
          "--slp-vectorizer",
          "--coro-cleanup",
          "--aggressive-instcombine",
          "--mergefunc",
          "--newgvn",
          "--bdce",
          "--coro-elide",
          "--lowerinvoke",
          "--loop-reroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplify",
      "--simple-loop-unswitch",
      "--simplifycfg",
      "--dse",
      "--strip-nondebug",
      "--dce",
      "--partial-inliner",
      "--speculative-execution",
      "--licm",
      "--loop-interchange",
      "--canonicalize-aliases",
      "--div-rem-pairs",
      "--adce",
      "--consthoist",
      "--ee-instrument",
      "--loop-versioning",
      "--guard-widening",
      "--slp-vectorizer",
      "--coro-cleanup",
      "--aggressive-instcombine",
      "--mergefunc",
      "--newgvn",
      "--bdce",
      "--coro-elide",
      "--lowerinvoke",
      "--loop-reroll"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}