{
  "program_id": "poj104-v1_68_41.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 2,
    "oneSuccessor": 20,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 8,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 34,
    "BeginPhi": 0,
    "BranchCount": 30,
    "returnInt": 3,
    "CriticalCount": 5,
    "NumEdges": 40,
    "const32Bit": 31,
    "const64Bit": 20,
    "numConstZeroes": 16,
    "numConstOnes": 17,
    "UncondBranches": 20,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 32,
    "NumBitCastInst": 15,
    "NumBrInst": 30,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 34,
    "TotalInsts": 171,
    "TotalMemInst": 95,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 70
  },
  "baseline_oz_instcount": 79,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--early-cse",
    "--jump-threading",
    "--early-cse-memssa",
    "--indvars",
    "--load-store-vectorizer",
    "--inline",
    "--aggressive-instcombine",
    "--loweratomic",
    "--globalopt",
    "--sroa",
    "--jump-threading",
    "--nary-reassociate",
    "--gvn-hoist",
    "--mldst-motion",
    "--instcombine",
    "--prune-eh",
    "--newgvn",
    "--slp-vectorizer",
    "--sroa",
    "--dce",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--jump-threading",
          "--simple-loop-unswitch",
          "--early-cse",
          "--canonicalize-aliases",
          "--argpromotion",
          "-loop-reduce",
          "--adce",
          "--loop-versioning-licm",
          "--dse",
          "--div-rem-pairs",
          "--coro-cleanup",
          "--gvn-hoist",
          "--globalsplit",
          "--scalarizer",
          "--simplifycfg",
          "--add-discriminators",
          "--pgo-memop-opt",
          "--newgvn",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--jump-threading",
      "--simple-loop-unswitch",
      "--early-cse",
      "--canonicalize-aliases",
      "--argpromotion",
      "-loop-reduce",
      "--adce",
      "--loop-versioning-licm",
      "--dse",
      "--div-rem-pairs",
      "--coro-cleanup",
      "--gvn-hoist",
      "--globalsplit",
      "--scalarizer",
      "--simplifycfg",
      "--add-discriminators",
      "--pgo-memop-opt",
      "--newgvn",
      "--barrier"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}