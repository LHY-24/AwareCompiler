{
  "program_id": "linux-v0_6043.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 44,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 14,
    "oneSuccessor": 37,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 22,
    "morePreds": 4,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 2,
    "BranchCount": 59,
    "returnInt": 14,
    "CriticalCount": 5,
    "NumEdges": 81,
    "const32Bit": 148,
    "const64Bit": 17,
    "numConstZeroes": 69,
    "numConstOnes": 59,
    "UncondBranches": 37,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 44,
    "NumAndInst": 4,
    "BlockMid": 5,
    "BlockLow": 69,
    "NumBitCastInst": 16,
    "NumBrInst": 59,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 49,
    "NumICmpInst": 23,
    "NumLShrInst": 1,
    "NumLoadInst": 124,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 15,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 71,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 4,
    "NumZExtInst": 9,
    "TotalBlocks": 74,
    "TotalInsts": 483,
    "TotalMemInst": 320,
    "TotalFuncs": 31,
    "ArgsPhi": 4,
    "testUnary": 218
  },
  "baseline_oz_instcount": 483,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--dse",
    "--sroa",
    "--aggressive-instcombine",
    "--instsimplify",
    "--mem2reg",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--aggressive-instcombine",
          "--lowerswitch",
          "--loop-simplify",
          "--elim-avail-extern",
          "--libcalls-shrinkwrap",
          "--adce",
          "--functionattrs",
          "--sccp",
          "--loweratomic",
          "--partial-inliner",
          "--instnamer",
          "--loop-rotate",
          "--alignment-from-assumptions",
          "--load-store-vectorizer",
          "--gvn-hoist",
          "--consthoist",
          "--sancov",
          "--called-value-propagation",
          "--canonicalize-aliases",
          "--loop-reroll",
          "--die",
          "--lower-guard-intrinsic",
          "--irce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--aggressive-instcombine",
      "--lowerswitch",
      "--loop-simplify",
      "--elim-avail-extern",
      "--libcalls-shrinkwrap",
      "--adce",
      "--functionattrs",
      "--sccp",
      "--loweratomic",
      "--partial-inliner",
      "--instnamer",
      "--loop-rotate",
      "--alignment-from-assumptions",
      "--load-store-vectorizer",
      "--gvn-hoist",
      "--consthoist",
      "--sancov",
      "--called-value-propagation",
      "--canonicalize-aliases",
      "--loop-reroll",
      "--die",
      "--lower-guard-intrinsic",
      "--irce"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}