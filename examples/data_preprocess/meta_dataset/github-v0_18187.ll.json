{
  "program_id": "github-v0_18187.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 8,
    "onePred": 71,
    "onePredOneSuc": 46,
    "onePredTwoSuc": 24,
    "oneSuccessor": 64,
    "twoPred": 31,
    "twoPredOneSuc": 15,
    "twoEach": 13,
    "twoSuccessor": 40,
    "morePreds": 2,
    "BB03Phi": 8,
    "BBHiPhi": 0,
    "BBNoPhi": 102,
    "BeginPhi": 8,
    "BranchCount": 104,
    "returnInt": 11,
    "CriticalCount": 14,
    "NumEdges": 144,
    "const32Bit": 187,
    "const64Bit": 10,
    "numConstZeroes": 77,
    "numConstOnes": 57,
    "UncondBranches": 64,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 25,
    "NumAllocaInst": 37,
    "NumAndInst": 3,
    "BlockMid": 3,
    "BlockLow": 107,
    "NumBitCastInst": 15,
    "NumBrInst": 104,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 53,
    "NumICmpInst": 40,
    "NumLShrInst": 0,
    "NumLoadInst": 175,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 8,
    "NumRetInst": 6,
    "NumSExtInst": 18,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 91,
    "NumSubInst": 5,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 110,
    "TotalInsts": 607,
    "TotalMemInst": 375,
    "TotalFuncs": 9,
    "ArgsPhi": 16,
    "testUnary": 249
  },
  "baseline_oz_instcount": 608,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--simplifycfg",
    "--flattencfg",
    "--inline",
    "--memcpyopt",
    "--inline",
    "--gvn",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--lower-expect",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--bdce",
          "--mergereturn",
          "--prune-eh",
          "--lower-widenable-condition",
          "--hotcoldsplit",
          "--ee-instrument",
          "--lower-matrix-intrinsics",
          "--die",
          "--dse",
          "--loop-data-prefetch",
          "--globalsplit",
          "--instsimplify",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--bdce",
      "--mergereturn",
      "--prune-eh",
      "--lower-widenable-condition",
      "--hotcoldsplit",
      "--ee-instrument",
      "--lower-matrix-intrinsics",
      "--die",
      "--dse",
      "--loop-data-prefetch",
      "--globalsplit",
      "--instsimplify",
      "--gvn"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}