{
  "program_id": "poj104-v1_8_182.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 2,
    "oneSuccessor": 20,
    "twoPred": 8,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 6,
    "CriticalCount": 2,
    "NumEdges": 36,
    "const32Bit": 31,
    "const64Bit": 29,
    "numConstZeroes": 17,
    "numConstOnes": 25,
    "UncondBranches": 20,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 30,
    "NumBitCastInst": 18,
    "NumBrInst": 28,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 55,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 33,
    "TotalInsts": 220,
    "TotalMemInst": 138,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 100
  },
  "baseline_oz_instcount": 129,
  "knowledge_base_entry": [
    "--ipsccp",
    "--mergefunc",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--mergefunc",
    "--correlated-propagation",
    "--nary-reassociate",
    "--sroa",
    "--mem2reg",
    "--prune-eh",
    "--instcombine",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--gvn",
    "--loop-simplifycfg",
    "--slsr",
    "--instcombine",
    "--early-cse",
    "--bdce",
    "--die",
    "--ipsccp",
    "--dce",
    "--die",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--lower-expect",
    "--globalopt",
    "--lower-expect",
    "--reassociate",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--add-discriminators",
          "--loop-unroll-and-jam",
          "--attributor",
          "--loop-unroll",
          "--load-store-vectorizer",
          "--jump-threading",
          "--lower-widenable-condition",
          "--reg2mem",
          "--inferattrs",
          "--rpo-functionattrs",
          "--coro-cleanup",
          "--loop-idiom",
          "--newgvn",
          "--deadargelim",
          "--sroa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--add-discriminators",
      "--loop-unroll-and-jam",
      "--attributor",
      "--loop-unroll",
      "--load-store-vectorizer",
      "--jump-threading",
      "--lower-widenable-condition",
      "--reg2mem",
      "--inferattrs",
      "--rpo-functionattrs",
      "--coro-cleanup",
      "--loop-idiom",
      "--newgvn",
      "--deadargelim",
      "--sroa"
    ],
    "performance_vs_Oz": "+11.6%"
  }
}