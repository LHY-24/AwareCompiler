{
  "program_id": "poj104-v1_61_1423.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 3,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 3,
    "CriticalCount": 3,
    "NumEdges": 18,
    "const32Bit": 43,
    "const64Bit": 32,
    "numConstZeroes": 23,
    "numConstOnes": 29,
    "UncondBranches": 8,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 20,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 18,
    "NumBitCastInst": 26,
    "NumBrInst": 13,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 39,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 27,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 23,
    "TotalInsts": 203,
    "TotalMemInst": 138,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 91
  },
  "baseline_oz_instcount": 93,
  "knowledge_base_entry": [
    "--mem2reg",
    "--mldst-motion",
    "--dse",
    "--dse",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--instcombine",
    "--gvn",
    "--indvars",
    "--loop-reroll",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--die",
    "--inline",
    "--simplifycfg",
    "--bdce",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--globalopt",
    "--gvn-hoist",
    "--loop-deletion",
    "--instcombine",
    "--early-cse-memssa",
    "--bdce",
    "--correlated-propagation",
    "--simplifycfg",
    "--slp-vectorizer",
    "--mldst-motion",
    "--licm",
    "--gvn-hoist",
    "--simplifycfg",
    "--sroa",
    "--adce",
    "--inline",
    "--aggressive-instcombine",
    "--dse",
    "--loop-simplifycfg",
    "--instsimplify",
    "--sroa",
    "--gvn",
    "--die",
    "--newgvn",
    "--flattencfg",
    "--licm",
    "--bdce",
    "--die",
    "--jump-threading",
    "--prune-eh",
    "--early-cse",
    "--dce",
    "--slp-vectorizer",
    "--bdce",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--adce",
    "--mergefunc",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--adce",
    "--dse",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--die",
    "--correlated-propagation",
    "--simplifycfg",
    "--correlated-propagation",
    "--instcombine",
    "--nary-reassociate",
    "--gvn-hoist",
    "--reassociate",
    "--slp-vectorizer",
    "--dce",
    "--inline",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--lower-constant-intrinsics",
          "--load-store-vectorizer",
          "--gvn",
          "--simple-loop-unswitch",
          "--loop-unroll-and-jam",
          "--instcombine",
          "--lower-widenable-condition",
          "--globaldce",
          "--jump-threading",
          "--irce",
          "--barrier",
          "--mldst-motion",
          "--lowerinvoke",
          "--instsimplify",
          "--slsr",
          "--flattencfg",
          "--elim-avail-extern",
          "--hotcoldsplit",
          "--coro-cleanup",
          "--libcalls-shrinkwrap",
          "--loop-deletion",
          "--inline",
          "--mergereturn",
          "--rpo-functionattrs",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+37.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--lower-constant-intrinsics",
      "--load-store-vectorizer",
      "--gvn",
      "--simple-loop-unswitch",
      "--loop-unroll-and-jam",
      "--instcombine",
      "--lower-widenable-condition",
      "--globaldce",
      "--jump-threading",
      "--irce",
      "--barrier",
      "--mldst-motion",
      "--lowerinvoke",
      "--instsimplify",
      "--slsr",
      "--flattencfg",
      "--elim-avail-extern",
      "--hotcoldsplit",
      "--coro-cleanup",
      "--libcalls-shrinkwrap",
      "--loop-deletion",
      "--inline",
      "--mergereturn",
      "--rpo-functionattrs",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+37.6%"
  }
}