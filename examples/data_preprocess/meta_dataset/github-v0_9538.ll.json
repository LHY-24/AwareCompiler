{
  "program_id": "github-v0_9538.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 50,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 50,
    "const64Bit": 0,
    "numConstZeroes": 50,
    "numConstOnes": 0,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 25,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 75,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 25,
    "TotalInsts": 228,
    "TotalMemInst": 175,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 53
  },
  "baseline_oz_instcount": 228,
  "knowledge_base_entry": [
    "--loop-unroll",
    "--early-cse",
    "--mergefunc",
    "--bdce",
    "--correlated-propagation",
    "--globalopt",
    "--ipsccp",
    "--early-cse",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--loop-rotate",
    "--gvn-hoist",
    "--memcpyopt",
    "--inline",
    "--early-cse-memssa",
    "--loop-reroll",
    "--early-cse-memssa",
    "--dce",
    "--lower-expect",
    "--licm",
    "--die",
    "--mem2reg",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--coro-split",
          "--aggressive-instcombine",
          "--alignment-from-assumptions",
          "--separate-const-offset-from-gep",
          "--mergefunc",
          "--partial-inliner",
          "--guard-widening",
          "--strip-debug-declare",
          "--loop-interchange",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+17.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--coro-split",
      "--aggressive-instcombine",
      "--alignment-from-assumptions",
      "--separate-const-offset-from-gep",
      "--mergefunc",
      "--partial-inliner",
      "--guard-widening",
      "--strip-debug-declare",
      "--loop-interchange",
      "--always-inline"
    ],
    "performance_vs_Oz": "+17.1%"
  }
}