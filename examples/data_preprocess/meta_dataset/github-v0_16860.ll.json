{
  "program_id": "github-v0_16860.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 9,
    "oneSuccessor": 16,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 16,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 0,
    "BranchCount": 32,
    "returnInt": 9,
    "CriticalCount": 9,
    "NumEdges": 48,
    "const32Bit": 52,
    "const64Bit": 28,
    "numConstZeroes": 18,
    "numConstOnes": 31,
    "UncondBranches": 16,
    "binaryConstArg": 32,
    "NumAShrInst": 3,
    "NumAddInst": 10,
    "NumAllocaInst": 20,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 38,
    "NumBitCastInst": 0,
    "NumBrInst": 32,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 88,
    "NumMulInst": 3,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 42,
    "NumSubInst": 5,
    "NumTruncInst": 16,
    "NumXorInst": 6,
    "NumZExtInst": 41,
    "TotalBlocks": 42,
    "TotalInsts": 340,
    "TotalMemInst": 180,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 165
  },
  "baseline_oz_instcount": 340,
  "knowledge_base_entry": [
    "--prune-eh",
    "--aggressive-instcombine",
    "--newgvn",
    "--mergefunc",
    "--aggressive-instcombine",
    "--lower-expect",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--bdce",
    "--slp-vectorizer",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--instcombine",
          "--always-inline",
          "--post-inline-ee-instrument",
          "--scalarizer",
          "--loop-simplify",
          "--lowerswitch",
          "--insert-gcov-profiling",
          "--loweratomic",
          "--lower-expect",
          "--lower-constant-intrinsics",
          "--globalsplit",
          "--loop-data-prefetch",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--instcombine",
      "--always-inline",
      "--post-inline-ee-instrument",
      "--scalarizer",
      "--loop-simplify",
      "--lowerswitch",
      "--insert-gcov-profiling",
      "--loweratomic",
      "--lower-expect",
      "--lower-constant-intrinsics",
      "--globalsplit",
      "--loop-data-prefetch",
      "--barrier"
    ],
    "performance_vs_Oz": "+6.2%"
  }
}