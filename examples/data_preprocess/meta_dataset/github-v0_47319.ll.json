{
  "program_id": "github-v0_47319.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 5,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 1,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 24,
    "const64Bit": 0,
    "numConstZeroes": 2,
    "numConstOnes": 19,
    "UncondBranches": 0,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 3,
    "NumBitCastInst": 2,
    "NumBrInst": 0,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 14,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 5,
    "TotalInsts": 68,
    "TotalMemInst": 53,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 34
  },
  "baseline_oz_instcount": 68,
  "knowledge_base_entry": [
    "--reg2mem",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--reassociate",
    "--gvn-hoist",
    "--loop-reroll",
    "--mergefunc",
    "--slp-vectorizer",
    "--mem2reg",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--mem2reg",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplify",
          "--inline",
          "--die",
          "--nary-reassociate",
          "--redundant-dbg-inst-elim",
          "--infer-address-spaces",
          "--separate-const-offset-from-gep",
          "--licm",
          "--insert-gcov-profiling",
          "--prune-eh",
          "--instsimplify",
          "--sroa",
          "--scalarizer",
          "--mergefunc",
          "--add-discriminators",
          "--name-anon-globals",
          "--mem2reg",
          "--hotcoldsplit",
          "--mergeicmps",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplify",
      "--inline",
      "--die",
      "--nary-reassociate",
      "--redundant-dbg-inst-elim",
      "--infer-address-spaces",
      "--separate-const-offset-from-gep",
      "--licm",
      "--insert-gcov-profiling",
      "--prune-eh",
      "--instsimplify",
      "--sroa",
      "--scalarizer",
      "--mergefunc",
      "--add-discriminators",
      "--name-anon-globals",
      "--mem2reg",
      "--hotcoldsplit",
      "--mergeicmps",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+7.4%"
  }
}