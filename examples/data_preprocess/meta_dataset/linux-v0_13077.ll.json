{
  "program_id": "linux-v0_13077.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 23,
    "oneSuccessor": 39,
    "twoPred": 13,
    "twoPredOneSuc": 6,
    "twoEach": 5,
    "twoSuccessor": 31,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 0,
    "BranchCount": 70,
    "returnInt": 28,
    "CriticalCount": 15,
    "NumEdges": 101,
    "const32Bit": 285,
    "const64Bit": 24,
    "numConstZeroes": 132,
    "numConstOnes": 91,
    "UncondBranches": 39,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 71,
    "NumAndInst": 4,
    "BlockMid": 14,
    "BlockLow": 67,
    "NumBitCastInst": 17,
    "NumBrInst": 70,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 100,
    "NumICmpInst": 33,
    "NumLShrInst": 3,
    "NumLoadInst": 211,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 85,
    "NumSubInst": 2,
    "NumTruncInst": 7,
    "NumXorInst": 2,
    "NumZExtInst": 61,
    "TotalBlocks": 81,
    "TotalInsts": 736,
    "TotalMemInst": 508,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 369
  },
  "baseline_oz_instcount": 738,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--gvn",
    "--aggressive-instcombine",
    "--mergefunc",
    "--bdce",
    "--elim-avail-extern",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--dse",
          "--globaldce",
          "--aggressive-instcombine",
          "--loop-distribute",
          "--instnamer",
          "--alignment-from-assumptions",
          "--attributor",
          "--hotcoldsplit",
          "--coro-cleanup",
          "--reassociate",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--dse",
      "--globaldce",
      "--aggressive-instcombine",
      "--loop-distribute",
      "--instnamer",
      "--alignment-from-assumptions",
      "--attributor",
      "--hotcoldsplit",
      "--coro-cleanup",
      "--reassociate",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}