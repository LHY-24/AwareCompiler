{
  "program_id": "linux-v0_12291.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 34,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 6,
    "oneSuccessor": 33,
    "twoPred": 10,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 1,
    "BranchCount": 45,
    "returnInt": 9,
    "CriticalCount": 6,
    "NumEdges": 57,
    "const32Bit": 137,
    "const64Bit": 6,
    "numConstZeroes": 67,
    "numConstOnes": 54,
    "UncondBranches": 33,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 36,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 51,
    "NumBitCastInst": 11,
    "NumBrInst": 45,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 49,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 103,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 44,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 2,
    "NumZExtInst": 6,
    "TotalBlocks": 54,
    "TotalInsts": 352,
    "TotalMemInst": 262,
    "TotalFuncs": 26,
    "ArgsPhi": 2,
    "testUnary": 160
  },
  "baseline_oz_instcount": 352,
  "knowledge_base_entry": [
    "--loop-predication",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--gvn-hoist",
    "--newgvn",
    "--jump-threading",
    "--newgvn",
    "-loop-reduce",
    "--newgvn",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--instcombine",
    "--die",
    "--sccp",
    "--dse",
    "--gvn",
    "--early-cse",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--mem2reg",
          "--globaldce",
          "--tailcallelim",
          "--load-store-vectorizer",
          "--loop-interchange",
          "--inject-tli-mappings",
          "--lowerinvoke",
          "--float2int",
          "--alignment-from-assumptions",
          "--inferattrs",
          "--lower-guard-intrinsic",
          "--functionattrs",
          "--coro-split",
          "--aggressive-instcombine",
          "--callsite-splitting",
          "--strip-nondebug",
          "--mergefunc",
          "--memcpyopt",
          "--loop-fusion",
          "--gvn",
          "--lower-expect",
          "--inline",
          "--hotcoldsplit",
          "--loop-guard-widening",
          "--gvn-hoist",
          "--cross-dso-cfi",
          "--mergereturn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--mem2reg",
      "--globaldce",
      "--tailcallelim",
      "--load-store-vectorizer",
      "--loop-interchange",
      "--inject-tli-mappings",
      "--lowerinvoke",
      "--float2int",
      "--alignment-from-assumptions",
      "--inferattrs",
      "--lower-guard-intrinsic",
      "--functionattrs",
      "--coro-split",
      "--aggressive-instcombine",
      "--callsite-splitting",
      "--strip-nondebug",
      "--mergefunc",
      "--memcpyopt",
      "--loop-fusion",
      "--gvn",
      "--lower-expect",
      "--inline",
      "--hotcoldsplit",
      "--loop-guard-widening",
      "--gvn-hoist",
      "--cross-dso-cfi",
      "--mergereturn"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}