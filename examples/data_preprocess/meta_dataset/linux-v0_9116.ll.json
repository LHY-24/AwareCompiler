{
  "program_id": "linux-v0_9116.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 12,
    "oneSuccessor": 15,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 2,
    "CriticalCount": 14,
    "NumEdges": 51,
    "const32Bit": 75,
    "const64Bit": 14,
    "numConstZeroes": 25,
    "numConstOnes": 39,
    "UncondBranches": 15,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 25,
    "NumAndInst": 4,
    "BlockMid": 6,
    "BlockLow": 31,
    "NumBitCastInst": 8,
    "NumBrInst": 33,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 17,
    "NumLShrInst": 2,
    "NumLoadInst": 80,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 49,
    "NumSubInst": 4,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 19,
    "TotalBlocks": 37,
    "TotalInsts": 292,
    "TotalMemInst": 184,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 138
  },
  "baseline_oz_instcount": 292,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--gvn-hoist",
    "--ipsccp",
    "--mem2reg",
    "--prune-eh",
    "--aggressive-instcombine",
    "--prune-eh",
    "--early-cse",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--bdce",
    "--mergefunc",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simplifycfg",
          "--sink",
          "--aggressive-instcombine",
          "--slsr",
          "--instnamer",
          "--speculative-execution",
          "--early-cse-memssa",
          "--strip-nondebug",
          "--loweratomic",
          "--lower-expect",
          "--gvn-hoist",
          "--partially-inline-libcalls",
          "--reassociate",
          "--ipsccp",
          "--loop-fusion",
          "--insert-gcov-profiling",
          "--canonicalize-aliases",
          "--strip-debug-declare",
          "--sancov",
          "--inline",
          "--strip-dead-prototypes",
          "--callsite-splitting",
          "--strip",
          "--always-inline",
          "--flattencfg",
          "--lower-widenable-condition",
          "--loop-reroll",
          "--loop-unswitch",
          "--guard-widening",
          "--loop-data-prefetch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simplifycfg",
      "--sink",
      "--aggressive-instcombine",
      "--slsr",
      "--instnamer",
      "--speculative-execution",
      "--early-cse-memssa",
      "--strip-nondebug",
      "--loweratomic",
      "--lower-expect",
      "--gvn-hoist",
      "--partially-inline-libcalls",
      "--reassociate",
      "--ipsccp",
      "--loop-fusion",
      "--insert-gcov-profiling",
      "--canonicalize-aliases",
      "--strip-debug-declare",
      "--sancov",
      "--inline",
      "--strip-dead-prototypes",
      "--callsite-splitting",
      "--strip",
      "--always-inline",
      "--flattencfg",
      "--lower-widenable-condition",
      "--loop-reroll",
      "--loop-unswitch",
      "--guard-widening",
      "--loop-data-prefetch"
    ],
    "performance_vs_Oz": "+3.4%"
  }
}