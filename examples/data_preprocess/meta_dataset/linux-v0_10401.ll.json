{
  "program_id": "linux-v0_10401.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 5,
    "oneSuccessor": 13,
    "twoPred": 2,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 6,
    "CriticalCount": 2,
    "NumEdges": 30,
    "const32Bit": 92,
    "const64Bit": 5,
    "numConstZeroes": 34,
    "numConstOnes": 38,
    "UncondBranches": 13,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 32,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 28,
    "NumBitCastInst": 6,
    "NumBrInst": 19,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 62,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 51,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 33,
    "TotalInsts": 237,
    "TotalMemInst": 187,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 102
  },
  "baseline_oz_instcount": 237,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--gvn",
    "--newgvn",
    "--newgvn",
    "--prune-eh",
    "--lower-expect",
    "--mem2reg",
    "--ipsccp",
    "--flattencfg",
    "--early-cse-memssa",
    "--memcpyopt",
    "--mergefunc",
    "--adce",
    "--lower-constant-intrinsics",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--lower-guard-intrinsic",
          "--post-inline-ee-instrument",
          "--speculative-execution",
          "--guard-widening",
          "--loop-versioning-licm",
          "--tailcallelim",
          "--simplifycfg",
          "--mldst-motion",
          "--ipsccp",
          "--strip-debug-declare",
          "--die",
          "--loop-simplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--lower-guard-intrinsic",
      "--post-inline-ee-instrument",
      "--speculative-execution",
      "--guard-widening",
      "--loop-versioning-licm",
      "--tailcallelim",
      "--simplifycfg",
      "--mldst-motion",
      "--ipsccp",
      "--strip-debug-declare",
      "--die",
      "--loop-simplify"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}