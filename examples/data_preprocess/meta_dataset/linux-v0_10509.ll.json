{
  "program_id": "linux-v0_10509.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 1,
    "CriticalCount": 0,
    "NumEdges": 13,
    "const32Bit": 77,
    "const64Bit": 8,
    "numConstZeroes": 32,
    "numConstOnes": 38,
    "UncondBranches": 9,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 32,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 14,
    "NumBitCastInst": 14,
    "NumBrInst": 11,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 48,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 38,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 2,
    "NumZExtInst": 1,
    "TotalBlocks": 19,
    "TotalInsts": 208,
    "TotalMemInst": 160,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 100
  },
  "baseline_oz_instcount": 208,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--instsimplify",
    "--mldst-motion",
    "--newgvn",
    "--gvn-hoist",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--indvars",
          "--loop-guard-widening",
          "--loop-fusion",
          "--inject-tli-mappings",
          "--jump-threading",
          "--slp-vectorizer",
          "--speculative-execution",
          "--coro-elide",
          "--canonicalize-aliases",
          "--strip",
          "--coro-cleanup",
          "--sroa",
          "--gvn-hoist",
          "--libcalls-shrinkwrap",
          "--loweratomic",
          "--lower-constant-intrinsics",
          "--guard-widening",
          "--globalsplit",
          "--mergefunc",
          "--loop-idiom",
          "-loop-reduce",
          "--instsimplify",
          "--globalopt",
          "--loop-sink",
          "--functionattrs",
          "--loop-predication",
          "--loop-deletion",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--indvars",
      "--loop-guard-widening",
      "--loop-fusion",
      "--inject-tli-mappings",
      "--jump-threading",
      "--slp-vectorizer",
      "--speculative-execution",
      "--coro-elide",
      "--canonicalize-aliases",
      "--strip",
      "--coro-cleanup",
      "--sroa",
      "--gvn-hoist",
      "--libcalls-shrinkwrap",
      "--loweratomic",
      "--lower-constant-intrinsics",
      "--guard-widening",
      "--globalsplit",
      "--mergefunc",
      "--loop-idiom",
      "-loop-reduce",
      "--instsimplify",
      "--globalopt",
      "--loop-sink",
      "--functionattrs",
      "--loop-predication",
      "--loop-deletion",
      "--dse"
    ],
    "performance_vs_Oz": "+7.2%"
  }
}