{
  "program_id": "github-v0_40537.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 35,
    "const64Bit": 22,
    "numConstZeroes": 27,
    "numConstOnes": 24,
    "UncondBranches": 13,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 13,
    "NumAndInst": 2,
    "BlockMid": 3,
    "BlockLow": 21,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 17,
    "TotalBlocks": 24,
    "TotalInsts": 162,
    "TotalMemInst": 91,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 73
  },
  "baseline_oz_instcount": 162,
  "knowledge_base_entry": [
    "--mem2reg",
    "--gvn",
    "--aggressive-instcombine",
    "--reassociate",
    "--sccp",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--adce",
    "--loop-simplifycfg",
    "--instsimplify",
    "--slp-vectorizer",
    "--instcombine",
    "--early-cse",
    "--die",
    "--reassociate",
    "--load-store-vectorizer",
    "--sroa",
    "--mldst-motion",
    "--instcombine",
    "--early-cse",
    "--die",
    "--aggressive-instcombine",
    "--bdce",
    "--simplifycfg",
    "-loop-reduce",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "-loop-reduce",
          "--consthoist",
          "--sancov",
          "--name-anon-globals",
          "--mergefunc",
          "--mldst-motion",
          "--mem2reg",
          "--loop-simplify",
          "--redundant-dbg-inst-elim",
          "--partially-inline-libcalls",
          "--reassociate",
          "--lower-widenable-condition",
          "--prune-eh",
          "--early-cse-memssa",
          "--lower-matrix-intrinsics",
          "--licm",
          "--speculative-execution",
          "--coro-cleanup",
          "--add-discriminators",
          "--loop-sink",
          "--loop-fusion",
          "--dse",
          "--sink",
          "--strip-debug-declare",
          "--gvn-hoist",
          "--aggressive-instcombine",
          "--coro-early"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "-loop-reduce",
      "--consthoist",
      "--sancov",
      "--name-anon-globals",
      "--mergefunc",
      "--mldst-motion",
      "--mem2reg",
      "--loop-simplify",
      "--redundant-dbg-inst-elim",
      "--partially-inline-libcalls",
      "--reassociate",
      "--lower-widenable-condition",
      "--prune-eh",
      "--early-cse-memssa",
      "--lower-matrix-intrinsics",
      "--licm",
      "--speculative-execution",
      "--coro-cleanup",
      "--add-discriminators",
      "--loop-sink",
      "--loop-fusion",
      "--dse",
      "--sink",
      "--strip-debug-declare",
      "--gvn-hoist",
      "--aggressive-instcombine",
      "--coro-early"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}