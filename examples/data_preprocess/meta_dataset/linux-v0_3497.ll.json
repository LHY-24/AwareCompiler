{
  "program_id": "linux-v0_3497.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 9,
    "oneSuccessor": 50,
    "twoPred": 13,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 19,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 98,
    "BeginPhi": 0,
    "BranchCount": 68,
    "returnInt": 35,
    "CriticalCount": 24,
    "NumEdges": 123,
    "const32Bit": 304,
    "const64Bit": 15,
    "numConstZeroes": 92,
    "numConstOnes": 97,
    "UncondBranches": 50,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 65,
    "NumAndInst": 6,
    "BlockMid": 8,
    "BlockLow": 90,
    "NumBitCastInst": 9,
    "NumBrInst": 68,
    "NumCallInst": 57,
    "NumGetElementPtrInst": 53,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 160,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 24,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 97,
    "NumSubInst": 2,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 9,
    "TotalBlocks": 98,
    "TotalInsts": 610,
    "TotalMemInst": 432,
    "TotalFuncs": 54,
    "ArgsPhi": 0,
    "testUnary": 266
  },
  "baseline_oz_instcount": 611,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--early-cse-memssa",
    "--ipsccp",
    "--elim-avail-extern",
    "--sccp",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--flattencfg",
    "--aggressive-instcombine",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--separate-const-offset-from-gep",
          "--called-value-propagation",
          "--deadargelim",
          "--name-anon-globals",
          "--sccp",
          "--irce",
          "--consthoist",
          "--coro-cleanup",
          "--loop-simplifycfg",
          "--lower-constant-intrinsics",
          "--sancov",
          "--strip-dead-prototypes",
          "--loop-sink",
          "--partially-inline-libcalls",
          "--partial-inliner",
          "--early-cse-memssa",
          "--strip-debug-declare",
          "--aggressive-instcombine",
          "--redundant-dbg-inst-elim",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--separate-const-offset-from-gep",
      "--called-value-propagation",
      "--deadargelim",
      "--name-anon-globals",
      "--sccp",
      "--irce",
      "--consthoist",
      "--coro-cleanup",
      "--loop-simplifycfg",
      "--lower-constant-intrinsics",
      "--sancov",
      "--strip-dead-prototypes",
      "--loop-sink",
      "--partially-inline-libcalls",
      "--partial-inliner",
      "--early-cse-memssa",
      "--strip-debug-declare",
      "--aggressive-instcombine",
      "--redundant-dbg-inst-elim",
      "--globaldce"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}