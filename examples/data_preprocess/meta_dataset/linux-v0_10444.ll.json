{
  "program_id": "linux-v0_10444.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 63,
    "onePredOneSuc": 46,
    "onePredTwoSuc": 14,
    "oneSuccessor": 60,
    "twoPred": 14,
    "twoPredOneSuc": 8,
    "twoEach": 2,
    "twoSuccessor": 20,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 104,
    "BeginPhi": 0,
    "BranchCount": 80,
    "returnInt": 23,
    "CriticalCount": 12,
    "NumEdges": 124,
    "const32Bit": 429,
    "const64Bit": 35,
    "numConstZeroes": 200,
    "numConstOnes": 136,
    "UncondBranches": 60,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 90,
    "NumAndInst": 8,
    "BlockMid": 18,
    "BlockLow": 86,
    "NumBitCastInst": 44,
    "NumBrInst": 80,
    "NumCallInst": 67,
    "NumGetElementPtrInst": 146,
    "NumICmpInst": 23,
    "NumLShrInst": 4,
    "NumLoadInst": 283,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 151,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 8,
    "NumZExtInst": 4,
    "TotalBlocks": 104,
    "TotalInsts": 960,
    "TotalMemInst": 737,
    "TotalFuncs": 48,
    "ArgsPhi": 0,
    "testUnary": 439
  },
  "baseline_oz_instcount": 961,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--mem2reg",
    "--slp-vectorizer",
    "--mergefunc",
    "--elim-avail-extern",
    "--newgvn",
    "--elim-avail-extern",
    "--sccp",
    "--inline",
    "--prune-eh",
    "--reassociate",
    "--adce",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--mldst-motion",
          "--div-rem-pairs",
          "--instsimplify",
          "--loop-reroll",
          "--alignment-from-assumptions",
          "--instcombine",
          "--constprop",
          "--add-discriminators",
          "--scalarizer",
          "--loop-instsimplify",
          "--redundant-dbg-inst-elim",
          "--inferattrs",
          "--ee-instrument",
          "--loop-predication",
          "--coro-split",
          "--lowerinvoke",
          "--lower-widenable-condition",
          "--load-store-vectorizer",
          "--globalsplit",
          "--cross-dso-cfi",
          "--partial-inliner",
          "--loweratomic",
          "--gvn",
          "--separate-const-offset-from-gep",
          "--mergefunc",
          "--sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--mldst-motion",
      "--div-rem-pairs",
      "--instsimplify",
      "--loop-reroll",
      "--alignment-from-assumptions",
      "--instcombine",
      "--constprop",
      "--add-discriminators",
      "--scalarizer",
      "--loop-instsimplify",
      "--redundant-dbg-inst-elim",
      "--inferattrs",
      "--ee-instrument",
      "--loop-predication",
      "--coro-split",
      "--lowerinvoke",
      "--lower-widenable-condition",
      "--load-store-vectorizer",
      "--globalsplit",
      "--cross-dso-cfi",
      "--partial-inliner",
      "--loweratomic",
      "--gvn",
      "--separate-const-offset-from-gep",
      "--mergefunc",
      "--sink"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}