{
  "program_id": "poj104-v1_50_1682.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 2,
    "oneSuccessor": 4,
    "twoPred": 3,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 3,
    "CriticalCount": 3,
    "NumEdges": 10,
    "const32Bit": 26,
    "const64Bit": 54,
    "numConstZeroes": 26,
    "numConstOnes": 10,
    "UncondBranches": 4,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 9,
    "NumBitCastInst": 6,
    "NumBrInst": 7,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 21,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 15,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 115,
    "TotalMemInst": 76,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 33
  },
  "baseline_oz_instcount": 53,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--newgvn",
    "--prune-eh",
    "--inline",
    "--aggressive-instcombine",
    "--globalopt",
    "--mergefunc",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--instsimplify",
    "--nary-reassociate",
    "--sroa",
    "--newgvn",
    "--prune-eh",
    "--early-cse",
    "--prune-eh",
    "--instcombine",
    "--prune-eh",
    "--early-cse-memssa",
    "--prune-eh",
    "--inline",
    "--simplifycfg",
    "--slp-vectorizer",
    "--early-cse",
    "--prune-eh",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--inline",
    "--sroa",
    "--mem2reg",
    "--inline",
    "--loop-rotate",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--mem2reg",
    "--instsimplify",
    "--aggressive-instcombine",
    "--bdce",
    "--correlated-propagation",
    "--gvn-hoist",
    "--loop-reroll",
    "--instsimplify",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--lowerinvoke",
          "--loop-simplify",
          "--partial-inliner",
          "--licm",
          "--ipconstprop",
          "--coro-early",
          "--slsr",
          "--sroa",
          "--loop-rotate",
          "--aggressive-instcombine",
          "--instcombine",
          "--mem2reg",
          "--loop-simplifycfg",
          "--strip-nondebug",
          "--prune-eh",
          "--loop-sink",
          "--sink",
          "--loop-unroll",
          "--always-inline",
          "--strip-dead-prototypes",
          "--loop-guard-widening",
          "--constmerge",
          "--loop-unroll-and-jam",
          "--ee-instrument",
          "--load-store-vectorizer",
          "--float2int",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+13.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--lowerinvoke",
      "--loop-simplify",
      "--partial-inliner",
      "--licm",
      "--ipconstprop",
      "--coro-early",
      "--slsr",
      "--sroa",
      "--loop-rotate",
      "--aggressive-instcombine",
      "--instcombine",
      "--mem2reg",
      "--loop-simplifycfg",
      "--strip-nondebug",
      "--prune-eh",
      "--loop-sink",
      "--sink",
      "--loop-unroll",
      "--always-inline",
      "--strip-dead-prototypes",
      "--loop-guard-widening",
      "--constmerge",
      "--loop-unroll-and-jam",
      "--ee-instrument",
      "--load-store-vectorizer",
      "--float2int",
      "--gvn"
    ],
    "performance_vs_Oz": "+13.2%"
  }
}