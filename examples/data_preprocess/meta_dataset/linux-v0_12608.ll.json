{
  "program_id": "linux-v0_12608.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 82,
    "onePredOneSuc": 67,
    "onePredTwoSuc": 12,
    "oneSuccessor": 78,
    "twoPred": 23,
    "twoPredOneSuc": 6,
    "twoEach": 11,
    "twoSuccessor": 31,
    "morePreds": 7,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 131,
    "BeginPhi": 3,
    "BranchCount": 109,
    "returnInt": 28,
    "CriticalCount": 15,
    "NumEdges": 154,
    "const32Bit": 230,
    "const64Bit": 60,
    "numConstZeroes": 105,
    "numConstOnes": 131,
    "UncondBranches": 78,
    "binaryConstArg": 51,
    "NumAShrInst": 0,
    "NumAddInst": 28,
    "NumAllocaInst": 94,
    "NumAndInst": 2,
    "BlockMid": 13,
    "BlockLow": 121,
    "NumBitCastInst": 26,
    "NumBrInst": 109,
    "NumCallInst": 74,
    "NumGetElementPtrInst": 46,
    "NumICmpInst": 37,
    "NumLShrInst": 1,
    "NumLoadInst": 276,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 22,
    "NumSExtInst": 31,
    "NumSelectInst": 2,
    "NumShlInst": 9,
    "NumStoreInst": 144,
    "NumSubInst": 18,
    "NumTruncInst": 2,
    "NumXorInst": 9,
    "NumZExtInst": 9,
    "TotalBlocks": 134,
    "TotalInsts": 982,
    "TotalMemInst": 634,
    "TotalFuncs": 39,
    "ArgsPhi": 6,
    "testUnary": 466
  },
  "baseline_oz_instcount": 980,
  "knowledge_base_entry": [
    "--loweratomic",
    "--early-cse",
    "--mldst-motion",
    "--mem2reg",
    "--lower-expect",
    "--ipsccp",
    "--gvn",
    "--early-cse-memssa",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--gvn-hoist",
    "--mergefunc",
    "--load-store-vectorizer",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--globalopt",
          "--tailcallelim",
          "--scalarizer",
          "--loop-vectorize",
          "--insert-gcov-profiling",
          "--constprop",
          "--coro-elide",
          "--instnamer",
          "--gvn",
          "--mergefunc",
          "--partial-inliner",
          "--lower-constant-intrinsics",
          "--consthoist",
          "--strip-nondebug",
          "--loop-instsimplify",
          "--ipconstprop",
          "--called-value-propagation",
          "--forceattrs",
          "--name-anon-globals",
          "--rpo-functionattrs",
          "--hotcoldsplit",
          "--loop-distribute",
          "--nary-reassociate",
          "--speculative-execution",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--globalopt",
      "--tailcallelim",
      "--scalarizer",
      "--loop-vectorize",
      "--insert-gcov-profiling",
      "--constprop",
      "--coro-elide",
      "--instnamer",
      "--gvn",
      "--mergefunc",
      "--partial-inliner",
      "--lower-constant-intrinsics",
      "--consthoist",
      "--strip-nondebug",
      "--loop-instsimplify",
      "--ipconstprop",
      "--called-value-propagation",
      "--forceattrs",
      "--name-anon-globals",
      "--rpo-functionattrs",
      "--hotcoldsplit",
      "--loop-distribute",
      "--nary-reassociate",
      "--speculative-execution",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}