{
  "program_id": "linux-v0_5576.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 41,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 12,
    "oneSuccessor": 36,
    "twoPred": 14,
    "twoPredOneSuc": 6,
    "twoEach": 3,
    "twoSuccessor": 20,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 0,
    "BranchCount": 56,
    "returnInt": 27,
    "CriticalCount": 7,
    "NumEdges": 82,
    "const32Bit": 260,
    "const64Bit": 43,
    "numConstZeroes": 126,
    "numConstOnes": 133,
    "UncondBranches": 36,
    "binaryConstArg": 18,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 84,
    "NumAndInst": 6,
    "BlockMid": 17,
    "BlockLow": 64,
    "NumBitCastInst": 21,
    "NumBrInst": 56,
    "NumCallInst": 53,
    "NumGetElementPtrInst": 82,
    "NumICmpInst": 33,
    "NumLShrInst": 1,
    "NumLoadInst": 189,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 24,
    "NumSExtInst": 10,
    "NumSelectInst": 10,
    "NumShlInst": 1,
    "NumStoreInst": 119,
    "NumSubInst": 0,
    "NumTruncInst": 22,
    "NumXorInst": 6,
    "NumZExtInst": 35,
    "TotalBlocks": 81,
    "TotalInsts": 767,
    "TotalMemInst": 527,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 366
  },
  "baseline_oz_instcount": 767,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--dce",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--lower-expect",
    "--licm",
    "--early-cse-memssa",
    "--instcombine",
    "--globalopt",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--slsr",
    "--loop-simplifycfg",
    "--sccp",
    "--elim-avail-extern",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--ipconstprop",
          "--loop-distribute",
          "--pgo-memop-opt",
          "--sink",
          "--loop-simplifycfg",
          "--loop-fusion",
          "--loop-sink",
          "--simplifycfg",
          "--aggressive-instcombine",
          "--coro-early",
          "--mergefunc",
          "--ee-instrument",
          "--rpo-functionattrs",
          "--loop-deletion",
          "--strip",
          "--die",
          "-loop-reduce",
          "--sancov",
          "--partial-inliner",
          "--alignment-from-assumptions",
          "--add-discriminators",
          "--loop-reroll",
          "--lower-constant-intrinsics",
          "--hotcoldsplit",
          "--attributor"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--ipconstprop",
      "--loop-distribute",
      "--pgo-memop-opt",
      "--sink",
      "--loop-simplifycfg",
      "--loop-fusion",
      "--loop-sink",
      "--simplifycfg",
      "--aggressive-instcombine",
      "--coro-early",
      "--mergefunc",
      "--ee-instrument",
      "--rpo-functionattrs",
      "--loop-deletion",
      "--strip",
      "--die",
      "-loop-reduce",
      "--sancov",
      "--partial-inliner",
      "--alignment-from-assumptions",
      "--add-discriminators",
      "--loop-reroll",
      "--lower-constant-intrinsics",
      "--hotcoldsplit",
      "--attributor"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}