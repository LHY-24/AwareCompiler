{
  "program_id": "github-v0_29795.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 35,
    "const64Bit": 26,
    "numConstZeroes": 29,
    "numConstOnes": 20,
    "UncondBranches": 11,
    "binaryConstArg": 15,
    "NumAShrInst": 2,
    "NumAddInst": 5,
    "NumAllocaInst": 12,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 6,
    "NumLShrInst": 1,
    "NumLoadInst": 26,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 1,
    "NumZExtInst": 12,
    "TotalBlocks": 21,
    "TotalInsts": 148,
    "TotalMemInst": 78,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 64
  },
  "baseline_oz_instcount": 148,
  "knowledge_base_entry": [
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--licm",
    "--aggressive-instcombine",
    "--die",
    "--loop-instsimplify",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--die",
    "--lower-expect",
    "--early-cse-memssa",
    "--mergefunc",
    "--sroa",
    "--flattencfg",
    "--elim-avail-extern",
    "--ipsccp",
    "--gvn-hoist",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--name-anon-globals",
          "--globalsplit",
          "--irce",
          "--aggressive-instcombine",
          "--rpo-functionattrs",
          "--redundant-dbg-inst-elim",
          "--inline",
          "--float2int",
          "--sroa",
          "--alignment-from-assumptions",
          "--lcssa",
          "--mergefunc",
          "--partial-inliner",
          "--reg2mem",
          "--constprop",
          "--loop-predication",
          "--dce",
          "--flattencfg",
          "--ee-instrument",
          "--argpromotion",
          "--simplifycfg",
          "--separate-const-offset-from-gep",
          "--loop-sink",
          "--licm",
          "--coro-split",
          "--lower-matrix-intrinsics",
          "--insert-gcov-profiling",
          "--loop-unroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--name-anon-globals",
      "--globalsplit",
      "--irce",
      "--aggressive-instcombine",
      "--rpo-functionattrs",
      "--redundant-dbg-inst-elim",
      "--inline",
      "--float2int",
      "--sroa",
      "--alignment-from-assumptions",
      "--lcssa",
      "--mergefunc",
      "--partial-inliner",
      "--reg2mem",
      "--constprop",
      "--loop-predication",
      "--dce",
      "--flattencfg",
      "--ee-instrument",
      "--argpromotion",
      "--simplifycfg",
      "--separate-const-offset-from-gep",
      "--loop-sink",
      "--licm",
      "--coro-split",
      "--lower-matrix-intrinsics",
      "--insert-gcov-profiling",
      "--loop-unroll"
    ],
    "performance_vs_Oz": "+5.4%"
  }
}