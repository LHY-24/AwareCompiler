{
  "program_id": "github-v0_50053.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 12,
    "onePred": 12,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 1,
    "oneSuccessor": 12,
    "twoPred": 15,
    "twoPredOneSuc": 1,
    "twoEach": 11,
    "twoSuccessor": 15,
    "morePreds": 0,
    "BB03Phi": 12,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 12,
    "BranchCount": 27,
    "returnInt": 28,
    "CriticalCount": 18,
    "NumEdges": 42,
    "const32Bit": 69,
    "const64Bit": 14,
    "numConstZeroes": 28,
    "numConstOnes": 31,
    "UncondBranches": 12,
    "binaryConstArg": 33,
    "NumAShrInst": 5,
    "NumAddInst": 49,
    "NumAllocaInst": 0,
    "NumAndInst": 4,
    "BlockMid": 7,
    "BlockLow": 23,
    "NumBitCastInst": 0,
    "NumBrInst": 27,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 14,
    "NumMulInst": 21,
    "NumOrInst": 4,
    "NumPHIInst": 16,
    "NumRetInst": 3,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 5,
    "NumSubInst": 10,
    "NumTruncInst": 22,
    "NumXorInst": 3,
    "NumZExtInst": 0,
    "TotalBlocks": 30,
    "TotalInsts": 318,
    "TotalMemInst": 72,
    "TotalFuncs": 12,
    "ArgsPhi": 32,
    "testUnary": 56
  },
  "baseline_oz_instcount": 337,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--gvn",
    "--load-store-vectorizer",
    "--reassociate",
    "--gvn-hoist",
    "--globalopt",
    "--reassociate",
    "--licm",
    "--simplifycfg",
    "--sccp",
    "--licm",
    "--instsimplify",
    "--elim-avail-extern",
    "--bdce",
    "--dse",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--early-cse",
    "--early-cse-memssa",
    "--dce",
    "--gvn",
    "--newgvn",
    "--instcombine",
    "--flattencfg",
    "--mergefunc",
    "--die",
    "--simplifycfg",
    "--mldst-motion",
    "--early-cse",
    "--slp-vectorizer",
    "--instcombine",
    "--flattencfg",
    "--mergefunc",
    "--instsimplify",
    "--dce",
    "--early-cse",
    "--gvn",
    "--lower-expect",
    "--jump-threading",
    "--mem2reg",
    "--slp-vectorizer",
    "--bdce",
    "--jump-threading",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--dce",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--lowerinvoke",
          "--canonicalize-aliases",
          "--consthoist",
          "--strip-dead-prototypes",
          "--nary-reassociate",
          "--adce",
          "--libcalls-shrinkwrap",
          "--callsite-splitting",
          "--forceattrs",
          "--hotcoldsplit",
          "--lower-constant-intrinsics",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--lowerinvoke",
      "--canonicalize-aliases",
      "--consthoist",
      "--strip-dead-prototypes",
      "--nary-reassociate",
      "--adce",
      "--libcalls-shrinkwrap",
      "--callsite-splitting",
      "--forceattrs",
      "--hotcoldsplit",
      "--lower-constant-intrinsics",
      "--barrier"
    ],
    "performance_vs_Oz": "+6.5%"
  }
}