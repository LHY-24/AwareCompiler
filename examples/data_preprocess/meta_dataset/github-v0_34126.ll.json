{
  "program_id": "github-v0_34126.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 88,
    "onePredOneSuc": 78,
    "onePredTwoSuc": 10,
    "oneSuccessor": 84,
    "twoPred": 36,
    "twoPredOneSuc": 4,
    "twoEach": 30,
    "twoSuccessor": 42,
    "morePreds": 2,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 122,
    "BeginPhi": 6,
    "BranchCount": 126,
    "returnInt": 0,
    "CriticalCount": 12,
    "NumEdges": 168,
    "const32Bit": 202,
    "const64Bit": 149,
    "numConstZeroes": 219,
    "numConstOnes": 66,
    "UncondBranches": 84,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 20,
    "NumAllocaInst": 40,
    "NumAndInst": 0,
    "BlockMid": 10,
    "BlockLow": 118,
    "NumBitCastInst": 58,
    "NumBrInst": 126,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 136,
    "NumICmpInst": 42,
    "NumLShrInst": 0,
    "NumLoadInst": 251,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 6,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 119,
    "NumSubInst": 4,
    "NumTruncInst": 8,
    "NumXorInst": 16,
    "NumZExtInst": 16,
    "TotalBlocks": 128,
    "TotalInsts": 891,
    "TotalMemInst": 590,
    "TotalFuncs": 6,
    "ArgsPhi": 12,
    "testUnary": 373
  },
  "baseline_oz_instcount": 891,
  "knowledge_base_entry": [
    "--newgvn",
    "--loop-deletion",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--mem2reg",
    "--instsimplify",
    "--ipsccp",
    "--lower-expect",
    "--gvn",
    "--loop-instsimplify",
    "--inline",
    "--gvn-hoist",
    "--licm",
    "--mem2reg",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--licm",
    "--lower-expect",
    "--mem2reg",
    "--prune-eh",
    "--sroa",
    "--ipsccp",
    "--loweratomic",
    "--early-cse",
    "--loop-rotate",
    "--instsimplify",
    "--loop-reroll",
    "--correlated-propagation",
    "--simplifycfg",
    "--jump-threading",
    "--licm",
    "--memcpyopt",
    "--early-cse-memssa",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-deletion",
          "--redundant-dbg-inst-elim",
          "--aggressive-instcombine",
          "--coro-early",
          "--scalarizer",
          "--partially-inline-libcalls",
          "--loop-simplifycfg",
          "--constprop",
          "--dse",
          "--indvars",
          "--cross-dso-cfi",
          "--loop-unroll",
          "--irce",
          "--adce",
          "--always-inline",
          "--loop-unswitch",
          "--early-cse",
          "--gvn",
          "--mergeicmps",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-deletion",
      "--redundant-dbg-inst-elim",
      "--aggressive-instcombine",
      "--coro-early",
      "--scalarizer",
      "--partially-inline-libcalls",
      "--loop-simplifycfg",
      "--constprop",
      "--dse",
      "--indvars",
      "--cross-dso-cfi",
      "--loop-unroll",
      "--irce",
      "--adce",
      "--always-inline",
      "--loop-unswitch",
      "--early-cse",
      "--gvn",
      "--mergeicmps",
      "--newgvn"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}