{
  "program_id": "linux-v0_13339.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 55,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 15,
    "oneSuccessor": 46,
    "twoPred": 14,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 26,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 108,
    "BeginPhi": 1,
    "BranchCount": 71,
    "returnInt": 30,
    "CriticalCount": 6,
    "NumEdges": 102,
    "const32Bit": 295,
    "const64Bit": 18,
    "numConstZeroes": 118,
    "numConstOnes": 119,
    "UncondBranches": 46,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 104,
    "NumAndInst": 6,
    "BlockMid": 14,
    "BlockLow": 95,
    "NumBitCastInst": 14,
    "NumBrInst": 71,
    "NumCallInst": 72,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 25,
    "NumLShrInst": 1,
    "NumLoadInst": 245,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 36,
    "NumSExtInst": 5,
    "NumSelectInst": 1,
    "NumShlInst": 5,
    "NumStoreInst": 143,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 6,
    "NumZExtInst": 12,
    "TotalBlocks": 109,
    "TotalInsts": 827,
    "TotalMemInst": 624,
    "TotalFuncs": 60,
    "ArgsPhi": 2,
    "testUnary": 392
  },
  "baseline_oz_instcount": 827,
  "knowledge_base_entry": [
    "--ipsccp",
    "--reassociate",
    "--dse",
    "--correlated-propagation",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--sroa",
    "--mergefunc",
    "--flattencfg",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--elim-avail-extern",
    "--instcombine",
    "--load-store-vectorizer",
    "--newgvn",
    "--instsimplify",
    "--early-cse",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--libcalls-shrinkwrap",
          "--aggressive-instcombine",
          "--partial-inliner",
          "--strip-nondebug",
          "--sccp",
          "--inline",
          "--dse",
          "--ipsccp",
          "--mldst-motion",
          "--rpo-functionattrs",
          "--sroa",
          "--deadargelim",
          "--die",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--libcalls-shrinkwrap",
      "--aggressive-instcombine",
      "--partial-inliner",
      "--strip-nondebug",
      "--sccp",
      "--inline",
      "--dse",
      "--ipsccp",
      "--mldst-motion",
      "--rpo-functionattrs",
      "--sroa",
      "--deadargelim",
      "--die",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}