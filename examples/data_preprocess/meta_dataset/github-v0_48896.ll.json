{
  "program_id": "github-v0_48896.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 32,
    "const64Bit": 35,
    "numConstZeroes": 38,
    "numConstOnes": 21,
    "UncondBranches": 9,
    "binaryConstArg": 8,
    "NumAShrInst": 1,
    "NumAddInst": 7,
    "NumAllocaInst": 12,
    "NumAndInst": 1,
    "BlockMid": 4,
    "BlockLow": 14,
    "NumBitCastInst": 4,
    "NumBrInst": 14,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 26,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 18,
    "TotalInsts": 140,
    "TotalMemInst": 86,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 59
  },
  "baseline_oz_instcount": 140,
  "knowledge_base_entry": [
    "--inline",
    "--aggressive-instcombine",
    "--adce",
    "--gvn",
    "--simplifycfg",
    "--die",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "--lower-constant-intrinsics",
          "--instnamer",
          "--strip",
          "--loop-predication",
          "--lcssa",
          "--aggressive-instcombine",
          "--speculative-execution",
          "--jump-threading",
          "--inferattrs",
          "--slp-vectorizer",
          "--simple-loop-unswitch",
          "--loop-versioning",
          "--argpromotion",
          "--lowerswitch",
          "--mergereturn",
          "--sroa",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "--lower-constant-intrinsics",
      "--instnamer",
      "--strip",
      "--loop-predication",
      "--lcssa",
      "--aggressive-instcombine",
      "--speculative-execution",
      "--jump-threading",
      "--inferattrs",
      "--slp-vectorizer",
      "--simple-loop-unswitch",
      "--loop-versioning",
      "--argpromotion",
      "--lowerswitch",
      "--mergereturn",
      "--sroa",
      "--gvn"
    ],
    "performance_vs_Oz": "+7.1%"
  }
}