{
  "program_id": "poj104-v1_50_318.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 6,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 8,
    "const32Bit": 24,
    "const64Bit": 35,
    "numConstZeroes": 19,
    "numConstOnes": 7,
    "UncondBranches": 4,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 8,
    "NumBitCastInst": 9,
    "NumBrInst": 6,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 8,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 15,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 82,
    "TotalMemInst": 56,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 24
  },
  "baseline_oz_instcount": 55,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--instsimplify",
    "--sccp",
    "--mem2reg",
    "--memcpyopt",
    "--elim-avail-extern",
    "--jump-threading",
    "--loop-instsimplify",
    "--inline",
    "--jump-threading",
    "--inline",
    "--licm",
    "--instcombine",
    "--sccp",
    "--instsimplify",
    "--adce",
    "--instsimplify",
    "--bdce",
    "--reassociate",
    "--load-store-vectorizer",
    "--instcombine",
    "--mem2reg",
    "--inline",
    "--memcpyopt",
    "--jump-threading",
    "--load-store-vectorizer",
    "--indvars",
    "--slp-vectorizer",
    "--mem2reg",
    "--inline",
    "--simplifycfg",
    "--dse",
    "--instsimplify",
    "--early-cse-memssa",
    "--loop-reroll",
    "--nary-reassociate",
    "--sroa",
    "--flattencfg",
    "--mergefunc",
    "--gvn",
    "--nary-reassociate",
    "--simplifycfg",
    "--flattencfg",
    "--instcombine",
    "--sccp",
    "--mem2reg",
    "--inline",
    "--loop-instsimplify",
    "--die",
    "--lower-constant-intrinsics",
    "--dse",
    "--ipsccp",
    "--correlated-propagation",
    "--gvn-hoist",
    "--loop-deletion",
    "--sroa",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--adce",
    "--ipsccp",
    "--mergefunc",
    "--gvn",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--slsr",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--adce",
    "--jump-threading",
    "--loop-rotate",
    "--licm",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--redundant-dbg-inst-elim",
          "--pgo-memop-opt",
          "--instsimplify",
          "--prune-eh",
          "--sancov",
          "--loop-reroll",
          "--break-crit-edges",
          "--aggressive-instcombine",
          "--guard-widening",
          "--nary-reassociate",
          "--gvn",
          "--strip-nondebug",
          "--flattencfg",
          "--div-rem-pairs",
          "--load-store-vectorizer",
          "--dse",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+21.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--redundant-dbg-inst-elim",
      "--pgo-memop-opt",
      "--instsimplify",
      "--prune-eh",
      "--sancov",
      "--loop-reroll",
      "--break-crit-edges",
      "--aggressive-instcombine",
      "--guard-widening",
      "--nary-reassociate",
      "--gvn",
      "--strip-nondebug",
      "--flattencfg",
      "--div-rem-pairs",
      "--load-store-vectorizer",
      "--dse",
      "--instcombine"
    ],
    "performance_vs_Oz": "+21.8%"
  }
}