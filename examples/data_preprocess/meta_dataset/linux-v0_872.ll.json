{
  "program_id": "linux-v0_872.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 51,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 15,
    "oneSuccessor": 40,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 25,
    "morePreds": 5,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 88,
    "BeginPhi": 2,
    "BranchCount": 65,
    "returnInt": 26,
    "CriticalCount": 8,
    "NumEdges": 90,
    "const32Bit": 284,
    "const64Bit": 31,
    "numConstZeroes": 156,
    "numConstOnes": 94,
    "UncondBranches": 40,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 70,
    "NumAndInst": 2,
    "BlockMid": 12,
    "BlockLow": 78,
    "NumBitCastInst": 25,
    "NumBrInst": 65,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 101,
    "NumICmpInst": 27,
    "NumLShrInst": 0,
    "NumLoadInst": 186,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 25,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 108,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 2,
    "NumZExtInst": 4,
    "TotalBlocks": 90,
    "TotalInsts": 697,
    "TotalMemInst": 517,
    "TotalFuncs": 41,
    "ArgsPhi": 4,
    "testUnary": 306
  },
  "baseline_oz_instcount": 698,
  "knowledge_base_entry": [
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--ipsccp",
    "--instsimplify",
    "--nary-reassociate",
    "--correlated-propagation",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--hotcoldsplit",
          "--prune-eh",
          "--loop-simplifycfg",
          "--loop-instsimplify",
          "--globalopt",
          "--alignment-from-assumptions",
          "--name-anon-globals",
          "--barrier",
          "--libcalls-shrinkwrap",
          "--aggressive-instcombine",
          "--mergefunc",
          "--div-rem-pairs",
          "--mergereturn",
          "--lower-expect",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--hotcoldsplit",
      "--prune-eh",
      "--loop-simplifycfg",
      "--loop-instsimplify",
      "--globalopt",
      "--alignment-from-assumptions",
      "--name-anon-globals",
      "--barrier",
      "--libcalls-shrinkwrap",
      "--aggressive-instcombine",
      "--mergefunc",
      "--div-rem-pairs",
      "--mergereturn",
      "--lower-expect",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}