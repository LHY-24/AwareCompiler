{
  "program_id": "github-v0_6865.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 2,
    "oneSuccessor": 5,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 12,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 6,
    "CriticalCount": 3,
    "NumEdges": 15,
    "const32Bit": 10,
    "const64Bit": 0,
    "numConstZeroes": 3,
    "numConstOnes": 3,
    "UncondBranches": 5,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 2,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 12,
    "NumBitCastInst": 0,
    "NumBrInst": 10,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 9,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 3,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 12,
    "TotalInsts": 41,
    "TotalMemInst": 24,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 11
  },
  "baseline_oz_instcount": 42,
  "knowledge_base_entry": [
    "--instsimplify",
    "--bdce",
    "--sroa",
    "--sccp",
    "--newgvn",
    "--die",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--nary-reassociate",
    "--slsr",
    "--newgvn",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--callsite-splitting",
          "--speculative-execution",
          "--loop-data-prefetch",
          "--instcombine",
          "--inferattrs",
          "--lcssa",
          "--ipconstprop",
          "--mergereturn",
          "--lowerswitch",
          "--loweratomic",
          "--hotcoldsplit",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--callsite-splitting",
      "--speculative-execution",
      "--loop-data-prefetch",
      "--instcombine",
      "--inferattrs",
      "--lcssa",
      "--ipconstprop",
      "--mergereturn",
      "--lowerswitch",
      "--loweratomic",
      "--hotcoldsplit",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+2.4%"
  }
}