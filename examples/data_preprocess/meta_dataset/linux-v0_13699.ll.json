{
  "program_id": "linux-v0_13699.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 14,
    "oneSuccessor": 47,
    "twoPred": 12,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 23,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 86,
    "BeginPhi": 0,
    "BranchCount": 70,
    "returnInt": 5,
    "CriticalCount": 12,
    "NumEdges": 93,
    "const32Bit": 285,
    "const64Bit": 20,
    "numConstZeroes": 163,
    "numConstOnes": 95,
    "UncondBranches": 47,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 69,
    "NumAndInst": 6,
    "BlockMid": 12,
    "BlockLow": 74,
    "NumBitCastInst": 31,
    "NumBrInst": 70,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 101,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 175,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 97,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 18,
    "TotalBlocks": 86,
    "TotalInsts": 659,
    "TotalMemInst": 471,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 305
  },
  "baseline_oz_instcount": 659,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--jump-threading",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--elim-avail-extern",
    "--simplifycfg",
    "--instsimplify",
    "--ipsccp",
    "--globalopt",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--slsr",
    "--early-cse",
    "--sroa",
    "-loop-reduce",
    "--slp-vectorizer",
    "--licm",
    "--licm",
    "--globalopt",
    "--loop-simplifycfg",
    "--licm",
    "--lower-expect",
    "--elim-avail-extern",
    "--simplifycfg",
    "--instsimplify",
    "--ipsccp",
    "--globalopt",
    "--loop-simplifycfg",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--loop-data-prefetch",
          "--argpromotion",
          "--div-rem-pairs",
          "--reassociate",
          "--lowerswitch",
          "--prune-eh",
          "--loop-reroll",
          "--ee-instrument",
          "--newgvn",
          "--scalarizer",
          "--called-value-propagation",
          "--coro-cleanup",
          "--licm",
          "--float2int",
          "--aggressive-instcombine",
          "--slsr",
          "--simple-loop-unswitch",
          "--loop-unroll-and-jam",
          "--lower-guard-intrinsic",
          "--ipsccp",
          "--sroa",
          "--loop-unswitch",
          "--add-discriminators"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--loop-data-prefetch",
      "--argpromotion",
      "--div-rem-pairs",
      "--reassociate",
      "--lowerswitch",
      "--prune-eh",
      "--loop-reroll",
      "--ee-instrument",
      "--newgvn",
      "--scalarizer",
      "--called-value-propagation",
      "--coro-cleanup",
      "--licm",
      "--float2int",
      "--aggressive-instcombine",
      "--slsr",
      "--simple-loop-unswitch",
      "--loop-unroll-and-jam",
      "--lower-guard-intrinsic",
      "--ipsccp",
      "--sroa",
      "--loop-unswitch",
      "--add-discriminators"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}