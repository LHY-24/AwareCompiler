{
  "program_id": "poj104-v1_14_666.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 1,
    "oneSuccessor": 15,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 29,
    "const32Bit": 56,
    "const64Bit": 40,
    "numConstZeroes": 48,
    "numConstOnes": 29,
    "UncondBranches": 15,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 17,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 28,
    "NumBitCastInst": 14,
    "NumBrInst": 22,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 54,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 33,
    "TotalInsts": 242,
    "TotalMemInst": 165,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 101
  },
  "baseline_oz_instcount": 133,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--newgvn",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--gvn-hoist",
    "--jump-threading",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--loop-simplifycfg",
    "--dce",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--mergefunc",
    "--adce",
    "--sccp",
    "--loop-simplifycfg",
    "--dce",
    "--lower-constant-intrinsics",
    "--adce",
    "--sccp",
    "--mem2reg",
    "--globalopt",
    "--sccp",
    "--simplifycfg",
    "--mem2reg",
    "--loop-deletion",
    "--elim-avail-extern",
    "--gvn",
    "--globalopt",
    "--loop-simplifycfg",
    "--dse",
    "--bdce",
    "--gvn",
    "--globalopt",
    "--loop-simplifycfg",
    "--dse",
    "--early-cse",
    "--instsimplify",
    "--inline",
    "--early-cse-memssa",
    "--newgvn",
    "--indvars",
    "--loop-fusion",
    "--early-cse-memssa",
    "--globalopt",
    "--lower-expect",
    "--jump-threading",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--loop-simplifycfg",
    "--dce",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--mergefunc",
    "--adce",
    "--sccp",
    "--loop-simplifycfg",
    "--dce",
    "--lower-constant-intrinsics",
    "--adce",
    "--sccp",
    "--mem2reg",
    "--globalopt",
    "--sccp",
    "--simplifycfg",
    "--mem2reg",
    "--loop-deletion",
    "--elim-avail-extern",
    "--gvn",
    "--reassociate",
    "--gvn-hoist",
    "--dce",
    "--dse",
    "--early-cse",
    "--instsimplify",
    "--instcombine",
    "--slsr",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--adce",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--early-cse-memssa",
    "--indvars",
    "--loop-fusion",
    "--early-cse-memssa",
    "--globalopt",
    "--lower-expect",
    "--jump-threading",
    "--prune-eh",
    "--instsimplify",
    "--inline",
    "--early-cse-memssa",
    "--newgvn",
    "--indvars",
    "--instcombine",
    "--mem2reg",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--bdce",
    "--gvn",
    "--reassociate",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--elim-avail-extern",
          "--sink",
          "--loop-reroll",
          "--post-inline-ee-instrument",
          "--loop-interchange",
          "--loop-simplifycfg",
          "--partially-inline-libcalls",
          "--ipconstprop",
          "--loop-simplify",
          "--inject-tli-mappings",
          "--instsimplify",
          "--early-cse-memssa",
          "--simplifycfg",
          "--memcpyopt",
          "--add-discriminators",
          "--globaldce",
          "--lower-expect",
          "--ee-instrument",
          "--partial-inliner",
          "--hotcoldsplit",
          "--constmerge",
          "--mergereturn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+20.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--elim-avail-extern",
      "--sink",
      "--loop-reroll",
      "--post-inline-ee-instrument",
      "--loop-interchange",
      "--loop-simplifycfg",
      "--partially-inline-libcalls",
      "--ipconstprop",
      "--loop-simplify",
      "--inject-tli-mappings",
      "--instsimplify",
      "--early-cse-memssa",
      "--simplifycfg",
      "--memcpyopt",
      "--add-discriminators",
      "--globaldce",
      "--lower-expect",
      "--ee-instrument",
      "--partial-inliner",
      "--hotcoldsplit",
      "--constmerge",
      "--mergereturn"
    ],
    "performance_vs_Oz": "+20.3%"
  }
}