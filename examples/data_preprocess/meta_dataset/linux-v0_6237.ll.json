{
  "program_id": "linux-v0_6237.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 7,
    "oneSuccessor": 20,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 16,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 40,
    "BeginPhi": 0,
    "BranchCount": 36,
    "returnInt": 1,
    "CriticalCount": 12,
    "NumEdges": 52,
    "const32Bit": 100,
    "const64Bit": 25,
    "numConstZeroes": 43,
    "numConstOnes": 49,
    "UncondBranches": 20,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 29,
    "NumAndInst": 1,
    "BlockMid": 4,
    "BlockLow": 36,
    "NumBitCastInst": 3,
    "NumBrInst": 36,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 15,
    "NumLShrInst": 2,
    "NumLoadInst": 96,
    "NumMulInst": 2,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 58,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 4,
    "NumZExtInst": 6,
    "TotalBlocks": 40,
    "TotalInsts": 330,
    "TotalMemInst": 223,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 141
  },
  "baseline_oz_instcount": 330,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--loop-rotate",
    "--sroa",
    "--elim-avail-extern",
    "--mem2reg",
    "--early-cse-memssa",
    "--lower-expect",
    "--dse",
    "--sccp",
    "--reassociate",
    "--dce",
    "--dse",
    "--adce",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--gvn-hoist",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--instsimplify",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--div-rem-pairs",
          "--instnamer",
          "--reassociate",
          "--libcalls-shrinkwrap",
          "--guard-widening",
          "--callsite-splitting",
          "--loop-simplify",
          "--newgvn",
          "--loop-rotate",
          "--loop-instsimplify",
          "--elim-avail-extern",
          "--strip",
          "--slp-vectorizer",
          "--mergeicmps",
          "--gvn-hoist",
          "--prune-eh",
          "--rewrite-statepoints-for-gc",
          "--inject-tli-mappings",
          "--canonicalize-aliases",
          "--ee-instrument",
          "--loop-unroll",
          "--adce",
          "--aggressive-instcombine",
          "--mldst-motion",
          "--correlated-propagation",
          "--consthoist",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--div-rem-pairs",
      "--instnamer",
      "--reassociate",
      "--libcalls-shrinkwrap",
      "--guard-widening",
      "--callsite-splitting",
      "--loop-simplify",
      "--newgvn",
      "--loop-rotate",
      "--loop-instsimplify",
      "--elim-avail-extern",
      "--strip",
      "--slp-vectorizer",
      "--mergeicmps",
      "--gvn-hoist",
      "--prune-eh",
      "--rewrite-statepoints-for-gc",
      "--inject-tli-mappings",
      "--canonicalize-aliases",
      "--ee-instrument",
      "--loop-unroll",
      "--adce",
      "--aggressive-instcombine",
      "--mldst-motion",
      "--correlated-propagation",
      "--consthoist",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}