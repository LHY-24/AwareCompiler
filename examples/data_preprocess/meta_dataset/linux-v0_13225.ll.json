{
  "program_id": "linux-v0_13225.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 47,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 15,
    "oneSuccessor": 38,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 21,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 90,
    "BeginPhi": 0,
    "BranchCount": 59,
    "returnInt": 40,
    "CriticalCount": 5,
    "NumEdges": 80,
    "const32Bit": 437,
    "const64Bit": 30,
    "numConstZeroes": 207,
    "numConstOnes": 98,
    "UncondBranches": 38,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 76,
    "NumAndInst": 0,
    "BlockMid": 12,
    "BlockLow": 78,
    "NumBitCastInst": 17,
    "NumBrInst": 59,
    "NumCallInst": 92,
    "NumGetElementPtrInst": 149,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 311,
    "NumMulInst": 0,
    "NumOrInst": 21,
    "NumPHIInst": 0,
    "NumRetInst": 31,
    "NumSExtInst": 8,
    "NumSelectInst": 4,
    "NumShlInst": 5,
    "NumStoreInst": 115,
    "NumSubInst": 0,
    "NumTruncInst": 11,
    "NumXorInst": 2,
    "NumZExtInst": 24,
    "TotalBlocks": 90,
    "TotalInsts": 957,
    "TotalMemInst": 743,
    "TotalFuncs": 65,
    "ArgsPhi": 0,
    "testUnary": 451
  },
  "baseline_oz_instcount": 957,
  "knowledge_base_entry": [
    "--mergefunc",
    "--lower-expect",
    "--globalopt",
    "--correlated-propagation",
    "--reassociate",
    "--gvn",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--simplifycfg",
    "--inline",
    "--instcombine",
    "--loop-simplifycfg",
    "--ipsccp",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--sroa",
          "--dce",
          "--correlated-propagation",
          "--lowerswitch",
          "--ipsccp",
          "--separate-const-offset-from-gep",
          "--loop-fusion",
          "--attributor",
          "--loop-instsimplify",
          "--dse",
          "--loop-reroll",
          "--instcombine",
          "--coro-elide",
          "--add-discriminators",
          "--licm",
          "--coro-split",
          "--consthoist",
          "--simple-loop-unswitch",
          "--coro-cleanup",
          "--loop-interchange"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--sroa",
      "--dce",
      "--correlated-propagation",
      "--lowerswitch",
      "--ipsccp",
      "--separate-const-offset-from-gep",
      "--loop-fusion",
      "--attributor",
      "--loop-instsimplify",
      "--dse",
      "--loop-reroll",
      "--instcombine",
      "--coro-elide",
      "--add-discriminators",
      "--licm",
      "--coro-split",
      "--consthoist",
      "--simple-loop-unswitch",
      "--coro-cleanup",
      "--loop-interchange"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}