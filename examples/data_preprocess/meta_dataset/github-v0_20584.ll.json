{
  "program_id": "github-v0_20584.ll",
  "autophase_features": {
    "BBNumArgsHi": 6,
    "BBNumArgsLo": 3,
    "onePred": 16,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 8,
    "oneSuccessor": 11,
    "twoPred": 7,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 16,
    "morePreds": 4,
    "BB03Phi": 6,
    "BBHiPhi": 3,
    "BBNoPhi": 19,
    "BeginPhi": 9,
    "BranchCount": 27,
    "returnInt": 1,
    "CriticalCount": 16,
    "NumEdges": 43,
    "const32Bit": 31,
    "const64Bit": 2,
    "numConstZeroes": 9,
    "numConstOnes": 12,
    "UncondBranches": 11,
    "binaryConstArg": 30,
    "NumAShrInst": 2,
    "NumAddInst": 11,
    "NumAllocaInst": 0,
    "NumAndInst": 4,
    "BlockMid": 9,
    "BlockLow": 19,
    "NumBitCastInst": 5,
    "NumBrInst": 27,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 4,
    "NumOrInst": 1,
    "NumPHIInst": 53,
    "NumRetInst": 1,
    "NumSExtInst": 15,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 11,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 28,
    "TotalInsts": 298,
    "TotalMemInst": 83,
    "TotalFuncs": 7,
    "ArgsPhi": 129,
    "testUnary": 35
  },
  "baseline_oz_instcount": 299,
  "knowledge_base_entry": [
    "--mergefunc",
    "--reassociate",
    "--newgvn",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--mergefunc",
    "--simplifycfg",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loweratomic",
          "--loop-sink",
          "--div-rem-pairs",
          "--loop-unroll",
          "--lowerswitch",
          "--nary-reassociate",
          "--early-cse-memssa",
          "--partially-inline-libcalls",
          "--loop-simplify",
          "--rewrite-statepoints-for-gc",
          "-loop-reduce",
          "--name-anon-globals",
          "--loop-versioning",
          "--bdce",
          "--called-value-propagation",
          "--coro-elide"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loweratomic",
      "--loop-sink",
      "--div-rem-pairs",
      "--loop-unroll",
      "--lowerswitch",
      "--nary-reassociate",
      "--early-cse-memssa",
      "--partially-inline-libcalls",
      "--loop-simplify",
      "--rewrite-statepoints-for-gc",
      "-loop-reduce",
      "--name-anon-globals",
      "--loop-versioning",
      "--bdce",
      "--called-value-propagation",
      "--coro-elide"
    ],
    "performance_vs_Oz": "+5.0%"
  }
}