{
  "program_id": "linux-v0_13030.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 28,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 6,
    "oneSuccessor": 26,
    "twoPred": 8,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 51,
    "BeginPhi": 1,
    "BranchCount": 37,
    "returnInt": 12,
    "CriticalCount": 2,
    "NumEdges": 48,
    "const32Bit": 201,
    "const64Bit": 18,
    "numConstZeroes": 102,
    "numConstOnes": 64,
    "UncondBranches": 26,
    "binaryConstArg": 16,
    "NumAShrInst": 3,
    "NumAddInst": 4,
    "NumAllocaInst": 46,
    "NumAndInst": 3,
    "BlockMid": 10,
    "BlockLow": 42,
    "NumBitCastInst": 14,
    "NumBrInst": 37,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 69,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 133,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 15,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 72,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 4,
    "NumZExtInst": 19,
    "TotalBlocks": 52,
    "TotalInsts": 490,
    "TotalMemInst": 359,
    "TotalFuncs": 33,
    "ArgsPhi": 2,
    "testUnary": 226
  },
  "baseline_oz_instcount": 490,
  "knowledge_base_entry": [
    "--early-cse",
    "--aggressive-instcombine",
    "--dse",
    "--globalopt",
    "--ipsccp",
    "--correlated-propagation",
    "--simplifycfg",
    "--dce",
    "--jump-threading",
    "--slsr",
    "--loop-reroll",
    "--sroa",
    "--loop-simplifycfg",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--loop-load-elim",
          "--aggressive-instcombine",
          "--lower-expect",
          "--attributor",
          "--always-inline",
          "--ee-instrument",
          "--indvars",
          "--gvn",
          "--redundant-dbg-inst-elim",
          "--rpo-functionattrs",
          "--load-store-vectorizer",
          "--elim-avail-extern",
          "--die",
          "--strip-nondebug",
          "--sroa",
          "--globalopt",
          "--loop-distribute",
          "--strip",
          "--inferattrs",
          "--loop-instsimplify",
          "--mergeicmps"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--loop-load-elim",
      "--aggressive-instcombine",
      "--lower-expect",
      "--attributor",
      "--always-inline",
      "--ee-instrument",
      "--indvars",
      "--gvn",
      "--redundant-dbg-inst-elim",
      "--rpo-functionattrs",
      "--load-store-vectorizer",
      "--elim-avail-extern",
      "--die",
      "--strip-nondebug",
      "--sroa",
      "--globalopt",
      "--loop-distribute",
      "--strip",
      "--inferattrs",
      "--loop-instsimplify",
      "--mergeicmps"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}