{
  "program_id": "github-v0_31882.ll",
  "autophase_features": {
    "BBNumArgsHi": 6,
    "BBNumArgsLo": 3,
    "onePred": 10,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 5,
    "oneSuccessor": 6,
    "twoPred": 8,
    "twoPredOneSuc": 0,
    "twoEach": 8,
    "twoSuccessor": 14,
    "morePreds": 2,
    "BB03Phi": 5,
    "BBHiPhi": 4,
    "BBNoPhi": 12,
    "BeginPhi": 9,
    "BranchCount": 20,
    "returnInt": 2,
    "CriticalCount": 18,
    "NumEdges": 34,
    "const32Bit": 45,
    "const64Bit": 7,
    "numConstZeroes": 17,
    "numConstOnes": 13,
    "UncondBranches": 6,
    "binaryConstArg": 26,
    "NumAShrInst": 1,
    "NumAddInst": 13,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 3,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 4,
    "NumOrInst": 3,
    "NumPHIInst": 34,
    "NumRetInst": 1,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 1,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 21,
    "TotalInsts": 230,
    "TotalMemInst": 66,
    "TotalFuncs": 8,
    "ArgsPhi": 77,
    "testUnary": 36
  },
  "baseline_oz_instcount": 225,
  "knowledge_base_entry": [
    "--inline",
    "--slp-vectorizer",
    "--instcombine",
    "--dse",
    "--sroa",
    "--mldst-motion",
    "--jump-threading",
    "--slsr",
    "-loop-reduce",
    "--simplifycfg",
    "--inline",
    "--loop-rotate",
    "--dse",
    "--globalopt",
    "--loop-simplifycfg",
    "--reassociate",
    "--instcombine",
    "--die",
    "--correlated-propagation",
    "--ipsccp",
    "--loop-simplifycfg",
    "--dse",
    "--mem2reg",
    "--flattencfg",
    "--inline",
    "--flattencfg",
    "--jump-threading",
    "--slsr",
    "--newgvn",
    "--aggressive-instcombine",
    "--loweratomic",
    "--ipsccp",
    "--nary-reassociate",
    "--inline",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--jump-threading",
    "--early-cse-memssa",
    "--mem2reg",
    "--gvn-hoist",
    "--simplifycfg",
    "--newgvn",
    "--correlated-propagation",
    "--newgvn",
    "--instcombine",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--aggressive-instcombine",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--nary-reassociate",
          "--flattencfg",
          "--slp-vectorizer",
          "--strip-debug-declare",
          "--slsr",
          "--newgvn",
          "--loop-idiom",
          "--name-anon-globals",
          "--ipconstprop",
          "--loop-reroll",
          "--loop-predication",
          "--simplifycfg",
          "--globaldce",
          "--dce",
          "--early-cse",
          "--dse",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--nary-reassociate",
      "--flattencfg",
      "--slp-vectorizer",
      "--strip-debug-declare",
      "--slsr",
      "--newgvn",
      "--loop-idiom",
      "--name-anon-globals",
      "--ipconstprop",
      "--loop-reroll",
      "--loop-predication",
      "--simplifycfg",
      "--globaldce",
      "--dce",
      "--early-cse",
      "--dse",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}