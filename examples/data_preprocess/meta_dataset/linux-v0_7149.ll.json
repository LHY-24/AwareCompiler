{
  "program_id": "linux-v0_7149.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 59,
    "onePredOneSuc": 44,
    "onePredTwoSuc": 11,
    "oneSuccessor": 57,
    "twoPred": 14,
    "twoPredOneSuc": 5,
    "twoEach": 5,
    "twoSuccessor": 17,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 88,
    "BeginPhi": 2,
    "BranchCount": 74,
    "returnInt": 10,
    "CriticalCount": 4,
    "NumEdges": 91,
    "const32Bit": 267,
    "const64Bit": 38,
    "numConstZeroes": 113,
    "numConstOnes": 138,
    "UncondBranches": 57,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 107,
    "NumAndInst": 7,
    "BlockMid": 19,
    "BlockLow": 71,
    "NumBitCastInst": 27,
    "NumBrInst": 74,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 81,
    "NumICmpInst": 22,
    "NumLShrInst": 1,
    "NumLoadInst": 218,
    "NumMulInst": 3,
    "NumOrInst": 3,
    "NumPHIInst": 2,
    "NumRetInst": 16,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 145,
    "NumSubInst": 2,
    "NumTruncInst": 8,
    "NumXorInst": 6,
    "NumZExtInst": 20,
    "TotalBlocks": 90,
    "TotalInsts": 801,
    "TotalMemInst": 584,
    "TotalFuncs": 27,
    "ArgsPhi": 4,
    "testUnary": 393
  },
  "baseline_oz_instcount": 801,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--globalopt",
    "--early-cse-memssa",
    "--indvars",
    "--early-cse",
    "-loop-reduce",
    "--gvn-hoist",
    "--nary-reassociate",
    "--inline",
    "--loop-rotate",
    "--instsimplify",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--mem2reg",
    "--prune-eh",
    "--instcombine",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--guard-widening",
          "--loop-rotate",
          "-loop-reduce",
          "--mergeicmps",
          "--mldst-motion",
          "--mem2reg",
          "--div-rem-pairs",
          "--loop-predication",
          "--inline",
          "--partial-inliner",
          "--coro-elide",
          "--aggressive-instcombine",
          "--strip",
          "--hotcoldsplit",
          "--constprop",
          "--loop-simplify",
          "--loop-instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--guard-widening",
      "--loop-rotate",
      "-loop-reduce",
      "--mergeicmps",
      "--mldst-motion",
      "--mem2reg",
      "--div-rem-pairs",
      "--loop-predication",
      "--inline",
      "--partial-inliner",
      "--coro-elide",
      "--aggressive-instcombine",
      "--strip",
      "--hotcoldsplit",
      "--constprop",
      "--loop-simplify",
      "--loop-instsimplify"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}