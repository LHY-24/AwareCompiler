{
  "program_id": "linux-v0_1276.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 36,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 4,
    "oneSuccessor": 35,
    "twoPred": 10,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 12,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 3,
    "BranchCount": 47,
    "returnInt": 23,
    "CriticalCount": 3,
    "NumEdges": 69,
    "const32Bit": 192,
    "const64Bit": 14,
    "numConstZeroes": 66,
    "numConstOnes": 104,
    "UncondBranches": 35,
    "binaryConstArg": 21,
    "NumAShrInst": 3,
    "NumAddInst": 2,
    "NumAllocaInst": 83,
    "NumAndInst": 4,
    "BlockMid": 11,
    "BlockLow": 63,
    "NumBitCastInst": 29,
    "NumBrInst": 47,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 13,
    "NumLShrInst": 1,
    "NumLoadInst": 152,
    "NumMulInst": 1,
    "NumOrInst": 5,
    "NumPHIInst": 3,
    "NumRetInst": 25,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 108,
    "NumSubInst": 0,
    "NumTruncInst": 11,
    "NumXorInst": 4,
    "NumZExtInst": 10,
    "TotalBlocks": 74,
    "TotalInsts": 594,
    "TotalMemInst": 422,
    "TotalFuncs": 37,
    "ArgsPhi": 6,
    "testUnary": 296
  },
  "baseline_oz_instcount": 593,
  "knowledge_base_entry": [
    "--flattencfg",
    "--ipsccp",
    "--aggressive-instcombine",
    "--dce",
    "--newgvn",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--licm",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-elide",
          "--deadargelim",
          "--callsite-splitting",
          "--ipsccp",
          "--aggressive-instcombine",
          "--loop-guard-widening",
          "--loop-interchange",
          "--jump-threading",
          "--float2int",
          "--insert-gcov-profiling",
          "--reassociate",
          "--gvn-hoist",
          "--alignment-from-assumptions",
          "--flattencfg",
          "--rpo-functionattrs",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-elide",
      "--deadargelim",
      "--callsite-splitting",
      "--ipsccp",
      "--aggressive-instcombine",
      "--loop-guard-widening",
      "--loop-interchange",
      "--jump-threading",
      "--float2int",
      "--insert-gcov-profiling",
      "--reassociate",
      "--gvn-hoist",
      "--alignment-from-assumptions",
      "--flattencfg",
      "--rpo-functionattrs",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}