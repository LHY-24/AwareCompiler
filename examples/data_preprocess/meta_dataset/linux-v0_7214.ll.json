{
  "program_id": "linux-v0_7214.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 1,
    "oneSuccessor": 25,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 7,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 38,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 43,
    "const32Bit": 38,
    "const64Bit": 78,
    "numConstZeroes": 21,
    "numConstOnes": 53,
    "UncondBranches": 25,
    "binaryConstArg": 36,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 38,
    "NumAndInst": 3,
    "BlockMid": 11,
    "BlockLow": 27,
    "NumBitCastInst": 0,
    "NumBrInst": 34,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 9,
    "NumLShrInst": 5,
    "NumLoadInst": 142,
    "NumMulInst": 1,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 84,
    "NumSubInst": 11,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 38,
    "TotalInsts": 453,
    "TotalMemInst": 299,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 233
  },
  "baseline_oz_instcount": 453,
  "knowledge_base_entry": [
    "--mergereturn",
    "--simplifycfg",
    "--lower-expect",
    "--aggressive-instcombine",
    "--mem2reg",
    "--early-cse",
    "--lower-expect",
    "--globalopt",
    "--loweratomic",
    "--ipsccp",
    "--loop-instsimplify",
    "--inline",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--gvn-hoist",
    "--instsimplify",
    "--aggressive-instcombine",
    "--flattencfg",
    "--elim-avail-extern",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--float2int",
          "--simple-loop-unswitch",
          "--newgvn",
          "--licm",
          "--called-value-propagation",
          "--name-anon-globals",
          "--insert-gcov-profiling",
          "--strip",
          "--coro-elide",
          "--loop-instsimplify",
          "--ipconstprop",
          "--reassociate",
          "--loop-unroll",
          "--early-cse-memssa",
          "--gvn-hoist",
          "--loop-rotate",
          "--irce",
          "--pgo-memop-opt",
          "--dce",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--float2int",
      "--simple-loop-unswitch",
      "--newgvn",
      "--licm",
      "--called-value-propagation",
      "--name-anon-globals",
      "--insert-gcov-profiling",
      "--strip",
      "--coro-elide",
      "--loop-instsimplify",
      "--ipconstprop",
      "--reassociate",
      "--loop-unroll",
      "--early-cse-memssa",
      "--gvn-hoist",
      "--loop-rotate",
      "--irce",
      "--pgo-memop-opt",
      "--dce",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}