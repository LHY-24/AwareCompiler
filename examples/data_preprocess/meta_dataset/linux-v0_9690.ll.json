{
  "program_id": "linux-v0_9690.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 43,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 17,
    "oneSuccessor": 33,
    "twoPred": 13,
    "twoPredOneSuc": 4,
    "twoEach": 8,
    "twoSuccessor": 29,
    "morePreds": 7,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 67,
    "BeginPhi": 1,
    "BranchCount": 62,
    "returnInt": 4,
    "CriticalCount": 24,
    "NumEdges": 95,
    "const32Bit": 201,
    "const64Bit": 119,
    "numConstZeroes": 136,
    "numConstOnes": 43,
    "UncondBranches": 33,
    "binaryConstArg": 10,
    "NumAShrInst": 2,
    "NumAddInst": 0,
    "NumAllocaInst": 29,
    "NumAndInst": 3,
    "BlockMid": 7,
    "BlockLow": 61,
    "NumBitCastInst": 2,
    "NumBrInst": 62,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 143,
    "NumICmpInst": 30,
    "NumLShrInst": 0,
    "NumLoadInst": 199,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 5,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 76,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 22,
    "TotalBlocks": 68,
    "TotalInsts": 605,
    "TotalMemInst": 469,
    "TotalFuncs": 23,
    "ArgsPhi": 2,
    "testUnary": 255
  },
  "baseline_oz_instcount": 605,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--ipsccp",
    "--adce",
    "--correlated-propagation",
    "--die",
    "--simplifycfg",
    "--gvn",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instcombine",
          "--tailcallelim",
          "--libcalls-shrinkwrap",
          "--loop-idiom",
          "--sccp",
          "--partially-inline-libcalls",
          "--aggressive-instcombine",
          "--separate-const-offset-from-gep",
          "--lcssa",
          "--barrier",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instcombine",
      "--tailcallelim",
      "--libcalls-shrinkwrap",
      "--loop-idiom",
      "--sccp",
      "--partially-inline-libcalls",
      "--aggressive-instcombine",
      "--separate-const-offset-from-gep",
      "--lcssa",
      "--barrier",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}