{
  "program_id": "github-v0_40672.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 35,
    "const64Bit": 62,
    "numConstZeroes": 61,
    "numConstOnes": 28,
    "UncondBranches": 11,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 14,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 12,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 21,
    "TotalInsts": 176,
    "TotalMemInst": 118,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 67
  },
  "baseline_oz_instcount": 176,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--elim-avail-extern",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--sccp",
    "--die",
    "--sroa",
    "--gvn",
    "--sccp",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--sccp",
    "--early-cse",
    "--mem2reg",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-matrix-intrinsics",
          "--float2int",
          "--early-cse-memssa",
          "--aggressive-instcombine",
          "--dce",
          "--deadargelim",
          "--loop-simplify",
          "--simplifycfg",
          "--name-anon-globals",
          "--instsimplify",
          "--insert-gcov-profiling",
          "--coro-early",
          "--reassociate",
          "--coro-cleanup",
          "--functionattrs",
          "--loop-deletion",
          "--mergeicmps",
          "--loweratomic",
          "--loop-instsimplify",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-matrix-intrinsics",
      "--float2int",
      "--early-cse-memssa",
      "--aggressive-instcombine",
      "--dce",
      "--deadargelim",
      "--loop-simplify",
      "--simplifycfg",
      "--name-anon-globals",
      "--instsimplify",
      "--insert-gcov-profiling",
      "--coro-early",
      "--reassociate",
      "--coro-cleanup",
      "--functionattrs",
      "--loop-deletion",
      "--mergeicmps",
      "--loweratomic",
      "--loop-instsimplify",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+2.3%"
  }
}