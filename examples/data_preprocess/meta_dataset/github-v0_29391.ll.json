{
  "program_id": "github-v0_29391.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 38,
    "const64Bit": 68,
    "numConstZeroes": 67,
    "numConstOnes": 30,
    "UncondBranches": 11,
    "binaryConstArg": 10,
    "NumAShrInst": 2,
    "NumAddInst": 6,
    "NumAllocaInst": 14,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 16,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 46,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 21,
    "TotalInsts": 196,
    "TotalMemInst": 127,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 79
  },
  "baseline_oz_instcount": 196,
  "knowledge_base_entry": [
    "--gvn",
    "--adce",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--gvn",
    "--memcpyopt",
    "--early-cse-memssa",
    "--mergefunc",
    "--die",
    "--loop-simplifycfg",
    "--early-cse",
    "--loop-instsimplify",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--die",
          "--libcalls-shrinkwrap",
          "--coro-cleanup",
          "--lowerswitch",
          "--separate-const-offset-from-gep",
          "--loop-vectorize",
          "--early-cse",
          "--guard-widening",
          "--lower-matrix-intrinsics",
          "--lowerinvoke",
          "--alignment-from-assumptions",
          "--loweratomic",
          "--loop-load-elim",
          "--constprop",
          "--callsite-splitting",
          "--attributor",
          "--inferattrs",
          "--aggressive-instcombine",
          "--add-discriminators",
          "--loop-idiom",
          "--globalsplit",
          "--redundant-dbg-inst-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--die",
      "--libcalls-shrinkwrap",
      "--coro-cleanup",
      "--lowerswitch",
      "--separate-const-offset-from-gep",
      "--loop-vectorize",
      "--early-cse",
      "--guard-widening",
      "--lower-matrix-intrinsics",
      "--lowerinvoke",
      "--alignment-from-assumptions",
      "--loweratomic",
      "--loop-load-elim",
      "--constprop",
      "--callsite-splitting",
      "--attributor",
      "--inferattrs",
      "--aggressive-instcombine",
      "--add-discriminators",
      "--loop-idiom",
      "--globalsplit",
      "--redundant-dbg-inst-elim"
    ],
    "performance_vs_Oz": "+3.6%"
  }
}