{
  "program_id": "linux-v0_10609.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 76,
    "onePredOneSuc": 56,
    "onePredTwoSuc": 20,
    "oneSuccessor": 63,
    "twoPred": 21,
    "twoPredOneSuc": 7,
    "twoEach": 1,
    "twoSuccessor": 38,
    "morePreds": 4,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 120,
    "BeginPhi": 5,
    "BranchCount": 101,
    "returnInt": 35,
    "CriticalCount": 2,
    "NumEdges": 139,
    "const32Bit": 320,
    "const64Bit": 54,
    "numConstZeroes": 181,
    "numConstOnes": 142,
    "UncondBranches": 63,
    "binaryConstArg": 19,
    "NumAShrInst": 2,
    "NumAddInst": 0,
    "NumAllocaInst": 129,
    "NumAndInst": 11,
    "BlockMid": 18,
    "BlockLow": 107,
    "NumBitCastInst": 23,
    "NumBrInst": 101,
    "NumCallInst": 80,
    "NumGetElementPtrInst": 64,
    "NumICmpInst": 39,
    "NumLShrInst": 1,
    "NumLoadInst": 224,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 5,
    "NumRetInst": 24,
    "NumSExtInst": 1,
    "NumSelectInst": 6,
    "NumShlInst": 3,
    "NumStoreInst": 169,
    "NumSubInst": 0,
    "NumTruncInst": 14,
    "NumXorInst": 2,
    "NumZExtInst": 36,
    "TotalBlocks": 125,
    "TotalInsts": 937,
    "TotalMemInst": 666,
    "TotalFuncs": 35,
    "ArgsPhi": 10,
    "testUnary": 427
  },
  "baseline_oz_instcount": 937,
  "knowledge_base_entry": [
    "--loweratomic",
    "--aggressive-instcombine",
    "--inline",
    "--early-cse-memssa",
    "--mergefunc",
    "--aggressive-instcombine",
    "--adce",
    "--early-cse-memssa",
    "--simplifycfg",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-interchange",
          "--loop-rotate",
          "--coro-elide",
          "--sroa",
          "--die",
          "--insert-gcov-profiling",
          "--float2int",
          "--simple-loop-unswitch",
          "--globalsplit",
          "--loop-versioning",
          "--mem2reg",
          "--coro-early",
          "--partially-inline-libcalls",
          "--memcpyopt",
          "--forceattrs",
          "--licm",
          "--loop-simplify",
          "--infer-address-spaces",
          "--deadargelim",
          "--jump-threading",
          "--loop-simplifycfg",
          "--lower-guard-intrinsic",
          "--consthoist",
          "--ipconstprop",
          "--aggressive-instcombine",
          "--lower-expect",
          "--early-cse",
          "--callsite-splitting",
          "--tailcallelim",
          "--mergeicmps"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-interchange",
      "--loop-rotate",
      "--coro-elide",
      "--sroa",
      "--die",
      "--insert-gcov-profiling",
      "--float2int",
      "--simple-loop-unswitch",
      "--globalsplit",
      "--loop-versioning",
      "--mem2reg",
      "--coro-early",
      "--partially-inline-libcalls",
      "--memcpyopt",
      "--forceattrs",
      "--licm",
      "--loop-simplify",
      "--infer-address-spaces",
      "--deadargelim",
      "--jump-threading",
      "--loop-simplifycfg",
      "--lower-guard-intrinsic",
      "--consthoist",
      "--ipconstprop",
      "--aggressive-instcombine",
      "--lower-expect",
      "--early-cse",
      "--callsite-splitting",
      "--tailcallelim",
      "--mergeicmps"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}