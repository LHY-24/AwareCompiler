{
  "program_id": "poj104-v1_56_1378.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 0,
    "oneSuccessor": 5,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 7,
    "CriticalCount": 5,
    "NumEdges": 15,
    "const32Bit": 23,
    "const64Bit": 12,
    "numConstZeroes": 7,
    "numConstOnes": 7,
    "UncondBranches": 5,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 12,
    "NumBitCastInst": 12,
    "NumBrInst": 10,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 6,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 13,
    "TotalInsts": 88,
    "TotalMemInst": 49,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 34
  },
  "baseline_oz_instcount": 43,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--instcombine",
    "--inline",
    "--mem2reg",
    "--prune-eh",
    "--gvn-hoist",
    "--slsr",
    "--early-cse",
    "--mem2reg",
    "--prune-eh",
    "--newgvn",
    "--correlated-propagation",
    "--globalopt",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--called-value-propagation",
          "--loop-load-elim",
          "--always-inline",
          "--partially-inline-libcalls",
          "--die",
          "--jump-threading",
          "--ipsccp",
          "--coro-early",
          "--loop-rotate",
          "--float2int",
          "--newgvn",
          "--loop-vectorize",
          "--flattencfg",
          "--constmerge",
          "--insert-gcov-profiling",
          "--load-store-vectorizer",
          "--redundant-dbg-inst-elim",
          "--rewrite-statepoints-for-gc",
          "--coro-elide",
          "--loop-sink",
          "--loop-distribute",
          "--irce",
          "--sroa",
          "--infer-address-spaces",
          "--attributor",
          "--dce",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--called-value-propagation",
      "--loop-load-elim",
      "--always-inline",
      "--partially-inline-libcalls",
      "--die",
      "--jump-threading",
      "--ipsccp",
      "--coro-early",
      "--loop-rotate",
      "--float2int",
      "--newgvn",
      "--loop-vectorize",
      "--flattencfg",
      "--constmerge",
      "--insert-gcov-profiling",
      "--load-store-vectorizer",
      "--redundant-dbg-inst-elim",
      "--rewrite-statepoints-for-gc",
      "--coro-elide",
      "--loop-sink",
      "--loop-distribute",
      "--irce",
      "--sroa",
      "--infer-address-spaces",
      "--attributor",
      "--dce",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+4.7%"
  }
}