{
  "program_id": "tensorflow-v0_724.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 9,
    "onePred": 27,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 8,
    "oneSuccessor": 23,
    "twoPred": 20,
    "twoPredOneSuc": 7,
    "twoEach": 11,
    "twoSuccessor": 22,
    "morePreds": 0,
    "BB03Phi": 9,
    "BBHiPhi": 0,
    "BBNoPhi": 52,
    "BeginPhi": 9,
    "BranchCount": 45,
    "returnInt": 2,
    "CriticalCount": 17,
    "NumEdges": 67,
    "const32Bit": 116,
    "const64Bit": 94,
    "numConstZeroes": 143,
    "numConstOnes": 46,
    "UncondBranches": 23,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 9,
    "NumAndInst": 11,
    "BlockMid": 7,
    "BlockLow": 54,
    "NumBitCastInst": 37,
    "NumBrInst": 45,
    "NumCallInst": 79,
    "NumGetElementPtrInst": 39,
    "NumICmpInst": 26,
    "NumLShrInst": 3,
    "NumLoadInst": 38,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 14,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 5,
    "NumShlInst": 2,
    "NumStoreInst": 17,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 61,
    "TotalInsts": 355,
    "TotalMemInst": 182,
    "TotalFuncs": 38,
    "ArgsPhi": 28,
    "testUnary": 89
  },
  "baseline_oz_instcount": 348,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse-memssa",
    "--loop-reroll",
    "--loop-fusion",
    "--nary-reassociate",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--mergefunc",
    "--globaldce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--scalarizer",
          "--inferattrs",
          "--float2int",
          "--strip-dead-prototypes",
          "--lower-widenable-condition",
          "--forceattrs",
          "--loop-instsimplify",
          "--strip-debug-declare",
          "--mergefunc",
          "--coro-cleanup",
          "--loop-reroll",
          "--licm",
          "--infer-address-spaces",
          "--loop-vectorize",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--scalarizer",
      "--inferattrs",
      "--float2int",
      "--strip-dead-prototypes",
      "--lower-widenable-condition",
      "--forceattrs",
      "--loop-instsimplify",
      "--strip-debug-declare",
      "--mergefunc",
      "--coro-cleanup",
      "--loop-reroll",
      "--licm",
      "--infer-address-spaces",
      "--loop-vectorize",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}