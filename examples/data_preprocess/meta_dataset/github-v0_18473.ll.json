{
  "program_id": "github-v0_18473.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 37,
    "const64Bit": 34,
    "numConstZeroes": 39,
    "numConstOnes": 24,
    "UncondBranches": 13,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 20,
    "NumBitCastInst": 8,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 24,
    "TotalInsts": 179,
    "TotalMemInst": 115,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 79
  },
  "baseline_oz_instcount": 179,
  "knowledge_base_entry": [
    "--lower-expect",
    "--ipsccp",
    "--lower-expect",
    "--dce",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--simplifycfg",
    "--dce",
    "--simplifycfg",
    "--jump-threading",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--pgo-memop-opt",
          "--name-anon-globals",
          "--loweratomic",
          "--early-cse",
          "--loop-versioning",
          "--instsimplify",
          "--aggressive-instcombine",
          "--coro-split",
          "--add-discriminators",
          "--partial-inliner",
          "--mldst-motion",
          "--rewrite-statepoints-for-gc",
          "--die",
          "--licm",
          "--globaldce",
          "--elim-avail-extern",
          "--instnamer",
          "--mem2reg",
          "--mergeicmps",
          "--redundant-dbg-inst-elim",
          "--loop-data-prefetch",
          "--strip-dead-prototypes",
          "--gvn",
          "--instcombine",
          "--break-crit-edges",
          "--prune-eh",
          "--loop-instsimplify",
          "--sroa",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--pgo-memop-opt",
      "--name-anon-globals",
      "--loweratomic",
      "--early-cse",
      "--loop-versioning",
      "--instsimplify",
      "--aggressive-instcombine",
      "--coro-split",
      "--add-discriminators",
      "--partial-inliner",
      "--mldst-motion",
      "--rewrite-statepoints-for-gc",
      "--die",
      "--licm",
      "--globaldce",
      "--elim-avail-extern",
      "--instnamer",
      "--mem2reg",
      "--mergeicmps",
      "--redundant-dbg-inst-elim",
      "--loop-data-prefetch",
      "--strip-dead-prototypes",
      "--gvn",
      "--instcombine",
      "--break-crit-edges",
      "--prune-eh",
      "--loop-instsimplify",
      "--sroa",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}