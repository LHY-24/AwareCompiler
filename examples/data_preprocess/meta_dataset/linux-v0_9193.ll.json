{
  "program_id": "linux-v0_9193.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 64,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 13,
    "oneSuccessor": 60,
    "twoPred": 16,
    "twoPredOneSuc": 8,
    "twoEach": 2,
    "twoSuccessor": 23,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 107,
    "BeginPhi": 0,
    "BranchCount": 83,
    "returnInt": 29,
    "CriticalCount": 7,
    "NumEdges": 106,
    "const32Bit": 218,
    "const64Bit": 46,
    "numConstZeroes": 118,
    "numConstOnes": 101,
    "UncondBranches": 60,
    "binaryConstArg": 35,
    "NumAShrInst": 7,
    "NumAddInst": 1,
    "NumAllocaInst": 82,
    "NumAndInst": 12,
    "BlockMid": 10,
    "BlockLow": 97,
    "NumBitCastInst": 10,
    "NumBrInst": 83,
    "NumCallInst": 65,
    "NumGetElementPtrInst": 71,
    "NumICmpInst": 25,
    "NumLShrInst": 1,
    "NumLoadInst": 166,
    "NumMulInst": 1,
    "NumOrInst": 8,
    "NumPHIInst": 0,
    "NumRetInst": 24,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 7,
    "NumStoreInst": 107,
    "NumSubInst": 0,
    "NumTruncInst": 11,
    "NumXorInst": 4,
    "NumZExtInst": 17,
    "TotalBlocks": 107,
    "TotalInsts": 711,
    "TotalMemInst": 491,
    "TotalFuncs": 38,
    "ArgsPhi": 0,
    "testUnary": 295
  },
  "baseline_oz_instcount": 711,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--jump-threading",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unswitch",
          "--correlated-propagation",
          "--ipsccp",
          "--lower-widenable-condition",
          "--loop-versioning-licm",
          "--loop-data-prefetch",
          "--globalopt",
          "--add-discriminators",
          "--strip",
          "--strip-debug-declare",
          "--loop-load-elim",
          "--inline",
          "--licm",
          "--aggressive-instcombine",
          "--die",
          "--simple-loop-unswitch",
          "--ee-instrument",
          "--loop-guard-widening",
          "--constprop",
          "--loop-predication",
          "--loop-deletion",
          "--elim-avail-extern",
          "--barrier",
          "--simplifycfg",
          "--jump-threading",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unswitch",
      "--correlated-propagation",
      "--ipsccp",
      "--lower-widenable-condition",
      "--loop-versioning-licm",
      "--loop-data-prefetch",
      "--globalopt",
      "--add-discriminators",
      "--strip",
      "--strip-debug-declare",
      "--loop-load-elim",
      "--inline",
      "--licm",
      "--aggressive-instcombine",
      "--die",
      "--simple-loop-unswitch",
      "--ee-instrument",
      "--loop-guard-widening",
      "--constprop",
      "--loop-predication",
      "--loop-deletion",
      "--elim-avail-extern",
      "--barrier",
      "--simplifycfg",
      "--jump-threading",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}