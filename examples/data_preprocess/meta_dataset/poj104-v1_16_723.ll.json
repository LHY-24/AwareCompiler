{
  "program_id": "poj104-v1_16_723.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 3,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 22,
    "const32Bit": 43,
    "const64Bit": 15,
    "numConstZeroes": 11,
    "numConstOnes": 17,
    "UncondBranches": 10,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 17,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 24,
    "NumBitCastInst": 17,
    "NumBrInst": 16,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 54,
    "NumMulInst": 10,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 10,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 26,
    "TotalInsts": 215,
    "TotalMemInst": 141,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 89
  },
  "baseline_oz_instcount": 64,
  "knowledge_base_entry": [
    "--dse",
    "--elim-avail-extern",
    "--simplifycfg",
    "--jump-threading",
    "--mem2reg",
    "--load-store-vectorizer",
    "--bdce",
    "--aggressive-instcombine",
    "--gvn",
    "--memcpyopt",
    "--elim-avail-extern",
    "--instsimplify",
    "--inline",
    "--sroa",
    "--loop-reroll",
    "--gvn",
    "--globalopt",
    "--early-cse",
    "--flattencfg",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--mergefunc",
    "--dce",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--memcpyopt",
          "--sccp",
          "--loop-sink",
          "--gvn",
          "--ee-instrument",
          "--constprop",
          "--coro-cleanup",
          "--loop-unroll-and-jam",
          "--instsimplify",
          "--loop-unswitch",
          "--sroa",
          "--elim-avail-extern",
          "--inferattrs",
          "--attributor",
          "--loop-distribute",
          "--partial-inliner",
          "--mergeicmps",
          "--globaldce",
          "--lowerinvoke",
          "--prune-eh",
          "--coro-early",
          "--slp-vectorizer",
          "--loop-vectorize",
          "--loop-predication",
          "--libcalls-shrinkwrap",
          "--loop-data-prefetch",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--memcpyopt",
      "--sccp",
      "--loop-sink",
      "--gvn",
      "--ee-instrument",
      "--constprop",
      "--coro-cleanup",
      "--loop-unroll-and-jam",
      "--instsimplify",
      "--loop-unswitch",
      "--sroa",
      "--elim-avail-extern",
      "--inferattrs",
      "--attributor",
      "--loop-distribute",
      "--partial-inliner",
      "--mergeicmps",
      "--globaldce",
      "--lowerinvoke",
      "--prune-eh",
      "--coro-early",
      "--slp-vectorizer",
      "--loop-vectorize",
      "--loop-predication",
      "--libcalls-shrinkwrap",
      "--loop-data-prefetch",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+6.2%"
  }
}