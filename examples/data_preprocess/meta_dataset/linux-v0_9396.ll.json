{
  "program_id": "linux-v0_9396.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 8,
    "oneSuccessor": 25,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 14,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 18,
    "CriticalCount": 12,
    "NumEdges": 58,
    "const32Bit": 138,
    "const64Bit": 6,
    "numConstZeroes": 45,
    "numConstOnes": 57,
    "UncondBranches": 25,
    "binaryConstArg": 6,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 47,
    "NumAndInst": 3,
    "BlockMid": 6,
    "BlockLow": 58,
    "NumBitCastInst": 21,
    "NumBrInst": 39,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 13,
    "NumLShrInst": 2,
    "NumLoadInst": 89,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 24,
    "NumSExtInst": 1,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 58,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 64,
    "TotalInsts": 377,
    "TotalMemInst": 263,
    "TotalFuncs": 42,
    "ArgsPhi": 0,
    "testUnary": 165
  },
  "baseline_oz_instcount": 377,
  "knowledge_base_entry": [
    "--ipsccp",
    "--flattencfg",
    "--mergefunc",
    "--sroa",
    "--instsimplify",
    "--licm",
    "--gvn",
    "--slp-vectorizer",
    "--dce",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--die",
          "--irce",
          "--instnamer",
          "--coro-split",
          "--jump-threading",
          "--sroa",
          "--constprop",
          "--loop-unroll-and-jam",
          "--functionattrs",
          "--lower-expect",
          "--mergefunc",
          "--slsr",
          "--strip-nondebug",
          "--mergeicmps",
          "--loop-idiom",
          "--newgvn",
          "--libcalls-shrinkwrap",
          "--float2int",
          "--aggressive-instcombine",
          "--loop-rotate",
          "--globalsplit",
          "--ipsccp",
          "--slp-vectorizer",
          "--deadargelim",
          "--name-anon-globals",
          "--barrier",
          "--sancov",
          "--post-inline-ee-instrument",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--die",
      "--irce",
      "--instnamer",
      "--coro-split",
      "--jump-threading",
      "--sroa",
      "--constprop",
      "--loop-unroll-and-jam",
      "--functionattrs",
      "--lower-expect",
      "--mergefunc",
      "--slsr",
      "--strip-nondebug",
      "--mergeicmps",
      "--loop-idiom",
      "--newgvn",
      "--libcalls-shrinkwrap",
      "--float2int",
      "--aggressive-instcombine",
      "--loop-rotate",
      "--globalsplit",
      "--ipsccp",
      "--slp-vectorizer",
      "--deadargelim",
      "--name-anon-globals",
      "--barrier",
      "--sancov",
      "--post-inline-ee-instrument",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+5.8%"
  }
}