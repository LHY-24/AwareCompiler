{
  "program_id": "github-v0_2103.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 1,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 25,
    "const32Bit": 53,
    "const64Bit": 5,
    "numConstZeroes": 15,
    "numConstOnes": 23,
    "UncondBranches": 13,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 17,
    "NumAndInst": 7,
    "BlockMid": 3,
    "BlockLow": 26,
    "NumBitCastInst": 0,
    "NumBrInst": 19,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 6,
    "NumLShrInst": 7,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 6,
    "NumZExtInst": 4,
    "TotalBlocks": 29,
    "TotalInsts": 171,
    "TotalMemInst": 102,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 64
  },
  "baseline_oz_instcount": 171,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--early-cse",
    "--instcombine",
    "-loop-reduce",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--jump-threading",
    "--globalopt",
    "--early-cse-memssa",
    "--instsimplify",
    "--prune-eh",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--inline",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--deadargelim",
          "--slp-vectorizer",
          "--lowerinvoke",
          "--tailcallelim",
          "--aggressive-instcombine",
          "--scalarizer",
          "--gvn-hoist",
          "--adce",
          "--constmerge",
          "--sancov",
          "--mem2reg",
          "--attributor",
          "--simple-loop-unswitch",
          "--loop-interchange",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--deadargelim",
      "--slp-vectorizer",
      "--lowerinvoke",
      "--tailcallelim",
      "--aggressive-instcombine",
      "--scalarizer",
      "--gvn-hoist",
      "--adce",
      "--constmerge",
      "--sancov",
      "--mem2reg",
      "--attributor",
      "--simple-loop-unswitch",
      "--loop-interchange",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}