{
  "program_id": "github-v0_47367.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 18,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 8,
    "oneSuccessor": 16,
    "twoPred": 10,
    "twoPredOneSuc": 6,
    "twoEach": 1,
    "twoSuccessor": 13,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 1,
    "BranchCount": 29,
    "returnInt": 0,
    "CriticalCount": 8,
    "NumEdges": 42,
    "const32Bit": 157,
    "const64Bit": 18,
    "numConstZeroes": 85,
    "numConstOnes": 63,
    "UncondBranches": 16,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 46,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 31,
    "NumBitCastInst": 36,
    "NumBrInst": 29,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 59,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 111,
    "NumMulInst": 8,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 13,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 59,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 42,
    "TotalInsts": 409,
    "TotalMemInst": 290,
    "TotalFuncs": 18,
    "ArgsPhi": 2,
    "testUnary": 206
  },
  "baseline_oz_instcount": 409,
  "knowledge_base_entry": [
    "--dse",
    "--sroa",
    "--jump-threading",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--newgvn",
    "--dse",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--newgvn",
    "--dse",
    "--newgvn",
    "--dse",
    "--inline",
    "--globalopt",
    "--newgvn",
    "--gvn",
    "--early-cse",
    "--load-store-vectorizer",
    "--sroa",
    "--jump-threading",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-rotate",
          "--infer-address-spaces",
          "--gvn-hoist",
          "--strip-debug-declare",
          "--ipconstprop",
          "--globalopt",
          "--always-inline",
          "--aggressive-instcombine",
          "--loop-vectorize",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-rotate",
      "--infer-address-spaces",
      "--gvn-hoist",
      "--strip-debug-declare",
      "--ipconstprop",
      "--globalopt",
      "--always-inline",
      "--aggressive-instcombine",
      "--loop-vectorize",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}