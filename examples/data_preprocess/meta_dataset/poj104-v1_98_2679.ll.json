{
  "program_id": "poj104-v1_98_2679.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 6,
    "oneSuccessor": 20,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 13,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 21,
    "CriticalCount": 6,
    "NumEdges": 46,
    "const32Bit": 88,
    "const64Bit": 78,
    "numConstZeroes": 50,
    "numConstOnes": 61,
    "UncondBranches": 20,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 49,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 51,
    "NumBitCastInst": 67,
    "NumBrInst": 33,
    "NumCallInst": 87,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 99,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 58,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 59,
    "TotalInsts": 489,
    "TotalMemInst": 333,
    "TotalFuncs": 43,
    "ArgsPhi": 0,
    "testUnary": 224
  },
  "baseline_oz_instcount": 130,
  "knowledge_base_entry": [
    "--lower-expect",
    "--sroa",
    "--instcombine",
    "--correlated-propagation",
    "--globalopt",
    "--loop-simplifycfg",
    "--flattencfg",
    "--early-cse",
    "--sroa",
    "--ipsccp",
    "--loweratomic",
    "--early-cse-memssa",
    "--prune-eh",
    "--gvn",
    "--instsimplify",
    "--aggressive-instcombine",
    "--prune-eh",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--inline",
    "--sroa",
    "--early-cse-memssa",
    "--lower-expect",
    "--sroa",
    "--nary-reassociate",
    "-loop-reduce",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--lower-expect",
    "--correlated-propagation",
    "--adce",
    "--instcombine",
    "--globalopt",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--licm",
    "--load-store-vectorizer",
    "--early-cse",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--redundant-dbg-inst-elim",
          "--reassociate",
          "--reg2mem",
          "--coro-elide",
          "--strip",
          "--guard-widening",
          "--functionattrs",
          "-loop-reduce",
          "--loop-distribute",
          "--float2int",
          "--loop-predication",
          "--loop-instsimplify",
          "--coro-cleanup",
          "--slsr",
          "--infer-address-spaces",
          "--lower-matrix-intrinsics",
          "--loop-versioning",
          "--barrier",
          "--constprop",
          "--sroa",
          "--lowerswitch",
          "--lower-widenable-condition",
          "--tailcallelim",
          "--inline",
          "--lower-constant-intrinsics",
          "--loop-versioning-licm",
          "--forceattrs",
          "--consthoist",
          "--break-crit-edges"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+21.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--redundant-dbg-inst-elim",
      "--reassociate",
      "--reg2mem",
      "--coro-elide",
      "--strip",
      "--guard-widening",
      "--functionattrs",
      "-loop-reduce",
      "--loop-distribute",
      "--float2int",
      "--loop-predication",
      "--loop-instsimplify",
      "--coro-cleanup",
      "--slsr",
      "--infer-address-spaces",
      "--lower-matrix-intrinsics",
      "--loop-versioning",
      "--barrier",
      "--constprop",
      "--sroa",
      "--lowerswitch",
      "--lower-widenable-condition",
      "--tailcallelim",
      "--inline",
      "--lower-constant-intrinsics",
      "--loop-versioning-licm",
      "--forceattrs",
      "--consthoist",
      "--break-crit-edges"
    ],
    "performance_vs_Oz": "+21.5%"
  }
}