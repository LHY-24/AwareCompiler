{
  "program_id": "poj104-v1_50_2384.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 0,
    "oneSuccessor": 12,
    "twoPred": 12,
    "twoPredOneSuc": 0,
    "twoEach": 11,
    "twoSuccessor": 12,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 14,
    "CriticalCount": 12,
    "NumEdges": 36,
    "const32Bit": 54,
    "const64Bit": 8,
    "numConstZeroes": 1,
    "numConstOnes": 5,
    "UncondBranches": 12,
    "binaryConstArg": 36,
    "NumAShrInst": 0,
    "NumAddInst": 24,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 26,
    "NumBitCastInst": 8,
    "NumBrInst": 24,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 27,
    "TotalInsts": 150,
    "TotalMemInst": 67,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 38
  },
  "baseline_oz_instcount": 127,
  "knowledge_base_entry": [
    "--newgvn",
    "--nary-reassociate",
    "--early-cse",
    "--gvn-hoist",
    "--newgvn",
    "--mem2reg",
    "--bdce",
    "--inline",
    "--mem2reg",
    "--aggressive-instcombine",
    "--dse",
    "--inline",
    "--simplifycfg",
    "--jump-threading",
    "--correlated-propagation",
    "--adce",
    "--mergefunc",
    "--gvn-hoist",
    "--newgvn",
    "--mem2reg",
    "--bdce",
    "--inline",
    "--mem2reg",
    "--early-cse-memssa",
    "--instsimplify",
    "--early-cse",
    "--ipsccp",
    "--elim-avail-extern",
    "--instcombine",
    "--lower-expect",
    "--nary-reassociate",
    "--loop-fusion",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--strip-nondebug",
          "--rewrite-statepoints-for-gc",
          "--loop-simplify",
          "--coro-cleanup",
          "--loop-guard-widening",
          "--loop-versioning-licm",
          "--instnamer",
          "--inferattrs",
          "--functionattrs",
          "--prune-eh",
          "--strip-dead-prototypes",
          "--indvars",
          "--insert-gcov-profiling",
          "--early-cse-memssa",
          "--loop-idiom",
          "--loop-interchange",
          "--called-value-propagation",
          "--memcpyopt",
          "--sccp",
          "--div-rem-pairs",
          "--post-inline-ee-instrument",
          "--elim-avail-extern",
          "--load-store-vectorizer",
          "--lowerinvoke",
          "--alignment-from-assumptions",
          "--inline",
          "--guard-widening",
          "--infer-address-spaces",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--strip-nondebug",
      "--rewrite-statepoints-for-gc",
      "--loop-simplify",
      "--coro-cleanup",
      "--loop-guard-widening",
      "--loop-versioning-licm",
      "--instnamer",
      "--inferattrs",
      "--functionattrs",
      "--prune-eh",
      "--strip-dead-prototypes",
      "--indvars",
      "--insert-gcov-profiling",
      "--early-cse-memssa",
      "--loop-idiom",
      "--loop-interchange",
      "--called-value-propagation",
      "--memcpyopt",
      "--sccp",
      "--div-rem-pairs",
      "--post-inline-ee-instrument",
      "--elim-avail-extern",
      "--load-store-vectorizer",
      "--lowerinvoke",
      "--alignment-from-assumptions",
      "--inline",
      "--guard-widening",
      "--infer-address-spaces",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+7.1%"
  }
}