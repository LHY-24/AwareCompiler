{
  "program_id": "github-v0_45021.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 35,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 149,
    "const64Bit": 0,
    "numConstZeroes": 0,
    "numConstOnes": 148,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 148,
    "NumAndInst": 0,
    "BlockMid": 19,
    "BlockLow": 16,
    "NumBitCastInst": 47,
    "NumBrInst": 0,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 148,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 35,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 148,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 35,
    "TotalInsts": 561,
    "TotalMemInst": 479,
    "TotalFuncs": 69,
    "ArgsPhi": 0,
    "testUnary": 343
  },
  "baseline_oz_instcount": 561,
  "knowledge_base_entry": [
    "--indvars",
    "--simplifycfg",
    "--early-cse",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--flattencfg",
    "--mergefunc",
    "--dce",
    "--inline",
    "--gvn-hoist",
    "--lower-expect",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--lower-matrix-intrinsics",
          "--speculative-execution",
          "--lower-widenable-condition",
          "--inferattrs",
          "--loop-distribute",
          "--loop-unswitch",
          "--coro-cleanup",
          "--rpo-functionattrs",
          "--always-inline",
          "--canonicalize-aliases",
          "--rewrite-statepoints-for-gc",
          "--early-cse",
          "--aggressive-instcombine",
          "--scalarizer",
          "--irce",
          "--lcssa",
          "--coro-split",
          "--alignment-from-assumptions",
          "--instsimplify",
          "--loweratomic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--lower-matrix-intrinsics",
      "--speculative-execution",
      "--lower-widenable-condition",
      "--inferattrs",
      "--loop-distribute",
      "--loop-unswitch",
      "--coro-cleanup",
      "--rpo-functionattrs",
      "--always-inline",
      "--canonicalize-aliases",
      "--rewrite-statepoints-for-gc",
      "--early-cse",
      "--aggressive-instcombine",
      "--scalarizer",
      "--irce",
      "--lcssa",
      "--coro-split",
      "--alignment-from-assumptions",
      "--instsimplify",
      "--loweratomic"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}