{
  "program_id": "linux-v0_9194.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 8,
    "CriticalCount": 0,
    "NumEdges": 16,
    "const32Bit": 63,
    "const64Bit": 6,
    "numConstZeroes": 27,
    "numConstOnes": 33,
    "UncondBranches": 8,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 24,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 18,
    "NumBitCastInst": 5,
    "NumBrInst": 12,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 22,
    "TotalInsts": 186,
    "TotalMemInst": 135,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 84
  },
  "baseline_oz_instcount": 186,
  "knowledge_base_entry": [
    "--flattencfg",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--jump-threading",
    "--newgvn",
    "--gvn",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--loop-versioning-licm",
          "--dse",
          "--ipconstprop",
          "--simple-loop-unswitch",
          "--loop-load-elim",
          "--mem2reg",
          "--globaldce",
          "--dce",
          "--loop-unroll",
          "--add-discriminators",
          "--lower-guard-intrinsic",
          "--gvn",
          "--jump-threading",
          "--mergereturn",
          "--insert-gcov-profiling",
          "--scalarizer",
          "--sccp",
          "--gvn-hoist",
          "--strip",
          "--sink",
          "--lower-expect",
          "--break-crit-edges",
          "--loop-interchange",
          "--aggressive-instcombine",
          "--infer-address-spaces",
          "--loop-rotate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--loop-versioning-licm",
      "--dse",
      "--ipconstprop",
      "--simple-loop-unswitch",
      "--loop-load-elim",
      "--mem2reg",
      "--globaldce",
      "--dce",
      "--loop-unroll",
      "--add-discriminators",
      "--lower-guard-intrinsic",
      "--gvn",
      "--jump-threading",
      "--mergereturn",
      "--insert-gcov-profiling",
      "--scalarizer",
      "--sccp",
      "--gvn-hoist",
      "--strip",
      "--sink",
      "--lower-expect",
      "--break-crit-edges",
      "--loop-interchange",
      "--aggressive-instcombine",
      "--infer-address-spaces",
      "--loop-rotate"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}