{
  "program_id": "linux-v0_117.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 71,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 19,
    "oneSuccessor": 64,
    "twoPred": 22,
    "twoPredOneSuc": 11,
    "twoEach": 3,
    "twoSuccessor": 35,
    "morePreds": 9,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 130,
    "BeginPhi": 1,
    "BranchCount": 99,
    "returnInt": 23,
    "CriticalCount": 17,
    "NumEdges": 148,
    "const32Bit": 223,
    "const64Bit": 13,
    "numConstZeroes": 75,
    "numConstOnes": 124,
    "UncondBranches": 64,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 108,
    "NumAndInst": 5,
    "BlockMid": 12,
    "BlockLow": 119,
    "NumBitCastInst": 33,
    "NumBrInst": 99,
    "NumCallInst": 97,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 37,
    "NumLShrInst": 2,
    "NumLoadInst": 225,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 29,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 132,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 4,
    "NumZExtInst": 7,
    "TotalBlocks": 131,
    "TotalInsts": 831,
    "TotalMemInst": 593,
    "TotalFuncs": 55,
    "ArgsPhi": 2,
    "testUnary": 388
  },
  "baseline_oz_instcount": 831,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--mergefunc",
    "--bdce",
    "--reassociate",
    "--licm",
    "--memcpyopt",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--mergefunc",
    "--loop-simplifycfg",
    "--reassociate",
    "--mergefunc",
    "--dse",
    "--early-cse",
    "--jump-threading",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--loop-idiom",
          "--load-store-vectorizer",
          "--argpromotion",
          "--post-inline-ee-instrument",
          "--elim-avail-extern",
          "-loop-reduce",
          "--infer-address-spaces",
          "--ipsccp",
          "--always-inline",
          "--loop-deletion",
          "--gvn-hoist",
          "--consthoist",
          "--prune-eh",
          "--loop-vectorize",
          "--loop-versioning",
          "--mem2reg",
          "--loweratomic",
          "--instsimplify",
          "--mergefunc",
          "--loop-predication",
          "--loop-distribute",
          "--loop-simplifycfg",
          "--licm",
          "--instnamer",
          "--globaldce",
          "--globalsplit",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--loop-idiom",
      "--load-store-vectorizer",
      "--argpromotion",
      "--post-inline-ee-instrument",
      "--elim-avail-extern",
      "-loop-reduce",
      "--infer-address-spaces",
      "--ipsccp",
      "--always-inline",
      "--loop-deletion",
      "--gvn-hoist",
      "--consthoist",
      "--prune-eh",
      "--loop-vectorize",
      "--loop-versioning",
      "--mem2reg",
      "--loweratomic",
      "--instsimplify",
      "--mergefunc",
      "--loop-predication",
      "--loop-distribute",
      "--loop-simplifycfg",
      "--licm",
      "--instnamer",
      "--globaldce",
      "--globalsplit",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}