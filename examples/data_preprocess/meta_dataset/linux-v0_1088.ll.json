{
  "program_id": "linux-v0_1088.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 5,
    "oneSuccessor": 36,
    "twoPred": 12,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 68,
    "BeginPhi": 0,
    "BranchCount": 49,
    "returnInt": 25,
    "CriticalCount": 3,
    "NumEdges": 72,
    "const32Bit": 237,
    "const64Bit": 11,
    "numConstZeroes": 80,
    "numConstOnes": 54,
    "UncondBranches": 36,
    "binaryConstArg": 31,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 42,
    "NumAndInst": 14,
    "BlockMid": 11,
    "BlockLow": 57,
    "NumBitCastInst": 7,
    "NumBrInst": 49,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 182,
    "NumMulInst": 1,
    "NumOrInst": 13,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 62,
    "NumSubInst": 2,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 68,
    "TotalInsts": 577,
    "TotalMemInst": 408,
    "TotalFuncs": 42,
    "ArgsPhi": 0,
    "testUnary": 272
  },
  "baseline_oz_instcount": 577,
  "knowledge_base_entry": [
    "--irce",
    "--gvn",
    "--early-cse",
    "--sccp",
    "--sroa",
    "--mem2reg",
    "--lower-expect",
    "--reassociate",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--globalopt",
    "--newgvn",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--lower-constant-intrinsics",
          "--infer-address-spaces",
          "--lower-expect",
          "-loop-reduce",
          "--scalarizer",
          "--correlated-propagation",
          "--inline",
          "--elim-avail-extern",
          "--prune-eh",
          "--simplifycfg",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--lower-constant-intrinsics",
      "--infer-address-spaces",
      "--lower-expect",
      "-loop-reduce",
      "--scalarizer",
      "--correlated-propagation",
      "--inline",
      "--elim-avail-extern",
      "--prune-eh",
      "--simplifycfg",
      "--globaldce"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}