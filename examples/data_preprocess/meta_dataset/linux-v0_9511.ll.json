{
  "program_id": "linux-v0_9511.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 59,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 21,
    "oneSuccessor": 51,
    "twoPred": 14,
    "twoPredOneSuc": 8,
    "twoEach": 2,
    "twoSuccessor": 25,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 97,
    "BeginPhi": 0,
    "BranchCount": 76,
    "returnInt": 20,
    "CriticalCount": 2,
    "NumEdges": 101,
    "const32Bit": 418,
    "const64Bit": 78,
    "numConstZeroes": 249,
    "numConstOnes": 116,
    "UncondBranches": 51,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 78,
    "NumAndInst": 1,
    "BlockMid": 15,
    "BlockLow": 82,
    "NumBitCastInst": 25,
    "NumBrInst": 76,
    "NumCallInst": 69,
    "NumGetElementPtrInst": 168,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 233,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 145,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 97,
    "TotalInsts": 852,
    "TotalMemInst": 693,
    "TotalFuncs": 40,
    "ArgsPhi": 0,
    "testUnary": 337
  },
  "baseline_oz_instcount": 839,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--flattencfg",
    "--ipsccp",
    "--loweratomic",
    "--early-cse-memssa",
    "--newgvn",
    "--indvars",
    "--load-store-vectorizer",
    "--dse",
    "--instcombine",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--licm",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--coro-elide",
          "--separate-const-offset-from-gep",
          "--loop-data-prefetch",
          "--inferattrs",
          "--alignment-from-assumptions",
          "--loop-idiom",
          "--flattencfg",
          "--guard-widening",
          "--ipsccp",
          "--globalsplit",
          "--loop-sink",
          "--attributor",
          "--sccp",
          "--elim-avail-extern",
          "--jump-threading",
          "--inject-tli-mappings",
          "--coro-cleanup",
          "--functionattrs",
          "--instcombine",
          "--globalopt",
          "--correlated-propagation",
          "--globaldce",
          "--die",
          "--loop-versioning-licm",
          "--lower-expect",
          "--dce",
          "--insert-gcov-profiling",
          "--consthoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--coro-elide",
      "--separate-const-offset-from-gep",
      "--loop-data-prefetch",
      "--inferattrs",
      "--alignment-from-assumptions",
      "--loop-idiom",
      "--flattencfg",
      "--guard-widening",
      "--ipsccp",
      "--globalsplit",
      "--loop-sink",
      "--attributor",
      "--sccp",
      "--elim-avail-extern",
      "--jump-threading",
      "--inject-tli-mappings",
      "--coro-cleanup",
      "--functionattrs",
      "--instcombine",
      "--globalopt",
      "--correlated-propagation",
      "--globaldce",
      "--die",
      "--loop-versioning-licm",
      "--lower-expect",
      "--dce",
      "--insert-gcov-profiling",
      "--consthoist"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}