{
  "program_id": "github-v0_48371.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 7,
    "BeginPhi": 0,
    "BranchCount": 5,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 7,
    "const32Bit": 18,
    "const64Bit": 3,
    "numConstZeroes": 9,
    "numConstOnes": 8,
    "UncondBranches": 3,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 7,
    "NumBitCastInst": 0,
    "NumBrInst": 5,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 8,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 7,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 7,
    "TotalInsts": 46,
    "TotalMemInst": 28,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 20
  },
  "baseline_oz_instcount": 46,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--gvn",
    "-loop-reduce",
    "--nary-reassociate",
    "--indvars",
    "--sroa",
    "--jump-threading",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--sroa",
    "--gvn-hoist",
    "--memcpyopt",
    "--instsimplify",
    "--dce",
    "--elim-avail-extern",
    "--reassociate",
    "--aggressive-instcombine",
    "--mem2reg",
    "--loop-simplifycfg",
    "--instsimplify",
    "--instcombine",
    "--licm",
    "--gvn",
    "--jump-threading",
    "--instcombine",
    "--loop-reroll",
    "--jump-threading",
    "--slsr",
    "--slp-vectorizer",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--instnamer",
          "--loop-simplify",
          "--loop-unswitch",
          "--libcalls-shrinkwrap",
          "--deadargelim",
          "--insert-gcov-profiling",
          "--simple-loop-unswitch",
          "--rewrite-statepoints-for-gc",
          "--post-inline-ee-instrument",
          "--mem2reg",
          "--aggressive-instcombine",
          "--always-inline",
          "--indvars",
          "--licm",
          "--ipconstprop",
          "--simplifycfg",
          "--loop-reroll",
          "--mergefunc",
          "--loop-data-prefetch",
          "--globalopt",
          "--loop-versioning-licm",
          "--dse",
          "--gvn",
          "--coro-elide",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--instnamer",
      "--loop-simplify",
      "--loop-unswitch",
      "--libcalls-shrinkwrap",
      "--deadargelim",
      "--insert-gcov-profiling",
      "--simple-loop-unswitch",
      "--rewrite-statepoints-for-gc",
      "--post-inline-ee-instrument",
      "--mem2reg",
      "--aggressive-instcombine",
      "--always-inline",
      "--indvars",
      "--licm",
      "--ipconstprop",
      "--simplifycfg",
      "--loop-reroll",
      "--mergefunc",
      "--loop-data-prefetch",
      "--globalopt",
      "--loop-versioning-licm",
      "--dse",
      "--gvn",
      "--coro-elide",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+6.5%"
  }
}