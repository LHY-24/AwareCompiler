{
  "program_id": "github-v0_2173.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 47,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 19,
    "oneSuccessor": 40,
    "twoPred": 30,
    "twoPredOneSuc": 12,
    "twoEach": 18,
    "twoSuccessor": 37,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 3,
    "BranchCount": 77,
    "returnInt": 5,
    "CriticalCount": 30,
    "NumEdges": 114,
    "const32Bit": 114,
    "const64Bit": 14,
    "numConstZeroes": 51,
    "numConstOnes": 54,
    "UncondBranches": 40,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 28,
    "NumAndInst": 16,
    "BlockMid": 8,
    "BlockLow": 72,
    "NumBitCastInst": 0,
    "NumBrInst": 77,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 39,
    "NumLShrInst": 4,
    "NumLoadInst": 159,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 3,
    "NumRetInst": 2,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 77,
    "NumSubInst": 11,
    "NumTruncInst": 1,
    "NumXorInst": 3,
    "NumZExtInst": 8,
    "TotalBlocks": 80,
    "TotalInsts": 506,
    "TotalMemInst": 304,
    "TotalFuncs": 13,
    "ArgsPhi": 6,
    "testUnary": 210
  },
  "baseline_oz_instcount": 507,
  "knowledge_base_entry": [
    "--bdce",
    "--aggressive-instcombine",
    "--dse",
    "--dce",
    "--gvn",
    "--nary-reassociate",
    "--inline",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--simplifycfg",
    "--bdce",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--sancov",
          "--sccp",
          "--forceattrs",
          "--mem2reg",
          "--speculative-execution",
          "--coro-split",
          "--inferattrs",
          "--instnamer",
          "--loop-vectorize",
          "--adce",
          "--name-anon-globals",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--sancov",
      "--sccp",
      "--forceattrs",
      "--mem2reg",
      "--speculative-execution",
      "--coro-split",
      "--inferattrs",
      "--instnamer",
      "--loop-vectorize",
      "--adce",
      "--name-anon-globals",
      "--instcombine"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}