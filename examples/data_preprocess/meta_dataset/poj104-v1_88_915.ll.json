{
  "program_id": "poj104-v1_88_915.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 4,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 9,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 28,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 6,
    "NumEdges": 26,
    "const32Bit": 31,
    "const64Bit": 18,
    "numConstZeroes": 15,
    "numConstOnes": 18,
    "UncondBranches": 8,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 26,
    "NumBitCastInst": 9,
    "NumBrInst": 17,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 40,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 28,
    "TotalInsts": 166,
    "TotalMemInst": 110,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 73
  },
  "baseline_oz_instcount": 55,
  "knowledge_base_entry": [
    "--instcombine",
    "--slsr",
    "--early-cse-memssa",
    "--die",
    "--simplifycfg",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--dse",
    "--loop-instsimplify",
    "--gvn",
    "--lower-expect",
    "--adce",
    "--dse",
    "--instcombine",
    "--early-cse",
    "--inline",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll",
          "--consthoist",
          "--loop-simplify",
          "--inline",
          "--coro-cleanup",
          "--lowerswitch",
          "--lower-constant-intrinsics",
          "--loop-vectorize",
          "--slsr",
          "--indvars",
          "--partial-inliner",
          "--loop-versioning",
          "--flattencfg",
          "--simple-loop-unswitch",
          "--sroa",
          "--forceattrs",
          "--elim-avail-extern",
          "--loop-interchange",
          "--ee-instrument",
          "--loop-data-prefetch",
          "--instcombine",
          "--ipconstprop",
          "--sink",
          "--loop-unroll-and-jam",
          "--loop-load-elim",
          "--speculative-execution",
          "--gvn",
          "--slp-vectorizer",
          "--infer-address-spaces",
          "--loop-sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll",
      "--consthoist",
      "--loop-simplify",
      "--inline",
      "--coro-cleanup",
      "--lowerswitch",
      "--lower-constant-intrinsics",
      "--loop-vectorize",
      "--slsr",
      "--indvars",
      "--partial-inliner",
      "--loop-versioning",
      "--flattencfg",
      "--simple-loop-unswitch",
      "--sroa",
      "--forceattrs",
      "--elim-avail-extern",
      "--loop-interchange",
      "--ee-instrument",
      "--loop-data-prefetch",
      "--instcombine",
      "--ipconstprop",
      "--sink",
      "--loop-unroll-and-jam",
      "--loop-load-elim",
      "--speculative-execution",
      "--gvn",
      "--slp-vectorizer",
      "--infer-address-spaces",
      "--loop-sink"
    ],
    "performance_vs_Oz": "+7.3%"
  }
}