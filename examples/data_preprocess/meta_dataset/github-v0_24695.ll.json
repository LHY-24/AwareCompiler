{
  "program_id": "github-v0_24695.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 2,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 12,
    "const32Bit": 16,
    "const64Bit": 3,
    "numConstZeroes": 4,
    "numConstOnes": 10,
    "UncondBranches": 4,
    "binaryConstArg": 6,
    "NumAShrInst": 2,
    "NumAddInst": 0,
    "NumAllocaInst": 6,
    "NumAndInst": 2,
    "BlockMid": 2,
    "BlockLow": 8,
    "NumBitCastInst": 0,
    "NumBrInst": 8,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 14,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 10,
    "TotalBlocks": 10,
    "TotalInsts": 87,
    "TotalMemInst": 49,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 47
  },
  "baseline_oz_instcount": 87,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--flattencfg",
    "--instcombine",
    "--prune-eh",
    "--mem2reg",
    "--newgvn",
    "--ipsccp",
    "--lower-expect",
    "--gvn-hoist",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-interchange",
          "--early-cse-memssa",
          "--loweratomic",
          "--inject-tli-mappings",
          "--indvars",
          "--aggressive-instcombine",
          "--strip-debug-declare",
          "--lower-constant-intrinsics",
          "--globaldce",
          "--loop-unroll-and-jam",
          "--float2int",
          "--guard-widening",
          "--infer-address-spaces",
          "--strip",
          "--memcpyopt",
          "--simplifycfg",
          "--mldst-motion",
          "--coro-split",
          "--nary-reassociate",
          "--loop-versioning-licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-interchange",
      "--early-cse-memssa",
      "--loweratomic",
      "--inject-tli-mappings",
      "--indvars",
      "--aggressive-instcombine",
      "--strip-debug-declare",
      "--lower-constant-intrinsics",
      "--globaldce",
      "--loop-unroll-and-jam",
      "--float2int",
      "--guard-widening",
      "--infer-address-spaces",
      "--strip",
      "--memcpyopt",
      "--simplifycfg",
      "--mldst-motion",
      "--coro-split",
      "--nary-reassociate",
      "--loop-versioning-licm"
    ],
    "performance_vs_Oz": "+3.4%"
  }
}