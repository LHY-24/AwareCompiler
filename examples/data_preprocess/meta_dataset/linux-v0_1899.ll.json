{
  "program_id": "linux-v0_1899.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 11,
    "oneSuccessor": 34,
    "twoPred": 14,
    "twoPredOneSuc": 4,
    "twoEach": 7,
    "twoSuccessor": 22,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 80,
    "BeginPhi": 0,
    "BranchCount": 56,
    "returnInt": 23,
    "CriticalCount": 8,
    "NumEdges": 78,
    "const32Bit": 297,
    "const64Bit": 19,
    "numConstZeroes": 118,
    "numConstOnes": 119,
    "UncondBranches": 34,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 92,
    "NumAndInst": 6,
    "BlockMid": 14,
    "BlockLow": 66,
    "NumBitCastInst": 13,
    "NumBrInst": 56,
    "NumCallInst": 59,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 19,
    "NumLShrInst": 1,
    "NumLoadInst": 245,
    "NumMulInst": 8,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 24,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 132,
    "NumSubInst": 0,
    "NumTruncInst": 20,
    "NumXorInst": 3,
    "NumZExtInst": 27,
    "TotalBlocks": 80,
    "TotalInsts": 810,
    "TotalMemInst": 607,
    "TotalFuncs": 40,
    "ArgsPhi": 0,
    "testUnary": 402
  },
  "baseline_oz_instcount": 810,
  "knowledge_base_entry": [
    "--ipsccp",
    "--licm",
    "--dse",
    "--bdce",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--prune-eh",
    "--early-cse-memssa",
    "--ipsccp",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--globalopt",
    "--newgvn",
    "--loop-rotate",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--loop-predication",
          "--loop-idiom",
          "--forceattrs",
          "--simplifycfg",
          "--loop-deletion",
          "--lower-widenable-condition",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--loop-fusion",
          "--name-anon-globals",
          "--reassociate",
          "--strip-dead-prototypes",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--loop-predication",
      "--loop-idiom",
      "--forceattrs",
      "--simplifycfg",
      "--loop-deletion",
      "--lower-widenable-condition",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--loop-fusion",
      "--name-anon-globals",
      "--reassociate",
      "--strip-dead-prototypes",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}