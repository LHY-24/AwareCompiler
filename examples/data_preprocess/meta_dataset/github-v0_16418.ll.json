{
  "program_id": "github-v0_16418.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 42,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 12,
    "oneSuccessor": 39,
    "twoPred": 22,
    "twoPredOneSuc": 8,
    "twoEach": 4,
    "twoSuccessor": 28,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 82,
    "BeginPhi": 0,
    "BranchCount": 67,
    "returnInt": 24,
    "CriticalCount": 16,
    "NumEdges": 95,
    "const32Bit": 238,
    "const64Bit": 16,
    "numConstZeroes": 91,
    "numConstOnes": 58,
    "UncondBranches": 39,
    "binaryConstArg": 36,
    "NumAShrInst": 3,
    "NumAddInst": 7,
    "NumAllocaInst": 44,
    "NumAndInst": 8,
    "BlockMid": 11,
    "BlockLow": 71,
    "NumBitCastInst": 5,
    "NumBrInst": 67,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 64,
    "NumICmpInst": 28,
    "NumLShrInst": 7,
    "NumLoadInst": 201,
    "NumMulInst": 4,
    "NumOrInst": 8,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 9,
    "NumStoreInst": 89,
    "NumSubInst": 11,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 21,
    "TotalBlocks": 82,
    "TotalInsts": 638,
    "TotalMemInst": 437,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 278
  },
  "baseline_oz_instcount": 637,
  "knowledge_base_entry": [
    "--dce",
    "--aggressive-instcombine",
    "--licm",
    "--die",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--ipconstprop",
          "--partially-inline-libcalls",
          "--lower-widenable-condition",
          "--argpromotion",
          "--insert-gcov-profiling",
          "--lowerinvoke",
          "--jump-threading",
          "--guard-widening",
          "--ipsccp",
          "--early-cse",
          "--loop-idiom",
          "--loop-interchange",
          "--adce",
          "--simple-loop-unswitch",
          "--libcalls-shrinkwrap",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--ipconstprop",
      "--partially-inline-libcalls",
      "--lower-widenable-condition",
      "--argpromotion",
      "--insert-gcov-profiling",
      "--lowerinvoke",
      "--jump-threading",
      "--guard-widening",
      "--ipsccp",
      "--early-cse",
      "--loop-idiom",
      "--loop-interchange",
      "--adce",
      "--simple-loop-unswitch",
      "--libcalls-shrinkwrap",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}