{
  "program_id": "poj104-v1_97_2921.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 4,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 6,
    "const32Bit": 35,
    "const64Bit": 5,
    "numConstZeroes": 7,
    "numConstOnes": 12,
    "UncondBranches": 2,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 12,
    "NumBitCastInst": 7,
    "NumBrInst": 4,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 5,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 5,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 14,
    "TotalInsts": 143,
    "TotalMemInst": 99,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 56
  },
  "baseline_oz_instcount": 91,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse-memssa",
    "--bdce",
    "--elim-avail-extern",
    "--instcombine",
    "--gvn",
    "--instsimplify",
    "--elim-avail-extern",
    "--sccp",
    "--instcombine",
    "--inline",
    "--instcombine",
    "--load-store-vectorizer",
    "--inline",
    "--simplifycfg",
    "--inline",
    "--dce",
    "--elim-avail-extern",
    "--flattencfg",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--loop-data-prefetch",
          "--mldst-motion",
          "--coro-cleanup",
          "--slp-vectorizer",
          "--attributor",
          "--constprop",
          "--elim-avail-extern",
          "--lower-expect",
          "--forceattrs",
          "--instcombine",
          "--early-cse-memssa",
          "--coro-early",
          "--scalarizer",
          "--licm",
          "--jump-threading",
          "--loop-unroll",
          "--strip",
          "--die",
          "--inline",
          "--loop-unswitch",
          "--memcpyopt",
          "--loop-simplify",
          "--redundant-dbg-inst-elim",
          "--partial-inliner",
          "--loop-reroll",
          "--strip-nondebug"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+54.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--loop-data-prefetch",
      "--mldst-motion",
      "--coro-cleanup",
      "--slp-vectorizer",
      "--attributor",
      "--constprop",
      "--elim-avail-extern",
      "--lower-expect",
      "--forceattrs",
      "--instcombine",
      "--early-cse-memssa",
      "--coro-early",
      "--scalarizer",
      "--licm",
      "--jump-threading",
      "--loop-unroll",
      "--strip",
      "--die",
      "--inline",
      "--loop-unswitch",
      "--memcpyopt",
      "--loop-simplify",
      "--redundant-dbg-inst-elim",
      "--partial-inliner",
      "--loop-reroll",
      "--strip-nondebug"
    ],
    "performance_vs_Oz": "+54.9%"
  }
}