{
  "program_id": "linux-v0_12644.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 69,
    "onePredOneSuc": 52,
    "onePredTwoSuc": 16,
    "oneSuccessor": 65,
    "twoPred": 18,
    "twoPredOneSuc": 9,
    "twoEach": 2,
    "twoSuccessor": 25,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 119,
    "BeginPhi": 3,
    "BranchCount": 90,
    "returnInt": 18,
    "CriticalCount": 17,
    "NumEdges": 115,
    "const32Bit": 219,
    "const64Bit": 22,
    "numConstZeroes": 64,
    "numConstOnes": 146,
    "UncondBranches": 65,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 113,
    "NumAndInst": 3,
    "BlockMid": 17,
    "BlockLow": 105,
    "NumBitCastInst": 9,
    "NumBrInst": 90,
    "NumCallInst": 60,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 29,
    "NumLShrInst": 2,
    "NumLoadInst": 191,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 32,
    "NumSExtInst": 5,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 129,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 14,
    "NumZExtInst": 9,
    "TotalBlocks": 122,
    "TotalInsts": 743,
    "TotalMemInst": 530,
    "TotalFuncs": 48,
    "ArgsPhi": 7,
    "testUnary": 339
  },
  "baseline_oz_instcount": 729,
  "knowledge_base_entry": [
    "--globaldce",
    "--ipsccp",
    "--die",
    "--loop-simplifycfg",
    "--bdce",
    "--mergefunc",
    "--mem2reg",
    "--flattencfg",
    "--ipsccp",
    "--bdce",
    "--mergefunc",
    "--memcpyopt",
    "--gvn-hoist",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--prune-eh",
          "--loop-fusion",
          "--mergereturn",
          "--loop-distribute",
          "--loop-reroll",
          "--div-rem-pairs",
          "--infer-address-spaces",
          "--loop-instsimplify",
          "--mergeicmps",
          "--slp-vectorizer",
          "--inferattrs",
          "--loop-deletion",
          "--early-cse",
          "--loop-unroll-and-jam",
          "--always-inline",
          "--sink",
          "--loop-unswitch",
          "--ipsccp",
          "--instcombine",
          "--indvars",
          "--lower-matrix-intrinsics",
          "--correlated-propagation",
          "--mergefunc",
          "--loweratomic",
          "--loop-load-elim",
          "--loop-interchange"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--prune-eh",
      "--loop-fusion",
      "--mergereturn",
      "--loop-distribute",
      "--loop-reroll",
      "--div-rem-pairs",
      "--infer-address-spaces",
      "--loop-instsimplify",
      "--mergeicmps",
      "--slp-vectorizer",
      "--inferattrs",
      "--loop-deletion",
      "--early-cse",
      "--loop-unroll-and-jam",
      "--always-inline",
      "--sink",
      "--loop-unswitch",
      "--ipsccp",
      "--instcombine",
      "--indvars",
      "--lower-matrix-intrinsics",
      "--correlated-propagation",
      "--mergefunc",
      "--loweratomic",
      "--loop-load-elim",
      "--loop-interchange"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}