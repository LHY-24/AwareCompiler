{
  "program_id": "linux-v0_4949.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 34,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 8,
    "oneSuccessor": 27,
    "twoPred": 10,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 57,
    "BeginPhi": 0,
    "BranchCount": 45,
    "returnInt": 9,
    "CriticalCount": 4,
    "NumEdges": 63,
    "const32Bit": 178,
    "const64Bit": 23,
    "numConstZeroes": 68,
    "numConstOnes": 63,
    "UncondBranches": 27,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 48,
    "NumAndInst": 4,
    "BlockMid": 9,
    "BlockLow": 48,
    "NumBitCastInst": 6,
    "NumBrInst": 45,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 64,
    "NumICmpInst": 21,
    "NumLShrInst": 1,
    "NumLoadInst": 145,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 88,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 8,
    "TotalBlocks": 57,
    "TotalInsts": 490,
    "TotalMemInst": 375,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 217
  },
  "baseline_oz_instcount": 490,
  "knowledge_base_entry": [
    "--ipsccp",
    "--sroa",
    "--bdce",
    "--sccp",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--gvn",
    "--reassociate",
    "--lower-expect",
    "--sroa",
    "--dce",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--loop-instsimplify",
    "--dse",
    "--aggressive-instcombine",
    "--gvn",
    "--instcombine",
    "--nary-reassociate",
    "-loop-reduce",
    "--reassociate",
    "--early-cse-memssa",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-predication",
          "--redundant-dbg-inst-elim",
          "--loop-versioning",
          "--licm",
          "--forceattrs",
          "--loop-load-elim",
          "--attributor",
          "--scalarizer",
          "--aggressive-instcombine",
          "--lower-constant-intrinsics",
          "--insert-gcov-profiling",
          "--elim-avail-extern",
          "--coro-early",
          "--lowerswitch",
          "--argpromotion",
          "--sroa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-predication",
      "--redundant-dbg-inst-elim",
      "--loop-versioning",
      "--licm",
      "--forceattrs",
      "--loop-load-elim",
      "--attributor",
      "--scalarizer",
      "--aggressive-instcombine",
      "--lower-constant-intrinsics",
      "--insert-gcov-profiling",
      "--elim-avail-extern",
      "--coro-early",
      "--lowerswitch",
      "--argpromotion",
      "--sroa"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}