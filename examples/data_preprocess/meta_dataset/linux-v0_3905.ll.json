{
  "program_id": "linux-v0_3905.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 32,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 5,
    "oneSuccessor": 30,
    "twoPred": 7,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 11,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 62,
    "BeginPhi": 1,
    "BranchCount": 41,
    "returnInt": 8,
    "CriticalCount": 3,
    "NumEdges": 52,
    "const32Bit": 140,
    "const64Bit": 36,
    "numConstZeroes": 58,
    "numConstOnes": 78,
    "UncondBranches": 30,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 67,
    "NumAndInst": 5,
    "BlockMid": 7,
    "BlockLow": 56,
    "NumBitCastInst": 10,
    "NumBrInst": 41,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 13,
    "NumLShrInst": 1,
    "NumLoadInst": 114,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 22,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 84,
    "NumSubInst": 3,
    "NumTruncInst": 5,
    "NumXorInst": 4,
    "NumZExtInst": 3,
    "TotalBlocks": 63,
    "TotalInsts": 473,
    "TotalMemInst": 343,
    "TotalFuncs": 33,
    "ArgsPhi": 2,
    "testUnary": 214
  },
  "baseline_oz_instcount": 470,
  "knowledge_base_entry": [
    "--adce",
    "--licm",
    "--ipsccp",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--adce",
    "--aggressive-instcombine",
    "--newgvn",
    "--gvn",
    "--sroa",
    "--sccp",
    "--globalopt",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--dce",
          "--aggressive-instcombine",
          "--lowerswitch",
          "--inferattrs",
          "--loop-simplifycfg",
          "--guard-widening",
          "--scalarizer",
          "--sroa",
          "--loweratomic",
          "--constmerge",
          "--globalopt",
          "--pgo-memop-opt",
          "--simple-loop-unswitch",
          "--lower-matrix-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--dce",
      "--aggressive-instcombine",
      "--lowerswitch",
      "--inferattrs",
      "--loop-simplifycfg",
      "--guard-widening",
      "--scalarizer",
      "--sroa",
      "--loweratomic",
      "--constmerge",
      "--globalopt",
      "--pgo-memop-opt",
      "--simple-loop-unswitch",
      "--lower-matrix-intrinsics"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}