{
  "program_id": "linux-v0_254.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 75,
    "onePredOneSuc": 52,
    "onePredTwoSuc": 21,
    "oneSuccessor": 68,
    "twoPred": 26,
    "twoPredOneSuc": 12,
    "twoEach": 10,
    "twoSuccessor": 37,
    "morePreds": 4,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 117,
    "BeginPhi": 3,
    "BranchCount": 105,
    "returnInt": 19,
    "CriticalCount": 19,
    "NumEdges": 142,
    "const32Bit": 260,
    "const64Bit": 16,
    "numConstZeroes": 115,
    "numConstOnes": 109,
    "UncondBranches": 68,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 76,
    "NumAndInst": 3,
    "BlockMid": 14,
    "BlockLow": 106,
    "NumBitCastInst": 23,
    "NumBrInst": 105,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 80,
    "NumICmpInst": 40,
    "NumLShrInst": 0,
    "NumLoadInst": 250,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 15,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 2,
    "NumStoreInst": 120,
    "NumSubInst": 3,
    "NumTruncInst": 3,
    "NumXorInst": 3,
    "NumZExtInst": 21,
    "TotalBlocks": 120,
    "TotalInsts": 821,
    "TotalMemInst": 578,
    "TotalFuncs": 36,
    "ArgsPhi": 6,
    "testUnary": 376
  },
  "baseline_oz_instcount": 822,
  "knowledge_base_entry": [
    "--globalopt",
    "--lower-expect",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--lowerswitch",
          "--elim-avail-extern",
          "--bdce",
          "--loop-data-prefetch",
          "--gvn-hoist",
          "--lower-widenable-condition",
          "--load-store-vectorizer",
          "--constprop",
          "--loop-versioning",
          "--always-inline",
          "--sancov",
          "--mergereturn",
          "--tailcallelim",
          "--consthoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--lowerswitch",
      "--elim-avail-extern",
      "--bdce",
      "--loop-data-prefetch",
      "--gvn-hoist",
      "--lower-widenable-condition",
      "--load-store-vectorizer",
      "--constprop",
      "--loop-versioning",
      "--always-inline",
      "--sancov",
      "--mergereturn",
      "--tailcallelim",
      "--consthoist"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}