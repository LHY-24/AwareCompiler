{
  "program_id": "poj104-v1_81_1386.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 7,
    "oneSuccessor": 19,
    "twoPred": 8,
    "twoPredOneSuc": 0,
    "twoEach": 6,
    "twoSuccessor": 15,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 9,
    "CriticalCount": 10,
    "NumEdges": 49,
    "const32Bit": 44,
    "const64Bit": 29,
    "numConstZeroes": 27,
    "numConstOnes": 22,
    "UncondBranches": 19,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 36,
    "NumBitCastInst": 14,
    "NumBrInst": 34,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 16,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 45,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 39,
    "TotalInsts": 206,
    "TotalMemInst": 120,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 85
  },
  "baseline_oz_instcount": 145,
  "knowledge_base_entry": [
    "--loop-deletion",
    "--sroa",
    "--reassociate",
    "--sroa",
    "--bdce",
    "--jump-threading",
    "--loop-rotate",
    "--elim-avail-extern",
    "--instsimplify",
    "--reassociate",
    "--sroa",
    "--instcombine",
    "--gvn-hoist",
    "--slsr",
    "--gvn",
    "--sccp",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--gvn",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--indvars",
    "--simplifycfg",
    "--mldst-motion",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--consthoist",
          "--globalopt",
          "--loop-unroll",
          "--early-cse",
          "--callsite-splitting",
          "--gvn-hoist",
          "--early-cse-memssa",
          "--loop-rotate",
          "--instcombine",
          "--break-crit-edges",
          "--loop-load-elim",
          "--memcpyopt",
          "--libcalls-shrinkwrap",
          "--bdce",
          "--globaldce",
          "--functionattrs",
          "--strip-dead-prototypes",
          "--mergereturn",
          "--guard-widening",
          "--ipsccp",
          "--loop-versioning-licm",
          "--die",
          "--always-inline",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+33.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--consthoist",
      "--globalopt",
      "--loop-unroll",
      "--early-cse",
      "--callsite-splitting",
      "--gvn-hoist",
      "--early-cse-memssa",
      "--loop-rotate",
      "--instcombine",
      "--break-crit-edges",
      "--loop-load-elim",
      "--memcpyopt",
      "--libcalls-shrinkwrap",
      "--bdce",
      "--globaldce",
      "--functionattrs",
      "--strip-dead-prototypes",
      "--mergereturn",
      "--guard-widening",
      "--ipsccp",
      "--loop-versioning-licm",
      "--die",
      "--always-inline",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+33.8%"
  }
}