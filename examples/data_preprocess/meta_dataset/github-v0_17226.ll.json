{
  "program_id": "github-v0_17226.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 38,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 1,
    "oneSuccessor": 38,
    "twoPred": 15,
    "twoPredOneSuc": 1,
    "twoEach": 13,
    "twoSuccessor": 15,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 67,
    "BeginPhi": 0,
    "BranchCount": 53,
    "returnInt": 12,
    "CriticalCount": 2,
    "NumEdges": 68,
    "const32Bit": 167,
    "const64Bit": 105,
    "numConstZeroes": 169,
    "numConstOnes": 49,
    "UncondBranches": 38,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 36,
    "NumAndInst": 1,
    "BlockMid": 6,
    "BlockLow": 61,
    "NumBitCastInst": 29,
    "NumBrInst": 53,
    "NumCallInst": 105,
    "NumGetElementPtrInst": 112,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 217,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 52,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 3,
    "TotalBlocks": 67,
    "TotalInsts": 674,
    "TotalMemInst": 522,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 305
  },
  "baseline_oz_instcount": 671,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--sroa",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--bdce",
    "--licm",
    "--ipsccp",
    "--bdce",
    "--newgvn",
    "--lower-expect",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--irce",
          "--sancov",
          "--loop-fusion",
          "--elim-avail-extern",
          "--flattencfg",
          "--tailcallelim",
          "--globalopt",
          "--slp-vectorizer",
          "--memcpyopt",
          "--rpo-functionattrs",
          "--coro-split",
          "--load-store-vectorizer",
          "--div-rem-pairs",
          "--lower-widenable-condition",
          "--reassociate",
          "--sroa",
          "--infer-address-spaces",
          "--strip-nondebug",
          "--constmerge",
          "--coro-cleanup",
          "--aggressive-instcombine",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--irce",
      "--sancov",
      "--loop-fusion",
      "--elim-avail-extern",
      "--flattencfg",
      "--tailcallelim",
      "--globalopt",
      "--slp-vectorizer",
      "--memcpyopt",
      "--rpo-functionattrs",
      "--coro-split",
      "--load-store-vectorizer",
      "--div-rem-pairs",
      "--lower-widenable-condition",
      "--reassociate",
      "--sroa",
      "--infer-address-spaces",
      "--strip-nondebug",
      "--constmerge",
      "--coro-cleanup",
      "--aggressive-instcombine",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}