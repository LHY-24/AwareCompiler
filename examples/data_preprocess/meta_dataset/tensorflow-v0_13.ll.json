{
  "program_id": "tensorflow-v0_13.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 5,
    "onePred": 35,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 15,
    "oneSuccessor": 24,
    "twoPred": 17,
    "twoPredOneSuc": 5,
    "twoEach": 8,
    "twoSuccessor": 30,
    "morePreds": 5,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 61,
    "BeginPhi": 6,
    "BranchCount": 54,
    "returnInt": 7,
    "CriticalCount": 28,
    "NumEdges": 87,
    "const32Bit": 163,
    "const64Bit": 140,
    "numConstZeroes": 170,
    "numConstOnes": 54,
    "UncondBranches": 24,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 15,
    "NumAndInst": 10,
    "BlockMid": 9,
    "BlockLow": 58,
    "NumBitCastInst": 55,
    "NumBrInst": 54,
    "NumCallInst": 86,
    "NumGetElementPtrInst": 73,
    "NumICmpInst": 38,
    "NumLShrInst": 7,
    "NumLoadInst": 72,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 10,
    "NumRetInst": 10,
    "NumSExtInst": 1,
    "NumSelectInst": 10,
    "NumShlInst": 3,
    "NumStoreInst": 48,
    "NumSubInst": 4,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 67,
    "TotalInsts": 518,
    "TotalMemInst": 294,
    "TotalFuncs": 37,
    "ArgsPhi": 23,
    "testUnary": 155
  },
  "baseline_oz_instcount": 520,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--sroa",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--prune-eh",
    "--early-cse",
    "-loop-reduce",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--loop-simplifycfg",
    "--mem2reg",
    "--prune-eh",
    "--instcombine",
    "--loop-deletion",
    "--elim-avail-extern",
    "--mldst-motion",
    "--jump-threading",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--prune-eh",
    "--early-cse",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--slsr",
    "--slp-vectorizer",
    "--bdce",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--ipsccp",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--loop-reroll",
          "--partially-inline-libcalls",
          "--elim-avail-extern",
          "--speculative-execution",
          "--loop-fusion",
          "--adce",
          "--newgvn",
          "--lower-guard-intrinsic",
          "--loop-versioning",
          "--insert-gcov-profiling",
          "--lower-matrix-intrinsics",
          "--load-store-vectorizer",
          "--gvn-hoist",
          "--lower-widenable-condition",
          "--loop-vectorize",
          "--deadargelim",
          "--instnamer",
          "--mergereturn",
          "--irce",
          "--coro-elide",
          "--coro-cleanup",
          "--lcssa",
          "--consthoist",
          "--guard-widening",
          "--instcombine",
          "--lower-constant-intrinsics",
          "--loop-simplifycfg",
          "--licm",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--loop-reroll",
      "--partially-inline-libcalls",
      "--elim-avail-extern",
      "--speculative-execution",
      "--loop-fusion",
      "--adce",
      "--newgvn",
      "--lower-guard-intrinsic",
      "--loop-versioning",
      "--insert-gcov-profiling",
      "--lower-matrix-intrinsics",
      "--load-store-vectorizer",
      "--gvn-hoist",
      "--lower-widenable-condition",
      "--loop-vectorize",
      "--deadargelim",
      "--instnamer",
      "--mergereturn",
      "--irce",
      "--coro-elide",
      "--coro-cleanup",
      "--lcssa",
      "--consthoist",
      "--guard-widening",
      "--instcombine",
      "--lower-constant-intrinsics",
      "--loop-simplifycfg",
      "--licm",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}