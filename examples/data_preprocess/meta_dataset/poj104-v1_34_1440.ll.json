{
  "program_id": "poj104-v1_34_1440.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 12,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 7,
    "CriticalCount": 0,
    "NumEdges": 24,
    "const32Bit": 20,
    "const64Bit": 6,
    "numConstZeroes": 5,
    "numConstOnes": 10,
    "UncondBranches": 12,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 21,
    "NumBitCastInst": 6,
    "NumBrInst": 18,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 18,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 5,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 23,
    "TotalInsts": 91,
    "TotalMemInst": 50,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 30
  },
  "baseline_oz_instcount": 51,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--simplifycfg",
    "--flattencfg",
    "--loop-simplifycfg",
    "--mergefunc",
    "--bdce",
    "--early-cse-memssa",
    "--lower-expect",
    "--bdce",
    "--loop-instsimplify",
    "--die",
    "--lower-expect",
    "--mergefunc",
    "--lower-expect",
    "--simplifycfg",
    "--sroa",
    "--ipsccp",
    "--lower-expect",
    "--aggressive-instcombine",
    "--inline",
    "--early-cse-memssa",
    "--licm",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-predication",
          "--sroa",
          "--inline",
          "--canonicalize-aliases",
          "--loop-unswitch",
          "--insert-gcov-profiling",
          "--load-store-vectorizer",
          "--sccp",
          "--strip",
          "--memcpyopt",
          "--constmerge",
          "--aggressive-instcombine",
          "--break-crit-edges",
          "--infer-address-spaces",
          "--bdce",
          "--jump-threading",
          "--loop-simplify",
          "--gvn-hoist",
          "--early-cse-memssa",
          "--adce",
          "--loop-distribute",
          "--irce",
          "--loop-instsimplify",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-predication",
      "--sroa",
      "--inline",
      "--canonicalize-aliases",
      "--loop-unswitch",
      "--insert-gcov-profiling",
      "--load-store-vectorizer",
      "--sccp",
      "--strip",
      "--memcpyopt",
      "--constmerge",
      "--aggressive-instcombine",
      "--break-crit-edges",
      "--infer-address-spaces",
      "--bdce",
      "--jump-threading",
      "--loop-simplify",
      "--gvn-hoist",
      "--early-cse-memssa",
      "--adce",
      "--loop-distribute",
      "--irce",
      "--loop-instsimplify",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}