{
  "program_id": "github-v0_29367.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 58,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 25,
    "oneSuccessor": 49,
    "twoPred": 24,
    "twoPredOneSuc": 13,
    "twoEach": 9,
    "twoSuccessor": 37,
    "morePreds": 4,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 91,
    "BeginPhi": 2,
    "BranchCount": 86,
    "returnInt": 11,
    "CriticalCount": 21,
    "NumEdges": 123,
    "const32Bit": 152,
    "const64Bit": 3,
    "numConstZeroes": 74,
    "numConstOnes": 49,
    "UncondBranches": 49,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 33,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 88,
    "NumBitCastInst": 7,
    "NumBrInst": 86,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 49,
    "NumICmpInst": 37,
    "NumLShrInst": 0,
    "NumLoadInst": 163,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 7,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 72,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 93,
    "TotalInsts": 489,
    "TotalMemInst": 349,
    "TotalFuncs": 15,
    "ArgsPhi": 4,
    "testUnary": 204
  },
  "baseline_oz_instcount": 493,
  "knowledge_base_entry": [
    "--sroa",
    "--globalopt",
    "--reassociate",
    "--instsimplify",
    "--reassociate",
    "--gvn",
    "--flattencfg",
    "--mergefunc",
    "--lower-expect",
    "--dce",
    "--sroa",
    "--dce",
    "--sccp",
    "--elim-avail-extern",
    "--mldst-motion",
    "--jump-threading",
    "--lower-expect",
    "--jump-threading",
    "--die",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--called-value-propagation",
          "--mldst-motion",
          "--redundant-dbg-inst-elim",
          "--attributor",
          "--ipconstprop",
          "--inline",
          "--separate-const-offset-from-gep",
          "--callsite-splitting",
          "--strip-dead-prototypes"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--called-value-propagation",
      "--mldst-motion",
      "--redundant-dbg-inst-elim",
      "--attributor",
      "--ipconstprop",
      "--inline",
      "--separate-const-offset-from-gep",
      "--callsite-splitting",
      "--strip-dead-prototypes"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}