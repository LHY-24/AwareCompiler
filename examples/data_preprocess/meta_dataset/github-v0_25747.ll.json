{
  "program_id": "github-v0_25747.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 1,
    "oneSuccessor": 10,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 16,
    "CriticalCount": 1,
    "NumEdges": 18,
    "const32Bit": 21,
    "const64Bit": 7,
    "numConstZeroes": 17,
    "numConstOnes": 12,
    "UncondBranches": 10,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 13,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 16,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 17,
    "TotalInsts": 100,
    "TotalMemInst": 66,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 37
  },
  "baseline_oz_instcount": 101,
  "knowledge_base_entry": [
    "--loop-interchange",
    "--newgvn",
    "--indvars",
    "--instcombine",
    "--lower-expect",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--reassociate",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--loop-unswitch",
          "--coro-cleanup",
          "--slsr",
          "--slp-vectorizer",
          "--coro-elide",
          "--indvars",
          "--mergeicmps",
          "--mergereturn",
          "--lower-expect",
          "--inferattrs",
          "--globaldce",
          "--loop-idiom",
          "--early-cse",
          "--redundant-dbg-inst-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--loop-unswitch",
      "--coro-cleanup",
      "--slsr",
      "--slp-vectorizer",
      "--coro-elide",
      "--indvars",
      "--mergeicmps",
      "--mergereturn",
      "--lower-expect",
      "--inferattrs",
      "--globaldce",
      "--loop-idiom",
      "--early-cse",
      "--redundant-dbg-inst-elim"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}