{
  "program_id": "linux-v0_10787.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 33,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 9,
    "oneSuccessor": 32,
    "twoPred": 17,
    "twoPredOneSuc": 8,
    "twoEach": 1,
    "twoSuccessor": 19,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 21,
    "CriticalCount": 9,
    "NumEdges": 70,
    "const32Bit": 249,
    "const64Bit": 5,
    "numConstZeroes": 128,
    "numConstOnes": 93,
    "UncondBranches": 32,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 69,
    "NumAndInst": 6,
    "BlockMid": 15,
    "BlockLow": 57,
    "NumBitCastInst": 6,
    "NumBrInst": 51,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 67,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 162,
    "NumMulInst": 3,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 2,
    "NumStoreInst": 90,
    "NumSubInst": 1,
    "NumTruncInst": 13,
    "NumXorInst": 1,
    "NumZExtInst": 11,
    "TotalBlocks": 72,
    "TotalInsts": 596,
    "TotalMemInst": 450,
    "TotalFuncs": 34,
    "ArgsPhi": 0,
    "testUnary": 261
  },
  "baseline_oz_instcount": 596,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--prune-eh",
    "--instsimplify",
    "--sroa",
    "--lower-constant-intrinsics",
    "--gvn",
    "--reassociate",
    "--jump-threading",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--coro-early",
          "--scalarizer",
          "--mergereturn",
          "--partially-inline-libcalls",
          "--sancov",
          "--dse",
          "--loop-simplifycfg",
          "--simplifycfg",
          "--gvn-hoist",
          "--constmerge",
          "--name-anon-globals",
          "--early-cse-memssa",
          "--ipconstprop",
          "--loop-distribute",
          "--aggressive-instcombine",
          "--indvars",
          "--redundant-dbg-inst-elim",
          "--lower-widenable-condition",
          "--attributor",
          "--loop-sink",
          "--lower-expect",
          "--sccp",
          "--float2int",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--coro-early",
      "--scalarizer",
      "--mergereturn",
      "--partially-inline-libcalls",
      "--sancov",
      "--dse",
      "--loop-simplifycfg",
      "--simplifycfg",
      "--gvn-hoist",
      "--constmerge",
      "--name-anon-globals",
      "--early-cse-memssa",
      "--ipconstprop",
      "--loop-distribute",
      "--aggressive-instcombine",
      "--indvars",
      "--redundant-dbg-inst-elim",
      "--lower-widenable-condition",
      "--attributor",
      "--loop-sink",
      "--lower-expect",
      "--sccp",
      "--float2int",
      "--adce"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}