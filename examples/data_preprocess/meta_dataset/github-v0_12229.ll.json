{
  "program_id": "github-v0_12229.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 36,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 4,
    "oneSuccessor": 33,
    "twoPred": 19,
    "twoPredOneSuc": 2,
    "twoEach": 15,
    "twoSuccessor": 22,
    "morePreds": 1,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 5,
    "BranchCount": 55,
    "returnInt": 6,
    "CriticalCount": 8,
    "NumEdges": 77,
    "const32Bit": 81,
    "const64Bit": 19,
    "numConstZeroes": 23,
    "numConstOnes": 41,
    "UncondBranches": 33,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 53,
    "NumBitCastInst": 6,
    "NumBrInst": 55,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 115,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 5,
    "NumRetInst": 2,
    "NumSExtInst": 18,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 46,
    "NumSubInst": 6,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 58,
    "TotalInsts": 353,
    "TotalMemInst": 229,
    "TotalFuncs": 12,
    "ArgsPhi": 10,
    "testUnary": 158
  },
  "baseline_oz_instcount": 354,
  "knowledge_base_entry": [
    "--die",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--instcombine",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--load-store-vectorizer",
          "--nary-reassociate",
          "--strip-nondebug",
          "--guard-widening",
          "--lcssa",
          "--sccp",
          "--loop-versioning",
          "--add-discriminators",
          "--lower-matrix-intrinsics",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--load-store-vectorizer",
      "--nary-reassociate",
      "--strip-nondebug",
      "--guard-widening",
      "--lcssa",
      "--sccp",
      "--loop-versioning",
      "--add-discriminators",
      "--lower-matrix-intrinsics",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}