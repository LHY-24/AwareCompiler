{
  "program_id": "github-v0_1298.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 0,
    "oneSuccessor": 7,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 1,
    "CriticalCount": 12,
    "NumEdges": 23,
    "const32Bit": 45,
    "const64Bit": 3,
    "numConstZeroes": 9,
    "numConstOnes": 26,
    "UncondBranches": 7,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 20,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 9,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 11,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 27,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 18,
    "TotalInsts": 83,
    "TotalMemInst": 62,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 32
  },
  "baseline_oz_instcount": 83,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--gvn",
    "--loop-instsimplify",
    "--globalopt",
    "--mergefunc",
    "--instsimplify",
    "--sroa",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--licm",
    "--sroa",
    "--slp-vectorizer",
    "--jump-threading",
    "--nary-reassociate",
    "--jump-threading",
    "--sccp",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--called-value-propagation",
          "--instnamer",
          "--mergefunc",
          "--loop-idiom",
          "--simplifycfg",
          "--globaldce",
          "--lower-matrix-intrinsics",
          "--loop-vectorize",
          "--loop-load-elim",
          "--loop-unroll-and-jam",
          "--globalsplit",
          "--argpromotion",
          "--strip-debug-declare",
          "--bdce",
          "--gvn-hoist",
          "--constmerge",
          "--loop-simplifycfg",
          "--lower-expect",
          "--newgvn",
          "--loop-sink",
          "--functionattrs",
          "--lowerinvoke",
          "--elim-avail-extern",
          "--indvars",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--called-value-propagation",
      "--instnamer",
      "--mergefunc",
      "--loop-idiom",
      "--simplifycfg",
      "--globaldce",
      "--lower-matrix-intrinsics",
      "--loop-vectorize",
      "--loop-load-elim",
      "--loop-unroll-and-jam",
      "--globalsplit",
      "--argpromotion",
      "--strip-debug-declare",
      "--bdce",
      "--gvn-hoist",
      "--constmerge",
      "--loop-simplifycfg",
      "--lower-expect",
      "--newgvn",
      "--loop-sink",
      "--functionattrs",
      "--lowerinvoke",
      "--elim-avail-extern",
      "--indvars",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+6.0%"
  }
}