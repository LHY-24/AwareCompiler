{
  "program_id": "github-v0_17348.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 2,
    "oneSuccessor": 7,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 5,
    "CriticalCount": 3,
    "NumEdges": 17,
    "const32Bit": 58,
    "const64Bit": 4,
    "numConstZeroes": 32,
    "numConstOnes": 27,
    "UncondBranches": 7,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 17,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 11,
    "NumBitCastInst": 6,
    "NumBrInst": 12,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 16,
    "TotalInsts": 151,
    "TotalMemInst": 116,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 72
  },
  "baseline_oz_instcount": 153,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--reassociate",
    "--correlated-propagation",
    "--reassociate",
    "--correlated-propagation",
    "--globalopt",
    "--flattencfg",
    "--inline",
    "--aggressive-instcombine",
    "--instsimplify",
    "--dce",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--simplifycfg",
    "--loop-reroll",
    "--early-cse-memssa",
    "--loop-fusion",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipconstprop",
          "--loop-instsimplify",
          "--alignment-from-assumptions",
          "--loop-deletion",
          "--add-discriminators",
          "--mergeicmps",
          "--instnamer",
          "--ee-instrument",
          "--sccp",
          "--indvars",
          "--globaldce",
          "--die",
          "--loop-versioning",
          "--lower-widenable-condition",
          "--irce",
          "--loweratomic",
          "--always-inline",
          "--barrier",
          "--simplifycfg",
          "--hotcoldsplit",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipconstprop",
      "--loop-instsimplify",
      "--alignment-from-assumptions",
      "--loop-deletion",
      "--add-discriminators",
      "--mergeicmps",
      "--instnamer",
      "--ee-instrument",
      "--sccp",
      "--indvars",
      "--globaldce",
      "--die",
      "--loop-versioning",
      "--lower-widenable-condition",
      "--irce",
      "--loweratomic",
      "--always-inline",
      "--barrier",
      "--simplifycfg",
      "--hotcoldsplit",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}