{
  "program_id": "github-v0_16283.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 51,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 12,
    "oneSuccessor": 45,
    "twoPred": 17,
    "twoPredOneSuc": 6,
    "twoEach": 9,
    "twoSuccessor": 25,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 74,
    "BeginPhi": 0,
    "BranchCount": 70,
    "returnInt": 9,
    "CriticalCount": 11,
    "NumEdges": 101,
    "const32Bit": 87,
    "const64Bit": 0,
    "numConstZeroes": 18,
    "numConstOnes": 60,
    "UncondBranches": 45,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 48,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 68,
    "NumBitCastInst": 0,
    "NumBrInst": 70,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 177,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 79,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 74,
    "TotalInsts": 478,
    "TotalMemInst": 344,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 240
  },
  "baseline_oz_instcount": 479,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--instcombine",
    "--newgvn",
    "--flattencfg",
    "--early-cse",
    "--sccp",
    "--inline",
    "--slp-vectorizer",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--redundant-dbg-inst-elim",
          "--early-cse-memssa",
          "--loweratomic",
          "--coro-elide",
          "--tailcallelim",
          "--lower-guard-intrinsic",
          "--separate-const-offset-from-gep",
          "--deadargelim",
          "--mergereturn",
          "--scalarizer",
          "--post-inline-ee-instrument",
          "--argpromotion",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--redundant-dbg-inst-elim",
      "--early-cse-memssa",
      "--loweratomic",
      "--coro-elide",
      "--tailcallelim",
      "--lower-guard-intrinsic",
      "--separate-const-offset-from-gep",
      "--deadargelim",
      "--mergereturn",
      "--scalarizer",
      "--post-inline-ee-instrument",
      "--argpromotion",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}