{
  "program_id": "github-v0_49115.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 75,
    "onePredOneSuc": 53,
    "onePredTwoSuc": 22,
    "oneSuccessor": 64,
    "twoPred": 27,
    "twoPredOneSuc": 9,
    "twoEach": 17,
    "twoSuccessor": 43,
    "morePreds": 5,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 107,
    "BeginPhi": 4,
    "BranchCount": 107,
    "returnInt": 9,
    "CriticalCount": 13,
    "NumEdges": 150,
    "const32Bit": 204,
    "const64Bit": 20,
    "numConstZeroes": 99,
    "numConstOnes": 89,
    "UncondBranches": 64,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 45,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 102,
    "NumBitCastInst": 0,
    "NumBrInst": 107,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 62,
    "NumICmpInst": 45,
    "NumLShrInst": 0,
    "NumLoadInst": 208,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 4,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 119,
    "NumSubInst": 7,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 2,
    "TotalBlocks": 111,
    "TotalInsts": 634,
    "TotalMemInst": 447,
    "TotalFuncs": 8,
    "ArgsPhi": 8,
    "testUnary": 259
  },
  "baseline_oz_instcount": 637,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--reassociate",
    "--early-cse",
    "--adce",
    "--ipsccp",
    "--lower-expect",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--coro-elide",
          "--load-store-vectorizer",
          "--coro-cleanup",
          "--libcalls-shrinkwrap",
          "--constmerge",
          "--prune-eh",
          "--loop-distribute",
          "--simplifycfg",
          "--post-inline-ee-instrument",
          "--instnamer",
          "--float2int",
          "--barrier",
          "--lcssa",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--coro-elide",
      "--load-store-vectorizer",
      "--coro-cleanup",
      "--libcalls-shrinkwrap",
      "--constmerge",
      "--prune-eh",
      "--loop-distribute",
      "--simplifycfg",
      "--post-inline-ee-instrument",
      "--instnamer",
      "--float2int",
      "--barrier",
      "--lcssa",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}