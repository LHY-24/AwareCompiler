{
  "program_id": "github-v0_43896.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 43,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 13,
    "oneSuccessor": 35,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 5,
    "twoSuccessor": 21,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 0,
    "BranchCount": 56,
    "returnInt": 10,
    "CriticalCount": 8,
    "NumEdges": 81,
    "const32Bit": 86,
    "const64Bit": 6,
    "numConstZeroes": 31,
    "numConstOnes": 42,
    "UncondBranches": 35,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 17,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 52,
    "NumBitCastInst": 0,
    "NumBrInst": 56,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 160,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 43,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 48,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 59,
    "TotalInsts": 422,
    "TotalMemInst": 280,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 221
  },
  "baseline_oz_instcount": 424,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--lower-expect",
    "--prune-eh",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--adce",
    "--elim-avail-extern",
    "--mem2reg",
    "--loop-simplifycfg",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--strip-debug-declare",
          "--constmerge",
          "--loop-idiom",
          "--mergeicmps",
          "--indvars",
          "--slsr",
          "--strip-nondebug",
          "--lcssa",
          "--lower-matrix-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--strip-debug-declare",
      "--constmerge",
      "--loop-idiom",
      "--mergeicmps",
      "--indvars",
      "--slsr",
      "--strip-nondebug",
      "--lcssa",
      "--lower-matrix-intrinsics"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}