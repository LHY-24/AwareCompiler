{
  "program_id": "linux-v0_1693.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 90,
    "onePredOneSuc": 59,
    "onePredTwoSuc": 30,
    "oneSuccessor": 76,
    "twoPred": 27,
    "twoPredOneSuc": 12,
    "twoEach": 8,
    "twoSuccessor": 46,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 151,
    "BeginPhi": 1,
    "BranchCount": 121,
    "returnInt": 23,
    "CriticalCount": 16,
    "NumEdges": 171,
    "const32Bit": 355,
    "const64Bit": 26,
    "numConstZeroes": 165,
    "numConstOnes": 132,
    "UncondBranches": 76,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 93,
    "NumAndInst": 12,
    "BlockMid": 15,
    "BlockLow": 137,
    "NumBitCastInst": 25,
    "NumBrInst": 121,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 93,
    "NumICmpInst": 48,
    "NumLShrInst": 1,
    "NumLoadInst": 272,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 29,
    "NumSExtInst": 9,
    "NumSelectInst": 1,
    "NumShlInst": 4,
    "NumStoreInst": 159,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 10,
    "NumZExtInst": 18,
    "TotalBlocks": 152,
    "TotalInsts": 983,
    "TotalMemInst": 680,
    "TotalFuncs": 54,
    "ArgsPhi": 2,
    "testUnary": 430
  },
  "baseline_oz_instcount": 987,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--lower-expect",
    "--dse",
    "--jump-threading",
    "--slsr",
    "--early-cse",
    "--aggressive-instcombine",
    "--flattencfg",
    "--ipsccp",
    "--simplifycfg",
    "--adce",
    "--instsimplify",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--gvn",
    "--slp-vectorizer",
    "--die",
    "--dse",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse-memssa",
          "--slp-vectorizer",
          "--instcombine",
          "--loop-vectorize",
          "--slsr",
          "--loop-distribute",
          "--libcalls-shrinkwrap",
          "--aggressive-instcombine",
          "--functionattrs",
          "--coro-early",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse-memssa",
      "--slp-vectorizer",
      "--instcombine",
      "--loop-vectorize",
      "--slsr",
      "--loop-distribute",
      "--libcalls-shrinkwrap",
      "--aggressive-instcombine",
      "--functionattrs",
      "--coro-early",
      "--sancov"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}