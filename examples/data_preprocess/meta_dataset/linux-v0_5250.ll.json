{
  "program_id": "linux-v0_5250.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 15,
    "oneSuccessor": 34,
    "twoPred": 10,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 22,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 61,
    "BeginPhi": 0,
    "BranchCount": 56,
    "returnInt": 2,
    "CriticalCount": 11,
    "NumEdges": 82,
    "const32Bit": 286,
    "const64Bit": 3,
    "numConstZeroes": 139,
    "numConstOnes": 44,
    "UncondBranches": 34,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 21,
    "NumAndInst": 1,
    "BlockMid": 6,
    "BlockLow": 55,
    "NumBitCastInst": 1,
    "NumBrInst": 56,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 112,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 160,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 77,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 61,
    "TotalInsts": 458,
    "TotalMemInst": 373,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 182
  },
  "baseline_oz_instcount": 462,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--early-cse",
    "--early-cse",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--ipsccp",
    "--simplifycfg",
    "--flattencfg",
    "--adce",
    "--jump-threading",
    "--slp-vectorizer",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--lcssa",
          "--add-discriminators",
          "--post-inline-ee-instrument",
          "--loop-data-prefetch",
          "--instcombine",
          "--redundant-dbg-inst-elim",
          "--infer-address-spaces",
          "--lowerinvoke",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--lcssa",
      "--add-discriminators",
      "--post-inline-ee-instrument",
      "--loop-data-prefetch",
      "--instcombine",
      "--redundant-dbg-inst-elim",
      "--infer-address-spaces",
      "--lowerinvoke",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}