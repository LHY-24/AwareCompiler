{
  "program_id": "github-v0_16887.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 11,
    "oneSuccessor": 18,
    "twoPred": 4,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 14,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 35,
    "BeginPhi": 0,
    "BranchCount": 32,
    "returnInt": 18,
    "CriticalCount": 4,
    "NumEdges": 46,
    "const32Bit": 70,
    "const64Bit": 2,
    "numConstZeroes": 53,
    "numConstOnes": 23,
    "UncondBranches": 18,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 33,
    "NumBitCastInst": 2,
    "NumBrInst": 32,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 35,
    "TotalInsts": 161,
    "TotalMemInst": 110,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 42
  },
  "baseline_oz_instcount": 162,
  "knowledge_base_entry": [
    "--lower-expect",
    "--mem2reg",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--globalopt",
    "--gvn-hoist",
    "--dce",
    "--early-cse",
    "--reassociate",
    "--instcombine",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--loop-versioning",
          "--div-rem-pairs",
          "--loop-data-prefetch",
          "--cross-dso-cfi",
          "--ipsccp",
          "--ipconstprop",
          "--lowerinvoke",
          "--coro-elide",
          "--die",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--loop-versioning",
      "--div-rem-pairs",
      "--loop-data-prefetch",
      "--cross-dso-cfi",
      "--ipsccp",
      "--ipconstprop",
      "--lowerinvoke",
      "--coro-elide",
      "--die",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}