{
  "program_id": "linux-v0_7897.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 33,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 9,
    "oneSuccessor": 26,
    "twoPred": 9,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 17,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 54,
    "BeginPhi": 0,
    "BranchCount": 43,
    "returnInt": 13,
    "CriticalCount": 4,
    "NumEdges": 60,
    "const32Bit": 241,
    "const64Bit": 29,
    "numConstZeroes": 104,
    "numConstOnes": 72,
    "UncondBranches": 26,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 47,
    "NumAndInst": 6,
    "BlockMid": 11,
    "BlockLow": 43,
    "NumBitCastInst": 5,
    "NumBrInst": 43,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 100,
    "NumICmpInst": 17,
    "NumLShrInst": 1,
    "NumLoadInst": 179,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 102,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 2,
    "NumZExtInst": 6,
    "TotalBlocks": 54,
    "TotalInsts": 558,
    "TotalMemInst": 455,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 243
  },
  "baseline_oz_instcount": 558,
  "knowledge_base_entry": [
    "--loweratomic",
    "--aggressive-instcombine",
    "--adce",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--globalopt",
    "--reassociate",
    "--dse",
    "--simplifycfg",
    "--bdce",
    "--jump-threading",
    "--early-cse-memssa",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--lowerinvoke",
          "--newgvn",
          "--loop-rotate",
          "--loop-instsimplify",
          "--loop-sink",
          "--div-rem-pairs",
          "--rpo-functionattrs",
          "--inline",
          "--lcssa",
          "--aggressive-instcombine",
          "--called-value-propagation",
          "--dce",
          "--loop-versioning",
          "--constprop",
          "--alignment-from-assumptions",
          "--globalsplit",
          "--die",
          "--ipconstprop",
          "--loop-load-elim",
          "--lower-constant-intrinsics",
          "--strip-nondebug",
          "--irce",
          "--loop-vectorize",
          "--correlated-propagation",
          "--redundant-dbg-inst-elim",
          "--licm",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--lowerinvoke",
      "--newgvn",
      "--loop-rotate",
      "--loop-instsimplify",
      "--loop-sink",
      "--div-rem-pairs",
      "--rpo-functionattrs",
      "--inline",
      "--lcssa",
      "--aggressive-instcombine",
      "--called-value-propagation",
      "--dce",
      "--loop-versioning",
      "--constprop",
      "--alignment-from-assumptions",
      "--globalsplit",
      "--die",
      "--ipconstprop",
      "--loop-load-elim",
      "--lower-constant-intrinsics",
      "--strip-nondebug",
      "--irce",
      "--loop-vectorize",
      "--correlated-propagation",
      "--redundant-dbg-inst-elim",
      "--licm",
      "--coro-split"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}