{
  "program_id": "github-v0_42486.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 2,
    "onePred": 4,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 0,
    "oneSuccessor": 4,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 5,
    "BeginPhi": 5,
    "BranchCount": 9,
    "returnInt": 6,
    "CriticalCount": 6,
    "NumEdges": 14,
    "const32Bit": 23,
    "const64Bit": 0,
    "numConstZeroes": 8,
    "numConstOnes": 6,
    "UncondBranches": 4,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 21,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 9,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 6,
    "NumMulInst": 9,
    "NumOrInst": 1,
    "NumPHIInst": 12,
    "NumRetInst": 1,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 1,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 95,
    "TotalMemInst": 23,
    "TotalFuncs": 4,
    "ArgsPhi": 24,
    "testUnary": 18
  },
  "baseline_oz_instcount": 100,
  "knowledge_base_entry": [
    "--gvn",
    "--gvn-hoist",
    "--dce",
    "--licm",
    "--reassociate",
    "--correlated-propagation",
    "--loop-reroll",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--gvn",
    "--early-cse",
    "--ipsccp",
    "--inline",
    "--adce",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--strip-dead-prototypes",
          "--sancov",
          "--rewrite-statepoints-for-gc",
          "--gvn-hoist",
          "--loweratomic",
          "--break-crit-edges",
          "--div-rem-pairs",
          "--pgo-memop-opt",
          "--consthoist",
          "--speculative-execution",
          "--constprop",
          "--alignment-from-assumptions",
          "--argpromotion",
          "--loop-instsimplify",
          "--ee-instrument",
          "--functionattrs",
          "--simplifycfg",
          "--loop-simplify",
          "--reassociate",
          "--ipconstprop",
          "--float2int",
          "--insert-gcov-profiling",
          "--redundant-dbg-inst-elim",
          "--strip-debug-declare",
          "--always-inline",
          "--dse",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--strip-dead-prototypes",
      "--sancov",
      "--rewrite-statepoints-for-gc",
      "--gvn-hoist",
      "--loweratomic",
      "--break-crit-edges",
      "--div-rem-pairs",
      "--pgo-memop-opt",
      "--consthoist",
      "--speculative-execution",
      "--constprop",
      "--alignment-from-assumptions",
      "--argpromotion",
      "--loop-instsimplify",
      "--ee-instrument",
      "--functionattrs",
      "--simplifycfg",
      "--loop-simplify",
      "--reassociate",
      "--ipconstprop",
      "--float2int",
      "--insert-gcov-profiling",
      "--redundant-dbg-inst-elim",
      "--strip-debug-declare",
      "--always-inline",
      "--dse",
      "--dce"
    ],
    "performance_vs_Oz": "+8.0%"
  }
}