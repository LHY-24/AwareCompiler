{
  "program_id": "github-v0_49907.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 2,
    "onePred": 5,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 7,
    "BeginPhi": 5,
    "BranchCount": 11,
    "returnInt": 2,
    "CriticalCount": 7,
    "NumEdges": 17,
    "const32Bit": 48,
    "const64Bit": 60,
    "numConstZeroes": 53,
    "numConstOnes": 16,
    "UncondBranches": 5,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 32,
    "NumAllocaInst": 3,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 8,
    "NumBitCastInst": 3,
    "NumBrInst": 11,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 22,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 11,
    "NumRetInst": 1,
    "NumSExtInst": 12,
    "NumSelectInst": 6,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 12,
    "TotalInsts": 191,
    "TotalMemInst": 83,
    "TotalFuncs": 5,
    "ArgsPhi": 22,
    "testUnary": 55
  },
  "baseline_oz_instcount": 182,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--dse",
    "--slp-vectorizer",
    "--indvars",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--flattencfg",
    "--sroa",
    "--instcombine",
    "--loop-instsimplify",
    "--licm",
    "--dce",
    "--load-store-vectorizer",
    "--gvn",
    "--early-cse",
    "--early-cse",
    "--newgvn",
    "--loop-simplifycfg",
    "--lower-expect",
    "--licm",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--dce",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--loop-fusion",
    "--newgvn",
    "--loop-rotate",
    "--elim-avail-extern",
    "--dce",
    "--gvn",
    "--inline",
    "--loop-instsimplify",
    "--bdce",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--die",
    "--mem2reg",
    "--dse",
    "--instcombine",
    "--ipsccp",
    "--sccp",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unswitch",
          "--lower-constant-intrinsics",
          "--coro-split",
          "--loop-fusion",
          "--dse",
          "--canonicalize-aliases",
          "--mergefunc",
          "--tailcallelim",
          "--partially-inline-libcalls",
          "--loop-simplify",
          "--forceattrs",
          "--flattencfg",
          "--sroa",
          "--speculative-execution",
          "--loop-predication",
          "--simplifycfg",
          "--pgo-memop-opt",
          "--prune-eh",
          "--strip",
          "--ipconstprop",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+10.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unswitch",
      "--lower-constant-intrinsics",
      "--coro-split",
      "--loop-fusion",
      "--dse",
      "--canonicalize-aliases",
      "--mergefunc",
      "--tailcallelim",
      "--partially-inline-libcalls",
      "--loop-simplify",
      "--forceattrs",
      "--flattencfg",
      "--sroa",
      "--speculative-execution",
      "--loop-predication",
      "--simplifycfg",
      "--pgo-memop-opt",
      "--prune-eh",
      "--strip",
      "--ipconstprop",
      "--newgvn"
    ],
    "performance_vs_Oz": "+10.4%"
  }
}