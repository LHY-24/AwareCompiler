{
  "program_id": "poj104-v1_61_1097.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 7,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 6,
    "CriticalCount": 2,
    "NumEdges": 17,
    "const32Bit": 28,
    "const64Bit": 5,
    "numConstZeroes": 9,
    "numConstOnes": 18,
    "UncondBranches": 7,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 22,
    "NumBitCastInst": 5,
    "NumBrInst": 12,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 23,
    "TotalInsts": 132,
    "TotalMemInst": 92,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 53
  },
  "baseline_oz_instcount": 43,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--reassociate",
    "--sroa",
    "--reassociate",
    "--simplifycfg",
    "--slsr",
    "--slp-vectorizer",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--prune-eh",
    "--loop-simplifycfg",
    "--early-cse-memssa",
    "--dce",
    "--loop-instsimplify",
    "--mem2reg",
    "--newgvn",
    "--nary-reassociate",
    "--slsr",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--sroa",
    "--gvn",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--slsr",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--jump-threading",
    "--mem2reg",
    "--instsimplify",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--instsimplify",
    "--sccp",
    "--reassociate",
    "--inline",
    "--newgvn",
    "--slp-vectorizer",
    "--jump-threading",
    "--adce",
    "--inline",
    "--load-store-vectorizer",
    "--inline",
    "--jump-threading",
    "--slsr",
    "-loop-reduce",
    "--early-cse-memssa",
    "--simplifycfg",
    "--slp-vectorizer",
    "--instsimplify",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simplifycfg",
          "--reassociate",
          "--mergefunc",
          "--elim-avail-extern",
          "--jump-threading",
          "--alignment-from-assumptions",
          "--attributor",
          "--strip-debug-declare",
          "--dce",
          "--redundant-dbg-inst-elim",
          "--loop-versioning-licm",
          "--slp-vectorizer",
          "--coro-split",
          "--instcombine",
          "--rpo-functionattrs",
          "--loop-instsimplify",
          "--prune-eh",
          "--die",
          "--post-inline-ee-instrument",
          "--libcalls-shrinkwrap",
          "--constmerge",
          "--globalopt",
          "--loop-fusion",
          "--inline",
          "--loop-deletion",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simplifycfg",
      "--reassociate",
      "--mergefunc",
      "--elim-avail-extern",
      "--jump-threading",
      "--alignment-from-assumptions",
      "--attributor",
      "--strip-debug-declare",
      "--dce",
      "--redundant-dbg-inst-elim",
      "--loop-versioning-licm",
      "--slp-vectorizer",
      "--coro-split",
      "--instcombine",
      "--rpo-functionattrs",
      "--loop-instsimplify",
      "--prune-eh",
      "--die",
      "--post-inline-ee-instrument",
      "--libcalls-shrinkwrap",
      "--constmerge",
      "--globalopt",
      "--loop-fusion",
      "--inline",
      "--loop-deletion",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+4.7%"
  }
}