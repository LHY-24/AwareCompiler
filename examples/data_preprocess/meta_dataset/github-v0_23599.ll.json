{
  "program_id": "github-v0_23599.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 4,
    "oneSuccessor": 11,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 1,
    "CriticalCount": 6,
    "NumEdges": 27,
    "const32Bit": 19,
    "const64Bit": 0,
    "numConstZeroes": 2,
    "numConstOnes": 11,
    "UncondBranches": 11,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 21,
    "NumBitCastInst": 0,
    "NumBrInst": 19,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 21,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 21,
    "TotalInsts": 91,
    "TotalMemInst": 46,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 42
  },
  "baseline_oz_instcount": 91,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--dse",
    "--early-cse-memssa",
    "--licm",
    "--sccp",
    "--adce",
    "--mergefunc",
    "--globalopt",
    "--instsimplify",
    "--reassociate",
    "--dce",
    "--inline",
    "--memcpyopt",
    "--mem2reg",
    "--licm",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--attributor",
          "--mergefunc",
          "--correlated-propagation",
          "--early-cse",
          "--sroa",
          "--speculative-execution",
          "--sancov",
          "--ee-instrument",
          "--aggressive-instcombine",
          "--jump-threading",
          "--scalarizer",
          "--loop-load-elim",
          "--hotcoldsplit",
          "--globaldce",
          "--lcssa",
          "--loop-instsimplify",
          "--globalopt",
          "--insert-gcov-profiling",
          "--partial-inliner",
          "--loop-predication",
          "--sink",
          "--lower-widenable-condition",
          "--dse",
          "--alignment-from-assumptions",
          "--coro-early",
          "--indvars",
          "--early-cse-memssa",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--attributor",
      "--mergefunc",
      "--correlated-propagation",
      "--early-cse",
      "--sroa",
      "--speculative-execution",
      "--sancov",
      "--ee-instrument",
      "--aggressive-instcombine",
      "--jump-threading",
      "--scalarizer",
      "--loop-load-elim",
      "--hotcoldsplit",
      "--globaldce",
      "--lcssa",
      "--loop-instsimplify",
      "--globalopt",
      "--insert-gcov-profiling",
      "--partial-inliner",
      "--loop-predication",
      "--sink",
      "--lower-widenable-condition",
      "--dse",
      "--alignment-from-assumptions",
      "--coro-early",
      "--indvars",
      "--early-cse-memssa",
      "--licm"
    ],
    "performance_vs_Oz": "+4.4%"
  }
}