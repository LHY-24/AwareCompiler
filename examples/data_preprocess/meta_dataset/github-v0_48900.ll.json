{
  "program_id": "github-v0_48900.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 2,
    "oneSuccessor": 12,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 26,
    "const32Bit": 31,
    "const64Bit": 25,
    "numConstZeroes": 27,
    "numConstOnes": 26,
    "UncondBranches": 12,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 19,
    "NumBitCastInst": 4,
    "NumBrInst": 19,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 15,
    "TotalBlocks": 23,
    "TotalInsts": 162,
    "TotalMemInst": 98,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 75
  },
  "baseline_oz_instcount": 162,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--jump-threading",
    "--loop-deletion",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--load-store-vectorizer",
          "--lowerswitch",
          "--simplifycfg",
          "--mem2reg",
          "--lower-widenable-condition",
          "--lowerinvoke",
          "--post-inline-ee-instrument",
          "--aggressive-instcombine",
          "--loop-load-elim",
          "--argpromotion",
          "--globalsplit",
          "--mldst-motion",
          "--lower-constant-intrinsics",
          "--loop-deletion",
          "--add-discriminators",
          "--mergeicmps",
          "--name-anon-globals",
          "--simple-loop-unswitch",
          "--elim-avail-extern",
          "--ipsccp",
          "--strip-dead-prototypes",
          "--loop-fusion",
          "--loop-distribute",
          "-loop-reduce",
          "--cross-dso-cfi",
          "--loop-versioning",
          "--newgvn",
          "--mergereturn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--load-store-vectorizer",
      "--lowerswitch",
      "--simplifycfg",
      "--mem2reg",
      "--lower-widenable-condition",
      "--lowerinvoke",
      "--post-inline-ee-instrument",
      "--aggressive-instcombine",
      "--loop-load-elim",
      "--argpromotion",
      "--globalsplit",
      "--mldst-motion",
      "--lower-constant-intrinsics",
      "--loop-deletion",
      "--add-discriminators",
      "--mergeicmps",
      "--name-anon-globals",
      "--simple-loop-unswitch",
      "--elim-avail-extern",
      "--ipsccp",
      "--strip-dead-prototypes",
      "--loop-fusion",
      "--loop-distribute",
      "-loop-reduce",
      "--cross-dso-cfi",
      "--loop-versioning",
      "--newgvn",
      "--mergereturn"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}