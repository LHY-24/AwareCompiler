{
  "program_id": "linux-v0_12261.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 35,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 4,
    "oneSuccessor": 35,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 11,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 66,
    "BeginPhi": 0,
    "BranchCount": 45,
    "returnInt": 24,
    "CriticalCount": 3,
    "NumEdges": 67,
    "const32Bit": 197,
    "const64Bit": 19,
    "numConstZeroes": 95,
    "numConstOnes": 75,
    "UncondBranches": 35,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 50,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 58,
    "NumBitCastInst": 10,
    "NumBrInst": 45,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 136,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 75,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 66,
    "TotalInsts": 464,
    "TotalMemInst": 366,
    "TotalFuncs": 63,
    "ArgsPhi": 0,
    "testUnary": 203
  },
  "baseline_oz_instcount": 465,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--instcombine",
    "--newgvn",
    "--memcpyopt",
    "--early-cse",
    "--slsr",
    "--loop-reroll",
    "-loop-reduce",
    "--simplifycfg",
    "--dce",
    "--early-cse-memssa",
    "--gvn",
    "--gvn",
    "--slsr",
    "--indvars",
    "-loop-reduce",
    "--slp-vectorizer",
    "--dse",
    "--inline",
    "--bdce",
    "--mem2reg",
    "--dce",
    "--early-cse-memssa",
    "--loop-reroll",
    "--early-cse",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--loop-vectorize",
          "--strip-debug-declare",
          "--lower-matrix-intrinsics",
          "--mergefunc",
          "--ee-instrument",
          "--ipconstprop",
          "--scalarizer",
          "--correlated-propagation",
          "--argpromotion",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--loop-vectorize",
      "--strip-debug-declare",
      "--lower-matrix-intrinsics",
      "--mergefunc",
      "--ee-instrument",
      "--ipconstprop",
      "--scalarizer",
      "--correlated-propagation",
      "--argpromotion",
      "--inline"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}