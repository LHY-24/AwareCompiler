{
  "program_id": "linux-v0_8150.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 35,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 8,
    "oneSuccessor": 33,
    "twoPred": 13,
    "twoPredOneSuc": 6,
    "twoEach": 5,
    "twoSuccessor": 17,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 63,
    "BeginPhi": 0,
    "BranchCount": 50,
    "returnInt": 13,
    "CriticalCount": 8,
    "NumEdges": 67,
    "const32Bit": 170,
    "const64Bit": 24,
    "numConstZeroes": 85,
    "numConstOnes": 72,
    "UncondBranches": 33,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 44,
    "NumAndInst": 5,
    "BlockMid": 7,
    "BlockLow": 56,
    "NumBitCastInst": 9,
    "NumBrInst": 50,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 52,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 145,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 20,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 60,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 9,
    "NumZExtInst": 13,
    "TotalBlocks": 63,
    "TotalInsts": 496,
    "TotalMemInst": 339,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 236
  },
  "baseline_oz_instcount": 495,
  "knowledge_base_entry": [
    "--newgvn",
    "--jump-threading",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--reassociate",
    "--prune-eh",
    "--lower-expect",
    "--ipsccp",
    "--bdce",
    "--dse",
    "--reassociate",
    "--slsr",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--elim-avail-extern",
    "--mem2reg",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--globaldce",
          "--loop-reroll",
          "--alignment-from-assumptions",
          "--loop-simplifycfg",
          "--globalsplit",
          "--rewrite-statepoints-for-gc",
          "--dse",
          "--scalarizer",
          "--loop-simplify",
          "--ipsccp",
          "--instcombine",
          "--barrier",
          "--coro-cleanup",
          "--loop-guard-widening",
          "--mldst-motion",
          "--loop-interchange",
          "--gvn-hoist",
          "--instsimplify",
          "--ee-instrument",
          "--lower-expect",
          "--guard-widening",
          "--libcalls-shrinkwrap",
          "--simple-loop-unswitch",
          "--lower-matrix-intrinsics",
          "--instnamer",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--globaldce",
      "--loop-reroll",
      "--alignment-from-assumptions",
      "--loop-simplifycfg",
      "--globalsplit",
      "--rewrite-statepoints-for-gc",
      "--dse",
      "--scalarizer",
      "--loop-simplify",
      "--ipsccp",
      "--instcombine",
      "--barrier",
      "--coro-cleanup",
      "--loop-guard-widening",
      "--mldst-motion",
      "--loop-interchange",
      "--gvn-hoist",
      "--instsimplify",
      "--ee-instrument",
      "--lower-expect",
      "--guard-widening",
      "--libcalls-shrinkwrap",
      "--simple-loop-unswitch",
      "--lower-matrix-intrinsics",
      "--instnamer",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}