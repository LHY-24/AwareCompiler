{
  "program_id": "github-v0_47584.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 103,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 21,
    "oneSuccessor": 91,
    "twoPred": 42,
    "twoPredOneSuc": 9,
    "twoEach": 29,
    "twoSuccessor": 57,
    "morePreds": 6,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 180,
    "BeginPhi": 3,
    "BranchCount": 148,
    "returnInt": 74,
    "CriticalCount": 18,
    "NumEdges": 211,
    "const32Bit": 225,
    "const64Bit": 56,
    "numConstZeroes": 115,
    "numConstOnes": 120,
    "UncondBranches": 91,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 91,
    "NumAndInst": 0,
    "BlockMid": 15,
    "BlockLow": 168,
    "NumBitCastInst": 17,
    "NumBrInst": 148,
    "NumCallInst": 135,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 58,
    "NumLShrInst": 0,
    "NumLoadInst": 205,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 106,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 183,
    "TotalInsts": 850,
    "TotalMemInst": 577,
    "TotalFuncs": 37,
    "ArgsPhi": 6,
    "testUnary": 318
  },
  "baseline_oz_instcount": 828,
  "knowledge_base_entry": [
    "--instcombine",
    "--prune-eh",
    "--reassociate",
    "--sroa",
    "--ipsccp",
    "--mem2reg",
    "--adce",
    "--gvn",
    "--die",
    "--gvn",
    "--die",
    "--die",
    "--sroa",
    "--ipsccp",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--canonicalize-aliases",
          "--coro-split",
          "--sancov",
          "--guard-widening",
          "--mergeicmps",
          "--partially-inline-libcalls",
          "--mergereturn",
          "--early-cse-memssa",
          "--loweratomic",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--canonicalize-aliases",
      "--coro-split",
      "--sancov",
      "--guard-widening",
      "--mergeicmps",
      "--partially-inline-libcalls",
      "--mergereturn",
      "--early-cse-memssa",
      "--loweratomic",
      "--globalopt"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}