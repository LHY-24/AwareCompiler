{
  "program_id": "github-v0_7846.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 32,
    "const64Bit": 80,
    "numConstZeroes": 73,
    "numConstOnes": 33,
    "UncondBranches": 15,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 21,
    "NumBitCastInst": 20,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 59,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 58,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 27,
    "TotalBlocks": 27,
    "TotalInsts": 271,
    "TotalMemInst": 171,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 128
  },
  "baseline_oz_instcount": 271,
  "knowledge_base_entry": [
    "--reassociate",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--loop-simplifycfg",
    "--flattencfg",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--aggressive-instcombine",
          "--forceattrs",
          "--reg2mem",
          "--lower-matrix-intrinsics",
          "--gvn-hoist",
          "--loop-deletion",
          "--indvars",
          "--always-inline",
          "--elim-avail-extern",
          "--partially-inline-libcalls",
          "--jump-threading",
          "--loop-sink",
          "--memcpyopt",
          "--called-value-propagation",
          "--rewrite-statepoints-for-gc",
          "--loop-instsimplify",
          "--functionattrs",
          "--strip",
          "--deadargelim",
          "--tailcallelim",
          "--pgo-memop-opt",
          "--instnamer",
          "--canonicalize-aliases",
          "--ee-instrument",
          "--sancov",
          "--licm",
          "--alignment-from-assumptions",
          "--float2int",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--aggressive-instcombine",
      "--forceattrs",
      "--reg2mem",
      "--lower-matrix-intrinsics",
      "--gvn-hoist",
      "--loop-deletion",
      "--indvars",
      "--always-inline",
      "--elim-avail-extern",
      "--partially-inline-libcalls",
      "--jump-threading",
      "--loop-sink",
      "--memcpyopt",
      "--called-value-propagation",
      "--rewrite-statepoints-for-gc",
      "--loop-instsimplify",
      "--functionattrs",
      "--strip",
      "--deadargelim",
      "--tailcallelim",
      "--pgo-memop-opt",
      "--instnamer",
      "--canonicalize-aliases",
      "--ee-instrument",
      "--sancov",
      "--licm",
      "--alignment-from-assumptions",
      "--float2int",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+3.7%"
  }
}