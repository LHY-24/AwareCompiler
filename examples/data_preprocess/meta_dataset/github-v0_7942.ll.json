{
  "program_id": "github-v0_7942.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 39,
    "const64Bit": 41,
    "numConstZeroes": 40,
    "numConstOnes": 24,
    "UncondBranches": 13,
    "binaryConstArg": 22,
    "NumAShrInst": 2,
    "NumAddInst": 7,
    "NumAllocaInst": 12,
    "NumAndInst": 6,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 19,
    "NumSubInst": 3,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 28,
    "TotalBlocks": 24,
    "TotalInsts": 212,
    "TotalMemInst": 107,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 100
  },
  "baseline_oz_instcount": 212,
  "knowledge_base_entry": [
    "--inferattrs",
    "--instcombine",
    "-loop-reduce",
    "--mergefunc",
    "--correlated-propagation",
    "--dce",
    "--aggressive-instcombine",
    "--inline",
    "--reassociate",
    "--inline",
    "--adce",
    "--jump-threading",
    "--memcpyopt",
    "--instcombine",
    "--mem2reg",
    "--nary-reassociate",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--bdce",
    "--inline",
    "--sccp",
    "--bdce",
    "--aggressive-instcombine",
    "--inline",
    "--reassociate",
    "--inline",
    "--adce",
    "--jump-threading",
    "--memcpyopt",
    "--instcombine",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--name-anon-globals",
          "--loop-vectorize",
          "--flattencfg",
          "--indvars",
          "--aggressive-instcombine",
          "--constmerge",
          "--barrier",
          "--sroa",
          "--strip-nondebug",
          "--lower-guard-intrinsic",
          "--consthoist",
          "--loop-guard-widening",
          "--called-value-propagation",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--name-anon-globals",
      "--loop-vectorize",
      "--flattencfg",
      "--indvars",
      "--aggressive-instcombine",
      "--constmerge",
      "--barrier",
      "--sroa",
      "--strip-nondebug",
      "--lower-guard-intrinsic",
      "--consthoist",
      "--loop-guard-widening",
      "--called-value-propagation",
      "--globaldce"
    ],
    "performance_vs_Oz": "+4.7%"
  }
}