{
  "program_id": "linux-v0_8360.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 44,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 21,
    "oneSuccessor": 37,
    "twoPred": 20,
    "twoPredOneSuc": 12,
    "twoEach": 7,
    "twoSuccessor": 32,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 1,
    "BranchCount": 69,
    "returnInt": 3,
    "CriticalCount": 22,
    "NumEdges": 101,
    "const32Bit": 151,
    "const64Bit": 25,
    "numConstZeroes": 100,
    "numConstOnes": 37,
    "UncondBranches": 37,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 20,
    "NumAndInst": 7,
    "BlockMid": 5,
    "BlockLow": 67,
    "NumBitCastInst": 1,
    "NumBrInst": 69,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 32,
    "NumLShrInst": 1,
    "NumLoadInst": 119,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 48,
    "NumSubInst": 1,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 72,
    "TotalInsts": 405,
    "TotalMemInst": 251,
    "TotalFuncs": 7,
    "ArgsPhi": 2,
    "testUnary": 176
  },
  "baseline_oz_instcount": 407,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--lower-expect",
    "--die",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--sroa",
    "--instsimplify",
    "--die",
    "--newgvn",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--loweratomic",
          "--dse",
          "--alignment-from-assumptions",
          "--separate-const-offset-from-gep",
          "--div-rem-pairs",
          "--aggressive-instcombine",
          "--strip-debug-declare",
          "--sroa",
          "--coro-early",
          "--tailcallelim",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--loweratomic",
      "--dse",
      "--alignment-from-assumptions",
      "--separate-const-offset-from-gep",
      "--div-rem-pairs",
      "--aggressive-instcombine",
      "--strip-debug-declare",
      "--sroa",
      "--coro-early",
      "--tailcallelim",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}