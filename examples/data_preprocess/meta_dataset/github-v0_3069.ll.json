{
  "program_id": "github-v0_3069.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 0,
    "BranchCount": 5,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 7,
    "const32Bit": 13,
    "const64Bit": 2,
    "numConstZeroes": 2,
    "numConstOnes": 11,
    "UncondBranches": 3,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 4,
    "NumBitCastInst": 0,
    "NumBrInst": 5,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 17,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 1,
    "NumZExtInst": 3,
    "TotalBlocks": 6,
    "TotalInsts": 59,
    "TotalMemInst": 43,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 29
  },
  "baseline_oz_instcount": 59,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--jump-threading",
    "-loop-reduce",
    "--newgvn",
    "--loop-simplifycfg",
    "--dce",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--die",
    "--sroa",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--lowerinvoke",
          "--dce",
          "--coro-early",
          "--mergereturn",
          "--aggressive-instcombine",
          "--pgo-memop-opt",
          "--barrier",
          "--strip-nondebug",
          "--early-cse",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--lowerinvoke",
      "--dce",
      "--coro-early",
      "--mergereturn",
      "--aggressive-instcombine",
      "--pgo-memop-opt",
      "--barrier",
      "--strip-nondebug",
      "--early-cse",
      "--sancov"
    ],
    "performance_vs_Oz": "+5.1%"
  }
}