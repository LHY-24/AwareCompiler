{
  "program_id": "linux-v0_4731.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 4,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 34,
    "BeginPhi": 1,
    "BranchCount": 17,
    "returnInt": 5,
    "CriticalCount": 4,
    "NumEdges": 24,
    "const32Bit": 119,
    "const64Bit": 20,
    "numConstZeroes": 66,
    "numConstOnes": 37,
    "UncondBranches": 10,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 30,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 30,
    "NumBitCastInst": 7,
    "NumBrInst": 17,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 46,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 81,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 18,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 41,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 35,
    "TotalInsts": 292,
    "TotalMemInst": 228,
    "TotalFuncs": 29,
    "ArgsPhi": 2,
    "testUnary": 125
  },
  "baseline_oz_instcount": 292,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--die",
    "--slp-vectorizer",
    "--reassociate",
    "--ipsccp",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--libcalls-shrinkwrap",
          "--cross-dso-cfi",
          "--mergeicmps",
          "--loop-versioning-licm",
          "--coro-cleanup",
          "--sroa",
          "--gvn-hoist",
          "--loop-rotate",
          "--rewrite-statepoints-for-gc",
          "--callsite-splitting",
          "--canonicalize-aliases",
          "--lowerswitch",
          "--simple-loop-unswitch",
          "--called-value-propagation",
          "--inferattrs",
          "--jump-threading",
          "--loop-simplify",
          "--loop-interchange",
          "--forceattrs",
          "--loop-unroll",
          "--correlated-propagation",
          "--coro-early",
          "--licm",
          "--loweratomic",
          "--loop-data-prefetch",
          "--gvn",
          "--mergefunc",
          "--lower-expect",
          "--ipconstprop",
          "--slsr"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--libcalls-shrinkwrap",
      "--cross-dso-cfi",
      "--mergeicmps",
      "--loop-versioning-licm",
      "--coro-cleanup",
      "--sroa",
      "--gvn-hoist",
      "--loop-rotate",
      "--rewrite-statepoints-for-gc",
      "--callsite-splitting",
      "--canonicalize-aliases",
      "--lowerswitch",
      "--simple-loop-unswitch",
      "--called-value-propagation",
      "--inferattrs",
      "--jump-threading",
      "--loop-simplify",
      "--loop-interchange",
      "--forceattrs",
      "--loop-unroll",
      "--correlated-propagation",
      "--coro-early",
      "--licm",
      "--loweratomic",
      "--loop-data-prefetch",
      "--gvn",
      "--mergefunc",
      "--lower-expect",
      "--ipconstprop",
      "--slsr"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}