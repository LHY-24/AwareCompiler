{
  "program_id": "linux-v0_2051.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 54,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 7,
    "oneSuccessor": 52,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 16,
    "morePreds": 5,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 78,
    "BeginPhi": 3,
    "BranchCount": 68,
    "returnInt": 6,
    "CriticalCount": 2,
    "NumEdges": 98,
    "const32Bit": 282,
    "const64Bit": 21,
    "numConstZeroes": 128,
    "numConstOnes": 135,
    "UncondBranches": 52,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 104,
    "NumAndInst": 4,
    "BlockMid": 16,
    "BlockLow": 65,
    "NumBitCastInst": 47,
    "NumBrInst": 68,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 263,
    "NumMulInst": 8,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 10,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 162,
    "NumSubInst": 3,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 81,
    "TotalInsts": 846,
    "TotalMemInst": 647,
    "TotalFuncs": 20,
    "ArgsPhi": 6,
    "testUnary": 439
  },
  "baseline_oz_instcount": 845,
  "knowledge_base_entry": [
    "--inline",
    "--ipsccp",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--bdce",
    "--lower-expect",
    "--loop-rotate",
    "--gvn",
    "--flattencfg",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--mergefunc",
    "--ipsccp",
    "--lower-expect",
    "--load-store-vectorizer",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--loop-guard-widening",
          "--lcssa",
          "--forceattrs",
          "--ipsccp",
          "--always-inline",
          "--strip",
          "--flattencfg",
          "--loop-reroll",
          "--constprop",
          "--dce",
          "--loweratomic",
          "--loop-predication",
          "--loop-instsimplify",
          "--aggressive-instcombine",
          "--loop-load-elim",
          "--newgvn",
          "--globalsplit",
          "--float2int",
          "--simplifycfg",
          "--name-anon-globals",
          "--callsite-splitting",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--loop-guard-widening",
      "--lcssa",
      "--forceattrs",
      "--ipsccp",
      "--always-inline",
      "--strip",
      "--flattencfg",
      "--loop-reroll",
      "--constprop",
      "--dce",
      "--loweratomic",
      "--loop-predication",
      "--loop-instsimplify",
      "--aggressive-instcombine",
      "--loop-load-elim",
      "--newgvn",
      "--globalsplit",
      "--float2int",
      "--simplifycfg",
      "--name-anon-globals",
      "--callsite-splitting",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}