{
  "program_id": "linux-v0_1486.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 51,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 11,
    "oneSuccessor": 44,
    "twoPred": 15,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 24,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 97,
    "BeginPhi": 0,
    "BranchCount": 68,
    "returnInt": 19,
    "CriticalCount": 15,
    "NumEdges": 109,
    "const32Bit": 385,
    "const64Bit": 96,
    "numConstZeroes": 242,
    "numConstOnes": 109,
    "UncondBranches": 44,
    "binaryConstArg": 17,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 69,
    "NumAndInst": 2,
    "BlockMid": 14,
    "BlockLow": 83,
    "NumBitCastInst": 35,
    "NumBrInst": 68,
    "NumCallInst": 59,
    "NumGetElementPtrInst": 181,
    "NumICmpInst": 19,
    "NumLShrInst": 1,
    "NumLoadInst": 272,
    "NumMulInst": 2,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 133,
    "NumSubInst": 3,
    "NumTruncInst": 12,
    "NumXorInst": 2,
    "NumZExtInst": 15,
    "TotalBlocks": 97,
    "TotalInsts": 921,
    "TotalMemInst": 714,
    "TotalFuncs": 48,
    "ArgsPhi": 0,
    "testUnary": 412
  },
  "baseline_oz_instcount": 920,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--newgvn",
    "--globalopt",
    "--reassociate",
    "--aggressive-instcombine",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--correlated-propagation",
    "--gvn-hoist",
    "--nary-reassociate",
    "--jump-threading",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--correlated-propagation",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--inline",
    "--instcombine",
    "--loop-simplifycfg",
    "--inline",
    "--instsimplify",
    "--bdce",
    "--gvn-hoist",
    "--nary-reassociate",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--jump-threading",
    "--dse",
    "--loop-rotate",
    "--sroa",
    "--ipsccp",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--instcombine",
    "--mldst-motion",
    "--licm",
    "--instcombine",
    "--sroa",
    "--aggressive-instcombine",
    "--ipsccp",
    "--elim-avail-extern",
    "--flattencfg",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--sroa",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--irce",
          "--loop-simplifycfg",
          "--loop-fusion",
          "--inferattrs",
          "--hotcoldsplit",
          "--gvn-hoist",
          "--partially-inline-libcalls",
          "--reassociate",
          "--consthoist",
          "--inject-tli-mappings",
          "--loop-guard-widening",
          "--mem2reg",
          "--libcalls-shrinkwrap",
          "--loop-sink",
          "--ipsccp",
          "--loop-rotate",
          "--loop-instsimplify",
          "--canonicalize-aliases",
          "--bdce",
          "--loop-versioning-licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--irce",
      "--loop-simplifycfg",
      "--loop-fusion",
      "--inferattrs",
      "--hotcoldsplit",
      "--gvn-hoist",
      "--partially-inline-libcalls",
      "--reassociate",
      "--consthoist",
      "--inject-tli-mappings",
      "--loop-guard-widening",
      "--mem2reg",
      "--libcalls-shrinkwrap",
      "--loop-sink",
      "--ipsccp",
      "--loop-rotate",
      "--loop-instsimplify",
      "--canonicalize-aliases",
      "--bdce",
      "--loop-versioning-licm"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}