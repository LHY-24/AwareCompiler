{
  "program_id": "linux-v0_11485.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 2,
    "oneSuccessor": 8,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 6,
    "CriticalCount": 2,
    "NumEdges": 14,
    "const32Bit": 60,
    "const64Bit": 3,
    "numConstZeroes": 16,
    "numConstOnes": 25,
    "UncondBranches": 8,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 19,
    "NumAndInst": 3,
    "BlockMid": 4,
    "BlockLow": 12,
    "NumBitCastInst": 5,
    "NumBrInst": 11,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 45,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 2,
    "NumShlInst": 2,
    "NumStoreInst": 25,
    "NumSubInst": 3,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 16,
    "TotalInsts": 156,
    "TotalMemInst": 111,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 74
  },
  "baseline_oz_instcount": 157,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--jump-threading",
    "--elim-avail-extern",
    "--prune-eh",
    "--inline",
    "--globalopt",
    "--jump-threading",
    "--globalopt",
    "--mem2reg",
    "--lower-expect",
    "--globalopt",
    "--loop-simplifycfg",
    "--early-cse",
    "--ipsccp",
    "--early-cse",
    "--loop-reroll",
    "--newgvn",
    "--globalopt",
    "--jump-threading",
    "--globalopt",
    "--mem2reg",
    "--lower-expect",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--die",
    "--early-cse-memssa",
    "--early-cse",
    "--dce",
    "--loop-instsimplify",
    "--ipsccp",
    "--flattencfg",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--loop-reroll",
    "--early-cse",
    "--reassociate",
    "--die",
    "--loop-simplifycfg",
    "--sccp",
    "--early-cse",
    "--gvn",
    "--dse",
    "--elim-avail-extern",
    "--prune-eh",
    "--inline",
    "--globalopt",
    "--jump-threading",
    "--globalopt",
    "--mem2reg",
    "--lower-expect",
    "--globalopt",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--ipconstprop",
          "--cross-dso-cfi",
          "--coro-early",
          "--barrier",
          "--irce",
          "--inferattrs",
          "--prune-eh",
          "--ee-instrument",
          "--loop-reroll",
          "--lcssa",
          "--inline",
          "--separate-const-offset-from-gep",
          "--aggressive-instcombine",
          "--deadargelim",
          "--globalsplit",
          "--coro-split",
          "--lowerswitch",
          "--strip-nondebug",
          "--attributor",
          "--newgvn",
          "--callsite-splitting",
          "--lower-widenable-condition",
          "--lower-guard-intrinsic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--ipconstprop",
      "--cross-dso-cfi",
      "--coro-early",
      "--barrier",
      "--irce",
      "--inferattrs",
      "--prune-eh",
      "--ee-instrument",
      "--loop-reroll",
      "--lcssa",
      "--inline",
      "--separate-const-offset-from-gep",
      "--aggressive-instcombine",
      "--deadargelim",
      "--globalsplit",
      "--coro-split",
      "--lowerswitch",
      "--strip-nondebug",
      "--attributor",
      "--newgvn",
      "--callsite-splitting",
      "--lower-widenable-condition",
      "--lower-guard-intrinsic"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}