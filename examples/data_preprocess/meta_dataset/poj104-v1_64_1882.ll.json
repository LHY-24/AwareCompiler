{
  "program_id": "poj104-v1_64_1882.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 1,
    "oneSuccessor": 25,
    "twoPred": 9,
    "twoPredOneSuc": 1,
    "twoEach": 8,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 38,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 43,
    "const32Bit": 38,
    "const64Bit": 128,
    "numConstZeroes": 98,
    "numConstOnes": 33,
    "UncondBranches": 25,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 24,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 33,
    "NumBitCastInst": 16,
    "NumBrInst": 34,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 78,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 111,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 44,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 10,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 38,
    "TotalInsts": 406,
    "TotalMemInst": 255,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 188
  },
  "baseline_oz_instcount": 195,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--early-cse-memssa",
    "--early-cse",
    "--loop-deletion",
    "--instcombine",
    "--mem2reg",
    "--jump-threading",
    "--die",
    "--early-cse",
    "--loop-deletion",
    "--jump-threading",
    "--sroa",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--lower-expect",
    "--sroa",
    "--nary-reassociate",
    "--instcombine",
    "--sccp",
    "--reassociate",
    "--slsr",
    "--early-cse-memssa",
    "--mem2reg",
    "--early-cse",
    "--correlated-propagation",
    "--bdce",
    "--inline",
    "--newgvn",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--loop-simplifycfg",
    "--instsimplify",
    "--instcombine",
    "--slsr",
    "--instcombine",
    "--memcpyopt",
    "--simplifycfg",
    "--correlated-propagation",
    "--globalopt",
    "--sroa",
    "--mem2reg",
    "--dce",
    "--jump-threading",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-guard-intrinsic",
          "--strip-nondebug",
          "--sink",
          "--scalarizer",
          "--loop-load-elim",
          "--separate-const-offset-from-gep",
          "--canonicalize-aliases",
          "--attributor",
          "--reassociate",
          "--instcombine",
          "--loop-unswitch",
          "--functionattrs",
          "--instsimplify",
          "--loop-instsimplify",
          "--indvars",
          "--inject-tli-mappings",
          "--inline",
          "--mergefunc",
          "--strip-debug-declare",
          "--irce",
          "--sroa",
          "--simplifycfg",
          "--coro-split",
          "--rpo-functionattrs",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+19.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-guard-intrinsic",
      "--strip-nondebug",
      "--sink",
      "--scalarizer",
      "--loop-load-elim",
      "--separate-const-offset-from-gep",
      "--canonicalize-aliases",
      "--attributor",
      "--reassociate",
      "--instcombine",
      "--loop-unswitch",
      "--functionattrs",
      "--instsimplify",
      "--loop-instsimplify",
      "--indvars",
      "--inject-tli-mappings",
      "--inline",
      "--mergefunc",
      "--strip-debug-declare",
      "--irce",
      "--sroa",
      "--simplifycfg",
      "--coro-split",
      "--rpo-functionattrs",
      "--gvn"
    ],
    "performance_vs_Oz": "+19.5%"
  }
}