{
  "program_id": "poj104-v1_6_804.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 0,
    "oneSuccessor": 21,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 7,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 5,
    "CriticalCount": 0,
    "NumEdges": 35,
    "const32Bit": 30,
    "const64Bit": 32,
    "numConstZeroes": 22,
    "numConstOnes": 18,
    "UncondBranches": 21,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 29,
    "NumBitCastInst": 20,
    "NumBrInst": 28,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 40,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 31,
    "TotalInsts": 189,
    "TotalMemInst": 110,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 79
  },
  "baseline_oz_instcount": 96,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--adce",
    "--early-cse-memssa",
    "--instcombine",
    "--mergefunc",
    "--dse",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--inline",
    "--die",
    "--gvn",
    "--newgvn",
    "--mergefunc",
    "--adce",
    "--early-cse-memssa",
    "--instcombine",
    "--simplifycfg",
    "--jump-threading",
    "--newgvn",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--partially-inline-libcalls",
          "--loop-distribute",
          "--strip-dead-prototypes",
          "--loop-guard-widening",
          "--lowerinvoke",
          "--sccp",
          "--mem2reg",
          "--lcssa",
          "--name-anon-globals",
          "--argpromotion",
          "--newgvn",
          "--irce",
          "--slsr",
          "--loop-unroll-and-jam",
          "--functionattrs",
          "--float2int",
          "--nary-reassociate",
          "--gvn",
          "--insert-gcov-profiling",
          "--speculative-execution",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--partially-inline-libcalls",
      "--loop-distribute",
      "--strip-dead-prototypes",
      "--loop-guard-widening",
      "--lowerinvoke",
      "--sccp",
      "--mem2reg",
      "--lcssa",
      "--name-anon-globals",
      "--argpromotion",
      "--newgvn",
      "--irce",
      "--slsr",
      "--loop-unroll-and-jam",
      "--functionattrs",
      "--float2int",
      "--nary-reassociate",
      "--gvn",
      "--insert-gcov-profiling",
      "--speculative-execution",
      "--reassociate"
    ],
    "performance_vs_Oz": "+7.3%"
  }
}