{
  "program_id": "github-v0_49098.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 9,
    "oneSuccessor": 7,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 13,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 23,
    "CriticalCount": 1,
    "NumEdges": 33,
    "const32Bit": 64,
    "const64Bit": 7,
    "numConstZeroes": 21,
    "numConstOnes": 28,
    "UncondBranches": 7,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 23,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 28,
    "NumBitCastInst": 2,
    "NumBrInst": 20,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 59,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 31,
    "TotalInsts": 212,
    "TotalMemInst": 165,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 85
  },
  "baseline_oz_instcount": 213,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--simplifycfg",
    "--mem2reg",
    "--prune-eh",
    "--instsimplify",
    "--mergefunc",
    "--gvn-hoist",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simplifycfg",
          "--libcalls-shrinkwrap",
          "--strip-dead-prototypes",
          "--consthoist",
          "--bdce",
          "--lowerswitch",
          "--loop-data-prefetch",
          "--instnamer",
          "--argpromotion",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simplifycfg",
      "--libcalls-shrinkwrap",
      "--strip-dead-prototypes",
      "--consthoist",
      "--bdce",
      "--lowerswitch",
      "--loop-data-prefetch",
      "--instnamer",
      "--argpromotion",
      "--reassociate"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}