{
  "program_id": "linux-v0_12903.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 5,
    "oneSuccessor": 19,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 11,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 29,
    "returnInt": 8,
    "CriticalCount": 4,
    "NumEdges": 41,
    "const32Bit": 109,
    "const64Bit": 7,
    "numConstZeroes": 42,
    "numConstOnes": 46,
    "UncondBranches": 19,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 34,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 35,
    "NumBitCastInst": 9,
    "NumBrInst": 29,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 30,
    "NumICmpInst": 10,
    "NumLShrInst": 1,
    "NumLoadInst": 73,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 50,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 1,
    "TotalBlocks": 39,
    "TotalInsts": 279,
    "TotalMemInst": 209,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 121
  },
  "baseline_oz_instcount": 280,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--inline",
    "--loop-simplifycfg",
    "--instcombine",
    "--aggressive-instcombine",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplify",
          "--loop-rotate",
          "--libcalls-shrinkwrap",
          "--called-value-propagation",
          "--coro-split",
          "--guard-widening",
          "--loop-unswitch",
          "--indvars",
          "--mldst-motion",
          "--instnamer",
          "--post-inline-ee-instrument",
          "--lower-matrix-intrinsics",
          "--mergeicmps",
          "--correlated-propagation",
          "--inject-tli-mappings",
          "--canonicalize-aliases",
          "--instsimplify",
          "--loop-reroll",
          "--early-cse-memssa",
          "--loop-instsimplify",
          "--insert-gcov-profiling",
          "--alignment-from-assumptions",
          "--instcombine",
          "--lcssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplify",
      "--loop-rotate",
      "--libcalls-shrinkwrap",
      "--called-value-propagation",
      "--coro-split",
      "--guard-widening",
      "--loop-unswitch",
      "--indvars",
      "--mldst-motion",
      "--instnamer",
      "--post-inline-ee-instrument",
      "--lower-matrix-intrinsics",
      "--mergeicmps",
      "--correlated-propagation",
      "--inject-tli-mappings",
      "--canonicalize-aliases",
      "--instsimplify",
      "--loop-reroll",
      "--early-cse-memssa",
      "--loop-instsimplify",
      "--insert-gcov-profiling",
      "--alignment-from-assumptions",
      "--instcombine",
      "--lcssa"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}