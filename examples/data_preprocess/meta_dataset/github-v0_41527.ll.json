{
  "program_id": "github-v0_41527.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 4,
    "oneSuccessor": 8,
    "twoPred": 5,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 15,
    "returnInt": 3,
    "CriticalCount": 6,
    "NumEdges": 22,
    "const32Bit": 44,
    "const64Bit": 4,
    "numConstZeroes": 23,
    "numConstOnes": 12,
    "UncondBranches": 8,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 15,
    "NumBitCastInst": 0,
    "NumBrInst": 15,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 47,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 18,
    "TotalInsts": 139,
    "TotalMemInst": 105,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 62
  },
  "baseline_oz_instcount": 140,
  "knowledge_base_entry": [
    "--flattencfg",
    "--globalopt",
    "--instsimplify",
    "--simplifycfg",
    "--memcpyopt",
    "--gvn-hoist",
    "--sccp",
    "--dce",
    "--aggressive-instcombine",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalsplit",
          "--gvn",
          "--sroa",
          "--loweratomic",
          "--slsr",
          "--mergefunc",
          "--argpromotion",
          "--lower-widenable-condition",
          "--jump-threading",
          "--redundant-dbg-inst-elim",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalsplit",
      "--gvn",
      "--sroa",
      "--loweratomic",
      "--slsr",
      "--mergefunc",
      "--argpromotion",
      "--lower-widenable-condition",
      "--jump-threading",
      "--redundant-dbg-inst-elim",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}