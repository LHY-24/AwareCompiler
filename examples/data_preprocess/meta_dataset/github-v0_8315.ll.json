{
  "program_id": "github-v0_8315.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 1,
    "oneSuccessor": 32,
    "twoPred": 13,
    "twoPredOneSuc": 1,
    "twoEach": 11,
    "twoSuccessor": 13,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 45,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 58,
    "const32Bit": 214,
    "const64Bit": 86,
    "numConstZeroes": 138,
    "numConstOnes": 49,
    "UncondBranches": 32,
    "binaryConstArg": 59,
    "NumAShrInst": 0,
    "NumAddInst": 38,
    "NumAllocaInst": 18,
    "NumAndInst": 5,
    "BlockMid": 17,
    "BlockLow": 33,
    "NumBitCastInst": 0,
    "NumBrInst": 45,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 110,
    "NumICmpInst": 13,
    "NumLShrInst": 17,
    "NumLoadInst": 218,
    "NumMulInst": 5,
    "NumOrInst": 15,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 12,
    "NumStoreInst": 93,
    "NumSubInst": 6,
    "NumTruncInst": 16,
    "NumXorInst": 8,
    "NumZExtInst": 21,
    "TotalBlocks": 50,
    "TotalInsts": 668,
    "TotalMemInst": 443,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 290
  },
  "baseline_oz_instcount": 664,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--gvn",
    "--early-cse-memssa",
    "--bdce",
    "--aggressive-instcombine",
    "--globalopt",
    "--loweratomic",
    "--ipsccp",
    "--jump-threading",
    "--loop-reroll",
    "-loop-reduce",
    "--indvars",
    "--correlated-propagation",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--forceattrs",
          "--tailcallelim",
          "--hotcoldsplit",
          "--cross-dso-cfi",
          "--dse",
          "--instcombine",
          "--gvn-hoist",
          "--strip-debug-declare",
          "--loop-simplify",
          "--mem2reg",
          "--rpo-functionattrs",
          "--bdce",
          "--lower-expect",
          "--called-value-propagation",
          "--insert-gcov-profiling",
          "--constprop",
          "--coro-elide",
          "--name-anon-globals",
          "--loop-load-elim",
          "--barrier",
          "--lowerinvoke",
          "--strip-nondebug",
          "--ipconstprop",
          "--functionattrs",
          "--scalarizer",
          "--loop-reroll",
          "--aggressive-instcombine",
          "--partially-inline-libcalls",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--forceattrs",
      "--tailcallelim",
      "--hotcoldsplit",
      "--cross-dso-cfi",
      "--dse",
      "--instcombine",
      "--gvn-hoist",
      "--strip-debug-declare",
      "--loop-simplify",
      "--mem2reg",
      "--rpo-functionattrs",
      "--bdce",
      "--lower-expect",
      "--called-value-propagation",
      "--insert-gcov-profiling",
      "--constprop",
      "--coro-elide",
      "--name-anon-globals",
      "--loop-load-elim",
      "--barrier",
      "--lowerinvoke",
      "--strip-nondebug",
      "--ipconstprop",
      "--functionattrs",
      "--scalarizer",
      "--loop-reroll",
      "--aggressive-instcombine",
      "--partially-inline-libcalls",
      "--die"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}