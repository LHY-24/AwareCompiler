{
  "program_id": "poj104-v1_41_664.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 28,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 14,
    "oneSuccessor": 22,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 5,
    "twoSuccessor": 20,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 42,
    "returnInt": 5,
    "CriticalCount": 13,
    "NumEdges": 62,
    "const32Bit": 43,
    "const64Bit": 28,
    "numConstZeroes": 13,
    "numConstOnes": 30,
    "UncondBranches": 22,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 47,
    "NumBitCastInst": 17,
    "NumBrInst": 42,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 68,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 50,
    "TotalInsts": 262,
    "TotalMemInst": 151,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 110
  },
  "baseline_oz_instcount": 113,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--loop-rotate",
    "--lower-expect",
    "--instsimplify",
    "--sccp",
    "--mem2reg",
    "--flattencfg",
    "--elim-avail-extern",
    "--loop-rotate",
    "--lower-expect",
    "--instsimplify",
    "--sccp",
    "--mem2reg",
    "--flattencfg",
    "--globalopt",
    "--sccp",
    "--elim-avail-extern",
    "--reassociate",
    "--gvn",
    "--slp-vectorizer",
    "--simplifycfg",
    "--slsr",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--early-cse",
    "--dce",
    "--mergefunc",
    "--inline",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--sroa",
          "--licm",
          "--loop-unroll-and-jam",
          "--loop-rotate",
          "--globaldce",
          "--add-discriminators",
          "--partial-inliner",
          "--strip-nondebug",
          "--strip-debug-declare",
          "--barrier",
          "--mergefunc",
          "--memcpyopt",
          "--mergereturn",
          "-loop-reduce",
          "--flattencfg",
          "--elim-avail-extern",
          "--slp-vectorizer",
          "--scalarizer",
          "--simplifycfg",
          "--newgvn",
          "--loop-interchange",
          "--irce",
          "--loop-unroll",
          "--loweratomic",
          "--inline",
          "--functionattrs",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--sroa",
      "--licm",
      "--loop-unroll-and-jam",
      "--loop-rotate",
      "--globaldce",
      "--add-discriminators",
      "--partial-inliner",
      "--strip-nondebug",
      "--strip-debug-declare",
      "--barrier",
      "--mergefunc",
      "--memcpyopt",
      "--mergereturn",
      "-loop-reduce",
      "--flattencfg",
      "--elim-avail-extern",
      "--slp-vectorizer",
      "--scalarizer",
      "--simplifycfg",
      "--newgvn",
      "--loop-interchange",
      "--irce",
      "--loop-unroll",
      "--loweratomic",
      "--inline",
      "--functionattrs",
      "--bdce"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}