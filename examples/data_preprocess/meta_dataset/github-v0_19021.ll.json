{
  "program_id": "github-v0_19021.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 33,
    "const64Bit": 37,
    "numConstZeroes": 36,
    "numConstOnes": 26,
    "UncondBranches": 11,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 8,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 6,
    "TotalBlocks": 21,
    "TotalInsts": 159,
    "TotalMemInst": 104,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 68
  },
  "baseline_oz_instcount": 159,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--flattencfg",
    "--sroa",
    "--loop-simplifycfg",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--break-crit-edges",
          "--load-store-vectorizer",
          "--strip-dead-prototypes",
          "--flattencfg",
          "--gvn",
          "--lower-expect",
          "--indvars",
          "--callsite-splitting",
          "--correlated-propagation",
          "-loop-reduce",
          "--instsimplify",
          "--hotcoldsplit",
          "--mergereturn",
          "--aggressive-instcombine",
          "--licm",
          "--simple-loop-unswitch",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--break-crit-edges",
      "--load-store-vectorizer",
      "--strip-dead-prototypes",
      "--flattencfg",
      "--gvn",
      "--lower-expect",
      "--indvars",
      "--callsite-splitting",
      "--correlated-propagation",
      "-loop-reduce",
      "--instsimplify",
      "--hotcoldsplit",
      "--mergereturn",
      "--aggressive-instcombine",
      "--licm",
      "--simple-loop-unswitch",
      "--reassociate"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}