{
  "program_id": "linux-v0_9031.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 77,
    "onePredOneSuc": 58,
    "onePredTwoSuc": 14,
    "oneSuccessor": 69,
    "twoPred": 12,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 26,
    "morePreds": 9,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 118,
    "BeginPhi": 2,
    "BranchCount": 95,
    "returnInt": 5,
    "CriticalCount": 14,
    "NumEdges": 136,
    "const32Bit": 277,
    "const64Bit": 12,
    "numConstZeroes": 116,
    "numConstOnes": 124,
    "UncondBranches": 69,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 101,
    "NumAndInst": 3,
    "BlockMid": 13,
    "BlockLow": 107,
    "NumBitCastInst": 43,
    "NumBrInst": 95,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 72,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 233,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 22,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 134,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 7,
    "NumZExtInst": 7,
    "TotalBlocks": 120,
    "TotalInsts": 826,
    "TotalMemInst": 603,
    "TotalFuncs": 27,
    "ArgsPhi": 5,
    "testUnary": 397
  },
  "baseline_oz_instcount": 827,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--elim-avail-extern",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--dse",
    "--dse",
    "--reassociate",
    "--instsimplify",
    "--gvn",
    "--mergefunc",
    "--sroa",
    "--ipsccp",
    "--lower-expect",
    "--dse",
    "--dse",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--sccp",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--mergefunc",
          "--gvn",
          "--loop-sink",
          "--guard-widening",
          "--always-inline",
          "--consthoist",
          "--libcalls-shrinkwrap",
          "--newgvn",
          "--strip-debug-declare",
          "--float2int",
          "--name-anon-globals",
          "--simplifycfg",
          "--add-discriminators",
          "--lower-constant-intrinsics",
          "--load-store-vectorizer",
          "--rewrite-statepoints-for-gc",
          "--pgo-memop-opt",
          "--separate-const-offset-from-gep",
          "--loop-idiom",
          "--ipsccp",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--mergefunc",
      "--gvn",
      "--loop-sink",
      "--guard-widening",
      "--always-inline",
      "--consthoist",
      "--libcalls-shrinkwrap",
      "--newgvn",
      "--strip-debug-declare",
      "--float2int",
      "--name-anon-globals",
      "--simplifycfg",
      "--add-discriminators",
      "--lower-constant-intrinsics",
      "--load-store-vectorizer",
      "--rewrite-statepoints-for-gc",
      "--pgo-memop-opt",
      "--separate-const-offset-from-gep",
      "--loop-idiom",
      "--ipsccp",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}