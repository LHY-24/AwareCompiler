{
  "program_id": "blas-v0_108.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 5,
    "onePred": 16,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 8,
    "oneSuccessor": 8,
    "twoPred": 8,
    "twoPredOneSuc": 0,
    "twoEach": 8,
    "twoSuccessor": 17,
    "morePreds": 1,
    "BB03Phi": 8,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 8,
    "BranchCount": 25,
    "returnInt": 0,
    "CriticalCount": 18,
    "NumEdges": 42,
    "const32Bit": 26,
    "const64Bit": 33,
    "numConstZeroes": 1,
    "numConstOnes": 23,
    "UncondBranches": 8,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 23,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 8,
    "BlockLow": 18,
    "NumBitCastInst": 32,
    "NumBrInst": 25,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 17,
    "NumRetInst": 1,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 26,
    "TotalInsts": 251,
    "TotalMemInst": 84,
    "TotalFuncs": 1,
    "ArgsPhi": 34,
    "testUnary": 75
  },
  "baseline_oz_instcount": 246,
  "knowledge_base_entry": [
    "--mergefunc",
    "--sroa",
    "--loop-reroll",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--instsimplify",
    "--mergefunc",
    "--ipsccp",
    "--licm",
    "--loop-simplifycfg",
    "--lower-expect",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--loop-rotate",
    "--dse",
    "--sccp",
    "--simplifycfg",
    "--instsimplify",
    "--instcombine",
    "--newgvn",
    "--lower-expect",
    "--jump-threading",
    "--die",
    "--simplifycfg",
    "--prune-eh",
    "--mem2reg",
    "--dse",
    "--adce",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--gvn-hoist",
          "--alignment-from-assumptions",
          "--sccp",
          "--lower-constant-intrinsics",
          "--add-discriminators",
          "--loop-instsimplify",
          "--loop-rotate",
          "--infer-address-spaces",
          "--name-anon-globals",
          "--loop-distribute",
          "--dse",
          "--sroa",
          "--globaldce",
          "--lowerinvoke",
          "--coro-elide",
          "--loop-load-elim",
          "--globalsplit",
          "--simplifycfg",
          "--inline",
          "--load-store-vectorizer",
          "--loop-simplify",
          "--div-rem-pairs",
          "--strip",
          "--loop-sink",
          "--lowerswitch",
          "--dce",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--gvn-hoist",
      "--alignment-from-assumptions",
      "--sccp",
      "--lower-constant-intrinsics",
      "--add-discriminators",
      "--loop-instsimplify",
      "--loop-rotate",
      "--infer-address-spaces",
      "--name-anon-globals",
      "--loop-distribute",
      "--dse",
      "--sroa",
      "--globaldce",
      "--lowerinvoke",
      "--coro-elide",
      "--loop-load-elim",
      "--globalsplit",
      "--simplifycfg",
      "--inline",
      "--load-store-vectorizer",
      "--loop-simplify",
      "--div-rem-pairs",
      "--strip",
      "--loop-sink",
      "--lowerswitch",
      "--dce",
      "--licm"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}