{
  "program_id": "linux-v0_2922.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 53,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 13,
    "oneSuccessor": 48,
    "twoPred": 27,
    "twoPredOneSuc": 6,
    "twoEach": 14,
    "twoSuccessor": 36,
    "morePreds": 5,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 98,
    "BeginPhi": 3,
    "BranchCount": 84,
    "returnInt": 25,
    "CriticalCount": 25,
    "NumEdges": 125,
    "const32Bit": 318,
    "const64Bit": 14,
    "numConstZeroes": 123,
    "numConstOnes": 83,
    "UncondBranches": 48,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 66,
    "NumAndInst": 12,
    "BlockMid": 7,
    "BlockLow": 94,
    "NumBitCastInst": 0,
    "NumBrInst": 84,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 59,
    "NumICmpInst": 40,
    "NumLShrInst": 0,
    "NumLoadInst": 195,
    "NumMulInst": 1,
    "NumOrInst": 7,
    "NumPHIInst": 3,
    "NumRetInst": 16,
    "NumSExtInst": 0,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 107,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 101,
    "TotalInsts": 649,
    "TotalMemInst": 468,
    "TotalFuncs": 22,
    "ArgsPhi": 6,
    "testUnary": 273
  },
  "baseline_oz_instcount": 649,
  "knowledge_base_entry": [
    "--mergefunc",
    "-loop-reduce",
    "--indvars",
    "--gvn-hoist",
    "--inline",
    "--mergefunc",
    "--instcombine",
    "--instsimplify",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--rpo-functionattrs",
          "--cross-dso-cfi",
          "--instcombine",
          "--constprop",
          "--mergefunc",
          "--aggressive-instcombine",
          "--nary-reassociate",
          "--loop-unroll",
          "--post-inline-ee-instrument",
          "--strip",
          "--loop-vectorize",
          "--loop-predication",
          "--sccp",
          "--slp-vectorizer",
          "--infer-address-spaces",
          "--float2int",
          "--lower-expect",
          "--pgo-memop-opt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--rpo-functionattrs",
      "--cross-dso-cfi",
      "--instcombine",
      "--constprop",
      "--mergefunc",
      "--aggressive-instcombine",
      "--nary-reassociate",
      "--loop-unroll",
      "--post-inline-ee-instrument",
      "--strip",
      "--loop-vectorize",
      "--loop-predication",
      "--sccp",
      "--slp-vectorizer",
      "--infer-address-spaces",
      "--float2int",
      "--lower-expect",
      "--pgo-memop-opt"
    ],
    "performance_vs_Oz": "+2.8%"
  }
}