{
  "program_id": "tensorflow-v0_94.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 7,
    "onePred": 83,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 36,
    "oneSuccessor": 39,
    "twoPred": 27,
    "twoPredOneSuc": 2,
    "twoEach": 14,
    "twoSuccessor": 63,
    "morePreds": 7,
    "BB03Phi": 10,
    "BBHiPhi": 0,
    "BBNoPhi": 122,
    "BeginPhi": 10,
    "BranchCount": 85,
    "returnInt": 5,
    "CriticalCount": 43,
    "NumEdges": 165,
    "const32Bit": 303,
    "const64Bit": 196,
    "numConstZeroes": 403,
    "numConstOnes": 92,
    "UncondBranches": 39,
    "binaryConstArg": 42,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 9,
    "NumAndInst": 24,
    "BlockMid": 7,
    "BlockLow": 125,
    "NumBitCastInst": 46,
    "NumBrInst": 85,
    "NumCallInst": 87,
    "NumGetElementPtrInst": 106,
    "NumICmpInst": 54,
    "NumLShrInst": 9,
    "NumLoadInst": 89,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 13,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 17,
    "NumShlInst": 2,
    "NumStoreInst": 39,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 132,
    "TotalInsts": 670,
    "TotalMemInst": 347,
    "TotalFuncs": 40,
    "ArgsPhi": 40,
    "testUnary": 163
  },
  "baseline_oz_instcount": 667,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--loop-instsimplify",
    "--lower-expect",
    "--early-cse",
    "--simplifycfg",
    "--mergefunc",
    "--ipsccp",
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--flattencfg",
    "--instcombine",
    "--ipsccp",
    "--mem2reg",
    "--jump-threading",
    "--prune-eh",
    "--sroa",
    "--die",
    "--elim-avail-extern",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simple-loop-unswitch",
          "--loop-idiom",
          "--loop-vectorize",
          "--globaldce",
          "--indvars",
          "--loop-unswitch",
          "--ee-instrument",
          "--lowerinvoke",
          "--lcssa",
          "--globalopt",
          "--break-crit-edges",
          "--elim-avail-extern",
          "--loop-unroll",
          "--dse",
          "--canonicalize-aliases",
          "--float2int",
          "--alignment-from-assumptions",
          "--deadargelim",
          "--scalarizer",
          "--prune-eh",
          "--argpromotion",
          "--functionattrs",
          "--loop-reroll",
          "--strip-nondebug",
          "--always-inline",
          "--mergereturn",
          "--irce",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simple-loop-unswitch",
      "--loop-idiom",
      "--loop-vectorize",
      "--globaldce",
      "--indvars",
      "--loop-unswitch",
      "--ee-instrument",
      "--lowerinvoke",
      "--lcssa",
      "--globalopt",
      "--break-crit-edges",
      "--elim-avail-extern",
      "--loop-unroll",
      "--dse",
      "--canonicalize-aliases",
      "--float2int",
      "--alignment-from-assumptions",
      "--deadargelim",
      "--scalarizer",
      "--prune-eh",
      "--argpromotion",
      "--functionattrs",
      "--loop-reroll",
      "--strip-nondebug",
      "--always-inline",
      "--mergereturn",
      "--irce",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+8.2%"
  }
}