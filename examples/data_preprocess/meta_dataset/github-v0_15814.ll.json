{
  "program_id": "github-v0_15814.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 39,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 15,
    "oneSuccessor": 34,
    "twoPred": 20,
    "twoPredOneSuc": 9,
    "twoEach": 11,
    "twoSuccessor": 27,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 62,
    "BeginPhi": 0,
    "BranchCount": 61,
    "returnInt": 16,
    "CriticalCount": 19,
    "NumEdges": 88,
    "const32Bit": 100,
    "const64Bit": 1,
    "numConstZeroes": 64,
    "numConstOnes": 23,
    "UncondBranches": 34,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 61,
    "NumBitCastInst": 2,
    "NumBrInst": 61,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 27,
    "NumLShrInst": 0,
    "NumLoadInst": 93,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 35,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 62,
    "TotalInsts": 302,
    "TotalMemInst": 193,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 115
  },
  "baseline_oz_instcount": 304,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--instsimplify",
    "--lower-expect",
    "--mergefunc",
    "--newgvn",
    "--gvn",
    "--sccp",
    "--inline",
    "--globalopt",
    "--flattencfg",
    "--aggressive-instcombine",
    "--dce",
    "--dse",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--prune-eh",
          "--nary-reassociate",
          "--rpo-functionattrs",
          "--globalopt",
          "--flattencfg",
          "--gvn-hoist",
          "--guard-widening",
          "--name-anon-globals",
          "--float2int",
          "--barrier",
          "--div-rem-pairs",
          "--sink",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--prune-eh",
      "--nary-reassociate",
      "--rpo-functionattrs",
      "--globalopt",
      "--flattencfg",
      "--gvn-hoist",
      "--guard-widening",
      "--name-anon-globals",
      "--float2int",
      "--barrier",
      "--div-rem-pairs",
      "--sink",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}