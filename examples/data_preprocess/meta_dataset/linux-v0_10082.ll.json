{
  "program_id": "linux-v0_10082.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 52,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 14,
    "oneSuccessor": 48,
    "twoPred": 15,
    "twoPredOneSuc": 7,
    "twoEach": 5,
    "twoSuccessor": 23,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 84,
    "BeginPhi": 0,
    "BranchCount": 71,
    "returnInt": 14,
    "CriticalCount": 5,
    "NumEdges": 94,
    "const32Bit": 167,
    "const64Bit": 20,
    "numConstZeroes": 81,
    "numConstOnes": 71,
    "UncondBranches": 48,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 48,
    "NumAndInst": 4,
    "BlockMid": 7,
    "BlockLow": 77,
    "NumBitCastInst": 7,
    "NumBrInst": 71,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 28,
    "NumLShrInst": 1,
    "NumLoadInst": 125,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 8,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 72,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 6,
    "NumZExtInst": 6,
    "TotalBlocks": 84,
    "TotalInsts": 478,
    "TotalMemInst": 321,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 197
  },
  "baseline_oz_instcount": 479,
  "knowledge_base_entry": [
    "--instcombine",
    "--reassociate",
    "--sccp",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--newgvn",
    "--jump-threading",
    "--prune-eh",
    "--gvn-hoist",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--insert-gcov-profiling",
          "--div-rem-pairs",
          "--loop-versioning",
          "--sancov",
          "--memcpyopt",
          "--sroa",
          "--hotcoldsplit",
          "--mldst-motion",
          "--slsr",
          "--argpromotion",
          "--mergefunc",
          "--constmerge",
          "--strip",
          "--instsimplify",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--insert-gcov-profiling",
      "--div-rem-pairs",
      "--loop-versioning",
      "--sancov",
      "--memcpyopt",
      "--sroa",
      "--hotcoldsplit",
      "--mldst-motion",
      "--slsr",
      "--argpromotion",
      "--mergefunc",
      "--constmerge",
      "--strip",
      "--instsimplify",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}