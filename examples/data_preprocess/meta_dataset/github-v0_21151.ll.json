{
  "program_id": "github-v0_21151.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 2,
    "onePred": 6,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 3,
    "BranchCount": 12,
    "returnInt": 2,
    "CriticalCount": 8,
    "NumEdges": 19,
    "const32Bit": 11,
    "const64Bit": 2,
    "numConstZeroes": 5,
    "numConstOnes": 3,
    "UncondBranches": 5,
    "binaryConstArg": 6,
    "NumAShrInst": 1,
    "NumAddInst": 5,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 13,
    "NumBitCastInst": 4,
    "NumBrInst": 12,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 6,
    "NumLShrInst": 1,
    "NumLoadInst": 6,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 6,
    "NumRetInst": 1,
    "NumSExtInst": 1,
    "NumSelectInst": 2,
    "NumShlInst": 1,
    "NumStoreInst": 6,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 13,
    "TotalInsts": 70,
    "TotalMemInst": 20,
    "TotalFuncs": 4,
    "ArgsPhi": 12,
    "testUnary": 16
  },
  "baseline_oz_instcount": 76,
  "knowledge_base_entry": [
    "--loop-unroll",
    "--newgvn",
    "--slsr",
    "--early-cse",
    "--gvn",
    "--gvn-hoist",
    "--bdce",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--instsimplify",
    "--reassociate",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--reassociate",
    "--die",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--partial-inliner",
          "--flattencfg",
          "--forceattrs",
          "--libcalls-shrinkwrap",
          "--load-store-vectorizer",
          "--inline",
          "--die",
          "--speculative-execution",
          "--barrier",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--partial-inliner",
      "--flattencfg",
      "--forceattrs",
      "--libcalls-shrinkwrap",
      "--load-store-vectorizer",
      "--inline",
      "--die",
      "--speculative-execution",
      "--barrier",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+7.9%"
  }
}