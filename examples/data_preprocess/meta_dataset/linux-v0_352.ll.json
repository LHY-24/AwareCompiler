{
  "program_id": "linux-v0_352.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 33,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 1,
    "oneSuccessor": 33,
    "twoPred": 14,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 61,
    "BeginPhi": 2,
    "BranchCount": 47,
    "returnInt": 8,
    "CriticalCount": 7,
    "NumEdges": 69,
    "const32Bit": 147,
    "const64Bit": 1,
    "numConstZeroes": 18,
    "numConstOnes": 59,
    "UncondBranches": 33,
    "binaryConstArg": 66,
    "NumAShrInst": 0,
    "NumAddInst": 19,
    "NumAllocaInst": 42,
    "NumAndInst": 25,
    "BlockMid": 8,
    "BlockLow": 55,
    "NumBitCastInst": 2,
    "NumBrInst": 47,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 16,
    "NumLShrInst": 7,
    "NumLoadInst": 92,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 2,
    "NumRetInst": 15,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 12,
    "NumStoreInst": 42,
    "NumSubInst": 1,
    "NumTruncInst": 35,
    "NumXorInst": 2,
    "NumZExtInst": 8,
    "TotalBlocks": 63,
    "TotalInsts": 429,
    "TotalMemInst": 227,
    "TotalFuncs": 17,
    "ArgsPhi": 4,
    "testUnary": 185
  },
  "baseline_oz_instcount": 429,
  "knowledge_base_entry": [
    "--reassociate",
    "--dse",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--instcombine",
    "--correlated-propagation",
    "--reassociate",
    "--jump-threading",
    "-loop-reduce",
    "--gvn",
    "--slsr",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--licm",
    "--loop-rotate",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--simplifycfg",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--loop-versioning-licm",
          "--callsite-splitting",
          "--post-inline-ee-instrument",
          "--aggressive-instcombine",
          "--flattencfg",
          "--early-cse-memssa",
          "--bdce",
          "--rpo-functionattrs",
          "--loop-reroll",
          "--mldst-motion",
          "--load-store-vectorizer",
          "--canonicalize-aliases",
          "--lower-expect",
          "--loop-guard-widening",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--loop-versioning-licm",
      "--callsite-splitting",
      "--post-inline-ee-instrument",
      "--aggressive-instcombine",
      "--flattencfg",
      "--early-cse-memssa",
      "--bdce",
      "--rpo-functionattrs",
      "--loop-reroll",
      "--mldst-motion",
      "--load-store-vectorizer",
      "--canonicalize-aliases",
      "--lower-expect",
      "--loop-guard-widening",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}