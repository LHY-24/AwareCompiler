{
  "program_id": "linux-v0_5110.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 2,
    "oneSuccessor": 22,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 43,
    "BeginPhi": 0,
    "BranchCount": 29,
    "returnInt": 6,
    "CriticalCount": 0,
    "NumEdges": 36,
    "const32Bit": 149,
    "const64Bit": 19,
    "numConstZeroes": 74,
    "numConstOnes": 46,
    "UncondBranches": 22,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 34,
    "NumAndInst": 1,
    "BlockMid": 6,
    "BlockLow": 37,
    "NumBitCastInst": 5,
    "NumBrInst": 29,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 87,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 56,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 43,
    "TotalInsts": 346,
    "TotalMemInst": 247,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 152
  },
  "baseline_oz_instcount": 346,
  "knowledge_base_entry": [
    "--loop-deletion",
    "--newgvn",
    "--lower-expect",
    "--load-store-vectorizer",
    "--mem2reg",
    "--memcpyopt",
    "--licm",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--lower-expect",
    "--load-store-vectorizer",
    "--mem2reg",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--prune-eh",
    "--sroa",
    "--instcombine",
    "--globalopt",
    "--aggressive-instcombine",
    "--lower-expect",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--reassociate",
    "--dse",
    "--ipsccp",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--bdce",
    "--mem2reg",
    "--simplifycfg",
    "--reassociate",
    "--jump-threading",
    "--bdce",
    "--slp-vectorizer",
    "--dce",
    "--sroa",
    "--newgvn",
    "--gvn-hoist",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--loop-data-prefetch",
          "--load-store-vectorizer",
          "--inline",
          "--rpo-functionattrs",
          "--aggressive-instcombine",
          "--lower-widenable-condition",
          "--partial-inliner",
          "--loop-rotate",
          "-loop-reduce",
          "--constmerge",
          "--callsite-splitting",
          "--lowerswitch",
          "--loop-vectorize",
          "--flattencfg",
          "--correlated-propagation",
          "--inject-tli-mappings"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--loop-data-prefetch",
      "--load-store-vectorizer",
      "--inline",
      "--rpo-functionattrs",
      "--aggressive-instcombine",
      "--lower-widenable-condition",
      "--partial-inliner",
      "--loop-rotate",
      "-loop-reduce",
      "--constmerge",
      "--callsite-splitting",
      "--lowerswitch",
      "--loop-vectorize",
      "--flattencfg",
      "--correlated-propagation",
      "--inject-tli-mappings"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}