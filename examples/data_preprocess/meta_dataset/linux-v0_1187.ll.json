{
  "program_id": "linux-v0_1187.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 29,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 6,
    "oneSuccessor": 28,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 1,
    "BranchCount": 40,
    "returnInt": 8,
    "CriticalCount": 5,
    "NumEdges": 52,
    "const32Bit": 166,
    "const64Bit": 20,
    "numConstZeroes": 58,
    "numConstOnes": 93,
    "UncondBranches": 28,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 73,
    "NumAndInst": 6,
    "BlockMid": 11,
    "BlockLow": 40,
    "NumBitCastInst": 14,
    "NumBrInst": 40,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 39,
    "NumICmpInst": 16,
    "NumLShrInst": 1,
    "NumLoadInst": 144,
    "NumMulInst": 2,
    "NumOrInst": 4,
    "NumPHIInst": 1,
    "NumRetInst": 11,
    "NumSExtInst": 6,
    "NumSelectInst": 1,
    "NumShlInst": 7,
    "NumStoreInst": 95,
    "NumSubInst": 5,
    "NumTruncInst": 6,
    "NumXorInst": 3,
    "NumZExtInst": 19,
    "TotalBlocks": 51,
    "TotalInsts": 525,
    "TotalMemInst": 370,
    "TotalFuncs": 20,
    "ArgsPhi": 2,
    "testUnary": 267
  },
  "baseline_oz_instcount": 525,
  "knowledge_base_entry": [
    "--jump-threading",
    "--die",
    "--sroa",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--newgvn",
    "--loop-deletion",
    "--sccp",
    "--lower-expect",
    "--newgvn",
    "--early-cse",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-guard-intrinsic",
          "--inline",
          "--inferattrs",
          "--callsite-splitting",
          "--strip",
          "--constprop",
          "--div-rem-pairs",
          "--attributor",
          "--instsimplify",
          "--strip-dead-prototypes",
          "--simple-loop-unswitch",
          "--nary-reassociate",
          "--rewrite-statepoints-for-gc",
          "--loop-guard-widening",
          "--loop-reroll",
          "--flattencfg",
          "--irce",
          "--canonicalize-aliases",
          "--name-anon-globals",
          "--mem2reg",
          "--forceattrs",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-guard-intrinsic",
      "--inline",
      "--inferattrs",
      "--callsite-splitting",
      "--strip",
      "--constprop",
      "--div-rem-pairs",
      "--attributor",
      "--instsimplify",
      "--strip-dead-prototypes",
      "--simple-loop-unswitch",
      "--nary-reassociate",
      "--rewrite-statepoints-for-gc",
      "--loop-guard-widening",
      "--loop-reroll",
      "--flattencfg",
      "--irce",
      "--canonicalize-aliases",
      "--name-anon-globals",
      "--mem2reg",
      "--forceattrs",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}