{
  "program_id": "tensorflow-v0_111.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 2,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 1,
    "BBNoPhi": 5,
    "BeginPhi": 4,
    "BranchCount": 8,
    "returnInt": 0,
    "CriticalCount": 6,
    "NumEdges": 13,
    "const32Bit": 9,
    "const64Bit": 6,
    "numConstZeroes": 8,
    "numConstOnes": 4,
    "UncondBranches": 3,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 0,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 8,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 5,
    "NumLShrInst": 1,
    "NumLoadInst": 3,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 10,
    "NumRetInst": 1,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 2,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 46,
    "TotalMemInst": 9,
    "TotalFuncs": 1,
    "ArgsPhi": 24,
    "testUnary": 8
  },
  "baseline_oz_instcount": 43,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--die",
    "--simplifycfg",
    "--slsr",
    "--indvars",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--lower-expect",
    "--ipsccp",
    "--simplifycfg",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--infer-address-spaces",
          "--loop-data-prefetch",
          "--globalsplit",
          "--insert-gcov-profiling",
          "--lower-expect",
          "--strip-dead-prototypes",
          "--loop-idiom",
          "--indvars",
          "--ipsccp",
          "--aggressive-instcombine",
          "--lcssa",
          "--simplifycfg",
          "--hotcoldsplit",
          "--mergeicmps",
          "--attributor",
          "--add-discriminators",
          "--strip",
          "--scalarizer",
          "--sancov",
          "--canonicalize-aliases",
          "--speculative-execution"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--infer-address-spaces",
      "--loop-data-prefetch",
      "--globalsplit",
      "--insert-gcov-profiling",
      "--lower-expect",
      "--strip-dead-prototypes",
      "--loop-idiom",
      "--indvars",
      "--ipsccp",
      "--aggressive-instcombine",
      "--lcssa",
      "--simplifycfg",
      "--hotcoldsplit",
      "--mergeicmps",
      "--attributor",
      "--add-discriminators",
      "--strip",
      "--scalarizer",
      "--sancov",
      "--canonicalize-aliases",
      "--speculative-execution"
    ],
    "performance_vs_Oz": "+2.3%"
  }
}