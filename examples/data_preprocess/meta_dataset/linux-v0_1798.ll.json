{
  "program_id": "linux-v0_1798.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 3,
    "oneSuccessor": 32,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 0,
    "BranchCount": 43,
    "returnInt": 11,
    "CriticalCount": 7,
    "NumEdges": 54,
    "const32Bit": 151,
    "const64Bit": 44,
    "numConstZeroes": 84,
    "numConstOnes": 40,
    "UncondBranches": 32,
    "binaryConstArg": 21,
    "NumAShrInst": 1,
    "NumAddInst": 5,
    "NumAllocaInst": 28,
    "NumAndInst": 9,
    "BlockMid": 6,
    "BlockLow": 47,
    "NumBitCastInst": 13,
    "NumBrInst": 43,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 69,
    "NumICmpInst": 12,
    "NumLShrInst": 3,
    "NumLoadInst": 117,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 69,
    "NumSubInst": 4,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 53,
    "TotalInsts": 439,
    "TotalMemInst": 317,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 177
  },
  "baseline_oz_instcount": 439,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse",
    "--correlated-propagation",
    "--mergefunc",
    "--instcombine",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--pgo-memop-opt",
          "--partially-inline-libcalls",
          "--aggressive-instcombine",
          "--argpromotion",
          "--elim-avail-extern",
          "--mergefunc",
          "--flattencfg",
          "--loop-reroll",
          "--lower-widenable-condition",
          "--loop-versioning",
          "--prune-eh",
          "--loop-simplify",
          "--mergereturn",
          "--constmerge",
          "--alignment-from-assumptions",
          "-loop-reduce",
          "--loop-sink",
          "--lower-guard-intrinsic",
          "--mldst-motion",
          "--cross-dso-cfi",
          "--infer-address-spaces",
          "--loop-unroll-and-jam",
          "--speculative-execution",
          "--memcpyopt",
          "--loop-vectorize",
          "--ee-instrument",
          "--newgvn",
          "--inferattrs",
          "--simplifycfg",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--pgo-memop-opt",
      "--partially-inline-libcalls",
      "--aggressive-instcombine",
      "--argpromotion",
      "--elim-avail-extern",
      "--mergefunc",
      "--flattencfg",
      "--loop-reroll",
      "--lower-widenable-condition",
      "--loop-versioning",
      "--prune-eh",
      "--loop-simplify",
      "--mergereturn",
      "--constmerge",
      "--alignment-from-assumptions",
      "-loop-reduce",
      "--loop-sink",
      "--lower-guard-intrinsic",
      "--mldst-motion",
      "--cross-dso-cfi",
      "--infer-address-spaces",
      "--loop-unroll-and-jam",
      "--speculative-execution",
      "--memcpyopt",
      "--loop-vectorize",
      "--ee-instrument",
      "--newgvn",
      "--inferattrs",
      "--simplifycfg",
      "--inline"
    ],
    "performance_vs_Oz": "+5.0%"
  }
}