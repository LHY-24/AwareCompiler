{
  "program_id": "linux-v0_1494.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 41,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 11,
    "oneSuccessor": 31,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 16,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 68,
    "BeginPhi": 0,
    "BranchCount": 45,
    "returnInt": 17,
    "CriticalCount": 2,
    "NumEdges": 67,
    "const32Bit": 235,
    "const64Bit": 13,
    "numConstZeroes": 95,
    "numConstOnes": 88,
    "UncondBranches": 31,
    "binaryConstArg": 13,
    "NumAShrInst": 2,
    "NumAddInst": 4,
    "NumAllocaInst": 71,
    "NumAndInst": 5,
    "BlockMid": 15,
    "BlockLow": 53,
    "NumBitCastInst": 15,
    "NumBrInst": 45,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 183,
    "NumMulInst": 4,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 109,
    "NumSubInst": 2,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 20,
    "TotalBlocks": 68,
    "TotalInsts": 626,
    "TotalMemInst": 474,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 297
  },
  "baseline_oz_instcount": 628,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--sccp",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--adce",
    "--dse",
    "--early-cse",
    "--loop-deletion",
    "--sccp",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--mem2reg",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--tailcallelim",
          "--coro-elide",
          "--mem2reg",
          "--lowerinvoke",
          "--load-store-vectorizer",
          "--mldst-motion",
          "--lower-constant-intrinsics",
          "--aggressive-instcombine",
          "--loop-fusion",
          "--rpo-functionattrs",
          "--loop-deletion",
          "--loop-load-elim",
          "--libcalls-shrinkwrap",
          "--gvn",
          "--simplifycfg",
          "--loop-versioning",
          "--inject-tli-mappings",
          "--instnamer",
          "--loop-guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--tailcallelim",
      "--coro-elide",
      "--mem2reg",
      "--lowerinvoke",
      "--load-store-vectorizer",
      "--mldst-motion",
      "--lower-constant-intrinsics",
      "--aggressive-instcombine",
      "--loop-fusion",
      "--rpo-functionattrs",
      "--loop-deletion",
      "--loop-load-elim",
      "--libcalls-shrinkwrap",
      "--gvn",
      "--simplifycfg",
      "--loop-versioning",
      "--inject-tli-mappings",
      "--instnamer",
      "--loop-guard-widening"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}