{
  "program_id": "poj104-v1_48_945.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 36,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 0,
    "oneSuccessor": 34,
    "twoPred": 9,
    "twoPredOneSuc": 0,
    "twoEach": 8,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 55,
    "BeginPhi": 0,
    "BranchCount": 44,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 54,
    "const32Bit": 70,
    "const64Bit": 67,
    "numConstZeroes": 44,
    "numConstOnes": 44,
    "UncondBranches": 34,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 28,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 49,
    "NumBitCastInst": 37,
    "NumBrInst": 44,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 76,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 25,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 45,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 55,
    "TotalInsts": 379,
    "TotalMemInst": 236,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 167
  },
  "baseline_oz_instcount": 213,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--licm",
    "--die",
    "--elim-avail-extern",
    "--adce",
    "--licm",
    "--dce",
    "--elim-avail-extern",
    "--prune-eh",
    "--instsimplify",
    "--sroa",
    "--indvars",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--nary-reassociate",
    "--slsr",
    "--loop-reroll",
    "--early-cse",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--adce",
    "--licm",
    "--dce",
    "--elim-avail-extern",
    "--prune-eh",
    "--instsimplify",
    "--sroa",
    "--indvars",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--nary-reassociate",
    "--slsr",
    "--newgvn",
    "--prune-eh",
    "--instcombine",
    "--adce",
    "--reassociate",
    "--gvn",
    "--instcombine",
    "--gvn",
    "--newgvn",
    "--loop-rotate",
    "--inline",
    "--memcpyopt",
    "--early-cse-memssa",
    "--newgvn",
    "--dse",
    "--simplifycfg",
    "--die",
    "--jump-threading",
    "--correlated-propagation",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--loop-rotate",
          "--separate-const-offset-from-gep",
          "--globalopt",
          "--newgvn",
          "--irce",
          "--deadargelim",
          "--loop-versioning-licm",
          "--add-discriminators",
          "--attributor",
          "--sroa",
          "--elim-avail-extern",
          "--sancov",
          "--mergefunc",
          "--globalsplit",
          "--loop-reroll",
          "--callsite-splitting",
          "--lower-constant-intrinsics",
          "--simplifycfg",
          "--slsr",
          "--aggressive-instcombine",
          "--lowerinvoke",
          "--jump-threading"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+25.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--loop-rotate",
      "--separate-const-offset-from-gep",
      "--globalopt",
      "--newgvn",
      "--irce",
      "--deadargelim",
      "--loop-versioning-licm",
      "--add-discriminators",
      "--attributor",
      "--sroa",
      "--elim-avail-extern",
      "--sancov",
      "--mergefunc",
      "--globalsplit",
      "--loop-reroll",
      "--callsite-splitting",
      "--lower-constant-intrinsics",
      "--simplifycfg",
      "--slsr",
      "--aggressive-instcombine",
      "--lowerinvoke",
      "--jump-threading"
    ],
    "performance_vs_Oz": "+25.8%"
  }
}