{
  "program_id": "github-v0_29640.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 32,
    "const64Bit": 55,
    "numConstZeroes": 52,
    "numConstOnes": 28,
    "UncondBranches": 11,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 16,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 57,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 31,
    "TotalBlocks": 21,
    "TotalInsts": 247,
    "TotalMemInst": 155,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 127
  },
  "baseline_oz_instcount": 247,
  "knowledge_base_entry": [
    "--loop-fusion",
    "--gvn-hoist",
    "--inline",
    "--reassociate",
    "--instcombine",
    "--aggressive-instcombine",
    "--loweratomic",
    "--aggressive-instcombine",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--simplifycfg",
    "--instcombine",
    "--dse",
    "--mldst-motion",
    "--licm",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--loop-guard-widening",
          "--coro-split",
          "--strip",
          "--lowerswitch",
          "--post-inline-ee-instrument",
          "--loop-versioning-licm",
          "--strip-debug-declare",
          "--globalopt",
          "--dse",
          "--loop-sink",
          "--mldst-motion",
          "--globaldce",
          "--flattencfg",
          "--load-store-vectorizer",
          "--indvars",
          "--attributor",
          "--forceattrs",
          "--instsimplify",
          "--functionattrs",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--loop-guard-widening",
      "--coro-split",
      "--strip",
      "--lowerswitch",
      "--post-inline-ee-instrument",
      "--loop-versioning-licm",
      "--strip-debug-declare",
      "--globalopt",
      "--dse",
      "--loop-sink",
      "--mldst-motion",
      "--globaldce",
      "--flattencfg",
      "--load-store-vectorizer",
      "--indvars",
      "--attributor",
      "--forceattrs",
      "--instsimplify",
      "--functionattrs",
      "--always-inline"
    ],
    "performance_vs_Oz": "+4.9%"
  }
}