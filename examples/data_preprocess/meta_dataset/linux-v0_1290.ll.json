{
  "program_id": "linux-v0_1290.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 44,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 8,
    "oneSuccessor": 42,
    "twoPred": 15,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 19,
    "morePreds": 2,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 83,
    "BeginPhi": 5,
    "BranchCount": 61,
    "returnInt": 36,
    "CriticalCount": 10,
    "NumEdges": 80,
    "const32Bit": 241,
    "const64Bit": 41,
    "numConstZeroes": 89,
    "numConstOnes": 139,
    "UncondBranches": 42,
    "binaryConstArg": 25,
    "NumAShrInst": 2,
    "NumAddInst": 3,
    "NumAllocaInst": 113,
    "NumAndInst": 10,
    "BlockMid": 16,
    "BlockLow": 72,
    "NumBitCastInst": 16,
    "NumBrInst": 61,
    "NumCallInst": 58,
    "NumGetElementPtrInst": 64,
    "NumICmpInst": 24,
    "NumLShrInst": 1,
    "NumLoadInst": 189,
    "NumMulInst": 3,
    "NumOrInst": 2,
    "NumPHIInst": 5,
    "NumRetInst": 27,
    "NumSExtInst": 21,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 122,
    "NumSubInst": 3,
    "NumTruncInst": 11,
    "NumXorInst": 4,
    "NumZExtInst": 14,
    "TotalBlocks": 88,
    "TotalInsts": 761,
    "TotalMemInst": 546,
    "TotalFuncs": 43,
    "ArgsPhi": 10,
    "testUnary": 368
  },
  "baseline_oz_instcount": 761,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--ipsccp",
    "--sccp",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--licm",
    "--early-cse-memssa",
    "--mem2reg",
    "--slp-vectorizer",
    "--early-cse",
    "--reassociate",
    "--slp-vectorizer",
    "--die",
    "--early-cse",
    "--early-cse",
    "--mergefunc",
    "--aggressive-instcombine",
    "--flattencfg",
    "--jump-threading",
    "--slp-vectorizer",
    "--bdce",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--inline",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--inline",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--lower-expect",
    "--gvn-hoist",
    "--reassociate",
    "--reassociate",
    "--early-cse-memssa",
    "--memcpyopt",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--gvn-hoist",
    "--sccp",
    "--dse",
    "--loop-instsimplify",
    "--adce",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--sancov",
          "--loop-unroll",
          "--mergereturn",
          "--always-inline",
          "--forceattrs",
          "--redundant-dbg-inst-elim",
          "--adce",
          "--aggressive-instcombine",
          "--gvn",
          "--reassociate",
          "--loop-sink",
          "--tailcallelim",
          "--inferattrs",
          "--coro-elide",
          "--loop-rotate",
          "--scalarizer",
          "--partially-inline-libcalls",
          "--loop-versioning",
          "--libcalls-shrinkwrap",
          "--attributor",
          "--argpromotion",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--sancov",
      "--loop-unroll",
      "--mergereturn",
      "--always-inline",
      "--forceattrs",
      "--redundant-dbg-inst-elim",
      "--adce",
      "--aggressive-instcombine",
      "--gvn",
      "--reassociate",
      "--loop-sink",
      "--tailcallelim",
      "--inferattrs",
      "--coro-elide",
      "--loop-rotate",
      "--scalarizer",
      "--partially-inline-libcalls",
      "--loop-versioning",
      "--libcalls-shrinkwrap",
      "--attributor",
      "--argpromotion",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}