{
  "program_id": "linux-v0_1008.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 5,
    "oneSuccessor": 13,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 16,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 153,
    "const64Bit": 7,
    "numConstZeroes": 52,
    "numConstOnes": 78,
    "UncondBranches": 13,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 58,
    "NumAndInst": 1,
    "BlockMid": 7,
    "BlockLow": 39,
    "NumBitCastInst": 9,
    "NumBrInst": 20,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 120,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 26,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 70,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 5,
    "TotalBlocks": 46,
    "TotalInsts": 414,
    "TotalMemInst": 333,
    "TotalFuncs": 40,
    "ArgsPhi": 0,
    "testUnary": 200
  },
  "baseline_oz_instcount": 414,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--sroa",
    "--aggressive-instcombine",
    "--gvn",
    "--slp-vectorizer",
    "-loop-reduce",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-elide",
          "--sroa",
          "--aggressive-instcombine",
          "--slsr",
          "--deadargelim",
          "--loop-predication",
          "--argpromotion",
          "--functionattrs",
          "--scalarizer",
          "--globalopt",
          "--attributor",
          "--inject-tli-mappings",
          "--newgvn",
          "--loop-fusion",
          "--loop-guard-widening",
          "--inline",
          "--insert-gcov-profiling",
          "--hotcoldsplit",
          "--loop-sink",
          "--loop-data-prefetch",
          "--loop-unroll",
          "--lower-expect",
          "--loop-rotate",
          "--cross-dso-cfi",
          "--loop-versioning-licm",
          "--strip-nondebug",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-elide",
      "--sroa",
      "--aggressive-instcombine",
      "--slsr",
      "--deadargelim",
      "--loop-predication",
      "--argpromotion",
      "--functionattrs",
      "--scalarizer",
      "--globalopt",
      "--attributor",
      "--inject-tli-mappings",
      "--newgvn",
      "--loop-fusion",
      "--loop-guard-widening",
      "--inline",
      "--insert-gcov-profiling",
      "--hotcoldsplit",
      "--loop-sink",
      "--loop-data-prefetch",
      "--loop-unroll",
      "--lower-expect",
      "--loop-rotate",
      "--cross-dso-cfi",
      "--loop-versioning-licm",
      "--strip-nondebug",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}