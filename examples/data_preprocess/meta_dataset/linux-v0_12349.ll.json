{
  "program_id": "linux-v0_12349.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 47,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 18,
    "oneSuccessor": 47,
    "twoPred": 26,
    "twoPredOneSuc": 11,
    "twoEach": 12,
    "twoSuccessor": 33,
    "morePreds": 8,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 85,
    "BeginPhi": 2,
    "BranchCount": 80,
    "returnInt": 8,
    "CriticalCount": 35,
    "NumEdges": 126,
    "const32Bit": 101,
    "const64Bit": 10,
    "numConstZeroes": 34,
    "numConstOnes": 57,
    "UncondBranches": 47,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 31,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 84,
    "NumBitCastInst": 0,
    "NumBrInst": 80,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 34,
    "NumLShrInst": 0,
    "NumLoadInst": 145,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 6,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 71,
    "NumSubInst": 8,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 17,
    "TotalBlocks": 87,
    "TotalInsts": 464,
    "TotalMemInst": 285,
    "TotalFuncs": 11,
    "ArgsPhi": 4,
    "testUnary": 211
  },
  "baseline_oz_instcount": 466,
  "knowledge_base_entry": [
    "--reassociate",
    "--reassociate",
    "--adce",
    "--early-cse-memssa",
    "--newgvn",
    "--newgvn",
    "--dce",
    "--mem2reg",
    "--die",
    "--sroa",
    "--mem2reg",
    "--lower-expect",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--load-store-vectorizer",
          "--canonicalize-aliases",
          "--early-cse-memssa",
          "--argpromotion",
          "--called-value-propagation",
          "--coro-cleanup",
          "--strip-dead-prototypes",
          "--scalarizer",
          "--functionattrs",
          "--early-cse",
          "--lower-constant-intrinsics",
          "--loop-distribute",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--load-store-vectorizer",
      "--canonicalize-aliases",
      "--early-cse-memssa",
      "--argpromotion",
      "--called-value-propagation",
      "--coro-cleanup",
      "--strip-dead-prototypes",
      "--scalarizer",
      "--functionattrs",
      "--early-cse",
      "--lower-constant-intrinsics",
      "--loop-distribute",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}