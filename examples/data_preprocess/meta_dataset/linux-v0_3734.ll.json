{
  "program_id": "linux-v0_3734.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 59,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 15,
    "oneSuccessor": 59,
    "twoPred": 29,
    "twoPredOneSuc": 13,
    "twoEach": 2,
    "twoSuccessor": 29,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 112,
    "BeginPhi": 0,
    "BranchCount": 88,
    "returnInt": 8,
    "CriticalCount": 10,
    "NumEdges": 122,
    "const32Bit": 343,
    "const64Bit": 5,
    "numConstZeroes": 155,
    "numConstOnes": 121,
    "UncondBranches": 59,
    "binaryConstArg": 4,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 94,
    "NumAndInst": 2,
    "BlockMid": 12,
    "BlockLow": 100,
    "NumBitCastInst": 21,
    "NumBrInst": 88,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 107,
    "NumICmpInst": 27,
    "NumLShrInst": 0,
    "NumLoadInst": 216,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 128,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 1,
    "NumZExtInst": 1,
    "TotalBlocks": 112,
    "TotalInsts": 777,
    "TotalMemInst": 601,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 342
  },
  "baseline_oz_instcount": 777,
  "knowledge_base_entry": [
    "--slsr",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--instcombine",
    "--mergefunc",
    "--mem2reg",
    "--dce",
    "--sroa",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--lowerinvoke",
          "--sroa",
          "--name-anon-globals",
          "--callsite-splitting",
          "-loop-reduce",
          "--globalsplit",
          "--pgo-memop-opt",
          "--strip-debug-declare",
          "--loop-predication",
          "--indvars",
          "--lower-matrix-intrinsics",
          "--deadargelim",
          "--loop-sink",
          "--mergefunc",
          "--redundant-dbg-inst-elim",
          "--instnamer",
          "--slp-vectorizer",
          "--float2int",
          "--rewrite-statepoints-for-gc",
          "--inject-tli-mappings",
          "--globalopt",
          "--loop-versioning",
          "--loop-distribute",
          "--consthoist",
          "--nary-reassociate",
          "--loop-simplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--lowerinvoke",
      "--sroa",
      "--name-anon-globals",
      "--callsite-splitting",
      "-loop-reduce",
      "--globalsplit",
      "--pgo-memop-opt",
      "--strip-debug-declare",
      "--loop-predication",
      "--indvars",
      "--lower-matrix-intrinsics",
      "--deadargelim",
      "--loop-sink",
      "--mergefunc",
      "--redundant-dbg-inst-elim",
      "--instnamer",
      "--slp-vectorizer",
      "--float2int",
      "--rewrite-statepoints-for-gc",
      "--inject-tli-mappings",
      "--globalopt",
      "--loop-versioning",
      "--loop-distribute",
      "--consthoist",
      "--nary-reassociate",
      "--loop-simplify"
    ],
    "performance_vs_Oz": "+5.3%"
  }
}