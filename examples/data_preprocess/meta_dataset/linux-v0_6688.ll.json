{
  "program_id": "linux-v0_6688.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 18,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 5,
    "oneSuccessor": 14,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 1,
    "BranchCount": 24,
    "returnInt": 7,
    "CriticalCount": 2,
    "NumEdges": 34,
    "const32Bit": 33,
    "const64Bit": 5,
    "numConstZeroes": 17,
    "numConstOnes": 18,
    "UncondBranches": 14,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 25,
    "NumBitCastInst": 0,
    "NumBrInst": 24,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 24,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 2,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 1,
    "TotalBlocks": 26,
    "TotalInsts": 111,
    "TotalMemInst": 66,
    "TotalFuncs": 10,
    "ArgsPhi": 2,
    "testUnary": 40
  },
  "baseline_oz_instcount": 112,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--globalopt",
    "--mergefunc",
    "--elim-avail-extern",
    "--newgvn",
    "--simplifycfg",
    "--gvn-hoist",
    "--bdce",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partial-inliner",
          "--coro-elide",
          "--float2int",
          "--mergereturn",
          "--dce",
          "--div-rem-pairs",
          "--slsr",
          "--ee-instrument",
          "--guard-widening",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partial-inliner",
      "--coro-elide",
      "--float2int",
      "--mergereturn",
      "--dce",
      "--div-rem-pairs",
      "--slsr",
      "--ee-instrument",
      "--guard-widening",
      "--barrier"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}