{
  "program_id": "linux-v0_2.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 23,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 6,
    "oneSuccessor": 19,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 12,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 1,
    "BranchCount": 31,
    "returnInt": 10,
    "CriticalCount": 2,
    "NumEdges": 43,
    "const32Bit": 197,
    "const64Bit": 12,
    "numConstZeroes": 80,
    "numConstOnes": 82,
    "UncondBranches": 19,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 64,
    "NumAndInst": 2,
    "BlockMid": 9,
    "BlockLow": 51,
    "NumBitCastInst": 12,
    "NumBrInst": 31,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 62,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 145,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 29,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 77,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 6,
    "NumZExtInst": 11,
    "TotalBlocks": 60,
    "TotalInsts": 524,
    "TotalMemInst": 398,
    "TotalFuncs": 46,
    "ArgsPhi": 2,
    "testUnary": 247
  },
  "baseline_oz_instcount": 524,
  "knowledge_base_entry": [
    "--loop-rotate",
    "--aggressive-instcombine",
    "--die",
    "--lower-expect",
    "--mergefunc",
    "--early-cse-memssa",
    "--globalopt",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-elide",
          "--strip",
          "--ipsccp",
          "--inferattrs",
          "--float2int",
          "--irce",
          "--sroa",
          "--simple-loop-unswitch",
          "--rpo-functionattrs",
          "--coro-split",
          "--loop-simplify",
          "--aggressive-instcombine",
          "--dse",
          "--inject-tli-mappings",
          "--instnamer",
          "--elim-avail-extern",
          "--mem2reg",
          "--slp-vectorizer",
          "--load-store-vectorizer",
          "--mldst-motion",
          "--div-rem-pairs",
          "--insert-gcov-profiling",
          "--sink",
          "--infer-address-spaces",
          "--constmerge",
          "--reassociate",
          "--loop-unroll-and-jam",
          "--partial-inliner",
          "--pgo-memop-opt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-elide",
      "--strip",
      "--ipsccp",
      "--inferattrs",
      "--float2int",
      "--irce",
      "--sroa",
      "--simple-loop-unswitch",
      "--rpo-functionattrs",
      "--coro-split",
      "--loop-simplify",
      "--aggressive-instcombine",
      "--dse",
      "--inject-tli-mappings",
      "--instnamer",
      "--elim-avail-extern",
      "--mem2reg",
      "--slp-vectorizer",
      "--load-store-vectorizer",
      "--mldst-motion",
      "--div-rem-pairs",
      "--insert-gcov-profiling",
      "--sink",
      "--infer-address-spaces",
      "--constmerge",
      "--reassociate",
      "--loop-unroll-and-jam",
      "--partial-inliner",
      "--pgo-memop-opt"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}