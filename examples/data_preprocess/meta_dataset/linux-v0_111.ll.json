{
  "program_id": "linux-v0_111.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 71,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 19,
    "oneSuccessor": 64,
    "twoPred": 22,
    "twoPredOneSuc": 11,
    "twoEach": 3,
    "twoSuccessor": 35,
    "morePreds": 9,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 131,
    "BeginPhi": 1,
    "BranchCount": 99,
    "returnInt": 30,
    "CriticalCount": 17,
    "NumEdges": 148,
    "const32Bit": 238,
    "const64Bit": 16,
    "numConstZeroes": 89,
    "numConstOnes": 128,
    "UncondBranches": 64,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 106,
    "NumAndInst": 5,
    "BlockMid": 12,
    "BlockLow": 120,
    "NumBitCastInst": 43,
    "NumBrInst": 99,
    "NumCallInst": 100,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 36,
    "NumLShrInst": 2,
    "NumLoadInst": 228,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 30,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 137,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 6,
    "NumZExtInst": 8,
    "TotalBlocks": 132,
    "TotalInsts": 869,
    "TotalMemInst": 609,
    "TotalFuncs": 56,
    "ArgsPhi": 2,
    "testUnary": 409
  },
  "baseline_oz_instcount": 869,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--mergefunc",
    "--licm",
    "--newgvn",
    "--loop-fusion",
    "--gvn",
    "--loop-rotate",
    "--early-cse-memssa",
    "--loop-deletion",
    "--newgvn",
    "--dse",
    "--adce",
    "--bdce",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--prune-eh",
          "--ipconstprop",
          "--strip",
          "--mergefunc",
          "--redundant-dbg-inst-elim",
          "--lowerinvoke",
          "--lower-expect",
          "--irce",
          "--strip-dead-prototypes",
          "--loop-vectorize",
          "--mergeicmps",
          "--aggressive-instcombine",
          "--coro-early",
          "--cross-dso-cfi",
          "--strip-nondebug",
          "--inline",
          "--loop-distribute",
          "--constprop",
          "--nary-reassociate",
          "--rpo-functionattrs",
          "--loop-fusion",
          "--float2int",
          "--mldst-motion",
          "--indvars",
          "--inject-tli-mappings",
          "--tailcallelim",
          "--alignment-from-assumptions",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--prune-eh",
      "--ipconstprop",
      "--strip",
      "--mergefunc",
      "--redundant-dbg-inst-elim",
      "--lowerinvoke",
      "--lower-expect",
      "--irce",
      "--strip-dead-prototypes",
      "--loop-vectorize",
      "--mergeicmps",
      "--aggressive-instcombine",
      "--coro-early",
      "--cross-dso-cfi",
      "--strip-nondebug",
      "--inline",
      "--loop-distribute",
      "--constprop",
      "--nary-reassociate",
      "--rpo-functionattrs",
      "--loop-fusion",
      "--float2int",
      "--mldst-motion",
      "--indvars",
      "--inject-tli-mappings",
      "--tailcallelim",
      "--alignment-from-assumptions",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}