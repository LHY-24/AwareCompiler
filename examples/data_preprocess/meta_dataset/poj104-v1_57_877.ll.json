{
  "program_id": "poj104-v1_57_877.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 7,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 5,
    "CriticalCount": 3,
    "NumEdges": 15,
    "const32Bit": 20,
    "const64Bit": 22,
    "numConstZeroes": 19,
    "numConstOnes": 10,
    "UncondBranches": 7,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 13,
    "NumBitCastInst": 10,
    "NumBrInst": 11,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 8,
    "NumSubInst": 6,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 14,
    "TotalInsts": 97,
    "TotalMemInst": 52,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 38
  },
  "baseline_oz_instcount": 53,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--gvn",
    "--flattencfg",
    "--early-cse",
    "--lower-expect",
    "--sccp",
    "--inline",
    "--instcombine",
    "--simplifycfg",
    "--loop-instsimplify",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--coro-elide",
          "--rewrite-statepoints-for-gc",
          "--sroa",
          "--dse",
          "--loop-idiom",
          "--elim-avail-extern",
          "--speculative-execution",
          "--name-anon-globals",
          "--ipsccp",
          "--loop-interchange",
          "--newgvn",
          "--loop-reroll",
          "--mldst-motion",
          "--prune-eh",
          "--strip-dead-prototypes",
          "--loop-versioning",
          "--deadargelim",
          "--pgo-memop-opt",
          "--strip-debug-declare",
          "--loop-simplify",
          "--flattencfg",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--coro-elide",
      "--rewrite-statepoints-for-gc",
      "--sroa",
      "--dse",
      "--loop-idiom",
      "--elim-avail-extern",
      "--speculative-execution",
      "--name-anon-globals",
      "--ipsccp",
      "--loop-interchange",
      "--newgvn",
      "--loop-reroll",
      "--mldst-motion",
      "--prune-eh",
      "--strip-dead-prototypes",
      "--loop-versioning",
      "--deadargelim",
      "--pgo-memop-opt",
      "--strip-debug-declare",
      "--loop-simplify",
      "--flattencfg",
      "--always-inline"
    ],
    "performance_vs_Oz": "+5.7%"
  }
}