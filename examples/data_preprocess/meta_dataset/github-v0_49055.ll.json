{
  "program_id": "github-v0_49055.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 5,
    "oneSuccessor": 18,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 32,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 5,
    "CriticalCount": 3,
    "NumEdges": 38,
    "const32Bit": 43,
    "const64Bit": 0,
    "numConstZeroes": 23,
    "numConstOnes": 11,
    "UncondBranches": 18,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 31,
    "NumBitCastInst": 0,
    "NumBrInst": 28,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 16,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 32,
    "TotalInsts": 155,
    "TotalMemInst": 108,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 61
  },
  "baseline_oz_instcount": 157,
  "knowledge_base_entry": [
    "--inferattrs",
    "--newgvn",
    "--inline",
    "--dce",
    "--sccp",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--adce",
    "--die",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--memcpyopt",
    "--instcombine",
    "--globalopt",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--forceattrs",
          "--ipsccp",
          "--lcssa",
          "--rpo-functionattrs",
          "--correlated-propagation",
          "--nary-reassociate",
          "--instcombine",
          "--dse",
          "--aggressive-instcombine",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--forceattrs",
      "--ipsccp",
      "--lcssa",
      "--rpo-functionattrs",
      "--correlated-propagation",
      "--nary-reassociate",
      "--instcombine",
      "--dse",
      "--aggressive-instcombine",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}