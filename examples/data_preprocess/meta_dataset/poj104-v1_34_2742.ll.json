{
  "program_id": "poj104-v1_34_2742.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 5,
    "CriticalCount": 4,
    "NumEdges": 13,
    "const32Bit": 24,
    "const64Bit": 12,
    "numConstZeroes": 7,
    "numConstOnes": 13,
    "UncondBranches": 4,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 12,
    "NumBitCastInst": 12,
    "NumBrInst": 7,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 13,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 8,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 13,
    "TotalInsts": 84,
    "TotalMemInst": 51,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 33
  },
  "baseline_oz_instcount": 30,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--gvn",
    "--instcombine",
    "--mergefunc",
    "--memcpyopt",
    "--gvn-hoist",
    "--loop-deletion",
    "--sccp",
    "--adce",
    "--early-cse",
    "--instcombine",
    "--simplifycfg",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--lower-expect",
    "--gvn-hoist",
    "--ipsccp",
    "--inline",
    "--early-cse",
    "--mldst-motion",
    "--dse",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--bdce",
    "--inline",
    "--sroa",
    "--indvars",
    "--slp-vectorizer",
    "--slsr",
    "-loop-reduce",
    "--newgvn",
    "--adce",
    "--mem2reg",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--alignment-from-assumptions",
          "--speculative-execution",
          "--flattencfg",
          "--loop-distribute",
          "--coro-early",
          "--lower-constant-intrinsics",
          "--attributor",
          "--coro-cleanup",
          "--sroa",
          "--break-crit-edges",
          "--lower-expect",
          "--cross-dso-cfi",
          "--loop-unroll",
          "--constmerge",
          "--name-anon-globals",
          "--loop-vectorize",
          "--infer-address-spaces",
          "--newgvn",
          "--tailcallelim",
          "--simplifycfg",
          "--partially-inline-libcalls",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--alignment-from-assumptions",
      "--speculative-execution",
      "--flattencfg",
      "--loop-distribute",
      "--coro-early",
      "--lower-constant-intrinsics",
      "--attributor",
      "--coro-cleanup",
      "--sroa",
      "--break-crit-edges",
      "--lower-expect",
      "--cross-dso-cfi",
      "--loop-unroll",
      "--constmerge",
      "--name-anon-globals",
      "--loop-vectorize",
      "--infer-address-spaces",
      "--newgvn",
      "--tailcallelim",
      "--simplifycfg",
      "--partially-inline-libcalls",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+3.3%"
  }
}