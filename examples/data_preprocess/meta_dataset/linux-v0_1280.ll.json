{
  "program_id": "linux-v0_1280.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 51,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 13,
    "oneSuccessor": 45,
    "twoPred": 11,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 23,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 87,
    "BeginPhi": 0,
    "BranchCount": 68,
    "returnInt": 28,
    "CriticalCount": 14,
    "NumEdges": 95,
    "const32Bit": 230,
    "const64Bit": 39,
    "numConstZeroes": 97,
    "numConstOnes": 117,
    "UncondBranches": 45,
    "binaryConstArg": 29,
    "NumAShrInst": 2,
    "NumAddInst": 4,
    "NumAllocaInst": 78,
    "NumAndInst": 10,
    "BlockMid": 14,
    "BlockLow": 73,
    "NumBitCastInst": 13,
    "NumBrInst": 68,
    "NumCallInst": 47,
    "NumGetElementPtrInst": 69,
    "NumICmpInst": 28,
    "NumLShrInst": 1,
    "NumLoadInst": 177,
    "NumMulInst": 1,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 30,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 101,
    "NumSubInst": 3,
    "NumTruncInst": 14,
    "NumXorInst": 4,
    "NumZExtInst": 22,
    "TotalBlocks": 87,
    "TotalInsts": 703,
    "TotalMemInst": 472,
    "TotalFuncs": 33,
    "ArgsPhi": 0,
    "testUnary": 338
  },
  "baseline_oz_instcount": 703,
  "knowledge_base_entry": [
    "--lower-expect",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--inline",
    "--memcpyopt",
    "--elim-avail-extern",
    "--simplifycfg",
    "--early-cse",
    "--indvars",
    "--gvn",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--licm",
          "--functionattrs",
          "--prune-eh",
          "--lower-guard-intrinsic",
          "--die",
          "--memcpyopt",
          "--instcombine",
          "--redundant-dbg-inst-elim",
          "--dse",
          "--loop-instsimplify",
          "--lcssa",
          "--adce",
          "--lower-matrix-intrinsics",
          "--inline",
          "--tailcallelim",
          "--aggressive-instcombine",
          "--loop-distribute",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--licm",
      "--functionattrs",
      "--prune-eh",
      "--lower-guard-intrinsic",
      "--die",
      "--memcpyopt",
      "--instcombine",
      "--redundant-dbg-inst-elim",
      "--dse",
      "--loop-instsimplify",
      "--lcssa",
      "--adce",
      "--lower-matrix-intrinsics",
      "--inline",
      "--tailcallelim",
      "--aggressive-instcombine",
      "--loop-distribute",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}