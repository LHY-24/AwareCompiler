{
  "program_id": "linux-v0_6481.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 8,
    "oneSuccessor": 51,
    "twoPred": 17,
    "twoPredOneSuc": 7,
    "twoEach": 3,
    "twoSuccessor": 20,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 112,
    "BeginPhi": 0,
    "BranchCount": 70,
    "returnInt": 55,
    "CriticalCount": 13,
    "NumEdges": 114,
    "const32Bit": 405,
    "const64Bit": 7,
    "numConstZeroes": 200,
    "numConstOnes": 103,
    "UncondBranches": 51,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 73,
    "NumAndInst": 8,
    "BlockMid": 14,
    "BlockLow": 98,
    "NumBitCastInst": 16,
    "NumBrInst": 70,
    "NumCallInst": 96,
    "NumGetElementPtrInst": 90,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 230,
    "NumMulInst": 1,
    "NumOrInst": 8,
    "NumPHIInst": 0,
    "NumRetInst": 35,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 7,
    "NumStoreInst": 106,
    "NumSubInst": 8,
    "NumTruncInst": 4,
    "NumXorInst": 3,
    "NumZExtInst": 3,
    "TotalBlocks": 112,
    "TotalInsts": 793,
    "TotalMemInst": 595,
    "TotalFuncs": 54,
    "ArgsPhi": 0,
    "testUnary": 336
  },
  "baseline_oz_instcount": 794,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--adce",
    "--sroa",
    "--newgvn",
    "--prune-eh",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--dse",
    "--inline",
    "--aggressive-instcombine",
    "--adce",
    "--sroa",
    "--ipsccp",
    "--reassociate",
    "--gvn",
    "--licm",
    "--instsimplify",
    "--loop-reroll",
    "--loop-fusion",
    "--early-cse",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--ee-instrument",
          "--slsr",
          "--mem2reg",
          "--loop-vectorize",
          "--coro-cleanup",
          "--hotcoldsplit",
          "--strip",
          "--die",
          "--mergeicmps",
          "--lower-matrix-intrinsics",
          "--callsite-splitting",
          "--licm",
          "--consthoist",
          "--coro-split",
          "--indvars",
          "--instcombine",
          "--loop-load-elim",
          "--ipconstprop",
          "--load-store-vectorizer",
          "--aggressive-instcombine",
          "--lower-expect",
          "--bdce",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--ee-instrument",
      "--slsr",
      "--mem2reg",
      "--loop-vectorize",
      "--coro-cleanup",
      "--hotcoldsplit",
      "--strip",
      "--die",
      "--mergeicmps",
      "--lower-matrix-intrinsics",
      "--callsite-splitting",
      "--licm",
      "--consthoist",
      "--coro-split",
      "--indvars",
      "--instcombine",
      "--loop-load-elim",
      "--ipconstprop",
      "--load-store-vectorizer",
      "--aggressive-instcombine",
      "--lower-expect",
      "--bdce",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}