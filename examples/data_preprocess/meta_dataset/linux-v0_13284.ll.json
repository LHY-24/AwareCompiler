{
  "program_id": "linux-v0_13284.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 39,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 8,
    "oneSuccessor": 32,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 14,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 54,
    "BeginPhi": 0,
    "BranchCount": 46,
    "returnInt": 0,
    "CriticalCount": 14,
    "NumEdges": 75,
    "const32Bit": 96,
    "const64Bit": 19,
    "numConstZeroes": 36,
    "numConstOnes": 73,
    "UncondBranches": 32,
    "binaryConstArg": 22,
    "NumAShrInst": 2,
    "NumAddInst": 0,
    "NumAllocaInst": 47,
    "NumAndInst": 5,
    "BlockMid": 6,
    "BlockLow": 48,
    "NumBitCastInst": 31,
    "NumBrInst": 46,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 94,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 56,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 15,
    "NumZExtInst": 7,
    "TotalBlocks": 54,
    "TotalInsts": 371,
    "TotalMemInst": 228,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 192
  },
  "baseline_oz_instcount": 353,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--newgvn",
    "--dce",
    "--ipsccp",
    "--newgvn",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--flattencfg",
    "--jump-threading",
    "--dse",
    "--adce",
    "--loop-instsimplify",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--scalarizer",
          "--sancov",
          "--licm",
          "--alignment-from-assumptions",
          "--constmerge",
          "--globalopt",
          "--deadargelim",
          "--mergefunc",
          "--div-rem-pairs",
          "--lower-matrix-intrinsics",
          "--loop-unswitch",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--scalarizer",
      "--sancov",
      "--licm",
      "--alignment-from-assumptions",
      "--constmerge",
      "--globalopt",
      "--deadargelim",
      "--mergefunc",
      "--div-rem-pairs",
      "--lower-matrix-intrinsics",
      "--loop-unswitch",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}