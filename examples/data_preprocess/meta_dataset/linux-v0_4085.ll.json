{
  "program_id": "linux-v0_4085.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 85,
    "onePredOneSuc": 60,
    "onePredTwoSuc": 24,
    "oneSuccessor": 79,
    "twoPred": 35,
    "twoPredOneSuc": 13,
    "twoEach": 13,
    "twoSuccessor": 47,
    "morePreds": 7,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 151,
    "BeginPhi": 1,
    "BranchCount": 126,
    "returnInt": 27,
    "CriticalCount": 29,
    "NumEdges": 178,
    "const32Bit": 292,
    "const64Bit": 45,
    "numConstZeroes": 143,
    "numConstOnes": 92,
    "UncondBranches": 79,
    "binaryConstArg": 33,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 66,
    "NumAndInst": 24,
    "BlockMid": 8,
    "BlockLow": 144,
    "NumBitCastInst": 19,
    "NumBrInst": 126,
    "NumCallInst": 58,
    "NumGetElementPtrInst": 94,
    "NumICmpInst": 35,
    "NumLShrInst": 1,
    "NumLoadInst": 236,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 1,
    "NumRetInst": 25,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 101,
    "NumSubInst": 1,
    "NumTruncInst": 25,
    "NumXorInst": 9,
    "NumZExtInst": 36,
    "TotalBlocks": 152,
    "TotalInsts": 875,
    "TotalMemInst": 555,
    "TotalFuncs": 40,
    "ArgsPhi": 2,
    "testUnary": 389
  },
  "baseline_oz_instcount": 847,
  "knowledge_base_entry": [
    "--loop-sink",
    "--gvn",
    "--die",
    "--gvn",
    "--gvn",
    "--inline",
    "--die",
    "--correlated-propagation",
    "--early-cse",
    "--ipsccp",
    "--sroa",
    "--dce",
    "--aggressive-instcombine",
    "--mem2reg",
    "--lower-expect",
    "--instcombine",
    "--memcpyopt",
    "--newgvn",
    "--loop-rotate",
    "--licm",
    "--loop-instsimplify",
    "--jump-threading",
    "--loop-rotate",
    "--inline",
    "--mldst-motion",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--adce",
          "--add-discriminators",
          "--coro-split",
          "--indvars",
          "--ipsccp",
          "--inferattrs",
          "--globaldce",
          "--aggressive-instcombine",
          "--licm",
          "--coro-early",
          "--mem2reg",
          "--loop-deletion",
          "--die",
          "--loop-reroll",
          "--globalopt",
          "--constprop",
          "--inject-tli-mappings",
          "--dse",
          "--loop-guard-widening",
          "--loweratomic",
          "--strip",
          "--strip-debug-declare",
          "--simple-loop-unswitch",
          "--nary-reassociate",
          "--sccp",
          "--instnamer",
          "--coro-elide",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--adce",
      "--add-discriminators",
      "--coro-split",
      "--indvars",
      "--ipsccp",
      "--inferattrs",
      "--globaldce",
      "--aggressive-instcombine",
      "--licm",
      "--coro-early",
      "--mem2reg",
      "--loop-deletion",
      "--die",
      "--loop-reroll",
      "--globalopt",
      "--constprop",
      "--inject-tli-mappings",
      "--dse",
      "--loop-guard-widening",
      "--loweratomic",
      "--strip",
      "--strip-debug-declare",
      "--simple-loop-unswitch",
      "--nary-reassociate",
      "--sccp",
      "--instnamer",
      "--coro-elide",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+3.5%"
  }
}