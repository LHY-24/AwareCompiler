{
  "program_id": "github-v0_21129.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 7,
    "BeginPhi": 2,
    "BranchCount": 4,
    "returnInt": 1,
    "CriticalCount": 2,
    "NumEdges": 6,
    "const32Bit": 12,
    "const64Bit": 0,
    "numConstZeroes": 9,
    "numConstOnes": 1,
    "UncondBranches": 2,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 4,
    "NumBitCastInst": 0,
    "NumBrInst": 4,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 1,
    "NumOrInst": 3,
    "NumPHIInst": 2,
    "NumRetInst": 5,
    "NumSExtInst": 4,
    "NumSelectInst": 18,
    "NumShlInst": 1,
    "NumStoreInst": 4,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 113,
    "TotalMemInst": 13,
    "TotalFuncs": 7,
    "ArgsPhi": 4,
    "testUnary": 19
  },
  "baseline_oz_instcount": 113,
  "knowledge_base_entry": [
    "--slsr",
    "--slp-vectorizer",
    "-loop-reduce",
    "--early-cse",
    "--memcpyopt",
    "--jump-threading",
    "--instcombine",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--infer-address-spaces",
          "--mergeicmps",
          "--loop-simplifycfg",
          "--slp-vectorizer",
          "--lower-guard-intrinsic",
          "--simple-loop-unswitch",
          "--dse",
          "--prune-eh",
          "--partial-inliner",
          "--hotcoldsplit",
          "--die",
          "--slsr",
          "--irce",
          "--add-discriminators",
          "--early-cse",
          "--consthoist",
          "--loop-guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--infer-address-spaces",
      "--mergeicmps",
      "--loop-simplifycfg",
      "--slp-vectorizer",
      "--lower-guard-intrinsic",
      "--simple-loop-unswitch",
      "--dse",
      "--prune-eh",
      "--partial-inliner",
      "--hotcoldsplit",
      "--die",
      "--slsr",
      "--irce",
      "--add-discriminators",
      "--early-cse",
      "--consthoist",
      "--loop-guard-widening"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}