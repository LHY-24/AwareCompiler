{
  "program_id": "linux-v0_2858.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 91,
    "onePredOneSuc": 68,
    "onePredTwoSuc": 22,
    "oneSuccessor": 83,
    "twoPred": 20,
    "twoPredOneSuc": 10,
    "twoEach": 6,
    "twoSuccessor": 33,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 136,
    "BeginPhi": 0,
    "BranchCount": 116,
    "returnInt": 29,
    "CriticalCount": 15,
    "NumEdges": 152,
    "const32Bit": 408,
    "const64Bit": 35,
    "numConstZeroes": 235,
    "numConstOnes": 111,
    "UncondBranches": 83,
    "binaryConstArg": 58,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 65,
    "NumAndInst": 26,
    "BlockMid": 18,
    "BlockLow": 118,
    "NumBitCastInst": 19,
    "NumBrInst": 116,
    "NumCallInst": 75,
    "NumGetElementPtrInst": 130,
    "NumICmpInst": 45,
    "NumLShrInst": 10,
    "NumLoadInst": 277,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 10,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 103,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 20,
    "NumZExtInst": 25,
    "TotalBlocks": 136,
    "TotalInsts": 955,
    "TotalMemInst": 650,
    "TotalFuncs": 74,
    "ArgsPhi": 0,
    "testUnary": 406
  },
  "baseline_oz_instcount": 955,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--adce",
    "--gvn",
    "-loop-reduce",
    "--simplifycfg",
    "--dce",
    "--dse",
    "--instcombine",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--slsr",
    "-loop-reduce",
    "--sroa",
    "--inline",
    "--licm",
    "--loop-rotate",
    "--instcombine",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--guard-widening",
          "--add-discriminators",
          "--early-cse",
          "--sroa",
          "--alignment-from-assumptions",
          "--deadargelim",
          "--lower-expect",
          "--aggressive-instcombine",
          "--insert-gcov-profiling",
          "--sccp",
          "--strip",
          "--called-value-propagation",
          "--lower-widenable-condition",
          "--strip-dead-prototypes",
          "--tailcallelim",
          "--simplifycfg",
          "--inject-tli-mappings"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--guard-widening",
      "--add-discriminators",
      "--early-cse",
      "--sroa",
      "--alignment-from-assumptions",
      "--deadargelim",
      "--lower-expect",
      "--aggressive-instcombine",
      "--insert-gcov-profiling",
      "--sccp",
      "--strip",
      "--called-value-propagation",
      "--lower-widenable-condition",
      "--strip-dead-prototypes",
      "--tailcallelim",
      "--simplifycfg",
      "--inject-tli-mappings"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}