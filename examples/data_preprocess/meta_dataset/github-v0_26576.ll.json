{
  "program_id": "github-v0_26576.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 8,
    "onePred": 50,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 12,
    "oneSuccessor": 51,
    "twoPred": 24,
    "twoPredOneSuc": 14,
    "twoEach": 8,
    "twoSuccessor": 26,
    "morePreds": 6,
    "BB03Phi": 8,
    "BBHiPhi": 0,
    "BBNoPhi": 78,
    "BeginPhi": 8,
    "BranchCount": 77,
    "returnInt": 13,
    "CriticalCount": 32,
    "NumEdges": 133,
    "const32Bit": 214,
    "const64Bit": 14,
    "numConstZeroes": 105,
    "numConstOnes": 52,
    "UncondBranches": 51,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 20,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 78,
    "NumBitCastInst": 18,
    "NumBrInst": 77,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 88,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 139,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 8,
    "NumRetInst": 6,
    "NumSExtInst": 28,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 83,
    "NumSubInst": 8,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 86,
    "TotalInsts": 538,
    "TotalMemInst": 350,
    "TotalFuncs": 12,
    "ArgsPhi": 17,
    "testUnary": 205
  },
  "baseline_oz_instcount": 539,
  "knowledge_base_entry": [
    "--mergereturn",
    "--simplifycfg",
    "--elim-avail-extern",
    "--adce",
    "--lower-expect",
    "--mergefunc",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--sink",
          "--guard-widening",
          "--memcpyopt",
          "--load-store-vectorizer",
          "--strip",
          "--mem2reg",
          "--canonicalize-aliases",
          "--coro-split",
          "--libcalls-shrinkwrap",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--sink",
      "--guard-widening",
      "--memcpyopt",
      "--load-store-vectorizer",
      "--strip",
      "--mem2reg",
      "--canonicalize-aliases",
      "--coro-split",
      "--libcalls-shrinkwrap",
      "--instcombine"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}