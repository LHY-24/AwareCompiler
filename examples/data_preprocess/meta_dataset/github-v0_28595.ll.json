{
  "program_id": "github-v0_28595.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 11,
    "oneSuccessor": 40,
    "twoPred": 18,
    "twoPredOneSuc": 4,
    "twoEach": 10,
    "twoSuccessor": 23,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 68,
    "BeginPhi": 0,
    "BranchCount": 63,
    "returnInt": 13,
    "CriticalCount": 9,
    "NumEdges": 86,
    "const32Bit": 67,
    "const64Bit": 2,
    "numConstZeroes": 20,
    "numConstOnes": 47,
    "UncondBranches": 40,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 24,
    "NumAllocaInst": 27,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 63,
    "NumBitCastInst": 1,
    "NumBrInst": 63,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 23,
    "NumLShrInst": 0,
    "NumLoadInst": 129,
    "NumMulInst": 14,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 46,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 68,
    "TotalInsts": 385,
    "TotalMemInst": 230,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 170
  },
  "baseline_oz_instcount": 386,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--adce",
    "--gvn",
    "--ipsccp",
    "--aggressive-instcombine",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--die",
          "--lcssa",
          "--coro-split",
          "--strip-dead-prototypes",
          "--partially-inline-libcalls",
          "--insert-gcov-profiling",
          "--redundant-dbg-inst-elim",
          "--lower-expect",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--die",
      "--lcssa",
      "--coro-split",
      "--strip-dead-prototypes",
      "--partially-inline-libcalls",
      "--insert-gcov-profiling",
      "--redundant-dbg-inst-elim",
      "--lower-expect",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}