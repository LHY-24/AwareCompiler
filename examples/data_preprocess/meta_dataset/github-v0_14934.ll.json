{
  "program_id": "github-v0_14934.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 8,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 1,
    "CriticalCount": 2,
    "NumEdges": 10,
    "const32Bit": 10,
    "const64Bit": 2,
    "numConstZeroes": 6,
    "numConstOnes": 6,
    "UncondBranches": 4,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 8,
    "NumBitCastInst": 0,
    "NumBrInst": 7,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 11,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 8,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 8,
    "TotalInsts": 42,
    "TotalMemInst": 27,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 17
  },
  "baseline_oz_instcount": 43,
  "knowledge_base_entry": [
    "--sccp",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--instsimplify",
          "--functionattrs",
          "--nary-reassociate",
          "--cross-dso-cfi",
          "--mergeicmps",
          "--dce",
          "--attributor",
          "--mem2reg",
          "--load-store-vectorizer",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--instsimplify",
      "--functionattrs",
      "--nary-reassociate",
      "--cross-dso-cfi",
      "--mergeicmps",
      "--dce",
      "--attributor",
      "--mem2reg",
      "--load-store-vectorizer",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+2.3%"
  }
}