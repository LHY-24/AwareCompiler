{
  "program_id": "github-v0_18848.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 37,
    "const64Bit": 35,
    "numConstZeroes": 37,
    "numConstOnes": 26,
    "UncondBranches": 11,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 8,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 7,
    "TotalBlocks": 21,
    "TotalInsts": 161,
    "TotalMemInst": 103,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 69
  },
  "baseline_oz_instcount": 161,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--early-cse",
    "--loop-simplifycfg",
    "--reassociate",
    "--gvn",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--gvn",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--adce",
    "--instcombine",
    "--die",
    "--lower-expect",
    "--mergefunc",
    "--aggressive-instcombine",
    "--ipsccp",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--argpromotion",
          "--sccp",
          "--name-anon-globals",
          "--guard-widening",
          "--constmerge",
          "--separate-const-offset-from-gep",
          "--speculative-execution",
          "--indvars",
          "--dce",
          "--reg2mem",
          "--dse",
          "--ipconstprop",
          "-loop-reduce",
          "--mldst-motion",
          "--strip",
          "--bdce",
          "--post-inline-ee-instrument",
          "--ee-instrument",
          "--loop-reroll",
          "--mergeicmps",
          "--coro-elide",
          "--loop-sink",
          "--div-rem-pairs",
          "--aggressive-instcombine",
          "--sink",
          "--nary-reassociate",
          "--mem2reg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--argpromotion",
      "--sccp",
      "--name-anon-globals",
      "--guard-widening",
      "--constmerge",
      "--separate-const-offset-from-gep",
      "--speculative-execution",
      "--indvars",
      "--dce",
      "--reg2mem",
      "--dse",
      "--ipconstprop",
      "-loop-reduce",
      "--mldst-motion",
      "--strip",
      "--bdce",
      "--post-inline-ee-instrument",
      "--ee-instrument",
      "--loop-reroll",
      "--mergeicmps",
      "--coro-elide",
      "--loop-sink",
      "--div-rem-pairs",
      "--aggressive-instcombine",
      "--sink",
      "--nary-reassociate",
      "--mem2reg"
    ],
    "performance_vs_Oz": "+3.7%"
  }
}