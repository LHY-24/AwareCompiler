{
  "program_id": "github-v0_26089.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 36,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 1,
    "oneSuccessor": 36,
    "twoPred": 11,
    "twoPredOneSuc": 1,
    "twoEach": 9,
    "twoSuccessor": 11,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 54,
    "BeginPhi": 1,
    "BranchCount": 47,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 58,
    "const32Bit": 102,
    "const64Bit": 54,
    "numConstZeroes": 51,
    "numConstOnes": 49,
    "UncondBranches": 36,
    "binaryConstArg": 40,
    "NumAShrInst": 1,
    "NumAddInst": 23,
    "NumAllocaInst": 28,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 46,
    "NumBitCastInst": 0,
    "NumBrInst": 47,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 103,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 242,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 8,
    "NumSExtInst": 22,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 83,
    "NumSubInst": 8,
    "NumTruncInst": 32,
    "NumXorInst": 36,
    "NumZExtInst": 120,
    "TotalBlocks": 55,
    "TotalInsts": 788,
    "TotalMemInst": 472,
    "TotalFuncs": 8,
    "ArgsPhi": 2,
    "testUnary": 444
  },
  "baseline_oz_instcount": 788,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--jump-threading",
    "--aggressive-instcombine",
    "--newgvn",
    "--load-store-vectorizer",
    "--mergefunc",
    "--newgvn",
    "--loop-simplifycfg",
    "--sccp",
    "--bdce",
    "--licm",
    "--ipsccp",
    "--lower-expect",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "--lower-guard-intrinsic",
          "--partial-inliner",
          "--lower-widenable-condition",
          "--loweratomic",
          "--called-value-propagation",
          "--break-crit-edges",
          "--mergeicmps",
          "--coro-split",
          "--attributor",
          "--inject-tli-mappings",
          "--lowerswitch",
          "--simple-loop-unswitch",
          "--reg2mem",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "--lower-guard-intrinsic",
      "--partial-inliner",
      "--lower-widenable-condition",
      "--loweratomic",
      "--called-value-propagation",
      "--break-crit-edges",
      "--mergeicmps",
      "--coro-split",
      "--attributor",
      "--inject-tli-mappings",
      "--lowerswitch",
      "--simple-loop-unswitch",
      "--reg2mem",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+11.9%"
  }
}