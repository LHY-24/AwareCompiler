{
  "program_id": "linux-v0_11200.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 53,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 8,
    "oneSuccessor": 53,
    "twoPred": 17,
    "twoPredOneSuc": 8,
    "twoEach": 5,
    "twoSuccessor": 17,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 88,
    "BeginPhi": 3,
    "BranchCount": 70,
    "returnInt": 13,
    "CriticalCount": 10,
    "NumEdges": 97,
    "const32Bit": 357,
    "const64Bit": 24,
    "numConstZeroes": 130,
    "numConstOnes": 178,
    "UncondBranches": 53,
    "binaryConstArg": 33,
    "NumAShrInst": 1,
    "NumAddInst": 4,
    "NumAllocaInst": 145,
    "NumAndInst": 8,
    "BlockMid": 22,
    "BlockLow": 69,
    "NumBitCastInst": 47,
    "NumBrInst": 70,
    "NumCallInst": 58,
    "NumGetElementPtrInst": 86,
    "NumICmpInst": 24,
    "NumLShrInst": 4,
    "NumLoadInst": 281,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 19,
    "NumSExtInst": 7,
    "NumSelectInst": 3,
    "NumShlInst": 2,
    "NumStoreInst": 169,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 15,
    "NumZExtInst": 14,
    "TotalBlocks": 91,
    "TotalInsts": 973,
    "TotalMemInst": 739,
    "TotalFuncs": 33,
    "ArgsPhi": 6,
    "testUnary": 499
  },
  "baseline_oz_instcount": 974,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--globalopt",
    "--flattencfg",
    "--newgvn",
    "--nary-reassociate",
    "--instcombine",
    "--mergefunc",
    "--aggressive-instcombine",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--coro-early",
          "-loop-reduce",
          "--correlated-propagation",
          "--aggressive-instcombine",
          "--slp-vectorizer",
          "--sancov",
          "--loweratomic",
          "--name-anon-globals",
          "--mergefunc",
          "--reassociate",
          "--strip",
          "--lower-expect",
          "--loop-versioning",
          "--pgo-memop-opt",
          "--speculative-execution",
          "--loop-fusion",
          "--globaldce",
          "--loop-reroll",
          "--adce",
          "--loop-deletion",
          "--instsimplify",
          "--instcombine",
          "--ipconstprop",
          "--cross-dso-cfi",
          "--argpromotion",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--coro-early",
      "-loop-reduce",
      "--correlated-propagation",
      "--aggressive-instcombine",
      "--slp-vectorizer",
      "--sancov",
      "--loweratomic",
      "--name-anon-globals",
      "--mergefunc",
      "--reassociate",
      "--strip",
      "--lower-expect",
      "--loop-versioning",
      "--pgo-memop-opt",
      "--speculative-execution",
      "--loop-fusion",
      "--globaldce",
      "--loop-reroll",
      "--adce",
      "--loop-deletion",
      "--instsimplify",
      "--instcombine",
      "--ipconstprop",
      "--cross-dso-cfi",
      "--argpromotion",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}