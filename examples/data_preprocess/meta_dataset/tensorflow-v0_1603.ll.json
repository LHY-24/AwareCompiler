{
  "program_id": "tensorflow-v0_1603.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 6,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 2,
    "oneSuccessor": 4,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 7,
    "BeginPhi": 1,
    "BranchCount": 7,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 10,
    "const32Bit": 9,
    "const64Bit": 10,
    "numConstZeroes": 0,
    "numConstOnes": 4,
    "UncondBranches": 4,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 5,
    "BlockMid": 1,
    "BlockLow": 7,
    "NumBitCastInst": 0,
    "NumBrInst": 7,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 3,
    "NumLShrInst": 6,
    "NumLoadInst": 0,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 1,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 8,
    "TotalInsts": 56,
    "TotalMemInst": 16,
    "TotalFuncs": 1,
    "ArgsPhi": 4,
    "testUnary": 9
  },
  "baseline_oz_instcount": 54,
  "knowledge_base_entry": [
    "--break-crit-edges",
    "--jump-threading",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--instcombine",
    "--bdce",
    "--early-cse",
    "--lower-expect",
    "--early-cse",
    "--loop-simplifycfg",
    "--inline",
    "--dse",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--dce",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--bdce",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--licm",
          "--inject-tli-mappings",
          "--adce",
          "--ipconstprop",
          "--lcssa",
          "--mergereturn",
          "--loop-load-elim",
          "--cross-dso-cfi",
          "--gvn-hoist",
          "--die",
          "--loop-fusion",
          "--name-anon-globals",
          "-loop-reduce",
          "--early-cse",
          "--sancov",
          "--instcombine",
          "--loop-predication",
          "--attributor",
          "--separate-const-offset-from-gep"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+18.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--licm",
      "--inject-tli-mappings",
      "--adce",
      "--ipconstprop",
      "--lcssa",
      "--mergereturn",
      "--loop-load-elim",
      "--cross-dso-cfi",
      "--gvn-hoist",
      "--die",
      "--loop-fusion",
      "--name-anon-globals",
      "-loop-reduce",
      "--early-cse",
      "--sancov",
      "--instcombine",
      "--loop-predication",
      "--attributor",
      "--separate-const-offset-from-gep"
    ],
    "performance_vs_Oz": "+18.5%"
  }
}