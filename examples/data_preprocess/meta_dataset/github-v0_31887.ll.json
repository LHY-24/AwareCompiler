{
  "program_id": "github-v0_31887.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 1,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 0,
    "oneSuccessor": 1,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 3,
    "BeginPhi": 0,
    "BranchCount": 2,
    "returnInt": 1,
    "CriticalCount": 1,
    "NumEdges": 3,
    "const32Bit": 7,
    "const64Bit": 16,
    "numConstZeroes": 1,
    "numConstOnes": 2,
    "UncondBranches": 1,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 2,
    "NumBitCastInst": 0,
    "NumBrInst": 2,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 18,
    "NumMulInst": 6,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 6,
    "NumSubInst": 5,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 3,
    "TotalInsts": 92,
    "TotalMemInst": 53,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 31
  },
  "baseline_oz_instcount": 92,
  "knowledge_base_entry": [
    "--jump-threading",
    "--lower-expect",
    "--die",
    "--ipsccp",
    "--early-cse",
    "--instsimplify",
    "--reassociate",
    "--jump-threading",
    "--dse",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--dse",
    "--nary-reassociate",
    "--instcombine",
    "--early-cse",
    "--indvars",
    "--nary-reassociate",
    "--early-cse",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--die",
          "--loop-fusion",
          "--nary-reassociate",
          "--bdce",
          "--callsite-splitting",
          "--float2int",
          "--loop-unroll-and-jam",
          "--scalarizer",
          "--lcssa",
          "--instsimplify",
          "--loop-guard-widening",
          "--loop-versioning-licm",
          "--slsr"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--die",
      "--loop-fusion",
      "--nary-reassociate",
      "--bdce",
      "--callsite-splitting",
      "--float2int",
      "--loop-unroll-and-jam",
      "--scalarizer",
      "--lcssa",
      "--instsimplify",
      "--loop-guard-widening",
      "--loop-versioning-licm",
      "--slsr"
    ],
    "performance_vs_Oz": "+8.7%"
  }
}