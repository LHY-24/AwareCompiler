{
  "program_id": "github-v0_7853.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 31,
    "const64Bit": 28,
    "numConstZeroes": 31,
    "numConstOnes": 21,
    "UncondBranches": 13,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 21,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 31,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 2,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 17,
    "TotalBlocks": 24,
    "TotalInsts": 156,
    "TotalMemInst": 87,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 71
  },
  "baseline_oz_instcount": 156,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--jump-threading",
    "--early-cse-memssa",
    "--instcombine",
    "--globalopt",
    "--lower-expect",
    "--instsimplify",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--adce",
    "--mem2reg",
    "--mergefunc",
    "--aggressive-instcombine",
    "--mergefunc",
    "--loop-reroll",
    "--nary-reassociate",
    "--correlated-propagation",
    "--dce",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-split",
          "--mergereturn",
          "--lower-constant-intrinsics",
          "--cross-dso-cfi",
          "--consthoist",
          "--redundant-dbg-inst-elim",
          "--ipsccp",
          "--barrier",
          "--aggressive-instcombine",
          "--guard-widening",
          "--libcalls-shrinkwrap",
          "--die",
          "--reg2mem",
          "--mldst-motion",
          "--load-store-vectorizer",
          "-loop-reduce",
          "--loop-load-elim",
          "--early-cse-memssa",
          "--constprop",
          "--alignment-from-assumptions",
          "--globalopt",
          "--ee-instrument",
          "--loop-instsimplify",
          "--reassociate",
          "--early-cse",
          "--loop-rotate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-split",
      "--mergereturn",
      "--lower-constant-intrinsics",
      "--cross-dso-cfi",
      "--consthoist",
      "--redundant-dbg-inst-elim",
      "--ipsccp",
      "--barrier",
      "--aggressive-instcombine",
      "--guard-widening",
      "--libcalls-shrinkwrap",
      "--die",
      "--reg2mem",
      "--mldst-motion",
      "--load-store-vectorizer",
      "-loop-reduce",
      "--loop-load-elim",
      "--early-cse-memssa",
      "--constprop",
      "--alignment-from-assumptions",
      "--globalopt",
      "--ee-instrument",
      "--loop-instsimplify",
      "--reassociate",
      "--early-cse",
      "--loop-rotate"
    ],
    "performance_vs_Oz": "+9.0%"
  }
}