{
  "program_id": "github-v0_37362.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 11,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 34,
    "const64Bit": 0,
    "numConstZeroes": 1,
    "numConstOnes": 33,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 32,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 18,
    "NumBitCastInst": 1,
    "NumBrInst": 0,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 31,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 19,
    "TotalInsts": 123,
    "TotalMemInst": 95,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 53
  },
  "baseline_oz_instcount": 123,
  "knowledge_base_entry": [
    "--sink",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--globalopt",
    "--loop-instsimplify",
    "--sccp",
    "--dce",
    "--mergefunc",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--indvars",
          "--lower-expect",
          "--sink",
          "--consthoist",
          "--lowerswitch",
          "--globalsplit",
          "--speculative-execution",
          "--adce",
          "--constmerge",
          "--loop-load-elim",
          "--loop-data-prefetch",
          "--coro-cleanup",
          "-loop-reduce",
          "--aggressive-instcombine",
          "--loop-fusion",
          "--argpromotion",
          "--load-store-vectorizer",
          "--mergefunc",
          "--tailcallelim",
          "--loop-deletion",
          "--loweratomic",
          "--simplifycfg",
          "--loop-versioning-licm",
          "--callsite-splitting",
          "--loop-vectorize"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+38.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--indvars",
      "--lower-expect",
      "--sink",
      "--consthoist",
      "--lowerswitch",
      "--globalsplit",
      "--speculative-execution",
      "--adce",
      "--constmerge",
      "--loop-load-elim",
      "--loop-data-prefetch",
      "--coro-cleanup",
      "-loop-reduce",
      "--aggressive-instcombine",
      "--loop-fusion",
      "--argpromotion",
      "--load-store-vectorizer",
      "--mergefunc",
      "--tailcallelim",
      "--loop-deletion",
      "--loweratomic",
      "--simplifycfg",
      "--loop-versioning-licm",
      "--callsite-splitting",
      "--loop-vectorize"
    ],
    "performance_vs_Oz": "+38.2%"
  }
}