{
  "program_id": "github-v0_7852.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 44,
    "const64Bit": 85,
    "numConstZeroes": 85,
    "numConstOnes": 33,
    "UncondBranches": 15,
    "binaryConstArg": 14,
    "NumAShrInst": 4,
    "NumAddInst": 9,
    "NumAllocaInst": 15,
    "NumAndInst": 4,
    "BlockMid": 7,
    "BlockLow": 20,
    "NumBitCastInst": 16,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 16,
    "TotalBlocks": 27,
    "TotalInsts": 242,
    "TotalMemInst": 147,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 99
  },
  "baseline_oz_instcount": 242,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--adce",
    "--sroa",
    "--prune-eh",
    "--licm",
    "--bdce",
    "--ipsccp",
    "--loop-simplifycfg",
    "--mergefunc",
    "--aggressive-instcombine",
    "--jump-threading",
    "--correlated-propagation",
    "--ipsccp",
    "--gvn",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--consthoist",
          "--simple-loop-unswitch",
          "--lcssa",
          "--loop-versioning",
          "--loop-simplify",
          "--loop-guard-widening",
          "--coro-elide",
          "--loop-sink",
          "--flattencfg",
          "--insert-gcov-profiling",
          "--aggressive-instcombine",
          "--memcpyopt",
          "--loop-interchange",
          "--loop-fusion",
          "--attributor",
          "--loop-simplifycfg",
          "--mem2reg",
          "--loop-load-elim",
          "--sancov",
          "--simplifycfg",
          "--die",
          "--sroa",
          "--lowerswitch",
          "--strip-debug-declare",
          "--break-crit-edges"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--consthoist",
      "--simple-loop-unswitch",
      "--lcssa",
      "--loop-versioning",
      "--loop-simplify",
      "--loop-guard-widening",
      "--coro-elide",
      "--loop-sink",
      "--flattencfg",
      "--insert-gcov-profiling",
      "--aggressive-instcombine",
      "--memcpyopt",
      "--loop-interchange",
      "--loop-fusion",
      "--attributor",
      "--loop-simplifycfg",
      "--mem2reg",
      "--loop-load-elim",
      "--sancov",
      "--simplifycfg",
      "--die",
      "--sroa",
      "--lowerswitch",
      "--strip-debug-declare",
      "--break-crit-edges"
    ],
    "performance_vs_Oz": "+6.6%"
  }
}