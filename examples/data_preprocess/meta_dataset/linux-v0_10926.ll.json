{
  "program_id": "linux-v0_10926.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 58,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 15,
    "oneSuccessor": 58,
    "twoPred": 29,
    "twoPredOneSuc": 11,
    "twoEach": 7,
    "twoSuccessor": 30,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 110,
    "BeginPhi": 3,
    "BranchCount": 88,
    "returnInt": 45,
    "CriticalCount": 17,
    "NumEdges": 127,
    "const32Bit": 303,
    "const64Bit": 8,
    "numConstZeroes": 70,
    "numConstOnes": 111,
    "UncondBranches": 58,
    "binaryConstArg": 40,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 88,
    "NumAndInst": 17,
    "BlockMid": 20,
    "BlockLow": 93,
    "NumBitCastInst": 15,
    "NumBrInst": 88,
    "NumCallInst": 98,
    "NumGetElementPtrInst": 39,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 257,
    "NumMulInst": 2,
    "NumOrInst": 13,
    "NumPHIInst": 3,
    "NumRetInst": 23,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 154,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 21,
    "TotalBlocks": 113,
    "TotalInsts": 871,
    "TotalMemInst": 636,
    "TotalFuncs": 34,
    "ArgsPhi": 6,
    "testUnary": 389
  },
  "baseline_oz_instcount": 871,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--nary-reassociate",
    "--inline",
    "--sccp",
    "--early-cse",
    "--bdce",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--mem2reg",
    "--prune-eh",
    "--lower-expect",
    "--sroa",
    "--ipsccp",
    "--simplifycfg",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--deadargelim",
          "--sancov",
          "--licm",
          "--ipconstprop",
          "--partially-inline-libcalls",
          "--loop-data-prefetch",
          "--aggressive-instcombine",
          "--lower-guard-intrinsic",
          "--bdce",
          "--simple-loop-unswitch",
          "--ee-instrument",
          "--loop-load-elim",
          "--coro-early",
          "--loop-vectorize",
          "--always-inline",
          "--reassociate",
          "--lower-constant-intrinsics",
          "--loop-rotate",
          "--post-inline-ee-instrument",
          "--lower-matrix-intrinsics",
          "--lcssa",
          "--globalopt",
          "--loop-unswitch",
          "--loop-predication",
          "--inline",
          "--lowerinvoke",
          "--div-rem-pairs",
          "--constmerge",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--deadargelim",
      "--sancov",
      "--licm",
      "--ipconstprop",
      "--partially-inline-libcalls",
      "--loop-data-prefetch",
      "--aggressive-instcombine",
      "--lower-guard-intrinsic",
      "--bdce",
      "--simple-loop-unswitch",
      "--ee-instrument",
      "--loop-load-elim",
      "--coro-early",
      "--loop-vectorize",
      "--always-inline",
      "--reassociate",
      "--lower-constant-intrinsics",
      "--loop-rotate",
      "--post-inline-ee-instrument",
      "--lower-matrix-intrinsics",
      "--lcssa",
      "--globalopt",
      "--loop-unswitch",
      "--loop-predication",
      "--inline",
      "--lowerinvoke",
      "--div-rem-pairs",
      "--constmerge",
      "--indvars"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}