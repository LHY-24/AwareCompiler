{
  "program_id": "github-v0_1483.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 3,
    "oneSuccessor": 16,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 9,
    "twoSuccessor": 12,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 6,
    "CriticalCount": 11,
    "NumEdges": 40,
    "const32Bit": 34,
    "const64Bit": 0,
    "numConstZeroes": 11,
    "numConstOnes": 20,
    "UncondBranches": 16,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 27,
    "NumBitCastInst": 0,
    "NumBrInst": 28,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 8,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 29,
    "TotalInsts": 144,
    "TotalMemInst": 74,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 57
  },
  "baseline_oz_instcount": 144,
  "knowledge_base_entry": [
    "--flattencfg",
    "--jump-threading",
    "--aggressive-instcombine",
    "--reassociate",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--instcombine",
    "--loop-deletion",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--infer-address-spaces",
          "--deadargelim",
          "--float2int",
          "--slsr",
          "--canonicalize-aliases",
          "--aggressive-instcombine",
          "--dce",
          "--cross-dso-cfi",
          "--loop-vectorize",
          "--always-inline",
          "--coro-cleanup",
          "--memcpyopt",
          "--loop-load-elim",
          "--name-anon-globals",
          "--callsite-splitting",
          "--loop-versioning-licm",
          "--lower-constant-intrinsics",
          "--instcombine",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--infer-address-spaces",
      "--deadargelim",
      "--float2int",
      "--slsr",
      "--canonicalize-aliases",
      "--aggressive-instcombine",
      "--dce",
      "--cross-dso-cfi",
      "--loop-vectorize",
      "--always-inline",
      "--coro-cleanup",
      "--memcpyopt",
      "--loop-load-elim",
      "--name-anon-globals",
      "--callsite-splitting",
      "--loop-versioning-licm",
      "--lower-constant-intrinsics",
      "--instcombine",
      "--die"
    ],
    "performance_vs_Oz": "+5.6%"
  }
}