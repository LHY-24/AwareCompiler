{
  "program_id": "linux-v0_7875.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 0,
    "oneSuccessor": 22,
    "twoPred": 9,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 9,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 0,
    "BranchCount": 31,
    "returnInt": 13,
    "CriticalCount": 0,
    "NumEdges": 44,
    "const32Bit": 55,
    "const64Bit": 10,
    "numConstZeroes": 9,
    "numConstOnes": 25,
    "UncondBranches": 22,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 21,
    "NumAndInst": 9,
    "BlockMid": 0,
    "BlockLow": 44,
    "NumBitCastInst": 2,
    "NumBrInst": 31,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 0,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 39,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 44,
    "TotalInsts": 225,
    "TotalMemInst": 129,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 87
  },
  "baseline_oz_instcount": 225,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--mem2reg",
    "--slp-vectorizer",
    "--indvars",
    "--sroa",
    "--globalopt",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--gvn",
    "--sroa",
    "--prune-eh",
    "--loop-simplifycfg",
    "--dse",
    "--nary-reassociate",
    "--instcombine",
    "--loop-deletion",
    "--elim-avail-extern",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--coro-split",
          "--mldst-motion",
          "--div-rem-pairs",
          "--irce",
          "--instsimplify",
          "--flattencfg",
          "--dce",
          "--bdce",
          "--strip-nondebug",
          "--coro-elide",
          "--add-discriminators",
          "--rewrite-statepoints-for-gc",
          "--canonicalize-aliases",
          "--constmerge",
          "--simple-loop-unswitch",
          "--loop-guard-widening",
          "--mergereturn",
          "--inline",
          "--dse",
          "--lowerinvoke",
          "--load-store-vectorizer",
          "--loop-versioning",
          "--reg2mem",
          "--aggressive-instcombine",
          "--tailcallelim",
          "--sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--coro-split",
      "--mldst-motion",
      "--div-rem-pairs",
      "--irce",
      "--instsimplify",
      "--flattencfg",
      "--dce",
      "--bdce",
      "--strip-nondebug",
      "--coro-elide",
      "--add-discriminators",
      "--rewrite-statepoints-for-gc",
      "--canonicalize-aliases",
      "--constmerge",
      "--simple-loop-unswitch",
      "--loop-guard-widening",
      "--mergereturn",
      "--inline",
      "--dse",
      "--lowerinvoke",
      "--load-store-vectorizer",
      "--loop-versioning",
      "--reg2mem",
      "--aggressive-instcombine",
      "--tailcallelim",
      "--sink"
    ],
    "performance_vs_Oz": "+8.9%"
  }
}