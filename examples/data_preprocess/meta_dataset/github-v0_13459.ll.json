{
  "program_id": "github-v0_13459.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 43,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 9,
    "oneSuccessor": 32,
    "twoPred": 15,
    "twoPredOneSuc": 4,
    "twoEach": 11,
    "twoSuccessor": 22,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 0,
    "BranchCount": 54,
    "returnInt": 21,
    "CriticalCount": 6,
    "NumEdges": 76,
    "const32Bit": 112,
    "const64Bit": 6,
    "numConstZeroes": 44,
    "numConstOnes": 46,
    "UncondBranches": 32,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 28,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 57,
    "NumBitCastInst": 5,
    "NumBrInst": 54,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 91,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 20,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 52,
    "NumSubInst": 9,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 60,
    "TotalInsts": 370,
    "TotalMemInst": 233,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 149
  },
  "baseline_oz_instcount": 372,
  "knowledge_base_entry": [
    "--ipsccp",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--mem2reg",
    "--flattencfg",
    "--adce",
    "--correlated-propagation",
    "--reassociate",
    "--gvn",
    "--lower-constant-intrinsics",
    "--bdce",
    "--dse",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--canonicalize-aliases",
          "--early-cse-memssa",
          "--name-anon-globals",
          "--consthoist",
          "--callsite-splitting",
          "--constmerge",
          "--inline",
          "--loweratomic",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--canonicalize-aliases",
      "--early-cse-memssa",
      "--name-anon-globals",
      "--consthoist",
      "--callsite-splitting",
      "--constmerge",
      "--inline",
      "--loweratomic",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}