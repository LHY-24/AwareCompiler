{
  "program_id": "linux-v0_12130.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 7,
    "oneSuccessor": 15,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 11,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 40,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 37,
    "const32Bit": 112,
    "const64Bit": 9,
    "numConstZeroes": 41,
    "numConstOnes": 48,
    "UncondBranches": 15,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 37,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 36,
    "NumBitCastInst": 8,
    "NumBrInst": 26,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 89,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 59,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 40,
    "TotalInsts": 314,
    "TotalMemInst": 236,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 144
  },
  "baseline_oz_instcount": 313,
  "knowledge_base_entry": [
    "--inline",
    "--newgvn",
    "--loop-deletion",
    "--gvn-hoist",
    "--gvn",
    "--mergefunc",
    "--simplifycfg",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--mergefunc",
    "--ipsccp",
    "--flattencfg",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--newgvn",
    "--loop-deletion",
    "--gvn-hoist",
    "--memcpyopt",
    "--slp-vectorizer",
    "--simplifycfg",
    "--die",
    "--mem2reg",
    "--loop-rotate",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--loop-deletion",
    "--instcombine",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--separate-const-offset-from-gep",
          "--infer-address-spaces",
          "--simplifycfg",
          "--ipconstprop",
          "--coro-cleanup",
          "--coro-split",
          "--sroa",
          "--mergefunc",
          "--jump-threading",
          "--inject-tli-mappings",
          "--memcpyopt",
          "--die",
          "--ipsccp",
          "--adce",
          "--libcalls-shrinkwrap",
          "--rpo-functionattrs",
          "--strip-debug-declare",
          "--lower-expect",
          "--loop-deletion",
          "--loop-unswitch",
          "--gvn-hoist",
          "--load-store-vectorizer",
          "--indvars",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--separate-const-offset-from-gep",
      "--infer-address-spaces",
      "--simplifycfg",
      "--ipconstprop",
      "--coro-cleanup",
      "--coro-split",
      "--sroa",
      "--mergefunc",
      "--jump-threading",
      "--inject-tli-mappings",
      "--memcpyopt",
      "--die",
      "--ipsccp",
      "--adce",
      "--libcalls-shrinkwrap",
      "--rpo-functionattrs",
      "--strip-debug-declare",
      "--lower-expect",
      "--loop-deletion",
      "--loop-unswitch",
      "--gvn-hoist",
      "--load-store-vectorizer",
      "--indvars",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}