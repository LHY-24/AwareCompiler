{
  "program_id": "linux-v0_2339.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 28,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 6,
    "oneSuccessor": 27,
    "twoPred": 7,
    "twoPredOneSuc": 5,
    "twoEach": 1,
    "twoSuccessor": 9,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 1,
    "BranchCount": 36,
    "returnInt": 8,
    "CriticalCount": 7,
    "NumEdges": 45,
    "const32Bit": 110,
    "const64Bit": 19,
    "numConstZeroes": 31,
    "numConstOnes": 48,
    "UncondBranches": 27,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 43,
    "NumAndInst": 8,
    "BlockMid": 8,
    "BlockLow": 38,
    "NumBitCastInst": 2,
    "NumBrInst": 36,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 17,
    "NumLShrInst": 4,
    "NumLoadInst": 94,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 1,
    "NumRetInst": 10,
    "NumSExtInst": 3,
    "NumSelectInst": 8,
    "NumShlInst": 2,
    "NumStoreInst": 63,
    "NumSubInst": 4,
    "NumTruncInst": 12,
    "NumXorInst": 1,
    "NumZExtInst": 40,
    "TotalBlocks": 46,
    "TotalInsts": 402,
    "TotalMemInst": 238,
    "TotalFuncs": 19,
    "ArgsPhi": 2,
    "testUnary": 205
  },
  "baseline_oz_instcount": 402,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--gvn",
    "--inline",
    "--aggressive-instcombine",
    "--gvn",
    "--loop-instsimplify",
    "--sccp",
    "--die",
    "--gvn-hoist",
    "--simplifycfg",
    "--slp-vectorizer",
    "--mem2reg",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--adce",
          "--rewrite-statepoints-for-gc",
          "--prune-eh",
          "--add-discriminators",
          "--early-cse",
          "--instcombine",
          "--name-anon-globals",
          "--loop-interchange",
          "--strip-dead-prototypes",
          "--functionattrs",
          "--loop-unroll-and-jam",
          "--loop-predication",
          "--ipsccp",
          "--loop-data-prefetch",
          "--coro-cleanup",
          "--loop-versioning",
          "--argpromotion",
          "--loop-unswitch",
          "--attributor",
          "--simple-loop-unswitch",
          "--nary-reassociate",
          "--aggressive-instcombine",
          "--strip",
          "--instnamer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--adce",
      "--rewrite-statepoints-for-gc",
      "--prune-eh",
      "--add-discriminators",
      "--early-cse",
      "--instcombine",
      "--name-anon-globals",
      "--loop-interchange",
      "--strip-dead-prototypes",
      "--functionattrs",
      "--loop-unroll-and-jam",
      "--loop-predication",
      "--ipsccp",
      "--loop-data-prefetch",
      "--coro-cleanup",
      "--loop-versioning",
      "--argpromotion",
      "--loop-unswitch",
      "--attributor",
      "--simple-loop-unswitch",
      "--nary-reassociate",
      "--aggressive-instcombine",
      "--strip",
      "--instnamer"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}