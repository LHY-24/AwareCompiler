{
  "program_id": "linux-v0_5509.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 55,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 22,
    "oneSuccessor": 46,
    "twoPred": 14,
    "twoPredOneSuc": 11,
    "twoEach": 2,
    "twoSuccessor": 27,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 0,
    "BranchCount": 73,
    "returnInt": 15,
    "CriticalCount": 15,
    "NumEdges": 100,
    "const32Bit": 252,
    "const64Bit": 14,
    "numConstZeroes": 102,
    "numConstOnes": 100,
    "UncondBranches": 46,
    "binaryConstArg": 33,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 59,
    "NumAndInst": 12,
    "BlockMid": 7,
    "BlockLow": 87,
    "NumBitCastInst": 13,
    "NumBrInst": 73,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 61,
    "NumICmpInst": 35,
    "NumLShrInst": 5,
    "NumLoadInst": 188,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 85,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 16,
    "NumZExtInst": 11,
    "TotalBlocks": 94,
    "TotalInsts": 645,
    "TotalMemInst": 444,
    "TotalFuncs": 41,
    "ArgsPhi": 0,
    "testUnary": 285
  },
  "baseline_oz_instcount": 645,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--globalopt",
    "--dse",
    "--newgvn",
    "--flattencfg",
    "--ipsccp",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--inject-tli-mappings",
          "--sink",
          "--always-inline",
          "--partial-inliner",
          "--mem2reg",
          "--loop-load-elim",
          "--libcalls-shrinkwrap",
          "--globalopt",
          "--simplifycfg",
          "--reassociate",
          "--lower-guard-intrinsic",
          "--loop-unswitch",
          "--loop-unroll-and-jam",
          "--partially-inline-libcalls",
          "--lower-matrix-intrinsics",
          "--gvn-hoist",
          "--lowerswitch",
          "--irce",
          "--float2int",
          "--ipsccp",
          "--mldst-motion",
          "--early-cse",
          "--post-inline-ee-instrument",
          "--div-rem-pairs",
          "-loop-reduce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--inject-tli-mappings",
      "--sink",
      "--always-inline",
      "--partial-inliner",
      "--mem2reg",
      "--loop-load-elim",
      "--libcalls-shrinkwrap",
      "--globalopt",
      "--simplifycfg",
      "--reassociate",
      "--lower-guard-intrinsic",
      "--loop-unswitch",
      "--loop-unroll-and-jam",
      "--partially-inline-libcalls",
      "--lower-matrix-intrinsics",
      "--gvn-hoist",
      "--lowerswitch",
      "--irce",
      "--float2int",
      "--ipsccp",
      "--mldst-motion",
      "--early-cse",
      "--post-inline-ee-instrument",
      "--div-rem-pairs",
      "-loop-reduce"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}