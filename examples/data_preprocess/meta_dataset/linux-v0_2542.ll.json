{
  "program_id": "linux-v0_2542.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 47,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 13,
    "oneSuccessor": 44,
    "twoPred": 16,
    "twoPredOneSuc": 6,
    "twoEach": 7,
    "twoSuccessor": 25,
    "morePreds": 9,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 79,
    "BeginPhi": 1,
    "BranchCount": 69,
    "returnInt": 18,
    "CriticalCount": 26,
    "NumEdges": 110,
    "const32Bit": 227,
    "const64Bit": 58,
    "numConstZeroes": 122,
    "numConstOnes": 71,
    "UncondBranches": 44,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 49,
    "NumAndInst": 12,
    "BlockMid": 9,
    "BlockLow": 71,
    "NumBitCastInst": 7,
    "NumBrInst": 69,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 85,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 152,
    "NumMulInst": 5,
    "NumOrInst": 5,
    "NumPHIInst": 1,
    "NumRetInst": 8,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 76,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 80,
    "TotalInsts": 546,
    "TotalMemInst": 392,
    "TotalFuncs": 36,
    "ArgsPhi": 2,
    "testUnary": 221
  },
  "baseline_oz_instcount": 547,
  "knowledge_base_entry": [
    "--jump-threading",
    "--globalopt",
    "--flattencfg",
    "--mergefunc",
    "--dse",
    "--newgvn",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--lower-expect",
    "--globalopt",
    "--dse",
    "--mem2reg",
    "--memcpyopt",
    "--instsimplify",
    "--dce",
    "--elim-avail-extern",
    "--instcombine",
    "--die",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--instnamer",
          "--partial-inliner",
          "--mergereturn",
          "--loop-unswitch",
          "--nary-reassociate",
          "--deadargelim",
          "--gvn-hoist",
          "--strip-dead-prototypes",
          "--loop-data-prefetch",
          "--loop-distribute",
          "--jump-threading",
          "--sancov",
          "--bdce",
          "--loop-simplifycfg",
          "--callsite-splitting",
          "--loop-versioning-licm",
          "--canonicalize-aliases",
          "--float2int",
          "--early-cse-memssa",
          "--indvars",
          "--reassociate",
          "--insert-gcov-profiling",
          "--mergefunc",
          "--pgo-memop-opt",
          "--globalopt",
          "--speculative-execution",
          "--cross-dso-cfi",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--instnamer",
      "--partial-inliner",
      "--mergereturn",
      "--loop-unswitch",
      "--nary-reassociate",
      "--deadargelim",
      "--gvn-hoist",
      "--strip-dead-prototypes",
      "--loop-data-prefetch",
      "--loop-distribute",
      "--jump-threading",
      "--sancov",
      "--bdce",
      "--loop-simplifycfg",
      "--callsite-splitting",
      "--loop-versioning-licm",
      "--canonicalize-aliases",
      "--float2int",
      "--early-cse-memssa",
      "--indvars",
      "--reassociate",
      "--insert-gcov-profiling",
      "--mergefunc",
      "--pgo-memop-opt",
      "--globalopt",
      "--speculative-execution",
      "--cross-dso-cfi",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}