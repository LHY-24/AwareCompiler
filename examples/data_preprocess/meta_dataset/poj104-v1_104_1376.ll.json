{
  "program_id": "poj104-v1_104_1376.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 3,
    "oneSuccessor": 6,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 1,
    "CriticalCount": 2,
    "NumEdges": 16,
    "const32Bit": 14,
    "const64Bit": 0,
    "numConstZeroes": 4,
    "numConstOnes": 10,
    "UncondBranches": 6,
    "binaryConstArg": 6,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 3,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 11,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 22,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 5,
    "NumSubInst": 4,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 16,
    "TotalInsts": 74,
    "TotalMemInst": 39,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 25
  },
  "baseline_oz_instcount": 46,
  "knowledge_base_entry": [
    "--mergefunc",
    "--simplifycfg",
    "--dce",
    "--licm",
    "--die",
    "--lower-expect",
    "--newgvn",
    "--sccp",
    "--adce",
    "--simplifycfg",
    "--inline",
    "--early-cse",
    "--globalopt",
    "--loop-deletion",
    "--mem2reg",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--instcombine",
    "--dse",
    "--slp-vectorizer",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--canonicalize-aliases",
          "--slsr",
          "--rewrite-statepoints-for-gc",
          "--loop-unswitch",
          "--sroa",
          "--loop-reroll",
          "--lower-constant-intrinsics",
          "--hotcoldsplit",
          "--flattencfg",
          "--called-value-propagation",
          "--die",
          "--early-cse-memssa",
          "--pgo-memop-opt",
          "--loop-interchange",
          "--instnamer",
          "--elim-avail-extern",
          "--always-inline",
          "--indvars",
          "--loop-versioning",
          "--memcpyopt",
          "--slp-vectorizer",
          "--float2int",
          "--prune-eh",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--canonicalize-aliases",
      "--slsr",
      "--rewrite-statepoints-for-gc",
      "--loop-unswitch",
      "--sroa",
      "--loop-reroll",
      "--lower-constant-intrinsics",
      "--hotcoldsplit",
      "--flattencfg",
      "--called-value-propagation",
      "--die",
      "--early-cse-memssa",
      "--pgo-memop-opt",
      "--loop-interchange",
      "--instnamer",
      "--elim-avail-extern",
      "--always-inline",
      "--indvars",
      "--loop-versioning",
      "--memcpyopt",
      "--slp-vectorizer",
      "--float2int",
      "--prune-eh",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}