{
  "program_id": "linux-v0_7342.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 78,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 28,
    "oneSuccessor": 74,
    "twoPred": 26,
    "twoPredOneSuc": 18,
    "twoEach": 3,
    "twoSuccessor": 32,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 124,
    "BeginPhi": 0,
    "BranchCount": 105,
    "returnInt": 7,
    "CriticalCount": 16,
    "NumEdges": 143,
    "const32Bit": 308,
    "const64Bit": 32,
    "numConstZeroes": 154,
    "numConstOnes": 111,
    "UncondBranches": 74,
    "binaryConstArg": 58,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 57,
    "NumAndInst": 21,
    "BlockMid": 12,
    "BlockLow": 112,
    "NumBitCastInst": 24,
    "NumBrInst": 105,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 85,
    "NumICmpInst": 43,
    "NumLShrInst": 10,
    "NumLoadInst": 190,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 86,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 22,
    "NumZExtInst": 18,
    "TotalBlocks": 124,
    "TotalInsts": 752,
    "TotalMemInst": 458,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 314
  },
  "baseline_oz_instcount": 753,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--early-cse-memssa",
    "-loop-reduce",
    "--nary-reassociate",
    "--correlated-propagation",
    "--gvn-hoist",
    "--adce",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--early-cse",
    "--instsimplify",
    "--simplifycfg",
    "--elim-avail-extern",
    "--sroa",
    "--prune-eh",
    "--loop-simplifycfg",
    "--gvn",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--aggressive-instcombine",
          "--sancov",
          "--loop-simplify",
          "--lowerinvoke",
          "--sink",
          "--licm",
          "--early-cse-memssa",
          "--slp-vectorizer",
          "--prune-eh",
          "--coro-early",
          "--loop-distribute",
          "--callsite-splitting",
          "--coro-cleanup",
          "--cross-dso-cfi",
          "--indvars",
          "--loop-reroll",
          "--div-rem-pairs",
          "--bdce",
          "--lower-guard-intrinsic",
          "--correlated-propagation",
          "--separate-const-offset-from-gep",
          "--reassociate",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--aggressive-instcombine",
      "--sancov",
      "--loop-simplify",
      "--lowerinvoke",
      "--sink",
      "--licm",
      "--early-cse-memssa",
      "--slp-vectorizer",
      "--prune-eh",
      "--coro-early",
      "--loop-distribute",
      "--callsite-splitting",
      "--coro-cleanup",
      "--cross-dso-cfi",
      "--indvars",
      "--loop-reroll",
      "--div-rem-pairs",
      "--bdce",
      "--lower-guard-intrinsic",
      "--correlated-propagation",
      "--separate-const-offset-from-gep",
      "--reassociate",
      "--inline"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}