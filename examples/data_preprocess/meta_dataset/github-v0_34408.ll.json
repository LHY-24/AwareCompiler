{
  "program_id": "github-v0_34408.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 61,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 20,
    "oneSuccessor": 53,
    "twoPred": 26,
    "twoPredOneSuc": 9,
    "twoEach": 15,
    "twoSuccessor": 38,
    "morePreds": 4,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 91,
    "BeginPhi": 5,
    "BranchCount": 91,
    "returnInt": 9,
    "CriticalCount": 19,
    "NumEdges": 129,
    "const32Bit": 134,
    "const64Bit": 30,
    "numConstZeroes": 98,
    "numConstOnes": 52,
    "UncondBranches": 53,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 33,
    "NumAndInst": 6,
    "BlockMid": 2,
    "BlockLow": 94,
    "NumBitCastInst": 0,
    "NumBrInst": 91,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 63,
    "NumICmpInst": 40,
    "NumLShrInst": 0,
    "NumLoadInst": 138,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 5,
    "NumRetInst": 5,
    "NumSExtInst": 53,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 64,
    "NumSubInst": 3,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 8,
    "TotalBlocks": 96,
    "TotalInsts": 562,
    "TotalMemInst": 332,
    "TotalFuncs": 12,
    "ArgsPhi": 10,
    "testUnary": 234
  },
  "baseline_oz_instcount": 565,
  "knowledge_base_entry": [
    "--bdce",
    "--lower-constant-intrinsics",
    "--dce",
    "--sroa",
    "--elim-avail-extern",
    "--prune-eh",
    "--gvn",
    "--dse",
    "--elim-avail-extern",
    "--mergefunc",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--sink",
          "--slp-vectorizer",
          "--gvn-hoist",
          "--coro-elide",
          "--instsimplify",
          "--correlated-propagation",
          "--globalsplit",
          "--mergefunc",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--sink",
      "--slp-vectorizer",
      "--gvn-hoist",
      "--coro-elide",
      "--instsimplify",
      "--correlated-propagation",
      "--globalsplit",
      "--mergefunc",
      "--die"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}