{
  "program_id": "github-v0_42911.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 12,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 66,
    "const64Bit": 132,
    "numConstZeroes": 30,
    "numConstOnes": 30,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 4,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 0,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 68,
    "TotalBlocks": 12,
    "TotalInsts": 366,
    "TotalMemInst": 0,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 78
  },
  "baseline_oz_instcount": 366,
  "knowledge_base_entry": [
    "--scalarizer",
    "--early-cse",
    "--early-cse",
    "--memcpyopt",
    "--early-cse",
    "--dse",
    "--die",
    "--mem2reg",
    "--slp-vectorizer",
    "--newgvn",
    "--globalopt",
    "--inline",
    "--ipsccp",
    "--gvn",
    "-loop-reduce",
    "--early-cse",
    "--mldst-motion",
    "--instcombine",
    "--licm",
    "--gvn",
    "--loop-deletion",
    "--elim-avail-extern",
    "--bdce",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--sroa",
    "--dce",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--globalsplit",
          "--loop-unswitch",
          "--instnamer",
          "--mldst-motion",
          "--sccp",
          "--cross-dso-cfi",
          "--load-store-vectorizer",
          "--die",
          "--correlated-propagation",
          "--early-cse",
          "--guard-widening",
          "--coro-split",
          "--alignment-from-assumptions",
          "--loweratomic",
          "--libcalls-shrinkwrap",
          "-loop-reduce",
          "--ipsccp",
          "--loop-predication",
          "--deadargelim",
          "--loop-simplifycfg",
          "--loop-deletion",
          "--loop-distribute",
          "--callsite-splitting",
          "--memcpyopt",
          "--nary-reassociate",
          "--sink",
          "--jump-threading",
          "--slp-vectorizer",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+83.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--globalsplit",
      "--loop-unswitch",
      "--instnamer",
      "--mldst-motion",
      "--sccp",
      "--cross-dso-cfi",
      "--load-store-vectorizer",
      "--die",
      "--correlated-propagation",
      "--early-cse",
      "--guard-widening",
      "--coro-split",
      "--alignment-from-assumptions",
      "--loweratomic",
      "--libcalls-shrinkwrap",
      "-loop-reduce",
      "--ipsccp",
      "--loop-predication",
      "--deadargelim",
      "--loop-simplifycfg",
      "--loop-deletion",
      "--loop-distribute",
      "--callsite-splitting",
      "--memcpyopt",
      "--nary-reassociate",
      "--sink",
      "--jump-threading",
      "--slp-vectorizer",
      "--instcombine"
    ],
    "performance_vs_Oz": "+83.6%"
  }
}