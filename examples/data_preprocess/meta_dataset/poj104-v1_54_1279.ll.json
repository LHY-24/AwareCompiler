{
  "program_id": "poj104-v1_54_1279.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 5,
    "oneSuccessor": 11,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 9,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 6,
    "CriticalCount": 5,
    "NumEdges": 29,
    "const32Bit": 46,
    "const64Bit": 17,
    "numConstZeroes": 11,
    "numConstOnes": 34,
    "UncondBranches": 11,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 24,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 26,
    "NumBitCastInst": 19,
    "NumBrInst": 20,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 66,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 31,
    "TotalInsts": 242,
    "TotalMemInst": 159,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 110
  },
  "baseline_oz_instcount": 69,
  "knowledge_base_entry": [
    "--loop-interchange",
    "--instcombine",
    "--loop-simplifycfg",
    "--die",
    "--mem2reg",
    "--loop-instsimplify",
    "--lower-expect",
    "--elim-avail-extern",
    "--sccp",
    "--inline",
    "--loop-rotate",
    "--elim-avail-extern",
    "--memcpyopt",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--newgvn",
    "--simplifycfg",
    "--sroa",
    "--loop-reroll",
    "-loop-reduce",
    "--mergefunc",
    "--slp-vectorizer",
    "--bdce",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--newgvn",
    "--simplifycfg",
    "--sroa",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--inject-tli-mappings",
          "--lcssa",
          "--loop-distribute",
          "--div-rem-pairs",
          "--simplifycfg",
          "--mem2reg",
          "--memcpyopt",
          "-loop-reduce",
          "--gvn",
          "--coro-elide",
          "--mergereturn",
          "--correlated-propagation",
          "--lower-constant-intrinsics",
          "--tailcallelim",
          "--loop-versioning-licm",
          "--loop-reroll",
          "--elim-avail-extern",
          "--loop-idiom",
          "--loop-load-elim",
          "--strip",
          "--constmerge",
          "--mergefunc",
          "--globaldce",
          "--instcombine",
          "--guard-widening",
          "--inferattrs",
          "--break-crit-edges",
          "--coro-cleanup",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--inject-tli-mappings",
      "--lcssa",
      "--loop-distribute",
      "--div-rem-pairs",
      "--simplifycfg",
      "--mem2reg",
      "--memcpyopt",
      "-loop-reduce",
      "--gvn",
      "--coro-elide",
      "--mergereturn",
      "--correlated-propagation",
      "--lower-constant-intrinsics",
      "--tailcallelim",
      "--loop-versioning-licm",
      "--loop-reroll",
      "--elim-avail-extern",
      "--loop-idiom",
      "--loop-load-elim",
      "--strip",
      "--constmerge",
      "--mergefunc",
      "--globaldce",
      "--instcombine",
      "--guard-widening",
      "--inferattrs",
      "--break-crit-edges",
      "--coro-cleanup",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+4.3%"
  }
}