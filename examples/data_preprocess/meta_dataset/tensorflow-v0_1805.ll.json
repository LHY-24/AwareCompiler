{
  "program_id": "tensorflow-v0_1805.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 2,
    "onePred": 56,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 31,
    "oneSuccessor": 43,
    "twoPred": 38,
    "twoPredOneSuc": 18,
    "twoEach": 20,
    "twoSuccessor": 55,
    "morePreds": 6,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 98,
    "BeginPhi": 3,
    "BranchCount": 78,
    "returnInt": 0,
    "CriticalCount": 65,
    "NumEdges": 164,
    "const32Bit": 291,
    "const64Bit": 117,
    "numConstZeroes": 295,
    "numConstOnes": 94,
    "UncondBranches": 43,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 9,
    "NumAndInst": 24,
    "BlockMid": 0,
    "BlockLow": 101,
    "NumBitCastInst": 43,
    "NumBrInst": 78,
    "NumCallInst": 59,
    "NumGetElementPtrInst": 84,
    "NumICmpInst": 36,
    "NumLShrInst": 2,
    "NumLoadInst": 87,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 0,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 101,
    "TotalInsts": 482,
    "TotalMemInst": 259,
    "TotalFuncs": 16,
    "ArgsPhi": 24,
    "testUnary": 159
  },
  "baseline_oz_instcount": 482,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--slsr",
    "--gvn",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--early-cse",
    "--early-cse",
    "--aggressive-instcombine",
    "--ipsccp",
    "--early-cse-memssa",
    "--bdce",
    "--slp-vectorizer",
    "--instcombine",
    "--newgvn",
    "--newgvn",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-matrix-intrinsics",
          "--alignment-from-assumptions",
          "--mergeicmps",
          "--partially-inline-libcalls",
          "--dse",
          "--attributor",
          "--strip-nondebug",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--loop-unswitch",
          "--sroa",
          "--loop-guard-widening",
          "--lowerinvoke",
          "--mergereturn",
          "--loop-instsimplify",
          "--name-anon-globals",
          "--globalopt",
          "--loop-fusion",
          "--dce",
          "--lower-widenable-condition",
          "--hotcoldsplit",
          "--pgo-memop-opt",
          "--correlated-propagation",
          "--called-value-propagation",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+29.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-matrix-intrinsics",
      "--alignment-from-assumptions",
      "--mergeicmps",
      "--partially-inline-libcalls",
      "--dse",
      "--attributor",
      "--strip-nondebug",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--loop-unswitch",
      "--sroa",
      "--loop-guard-widening",
      "--lowerinvoke",
      "--mergereturn",
      "--loop-instsimplify",
      "--name-anon-globals",
      "--globalopt",
      "--loop-fusion",
      "--dce",
      "--lower-widenable-condition",
      "--hotcoldsplit",
      "--pgo-memop-opt",
      "--correlated-propagation",
      "--called-value-propagation",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+29.0%"
  }
}