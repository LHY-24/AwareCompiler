{
  "program_id": "linux-v0_2060.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 23,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 5,
    "oneSuccessor": 20,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 3,
    "BranchCount": 31,
    "returnInt": 12,
    "CriticalCount": 2,
    "NumEdges": 42,
    "const32Bit": 152,
    "const64Bit": 13,
    "numConstZeroes": 55,
    "numConstOnes": 80,
    "UncondBranches": 20,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 64,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 38,
    "NumBitCastInst": 5,
    "NumBrInst": 31,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 12,
    "NumLShrInst": 2,
    "NumLoadInst": 113,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 16,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 83,
    "NumSubInst": 4,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 8,
    "TotalBlocks": 47,
    "TotalInsts": 423,
    "TotalMemInst": 314,
    "TotalFuncs": 24,
    "ArgsPhi": 6,
    "testUnary": 202
  },
  "baseline_oz_instcount": 423,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--instsimplify",
    "--jump-threading",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--ipsccp",
    "--elim-avail-extern",
    "--loop-rotate",
    "--lower-expect",
    "--early-cse-memssa",
    "--reassociate",
    "--instcombine",
    "--aggressive-instcombine",
    "--ipsccp",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--callsite-splitting",
          "--tailcallelim",
          "--infer-address-spaces",
          "--post-inline-ee-instrument",
          "--instnamer",
          "--simple-loop-unswitch",
          "--dse",
          "--lower-matrix-intrinsics",
          "--add-discriminators",
          "--lower-widenable-condition",
          "--loop-deletion",
          "--coro-early",
          "--aggressive-instcombine",
          "--bdce",
          "--inferattrs",
          "--loop-reroll",
          "--mem2reg",
          "--strip-dead-prototypes",
          "--inline",
          "--rewrite-statepoints-for-gc",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--callsite-splitting",
      "--tailcallelim",
      "--infer-address-spaces",
      "--post-inline-ee-instrument",
      "--instnamer",
      "--simple-loop-unswitch",
      "--dse",
      "--lower-matrix-intrinsics",
      "--add-discriminators",
      "--lower-widenable-condition",
      "--loop-deletion",
      "--coro-early",
      "--aggressive-instcombine",
      "--bdce",
      "--inferattrs",
      "--loop-reroll",
      "--mem2reg",
      "--strip-dead-prototypes",
      "--inline",
      "--rewrite-statepoints-for-gc",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}