{
  "program_id": "linux-v0_1984.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 52,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 17,
    "oneSuccessor": 42,
    "twoPred": 15,
    "twoPredOneSuc": 6,
    "twoEach": 7,
    "twoSuccessor": 29,
    "morePreds": 5,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 3,
    "BranchCount": 71,
    "returnInt": 12,
    "CriticalCount": 13,
    "NumEdges": 104,
    "const32Bit": 276,
    "const64Bit": 24,
    "numConstZeroes": 130,
    "numConstOnes": 94,
    "UncondBranches": 42,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 59,
    "NumAndInst": 7,
    "BlockMid": 10,
    "BlockLow": 69,
    "NumBitCastInst": 13,
    "NumBrInst": 71,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 97,
    "NumICmpInst": 28,
    "NumLShrInst": 2,
    "NumLoadInst": 237,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 7,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 104,
    "NumSubInst": 6,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 4,
    "TotalBlocks": 79,
    "TotalInsts": 691,
    "TotalMemInst": 530,
    "TotalFuncs": 27,
    "ArgsPhi": 6,
    "testUnary": 319
  },
  "baseline_oz_instcount": 692,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--sccp",
    "--instsimplify",
    "--mem2reg",
    "--nary-reassociate",
    "--sroa",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--instcombine",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--mergeicmps",
          "--insert-gcov-profiling",
          "--functionattrs",
          "--coro-early",
          "--newgvn",
          "--called-value-propagation",
          "--loop-versioning",
          "--lower-expect",
          "--speculative-execution",
          "--lowerinvoke",
          "--ipsccp",
          "--lower-constant-intrinsics",
          "--attributor",
          "--adce",
          "--ipconstprop",
          "--lower-matrix-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--mergeicmps",
      "--insert-gcov-profiling",
      "--functionattrs",
      "--coro-early",
      "--newgvn",
      "--called-value-propagation",
      "--loop-versioning",
      "--lower-expect",
      "--speculative-execution",
      "--lowerinvoke",
      "--ipsccp",
      "--lower-constant-intrinsics",
      "--attributor",
      "--adce",
      "--ipconstprop",
      "--lower-matrix-intrinsics"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}