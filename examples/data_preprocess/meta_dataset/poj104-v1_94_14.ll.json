{
  "program_id": "poj104-v1_94_14.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 2,
    "oneSuccessor": 18,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 25,
    "returnInt": 1,
    "CriticalCount": 1,
    "NumEdges": 32,
    "const32Bit": 31,
    "const64Bit": 26,
    "numConstZeroes": 21,
    "numConstOnes": 22,
    "UncondBranches": 18,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 27,
    "NumBitCastInst": 12,
    "NumBrInst": 25,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 39,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 29,
    "TotalInsts": 175,
    "TotalMemInst": 102,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 71
  },
  "baseline_oz_instcount": 89,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--correlated-propagation",
    "--gvn",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--instcombine",
    "--globalopt",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--adce",
    "--dse",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--instsimplify",
    "--simplifycfg",
    "--mergefunc",
    "--sroa",
    "--elim-avail-extern",
    "--flattencfg",
    "--adce",
    "--simplifycfg",
    "--dce",
    "--inline",
    "--load-store-vectorizer",
    "--gvn",
    "--sroa",
    "--sccp",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplify",
          "--scalarizer",
          "--lower-constant-intrinsics",
          "--called-value-propagation",
          "--loop-versioning-licm",
          "--elim-avail-extern",
          "--lower-matrix-intrinsics",
          "--newgvn",
          "--loop-interchange",
          "--sroa",
          "--lowerswitch",
          "--alignment-from-assumptions",
          "--mergereturn",
          "--instcombine",
          "--loop-fusion",
          "--dce",
          "--die",
          "--lower-expect",
          "--mldst-motion",
          "--globalopt",
          "--rpo-functionattrs",
          "--speculative-execution",
          "--lcssa",
          "--jump-threading",
          "--loop-sink",
          "--ipconstprop",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplify",
      "--scalarizer",
      "--lower-constant-intrinsics",
      "--called-value-propagation",
      "--loop-versioning-licm",
      "--elim-avail-extern",
      "--lower-matrix-intrinsics",
      "--newgvn",
      "--loop-interchange",
      "--sroa",
      "--lowerswitch",
      "--alignment-from-assumptions",
      "--mergereturn",
      "--instcombine",
      "--loop-fusion",
      "--dce",
      "--die",
      "--lower-expect",
      "--mldst-motion",
      "--globalopt",
      "--rpo-functionattrs",
      "--speculative-execution",
      "--lcssa",
      "--jump-threading",
      "--loop-sink",
      "--ipconstprop",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}