{
  "program_id": "linux-v0_3715.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 5,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 7,
    "const32Bit": 15,
    "const64Bit": 0,
    "numConstZeroes": 3,
    "numConstOnes": 10,
    "UncondBranches": 3,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 10,
    "NumBitCastInst": 0,
    "NumBrInst": 5,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 8,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 45,
    "TotalMemInst": 33,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 17
  },
  "baseline_oz_instcount": 45,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--dce",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--ipsccp",
    "--mergefunc",
    "--dce",
    "--gvn",
    "--instcombine",
    "--mldst-motion",
    "--inline",
    "--adce",
    "--licm",
    "--memcpyopt",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--simple-loop-unswitch",
          "--called-value-propagation",
          "--nary-reassociate",
          "--lowerinvoke",
          "--mergefunc",
          "--reassociate",
          "--adce",
          "--loop-predication",
          "--speculative-execution",
          "--insert-gcov-profiling",
          "--loop-simplify",
          "--partially-inline-libcalls",
          "--loop-idiom",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--simple-loop-unswitch",
      "--called-value-propagation",
      "--nary-reassociate",
      "--lowerinvoke",
      "--mergefunc",
      "--reassociate",
      "--adce",
      "--loop-predication",
      "--speculative-execution",
      "--insert-gcov-profiling",
      "--loop-simplify",
      "--partially-inline-libcalls",
      "--loop-idiom",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+6.7%"
  }
}