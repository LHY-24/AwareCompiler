{
  "program_id": "github-v0_47211.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 52,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 15,
    "oneSuccessor": 44,
    "twoPred": 16,
    "twoPredOneSuc": 6,
    "twoEach": 6,
    "twoSuccessor": 27,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 80,
    "BeginPhi": 1,
    "BranchCount": 71,
    "returnInt": 5,
    "CriticalCount": 4,
    "NumEdges": 98,
    "const32Bit": 168,
    "const64Bit": 2,
    "numConstZeroes": 20,
    "numConstOnes": 71,
    "UncondBranches": 44,
    "binaryConstArg": 70,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 38,
    "NumAndInst": 33,
    "BlockMid": 7,
    "BlockLow": 74,
    "NumBitCastInst": 0,
    "NumBrInst": 71,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 27,
    "NumLShrInst": 15,
    "NumLoadInst": 126,
    "NumMulInst": 0,
    "NumOrInst": 17,
    "NumPHIInst": 1,
    "NumRetInst": 10,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 100,
    "NumSubInst": 5,
    "NumTruncInst": 22,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 81,
    "TotalInsts": 518,
    "TotalMemInst": 293,
    "TotalFuncs": 17,
    "ArgsPhi": 2,
    "testUnary": 205
  },
  "baseline_oz_instcount": 518,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--simplifycfg",
    "--gvn",
    "--loop-rotate",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--aggressive-instcombine",
          "--loweratomic",
          "--jump-threading",
          "--irce",
          "--inferattrs",
          "--loop-distribute",
          "--loop-versioning",
          "--ipconstprop",
          "--dse",
          "--speculative-execution",
          "--strip",
          "--deadargelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--aggressive-instcombine",
      "--loweratomic",
      "--jump-threading",
      "--irce",
      "--inferattrs",
      "--loop-distribute",
      "--loop-versioning",
      "--ipconstprop",
      "--dse",
      "--speculative-execution",
      "--strip",
      "--deadargelim"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}