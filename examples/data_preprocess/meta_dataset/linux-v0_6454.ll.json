{
  "program_id": "linux-v0_6454.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 71,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 13,
    "oneSuccessor": 67,
    "twoPred": 19,
    "twoPredOneSuc": 5,
    "twoEach": 6,
    "twoSuccessor": 26,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 128,
    "BeginPhi": 0,
    "BranchCount": 92,
    "returnInt": 40,
    "CriticalCount": 8,
    "NumEdges": 141,
    "const32Bit": 324,
    "const64Bit": 24,
    "numConstZeroes": 142,
    "numConstOnes": 105,
    "UncondBranches": 67,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 77,
    "NumAndInst": 3,
    "BlockMid": 7,
    "BlockLow": 121,
    "NumBitCastInst": 12,
    "NumBrInst": 92,
    "NumCallInst": 70,
    "NumGetElementPtrInst": 80,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 203,
    "NumMulInst": 2,
    "NumOrInst": 13,
    "NumPHIInst": 0,
    "NumRetInst": 30,
    "NumSExtInst": 22,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 120,
    "NumSubInst": 2,
    "NumTruncInst": 14,
    "NumXorInst": 2,
    "NumZExtInst": 18,
    "TotalBlocks": 128,
    "TotalInsts": 803,
    "TotalMemInst": 550,
    "TotalFuncs": 57,
    "ArgsPhi": 0,
    "testUnary": 350
  },
  "baseline_oz_instcount": 805,
  "knowledge_base_entry": [
    "--mergefunc",
    "--inline",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--guard-widening",
          "--aggressive-instcombine",
          "--lower-expect",
          "--loweratomic",
          "--strip-dead-prototypes",
          "--memcpyopt",
          "--lowerinvoke",
          "--globalsplit",
          "--partially-inline-libcalls",
          "--licm",
          "--separate-const-offset-from-gep",
          "--consthoist",
          "--scalarizer",
          "--loop-unswitch",
          "--alignment-from-assumptions",
          "--mergeicmps",
          "--loop-simplify",
          "--loop-reroll",
          "--loop-sink",
          "--dse",
          "--barrier",
          "--insert-gcov-profiling",
          "--canonicalize-aliases",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--guard-widening",
      "--aggressive-instcombine",
      "--lower-expect",
      "--loweratomic",
      "--strip-dead-prototypes",
      "--memcpyopt",
      "--lowerinvoke",
      "--globalsplit",
      "--partially-inline-libcalls",
      "--licm",
      "--separate-const-offset-from-gep",
      "--consthoist",
      "--scalarizer",
      "--loop-unswitch",
      "--alignment-from-assumptions",
      "--mergeicmps",
      "--loop-simplify",
      "--loop-reroll",
      "--loop-sink",
      "--dse",
      "--barrier",
      "--insert-gcov-profiling",
      "--canonicalize-aliases",
      "--bdce"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}