{
  "program_id": "poj104-v1_46_2991.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 6,
    "oneSuccessor": 35,
    "twoPred": 16,
    "twoPredOneSuc": 5,
    "twoEach": 9,
    "twoSuccessor": 17,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 62,
    "BeginPhi": 0,
    "BranchCount": 52,
    "returnInt": 3,
    "CriticalCount": 6,
    "NumEdges": 69,
    "const32Bit": 76,
    "const64Bit": 49,
    "numConstZeroes": 42,
    "numConstOnes": 48,
    "UncondBranches": 35,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 20,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 55,
    "NumBitCastInst": 23,
    "NumBrInst": 52,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 103,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 28,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 40,
    "NumSubInst": 27,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 62,
    "TotalInsts": 415,
    "TotalMemInst": 244,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 175
  },
  "baseline_oz_instcount": 245,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--mergefunc",
    "--gvn",
    "--gvn",
    "--licm",
    "--flattencfg",
    "--adce",
    "--instsimplify",
    "--sccp",
    "--newgvn",
    "--mldst-motion",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--inline",
    "--newgvn",
    "--ipsccp",
    "--instsimplify",
    "--sroa",
    "--instcombine",
    "--die",
    "--loop-instsimplify",
    "--bdce",
    "--ipsccp",
    "--newgvn",
    "--sccp",
    "--newgvn",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--jump-threading",
    "--adce",
    "--mergefunc",
    "--slp-vectorizer",
    "--die",
    "--inline",
    "--memcpyopt",
    "--loop-reroll",
    "--indvars",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--mergefunc",
          "--add-discriminators",
          "--loop-deletion",
          "--pgo-memop-opt",
          "--coro-elide",
          "--loop-reroll",
          "--globalopt",
          "--canonicalize-aliases",
          "--jump-threading",
          "--strip-nondebug",
          "--lcssa",
          "--constmerge",
          "-loop-reduce",
          "--instcombine",
          "--elim-avail-extern",
          "--loop-unroll",
          "--mergereturn",
          "--lower-matrix-intrinsics",
          "--lower-guard-intrinsic",
          "--slsr",
          "--globalsplit",
          "--early-cse-memssa",
          "--loop-fusion",
          "--rewrite-statepoints-for-gc",
          "--loop-unroll-and-jam",
          "--sroa",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+24.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--mergefunc",
      "--add-discriminators",
      "--loop-deletion",
      "--pgo-memop-opt",
      "--coro-elide",
      "--loop-reroll",
      "--globalopt",
      "--canonicalize-aliases",
      "--jump-threading",
      "--strip-nondebug",
      "--lcssa",
      "--constmerge",
      "-loop-reduce",
      "--instcombine",
      "--elim-avail-extern",
      "--loop-unroll",
      "--mergereturn",
      "--lower-matrix-intrinsics",
      "--lower-guard-intrinsic",
      "--slsr",
      "--globalsplit",
      "--early-cse-memssa",
      "--loop-fusion",
      "--rewrite-statepoints-for-gc",
      "--loop-unroll-and-jam",
      "--sroa",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+24.5%"
  }
}