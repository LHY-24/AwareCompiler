{
  "program_id": "github-v0_6546.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 3,
    "oneSuccessor": 16,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 32,
    "const32Bit": 114,
    "const64Bit": 0,
    "numConstZeroes": 73,
    "numConstOnes": 31,
    "UncondBranches": 16,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 25,
    "NumBitCastInst": 0,
    "NumBrInst": 24,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 79,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 29,
    "TotalInsts": 219,
    "TotalMemInst": 182,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 90
  },
  "baseline_oz_instcount": 220,
  "knowledge_base_entry": [
    "--instsimplify",
    "--slp-vectorizer",
    "--instsimplify",
    "--instcombine",
    "--reassociate",
    "--globalopt",
    "--mem2reg",
    "--lower-expect",
    "--gvn",
    "--early-cse-memssa",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rewrite-statepoints-for-gc",
          "--alignment-from-assumptions",
          "--forceattrs",
          "--die",
          "--sroa",
          "--strip",
          "--globalopt",
          "--instnamer",
          "--cross-dso-cfi",
          "--canonicalize-aliases"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rewrite-statepoints-for-gc",
      "--alignment-from-assumptions",
      "--forceattrs",
      "--die",
      "--sroa",
      "--strip",
      "--globalopt",
      "--instnamer",
      "--cross-dso-cfi",
      "--canonicalize-aliases"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}