{
  "program_id": "github-v0_37400.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 36,
    "const64Bit": 0,
    "numConstZeroes": 1,
    "numConstOnes": 35,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 35,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 19,
    "NumBitCastInst": 2,
    "NumBrInst": 0,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 35,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 20,
    "TotalInsts": 133,
    "TotalMemInst": 104,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 59
  },
  "baseline_oz_instcount": 133,
  "knowledge_base_entry": [
    "--functionattrs",
    "--gvn",
    "--sroa",
    "--licm",
    "--mergefunc",
    "--inline",
    "--sccp",
    "--early-cse",
    "--reassociate",
    "--instcombine",
    "--ipsccp",
    "--die",
    "--slp-vectorizer",
    "--mem2reg",
    "--elim-avail-extern",
    "--sccp",
    "--early-cse",
    "--globalopt",
    "--loop-simplifycfg",
    "--adce",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--strip-debug-declare",
          "--mergefunc",
          "--nary-reassociate",
          "--float2int",
          "--hotcoldsplit",
          "--lower-widenable-condition",
          "--loop-predication",
          "--barrier",
          "--lowerswitch",
          "--licm",
          "--scalarizer",
          "--guard-widening",
          "--instcombine",
          "--instnamer",
          "--correlated-propagation",
          "--functionattrs",
          "--strip-dead-prototypes",
          "--slp-vectorizer",
          "--instsimplify",
          "--sroa",
          "--inline",
          "--loop-simplify",
          "--constprop",
          "--loop-unswitch",
          "--loop-load-elim",
          "--gvn",
          "--elim-avail-extern",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+35.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--strip-debug-declare",
      "--mergefunc",
      "--nary-reassociate",
      "--float2int",
      "--hotcoldsplit",
      "--lower-widenable-condition",
      "--loop-predication",
      "--barrier",
      "--lowerswitch",
      "--licm",
      "--scalarizer",
      "--guard-widening",
      "--instcombine",
      "--instnamer",
      "--correlated-propagation",
      "--functionattrs",
      "--strip-dead-prototypes",
      "--slp-vectorizer",
      "--instsimplify",
      "--sroa",
      "--inline",
      "--loop-simplify",
      "--constprop",
      "--loop-unswitch",
      "--loop-load-elim",
      "--gvn",
      "--elim-avail-extern",
      "--globalopt"
    ],
    "performance_vs_Oz": "+35.3%"
  }
}