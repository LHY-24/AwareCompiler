{
  "program_id": "poj104-v1_69_437.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 17,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 5,
    "oneSuccessor": 17,
    "twoPred": 13,
    "twoPredOneSuc": 5,
    "twoEach": 8,
    "twoSuccessor": 13,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 32,
    "BeginPhi": 1,
    "BranchCount": 30,
    "returnInt": 6,
    "CriticalCount": 11,
    "NumEdges": 43,
    "const32Bit": 29,
    "const64Bit": 35,
    "numConstZeroes": 28,
    "numConstOnes": 15,
    "UncondBranches": 17,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 28,
    "NumBitCastInst": 15,
    "NumBrInst": 30,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 16,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 50,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 13,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 33,
    "TotalInsts": 210,
    "TotalMemInst": 110,
    "TotalFuncs": 12,
    "ArgsPhi": 2,
    "testUnary": 91
  },
  "baseline_oz_instcount": 117,
  "knowledge_base_entry": [
    "--prune-eh",
    "--inline",
    "--mldst-motion",
    "--elim-avail-extern",
    "--sroa",
    "--jump-threading",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--reassociate",
    "--prune-eh",
    "--inline",
    "--instcombine",
    "--lower-expect",
    "--early-cse",
    "--prune-eh",
    "--licm",
    "--gvn-hoist",
    "--dce",
    "--jump-threading",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--gvn",
    "--simplifycfg",
    "--gvn-hoist",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simple-loop-unswitch",
          "--reassociate",
          "--loweratomic",
          "--lcssa",
          "--infer-address-spaces",
          "--coro-early",
          "--instcombine",
          "--inline",
          "--strip-dead-prototypes",
          "--mem2reg",
          "--jump-threading",
          "--loop-predication",
          "--add-discriminators",
          "--rewrite-statepoints-for-gc",
          "--simplifycfg",
          "--partially-inline-libcalls",
          "--ipconstprop",
          "--instnamer",
          "--tailcallelim",
          "--forceattrs",
          "--gvn",
          "--loop-unroll",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simple-loop-unswitch",
      "--reassociate",
      "--loweratomic",
      "--lcssa",
      "--infer-address-spaces",
      "--coro-early",
      "--instcombine",
      "--inline",
      "--strip-dead-prototypes",
      "--mem2reg",
      "--jump-threading",
      "--loop-predication",
      "--add-discriminators",
      "--rewrite-statepoints-for-gc",
      "--simplifycfg",
      "--partially-inline-libcalls",
      "--ipconstprop",
      "--instnamer",
      "--tailcallelim",
      "--forceattrs",
      "--gvn",
      "--loop-unroll",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}