{
  "program_id": "linux-v0_3345.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 57,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 12,
    "oneSuccessor": 51,
    "twoPred": 15,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 25,
    "morePreds": 4,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 91,
    "BeginPhi": 3,
    "BranchCount": 76,
    "returnInt": 10,
    "CriticalCount": 19,
    "NumEdges": 101,
    "const32Bit": 208,
    "const64Bit": 20,
    "numConstZeroes": 95,
    "numConstOnes": 113,
    "UncondBranches": 51,
    "binaryConstArg": 33,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 70,
    "NumAndInst": 8,
    "BlockMid": 8,
    "BlockLow": 86,
    "NumBitCastInst": 20,
    "NumBrInst": 76,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 52,
    "NumICmpInst": 37,
    "NumLShrInst": 1,
    "NumLoadInst": 145,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 18,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 84,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 23,
    "NumZExtInst": 13,
    "TotalBlocks": 94,
    "TotalInsts": 605,
    "TotalMemInst": 392,
    "TotalFuncs": 36,
    "ArgsPhi": 6,
    "testUnary": 260
  },
  "baseline_oz_instcount": 606,
  "knowledge_base_entry": [
    "--globalopt",
    "--loop-simplifycfg",
    "--early-cse",
    "--gvn",
    "--lower-expect",
    "--gvn",
    "--elim-avail-extern",
    "--mem2reg",
    "--elim-avail-extern",
    "--mem2reg",
    "--early-cse-memssa",
    "--inline",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--dce",
    "--newgvn",
    "--correlated-propagation",
    "--newgvn",
    "--simplifycfg",
    "--instsimplify",
    "--elim-avail-extern",
    "--sccp",
    "--licm",
    "--loop-rotate",
    "--jump-threading",
    "--dce",
    "--newgvn",
    "--aggressive-instcombine",
    "--globalopt",
    "--loop-simplifycfg",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--libcalls-shrinkwrap",
          "--prune-eh",
          "--elim-avail-extern",
          "--loop-data-prefetch",
          "--loop-sink",
          "--insert-gcov-profiling",
          "--scalarizer",
          "--pgo-memop-opt",
          "--lower-matrix-intrinsics",
          "--alignment-from-assumptions",
          "--loop-vectorize",
          "--reassociate",
          "--loop-simplifycfg",
          "--loop-idiom",
          "--tailcallelim",
          "--sccp",
          "--cross-dso-cfi",
          "--called-value-propagation",
          "--partial-inliner",
          "--inline",
          "--loop-versioning",
          "--loop-unswitch",
          "--speculative-execution",
          "--gvn",
          "--callsite-splitting",
          "--licm",
          "--infer-address-spaces"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--libcalls-shrinkwrap",
      "--prune-eh",
      "--elim-avail-extern",
      "--loop-data-prefetch",
      "--loop-sink",
      "--insert-gcov-profiling",
      "--scalarizer",
      "--pgo-memop-opt",
      "--lower-matrix-intrinsics",
      "--alignment-from-assumptions",
      "--loop-vectorize",
      "--reassociate",
      "--loop-simplifycfg",
      "--loop-idiom",
      "--tailcallelim",
      "--sccp",
      "--cross-dso-cfi",
      "--called-value-propagation",
      "--partial-inliner",
      "--inline",
      "--loop-versioning",
      "--loop-unswitch",
      "--speculative-execution",
      "--gvn",
      "--callsite-splitting",
      "--licm",
      "--infer-address-spaces"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}