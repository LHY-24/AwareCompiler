{
  "program_id": "linux-v0_7141.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 67,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 15,
    "oneSuccessor": 62,
    "twoPred": 21,
    "twoPredOneSuc": 8,
    "twoEach": 10,
    "twoSuccessor": 28,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 108,
    "BeginPhi": 0,
    "BranchCount": 90,
    "returnInt": 29,
    "CriticalCount": 15,
    "NumEdges": 127,
    "const32Bit": 280,
    "const64Bit": 73,
    "numConstZeroes": 163,
    "numConstOnes": 110,
    "UncondBranches": 62,
    "binaryConstArg": 52,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 70,
    "NumAndInst": 16,
    "BlockMid": 9,
    "BlockLow": 99,
    "NumBitCastInst": 12,
    "NumBrInst": 90,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 96,
    "NumICmpInst": 39,
    "NumLShrInst": 4,
    "NumLoadInst": 180,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 120,
    "NumSubInst": 2,
    "NumTruncInst": 8,
    "NumXorInst": 23,
    "NumZExtInst": 21,
    "TotalBlocks": 108,
    "TotalInsts": 786,
    "TotalMemInst": 514,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 314
  },
  "baseline_oz_instcount": 785,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--simplifycfg",
    "--newgvn",
    "--early-cse",
    "--simplifycfg",
    "--sccp",
    "--mem2reg",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--reassociate",
    "--instsimplify",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--slsr",
    "--simplifycfg",
    "--nary-reassociate",
    "--ipsccp",
    "--sroa",
    "--early-cse-memssa",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-matrix-intrinsics",
          "--lowerinvoke",
          "--loop-idiom",
          "--attributor",
          "--newgvn",
          "--forceattrs",
          "--tailcallelim",
          "--hotcoldsplit",
          "--coro-split",
          "--flattencfg",
          "--aggressive-instcombine",
          "--nary-reassociate",
          "--float2int",
          "--globalsplit",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-matrix-intrinsics",
      "--lowerinvoke",
      "--loop-idiom",
      "--attributor",
      "--newgvn",
      "--forceattrs",
      "--tailcallelim",
      "--hotcoldsplit",
      "--coro-split",
      "--flattencfg",
      "--aggressive-instcombine",
      "--nary-reassociate",
      "--float2int",
      "--globalsplit",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}