{
  "program_id": "github-v0_3517.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 5,
    "CriticalCount": 2,
    "NumEdges": 25,
    "const32Bit": 28,
    "const64Bit": 0,
    "numConstZeroes": 9,
    "numConstOnes": 18,
    "UncondBranches": 13,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 22,
    "NumBitCastInst": 0,
    "NumBrInst": 19,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 22,
    "TotalInsts": 101,
    "TotalMemInst": 66,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 44
  },
  "baseline_oz_instcount": 102,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--memcpyopt",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--die",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--prune-eh",
          "--dce",
          "--slp-vectorizer",
          "--gvn-hoist",
          "--loop-vectorize",
          "--div-rem-pairs",
          "--inferattrs",
          "--alignment-from-assumptions",
          "--tailcallelim",
          "--coro-early",
          "--globalopt",
          "--loweratomic",
          "--globalsplit",
          "--instcombine",
          "--sccp",
          "--inline",
          "--functionattrs",
          "--lowerswitch",
          "--lower-guard-intrinsic",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--prune-eh",
      "--dce",
      "--slp-vectorizer",
      "--gvn-hoist",
      "--loop-vectorize",
      "--div-rem-pairs",
      "--inferattrs",
      "--alignment-from-assumptions",
      "--tailcallelim",
      "--coro-early",
      "--globalopt",
      "--loweratomic",
      "--globalsplit",
      "--instcombine",
      "--sccp",
      "--inline",
      "--functionattrs",
      "--lowerswitch",
      "--lower-guard-intrinsic",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}