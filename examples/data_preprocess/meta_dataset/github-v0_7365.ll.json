{
  "program_id": "github-v0_7365.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 36,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 10,
    "oneSuccessor": 36,
    "twoPred": 22,
    "twoPredOneSuc": 11,
    "twoEach": 9,
    "twoSuccessor": 22,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 1,
    "BranchCount": 58,
    "returnInt": 13,
    "CriticalCount": 11,
    "NumEdges": 80,
    "const32Bit": 118,
    "const64Bit": 7,
    "numConstZeroes": 67,
    "numConstOnes": 22,
    "UncondBranches": 36,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 8,
    "NumAndInst": 4,
    "BlockMid": 1,
    "BlockLow": 60,
    "NumBitCastInst": 6,
    "NumBrInst": 58,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 39,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 86,
    "NumMulInst": 4,
    "NumOrInst": 4,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 38,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 61,
    "TotalInsts": 322,
    "TotalMemInst": 197,
    "TotalFuncs": 13,
    "ArgsPhi": 2,
    "testUnary": 116
  },
  "baseline_oz_instcount": 323,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--gvn-hoist",
    "--dce",
    "--jump-threading",
    "--early-cse-memssa",
    "--adce",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--die",
    "--inline",
    "--gvn",
    "--inline",
    "--die",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-dead-prototypes",
          "--loop-sink",
          "--aggressive-instcombine",
          "--loop-reroll",
          "--lower-widenable-condition",
          "--consthoist",
          "--always-inline",
          "--coro-elide",
          "--forceattrs",
          "--die",
          "--memcpyopt",
          "-loop-reduce",
          "--elim-avail-extern",
          "--slp-vectorizer",
          "--lcssa",
          "--partial-inliner",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-dead-prototypes",
      "--loop-sink",
      "--aggressive-instcombine",
      "--loop-reroll",
      "--lower-widenable-condition",
      "--consthoist",
      "--always-inline",
      "--coro-elide",
      "--forceattrs",
      "--die",
      "--memcpyopt",
      "-loop-reduce",
      "--elim-avail-extern",
      "--slp-vectorizer",
      "--lcssa",
      "--partial-inliner",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}