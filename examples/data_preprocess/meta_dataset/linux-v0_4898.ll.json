{
  "program_id": "linux-v0_4898.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 3,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 6,
    "CriticalCount": 2,
    "NumEdges": 18,
    "const32Bit": 79,
    "const64Bit": 1,
    "numConstZeroes": 34,
    "numConstOnes": 18,
    "UncondBranches": 9,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 15,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 12,
    "NumBitCastInst": 4,
    "NumBrInst": 12,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 54,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 17,
    "TotalInsts": 165,
    "TotalMemInst": 130,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 82
  },
  "baseline_oz_instcount": 165,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--simplifycfg",
    "--newgvn",
    "--slsr",
    "--slp-vectorizer",
    "--mem2reg",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--instcombine",
    "-loop-reduce",
    "--indvars",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-reroll",
          "--loweratomic",
          "--simplifycfg",
          "--loop-unswitch",
          "--insert-gcov-profiling",
          "--sancov",
          "--pgo-memop-opt",
          "--forceattrs",
          "--aggressive-instcombine",
          "--coro-split",
          "--gvn-hoist",
          "--lower-widenable-condition",
          "--separate-const-offset-from-gep",
          "--instnamer",
          "--strip-debug-declare",
          "--flattencfg",
          "--argpromotion",
          "--indvars",
          "--barrier",
          "--called-value-propagation",
          "--guard-widening",
          "--ipconstprop",
          "--loop-predication",
          "--strip",
          "-loop-reduce",
          "--nary-reassociate",
          "--loop-rotate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-reroll",
      "--loweratomic",
      "--simplifycfg",
      "--loop-unswitch",
      "--insert-gcov-profiling",
      "--sancov",
      "--pgo-memop-opt",
      "--forceattrs",
      "--aggressive-instcombine",
      "--coro-split",
      "--gvn-hoist",
      "--lower-widenable-condition",
      "--separate-const-offset-from-gep",
      "--instnamer",
      "--strip-debug-declare",
      "--flattencfg",
      "--argpromotion",
      "--indvars",
      "--barrier",
      "--called-value-propagation",
      "--guard-widening",
      "--ipconstprop",
      "--loop-predication",
      "--strip",
      "-loop-reduce",
      "--nary-reassociate",
      "--loop-rotate"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}