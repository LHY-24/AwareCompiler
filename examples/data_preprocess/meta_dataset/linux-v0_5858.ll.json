{
  "program_id": "linux-v0_5858.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 5,
    "oneSuccessor": 32,
    "twoPred": 9,
    "twoPredOneSuc": 5,
    "twoEach": 1,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 0,
    "BranchCount": 41,
    "returnInt": 12,
    "CriticalCount": 5,
    "NumEdges": 50,
    "const32Bit": 180,
    "const64Bit": 11,
    "numConstZeroes": 76,
    "numConstOnes": 64,
    "UncondBranches": 32,
    "binaryConstArg": 28,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 42,
    "NumAndInst": 8,
    "BlockMid": 6,
    "BlockLow": 54,
    "NumBitCastInst": 6,
    "NumBrInst": 41,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 13,
    "NumLShrInst": 4,
    "NumLoadInst": 112,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 66,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 10,
    "NumZExtInst": 15,
    "TotalBlocks": 60,
    "TotalInsts": 445,
    "TotalMemInst": 307,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 187
  },
  "baseline_oz_instcount": 442,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--instcombine",
    "--licm",
    "--loop-simplifycfg",
    "--inline",
    "--loop-simplifycfg",
    "--globalopt",
    "--early-cse",
    "--mergefunc",
    "--jump-threading",
    "--prune-eh",
    "--aggressive-instcombine",
    "--gvn",
    "--loop-rotate",
    "--lower-expect",
    "--slp-vectorizer",
    "--indvars",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--globaldce",
          "--lower-constant-intrinsics",
          "--always-inline",
          "--consthoist",
          "--lower-guard-intrinsic",
          "--simplifycfg",
          "--dse",
          "--mergeicmps",
          "--loop-simplify",
          "--lcssa",
          "--argpromotion",
          "--aggressive-instcombine",
          "--sancov",
          "--newgvn",
          "--loop-load-elim",
          "--coro-elide",
          "--globalopt",
          "--post-inline-ee-instrument",
          "--licm",
          "--attributor",
          "--coro-early",
          "--coro-split",
          "--gvn",
          "--globalsplit",
          "--deadargelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--globaldce",
      "--lower-constant-intrinsics",
      "--always-inline",
      "--consthoist",
      "--lower-guard-intrinsic",
      "--simplifycfg",
      "--dse",
      "--mergeicmps",
      "--loop-simplify",
      "--lcssa",
      "--argpromotion",
      "--aggressive-instcombine",
      "--sancov",
      "--newgvn",
      "--loop-load-elim",
      "--coro-elide",
      "--globalopt",
      "--post-inline-ee-instrument",
      "--licm",
      "--attributor",
      "--coro-early",
      "--coro-split",
      "--gvn",
      "--globalsplit",
      "--deadargelim"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}