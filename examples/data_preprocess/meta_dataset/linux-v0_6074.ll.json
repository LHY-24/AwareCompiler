{
  "program_id": "linux-v0_6074.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 0,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 0,
    "BranchCount": 6,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 8,
    "const32Bit": 29,
    "const64Bit": 4,
    "numConstZeroes": 2,
    "numConstOnes": 20,
    "UncondBranches": 4,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 17,
    "NumAndInst": 1,
    "BlockMid": 2,
    "BlockLow": 11,
    "NumBitCastInst": 2,
    "NumBrInst": 6,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 28,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 21,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 5,
    "TotalBlocks": 13,
    "TotalInsts": 115,
    "TotalMemInst": 78,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 55
  },
  "baseline_oz_instcount": 115,
  "knowledge_base_entry": [
    "--dce",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--lower-expect",
    "--load-store-vectorizer",
    "--instsimplify",
    "--loop-simplifycfg",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergeicmps",
          "--loop-unswitch",
          "--gvn",
          "--loop-deletion",
          "--slp-vectorizer",
          "--elim-avail-extern",
          "--gvn-hoist",
          "--aggressive-instcombine",
          "--instnamer",
          "--name-anon-globals",
          "--reassociate",
          "--deadargelim",
          "--loop-unroll",
          "--newgvn",
          "--coro-early",
          "--functionattrs",
          "--coro-elide",
          "--load-store-vectorizer",
          "--sancov",
          "--strip",
          "--adce",
          "--indvars",
          "--globaldce",
          "--called-value-propagation",
          "--loop-guard-widening",
          "--sroa",
          "--loop-data-prefetch",
          "--loop-sink",
          "--coro-cleanup",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergeicmps",
      "--loop-unswitch",
      "--gvn",
      "--loop-deletion",
      "--slp-vectorizer",
      "--elim-avail-extern",
      "--gvn-hoist",
      "--aggressive-instcombine",
      "--instnamer",
      "--name-anon-globals",
      "--reassociate",
      "--deadargelim",
      "--loop-unroll",
      "--newgvn",
      "--coro-early",
      "--functionattrs",
      "--coro-elide",
      "--load-store-vectorizer",
      "--sancov",
      "--strip",
      "--adce",
      "--indvars",
      "--globaldce",
      "--called-value-propagation",
      "--loop-guard-widening",
      "--sroa",
      "--loop-data-prefetch",
      "--loop-sink",
      "--coro-cleanup",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+3.5%"
  }
}