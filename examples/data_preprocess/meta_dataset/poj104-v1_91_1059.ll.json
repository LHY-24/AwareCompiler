{
  "program_id": "poj104-v1_91_1059.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 9,
    "const32Bit": 12,
    "const64Bit": 17,
    "numConstZeroes": 12,
    "numConstOnes": 11,
    "UncondBranches": 5,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 7,
    "NumBitCastInst": 6,
    "NumBrInst": 7,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 14,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 6,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 82,
    "TotalMemInst": 46,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 37
  },
  "baseline_oz_instcount": 41,
  "knowledge_base_entry": [
    "--simple-loop-unswitch",
    "--early-cse",
    "--ipsccp",
    "--newgvn",
    "--early-cse-memssa",
    "--inline",
    "--sccp",
    "--simplifycfg",
    "--globalopt",
    "--correlated-propagation",
    "--ipsccp",
    "--instcombine",
    "--mldst-motion",
    "--elim-avail-extern",
    "--sroa",
    "--dse",
    "--dse",
    "--inline",
    "--flattencfg",
    "--sroa",
    "--bdce",
    "--newgvn",
    "--dce",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--float2int",
          "--early-cse",
          "--mergefunc",
          "--aggressive-instcombine",
          "--newgvn",
          "--adce",
          "--reg2mem",
          "--tailcallelim",
          "--consthoist",
          "--lower-expect",
          "--constmerge",
          "--coro-split",
          "--globalopt",
          "--simplifycfg",
          "--loop-instsimplify",
          "--mem2reg",
          "--always-inline",
          "--rewrite-statepoints-for-gc",
          "--instsimplify",
          "--coro-elide",
          "--licm",
          "--div-rem-pairs",
          "--loop-unroll-and-jam",
          "--gvn-hoist",
          "--coro-cleanup",
          "--lowerinvoke",
          "--break-crit-edges",
          "--globaldce",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--float2int",
      "--early-cse",
      "--mergefunc",
      "--aggressive-instcombine",
      "--newgvn",
      "--adce",
      "--reg2mem",
      "--tailcallelim",
      "--consthoist",
      "--lower-expect",
      "--constmerge",
      "--coro-split",
      "--globalopt",
      "--simplifycfg",
      "--loop-instsimplify",
      "--mem2reg",
      "--always-inline",
      "--rewrite-statepoints-for-gc",
      "--instsimplify",
      "--coro-elide",
      "--licm",
      "--div-rem-pairs",
      "--loop-unroll-and-jam",
      "--gvn-hoist",
      "--coro-cleanup",
      "--lowerinvoke",
      "--break-crit-edges",
      "--globaldce",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+4.9%"
  }
}