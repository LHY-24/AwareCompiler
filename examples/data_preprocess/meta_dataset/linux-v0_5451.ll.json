{
  "program_id": "linux-v0_5451.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 54,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 24,
    "oneSuccessor": 38,
    "twoPred": 11,
    "twoPredOneSuc": 6,
    "twoEach": 1,
    "twoSuccessor": 32,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 83,
    "BeginPhi": 0,
    "BranchCount": 70,
    "returnInt": 6,
    "CriticalCount": 31,
    "NumEdges": 119,
    "const32Bit": 163,
    "const64Bit": 32,
    "numConstZeroes": 45,
    "numConstOnes": 69,
    "UncondBranches": 38,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 47,
    "NumAndInst": 4,
    "BlockMid": 6,
    "BlockLow": 77,
    "NumBitCastInst": 2,
    "NumBrInst": 70,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 56,
    "NumICmpInst": 32,
    "NumLShrInst": 0,
    "NumLoadInst": 183,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 74,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 24,
    "TotalBlocks": 83,
    "TotalInsts": 535,
    "TotalMemInst": 388,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 257
  },
  "baseline_oz_instcount": 535,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--instcombine",
    "--slsr",
    "--early-cse",
    "--reassociate",
    "--lower-expect",
    "--gvn",
    "--loop-simplifycfg",
    "--mem2reg",
    "--aggressive-instcombine",
    "--inline",
    "--flattencfg",
    "--adce",
    "--die",
    "--mergefunc",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--simplifycfg",
    "--sroa",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--consthoist",
          "--sccp",
          "--add-discriminators",
          "--memcpyopt",
          "--mergeicmps",
          "--inline",
          "--aggressive-instcombine",
          "--sancov",
          "--dse",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--consthoist",
      "--sccp",
      "--add-discriminators",
      "--memcpyopt",
      "--mergeicmps",
      "--inline",
      "--aggressive-instcombine",
      "--sancov",
      "--dse",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}