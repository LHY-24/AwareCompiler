{
  "program_id": "github-v0_15447.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 13,
    "CriticalCount": 0,
    "NumEdges": 4,
    "const32Bit": 45,
    "const64Bit": 1,
    "numConstZeroes": 6,
    "numConstOnes": 39,
    "UncondBranches": 2,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 37,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 24,
    "NumBitCastInst": 1,
    "NumBrInst": 3,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 16,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 24,
    "TotalInsts": 148,
    "TotalMemInst": 115,
    "TotalFuncs": 26,
    "ArgsPhi": 0,
    "testUnary": 61
  },
  "baseline_oz_instcount": 148,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--slp-vectorizer",
    "--gvn",
    "--ipsccp",
    "--globaldce",
    "--ipsccp",
    "--gvn-hoist",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--sroa",
    "--dce",
    "--lower-expect",
    "--sccp",
    "--bdce",
    "--elim-avail-extern",
    "--dse",
    "--instcombine",
    "--slp-vectorizer",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--insert-gcov-profiling",
          "--barrier",
          "--lower-constant-intrinsics",
          "--adce",
          "--loop-interchange",
          "--loop-deletion",
          "--mergeicmps",
          "--memcpyopt",
          "--reg2mem",
          "--mldst-motion",
          "--forceattrs",
          "--break-crit-edges",
          "--loop-sink",
          "--loop-data-prefetch",
          "--inject-tli-mappings",
          "--coro-early",
          "--mergefunc",
          "--post-inline-ee-instrument",
          "--coro-cleanup",
          "--lcssa",
          "--rewrite-statepoints-for-gc",
          "--ipconstprop",
          "--separate-const-offset-from-gep"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+31.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--insert-gcov-profiling",
      "--barrier",
      "--lower-constant-intrinsics",
      "--adce",
      "--loop-interchange",
      "--loop-deletion",
      "--mergeicmps",
      "--memcpyopt",
      "--reg2mem",
      "--mldst-motion",
      "--forceattrs",
      "--break-crit-edges",
      "--loop-sink",
      "--loop-data-prefetch",
      "--inject-tli-mappings",
      "--coro-early",
      "--mergefunc",
      "--post-inline-ee-instrument",
      "--coro-cleanup",
      "--lcssa",
      "--rewrite-statepoints-for-gc",
      "--ipconstprop",
      "--separate-const-offset-from-gep"
    ],
    "performance_vs_Oz": "+31.8%"
  }
}