{
  "program_id": "linux-v0_11304.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 7,
    "onePred": 59,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 16,
    "oneSuccessor": 55,
    "twoPred": 32,
    "twoPredOneSuc": 8,
    "twoEach": 17,
    "twoSuccessor": 38,
    "morePreds": 2,
    "BB03Phi": 7,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 7,
    "BranchCount": 93,
    "returnInt": 12,
    "CriticalCount": 17,
    "NumEdges": 131,
    "const32Bit": 377,
    "const64Bit": 27,
    "numConstZeroes": 178,
    "numConstOnes": 108,
    "UncondBranches": 55,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 84,
    "NumAndInst": 2,
    "BlockMid": 18,
    "BlockLow": 83,
    "NumBitCastInst": 16,
    "NumBrInst": 93,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 138,
    "NumICmpInst": 26,
    "NumLShrInst": 4,
    "NumLoadInst": 286,
    "NumMulInst": 5,
    "NumOrInst": 4,
    "NumPHIInst": 7,
    "NumRetInst": 8,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 155,
    "NumSubInst": 0,
    "NumTruncInst": 18,
    "NumXorInst": 1,
    "NumZExtInst": 24,
    "TotalBlocks": 101,
    "TotalInsts": 967,
    "TotalMemInst": 718,
    "TotalFuncs": 10,
    "ArgsPhi": 14,
    "testUnary": 458
  },
  "baseline_oz_instcount": 969,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--prune-eh",
    "--gvn-hoist",
    "--nary-reassociate",
    "--early-cse",
    "--prune-eh",
    "--gvn",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--always-inline",
          "--lower-guard-intrinsic",
          "--redundant-dbg-inst-elim",
          "--speculative-execution",
          "--sroa",
          "--loop-versioning",
          "--instcombine",
          "--infer-address-spaces",
          "--dce",
          "--sink",
          "--memcpyopt",
          "--consthoist",
          "--coro-cleanup",
          "--lower-expect",
          "--libcalls-shrinkwrap"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--always-inline",
      "--lower-guard-intrinsic",
      "--redundant-dbg-inst-elim",
      "--speculative-execution",
      "--sroa",
      "--loop-versioning",
      "--instcombine",
      "--infer-address-spaces",
      "--dce",
      "--sink",
      "--memcpyopt",
      "--consthoist",
      "--coro-cleanup",
      "--lower-expect",
      "--libcalls-shrinkwrap"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}