{
  "program_id": "github-v0_6350.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 2,
    "oneSuccessor": 6,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 1,
    "CriticalCount": 4,
    "NumEdges": 16,
    "const32Bit": 41,
    "const64Bit": 4,
    "numConstZeroes": 27,
    "numConstOnes": 16,
    "UncondBranches": 6,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 18,
    "NumBitCastInst": 2,
    "NumBrInst": 11,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 43,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 19,
    "TotalInsts": 135,
    "TotalMemInst": 101,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 67
  },
  "baseline_oz_instcount": 137,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--globalopt",
    "--jump-threading",
    "--sccp",
    "--lower-expect",
    "--globalopt",
    "--aggressive-instcombine",
    "--reassociate",
    "--sccp",
    "--dce",
    "--mem2reg",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--sccp",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "--nary-reassociate",
          "--tailcallelim",
          "--hotcoldsplit",
          "--globalsplit",
          "--lcssa",
          "--barrier",
          "--loop-predication",
          "--ipconstprop",
          "--bdce",
          "--loop-data-prefetch",
          "--dce",
          "--newgvn",
          "--separate-const-offset-from-gep",
          "--globalopt",
          "--gvn",
          "--aggressive-instcombine",
          "--partial-inliner",
          "--correlated-propagation",
          "--attributor",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "--nary-reassociate",
      "--tailcallelim",
      "--hotcoldsplit",
      "--globalsplit",
      "--lcssa",
      "--barrier",
      "--loop-predication",
      "--ipconstprop",
      "--bdce",
      "--loop-data-prefetch",
      "--dce",
      "--newgvn",
      "--separate-const-offset-from-gep",
      "--globalopt",
      "--gvn",
      "--aggressive-instcombine",
      "--partial-inliner",
      "--correlated-propagation",
      "--attributor",
      "--indvars"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}