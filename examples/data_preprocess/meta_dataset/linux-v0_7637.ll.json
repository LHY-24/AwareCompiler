{
  "program_id": "linux-v0_7637.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 63,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 22,
    "oneSuccessor": 54,
    "twoPred": 20,
    "twoPredOneSuc": 7,
    "twoEach": 5,
    "twoSuccessor": 32,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 111,
    "BeginPhi": 1,
    "BranchCount": 86,
    "returnInt": 27,
    "CriticalCount": 15,
    "NumEdges": 118,
    "const32Bit": 379,
    "const64Bit": 26,
    "numConstZeroes": 180,
    "numConstOnes": 121,
    "UncondBranches": 54,
    "binaryConstArg": 13,
    "NumAShrInst": 4,
    "NumAddInst": 2,
    "NumAllocaInst": 97,
    "NumAndInst": 7,
    "BlockMid": 19,
    "BlockLow": 93,
    "NumBitCastInst": 25,
    "NumBrInst": 86,
    "NumCallInst": 67,
    "NumGetElementPtrInst": 126,
    "NumICmpInst": 33,
    "NumLShrInst": 0,
    "NumLoadInst": 255,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 26,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 144,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 112,
    "TotalInsts": 895,
    "TotalMemInst": 689,
    "TotalFuncs": 49,
    "ArgsPhi": 2,
    "testUnary": 398
  },
  "baseline_oz_instcount": 895,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--loweratomic",
    "--instcombine",
    "--bdce",
    "--gvn-hoist",
    "--instcombine",
    "--early-cse-memssa",
    "--loop-reroll",
    "--instsimplify",
    "--bdce",
    "--die",
    "--mem2reg",
    "--loop-rotate",
    "--sroa",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--dce",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--loop-vectorize",
          "--loop-versioning",
          "--loop-unswitch",
          "--loop-versioning-licm",
          "--ipsccp",
          "--sroa",
          "--die",
          "--post-inline-ee-instrument",
          "--strip-debug-declare",
          "--deadargelim",
          "--loop-rotate",
          "--mergefunc",
          "--reassociate",
          "--div-rem-pairs",
          "--constprop",
          "--aggressive-instcombine",
          "--loop-unroll",
          "--guard-widening",
          "--rpo-functionattrs",
          "--globaldce",
          "--loop-predication",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--loop-vectorize",
      "--loop-versioning",
      "--loop-unswitch",
      "--loop-versioning-licm",
      "--ipsccp",
      "--sroa",
      "--die",
      "--post-inline-ee-instrument",
      "--strip-debug-declare",
      "--deadargelim",
      "--loop-rotate",
      "--mergefunc",
      "--reassociate",
      "--div-rem-pairs",
      "--constprop",
      "--aggressive-instcombine",
      "--loop-unroll",
      "--guard-widening",
      "--rpo-functionattrs",
      "--globaldce",
      "--loop-predication",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}