{
  "program_id": "github-v0_21414.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 7,
    "onePred": 7,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 7,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 7,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 7,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 7,
    "BranchCount": 14,
    "returnInt": 7,
    "CriticalCount": 7,
    "NumEdges": 21,
    "const32Bit": 56,
    "const64Bit": 76,
    "numConstZeroes": 62,
    "numConstOnes": 14,
    "UncondBranches": 7,
    "binaryConstArg": 42,
    "NumAShrInst": 7,
    "NumAddInst": 7,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 14,
    "NumBitCastInst": 61,
    "NumBrInst": 14,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 86,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 0,
    "NumOrInst": 21,
    "NumPHIInst": 7,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 7,
    "NumStoreInst": 35,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 42,
    "TotalBlocks": 21,
    "TotalInsts": 378,
    "TotalMemInst": 198,
    "TotalFuncs": 17,
    "ArgsPhi": 14,
    "testUnary": 152
  },
  "baseline_oz_instcount": 824,
  "knowledge_base_entry": [
    "--loop-predication",
    "--instcombine",
    "--loop-reroll",
    "--sroa",
    "--indvars",
    "--simplifycfg",
    "--correlated-propagation",
    "--bdce",
    "--newgvn",
    "--jump-threading",
    "--loop-reroll",
    "--slp-vectorizer",
    "--lower-expect",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--loop-reroll",
    "--instsimplify",
    "--slp-vectorizer",
    "--sroa",
    "--indvars",
    "--simplifycfg",
    "--loop-reroll",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--infer-address-spaces",
          "--loop-reroll",
          "--partial-inliner",
          "--simple-loop-unswitch",
          "--simplifycfg",
          "--flattencfg",
          "--loop-data-prefetch",
          "--partially-inline-libcalls",
          "--die",
          "--hotcoldsplit",
          "--loop-sink",
          "--instnamer",
          "--jump-threading",
          "--reassociate",
          "--irce",
          "--strip-nondebug",
          "--gvn-hoist",
          "--early-cse",
          "--name-anon-globals",
          "--mergereturn",
          "--early-cse-memssa",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+74.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--infer-address-spaces",
      "--loop-reroll",
      "--partial-inliner",
      "--simple-loop-unswitch",
      "--simplifycfg",
      "--flattencfg",
      "--loop-data-prefetch",
      "--partially-inline-libcalls",
      "--die",
      "--hotcoldsplit",
      "--loop-sink",
      "--instnamer",
      "--jump-threading",
      "--reassociate",
      "--irce",
      "--strip-nondebug",
      "--gvn-hoist",
      "--early-cse",
      "--name-anon-globals",
      "--mergereturn",
      "--early-cse-memssa",
      "--instcombine"
    ],
    "performance_vs_Oz": "+74.5%"
  }
}