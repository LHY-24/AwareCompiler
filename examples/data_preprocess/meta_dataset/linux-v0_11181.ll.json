{
  "program_id": "linux-v0_11181.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 70,
    "onePredOneSuc": 46,
    "onePredTwoSuc": 24,
    "oneSuccessor": 58,
    "twoPred": 16,
    "twoPredOneSuc": 10,
    "twoEach": 2,
    "twoSuccessor": 39,
    "morePreds": 11,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 117,
    "BeginPhi": 2,
    "BranchCount": 97,
    "returnInt": 16,
    "CriticalCount": 24,
    "NumEdges": 136,
    "const32Bit": 280,
    "const64Bit": 33,
    "numConstZeroes": 130,
    "numConstOnes": 123,
    "UncondBranches": 58,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 78,
    "NumAndInst": 13,
    "BlockMid": 8,
    "BlockLow": 111,
    "NumBitCastInst": 14,
    "NumBrInst": 97,
    "NumCallInst": 53,
    "NumGetElementPtrInst": 80,
    "NumICmpInst": 44,
    "NumLShrInst": 0,
    "NumLoadInst": 193,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 22,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 90,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 15,
    "NumZExtInst": 21,
    "TotalBlocks": 119,
    "TotalInsts": 734,
    "TotalMemInst": 494,
    "TotalFuncs": 42,
    "ArgsPhi": 4,
    "testUnary": 316
  },
  "baseline_oz_instcount": 735,
  "knowledge_base_entry": [
    "--float2int",
    "--newgvn",
    "--flattencfg",
    "--inline",
    "--globalopt",
    "--globaldce",
    "--aggressive-instcombine",
    "--bdce",
    "--newgvn",
    "--memcpyopt",
    "--newgvn",
    "--dce",
    "--die",
    "--mem2reg",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--dse",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--globalopt",
          "--loop-rotate",
          "--infer-address-spaces",
          "--loop-sink",
          "--aggressive-instcombine",
          "--sccp",
          "--licm",
          "--loop-reroll",
          "--loweratomic",
          "--inferattrs",
          "--loop-unroll",
          "--float2int",
          "--simplifycfg",
          "--constprop",
          "--sink",
          "--nary-reassociate",
          "--inline",
          "--mergereturn",
          "--consthoist",
          "--post-inline-ee-instrument",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--globalopt",
      "--loop-rotate",
      "--infer-address-spaces",
      "--loop-sink",
      "--aggressive-instcombine",
      "--sccp",
      "--licm",
      "--loop-reroll",
      "--loweratomic",
      "--inferattrs",
      "--loop-unroll",
      "--float2int",
      "--simplifycfg",
      "--constprop",
      "--sink",
      "--nary-reassociate",
      "--inline",
      "--mergereturn",
      "--consthoist",
      "--post-inline-ee-instrument",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}