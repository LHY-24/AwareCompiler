{
  "program_id": "linux-v0_246.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 29,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 7,
    "oneSuccessor": 25,
    "twoPred": 11,
    "twoPredOneSuc": 2,
    "twoEach": 9,
    "twoSuccessor": 18,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 3,
    "BranchCount": 43,
    "returnInt": 6,
    "CriticalCount": 7,
    "NumEdges": 61,
    "const32Bit": 120,
    "const64Bit": 14,
    "numConstZeroes": 57,
    "numConstOnes": 45,
    "UncondBranches": 25,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 41,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 43,
    "NumBitCastInst": 11,
    "NumBrInst": 43,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 112,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 8,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 62,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 51,
    "TotalInsts": 390,
    "TotalMemInst": 277,
    "TotalFuncs": 26,
    "ArgsPhi": 6,
    "testUnary": 180
  },
  "baseline_oz_instcount": 391,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--mldst-motion",
          "--sink",
          "--globalsplit",
          "--memcpyopt",
          "--die",
          "--reassociate",
          "--constprop",
          "--coro-early",
          "--lowerinvoke",
          "--mem2reg",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--mldst-motion",
      "--sink",
      "--globalsplit",
      "--memcpyopt",
      "--die",
      "--reassociate",
      "--constprop",
      "--coro-early",
      "--lowerinvoke",
      "--mem2reg",
      "--inline"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}