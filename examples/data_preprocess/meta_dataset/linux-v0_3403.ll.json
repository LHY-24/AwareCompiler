{
  "program_id": "linux-v0_3403.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 7,
    "oneSuccessor": 23,
    "twoPred": 4,
    "twoPredOneSuc": 4,
    "twoEach": 0,
    "twoSuccessor": 9,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 0,
    "BranchCount": 31,
    "returnInt": 5,
    "CriticalCount": 6,
    "NumEdges": 49,
    "const32Bit": 111,
    "const64Bit": 7,
    "numConstZeroes": 38,
    "numConstOnes": 44,
    "UncondBranches": 23,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 37,
    "NumAndInst": 3,
    "BlockMid": 3,
    "BlockLow": 42,
    "NumBitCastInst": 10,
    "NumBrInst": 31,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 10,
    "NumLShrInst": 1,
    "NumLoadInst": 65,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 54,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 45,
    "TotalInsts": 284,
    "TotalMemInst": 202,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 123
  },
  "baseline_oz_instcount": 285,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--jump-threading",
    "--bdce",
    "--lower-expect",
    "--instsimplify",
    "--adce",
    "--slp-vectorizer",
    "--mldst-motion",
    "--early-cse-memssa",
    "-loop-reduce",
    "--slsr",
    "--gvn",
    "--ipsccp",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--lowerinvoke",
          "--correlated-propagation",
          "--coro-cleanup",
          "--lower-constant-intrinsics",
          "--loop-reroll",
          "--slp-vectorizer",
          "--deadargelim",
          "--lcssa",
          "--hotcoldsplit",
          "--adce",
          "--always-inline",
          "--globaldce",
          "--slsr",
          "--instcombine",
          "--callsite-splitting",
          "--dse",
          "--simplifycfg",
          "--loop-guard-widening",
          "--jump-threading",
          "--loweratomic",
          "--mergefunc",
          "--functionattrs",
          "-loop-reduce",
          "--inject-tli-mappings",
          "--pgo-memop-opt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--lowerinvoke",
      "--correlated-propagation",
      "--coro-cleanup",
      "--lower-constant-intrinsics",
      "--loop-reroll",
      "--slp-vectorizer",
      "--deadargelim",
      "--lcssa",
      "--hotcoldsplit",
      "--adce",
      "--always-inline",
      "--globaldce",
      "--slsr",
      "--instcombine",
      "--callsite-splitting",
      "--dse",
      "--simplifycfg",
      "--loop-guard-widening",
      "--jump-threading",
      "--loweratomic",
      "--mergefunc",
      "--functionattrs",
      "-loop-reduce",
      "--inject-tli-mappings",
      "--pgo-memop-opt"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}