{
  "program_id": "linux-v0_3819.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 64,
    "onePredOneSuc": 56,
    "onePredTwoSuc": 4,
    "oneSuccessor": 64,
    "twoPred": 17,
    "twoPredOneSuc": 4,
    "twoEach": 8,
    "twoSuccessor": 17,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 97,
    "BeginPhi": 3,
    "BranchCount": 81,
    "returnInt": 10,
    "CriticalCount": 7,
    "NumEdges": 103,
    "const32Bit": 173,
    "const64Bit": 15,
    "numConstZeroes": 69,
    "numConstOnes": 94,
    "UncondBranches": 64,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 73,
    "NumAndInst": 1,
    "BlockMid": 10,
    "BlockLow": 90,
    "NumBitCastInst": 25,
    "NumBrInst": 81,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 137,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 18,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 87,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 14,
    "NumZExtInst": 8,
    "TotalBlocks": 100,
    "TotalInsts": 561,
    "TotalMemInst": 371,
    "TotalFuncs": 29,
    "ArgsPhi": 6,
    "testUnary": 255
  },
  "baseline_oz_instcount": 561,
  "knowledge_base_entry": [
    "--loop-versioning-licm",
    "--instcombine",
    "--prune-eh",
    "--gvn",
    "--mergefunc",
    "--reassociate",
    "--slsr",
    "--simplifycfg",
    "--loop-rotate",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--separate-const-offset-from-gep",
          "-loop-reduce",
          "--licm",
          "--globalsplit",
          "--mergefunc",
          "--hotcoldsplit",
          "--loop-idiom",
          "--jump-threading",
          "--add-discriminators",
          "--sroa",
          "--loop-versioning-licm",
          "--loop-versioning",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--separate-const-offset-from-gep",
      "-loop-reduce",
      "--licm",
      "--globalsplit",
      "--mergefunc",
      "--hotcoldsplit",
      "--loop-idiom",
      "--jump-threading",
      "--add-discriminators",
      "--sroa",
      "--loop-versioning-licm",
      "--loop-versioning",
      "--dse"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}