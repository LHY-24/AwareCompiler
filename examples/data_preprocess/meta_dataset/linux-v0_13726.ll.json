{
  "program_id": "linux-v0_13726.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 78,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 17,
    "oneSuccessor": 76,
    "twoPred": 15,
    "twoPredOneSuc": 13,
    "twoEach": 1,
    "twoSuccessor": 18,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 103,
    "BeginPhi": 0,
    "BranchCount": 94,
    "returnInt": 7,
    "CriticalCount": 15,
    "NumEdges": 112,
    "const32Bit": 143,
    "const64Bit": 17,
    "numConstZeroes": 62,
    "numConstOnes": 63,
    "UncondBranches": 76,
    "binaryConstArg": 44,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 26,
    "NumAndInst": 16,
    "BlockMid": 3,
    "BlockLow": 100,
    "NumBitCastInst": 7,
    "NumBrInst": 94,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 25,
    "NumLShrInst": 7,
    "NumLoadInst": 92,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 20,
    "NumZExtInst": 12,
    "TotalBlocks": 103,
    "TotalInsts": 423,
    "TotalMemInst": 223,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 146
  },
  "baseline_oz_instcount": 417,
  "knowledge_base_entry": [
    "--newgvn",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--adce",
    "--mem2reg",
    "--loop-rotate",
    "--newgvn",
    "--nary-reassociate",
    "--jump-threading",
    "--gvn",
    "--flattencfg",
    "--newgvn",
    "--simplifycfg",
    "--gvn-hoist",
    "--simplifycfg",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--flattencfg",
    "--ipsccp",
    "--ipsccp",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--jump-threading",
    "--prune-eh",
    "--jump-threading",
    "--aggressive-instcombine",
    "--globalopt",
    "--early-cse-memssa",
    "--memcpyopt",
    "--gvn-hoist",
    "--inline",
    "--ipsccp",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--licm",
          "--loop-distribute",
          "--loop-idiom",
          "--globalopt",
          "--coro-early",
          "--sroa",
          "--loop-data-prefetch",
          "--loop-versioning",
          "--simplifycfg",
          "--instnamer",
          "--mldst-motion",
          "--loop-versioning-licm",
          "--ipsccp",
          "--loop-unroll",
          "--mergereturn",
          "--post-inline-ee-instrument",
          "--functionattrs",
          "--called-value-propagation",
          "--always-inline",
          "--lower-constant-intrinsics",
          "--reassociate",
          "--correlated-propagation",
          "--name-anon-globals",
          "--scalarizer",
          "--partial-inliner",
          "--rewrite-statepoints-for-gc",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--licm",
      "--loop-distribute",
      "--loop-idiom",
      "--globalopt",
      "--coro-early",
      "--sroa",
      "--loop-data-prefetch",
      "--loop-versioning",
      "--simplifycfg",
      "--instnamer",
      "--mldst-motion",
      "--loop-versioning-licm",
      "--ipsccp",
      "--loop-unroll",
      "--mergereturn",
      "--post-inline-ee-instrument",
      "--functionattrs",
      "--called-value-propagation",
      "--always-inline",
      "--lower-constant-intrinsics",
      "--reassociate",
      "--correlated-propagation",
      "--name-anon-globals",
      "--scalarizer",
      "--partial-inliner",
      "--rewrite-statepoints-for-gc",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+3.4%"
  }
}