{
  "program_id": "github-v0_19584.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 2,
    "oneSuccessor": 7,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 0,
    "CriticalCount": 6,
    "NumEdges": 19,
    "const32Bit": 39,
    "const64Bit": 1,
    "numConstZeroes": 13,
    "numConstOnes": 14,
    "UncondBranches": 7,
    "binaryConstArg": 12,
    "NumAShrInst": 1,
    "NumAddInst": 8,
    "NumAllocaInst": 8,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 13,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 14,
    "TotalInsts": 112,
    "TotalMemInst": 60,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 55
  },
  "baseline_oz_instcount": 113,
  "knowledge_base_entry": [
    "--flattencfg",
    "--early-cse-memssa",
    "--sroa",
    "--flattencfg",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--globaldce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--loop-guard-widening",
          "--argpromotion",
          "--early-cse",
          "--early-cse-memssa",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--loop-reroll",
          "--prune-eh",
          "--indvars",
          "--constmerge",
          "--attributor",
          "--partially-inline-libcalls",
          "--instcombine",
          "--correlated-propagation",
          "--sroa",
          "--loop-predication",
          "--globalsplit",
          "--instnamer",
          "--strip-nondebug",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--loop-guard-widening",
      "--argpromotion",
      "--early-cse",
      "--early-cse-memssa",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--loop-reroll",
      "--prune-eh",
      "--indvars",
      "--constmerge",
      "--attributor",
      "--partially-inline-libcalls",
      "--instcombine",
      "--correlated-propagation",
      "--sroa",
      "--loop-predication",
      "--globalsplit",
      "--instnamer",
      "--strip-nondebug",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+5.3%"
  }
}