{
  "program_id": "tensorflow-v0_614.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 8,
    "onePred": 93,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 43,
    "oneSuccessor": 49,
    "twoPred": 32,
    "twoPredOneSuc": 9,
    "twoEach": 16,
    "twoSuccessor": 73,
    "morePreds": 12,
    "BB03Phi": 11,
    "BBHiPhi": 0,
    "BBNoPhi": 150,
    "BeginPhi": 11,
    "BranchCount": 93,
    "returnInt": 0,
    "CriticalCount": 53,
    "NumEdges": 195,
    "const32Bit": 223,
    "const64Bit": 174,
    "numConstZeroes": 254,
    "numConstOnes": 67,
    "UncondBranches": 49,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 9,
    "NumAndInst": 15,
    "BlockMid": 5,
    "BlockLow": 156,
    "NumBitCastInst": 84,
    "NumBrInst": 93,
    "NumCallInst": 94,
    "NumGetElementPtrInst": 125,
    "NumICmpInst": 50,
    "NumLShrInst": 1,
    "NumLoadInst": 116,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 18,
    "NumRetInst": 23,
    "NumSExtInst": 1,
    "NumSelectInst": 7,
    "NumShlInst": 1,
    "NumStoreInst": 34,
    "NumSubInst": 6,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 161,
    "TotalInsts": 784,
    "TotalMemInst": 407,
    "TotalFuncs": 55,
    "ArgsPhi": 41,
    "testUnary": 242
  },
  "baseline_oz_instcount": 780,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--jump-threading",
    "--instcombine",
    "--dce",
    "--mem2reg",
    "--flattencfg",
    "--early-cse",
    "--sroa",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--inline",
    "--instcombine",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--jump-threading",
    "--load-store-vectorizer",
    "--die",
    "--load-store-vectorizer",
    "--instcombine",
    "--elim-avail-extern",
    "--licm",
    "--newgvn",
    "--gvn-hoist",
    "--loop-rotate",
    "--mem2reg",
    "--loop-simplifycfg",
    "--newgvn",
    "--simplifycfg",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--loop-data-prefetch",
          "--loop-reroll",
          "--lower-expect",
          "--dce",
          "--float2int",
          "--irce",
          "--loop-versioning",
          "--cross-dso-cfi",
          "--nary-reassociate",
          "--aggressive-instcombine",
          "--coro-cleanup",
          "--lowerinvoke",
          "--guard-widening",
          "--simplifycfg",
          "--constprop",
          "--consthoist",
          "--correlated-propagation",
          "--add-discriminators",
          "--loop-idiom",
          "--memcpyopt",
          "--called-value-propagation",
          "--loop-guard-widening",
          "--always-inline",
          "--lcssa",
          "--globalopt",
          "--loop-distribute",
          "--jump-threading"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+31.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--loop-data-prefetch",
      "--loop-reroll",
      "--lower-expect",
      "--dce",
      "--float2int",
      "--irce",
      "--loop-versioning",
      "--cross-dso-cfi",
      "--nary-reassociate",
      "--aggressive-instcombine",
      "--coro-cleanup",
      "--lowerinvoke",
      "--guard-widening",
      "--simplifycfg",
      "--constprop",
      "--consthoist",
      "--correlated-propagation",
      "--add-discriminators",
      "--loop-idiom",
      "--memcpyopt",
      "--called-value-propagation",
      "--loop-guard-widening",
      "--always-inline",
      "--lcssa",
      "--globalopt",
      "--loop-distribute",
      "--jump-threading"
    ],
    "performance_vs_Oz": "+31.8%"
  }
}