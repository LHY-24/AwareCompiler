{
  "program_id": "github-v0_36399.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 6,
    "oneSuccessor": 32,
    "twoPred": 17,
    "twoPredOneSuc": 6,
    "twoEach": 3,
    "twoSuccessor": 17,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 62,
    "BeginPhi": 0,
    "BranchCount": 49,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 66,
    "const32Bit": 181,
    "const64Bit": 10,
    "numConstZeroes": 77,
    "numConstOnes": 46,
    "UncondBranches": 32,
    "binaryConstArg": 28,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 31,
    "NumAndInst": 18,
    "BlockMid": 6,
    "BlockLow": 56,
    "NumBitCastInst": 0,
    "NumBrInst": 49,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 51,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 114,
    "NumMulInst": 0,
    "NumOrInst": 13,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 76,
    "NumSubInst": 0,
    "NumTruncInst": 30,
    "NumXorInst": 1,
    "NumZExtInst": 48,
    "TotalBlocks": 62,
    "TotalInsts": 472,
    "TotalMemInst": 276,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 226
  },
  "baseline_oz_instcount": 472,
  "knowledge_base_entry": [
    "--loop-unroll",
    "--gvn-hoist",
    "--instsimplify",
    "--slp-vectorizer",
    "--jump-threading",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--adce",
    "--gvn",
    "--elim-avail-extern",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--pgo-memop-opt",
          "--div-rem-pairs",
          "--instnamer",
          "--ipconstprop",
          "--loop-sink",
          "--callsite-splitting",
          "--redundant-dbg-inst-elim",
          "--tailcallelim",
          "--deadargelim",
          "--simple-loop-unswitch",
          "--loop-fusion",
          "--coro-split",
          "--loop-distribute",
          "--aggressive-instcombine",
          "--strip-debug-declare",
          "--libcalls-shrinkwrap",
          "--alignment-from-assumptions",
          "--adce",
          "--canonicalize-aliases",
          "--mergefunc",
          "--loop-data-prefetch",
          "--constprop",
          "--coro-elide",
          "--loop-versioning-licm",
          "--inject-tli-mappings",
          "--lower-matrix-intrinsics",
          "--constmerge",
          "--loop-idiom",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+12.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--pgo-memop-opt",
      "--div-rem-pairs",
      "--instnamer",
      "--ipconstprop",
      "--loop-sink",
      "--callsite-splitting",
      "--redundant-dbg-inst-elim",
      "--tailcallelim",
      "--deadargelim",
      "--simple-loop-unswitch",
      "--loop-fusion",
      "--coro-split",
      "--loop-distribute",
      "--aggressive-instcombine",
      "--strip-debug-declare",
      "--libcalls-shrinkwrap",
      "--alignment-from-assumptions",
      "--adce",
      "--canonicalize-aliases",
      "--mergefunc",
      "--loop-data-prefetch",
      "--constprop",
      "--coro-elide",
      "--loop-versioning-licm",
      "--inject-tli-mappings",
      "--lower-matrix-intrinsics",
      "--constmerge",
      "--loop-idiom",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+12.1%"
  }
}