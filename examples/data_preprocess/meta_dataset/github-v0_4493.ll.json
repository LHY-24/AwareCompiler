{
  "program_id": "github-v0_4493.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 16,
    "CriticalCount": 0,
    "NumEdges": 3,
    "const32Bit": 64,
    "const64Bit": 0,
    "numConstZeroes": 7,
    "numConstOnes": 48,
    "UncondBranches": 3,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 33,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 22,
    "NumBitCastInst": 0,
    "NumBrInst": 3,
    "NumCallInst": 58,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 22,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 41,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 24,
    "TotalInsts": 194,
    "TotalMemInst": 154,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 62
  },
  "baseline_oz_instcount": 194,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--jump-threading",
    "--flattencfg",
    "--load-store-vectorizer",
    "--mergefunc",
    "--die",
    "--simplifycfg",
    "--nary-reassociate",
    "--slsr",
    "--instcombine",
    "--sccp",
    "--loop-instsimplify",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slp-vectorizer",
          "--hotcoldsplit",
          "--sancov",
          "--redundant-dbg-inst-elim",
          "--bdce",
          "--guard-widening",
          "--ipconstprop",
          "--lowerswitch",
          "--ipsccp",
          "--prune-eh",
          "-loop-reduce",
          "--loop-instsimplify",
          "--loop-unroll",
          "--break-crit-edges",
          "--loop-interchange",
          "--loweratomic",
          "--lcssa",
          "--globalopt",
          "--mergefunc",
          "--reg2mem",
          "--name-anon-globals",
          "--globaldce",
          "--nary-reassociate",
          "--loop-guard-widening",
          "--loop-unroll-and-jam",
          "--loop-fusion",
          "--early-cse",
          "--libcalls-shrinkwrap",
          "--post-inline-ee-instrument",
          "--loop-vectorize"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+24.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slp-vectorizer",
      "--hotcoldsplit",
      "--sancov",
      "--redundant-dbg-inst-elim",
      "--bdce",
      "--guard-widening",
      "--ipconstprop",
      "--lowerswitch",
      "--ipsccp",
      "--prune-eh",
      "-loop-reduce",
      "--loop-instsimplify",
      "--loop-unroll",
      "--break-crit-edges",
      "--loop-interchange",
      "--loweratomic",
      "--lcssa",
      "--globalopt",
      "--mergefunc",
      "--reg2mem",
      "--name-anon-globals",
      "--globaldce",
      "--nary-reassociate",
      "--loop-guard-widening",
      "--loop-unroll-and-jam",
      "--loop-fusion",
      "--early-cse",
      "--libcalls-shrinkwrap",
      "--post-inline-ee-instrument",
      "--loop-vectorize"
    ],
    "performance_vs_Oz": "+24.2%"
  }
}