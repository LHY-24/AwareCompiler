{
  "program_id": "linux-v0_6452.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 3,
    "oneSuccessor": 37,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 67,
    "BeginPhi": 0,
    "BranchCount": 45,
    "returnInt": 10,
    "CriticalCount": 7,
    "NumEdges": 78,
    "const32Bit": 157,
    "const64Bit": 5,
    "numConstZeroes": 47,
    "numConstOnes": 41,
    "UncondBranches": 37,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 35,
    "NumAndInst": 5,
    "BlockMid": 3,
    "BlockLow": 64,
    "NumBitCastInst": 3,
    "NumBrInst": 45,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 91,
    "NumMulInst": 0,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 59,
    "NumSubInst": 2,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 67,
    "TotalInsts": 371,
    "TotalMemInst": 246,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 155
  },
  "baseline_oz_instcount": 371,
  "knowledge_base_entry": [
    "--globalopt",
    "--loop-simplifycfg",
    "--flattencfg",
    "--sroa",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--inline",
    "--ipsccp",
    "--flattencfg",
    "--early-cse",
    "--gvn-hoist",
    "-loop-reduce",
    "--indvars",
    "--instcombine",
    "--slsr",
    "--slp-vectorizer",
    "--licm",
    "--lower-constant-intrinsics",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--strip",
          "--lcssa",
          "--aggressive-instcombine",
          "--slp-vectorizer",
          "-loop-reduce",
          "--loop-deletion",
          "--canonicalize-aliases",
          "--globalsplit",
          "--libcalls-shrinkwrap",
          "--rewrite-statepoints-for-gc",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--strip",
      "--lcssa",
      "--aggressive-instcombine",
      "--slp-vectorizer",
      "-loop-reduce",
      "--loop-deletion",
      "--canonicalize-aliases",
      "--globalsplit",
      "--libcalls-shrinkwrap",
      "--rewrite-statepoints-for-gc",
      "--always-inline"
    ],
    "performance_vs_Oz": "+4.9%"
  }
}