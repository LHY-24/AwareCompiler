{
  "program_id": "github-v0_14159.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 5,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 128,
    "const64Bit": 14,
    "numConstZeroes": 60,
    "numConstOnes": 73,
    "UncondBranches": 11,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 54,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 25,
    "NumBitCastInst": 4,
    "NumBrInst": 17,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 42,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 94,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 63,
    "NumSubInst": 4,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 30,
    "TotalInsts": 370,
    "TotalMemInst": 270,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 192
  },
  "baseline_oz_instcount": 370,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--reassociate",
    "--jump-threading",
    "--aggressive-instcombine",
    "--ipsccp",
    "--ipsccp",
    "--instcombine",
    "--loop-simplifycfg",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--tailcallelim",
          "--sink",
          "--memcpyopt",
          "--insert-gcov-profiling",
          "--dse",
          "--sccp",
          "--canonicalize-aliases",
          "--rewrite-statepoints-for-gc",
          "--strip-dead-prototypes",
          "--name-anon-globals",
          "--deadargelim",
          "--functionattrs",
          "--loop-sink",
          "--dce",
          "--post-inline-ee-instrument",
          "--globalopt",
          "--coro-cleanup",
          "--loop-data-prefetch",
          "--loop-guard-widening",
          "--hotcoldsplit",
          "--simplifycfg",
          "--load-store-vectorizer",
          "--aggressive-instcombine",
          "--inject-tli-mappings",
          "--alignment-from-assumptions",
          "--lowerswitch",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--tailcallelim",
      "--sink",
      "--memcpyopt",
      "--insert-gcov-profiling",
      "--dse",
      "--sccp",
      "--canonicalize-aliases",
      "--rewrite-statepoints-for-gc",
      "--strip-dead-prototypes",
      "--name-anon-globals",
      "--deadargelim",
      "--functionattrs",
      "--loop-sink",
      "--dce",
      "--post-inline-ee-instrument",
      "--globalopt",
      "--coro-cleanup",
      "--loop-data-prefetch",
      "--loop-guard-widening",
      "--hotcoldsplit",
      "--simplifycfg",
      "--load-store-vectorizer",
      "--aggressive-instcombine",
      "--inject-tli-mappings",
      "--alignment-from-assumptions",
      "--lowerswitch",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}