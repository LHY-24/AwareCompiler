{
  "program_id": "linux-v0_9456.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 42,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 6,
    "oneSuccessor": 43,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 1,
    "twoSuccessor": 10,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 84,
    "BeginPhi": 0,
    "BranchCount": 53,
    "returnInt": 23,
    "CriticalCount": 4,
    "NumEdges": 87,
    "const32Bit": 192,
    "const64Bit": 11,
    "numConstZeroes": 56,
    "numConstOnes": 79,
    "UncondBranches": 43,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 63,
    "NumAndInst": 5,
    "BlockMid": 6,
    "BlockLow": 78,
    "NumBitCastInst": 7,
    "NumBrInst": 53,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 11,
    "NumLShrInst": 2,
    "NumLoadInst": 118,
    "NumMulInst": 2,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 90,
    "NumSubInst": 2,
    "NumTruncInst": 12,
    "NumXorInst": 2,
    "NumZExtInst": 14,
    "TotalBlocks": 84,
    "TotalInsts": 501,
    "TotalMemInst": 337,
    "TotalFuncs": 41,
    "ArgsPhi": 0,
    "testUnary": 224
  },
  "baseline_oz_instcount": 501,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--instcombine",
    "--bdce",
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--instcombine",
    "-loop-reduce",
    "--indvars",
    "--sroa",
    "--globalopt",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--sccp",
    "--instcombine",
    "--mem2reg",
    "--mldst-motion",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergeicmps",
          "--functionattrs",
          "--constprop",
          "--rewrite-statepoints-for-gc",
          "--coro-split",
          "--instcombine",
          "--load-store-vectorizer",
          "--strip-nondebug",
          "--reassociate",
          "--nary-reassociate",
          "--loop-versioning-licm",
          "--lower-expect",
          "--die",
          "--loop-unroll-and-jam",
          "--attributor",
          "--gvn-hoist",
          "--insert-gcov-profiling",
          "--add-discriminators",
          "--sink",
          "--speculative-execution",
          "--loop-versioning",
          "--loop-vectorize",
          "--aggressive-instcombine",
          "--loop-guard-widening",
          "--ee-instrument",
          "--redundant-dbg-inst-elim",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergeicmps",
      "--functionattrs",
      "--constprop",
      "--rewrite-statepoints-for-gc",
      "--coro-split",
      "--instcombine",
      "--load-store-vectorizer",
      "--strip-nondebug",
      "--reassociate",
      "--nary-reassociate",
      "--loop-versioning-licm",
      "--lower-expect",
      "--die",
      "--loop-unroll-and-jam",
      "--attributor",
      "--gvn-hoist",
      "--insert-gcov-profiling",
      "--add-discriminators",
      "--sink",
      "--speculative-execution",
      "--loop-versioning",
      "--loop-vectorize",
      "--aggressive-instcombine",
      "--loop-guard-widening",
      "--ee-instrument",
      "--redundant-dbg-inst-elim",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+2.4%"
  }
}