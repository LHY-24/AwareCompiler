{
  "program_id": "github-v0_40120.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 5,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 6,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 22,
    "const64Bit": 3,
    "numConstZeroes": 12,
    "numConstOnes": 10,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 4,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 7,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 5,
    "TotalInsts": 31,
    "TotalMemInst": 26,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 10
  },
  "baseline_oz_instcount": 31,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--mem2reg",
    "--nary-reassociate",
    "--loop-fusion",
    "--loop-reroll",
    "--slp-vectorizer",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--flattencfg",
          "--loop-unroll-and-jam",
          "--inject-tli-mappings",
          "--scalarizer",
          "--tailcallelim",
          "--aggressive-instcombine",
          "--globaldce",
          "--sancov",
          "--reg2mem",
          "--loop-instsimplify",
          "--coro-elide",
          "--lowerswitch",
          "--indvars",
          "--mergefunc",
          "--partially-inline-libcalls",
          "--partial-inliner",
          "--irce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--flattencfg",
      "--loop-unroll-and-jam",
      "--inject-tli-mappings",
      "--scalarizer",
      "--tailcallelim",
      "--aggressive-instcombine",
      "--globaldce",
      "--sancov",
      "--reg2mem",
      "--loop-instsimplify",
      "--coro-elide",
      "--lowerswitch",
      "--indvars",
      "--mergefunc",
      "--partially-inline-libcalls",
      "--partial-inliner",
      "--irce"
    ],
    "performance_vs_Oz": "+6.5%"
  }
}