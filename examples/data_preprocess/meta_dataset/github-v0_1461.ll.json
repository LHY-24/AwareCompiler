{
  "program_id": "github-v0_1461.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 4,
    "oneSuccessor": 19,
    "twoPred": 6,
    "twoPredOneSuc": 4,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 18,
    "CriticalCount": 2,
    "NumEdges": 36,
    "const32Bit": 56,
    "const64Bit": 1,
    "numConstZeroes": 20,
    "numConstOnes": 20,
    "UncondBranches": 19,
    "binaryConstArg": 10,
    "NumAShrInst": 2,
    "NumAddInst": 6,
    "NumAllocaInst": 13,
    "NumAndInst": 1,
    "BlockMid": 4,
    "BlockLow": 23,
    "NumBitCastInst": 4,
    "NumBrInst": 24,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 69,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 30,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 15,
    "TotalBlocks": 27,
    "TotalInsts": 224,
    "TotalMemInst": 153,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 110
  },
  "baseline_oz_instcount": 224,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--instcombine",
    "--die",
    "--aggressive-instcombine",
    "--newgvn",
    "--adce",
    "--slp-vectorizer",
    "-loop-reduce",
    "--indvars",
    "--sroa",
    "--adce",
    "--sroa",
    "--dse",
    "--globalopt",
    "--inline",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalsplit",
          "--functionattrs",
          "--loop-distribute",
          "--adce",
          "--rewrite-statepoints-for-gc",
          "--mergeicmps",
          "--instcombine",
          "--strip-debug-declare",
          "--loop-simplify",
          "--sroa",
          "--aggressive-instcombine",
          "--loop-deletion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalsplit",
      "--functionattrs",
      "--loop-distribute",
      "--adce",
      "--rewrite-statepoints-for-gc",
      "--mergeicmps",
      "--instcombine",
      "--strip-debug-declare",
      "--loop-simplify",
      "--sroa",
      "--aggressive-instcombine",
      "--loop-deletion"
    ],
    "performance_vs_Oz": "+5.4%"
  }
}