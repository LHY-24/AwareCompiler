{
  "program_id": "linux-v0_13586.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 34,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 11,
    "oneSuccessor": 30,
    "twoPred": 10,
    "twoPredOneSuc": 6,
    "twoEach": 3,
    "twoSuccessor": 18,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 68,
    "BeginPhi": 0,
    "BranchCount": 48,
    "returnInt": 9,
    "CriticalCount": 8,
    "NumEdges": 70,
    "const32Bit": 149,
    "const64Bit": 7,
    "numConstZeroes": 57,
    "numConstOnes": 68,
    "UncondBranches": 30,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 53,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 63,
    "NumBitCastInst": 10,
    "NumBrInst": 48,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 112,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 88,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 4,
    "NumZExtInst": 3,
    "TotalBlocks": 68,
    "TotalInsts": 438,
    "TotalMemInst": 318,
    "TotalFuncs": 34,
    "ArgsPhi": 0,
    "testUnary": 189
  },
  "baseline_oz_instcount": 433,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "-loop-reduce",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--die",
    "--licm",
    "--ipsccp",
    "--loweratomic",
    "--globalopt",
    "--inline",
    "--memcpyopt",
    "--sroa",
    "--sccp",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--sroa",
    "--loop-simplifycfg",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--div-rem-pairs",
          "--callsite-splitting",
          "--lower-guard-intrinsic",
          "--consthoist",
          "--partial-inliner",
          "--load-store-vectorizer",
          "--lcssa",
          "--mergefunc",
          "--coro-split",
          "--die",
          "--mergeicmps"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--div-rem-pairs",
      "--callsite-splitting",
      "--lower-guard-intrinsic",
      "--consthoist",
      "--partial-inliner",
      "--load-store-vectorizer",
      "--lcssa",
      "--mergefunc",
      "--coro-split",
      "--die",
      "--mergeicmps"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}