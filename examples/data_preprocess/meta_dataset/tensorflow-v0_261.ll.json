{
  "program_id": "tensorflow-v0_261.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 8,
    "oneSuccessor": 8,
    "twoPred": 8,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 16,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 40,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 0,
    "CriticalCount": 8,
    "NumEdges": 40,
    "const32Bit": 45,
    "const64Bit": 55,
    "numConstZeroes": 60,
    "numConstOnes": 16,
    "UncondBranches": 8,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 7,
    "NumAndInst": 3,
    "BlockMid": 0,
    "BlockLow": 40,
    "NumBitCastInst": 8,
    "NumBrInst": 17,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 10,
    "NumLShrInst": 1,
    "NumLoadInst": 11,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 40,
    "TotalInsts": 180,
    "TotalMemInst": 117,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 27
  },
  "baseline_oz_instcount": 180,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--mem2reg",
    "--instcombine",
    "--simplifycfg",
    "--gvn",
    "--instcombine",
    "--slsr",
    "--nary-reassociate",
    "-loop-reduce",
    "--simplifycfg",
    "--early-cse-memssa",
    "--loop-rotate",
    "--dse",
    "--mergefunc",
    "--load-store-vectorizer",
    "--jump-threading",
    "--lower-expect",
    "--sccp",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "-loop-reduce",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--instsimplify",
          "--separate-const-offset-from-gep",
          "--licm",
          "--loop-unroll",
          "--loweratomic",
          "--lower-guard-intrinsic",
          "--loop-data-prefetch",
          "--partially-inline-libcalls",
          "--slp-vectorizer",
          "--scalarizer",
          "--strip",
          "--div-rem-pairs",
          "--adce",
          "--globalsplit",
          "--lowerinvoke",
          "--load-store-vectorizer",
          "--coro-early",
          "--simplifycfg",
          "--strip-dead-prototypes",
          "--coro-cleanup",
          "--indvars",
          "--partial-inliner",
          "--callsite-splitting",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+22.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--instsimplify",
      "--separate-const-offset-from-gep",
      "--licm",
      "--loop-unroll",
      "--loweratomic",
      "--lower-guard-intrinsic",
      "--loop-data-prefetch",
      "--partially-inline-libcalls",
      "--slp-vectorizer",
      "--scalarizer",
      "--strip",
      "--div-rem-pairs",
      "--adce",
      "--globalsplit",
      "--lowerinvoke",
      "--load-store-vectorizer",
      "--coro-early",
      "--simplifycfg",
      "--strip-dead-prototypes",
      "--coro-cleanup",
      "--indvars",
      "--partial-inliner",
      "--callsite-splitting",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+22.2%"
  }
}