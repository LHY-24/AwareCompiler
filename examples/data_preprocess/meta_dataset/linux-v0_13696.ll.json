{
  "program_id": "linux-v0_13696.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 62,
    "onePredOneSuc": 53,
    "onePredTwoSuc": 7,
    "oneSuccessor": 60,
    "twoPred": 13,
    "twoPredOneSuc": 6,
    "twoEach": 2,
    "twoSuccessor": 17,
    "morePreds": 8,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 87,
    "BeginPhi": 2,
    "BranchCount": 77,
    "returnInt": 7,
    "CriticalCount": 9,
    "NumEdges": 124,
    "const32Bit": 197,
    "const64Bit": 10,
    "numConstZeroes": 81,
    "numConstOnes": 99,
    "UncondBranches": 60,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 73,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 81,
    "NumBitCastInst": 62,
    "NumBrInst": 77,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 180,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 5,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 99,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 6,
    "TotalBlocks": 89,
    "TotalInsts": 618,
    "TotalMemInst": 429,
    "TotalFuncs": 18,
    "ArgsPhi": 4,
    "testUnary": 333
  },
  "baseline_oz_instcount": 616,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--aggressive-instcombine",
    "--newgvn",
    "--sroa",
    "--die",
    "--sroa",
    "--die",
    "--newgvn",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--licm",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--aggressive-instcombine",
    "--newgvn",
    "--sroa",
    "--die",
    "--newgvn",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--licm",
    "--newgvn",
    "--dse",
    "--elim-avail-extern",
    "--prune-eh",
    "--loop-simplifycfg",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--ipsccp",
          "--loop-versioning-licm",
          "--loop-simplify",
          "--nary-reassociate",
          "--ipconstprop",
          "--constprop",
          "--loop-simplifycfg",
          "--lower-constant-intrinsics",
          "--speculative-execution",
          "--loop-instsimplify",
          "--sccp",
          "--reassociate",
          "--strip",
          "--scalarizer",
          "--flattencfg",
          "--coro-cleanup",
          "--pgo-memop-opt",
          "--consthoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--ipsccp",
      "--loop-versioning-licm",
      "--loop-simplify",
      "--nary-reassociate",
      "--ipconstprop",
      "--constprop",
      "--loop-simplifycfg",
      "--lower-constant-intrinsics",
      "--speculative-execution",
      "--loop-instsimplify",
      "--sccp",
      "--reassociate",
      "--strip",
      "--scalarizer",
      "--flattencfg",
      "--coro-cleanup",
      "--pgo-memop-opt",
      "--consthoist"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}