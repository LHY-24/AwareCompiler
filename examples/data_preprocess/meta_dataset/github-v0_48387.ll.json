{
  "program_id": "github-v0_48387.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 4,
    "oneSuccessor": 3,
    "twoPred": 1,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 9,
    "CriticalCount": 2,
    "NumEdges": 13,
    "const32Bit": 32,
    "const64Bit": 13,
    "numConstZeroes": 18,
    "numConstOnes": 17,
    "UncondBranches": 3,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 11,
    "NumBitCastInst": 0,
    "NumBrInst": 8,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 31,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 13,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 13,
    "TotalInsts": 112,
    "TotalMemInst": 85,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 45
  },
  "baseline_oz_instcount": 111,
  "knowledge_base_entry": [
    "--inline",
    "--globalopt",
    "--globaldce",
    "--mergefunc",
    "--reassociate",
    "--prune-eh",
    "--simplifycfg",
    "--memcpyopt",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--strip",
          "--constmerge",
          "--reassociate",
          "--coro-early",
          "--aggressive-instcombine",
          "--gvn-hoist",
          "--ipsccp",
          "--alignment-from-assumptions",
          "--argpromotion",
          "--bdce",
          "--globaldce",
          "--loop-unroll-and-jam",
          "--lower-constant-intrinsics",
          "--add-discriminators",
          "--infer-address-spaces",
          "--slp-vectorizer",
          "--functionattrs",
          "--always-inline",
          "--inline",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--strip",
      "--constmerge",
      "--reassociate",
      "--coro-early",
      "--aggressive-instcombine",
      "--gvn-hoist",
      "--ipsccp",
      "--alignment-from-assumptions",
      "--argpromotion",
      "--bdce",
      "--globaldce",
      "--loop-unroll-and-jam",
      "--lower-constant-intrinsics",
      "--add-discriminators",
      "--infer-address-spaces",
      "--slp-vectorizer",
      "--functionattrs",
      "--always-inline",
      "--inline",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}