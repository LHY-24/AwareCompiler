{
  "program_id": "github-v0_9296.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 18,
    "oneSuccessor": 45,
    "twoPred": 16,
    "twoPredOneSuc": 7,
    "twoEach": 8,
    "twoSuccessor": 30,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 80,
    "BeginPhi": 0,
    "BranchCount": 75,
    "returnInt": 28,
    "CriticalCount": 14,
    "NumEdges": 105,
    "const32Bit": 147,
    "const64Bit": 7,
    "numConstZeroes": 57,
    "numConstOnes": 52,
    "UncondBranches": 45,
    "binaryConstArg": 29,
    "NumAShrInst": 1,
    "NumAddInst": 9,
    "NumAllocaInst": 34,
    "NumAndInst": 1,
    "BlockMid": 7,
    "BlockLow": 73,
    "NumBitCastInst": 0,
    "NumBrInst": 75,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 106,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 19,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 56,
    "NumSubInst": 8,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 80,
    "TotalInsts": 431,
    "TotalMemInst": 256,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 175
  },
  "baseline_oz_instcount": 433,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--ipsccp",
    "--early-cse",
    "--aggressive-instcombine",
    "--globalopt",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--adce",
    "--gvn-hoist",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-dead-prototypes",
          "--barrier",
          "--div-rem-pairs",
          "--instnamer",
          "--sccp",
          "--rewrite-statepoints-for-gc",
          "--functionattrs",
          "--loop-unroll-and-jam",
          "--slsr",
          "--memcpyopt",
          "--inferattrs",
          "--pgo-memop-opt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-dead-prototypes",
      "--barrier",
      "--div-rem-pairs",
      "--instnamer",
      "--sccp",
      "--rewrite-statepoints-for-gc",
      "--functionattrs",
      "--loop-unroll-and-jam",
      "--slsr",
      "--memcpyopt",
      "--inferattrs",
      "--pgo-memop-opt"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}