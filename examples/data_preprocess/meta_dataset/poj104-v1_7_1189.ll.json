{
  "program_id": "poj104-v1_7_1189.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 4,
    "oneSuccessor": 20,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 0,
    "BranchCount": 32,
    "returnInt": 18,
    "CriticalCount": 6,
    "NumEdges": 44,
    "const32Bit": 76,
    "const64Bit": 62,
    "numConstZeroes": 37,
    "numConstOnes": 56,
    "UncondBranches": 20,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 45,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 51,
    "NumBitCastInst": 59,
    "NumBrInst": 32,
    "NumCallInst": 72,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 99,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 50,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 58,
    "TotalInsts": 448,
    "TotalMemInst": 304,
    "TotalFuncs": 41,
    "ArgsPhi": 0,
    "testUnary": 212
  },
  "baseline_oz_instcount": 151,
  "knowledge_base_entry": [
    "--reg2mem",
    "--gvn",
    "--adce",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--licm",
    "--ipsccp",
    "--instcombine",
    "-loop-reduce",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--elim-avail-extern",
    "--instsimplify",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--instsimplify",
    "--gvn-hoist",
    "--die",
    "--early-cse",
    "--inline",
    "--dce",
    "--loop-instsimplify",
    "--dse",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--instcombine",
    "--prune-eh",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--simplifycfg",
    "--loop-reroll",
    "--slp-vectorizer",
    "--inline",
    "--instsimplify",
    "--prune-eh",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--gvn",
    "--indvars",
    "--slp-vectorizer",
    "--loop-reroll",
    "--jump-threading",
    "--elim-avail-extern",
    "--loop-deletion",
    "--gvn",
    "--flattencfg",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--gvn",
    "--slsr",
    "--loop-simplifycfg",
    "--die",
    "--ipsccp",
    "--aggressive-instcombine",
    "--sroa",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--licm",
    "--ipsccp",
    "--instcombine",
    "--prune-eh",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--gvn",
    "--mldst-motion",
    "--early-cse-memssa",
    "--inline",
    "--reassociate",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--simplifycfg",
    "--ipsccp",
    "--loweratomic",
    "--instcombine",
    "--mem2reg",
    "--ipsccp",
    "--lower-expect",
    "--loop-simplifycfg",
    "--inline",
    "--nary-reassociate",
    "--early-cse",
    "--instsimplify",
    "--bdce",
    "--simplifycfg",
    "--gvn-hoist",
    "--jump-threading",
    "--dce",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--loop-load-elim",
          "--memcpyopt",
          "--strip",
          "--sroa",
          "--newgvn",
          "--elim-avail-extern",
          "--lower-expect",
          "--argpromotion",
          "-loop-reduce",
          "--redundant-dbg-inst-elim",
          "--functionattrs",
          "--infer-address-spaces",
          "--dse",
          "--div-rem-pairs",
          "--loop-unroll-and-jam",
          "--lower-constant-intrinsics",
          "--inferattrs",
          "--gvn-hoist",
          "--flattencfg",
          "--partially-inline-libcalls",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+37.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--loop-load-elim",
      "--memcpyopt",
      "--strip",
      "--sroa",
      "--newgvn",
      "--elim-avail-extern",
      "--lower-expect",
      "--argpromotion",
      "-loop-reduce",
      "--redundant-dbg-inst-elim",
      "--functionattrs",
      "--infer-address-spaces",
      "--dse",
      "--div-rem-pairs",
      "--loop-unroll-and-jam",
      "--lower-constant-intrinsics",
      "--inferattrs",
      "--gvn-hoist",
      "--flattencfg",
      "--partially-inline-libcalls",
      "--coro-split"
    ],
    "performance_vs_Oz": "+37.1%"
  }
}