{
  "program_id": "github-v0_15467.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 7,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 4,
    "const32Bit": 15,
    "const64Bit": 0,
    "numConstZeroes": 9,
    "numConstOnes": 9,
    "UncondBranches": 2,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 7,
    "NumBitCastInst": 0,
    "NumBrInst": 3,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 6,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 6,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 7,
    "TotalInsts": 33,
    "TotalMemInst": 25,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 13
  },
  "baseline_oz_instcount": 33,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--mergefunc",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--sroa",
    "--mldst-motion",
    "--dse",
    "--loop-rotate",
    "--instcombine",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--simple-loop-unswitch",
          "--loop-versioning-licm",
          "--alignment-from-assumptions",
          "--strip-debug-declare",
          "--called-value-propagation",
          "--break-crit-edges",
          "--loop-simplify",
          "--loop-deletion",
          "--gvn-hoist",
          "--mergefunc",
          "--loop-guard-widening",
          "--memcpyopt",
          "--functionattrs",
          "--consthoist",
          "--insert-gcov-profiling",
          "--constprop",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--simple-loop-unswitch",
      "--loop-versioning-licm",
      "--alignment-from-assumptions",
      "--strip-debug-declare",
      "--called-value-propagation",
      "--break-crit-edges",
      "--loop-simplify",
      "--loop-deletion",
      "--gvn-hoist",
      "--mergefunc",
      "--loop-guard-widening",
      "--memcpyopt",
      "--functionattrs",
      "--consthoist",
      "--insert-gcov-profiling",
      "--constprop",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+9.1%"
  }
}