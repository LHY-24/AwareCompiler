{
  "program_id": "github-v0_20197.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 54,
    "onePredOneSuc": 50,
    "onePredTwoSuc": 1,
    "oneSuccessor": 54,
    "twoPred": 19,
    "twoPredOneSuc": 1,
    "twoEach": 18,
    "twoSuccessor": 19,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 83,
    "BeginPhi": 0,
    "BranchCount": 73,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 92,
    "const32Bit": 94,
    "const64Bit": 51,
    "numConstZeroes": 52,
    "numConstOnes": 71,
    "UncondBranches": 54,
    "binaryConstArg": 55,
    "NumAShrInst": 1,
    "NumAddInst": 30,
    "NumAllocaInst": 42,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 75,
    "NumBitCastInst": 0,
    "NumBrInst": 73,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 19,
    "NumLShrInst": 2,
    "NumLoadInst": 148,
    "NumMulInst": 13,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 94,
    "NumSubInst": 4,
    "NumTruncInst": 6,
    "NumXorInst": 9,
    "NumZExtInst": 53,
    "TotalBlocks": 83,
    "TotalInsts": 583,
    "TotalMemInst": 328,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 264
  },
  "baseline_oz_instcount": 583,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--gvn-hoist",
    "--memcpyopt",
    "--sroa",
    "--mem2reg",
    "--aggressive-instcombine",
    "--mergefunc",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--bdce",
    "--gvn-hoist",
    "--sroa",
    "--licm",
    "--loop-simplifycfg",
    "--inline",
    "--adce",
    "--dce",
    "--dse",
    "--early-cse",
    "--mergefunc",
    "--instsimplify",
    "--early-cse",
    "--dce",
    "--reassociate",
    "--sccp",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn",
          "--aggressive-instcombine",
          "--post-inline-ee-instrument",
          "--name-anon-globals",
          "--loop-data-prefetch",
          "--ipconstprop",
          "--loop-distribute",
          "--dse",
          "--loop-predication",
          "--ipsccp",
          "--loop-unroll-and-jam",
          "--simple-loop-unswitch",
          "--loweratomic",
          "--mldst-motion",
          "--mergereturn",
          "--infer-address-spaces",
          "--always-inline",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn",
      "--aggressive-instcombine",
      "--post-inline-ee-instrument",
      "--name-anon-globals",
      "--loop-data-prefetch",
      "--ipconstprop",
      "--loop-distribute",
      "--dse",
      "--loop-predication",
      "--ipsccp",
      "--loop-unroll-and-jam",
      "--simple-loop-unswitch",
      "--loweratomic",
      "--mldst-motion",
      "--mergereturn",
      "--infer-address-spaces",
      "--always-inline",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}