{
  "program_id": "linux-v0_6349.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 9,
    "oneSuccessor": 25,
    "twoPred": 13,
    "twoPredOneSuc": 6,
    "twoEach": 4,
    "twoSuccessor": 15,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 0,
    "BranchCount": 40,
    "returnInt": 1,
    "CriticalCount": 14,
    "NumEdges": 65,
    "const32Bit": 85,
    "const64Bit": 14,
    "numConstZeroes": 26,
    "numConstOnes": 43,
    "UncondBranches": 25,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 35,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 42,
    "NumBitCastInst": 0,
    "NumBrInst": 40,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 99,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 49,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 25,
    "TotalBlocks": 47,
    "TotalInsts": 320,
    "TotalMemInst": 216,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 162
  },
  "baseline_oz_instcount": 320,
  "knowledge_base_entry": [
    "--simple-loop-unswitch",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--ipsccp",
    "--aggressive-instcombine",
    "--prune-eh",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globaldce",
          "--flattencfg",
          "--loop-simplifycfg",
          "--gvn-hoist",
          "--lower-expect",
          "--loop-versioning-licm",
          "--loop-distribute",
          "--deadargelim",
          "--ipsccp",
          "--loop-deletion",
          "--loop-load-elim",
          "--memcpyopt",
          "--hotcoldsplit",
          "--consthoist",
          "--irce",
          "--lower-matrix-intrinsics",
          "--lcssa",
          "--aggressive-instcombine",
          "--loop-vectorize",
          "--instsimplify",
          "--guard-widening",
          "--correlated-propagation",
          "--sroa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globaldce",
      "--flattencfg",
      "--loop-simplifycfg",
      "--gvn-hoist",
      "--lower-expect",
      "--loop-versioning-licm",
      "--loop-distribute",
      "--deadargelim",
      "--ipsccp",
      "--loop-deletion",
      "--loop-load-elim",
      "--memcpyopt",
      "--hotcoldsplit",
      "--consthoist",
      "--irce",
      "--lower-matrix-intrinsics",
      "--lcssa",
      "--aggressive-instcombine",
      "--loop-vectorize",
      "--instsimplify",
      "--guard-widening",
      "--correlated-propagation",
      "--sroa"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}