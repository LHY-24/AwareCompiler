{
  "program_id": "linux-v0_10292.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 13,
    "oneSuccessor": 36,
    "twoPred": 17,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 27,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 88,
    "BeginPhi": 0,
    "BranchCount": 63,
    "returnInt": 23,
    "CriticalCount": 9,
    "NumEdges": 90,
    "const32Bit": 265,
    "const64Bit": 44,
    "numConstZeroes": 98,
    "numConstOnes": 111,
    "UncondBranches": 36,
    "binaryConstArg": 43,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 91,
    "NumAndInst": 15,
    "BlockMid": 13,
    "BlockLow": 75,
    "NumBitCastInst": 11,
    "NumBrInst": 63,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 26,
    "NumLShrInst": 9,
    "NumLoadInst": 239,
    "NumMulInst": 3,
    "NumOrInst": 13,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 10,
    "NumStoreInst": 131,
    "NumSubInst": 0,
    "NumTruncInst": 16,
    "NumXorInst": 5,
    "NumZExtInst": 26,
    "TotalBlocks": 88,
    "TotalInsts": 824,
    "TotalMemInst": 591,
    "TotalFuncs": 42,
    "ArgsPhi": 0,
    "testUnary": 388
  },
  "baseline_oz_instcount": 824,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--correlated-propagation",
    "--dse",
    "--early-cse",
    "--aggressive-instcombine",
    "--licm",
    "--flattencfg",
    "--ipsccp",
    "--bdce",
    "--mergefunc",
    "--loop-instsimplify",
    "--sccp",
    "--loop-simplifycfg",
    "--lower-expect",
    "--simplifycfg",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--dce",
          "--constmerge",
          "--strip",
          "--sink",
          "--inferattrs",
          "--barrier",
          "--early-cse",
          "--attributor",
          "--globalopt",
          "--licm",
          "--instsimplify",
          "--loop-data-prefetch",
          "--slp-vectorizer",
          "--lowerinvoke",
          "--loop-simplify",
          "--loop-fusion",
          "--loop-idiom",
          "--dse",
          "--libcalls-shrinkwrap",
          "--aggressive-instcombine",
          "--ee-instrument",
          "--early-cse-memssa",
          "--globaldce",
          "--loop-versioning",
          "--mem2reg",
          "--speculative-execution",
          "--instcombine",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--dce",
      "--constmerge",
      "--strip",
      "--sink",
      "--inferattrs",
      "--barrier",
      "--early-cse",
      "--attributor",
      "--globalopt",
      "--licm",
      "--instsimplify",
      "--loop-data-prefetch",
      "--slp-vectorizer",
      "--lowerinvoke",
      "--loop-simplify",
      "--loop-fusion",
      "--loop-idiom",
      "--dse",
      "--libcalls-shrinkwrap",
      "--aggressive-instcombine",
      "--ee-instrument",
      "--early-cse-memssa",
      "--globaldce",
      "--loop-versioning",
      "--mem2reg",
      "--speculative-execution",
      "--instcombine",
      "--newgvn"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}