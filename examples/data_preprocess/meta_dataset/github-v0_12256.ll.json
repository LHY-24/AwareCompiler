{
  "program_id": "github-v0_12256.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 6,
    "oneSuccessor": 19,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 34,
    "BeginPhi": 0,
    "BranchCount": 29,
    "returnInt": 2,
    "CriticalCount": 1,
    "NumEdges": 42,
    "const32Bit": 77,
    "const64Bit": 0,
    "numConstZeroes": 6,
    "numConstOnes": 33,
    "UncondBranches": 19,
    "binaryConstArg": 40,
    "NumAShrInst": 0,
    "NumAddInst": 20,
    "NumAllocaInst": 27,
    "NumAndInst": 12,
    "BlockMid": 7,
    "BlockLow": 27,
    "NumBitCastInst": 4,
    "NumBrInst": 29,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 10,
    "NumLShrInst": 7,
    "NumLoadInst": 72,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 7,
    "NumStoreInst": 50,
    "NumSubInst": 3,
    "NumTruncInst": 14,
    "NumXorInst": 0,
    "NumZExtInst": 26,
    "TotalBlocks": 34,
    "TotalInsts": 292,
    "TotalMemInst": 155,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 143
  },
  "baseline_oz_instcount": 292,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--newgvn",
    "--loop-instsimplify",
    "--gvn",
    "--aggressive-instcombine",
    "--bdce",
    "--load-store-vectorizer",
    "--gvn",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--strip-debug-declare",
          "--argpromotion",
          "--loop-rotate",
          "--loop-simplifycfg",
          "--mergefunc",
          "--gvn-hoist",
          "--flattencfg",
          "--early-cse",
          "--ee-instrument",
          "--slsr",
          "--coro-early",
          "--loop-unroll-and-jam",
          "--loop-unroll",
          "--aggressive-instcombine",
          "--adce",
          "--loop-load-elim",
          "--loop-deletion",
          "--lower-matrix-intrinsics",
          "--coro-cleanup",
          "--rpo-functionattrs",
          "--inline",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--strip-debug-declare",
      "--argpromotion",
      "--loop-rotate",
      "--loop-simplifycfg",
      "--mergefunc",
      "--gvn-hoist",
      "--flattencfg",
      "--early-cse",
      "--ee-instrument",
      "--slsr",
      "--coro-early",
      "--loop-unroll-and-jam",
      "--loop-unroll",
      "--aggressive-instcombine",
      "--adce",
      "--loop-load-elim",
      "--loop-deletion",
      "--lower-matrix-intrinsics",
      "--coro-cleanup",
      "--rpo-functionattrs",
      "--inline",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+6.2%"
  }
}