{
  "program_id": "github-v0_27555.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 11,
    "oneSuccessor": 21,
    "twoPred": 10,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 9,
    "CriticalCount": 9,
    "NumEdges": 57,
    "const32Bit": 59,
    "const64Bit": 22,
    "numConstZeroes": 40,
    "numConstOnes": 15,
    "UncondBranches": 21,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 42,
    "NumBitCastInst": 0,
    "NumBrInst": 39,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 2,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 41,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 44,
    "TotalInsts": 199,
    "TotalMemInst": 131,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 58
  },
  "baseline_oz_instcount": 200,
  "knowledge_base_entry": [
    "--scalarizer",
    "--early-cse",
    "--mldst-motion",
    "--jump-threading",
    "--correlated-propagation",
    "--gvn-hoist",
    "--prune-eh",
    "--inline",
    "--dce",
    "--mergefunc",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--alignment-from-assumptions",
          "--barrier",
          "--canonicalize-aliases",
          "--coro-split",
          "--redundant-dbg-inst-elim",
          "--memcpyopt",
          "--slp-vectorizer",
          "--globaldce",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--alignment-from-assumptions",
      "--barrier",
      "--canonicalize-aliases",
      "--coro-split",
      "--redundant-dbg-inst-elim",
      "--memcpyopt",
      "--slp-vectorizer",
      "--globaldce",
      "--float2int"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}