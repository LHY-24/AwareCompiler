{
  "program_id": "linux-v0_4600.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 83,
    "onePredOneSuc": 61,
    "onePredTwoSuc": 20,
    "oneSuccessor": 81,
    "twoPred": 24,
    "twoPredOneSuc": 17,
    "twoEach": 2,
    "twoSuccessor": 28,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 128,
    "BeginPhi": 0,
    "BranchCount": 109,
    "returnInt": 30,
    "CriticalCount": 21,
    "NumEdges": 142,
    "const32Bit": 167,
    "const64Bit": 20,
    "numConstZeroes": 55,
    "numConstOnes": 102,
    "UncondBranches": 81,
    "binaryConstArg": 24,
    "NumAShrInst": 3,
    "NumAddInst": 1,
    "NumAllocaInst": 76,
    "NumAndInst": 9,
    "BlockMid": 10,
    "BlockLow": 118,
    "NumBitCastInst": 9,
    "NumBrInst": 109,
    "NumCallInst": 61,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 29,
    "NumLShrInst": 1,
    "NumLoadInst": 139,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 85,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 8,
    "NumZExtInst": 21,
    "TotalBlocks": 128,
    "TotalInsts": 613,
    "TotalMemInst": 382,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 262
  },
  "baseline_oz_instcount": 581,
  "knowledge_base_entry": [
    "--loop-interchange",
    "--gvn",
    "--jump-threading",
    "--sroa",
    "--instsimplify",
    "--ipsccp",
    "--loop-instsimplify",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--gvn",
    "--sccp",
    "--licm",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--argpromotion",
          "--simple-loop-unswitch",
          "--gvn",
          "--float2int",
          "--always-inline",
          "--loop-simplify",
          "--aggressive-instcombine",
          "--instsimplify",
          "--mergeicmps",
          "--insert-gcov-profiling",
          "--dse",
          "--globalopt",
          "--indvars",
          "--deadargelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--argpromotion",
      "--simple-loop-unswitch",
      "--gvn",
      "--float2int",
      "--always-inline",
      "--loop-simplify",
      "--aggressive-instcombine",
      "--instsimplify",
      "--mergeicmps",
      "--insert-gcov-profiling",
      "--dse",
      "--globalopt",
      "--indvars",
      "--deadargelim"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}