{
  "program_id": "github-v0_29686.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 52,
    "const64Bit": 59,
    "numConstZeroes": 58,
    "numConstOnes": 30,
    "UncondBranches": 13,
    "binaryConstArg": 35,
    "NumAShrInst": 13,
    "NumAddInst": 3,
    "NumAllocaInst": 11,
    "NumAndInst": 12,
    "BlockMid": 7,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 7,
    "NumLShrInst": 1,
    "NumLoadInst": 37,
    "NumMulInst": 0,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 19,
    "NumXorInst": 0,
    "NumZExtInst": 23,
    "TotalBlocks": 24,
    "TotalInsts": 232,
    "TotalMemInst": 105,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 101
  },
  "baseline_oz_instcount": 232,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--jump-threading",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--reassociate",
    "--licm",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--flattencfg",
          "--always-inline",
          "--loop-sink",
          "--loop-unroll",
          "--instsimplify",
          "--called-value-propagation",
          "--infer-address-spaces",
          "--jump-threading",
          "--loop-deletion",
          "--functionattrs",
          "--inferattrs",
          "--loop-vectorize",
          "--separate-const-offset-from-gep",
          "--mergefunc",
          "--aggressive-instcombine",
          "--inline",
          "--consthoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--flattencfg",
      "--always-inline",
      "--loop-sink",
      "--loop-unroll",
      "--instsimplify",
      "--called-value-propagation",
      "--infer-address-spaces",
      "--jump-threading",
      "--loop-deletion",
      "--functionattrs",
      "--inferattrs",
      "--loop-vectorize",
      "--separate-const-offset-from-gep",
      "--mergefunc",
      "--aggressive-instcombine",
      "--inline",
      "--consthoist"
    ],
    "performance_vs_Oz": "+7.8%"
  }
}