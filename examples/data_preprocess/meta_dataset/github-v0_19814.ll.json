{
  "program_id": "github-v0_19814.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 3,
    "oneSuccessor": 10,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 10,
    "CriticalCount": 3,
    "NumEdges": 22,
    "const32Bit": 23,
    "const64Bit": 12,
    "numConstZeroes": 12,
    "numConstOnes": 14,
    "UncondBranches": 10,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 15,
    "NumBitCastInst": 2,
    "NumBrInst": 16,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 31,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 17,
    "TotalInsts": 119,
    "TotalMemInst": 77,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 56
  },
  "baseline_oz_instcount": 120,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--load-store-vectorizer",
    "--dce",
    "--simplifycfg",
    "--newgvn",
    "--newgvn",
    "--aggressive-instcombine",
    "--sroa",
    "--aggressive-instcombine",
    "--dce",
    "--gvn-hoist",
    "--memcpyopt",
    "--mem2reg",
    "--elim-avail-extern",
    "--instsimplify",
    "--aggressive-instcombine",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--die",
          "--constprop",
          "--mldst-motion",
          "--globalopt",
          "--sink",
          "--prune-eh",
          "--coro-early",
          "--mergereturn",
          "--load-store-vectorizer",
          "--loop-distribute",
          "--sccp",
          "--lower-expect",
          "--guard-widening",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--die",
      "--constprop",
      "--mldst-motion",
      "--globalopt",
      "--sink",
      "--prune-eh",
      "--coro-early",
      "--mergereturn",
      "--load-store-vectorizer",
      "--loop-distribute",
      "--sccp",
      "--lower-expect",
      "--guard-widening",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}