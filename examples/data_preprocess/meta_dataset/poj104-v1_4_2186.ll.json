{
  "program_id": "poj104-v1_4_2186.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 23,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 2,
    "oneSuccessor": 21,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 7,
    "twoSuccessor": 11,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 1,
    "BranchCount": 32,
    "returnInt": 3,
    "CriticalCount": 5,
    "NumEdges": 43,
    "const32Bit": 48,
    "const64Bit": 27,
    "numConstZeroes": 25,
    "numConstOnes": 29,
    "UncondBranches": 21,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 19,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 39,
    "NumBitCastInst": 23,
    "NumBrInst": 32,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 57,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 9,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 42,
    "TotalInsts": 255,
    "TotalMemInst": 159,
    "TotalFuncs": 21,
    "ArgsPhi": 2,
    "testUnary": 106
  },
  "baseline_oz_instcount": 120,
  "knowledge_base_entry": [
    "--loop-fusion",
    "--early-cse",
    "--lower-expect",
    "--newgvn",
    "--correlated-propagation",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--mem2reg",
    "--loop-simplifycfg",
    "--flattencfg",
    "--ipsccp",
    "--elim-avail-extern",
    "--memcpyopt",
    "--instcombine",
    "--early-cse-memssa",
    "--inline",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--inline",
    "--reassociate",
    "--loop-instsimplify",
    "--ipsccp",
    "--die",
    "--lower-expect",
    "--simplifycfg",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--infer-address-spaces",
          "--simplifycfg",
          "--inferattrs",
          "--instcombine",
          "--dce",
          "--coro-early",
          "--break-crit-edges",
          "--die",
          "--called-value-propagation",
          "--argpromotion",
          "--globalopt",
          "--barrier",
          "--lower-widenable-condition",
          "--instnamer",
          "--loop-load-elim",
          "--canonicalize-aliases",
          "--loop-data-prefetch",
          "--sroa",
          "--speculative-execution",
          "--guard-widening",
          "--gvn-hoist",
          "--libcalls-shrinkwrap",
          "--functionattrs",
          "--prune-eh",
          "--loop-idiom",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+15.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--infer-address-spaces",
      "--simplifycfg",
      "--inferattrs",
      "--instcombine",
      "--dce",
      "--coro-early",
      "--break-crit-edges",
      "--die",
      "--called-value-propagation",
      "--argpromotion",
      "--globalopt",
      "--barrier",
      "--lower-widenable-condition",
      "--instnamer",
      "--loop-load-elim",
      "--canonicalize-aliases",
      "--loop-data-prefetch",
      "--sroa",
      "--speculative-execution",
      "--guard-widening",
      "--gvn-hoist",
      "--libcalls-shrinkwrap",
      "--functionattrs",
      "--prune-eh",
      "--loop-idiom",
      "--strip"
    ],
    "performance_vs_Oz": "+15.0%"
  }
}