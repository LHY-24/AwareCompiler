{
  "program_id": "poj104-v1_6_1004.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 8,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 5,
    "CriticalCount": 5,
    "NumEdges": 31,
    "const32Bit": 23,
    "const64Bit": 26,
    "numConstZeroes": 18,
    "numConstOnes": 15,
    "UncondBranches": 15,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 24,
    "NumBitCastInst": 16,
    "NumBrInst": 23,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 26,
    "TotalInsts": 156,
    "TotalMemInst": 88,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 69
  },
  "baseline_oz_instcount": 91,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--instcombine",
    "--instsimplify",
    "--early-cse-memssa",
    "--dce",
    "--mergefunc",
    "--adce",
    "--jump-threading",
    "--instcombine",
    "--instsimplify",
    "--early-cse-memssa",
    "--simplifycfg",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--reassociate",
    "--dce",
    "--dse",
    "--instcombine",
    "--early-cse-memssa",
    "--sroa",
    "--load-store-vectorizer",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-predication",
          "--constprop",
          "--partially-inline-libcalls",
          "--coro-early",
          "--break-crit-edges",
          "--mergeicmps",
          "--instnamer",
          "--lower-widenable-condition",
          "--gvn-hoist",
          "--early-cse-memssa",
          "--slsr",
          "--loop-simplify",
          "--irce",
          "--mem2reg",
          "--elim-avail-extern",
          "--inline",
          "--strip-nondebug",
          "--globalsplit",
          "--simplifycfg",
          "--alignment-from-assumptions",
          "--constmerge",
          "--callsite-splitting",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-predication",
      "--constprop",
      "--partially-inline-libcalls",
      "--coro-early",
      "--break-crit-edges",
      "--mergeicmps",
      "--instnamer",
      "--lower-widenable-condition",
      "--gvn-hoist",
      "--early-cse-memssa",
      "--slsr",
      "--loop-simplify",
      "--irce",
      "--mem2reg",
      "--elim-avail-extern",
      "--inline",
      "--strip-nondebug",
      "--globalsplit",
      "--simplifycfg",
      "--alignment-from-assumptions",
      "--constmerge",
      "--callsite-splitting",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+5.5%"
  }
}