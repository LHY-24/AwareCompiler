{
  "program_id": "poj104-v1_11_768.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 4,
    "oneSuccessor": 40,
    "twoPred": 40,
    "twoPredOneSuc": 4,
    "twoEach": 35,
    "twoSuccessor": 40,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 83,
    "BeginPhi": 0,
    "BranchCount": 80,
    "returnInt": 38,
    "CriticalCount": 40,
    "NumEdges": 120,
    "const32Bit": 82,
    "const64Bit": 6,
    "numConstZeroes": 5,
    "numConstOnes": 7,
    "UncondBranches": 40,
    "binaryConstArg": 37,
    "NumAShrInst": 0,
    "NumAddInst": 33,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 82,
    "NumBitCastInst": 6,
    "NumBrInst": 80,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 40,
    "NumLShrInst": 0,
    "NumLoadInst": 77,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 1,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 83,
    "TotalInsts": 294,
    "TotalMemInst": 128,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 87
  },
  "baseline_oz_instcount": 310,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--sccp",
    "--die",
    "--licm",
    "--lower-expect",
    "--early-cse",
    "--adce",
    "--newgvn",
    "--mem2reg",
    "--instcombine",
    "--loop-simplifycfg",
    "--sroa",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--die",
    "--lower-expect",
    "--correlated-propagation",
    "--gvn-hoist",
    "--sccp",
    "--die",
    "--licm",
    "--lower-expect",
    "--early-cse",
    "--adce",
    "--newgvn",
    "--mem2reg",
    "--instcombine",
    "--nary-reassociate",
    "--sroa",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--sroa",
    "--mergefunc",
    "--newgvn",
    "--slsr",
    "--indvars",
    "--early-cse",
    "--inline",
    "--flattencfg",
    "--adce",
    "--simplifycfg",
    "--ipsccp",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "-loop-reduce",
    "--mergefunc",
    "--correlated-propagation",
    "--loop-reroll",
    "--nary-reassociate",
    "--inline",
    "--instcombine",
    "-loop-reduce",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--dse",
    "--elim-avail-extern",
    "--licm",
    "--mldst-motion",
    "--simplifycfg",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--dse",
    "--reassociate",
    "--adce",
    "--newgvn",
    "--mem2reg",
    "--instcombine",
    "--nary-reassociate",
    "--sroa",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--sroa",
    "--mergefunc",
    "--correlated-propagation",
    "--loop-reroll",
    "--nary-reassociate",
    "--inline",
    "--instcombine",
    "-loop-reduce",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--dse",
    "--elim-avail-extern",
    "--licm",
    "--mldst-motion",
    "--simplifycfg",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--dse",
    "--reassociate",
    "--adce",
    "--newgvn",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--simplifycfg",
          "--gvn-hoist",
          "--dce",
          "--lower-expect",
          "--loop-versioning",
          "--indvars",
          "--correlated-propagation",
          "--newgvn",
          "--adce",
          "--cross-dso-cfi",
          "--lower-matrix-intrinsics",
          "--rpo-functionattrs",
          "--slp-vectorizer",
          "--loop-deletion",
          "--lower-guard-intrinsic",
          "--loop-unroll",
          "--always-inline",
          "--irce",
          "--loop-distribute",
          "--sroa",
          "--loop-fusion",
          "--loop-simplify",
          "--instsimplify",
          "--die",
          "--redundant-dbg-inst-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--simplifycfg",
      "--gvn-hoist",
      "--dce",
      "--lower-expect",
      "--loop-versioning",
      "--indvars",
      "--correlated-propagation",
      "--newgvn",
      "--adce",
      "--cross-dso-cfi",
      "--lower-matrix-intrinsics",
      "--rpo-functionattrs",
      "--slp-vectorizer",
      "--loop-deletion",
      "--lower-guard-intrinsic",
      "--loop-unroll",
      "--always-inline",
      "--irce",
      "--loop-distribute",
      "--sroa",
      "--loop-fusion",
      "--loop-simplify",
      "--instsimplify",
      "--die",
      "--redundant-dbg-inst-elim"
    ],
    "performance_vs_Oz": "+9.4%"
  }
}