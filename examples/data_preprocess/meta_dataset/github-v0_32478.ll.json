{
  "program_id": "github-v0_32478.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 8,
    "onePred": 10,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 4,
    "oneSuccessor": 10,
    "twoPred": 10,
    "twoPredOneSuc": 5,
    "twoEach": 5,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 9,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 9,
    "BranchCount": 20,
    "returnInt": 6,
    "CriticalCount": 10,
    "NumEdges": 30,
    "const32Bit": 82,
    "const64Bit": 41,
    "numConstZeroes": 49,
    "numConstOnes": 19,
    "UncondBranches": 10,
    "binaryConstArg": 64,
    "NumAShrInst": 0,
    "NumAddInst": 49,
    "NumAllocaInst": 1,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 15,
    "NumBitCastInst": 25,
    "NumBrInst": 20,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 51,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 8,
    "NumOrInst": 12,
    "NumPHIInst": 16,
    "NumRetInst": 2,
    "NumSExtInst": 20,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 27,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 17,
    "TotalBlocks": 22,
    "TotalInsts": 330,
    "TotalMemInst": 129,
    "TotalFuncs": 9,
    "ArgsPhi": 32,
    "testUnary": 99
  },
  "baseline_oz_instcount": 376,
  "knowledge_base_entry": [
    "--jump-threading",
    "--loop-reroll",
    "--indvars",
    "--sroa",
    "--early-cse",
    "--memcpyopt",
    "--sroa",
    "--loop-rotate",
    "--licm",
    "--early-cse-memssa",
    "--reassociate",
    "--simplifycfg",
    "--gvn",
    "--flattencfg",
    "--simplifycfg",
    "--globalopt",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--dce",
    "--elim-avail-extern",
    "--newgvn",
    "--die",
    "--load-store-vectorizer",
    "--dse",
    "--instsimplify",
    "--dce",
    "--load-store-vectorizer",
    "--inline",
    "--elim-avail-extern",
    "--die",
    "--ipsccp",
    "--instcombine",
    "--elim-avail-extern",
    "--instcombine",
    "--licm",
    "--gvn",
    "--newgvn",
    "--loop-fusion",
    "--loop-reroll",
    "--indvars",
    "--slp-vectorizer",
    "--instcombine",
    "--elim-avail-extern",
    "--simplifycfg",
    "--dse",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--loop-reroll",
    "--indvars",
    "--jump-threading",
    "--adce",
    "--bdce",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--sccp",
    "--early-cse-memssa",
    "--loop-reroll",
    "--loop-fusion",
    "--loop-reroll",
    "--early-cse-memssa",
    "--gvn",
    "--adce",
    "--newgvn",
    "--simplifycfg",
    "--mem2reg",
    "--reassociate",
    "--simplifycfg",
    "--instsimplify",
    "--instcombine",
    "--memcpyopt",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--dce",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--pgo-memop-opt",
          "--loop-reroll",
          "--consthoist",
          "--add-discriminators",
          "--separate-const-offset-from-gep",
          "--mem2reg",
          "--load-store-vectorizer",
          "--cross-dso-cfi",
          "--speculative-execution",
          "--loop-predication",
          "--inline",
          "--early-cse-memssa",
          "--forceattrs",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+35.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--pgo-memop-opt",
      "--loop-reroll",
      "--consthoist",
      "--add-discriminators",
      "--separate-const-offset-from-gep",
      "--mem2reg",
      "--load-store-vectorizer",
      "--cross-dso-cfi",
      "--speculative-execution",
      "--loop-predication",
      "--inline",
      "--early-cse-memssa",
      "--forceattrs",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+35.4%"
  }
}