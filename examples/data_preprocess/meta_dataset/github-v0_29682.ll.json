{
  "program_id": "github-v0_29682.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 34,
    "const64Bit": 43,
    "numConstZeroes": 43,
    "numConstOnes": 29,
    "UncondBranches": 11,
    "binaryConstArg": 10,
    "NumAShrInst": 2,
    "NumAddInst": 5,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 8,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 37,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 24,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 21,
    "TotalInsts": 182,
    "TotalMemInst": 113,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 81
  },
  "baseline_oz_instcount": 182,
  "knowledge_base_entry": [
    "--die",
    "--aggressive-instcombine",
    "--jump-threading",
    "--bdce",
    "--loop-simplifycfg",
    "--licm",
    "--dse",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--jump-threading",
    "--bdce",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--instcombine",
    "--inline",
    "--nary-reassociate",
    "--loop-reroll",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--loop-deletion",
          "--reg2mem",
          "--break-crit-edges",
          "--called-value-propagation",
          "--coro-elide",
          "--callsite-splitting",
          "--argpromotion",
          "--strip-debug-declare",
          "--indvars",
          "--licm",
          "--ipconstprop",
          "--mergereturn",
          "--loop-idiom",
          "--functionattrs",
          "--lower-matrix-intrinsics",
          "--dse",
          "--gvn-hoist",
          "--lower-guard-intrinsic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--loop-deletion",
      "--reg2mem",
      "--break-crit-edges",
      "--called-value-propagation",
      "--coro-elide",
      "--callsite-splitting",
      "--argpromotion",
      "--strip-debug-declare",
      "--indvars",
      "--licm",
      "--ipconstprop",
      "--mergereturn",
      "--loop-idiom",
      "--functionattrs",
      "--lower-matrix-intrinsics",
      "--dse",
      "--gvn-hoist",
      "--lower-guard-intrinsic"
    ],
    "performance_vs_Oz": "+3.8%"
  }
}