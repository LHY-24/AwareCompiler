{
  "program_id": "linux-v0_4088.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 8,
    "oneSuccessor": 26,
    "twoPred": 13,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 17,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 61,
    "BeginPhi": 0,
    "BranchCount": 43,
    "returnInt": 16,
    "CriticalCount": 8,
    "NumEdges": 60,
    "const32Bit": 140,
    "const64Bit": 7,
    "numConstZeroes": 52,
    "numConstOnes": 61,
    "UncondBranches": 26,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 50,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 55,
    "NumBitCastInst": 12,
    "NumBrInst": 43,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 13,
    "NumLShrInst": 2,
    "NumLoadInst": 113,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 71,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 7,
    "TotalBlocks": 61,
    "TotalInsts": 422,
    "TotalMemInst": 309,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 193
  },
  "baseline_oz_instcount": 422,
  "knowledge_base_entry": [
    "--die",
    "--aggressive-instcombine",
    "--bdce",
    "--jump-threading",
    "--ipsccp",
    "--correlated-propagation",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--infer-address-spaces",
          "--globalopt",
          "--jump-threading",
          "--strip-dead-prototypes",
          "--loop-idiom",
          "--loop-fusion",
          "--die",
          "--globaldce",
          "--aggressive-instcombine",
          "--scalarizer",
          "--sroa",
          "--elim-avail-extern",
          "--always-inline",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--infer-address-spaces",
      "--globalopt",
      "--jump-threading",
      "--strip-dead-prototypes",
      "--loop-idiom",
      "--loop-fusion",
      "--die",
      "--globaldce",
      "--aggressive-instcombine",
      "--scalarizer",
      "--sroa",
      "--elim-avail-extern",
      "--always-inline",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}