{
  "program_id": "tensorflow-v0_303.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 10,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 2,
    "BranchCount": 11,
    "returnInt": 0,
    "CriticalCount": 6,
    "NumEdges": 21,
    "const32Bit": 31,
    "const64Bit": 28,
    "numConstZeroes": 34,
    "numConstOnes": 10,
    "UncondBranches": 5,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 0,
    "BlockLow": 28,
    "NumBitCastInst": 17,
    "NumBrInst": 11,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 6,
    "NumLShrInst": 1,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 13,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 28,
    "TotalInsts": 124,
    "TotalMemInst": 63,
    "TotalFuncs": 17,
    "ArgsPhi": 6,
    "testUnary": 34
  },
  "baseline_oz_instcount": 123,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--early-cse-memssa",
    "--die",
    "--loop-instsimplify",
    "--sccp",
    "--simplifycfg",
    "--correlated-propagation",
    "--loop-reroll",
    "--mergefunc",
    "--gvn",
    "--instsimplify",
    "--mldst-motion",
    "--licm",
    "--elim-avail-extern",
    "--dce",
    "--jump-threading",
    "--sroa",
    "--early-cse-memssa",
    "--loop-fusion",
    "--early-cse-memssa",
    "-loop-reduce",
    "--simplifycfg",
    "--mergefunc",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--prune-eh",
          "--gvn",
          "--dse",
          "--rewrite-statepoints-for-gc",
          "--coro-split",
          "-loop-reduce",
          "--forceattrs",
          "--post-inline-ee-instrument",
          "--bdce",
          "--canonicalize-aliases",
          "--sink",
          "--cross-dso-cfi",
          "--lowerinvoke",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--prune-eh",
      "--gvn",
      "--dse",
      "--rewrite-statepoints-for-gc",
      "--coro-split",
      "-loop-reduce",
      "--forceattrs",
      "--post-inline-ee-instrument",
      "--bdce",
      "--canonicalize-aliases",
      "--sink",
      "--cross-dso-cfi",
      "--lowerinvoke",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+4.9%"
  }
}