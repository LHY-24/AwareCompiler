{
  "program_id": "linux-v0_11842.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 41,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 15,
    "oneSuccessor": 34,
    "twoPred": 16,
    "twoPredOneSuc": 7,
    "twoEach": 6,
    "twoSuccessor": 27,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 0,
    "BranchCount": 61,
    "returnInt": 15,
    "CriticalCount": 17,
    "NumEdges": 88,
    "const32Bit": 236,
    "const64Bit": 24,
    "numConstZeroes": 122,
    "numConstOnes": 72,
    "UncondBranches": 34,
    "binaryConstArg": 15,
    "NumAShrInst": 1,
    "NumAddInst": 5,
    "NumAllocaInst": 48,
    "NumAndInst": 7,
    "BlockMid": 12,
    "BlockLow": 64,
    "NumBitCastInst": 4,
    "NumBrInst": 61,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 78,
    "NumICmpInst": 28,
    "NumLShrInst": 0,
    "NumLoadInst": 170,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 77,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 76,
    "TotalInsts": 553,
    "TotalMemInst": 408,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 241
  },
  "baseline_oz_instcount": 555,
  "knowledge_base_entry": [
    "--jump-threading",
    "--elim-avail-extern",
    "--dse",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--coro-split",
          "--strip",
          "--strip-dead-prototypes",
          "--globaldce",
          "--mergefunc",
          "--lower-expect",
          "--inline",
          "--partial-inliner",
          "--instnamer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--coro-split",
      "--strip",
      "--strip-dead-prototypes",
      "--globaldce",
      "--mergefunc",
      "--lower-expect",
      "--inline",
      "--partial-inliner",
      "--instnamer"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}