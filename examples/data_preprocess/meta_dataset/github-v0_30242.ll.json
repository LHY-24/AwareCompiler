{
  "program_id": "github-v0_30242.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 7,
    "oneSuccessor": 21,
    "twoPred": 18,
    "twoPredOneSuc": 6,
    "twoEach": 9,
    "twoSuccessor": 20,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 0,
    "BranchCount": 41,
    "returnInt": 15,
    "CriticalCount": 18,
    "NumEdges": 61,
    "const32Bit": 149,
    "const64Bit": 6,
    "numConstZeroes": 69,
    "numConstOnes": 46,
    "UncondBranches": 21,
    "binaryConstArg": 33,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 30,
    "NumAndInst": 15,
    "BlockMid": 11,
    "BlockLow": 36,
    "NumBitCastInst": 39,
    "NumBrInst": 41,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 21,
    "NumLShrInst": 5,
    "NumLoadInst": 98,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 5,
    "NumSelectInst": 1,
    "NumShlInst": 5,
    "NumStoreInst": 56,
    "NumSubInst": 3,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 19,
    "TotalBlocks": 47,
    "TotalInsts": 459,
    "TotalMemInst": 267,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 205
  },
  "baseline_oz_instcount": 459,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--flattencfg",
    "--ipsccp",
    "--adce",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergeicmps",
          "--partial-inliner",
          "--coro-split",
          "-loop-reduce",
          "--sroa",
          "--slsr",
          "--ipsccp",
          "--coro-early",
          "--hotcoldsplit",
          "--strip",
          "--loop-reroll",
          "--load-store-vectorizer",
          "--loop-simplify",
          "--loop-distribute",
          "--sink",
          "--aggressive-instcombine",
          "--lower-expect",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergeicmps",
      "--partial-inliner",
      "--coro-split",
      "-loop-reduce",
      "--sroa",
      "--slsr",
      "--ipsccp",
      "--coro-early",
      "--hotcoldsplit",
      "--strip",
      "--loop-reroll",
      "--load-store-vectorizer",
      "--loop-simplify",
      "--loop-distribute",
      "--sink",
      "--aggressive-instcombine",
      "--lower-expect",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}