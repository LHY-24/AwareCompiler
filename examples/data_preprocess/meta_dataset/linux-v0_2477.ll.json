{
  "program_id": "linux-v0_2477.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 58,
    "onePredOneSuc": 44,
    "onePredTwoSuc": 12,
    "oneSuccessor": 50,
    "twoPred": 17,
    "twoPredOneSuc": 4,
    "twoEach": 7,
    "twoSuccessor": 28,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 98,
    "BeginPhi": 1,
    "BranchCount": 78,
    "returnInt": 20,
    "CriticalCount": 30,
    "NumEdges": 106,
    "const32Bit": 157,
    "const64Bit": 42,
    "numConstZeroes": 46,
    "numConstOnes": 130,
    "UncondBranches": 50,
    "binaryConstArg": 35,
    "NumAShrInst": 3,
    "NumAddInst": 1,
    "NumAllocaInst": 97,
    "NumAndInst": 12,
    "BlockMid": 13,
    "BlockLow": 86,
    "NumBitCastInst": 0,
    "NumBrInst": 78,
    "NumCallInst": 78,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 30,
    "NumLShrInst": 0,
    "NumLoadInst": 130,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 1,
    "NumRetInst": 21,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 118,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 20,
    "NumZExtInst": 15,
    "TotalBlocks": 99,
    "TotalInsts": 654,
    "TotalMemInst": 431,
    "TotalFuncs": 32,
    "ArgsPhi": 2,
    "testUnary": 276
  },
  "baseline_oz_instcount": 631,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--jump-threading",
    "--aggressive-instcombine",
    "--adce",
    "--reassociate",
    "--ipsccp",
    "--loweratomic",
    "--ipsccp",
    "--gvn-hoist",
    "--ipsccp",
    "--gvn",
    "--bdce",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--post-inline-ee-instrument",
          "--callsite-splitting",
          "--instsimplify",
          "--ipsccp",
          "--gvn-hoist",
          "--insert-gcov-profiling",
          "--loop-deletion",
          "--aggressive-instcombine",
          "--loop-data-prefetch",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--post-inline-ee-instrument",
      "--callsite-splitting",
      "--instsimplify",
      "--ipsccp",
      "--gvn-hoist",
      "--insert-gcov-profiling",
      "--loop-deletion",
      "--aggressive-instcombine",
      "--loop-data-prefetch",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}