{
  "program_id": "linux-v0_5485.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 45,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 15,
    "oneSuccessor": 34,
    "twoPred": 13,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 28,
    "morePreds": 4,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 84,
    "BeginPhi": 3,
    "BranchCount": 62,
    "returnInt": 28,
    "CriticalCount": 13,
    "NumEdges": 90,
    "const32Bit": 423,
    "const64Bit": 58,
    "numConstZeroes": 183,
    "numConstOnes": 116,
    "UncondBranches": 34,
    "binaryConstArg": 69,
    "NumAShrInst": 2,
    "NumAddInst": 5,
    "NumAllocaInst": 90,
    "NumAndInst": 25,
    "BlockMid": 17,
    "BlockLow": 70,
    "NumBitCastInst": 14,
    "NumBrInst": 62,
    "NumCallInst": 78,
    "NumGetElementPtrInst": 141,
    "NumICmpInst": 30,
    "NumLShrInst": 13,
    "NumLoadInst": 299,
    "NumMulInst": 3,
    "NumOrInst": 12,
    "NumPHIInst": 3,
    "NumRetInst": 25,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 10,
    "NumStoreInst": 140,
    "NumSubInst": 11,
    "NumTruncInst": 6,
    "NumXorInst": 3,
    "NumZExtInst": 10,
    "TotalBlocks": 87,
    "TotalInsts": 994,
    "TotalMemInst": 748,
    "TotalFuncs": 40,
    "ArgsPhi": 7,
    "testUnary": 425
  },
  "baseline_oz_instcount": 993,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--lower-expect",
    "--die",
    "--aggressive-instcombine",
    "--newgvn",
    "--sccp",
    "--lower-expect",
    "--prune-eh",
    "--gvn",
    "--ipsccp",
    "--instsimplify",
    "--lower-expect",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-dead-prototypes",
          "--constprop",
          "--consthoist",
          "--aggressive-instcombine",
          "--sccp",
          "--loop-unroll",
          "--scalarizer",
          "--ipsccp",
          "--loop-unroll-and-jam",
          "--loop-versioning-licm",
          "--early-cse-memssa",
          "--simple-loop-unswitch",
          "--inline",
          "--infer-address-spaces",
          "--called-value-propagation",
          "--post-inline-ee-instrument",
          "--lower-constant-intrinsics",
          "--loop-rotate",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-dead-prototypes",
      "--constprop",
      "--consthoist",
      "--aggressive-instcombine",
      "--sccp",
      "--loop-unroll",
      "--scalarizer",
      "--ipsccp",
      "--loop-unroll-and-jam",
      "--loop-versioning-licm",
      "--early-cse-memssa",
      "--simple-loop-unswitch",
      "--inline",
      "--infer-address-spaces",
      "--called-value-propagation",
      "--post-inline-ee-instrument",
      "--lower-constant-intrinsics",
      "--loop-rotate",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}