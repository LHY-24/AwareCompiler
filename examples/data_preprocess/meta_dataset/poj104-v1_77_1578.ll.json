{
  "program_id": "poj104-v1_77_1578.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 34,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 8,
    "oneSuccessor": 30,
    "twoPred": 13,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 0,
    "BranchCount": 48,
    "returnInt": 21,
    "CriticalCount": 8,
    "NumEdges": 66,
    "const32Bit": 92,
    "const64Bit": 54,
    "numConstZeroes": 35,
    "numConstOnes": 66,
    "UncondBranches": 30,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 47,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 68,
    "NumBitCastInst": 57,
    "NumBrInst": 48,
    "NumCallInst": 73,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 125,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 27,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 65,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 76,
    "TotalInsts": 534,
    "TotalMemInst": 347,
    "TotalFuncs": 43,
    "ArgsPhi": 0,
    "testUnary": 252
  },
  "baseline_oz_instcount": 120,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--dce",
    "--simplifycfg",
    "--adce",
    "--lower-expect",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--mldst-motion",
    "--elim-avail-extern",
    "--sccp",
    "--instcombine",
    "--elim-avail-extern",
    "--mldst-motion",
    "--elim-avail-extern",
    "--sccp",
    "--licm",
    "--newgvn",
    "--inline",
    "--simplifycfg",
    "--loop-reroll",
    "--slsr",
    "--load-store-vectorizer",
    "--early-cse",
    "--jump-threading",
    "--sroa",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--early-cse-memssa",
    "--loop-fusion",
    "--newgvn",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--sccp",
    "--instcombine",
    "--flattencfg",
    "--globalopt",
    "--gvn-hoist",
    "--correlated-propagation",
    "--die",
    "--elim-avail-extern",
    "--dse",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--loop-fusion",
    "--newgvn",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--instcombine",
    "--elim-avail-extern",
    "--mldst-motion",
    "--elim-avail-extern",
    "--sccp",
    "--instcombine",
    "--flattencfg",
    "--globalopt",
    "--gvn-hoist",
    "--correlated-propagation",
    "--die",
    "--elim-avail-extern",
    "--dse",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--sroa",
    "--bdce",
    "--dse",
    "--dce",
    "--loop-simplifycfg",
    "--dce",
    "--elim-avail-extern",
    "--inline",
    "--newgvn",
    "--inline",
    "--licm",
    "--ipsccp",
    "--die",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--sccp",
    "--instcombine",
    "--elim-avail-extern",
    "--mldst-motion",
    "--elim-avail-extern",
    "--sccp",
    "--instcombine",
    "--flattencfg",
    "--globalopt",
    "--gvn-hoist",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--early-cse-memssa",
    "--loop-fusion",
    "--newgvn",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--instcombine",
    "--elim-avail-extern",
    "--mldst-motion",
    "--elim-avail-extern",
    "--sccp",
    "--instcombine",
    "--flattencfg",
    "--globalopt",
    "--flattencfg",
    "--gvn-hoist",
    "--jump-threading",
    "--die",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplify",
          "--coro-elide",
          "--elim-avail-extern",
          "--lower-guard-intrinsic",
          "--bdce",
          "--jump-threading",
          "--div-rem-pairs",
          "--mem2reg",
          "--lowerswitch",
          "--adce",
          "--inline",
          "--deadargelim",
          "--pgo-memop-opt",
          "--instsimplify",
          "--sancov",
          "--strip-dead-prototypes",
          "--correlated-propagation",
          "--mergeicmps",
          "--loop-versioning",
          "--gvn-hoist",
          "--lcssa",
          "--lower-constant-intrinsics",
          "--ipconstprop",
          "--loop-idiom"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplify",
      "--coro-elide",
      "--elim-avail-extern",
      "--lower-guard-intrinsic",
      "--bdce",
      "--jump-threading",
      "--div-rem-pairs",
      "--mem2reg",
      "--lowerswitch",
      "--adce",
      "--inline",
      "--deadargelim",
      "--pgo-memop-opt",
      "--instsimplify",
      "--sancov",
      "--strip-dead-prototypes",
      "--correlated-propagation",
      "--mergeicmps",
      "--loop-versioning",
      "--gvn-hoist",
      "--lcssa",
      "--lower-constant-intrinsics",
      "--ipconstprop",
      "--loop-idiom"
    ],
    "performance_vs_Oz": "+9.2%"
  }
}