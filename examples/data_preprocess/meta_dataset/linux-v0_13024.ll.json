{
  "program_id": "linux-v0_13024.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 14,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 3,
    "oneSuccessor": 20,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 1,
    "BranchCount": 27,
    "returnInt": 18,
    "CriticalCount": 3,
    "NumEdges": 34,
    "const32Bit": 36,
    "const64Bit": 1,
    "numConstZeroes": 11,
    "numConstOnes": 24,
    "UncondBranches": 20,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 20,
    "NumAndInst": 2,
    "BlockMid": 0,
    "BlockLow": 42,
    "NumBitCastInst": 0,
    "NumBrInst": 27,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 7,
    "NumLShrInst": 1,
    "NumLoadInst": 34,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 15,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 27,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 2,
    "NumZExtInst": 1,
    "TotalBlocks": 42,
    "TotalInsts": 168,
    "TotalMemInst": 110,
    "TotalFuncs": 23,
    "ArgsPhi": 2,
    "testUnary": 56
  },
  "baseline_oz_instcount": 174,
  "knowledge_base_entry": [
    "--inferattrs",
    "--newgvn",
    "--elim-avail-extern",
    "--die",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--elim-avail-extern",
    "--bdce",
    "--early-cse-memssa",
    "--mldst-motion",
    "--jump-threading",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--dse",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unswitch",
          "--called-value-propagation",
          "--argpromotion",
          "--partial-inliner",
          "--lower-expect",
          "--correlated-propagation",
          "--aggressive-instcombine",
          "--ipsccp",
          "--loop-sink",
          "--functionattrs",
          "--infer-address-spaces",
          "--inject-tli-mappings",
          "--pgo-memop-opt",
          "--rpo-functionattrs",
          "--float2int",
          "--insert-gcov-profiling",
          "--guard-widening",
          "--coro-elide",
          "--inferattrs",
          "--always-inline",
          "--instcombine",
          "--loop-instsimplify",
          "--early-cse",
          "--speculative-execution"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unswitch",
      "--called-value-propagation",
      "--argpromotion",
      "--partial-inliner",
      "--lower-expect",
      "--correlated-propagation",
      "--aggressive-instcombine",
      "--ipsccp",
      "--loop-sink",
      "--functionattrs",
      "--infer-address-spaces",
      "--inject-tli-mappings",
      "--pgo-memop-opt",
      "--rpo-functionattrs",
      "--float2int",
      "--insert-gcov-profiling",
      "--guard-widening",
      "--coro-elide",
      "--inferattrs",
      "--always-inline",
      "--instcombine",
      "--loop-instsimplify",
      "--early-cse",
      "--speculative-execution"
    ],
    "performance_vs_Oz": "+5.7%"
  }
}