{
  "program_id": "linux-v0_2776.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 84,
    "onePredOneSuc": 67,
    "onePredTwoSuc": 15,
    "oneSuccessor": 80,
    "twoPred": 27,
    "twoPredOneSuc": 11,
    "twoEach": 9,
    "twoSuccessor": 33,
    "morePreds": 4,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 123,
    "BeginPhi": 4,
    "BranchCount": 111,
    "returnInt": 28,
    "CriticalCount": 22,
    "NumEdges": 152,
    "const32Bit": 512,
    "const64Bit": 44,
    "numConstZeroes": 300,
    "numConstOnes": 114,
    "UncondBranches": 80,
    "binaryConstArg": 45,
    "NumAShrInst": 2,
    "NumAddInst": 6,
    "NumAllocaInst": 58,
    "NumAndInst": 15,
    "BlockMid": 13,
    "BlockLow": 114,
    "NumBitCastInst": 5,
    "NumBrInst": 111,
    "NumCallInst": 64,
    "NumGetElementPtrInst": 179,
    "NumICmpInst": 30,
    "NumLShrInst": 1,
    "NumLoadInst": 275,
    "NumMulInst": 3,
    "NumOrInst": 3,
    "NumPHIInst": 4,
    "NumRetInst": 12,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 93,
    "NumSubInst": 6,
    "NumTruncInst": 32,
    "NumXorInst": 12,
    "NumZExtInst": 35,
    "TotalBlocks": 127,
    "TotalInsts": 961,
    "TotalMemInst": 669,
    "TotalFuncs": 32,
    "ArgsPhi": 8,
    "testUnary": 413
  },
  "baseline_oz_instcount": 963,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--mergefunc",
    "--aggressive-instcombine",
    "--jump-threading",
    "--early-cse-memssa",
    "--newgvn",
    "--inline",
    "--adce",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globaldce",
          "--indvars",
          "--aggressive-instcombine",
          "--barrier",
          "--loop-simplify",
          "--reassociate",
          "--argpromotion",
          "--lower-expect",
          "--dce",
          "--coro-cleanup",
          "--loop-distribute",
          "--partial-inliner",
          "--strip-debug-declare",
          "--constmerge",
          "--inline",
          "--infer-address-spaces",
          "--loop-data-prefetch",
          "--consthoist",
          "--loop-versioning",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globaldce",
      "--indvars",
      "--aggressive-instcombine",
      "--barrier",
      "--loop-simplify",
      "--reassociate",
      "--argpromotion",
      "--lower-expect",
      "--dce",
      "--coro-cleanup",
      "--loop-distribute",
      "--partial-inliner",
      "--strip-debug-declare",
      "--constmerge",
      "--inline",
      "--infer-address-spaces",
      "--loop-data-prefetch",
      "--consthoist",
      "--loop-versioning",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}