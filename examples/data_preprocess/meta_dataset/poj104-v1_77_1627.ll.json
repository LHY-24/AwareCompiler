{
  "program_id": "poj104-v1_77_1627.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 5,
    "oneSuccessor": 21,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 13,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 19,
    "CriticalCount": 7,
    "NumEdges": 47,
    "const32Bit": 78,
    "const64Bit": 56,
    "numConstZeroes": 30,
    "numConstOnes": 61,
    "UncondBranches": 21,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 45,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 53,
    "NumBitCastInst": 54,
    "NumBrInst": 34,
    "NumCallInst": 74,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 105,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 54,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 60,
    "TotalInsts": 462,
    "TotalMemInst": 310,
    "TotalFuncs": 43,
    "ArgsPhi": 0,
    "testUnary": 220
  },
  "baseline_oz_instcount": 104,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--instcombine",
    "--load-store-vectorizer",
    "--lower-expect",
    "--bdce",
    "--elim-avail-extern",
    "--flattencfg",
    "--load-store-vectorizer",
    "--slsr",
    "--instcombine",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--instsimplify",
    "--mem2reg",
    "--inline",
    "--gvn-hoist",
    "--loop-deletion",
    "--mem2reg",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--bdce",
    "--loop-instsimplify",
    "--simplifycfg",
    "--die",
    "--sroa",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--constprop",
          "--lower-constant-intrinsics",
          "--functionattrs",
          "--loop-instsimplify",
          "--coro-elide",
          "--constmerge",
          "--coro-cleanup",
          "--instsimplify",
          "--dce",
          "--inject-tli-mappings",
          "--reassociate",
          "--early-cse-memssa",
          "--slsr",
          "--loop-unroll-and-jam",
          "--loop-fusion",
          "--attributor",
          "--redundant-dbg-inst-elim",
          "--loop-guard-widening",
          "--lowerinvoke",
          "--early-cse",
          "--div-rem-pairs",
          "--callsite-splitting",
          "--loop-versioning-licm",
          "--loweratomic",
          "--instcombine",
          "--partial-inliner",
          "--name-anon-globals",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--constprop",
      "--lower-constant-intrinsics",
      "--functionattrs",
      "--loop-instsimplify",
      "--coro-elide",
      "--constmerge",
      "--coro-cleanup",
      "--instsimplify",
      "--dce",
      "--inject-tli-mappings",
      "--reassociate",
      "--early-cse-memssa",
      "--slsr",
      "--loop-unroll-and-jam",
      "--loop-fusion",
      "--attributor",
      "--redundant-dbg-inst-elim",
      "--loop-guard-widening",
      "--lowerinvoke",
      "--early-cse",
      "--div-rem-pairs",
      "--callsite-splitting",
      "--loop-versioning-licm",
      "--loweratomic",
      "--instcombine",
      "--partial-inliner",
      "--name-anon-globals",
      "--inline"
    ],
    "performance_vs_Oz": "+4.8%"
  }
}