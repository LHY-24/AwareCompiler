{
  "program_id": "opencv-v0_41.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 1,
    "oneSuccessor": 0,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 6,
    "const32Bit": 4,
    "const64Bit": 0,
    "numConstZeroes": 2,
    "numConstOnes": 2,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 2,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 14,
    "NumBitCastInst": 2,
    "NumBrInst": 0,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 0,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 14,
    "TotalInsts": 28,
    "TotalMemInst": 12,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 5
  },
  "baseline_oz_instcount": 28,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--prune-eh",
    "--inline",
    "--aggressive-instcombine",
    "--lower-expect",
    "--nary-reassociate",
    "--mem2reg",
    "--early-cse-memssa",
    "--loop-rotate",
    "--licm",
    "--prune-eh",
    "--jump-threading",
    "--mergefunc",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lcssa",
          "--coro-split",
          "--consthoist",
          "--mem2reg",
          "--loop-reroll",
          "--libcalls-shrinkwrap",
          "--loop-idiom",
          "--lowerinvoke",
          "--mergereturn",
          "--loop-predication",
          "--float2int",
          "--loop-unroll",
          "--loop-guard-widening",
          "--early-cse",
          "--loop-instsimplify",
          "--loop-distribute",
          "--loop-simplifycfg",
          "--ipsccp",
          "--loop-load-elim",
          "--redundant-dbg-inst-elim",
          "--instsimplify",
          "--coro-cleanup",
          "--globalopt",
          "--ee-instrument",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+28.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lcssa",
      "--coro-split",
      "--consthoist",
      "--mem2reg",
      "--loop-reroll",
      "--libcalls-shrinkwrap",
      "--loop-idiom",
      "--lowerinvoke",
      "--mergereturn",
      "--loop-predication",
      "--float2int",
      "--loop-unroll",
      "--loop-guard-widening",
      "--early-cse",
      "--loop-instsimplify",
      "--loop-distribute",
      "--loop-simplifycfg",
      "--ipsccp",
      "--loop-load-elim",
      "--redundant-dbg-inst-elim",
      "--instsimplify",
      "--coro-cleanup",
      "--globalopt",
      "--ee-instrument",
      "--barrier"
    ],
    "performance_vs_Oz": "+28.6%"
  }
}