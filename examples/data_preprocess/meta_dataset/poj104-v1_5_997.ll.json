{
  "program_id": "poj104-v1_5_997.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 33,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 15,
    "oneSuccessor": 27,
    "twoPred": 15,
    "twoPredOneSuc": 7,
    "twoEach": 4,
    "twoSuccessor": 24,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 19,
    "CriticalCount": 20,
    "NumEdges": 75,
    "const32Bit": 78,
    "const64Bit": 69,
    "numConstZeroes": 42,
    "numConstOnes": 52,
    "UncondBranches": 27,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 39,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 64,
    "NumBitCastInst": 58,
    "NumBrInst": 51,
    "NumCallInst": 71,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 110,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 20,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 45,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 71,
    "TotalInsts": 498,
    "TotalMemInst": 302,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 237
  },
  "baseline_oz_instcount": 145,
  "knowledge_base_entry": [
    "--early-cse",
    "--mergefunc",
    "--lower-expect",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--mldst-motion",
    "--sroa",
    "--licm",
    "--dse",
    "--reassociate",
    "--instcombine",
    "--prune-eh",
    "--elim-avail-extern",
    "--instsimplify",
    "--mergefunc",
    "--gvn-hoist",
    "--loop-reroll",
    "--simplifycfg",
    "--dse",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--globalopt",
    "--jump-threading",
    "--bdce",
    "--newgvn",
    "--loop-fusion",
    "--indvars",
    "-loop-reduce",
    "--instcombine",
    "--early-cse",
    "--loop-fusion",
    "--nary-reassociate",
    "--loop-fusion",
    "--indvars",
    "--instcombine",
    "--early-cse",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--dse",
    "--inline",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--simplifycfg",
    "--dse",
    "--gvn-hoist",
    "--correlated-propagation",
    "--early-cse",
    "--slp-vectorizer",
    "--mergefunc",
    "--load-store-vectorizer",
    "--instsimplify",
    "--inline",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--simplifycfg",
    "--dse",
    "--gvn-hoist",
    "--correlated-propagation",
    "--early-cse",
    "--ipsccp",
    "--sccp",
    "--instsimplify",
    "--loop-reroll",
    "--load-store-vectorizer",
    "--instsimplify",
    "--inline",
    "--licm",
    "--lower-constant-intrinsics",
    "--gvn",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--nary-reassociate",
    "--instcombine",
    "--sroa",
    "--loop-reroll",
    "--early-cse-memssa",
    "--mem2reg",
    "--loop-simplifycfg",
    "--prune-eh",
    "--early-cse-memssa",
    "--adce",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--elim-avail-extern",
          "--simplifycfg",
          "--forceattrs",
          "--loop-fusion",
          "--jump-threading",
          "--loop-vectorize",
          "--reassociate",
          "--separate-const-offset-from-gep",
          "--sroa",
          "--add-discriminators",
          "--lower-constant-intrinsics",
          "--called-value-propagation",
          "--globalopt",
          "--cross-dso-cfi",
          "--mem2reg",
          "--sccp",
          "--lower-matrix-intrinsics",
          "--functionattrs",
          "--aggressive-instcombine",
          "--flattencfg",
          "--sancov",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--elim-avail-extern",
      "--simplifycfg",
      "--forceattrs",
      "--loop-fusion",
      "--jump-threading",
      "--loop-vectorize",
      "--reassociate",
      "--separate-const-offset-from-gep",
      "--sroa",
      "--add-discriminators",
      "--lower-constant-intrinsics",
      "--called-value-propagation",
      "--globalopt",
      "--cross-dso-cfi",
      "--mem2reg",
      "--sccp",
      "--lower-matrix-intrinsics",
      "--functionattrs",
      "--aggressive-instcombine",
      "--flattencfg",
      "--sancov",
      "--barrier"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}