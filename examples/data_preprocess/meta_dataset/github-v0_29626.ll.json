{
  "program_id": "github-v0_29626.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 12,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 26,
    "const32Bit": 42,
    "const64Bit": 46,
    "numConstZeroes": 48,
    "numConstOnes": 24,
    "UncondBranches": 12,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 13,
    "NumAndInst": 4,
    "BlockMid": 5,
    "BlockLow": 18,
    "NumBitCastInst": 8,
    "NumBrInst": 19,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 7,
    "NumLShrInst": 4,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 2,
    "TotalBlocks": 23,
    "TotalInsts": 161,
    "TotalMemInst": 100,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 58
  },
  "baseline_oz_instcount": 161,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--dce",
    "--sroa",
    "--bdce",
    "--early-cse-memssa",
    "--loop-fusion",
    "--newgvn",
    "--inline",
    "--simplifycfg",
    "--jump-threading",
    "--die",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--loop-versioning-licm",
          "--lcssa",
          "--bdce",
          "--instnamer",
          "--early-cse",
          "--div-rem-pairs",
          "--coro-elide",
          "--strip-debug-declare",
          "--loop-simplify",
          "--aggressive-instcombine",
          "--prune-eh",
          "--callsite-splitting",
          "--tailcallelim",
          "--post-inline-ee-instrument",
          "--mem2reg",
          "--barrier",
          "--lowerinvoke",
          "--functionattrs",
          "--argpromotion",
          "--irce",
          "--simplifycfg",
          "--ipconstprop",
          "--loop-unswitch",
          "--add-discriminators",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--loop-versioning-licm",
      "--lcssa",
      "--bdce",
      "--instnamer",
      "--early-cse",
      "--div-rem-pairs",
      "--coro-elide",
      "--strip-debug-declare",
      "--loop-simplify",
      "--aggressive-instcombine",
      "--prune-eh",
      "--callsite-splitting",
      "--tailcallelim",
      "--post-inline-ee-instrument",
      "--mem2reg",
      "--barrier",
      "--lowerinvoke",
      "--functionattrs",
      "--argpromotion",
      "--irce",
      "--simplifycfg",
      "--ipconstprop",
      "--loop-unswitch",
      "--add-discriminators",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}