{
  "program_id": "linux-v0_4470.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 55,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 12,
    "oneSuccessor": 53,
    "twoPred": 14,
    "twoPredOneSuc": 8,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 80,
    "BeginPhi": 2,
    "BranchCount": 71,
    "returnInt": 4,
    "CriticalCount": 13,
    "NumEdges": 89,
    "const32Bit": 168,
    "const64Bit": 18,
    "numConstZeroes": 63,
    "numConstOnes": 102,
    "UncondBranches": 53,
    "binaryConstArg": 35,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 63,
    "NumAndInst": 7,
    "BlockMid": 12,
    "BlockLow": 70,
    "NumBitCastInst": 3,
    "NumBrInst": 71,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 28,
    "NumLShrInst": 2,
    "NumLoadInst": 134,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 11,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 72,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 24,
    "NumZExtInst": 15,
    "TotalBlocks": 82,
    "TotalInsts": 509,
    "TotalMemInst": 333,
    "TotalFuncs": 18,
    "ArgsPhi": 4,
    "testUnary": 225
  },
  "baseline_oz_instcount": 503,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--ipsccp",
    "--mergefunc",
    "--instsimplify",
    "--adce",
    "--lower-expect",
    "--instsimplify",
    "--simplifycfg",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--redundant-dbg-inst-elim",
          "--loop-distribute",
          "--dse",
          "--ipsccp",
          "--loop-versioning-licm",
          "--lower-matrix-intrinsics",
          "--aggressive-instcombine",
          "--loop-unroll",
          "--sink",
          "--instsimplify",
          "--irce",
          "--mergeicmps",
          "--sroa",
          "--loop-deletion",
          "--loop-fusion",
          "--attributor",
          "--prune-eh",
          "--coro-early",
          "--inferattrs",
          "--early-cse",
          "--canonicalize-aliases",
          "--speculative-execution",
          "--libcalls-shrinkwrap",
          "--correlated-propagation",
          "--mergefunc",
          "--post-inline-ee-instrument",
          "--elim-avail-extern",
          "--licm",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--redundant-dbg-inst-elim",
      "--loop-distribute",
      "--dse",
      "--ipsccp",
      "--loop-versioning-licm",
      "--lower-matrix-intrinsics",
      "--aggressive-instcombine",
      "--loop-unroll",
      "--sink",
      "--instsimplify",
      "--irce",
      "--mergeicmps",
      "--sroa",
      "--loop-deletion",
      "--loop-fusion",
      "--attributor",
      "--prune-eh",
      "--coro-early",
      "--inferattrs",
      "--early-cse",
      "--canonicalize-aliases",
      "--speculative-execution",
      "--libcalls-shrinkwrap",
      "--correlated-propagation",
      "--mergefunc",
      "--post-inline-ee-instrument",
      "--elim-avail-extern",
      "--licm",
      "--globaldce"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}