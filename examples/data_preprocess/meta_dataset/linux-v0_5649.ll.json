{
  "program_id": "linux-v0_5649.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 37,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 11,
    "oneSuccessor": 32,
    "twoPred": 14,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 24,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 75,
    "BeginPhi": 1,
    "BranchCount": 56,
    "returnInt": 18,
    "CriticalCount": 20,
    "NumEdges": 80,
    "const32Bit": 187,
    "const64Bit": 7,
    "numConstZeroes": 78,
    "numConstOnes": 61,
    "UncondBranches": 32,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 58,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 67,
    "NumBitCastInst": 19,
    "NumBrInst": 56,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 53,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 140,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 81,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 1,
    "NumZExtInst": 10,
    "TotalBlocks": 76,
    "TotalInsts": 522,
    "TotalMemInst": 373,
    "TotalFuncs": 37,
    "ArgsPhi": 2,
    "testUnary": 238
  },
  "baseline_oz_instcount": 522,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--lower-expect",
    "--mem2reg",
    "--globalopt",
    "--lower-expect",
    "--nary-reassociate",
    "--ipsccp",
    "--newgvn",
    "--mldst-motion",
    "--jump-threading",
    "--dce",
    "--early-cse",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--irce",
          "--strip-dead-prototypes",
          "--newgvn",
          "--jump-threading",
          "--coro-cleanup",
          "--early-cse-memssa",
          "--speculative-execution",
          "--loop-instsimplify",
          "--add-discriminators",
          "--loop-simplifycfg",
          "--loop-sink",
          "--aggressive-instcombine",
          "--loop-versioning-licm",
          "--sancov",
          "--strip",
          "--flattencfg",
          "--rewrite-statepoints-for-gc",
          "--strip-nondebug",
          "--callsite-splitting",
          "--mergeicmps",
          "--guard-widening",
          "--simple-loop-unswitch",
          "--forceattrs",
          "--tailcallelim",
          "--argpromotion",
          "--attributor",
          "--functionattrs",
          "--loweratomic",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--irce",
      "--strip-dead-prototypes",
      "--newgvn",
      "--jump-threading",
      "--coro-cleanup",
      "--early-cse-memssa",
      "--speculative-execution",
      "--loop-instsimplify",
      "--add-discriminators",
      "--loop-simplifycfg",
      "--loop-sink",
      "--aggressive-instcombine",
      "--loop-versioning-licm",
      "--sancov",
      "--strip",
      "--flattencfg",
      "--rewrite-statepoints-for-gc",
      "--strip-nondebug",
      "--callsite-splitting",
      "--mergeicmps",
      "--guard-widening",
      "--simple-loop-unswitch",
      "--forceattrs",
      "--tailcallelim",
      "--argpromotion",
      "--attributor",
      "--functionattrs",
      "--loweratomic",
      "--always-inline"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}