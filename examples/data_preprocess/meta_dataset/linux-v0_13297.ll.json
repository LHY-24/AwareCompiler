{
  "program_id": "linux-v0_13297.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 62,
    "onePredOneSuc": 46,
    "onePredTwoSuc": 11,
    "oneSuccessor": 61,
    "twoPred": 17,
    "twoPredOneSuc": 6,
    "twoEach": 6,
    "twoSuccessor": 19,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 98,
    "BeginPhi": 0,
    "BranchCount": 80,
    "returnInt": 5,
    "CriticalCount": 8,
    "NumEdges": 104,
    "const32Bit": 241,
    "const64Bit": 23,
    "numConstZeroes": 132,
    "numConstOnes": 116,
    "UncondBranches": 61,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 78,
    "NumAndInst": 2,
    "BlockMid": 10,
    "BlockLow": 88,
    "NumBitCastInst": 30,
    "NumBrInst": 80,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 23,
    "NumLShrInst": 0,
    "NumLoadInst": 177,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 107,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 8,
    "NumZExtInst": 4,
    "TotalBlocks": 98,
    "TotalInsts": 660,
    "TotalMemInst": 481,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 297
  },
  "baseline_oz_instcount": 663,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--gvn",
    "--newgvn",
    "--globalopt",
    "--inline",
    "--ipsccp",
    "--lower-expect",
    "--slp-vectorizer",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--globalsplit",
          "--post-inline-ee-instrument",
          "--lower-guard-intrinsic",
          "--dce",
          "--constprop",
          "--callsite-splitting",
          "--rewrite-statepoints-for-gc",
          "--lower-constant-intrinsics",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--globalsplit",
      "--post-inline-ee-instrument",
      "--lower-guard-intrinsic",
      "--dce",
      "--constprop",
      "--callsite-splitting",
      "--rewrite-statepoints-for-gc",
      "--lower-constant-intrinsics",
      "--always-inline"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}