{
  "program_id": "github-v0_39246.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 3,
    "oneSuccessor": 16,
    "twoPred": 7,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 8,
    "CriticalCount": 3,
    "NumEdges": 30,
    "const32Bit": 21,
    "const64Bit": 10,
    "numConstZeroes": 18,
    "numConstOnes": 13,
    "UncondBranches": 16,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 21,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 24,
    "TotalInsts": 136,
    "TotalMemInst": 86,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 58
  },
  "baseline_oz_instcount": 137,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--early-cse",
    "--ipsccp",
    "--dse",
    "--sroa",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--coro-cleanup",
          "--aggressive-instcombine",
          "--mergereturn",
          "--ipconstprop",
          "--lower-guard-intrinsic",
          "--infer-address-spaces",
          "--nary-reassociate",
          "--memcpyopt",
          "--sancov",
          "--slp-vectorizer",
          "--early-cse",
          "--constprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--coro-cleanup",
      "--aggressive-instcombine",
      "--mergereturn",
      "--ipconstprop",
      "--lower-guard-intrinsic",
      "--infer-address-spaces",
      "--nary-reassociate",
      "--memcpyopt",
      "--sancov",
      "--slp-vectorizer",
      "--early-cse",
      "--constprop"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}