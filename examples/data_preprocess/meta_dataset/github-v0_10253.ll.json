{
  "program_id": "github-v0_10253.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 8,
    "onePred": 8,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 0,
    "oneSuccessor": 8,
    "twoPred": 8,
    "twoPredOneSuc": 0,
    "twoEach": 8,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 8,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 8,
    "BranchCount": 16,
    "returnInt": 5,
    "CriticalCount": 8,
    "NumEdges": 24,
    "const32Bit": 73,
    "const64Bit": 29,
    "numConstZeroes": 32,
    "numConstOnes": 21,
    "UncondBranches": 8,
    "binaryConstArg": 51,
    "NumAShrInst": 3,
    "NumAddInst": 44,
    "NumAllocaInst": 0,
    "NumAndInst": 3,
    "BlockMid": 10,
    "BlockLow": 9,
    "NumBitCastInst": 16,
    "NumBrInst": 16,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 40,
    "NumMulInst": 4,
    "NumOrInst": 16,
    "NumPHIInst": 16,
    "NumRetInst": 3,
    "NumSExtInst": 27,
    "NumSelectInst": 2,
    "NumShlInst": 8,
    "NumStoreInst": 11,
    "NumSubInst": 4,
    "NumTruncInst": 4,
    "NumXorInst": 6,
    "NumZExtInst": 19,
    "TotalBlocks": 19,
    "TotalInsts": 329,
    "TotalMemInst": 123,
    "TotalFuncs": 8,
    "ArgsPhi": 32,
    "testUnary": 106
  },
  "baseline_oz_instcount": 297,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse-memssa",
    "--dse",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--flattencfg",
    "--newgvn",
    "--indvars",
    "--simplifycfg",
    "--early-cse",
    "--mergefunc",
    "--correlated-propagation",
    "--simplifycfg",
    "--sroa",
    "--loop-rotate",
    "--inline",
    "--gvn-hoist",
    "--nary-reassociate",
    "--indvars",
    "--simplifycfg",
    "--early-cse",
    "--mergefunc",
    "--correlated-propagation",
    "--simplifycfg",
    "--sroa",
    "--loop-rotate",
    "--inline",
    "--ipsccp",
    "--bdce",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--flattencfg",
    "--newgvn",
    "--indvars",
    "--slsr",
    "--instcombine",
    "--nary-reassociate",
    "--early-cse",
    "--prune-eh",
    "--aggressive-instcombine",
    "--ipsccp",
    "--globaldce",
    "--ipsccp",
    "--bdce",
    "--instcombine",
    "--loop-deletion",
    "--jump-threading",
    "-loop-reduce",
    "--mergefunc",
    "--instcombine",
    "--sccp",
    "--jump-threading",
    "--bdce",
    "--mergefunc",
    "--mergefunc",
    "--dse",
    "--dse",
    "--aggressive-instcombine",
    "--sroa",
    "--die",
    "--elim-avail-extern",
    "--reassociate",
    "--elim-avail-extern",
    "--early-cse",
    "--loop-instsimplify",
    "--mergefunc",
    "--early-cse",
    "--bdce",
    "--mergefunc",
    "-loop-reduce",
    "--early-cse",
    "--mergefunc",
    "--sroa",
    "--instcombine",
    "--globalopt",
    "--gvn",
    "--loop-simplifycfg",
    "--early-cse",
    "--simplifycfg",
    "-loop-reduce",
    "--slsr",
    "--jump-threading",
    "--loop-deletion",
    "--gvn",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--nary-reassociate",
          "--coro-elide",
          "--sroa",
          "--loop-unroll-and-jam",
          "--loop-deletion",
          "--loop-versioning-licm",
          "--speculative-execution",
          "--cross-dso-cfi",
          "--ee-instrument",
          "--mergefunc",
          "--lower-matrix-intrinsics",
          "--forceattrs",
          "--indvars",
          "--mergeicmps",
          "--simple-loop-unswitch",
          "--die",
          "--loop-predication",
          "--newgvn",
          "--gvn",
          "--loop-data-prefetch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--nary-reassociate",
      "--coro-elide",
      "--sroa",
      "--loop-unroll-and-jam",
      "--loop-deletion",
      "--loop-versioning-licm",
      "--speculative-execution",
      "--cross-dso-cfi",
      "--ee-instrument",
      "--mergefunc",
      "--lower-matrix-intrinsics",
      "--forceattrs",
      "--indvars",
      "--mergeicmps",
      "--simple-loop-unswitch",
      "--die",
      "--loop-predication",
      "--newgvn",
      "--gvn",
      "--loop-data-prefetch"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}