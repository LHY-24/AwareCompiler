{
  "program_id": "linux-v0_1573.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 89,
    "onePredOneSuc": 68,
    "onePredTwoSuc": 21,
    "oneSuccessor": 86,
    "twoPred": 35,
    "twoPredOneSuc": 15,
    "twoEach": 11,
    "twoSuccessor": 40,
    "morePreds": 2,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 135,
    "BeginPhi": 6,
    "BranchCount": 126,
    "returnInt": 3,
    "CriticalCount": 28,
    "NumEdges": 166,
    "const32Bit": 228,
    "const64Bit": 19,
    "numConstZeroes": 99,
    "numConstOnes": 161,
    "UncondBranches": 86,
    "binaryConstArg": 57,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 79,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 133,
    "NumBitCastInst": 2,
    "NumBrInst": 126,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 58,
    "NumLShrInst": 0,
    "NumLoadInst": 165,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 6,
    "NumRetInst": 15,
    "NumSExtInst": 29,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 107,
    "NumSubInst": 2,
    "NumTruncInst": 8,
    "NumXorInst": 54,
    "NumZExtInst": 26,
    "TotalBlocks": 141,
    "TotalInsts": 751,
    "TotalMemInst": 421,
    "TotalFuncs": 18,
    "ArgsPhi": 12,
    "testUnary": 309
  },
  "baseline_oz_instcount": 757,
  "knowledge_base_entry": [
    "--prune-eh",
    "--inline",
    "--prune-eh",
    "--instcombine",
    "--mergefunc",
    "--loop-instsimplify",
    "--jump-threading",
    "--globalopt",
    "--reassociate",
    "--dse",
    "--aggressive-instcombine",
    "--instsimplify",
    "--loop-simplifycfg",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--coro-early",
          "--globalopt",
          "--instsimplify",
          "--sccp",
          "--gvn-hoist",
          "--consthoist",
          "--lower-matrix-intrinsics",
          "--jump-threading",
          "--loop-simplifycfg",
          "--aggressive-instcombine",
          "--inferattrs",
          "--instnamer",
          "--guard-widening",
          "--deadargelim",
          "--lower-widenable-condition",
          "--infer-address-spaces",
          "--loop-unswitch",
          "--nary-reassociate",
          "--loweratomic",
          "--barrier",
          "--always-inline",
          "--irce",
          "--strip-nondebug",
          "--inject-tli-mappings"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--coro-early",
      "--globalopt",
      "--instsimplify",
      "--sccp",
      "--gvn-hoist",
      "--consthoist",
      "--lower-matrix-intrinsics",
      "--jump-threading",
      "--loop-simplifycfg",
      "--aggressive-instcombine",
      "--inferattrs",
      "--instnamer",
      "--guard-widening",
      "--deadargelim",
      "--lower-widenable-condition",
      "--infer-address-spaces",
      "--loop-unswitch",
      "--nary-reassociate",
      "--loweratomic",
      "--barrier",
      "--always-inline",
      "--irce",
      "--strip-nondebug",
      "--inject-tli-mappings"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}