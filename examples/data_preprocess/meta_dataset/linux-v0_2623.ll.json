{
  "program_id": "linux-v0_2623.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 65,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 15,
    "oneSuccessor": 60,
    "twoPred": 14,
    "twoPredOneSuc": 5,
    "twoEach": 7,
    "twoSuccessor": 25,
    "morePreds": 11,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 111,
    "BeginPhi": 0,
    "BranchCount": 85,
    "returnInt": 20,
    "CriticalCount": 25,
    "NumEdges": 137,
    "const32Bit": 176,
    "const64Bit": 51,
    "numConstZeroes": 32,
    "numConstOnes": 131,
    "UncondBranches": 60,
    "binaryConstArg": 38,
    "NumAShrInst": 2,
    "NumAddInst": 18,
    "NumAllocaInst": 97,
    "NumAndInst": 12,
    "BlockMid": 14,
    "BlockLow": 97,
    "NumBitCastInst": 7,
    "NumBrInst": 85,
    "NumCallInst": 70,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 20,
    "NumLShrInst": 3,
    "NumLoadInst": 173,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 5,
    "NumSelectInst": 1,
    "NumShlInst": 6,
    "NumStoreInst": 146,
    "NumSubInst": 1,
    "NumTruncInst": 20,
    "NumXorInst": 0,
    "NumZExtInst": 22,
    "TotalBlocks": 111,
    "TotalInsts": 762,
    "TotalMemInst": 503,
    "TotalFuncs": 26,
    "ArgsPhi": 0,
    "testUnary": 351
  },
  "baseline_oz_instcount": 731,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--early-cse-memssa",
    "--flattencfg",
    "--early-cse-memssa",
    "--slsr",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--sroa",
    "--simplifycfg",
    "--loop-instsimplify",
    "--mergefunc",
    "--gvn",
    "--globalopt",
    "--loop-deletion",
    "--gvn",
    "--gvn",
    "--aggressive-instcombine",
    "--ipsccp",
    "--die",
    "--reassociate",
    "--ipsccp",
    "--elim-avail-extern",
    "--instcombine",
    "--early-cse",
    "--nary-reassociate",
    "--mem2reg",
    "--instcombine",
    "--correlated-propagation",
    "--bdce",
    "--die",
    "--reassociate",
    "--ipsccp",
    "--loop-instsimplify",
    "--sroa",
    "--simplifycfg",
    "--loop-instsimplify",
    "--mergefunc",
    "--gvn",
    "--globalopt",
    "--loop-deletion",
    "--gvn",
    "--gvn",
    "--aggressive-instcombine",
    "--ipsccp",
    "--die",
    "--sccp",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--lower-expect",
    "--newgvn",
    "--adce",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--simple-loop-unswitch",
          "--sccp",
          "--coro-split",
          "--globaldce",
          "--inferattrs",
          "--aggressive-instcombine",
          "--bdce",
          "--scalarizer",
          "--flattencfg",
          "--globalopt",
          "--memcpyopt",
          "--mergeicmps",
          "--loop-unroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--simple-loop-unswitch",
      "--sccp",
      "--coro-split",
      "--globaldce",
      "--inferattrs",
      "--aggressive-instcombine",
      "--bdce",
      "--scalarizer",
      "--flattencfg",
      "--globalopt",
      "--memcpyopt",
      "--mergeicmps",
      "--loop-unroll"
    ],
    "performance_vs_Oz": "+2.3%"
  }
}