{
  "program_id": "poj104-v1_15_1408.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 5,
    "oneSuccessor": 14,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 4,
    "CriticalCount": 6,
    "NumEdges": 34,
    "const32Bit": 34,
    "const64Bit": 16,
    "numConstZeroes": 10,
    "numConstOnes": 22,
    "UncondBranches": 14,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 25,
    "NumBitCastInst": 16,
    "NumBrInst": 24,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 45,
    "NumMulInst": 9,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 6,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 27,
    "TotalInsts": 204,
    "TotalMemInst": 114,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 90
  },
  "baseline_oz_instcount": 108,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--early-cse-memssa",
    "--nary-reassociate",
    "-loop-reduce",
    "--instcombine",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--dce",
    "--lower-expect",
    "--dce",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--early-cse",
    "--sroa",
    "--loop-reroll",
    "--slsr",
    "--early-cse",
    "-loop-reduce",
    "--instcombine",
    "--prune-eh",
    "--instsimplify",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--bdce",
    "--mergefunc",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--dse",
    "--load-store-vectorizer",
    "--bdce",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--guard-widening",
          "--strip",
          "--strip-dead-prototypes",
          "--nary-reassociate",
          "--cross-dso-cfi",
          "--loop-sink",
          "--bdce",
          "--sccp",
          "--mem2reg",
          "--load-store-vectorizer",
          "--barrier",
          "--alignment-from-assumptions",
          "--always-inline",
          "--functionattrs",
          "--loop-fusion",
          "--globalopt",
          "--aggressive-instcombine",
          "--add-discriminators",
          "--mldst-motion",
          "--loop-unroll-and-jam",
          "--infer-address-spaces",
          "--jump-threading",
          "--slsr",
          "--early-cse",
          "--lcssa",
          "--newgvn",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--guard-widening",
      "--strip",
      "--strip-dead-prototypes",
      "--nary-reassociate",
      "--cross-dso-cfi",
      "--loop-sink",
      "--bdce",
      "--sccp",
      "--mem2reg",
      "--load-store-vectorizer",
      "--barrier",
      "--alignment-from-assumptions",
      "--always-inline",
      "--functionattrs",
      "--loop-fusion",
      "--globalopt",
      "--aggressive-instcombine",
      "--add-discriminators",
      "--mldst-motion",
      "--loop-unroll-and-jam",
      "--infer-address-spaces",
      "--jump-threading",
      "--slsr",
      "--early-cse",
      "--lcssa",
      "--newgvn",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}