{
  "program_id": "github-v0_43357.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 8,
    "onePred": 9,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 13,
    "twoPredOneSuc": 0,
    "twoEach": 9,
    "twoSuccessor": 15,
    "morePreds": 1,
    "BB03Phi": 8,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 8,
    "BranchCount": 23,
    "returnInt": 5,
    "CriticalCount": 21,
    "NumEdges": 38,
    "const32Bit": 36,
    "const64Bit": 0,
    "numConstZeroes": 22,
    "numConstOnes": 10,
    "UncondBranches": 8,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 18,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 2,
    "BlockLow": 26,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 5,
    "NumOrInst": 2,
    "NumPHIInst": 10,
    "NumRetInst": 5,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 9,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 28,
    "TotalInsts": 166,
    "TotalMemInst": 48,
    "TotalFuncs": 9,
    "ArgsPhi": 20,
    "testUnary": 45
  },
  "baseline_oz_instcount": 167,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--gvn-hoist",
    "-loop-reduce",
    "--gvn",
    "--flattencfg",
    "--mem2reg",
    "--ipsccp",
    "--bdce",
    "--mergefunc",
    "--ipsccp",
    "--dce",
    "--dse",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--sroa",
    "--reassociate",
    "--licm",
    "--mem2reg",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--lower-expect",
    "--sroa",
    "--memcpyopt",
    "--simplifycfg",
    "--gvn",
    "--ipsccp",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--pgo-memop-opt",
          "--globalsplit",
          "--loop-predication",
          "--licm",
          "--lower-guard-intrinsic",
          "--adce",
          "--lower-matrix-intrinsics",
          "--inject-tli-mappings",
          "--float2int",
          "--consthoist",
          "--post-inline-ee-instrument",
          "--loop-sink",
          "--barrier",
          "--lowerswitch",
          "--loop-reroll",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--pgo-memop-opt",
      "--globalsplit",
      "--loop-predication",
      "--licm",
      "--lower-guard-intrinsic",
      "--adce",
      "--lower-matrix-intrinsics",
      "--inject-tli-mappings",
      "--float2int",
      "--consthoist",
      "--post-inline-ee-instrument",
      "--loop-sink",
      "--barrier",
      "--lowerswitch",
      "--loop-reroll",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+3.0%"
  }
}