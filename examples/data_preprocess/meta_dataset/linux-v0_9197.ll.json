{
  "program_id": "linux-v0_9197.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 8,
    "oneSuccessor": 36,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 73,
    "BeginPhi": 0,
    "BranchCount": 54,
    "returnInt": 22,
    "CriticalCount": 5,
    "NumEdges": 72,
    "const32Bit": 221,
    "const64Bit": 18,
    "numConstZeroes": 92,
    "numConstOnes": 73,
    "UncondBranches": 36,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 59,
    "NumAndInst": 5,
    "BlockMid": 9,
    "BlockLow": 64,
    "NumBitCastInst": 10,
    "NumBrInst": 54,
    "NumCallInst": 53,
    "NumGetElementPtrInst": 61,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 153,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 89,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 4,
    "NumZExtInst": 7,
    "TotalBlocks": 73,
    "TotalInsts": 553,
    "TotalMemInst": 415,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 241
  },
  "baseline_oz_instcount": 553,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--simplifycfg",
    "--lower-expect",
    "--newgvn",
    "--adce",
    "--bdce",
    "--elim-avail-extern",
    "--mergefunc",
    "--ipsccp",
    "--adce",
    "--elim-avail-extern",
    "--mergefunc",
    "--early-cse",
    "--jump-threading",
    "--prune-eh",
    "--newgvn",
    "--gvn",
    "--ipsccp",
    "--adce",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--die",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--loweratomic",
          "--early-cse-memssa",
          "--coro-elide",
          "--sancov",
          "--float2int",
          "--pgo-memop-opt",
          "--ipsccp",
          "--dce",
          "--jump-threading",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--loweratomic",
      "--early-cse-memssa",
      "--coro-elide",
      "--sancov",
      "--float2int",
      "--pgo-memop-opt",
      "--ipsccp",
      "--dce",
      "--jump-threading",
      "--globaldce"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}