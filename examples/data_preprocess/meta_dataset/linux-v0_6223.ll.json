{
  "program_id": "linux-v0_6223.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 28,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 0,
    "oneSuccessor": 28,
    "twoPred": 23,
    "twoPredOneSuc": 0,
    "twoEach": 19,
    "twoSuccessor": 23,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 1,
    "BranchCount": 51,
    "returnInt": 6,
    "CriticalCount": 23,
    "NumEdges": 79,
    "const32Bit": 279,
    "const64Bit": 45,
    "numConstZeroes": 173,
    "numConstOnes": 50,
    "UncondBranches": 28,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 23,
    "NumAndInst": 13,
    "BlockMid": 8,
    "BlockLow": 51,
    "NumBitCastInst": 38,
    "NumBrInst": 51,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 110,
    "NumICmpInst": 24,
    "NumLShrInst": 1,
    "NumLoadInst": 130,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 1,
    "NumRetInst": 7,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 65,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 16,
    "TotalBlocks": 59,
    "TotalInsts": 534,
    "TotalMemInst": 351,
    "TotalFuncs": 15,
    "ArgsPhi": 2,
    "testUnary": 229
  },
  "baseline_oz_instcount": 534,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--gvn",
    "--licm",
    "--sccp",
    "--mem2reg",
    "--early-cse",
    "--sccp",
    "--lower-expect",
    "--jump-threading",
    "--loop-deletion",
    "--early-cse-memssa",
    "--mergefunc",
    "--dce",
    "--slp-vectorizer",
    "--bdce",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--reassociate",
    "--dce",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--bdce",
    "--newgvn",
    "--early-cse-memssa",
    "--bdce",
    "--dse",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--reassociate",
    "--reassociate",
    "--globalopt",
    "--loop-simplifycfg",
    "--bdce",
    "--sccp",
    "--early-cse-memssa",
    "--loop-deletion",
    "--sccp",
    "--adce",
    "--instsimplify",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--partially-inline-libcalls",
          "--loop-idiom",
          "--loop-sink",
          "--speculative-execution",
          "--adce",
          "--coro-elide",
          "--strip",
          "--prune-eh",
          "--partial-inliner",
          "--pgo-memop-opt",
          "--alignment-from-assumptions",
          "--loop-interchange",
          "--callsite-splitting",
          "--mergereturn",
          "--rpo-functionattrs",
          "--mergefunc",
          "--lower-widenable-condition",
          "--globalopt",
          "--add-discriminators",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--partially-inline-libcalls",
      "--loop-idiom",
      "--loop-sink",
      "--speculative-execution",
      "--adce",
      "--coro-elide",
      "--strip",
      "--prune-eh",
      "--partial-inliner",
      "--pgo-memop-opt",
      "--alignment-from-assumptions",
      "--loop-interchange",
      "--callsite-splitting",
      "--mergereturn",
      "--rpo-functionattrs",
      "--mergefunc",
      "--lower-widenable-condition",
      "--globalopt",
      "--add-discriminators",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}