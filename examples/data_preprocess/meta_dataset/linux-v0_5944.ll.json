{
  "program_id": "linux-v0_5944.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 76,
    "onePredOneSuc": 55,
    "onePredTwoSuc": 12,
    "oneSuccessor": 76,
    "twoPred": 27,
    "twoPredOneSuc": 5,
    "twoEach": 18,
    "twoSuccessor": 33,
    "morePreds": 11,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 126,
    "BeginPhi": 3,
    "BranchCount": 109,
    "returnInt": 14,
    "CriticalCount": 35,
    "NumEdges": 172,
    "const32Bit": 338,
    "const64Bit": 31,
    "numConstZeroes": 169,
    "numConstOnes": 130,
    "UncondBranches": 76,
    "binaryConstArg": 34,
    "NumAShrInst": 0,
    "NumAddInst": 18,
    "NumAllocaInst": 97,
    "NumAndInst": 2,
    "BlockMid": 17,
    "BlockLow": 112,
    "NumBitCastInst": 1,
    "NumBrInst": 109,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 111,
    "NumICmpInst": 33,
    "NumLShrInst": 1,
    "NumLoadInst": 253,
    "NumMulInst": 7,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 15,
    "NumSExtInst": 24,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 142,
    "NumSubInst": 2,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 42,
    "TotalBlocks": 129,
    "TotalInsts": 912,
    "TotalMemInst": 625,
    "TotalFuncs": 27,
    "ArgsPhi": 6,
    "testUnary": 429
  },
  "baseline_oz_instcount": 913,
  "knowledge_base_entry": [
    "--loweratomic",
    "--early-cse-memssa",
    "--bdce",
    "--gvn",
    "--dse",
    "--jump-threading",
    "--memcpyopt",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--simplifycfg",
          "--div-rem-pairs",
          "--correlated-propagation",
          "--argpromotion",
          "--strip-dead-prototypes",
          "--strip-debug-declare",
          "--inferattrs",
          "--inline",
          "--gvn-hoist",
          "--infer-address-spaces",
          "--lowerinvoke",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--simplifycfg",
      "--div-rem-pairs",
      "--correlated-propagation",
      "--argpromotion",
      "--strip-dead-prototypes",
      "--strip-debug-declare",
      "--inferattrs",
      "--inline",
      "--gvn-hoist",
      "--infer-address-spaces",
      "--lowerinvoke",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}