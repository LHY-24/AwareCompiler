{
  "program_id": "github-v0_10250.ll",
  "autophase_features": {
    "BBNumArgsHi": 8,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 4,
    "oneSuccessor": 8,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 4,
    "BBHiPhi": 4,
    "BBNoPhi": 12,
    "BeginPhi": 8,
    "BranchCount": 18,
    "returnInt": 6,
    "CriticalCount": 12,
    "NumEdges": 28,
    "const32Bit": 40,
    "const64Bit": 0,
    "numConstZeroes": 8,
    "numConstOnes": 10,
    "UncondBranches": 8,
    "binaryConstArg": 32,
    "NumAShrInst": 0,
    "NumAddInst": 30,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 18,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 14,
    "NumMulInst": 12,
    "NumOrInst": 0,
    "NumPHIInst": 28,
    "NumRetInst": 2,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 6,
    "NumSubInst": 4,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 20,
    "TotalInsts": 178,
    "TotalMemInst": 52,
    "TotalFuncs": 6,
    "ArgsPhi": 56,
    "testUnary": 30
  },
  "baseline_oz_instcount": 186,
  "knowledge_base_entry": [
    "--mem2reg",
    "--dse",
    "--globalopt",
    "--instcombine",
    "--jump-threading",
    "--gvn-hoist",
    "--slsr",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--libcalls-shrinkwrap",
          "--correlated-propagation",
          "--loop-versioning",
          "--coro-elide",
          "--die",
          "--nary-reassociate",
          "--dse",
          "--lowerinvoke",
          "--strip",
          "--called-value-propagation",
          "--callsite-splitting",
          "--ipsccp",
          "--rewrite-statepoints-for-gc",
          "--loop-interchange",
          "--dce",
          "--globaldce",
          "--slp-vectorizer",
          "--irce",
          "--newgvn",
          "--gvn-hoist",
          "--functionattrs",
          "--loop-simplify",
          "--mergereturn",
          "--redundant-dbg-inst-elim",
          "--sroa",
          "--jump-threading",
          "--instnamer",
          "--post-inline-ee-instrument",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--libcalls-shrinkwrap",
      "--correlated-propagation",
      "--loop-versioning",
      "--coro-elide",
      "--die",
      "--nary-reassociate",
      "--dse",
      "--lowerinvoke",
      "--strip",
      "--called-value-propagation",
      "--callsite-splitting",
      "--ipsccp",
      "--rewrite-statepoints-for-gc",
      "--loop-interchange",
      "--dce",
      "--globaldce",
      "--slp-vectorizer",
      "--irce",
      "--newgvn",
      "--gvn-hoist",
      "--functionattrs",
      "--loop-simplify",
      "--mergereturn",
      "--redundant-dbg-inst-elim",
      "--sroa",
      "--jump-threading",
      "--instnamer",
      "--post-inline-ee-instrument",
      "--reassociate"
    ],
    "performance_vs_Oz": "+11.8%"
  }
}