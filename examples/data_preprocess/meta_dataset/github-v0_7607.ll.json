{
  "program_id": "github-v0_7607.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 60,
    "const64Bit": 86,
    "numConstZeroes": 84,
    "numConstOnes": 31,
    "UncondBranches": 13,
    "binaryConstArg": 44,
    "NumAShrInst": 12,
    "NumAddInst": 4,
    "NumAllocaInst": 11,
    "NumAndInst": 14,
    "BlockMid": 8,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 42,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 48,
    "NumMulInst": 1,
    "NumOrInst": 17,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 10,
    "NumStoreInst": 21,
    "NumSubInst": 5,
    "NumTruncInst": 18,
    "NumXorInst": 0,
    "NumZExtInst": 34,
    "TotalBlocks": 24,
    "TotalInsts": 285,
    "TotalMemInst": 129,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 121
  },
  "baseline_oz_instcount": 285,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--early-cse",
    "--sccp",
    "--inline",
    "--aggressive-instcombine",
    "--loweratomic"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--scalarizer",
          "--pgo-memop-opt",
          "--lower-expect",
          "--guard-widening",
          "--loop-simplify",
          "--globaldce",
          "--coro-split",
          "--inferattrs",
          "--loop-rotate",
          "--gvn-hoist",
          "--correlated-propagation",
          "--bdce",
          "--flattencfg",
          "--licm",
          "--loop-versioning-licm",
          "--slsr",
          "--mem2reg",
          "--always-inline",
          "--early-cse-memssa",
          "--loop-sink",
          "--lcssa",
          "--loop-load-elim",
          "--newgvn",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--scalarizer",
      "--pgo-memop-opt",
      "--lower-expect",
      "--guard-widening",
      "--loop-simplify",
      "--globaldce",
      "--coro-split",
      "--inferattrs",
      "--loop-rotate",
      "--gvn-hoist",
      "--correlated-propagation",
      "--bdce",
      "--flattencfg",
      "--licm",
      "--loop-versioning-licm",
      "--slsr",
      "--mem2reg",
      "--always-inline",
      "--early-cse-memssa",
      "--loop-sink",
      "--lcssa",
      "--loop-load-elim",
      "--newgvn",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+7.7%"
  }
}