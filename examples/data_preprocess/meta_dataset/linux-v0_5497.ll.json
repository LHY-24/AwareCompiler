{
  "program_id": "linux-v0_5497.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 8,
    "onePred": 50,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 7,
    "oneSuccessor": 46,
    "twoPred": 17,
    "twoPredOneSuc": 1,
    "twoEach": 10,
    "twoSuccessor": 22,
    "morePreds": 1,
    "BB03Phi": 8,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 8,
    "BranchCount": 68,
    "returnInt": 13,
    "CriticalCount": 5,
    "NumEdges": 90,
    "const32Bit": 232,
    "const64Bit": 7,
    "numConstZeroes": 98,
    "numConstOnes": 80,
    "UncondBranches": 46,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 60,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 76,
    "NumBitCastInst": 20,
    "NumBrInst": 68,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 173,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 8,
    "NumRetInst": 17,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 78,
    "NumSubInst": 5,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 1,
    "TotalBlocks": 85,
    "TotalInsts": 580,
    "TotalMemInst": 420,
    "TotalFuncs": 29,
    "ArgsPhi": 16,
    "testUnary": 267
  },
  "baseline_oz_instcount": 582,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--gvn",
    "--jump-threading",
    "--early-cse-memssa",
    "--dse",
    "--inline",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--partially-inline-libcalls",
          "--gvn-hoist",
          "--lower-guard-intrinsic",
          "--mergeicmps",
          "--aggressive-instcombine",
          "--load-store-vectorizer",
          "--reassociate",
          "--early-cse",
          "--barrier",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--partially-inline-libcalls",
      "--gvn-hoist",
      "--lower-guard-intrinsic",
      "--mergeicmps",
      "--aggressive-instcombine",
      "--load-store-vectorizer",
      "--reassociate",
      "--early-cse",
      "--barrier",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}