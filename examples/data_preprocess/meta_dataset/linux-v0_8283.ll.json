{
  "program_id": "linux-v0_8283.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 47,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 9,
    "oneSuccessor": 42,
    "twoPred": 26,
    "twoPredOneSuc": 2,
    "twoEach": 22,
    "twoSuccessor": 34,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 83,
    "BeginPhi": 1,
    "BranchCount": 76,
    "returnInt": 9,
    "CriticalCount": 25,
    "NumEdges": 110,
    "const32Bit": 119,
    "const64Bit": 42,
    "numConstZeroes": 52,
    "numConstOnes": 69,
    "UncondBranches": 42,
    "binaryConstArg": 33,
    "NumAShrInst": 0,
    "NumAddInst": 26,
    "NumAllocaInst": 35,
    "NumAndInst": 2,
    "BlockMid": 7,
    "BlockLow": 77,
    "NumBitCastInst": 3,
    "NumBrInst": 76,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 36,
    "NumLShrInst": 0,
    "NumLoadInst": 109,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 8,
    "NumSExtInst": 30,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 100,
    "NumSubInst": 7,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 84,
    "TotalInsts": 525,
    "TotalMemInst": 330,
    "TotalFuncs": 21,
    "ArgsPhi": 2,
    "testUnary": 182
  },
  "baseline_oz_instcount": 526,
  "knowledge_base_entry": [
    "--adce",
    "--simplifycfg",
    "--inline",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--sroa",
    "--nary-reassociate",
    "--gvn-hoist",
    "--instcombine",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--slp-vectorizer",
          "--barrier",
          "--dse",
          "--guard-widening",
          "--strip-dead-prototypes",
          "--called-value-propagation",
          "--globalsplit",
          "--flattencfg",
          "--attributor",
          "--always-inline",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--slp-vectorizer",
      "--barrier",
      "--dse",
      "--guard-widening",
      "--strip-dead-prototypes",
      "--called-value-propagation",
      "--globalsplit",
      "--flattencfg",
      "--attributor",
      "--always-inline",
      "--reassociate"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}