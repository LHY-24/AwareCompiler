{
  "program_id": "github-v0_21902.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 6,
    "oneSuccessor": 31,
    "twoPred": 27,
    "twoPredOneSuc": 12,
    "twoEach": 13,
    "twoSuccessor": 21,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 85,
    "BeginPhi": 0,
    "BranchCount": 52,
    "returnInt": 8,
    "CriticalCount": 25,
    "NumEdges": 73,
    "const32Bit": 55,
    "const64Bit": 0,
    "numConstZeroes": 9,
    "numConstOnes": 26,
    "UncondBranches": 31,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 85,
    "NumBitCastInst": 0,
    "NumBrInst": 52,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 58,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 33,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 85,
    "TotalInsts": 277,
    "TotalMemInst": 155,
    "TotalFuncs": 41,
    "ArgsPhi": 0,
    "testUnary": 74
  },
  "baseline_oz_instcount": 271,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--newgvn",
    "--reassociate",
    "--ipsccp",
    "--reassociate",
    "--newgvn",
    "--dce",
    "--ipsccp",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--gvn",
    "--lower-expect",
    "--loop-instsimplify",
    "--die",
    "--ipsccp",
    "--simplifycfg",
    "--loop-reroll",
    "--mergefunc",
    "--lower-expect",
    "--sroa",
    "--sccp",
    "--adce",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--loweratomic",
          "--name-anon-globals",
          "--globalopt",
          "--loop-unroll-and-jam",
          "--newgvn",
          "--mergefunc",
          "--simple-loop-unswitch",
          "--deadargelim",
          "--hotcoldsplit",
          "--rpo-functionattrs",
          "--functionattrs",
          "--simplifycfg",
          "--pgo-memop-opt",
          "--adce",
          "--mergeicmps",
          "--consthoist",
          "--loop-unswitch",
          "--constmerge",
          "--constprop",
          "--loop-simplify",
          "--jump-threading",
          "--load-store-vectorizer",
          "--canonicalize-aliases",
          "--callsite-splitting",
          "--lowerswitch",
          "--strip-nondebug",
          "--mergereturn",
          "--tailcallelim",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--loweratomic",
      "--name-anon-globals",
      "--globalopt",
      "--loop-unroll-and-jam",
      "--newgvn",
      "--mergefunc",
      "--simple-loop-unswitch",
      "--deadargelim",
      "--hotcoldsplit",
      "--rpo-functionattrs",
      "--functionattrs",
      "--simplifycfg",
      "--pgo-memop-opt",
      "--adce",
      "--mergeicmps",
      "--consthoist",
      "--loop-unswitch",
      "--constmerge",
      "--constprop",
      "--loop-simplify",
      "--jump-threading",
      "--load-store-vectorizer",
      "--canonicalize-aliases",
      "--callsite-splitting",
      "--lowerswitch",
      "--strip-nondebug",
      "--mergereturn",
      "--tailcallelim",
      "--licm"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}