{
  "program_id": "github-v0_50459.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 8,
    "onePred": 28,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 2,
    "oneSuccessor": 26,
    "twoPred": 32,
    "twoPredOneSuc": 0,
    "twoEach": 29,
    "twoSuccessor": 36,
    "morePreds": 2,
    "BB03Phi": 11,
    "BBHiPhi": 0,
    "BBNoPhi": 56,
    "BeginPhi": 11,
    "BranchCount": 62,
    "returnInt": 5,
    "CriticalCount": 44,
    "NumEdges": 98,
    "const32Bit": 89,
    "const64Bit": 16,
    "numConstZeroes": 45,
    "numConstOnes": 27,
    "UncondBranches": 26,
    "binaryConstArg": 79,
    "NumAShrInst": 4,
    "NumAddInst": 40,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 13,
    "BlockLow": 54,
    "NumBitCastInst": 2,
    "NumBrInst": 62,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 49,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 88,
    "NumMulInst": 11,
    "NumOrInst": 4,
    "NumPHIInst": 17,
    "NumRetInst": 5,
    "NumSExtInst": 20,
    "NumSelectInst": 12,
    "NumShlInst": 4,
    "NumStoreInst": 31,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 67,
    "TotalInsts": 542,
    "TotalMemInst": 220,
    "TotalFuncs": 10,
    "ArgsPhi": 34,
    "testUnary": 118
  },
  "baseline_oz_instcount": 553,
  "knowledge_base_entry": [
    "--newgvn",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--simplifycfg",
    "--globalopt",
    "--jump-threading",
    "--bdce",
    "--dse",
    "--early-cse",
    "--nary-reassociate",
    "--slsr",
    "--loop-reroll",
    "--newgvn",
    "--mldst-motion",
    "--instcombine",
    "--globalopt",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--simplifycfg",
    "--prune-eh",
    "--gvn",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--inline",
    "--early-cse-memssa",
    "--newgvn",
    "--nary-reassociate",
    "--simplifycfg",
    "--licm",
    "--flattencfg",
    "--early-cse-memssa",
    "--licm",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--gvn",
    "--aggressive-instcombine",
    "--bdce",
    "--dse",
    "--early-cse",
    "--nary-reassociate",
    "--slsr",
    "--loop-reroll",
    "--newgvn",
    "--mldst-motion",
    "--instcombine",
    "--globalopt",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--simplifycfg",
    "--prune-eh",
    "--gvn",
    "--adce",
    "--elim-avail-extern",
    "--simplifycfg",
    "--ipsccp",
    "--sroa",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--gvn-hoist",
          "--sancov",
          "--loweratomic",
          "--bdce",
          "--instsimplify",
          "--div-rem-pairs",
          "--always-inline",
          "--libcalls-shrinkwrap",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--gvn-hoist",
      "--sancov",
      "--loweratomic",
      "--bdce",
      "--instsimplify",
      "--div-rem-pairs",
      "--always-inline",
      "--libcalls-shrinkwrap",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}