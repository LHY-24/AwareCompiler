{
  "program_id": "linux-v0_8142.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 54,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 11,
    "oneSuccessor": 46,
    "twoPred": 13,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 25,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 101,
    "BeginPhi": 0,
    "BranchCount": 71,
    "returnInt": 37,
    "CriticalCount": 12,
    "NumEdges": 96,
    "const32Bit": 331,
    "const64Bit": 14,
    "numConstZeroes": 135,
    "numConstOnes": 128,
    "UncondBranches": 46,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 105,
    "NumAndInst": 8,
    "BlockMid": 21,
    "BlockLow": 80,
    "NumBitCastInst": 37,
    "NumBrInst": 71,
    "NumCallInst": 76,
    "NumGetElementPtrInst": 96,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 249,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 30,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 140,
    "NumSubInst": 0,
    "NumTruncInst": 18,
    "NumXorInst": 3,
    "NumZExtInst": 17,
    "TotalBlocks": 101,
    "TotalInsts": 882,
    "TotalMemInst": 666,
    "TotalFuncs": 48,
    "ArgsPhi": 0,
    "testUnary": 431
  },
  "baseline_oz_instcount": 882,
  "knowledge_base_entry": [
    "--newgvn",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--loweratomic",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--gvn-hoist",
    "--loop-deletion",
    "--sroa",
    "--dce",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slp-vectorizer",
          "--lower-matrix-intrinsics",
          "--instcombine",
          "--loop-rotate",
          "--canonicalize-aliases",
          "--aggressive-instcombine",
          "--loop-sink",
          "--globaldce",
          "--lower-guard-intrinsic",
          "--early-cse-memssa",
          "--indvars",
          "--deadargelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slp-vectorizer",
      "--lower-matrix-intrinsics",
      "--instcombine",
      "--loop-rotate",
      "--canonicalize-aliases",
      "--aggressive-instcombine",
      "--loop-sink",
      "--globaldce",
      "--lower-guard-intrinsic",
      "--early-cse-memssa",
      "--indvars",
      "--deadargelim"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}