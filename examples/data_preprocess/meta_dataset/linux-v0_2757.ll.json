{
  "program_id": "linux-v0_2757.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 74,
    "onePredOneSuc": 58,
    "onePredTwoSuc": 16,
    "oneSuccessor": 70,
    "twoPred": 31,
    "twoPredOneSuc": 8,
    "twoEach": 12,
    "twoSuccessor": 38,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 137,
    "BeginPhi": 0,
    "BranchCount": 108,
    "returnInt": 36,
    "CriticalCount": 24,
    "NumEdges": 146,
    "const32Bit": 336,
    "const64Bit": 24,
    "numConstZeroes": 161,
    "numConstOnes": 137,
    "UncondBranches": 70,
    "binaryConstArg": 42,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 77,
    "NumAndInst": 5,
    "BlockMid": 11,
    "BlockLow": 126,
    "NumBitCastInst": 12,
    "NumBrInst": 108,
    "NumCallInst": 94,
    "NumGetElementPtrInst": 88,
    "NumICmpInst": 52,
    "NumLShrInst": 2,
    "NumLoadInst": 248,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 29,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 102,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 28,
    "NumZExtInst": 21,
    "TotalBlocks": 137,
    "TotalInsts": 891,
    "TotalMemInst": 609,
    "TotalFuncs": 61,
    "ArgsPhi": 0,
    "testUnary": 375
  },
  "baseline_oz_instcount": 891,
  "knowledge_base_entry": [
    "--sink",
    "--simplifycfg",
    "--dse",
    "--globalopt",
    "--sroa",
    "--aggressive-instcombine",
    "--die",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergeicmps",
          "--called-value-propagation",
          "--loop-unroll-and-jam",
          "--lower-widenable-condition",
          "--indvars",
          "--mem2reg",
          "--strip-nondebug",
          "--sancov",
          "--mergefunc",
          "--lowerswitch",
          "--aggressive-instcombine",
          "--loop-fusion",
          "--lowerinvoke",
          "--loop-reroll",
          "--adce",
          "--loop-deletion",
          "--coro-split",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergeicmps",
      "--called-value-propagation",
      "--loop-unroll-and-jam",
      "--lower-widenable-condition",
      "--indvars",
      "--mem2reg",
      "--strip-nondebug",
      "--sancov",
      "--mergefunc",
      "--lowerswitch",
      "--aggressive-instcombine",
      "--loop-fusion",
      "--lowerinvoke",
      "--loop-reroll",
      "--adce",
      "--loop-deletion",
      "--coro-split",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}