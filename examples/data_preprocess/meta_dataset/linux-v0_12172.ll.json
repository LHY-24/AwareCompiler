{
  "program_id": "linux-v0_12172.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 2,
    "oneSuccessor": 6,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 2,
    "CriticalCount": 2,
    "NumEdges": 14,
    "const32Bit": 22,
    "const64Bit": 3,
    "numConstZeroes": 6,
    "numConstOnes": 13,
    "UncondBranches": 6,
    "binaryConstArg": 3,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 11,
    "NumAndInst": 2,
    "BlockMid": 2,
    "BlockLow": 12,
    "NumBitCastInst": 0,
    "NumBrInst": 10,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 21,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 14,
    "TotalInsts": 86,
    "TotalMemInst": 55,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 42
  },
  "baseline_oz_instcount": 86,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--ipsccp",
    "--sccp",
    "--reassociate",
    "--simplifycfg",
    "--gvn",
    "--die",
    "--mergefunc",
    "--loop-reroll",
    "--slsr",
    "--simplifycfg",
    "--loop-deletion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--coro-cleanup",
          "--lower-expect",
          "--coro-elide",
          "--aggressive-instcombine",
          "--functionattrs",
          "--correlated-propagation",
          "--sancov",
          "--always-inline",
          "--called-value-propagation",
          "--attributor",
          "--dce",
          "--guard-widening",
          "--strip-nondebug",
          "--tailcallelim",
          "--prune-eh",
          "--lower-widenable-condition",
          "--dse",
          "--hotcoldsplit",
          "--loop-distribute",
          "--lower-matrix-intrinsics",
          "--ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--coro-cleanup",
      "--lower-expect",
      "--coro-elide",
      "--aggressive-instcombine",
      "--functionattrs",
      "--correlated-propagation",
      "--sancov",
      "--always-inline",
      "--called-value-propagation",
      "--attributor",
      "--dce",
      "--guard-widening",
      "--strip-nondebug",
      "--tailcallelim",
      "--prune-eh",
      "--lower-widenable-condition",
      "--dse",
      "--hotcoldsplit",
      "--loop-distribute",
      "--lower-matrix-intrinsics",
      "--ee-instrument"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}