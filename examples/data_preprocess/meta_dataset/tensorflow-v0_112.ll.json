{
  "program_id": "tensorflow-v0_112.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 1,
    "onePred": 8,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 4,
    "oneSuccessor": 5,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 2,
    "BranchCount": 7,
    "returnInt": 0,
    "CriticalCount": 4,
    "NumEdges": 17,
    "const32Bit": 17,
    "const64Bit": 5,
    "numConstZeroes": 14,
    "numConstOnes": 5,
    "UncondBranches": 5,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 3,
    "NumAndInst": 2,
    "BlockMid": 0,
    "BlockLow": 13,
    "NumBitCastInst": 1,
    "NumBrInst": 7,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 4,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 0,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 13,
    "TotalInsts": 50,
    "TotalMemInst": 21,
    "TotalFuncs": 11,
    "ArgsPhi": 10,
    "testUnary": 14
  },
  "baseline_oz_instcount": 50,
  "knowledge_base_entry": [
    "--loweratomic",
    "--early-cse",
    "--licm",
    "--gvn",
    "--adce",
    "--correlated-propagation",
    "--ipsccp",
    "--jump-threading",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--elim-avail-extern",
          "--barrier",
          "--loop-deletion",
          "--loop-simplifycfg",
          "--instcombine",
          "--guard-widening",
          "--inferattrs",
          "--constmerge",
          "--newgvn",
          "--lowerinvoke",
          "--simplifycfg",
          "--lower-expect",
          "--loop-unswitch",
          "--lower-guard-intrinsic",
          "--early-cse",
          "--always-inline",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+58.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--elim-avail-extern",
      "--barrier",
      "--loop-deletion",
      "--loop-simplifycfg",
      "--instcombine",
      "--guard-widening",
      "--inferattrs",
      "--constmerge",
      "--newgvn",
      "--lowerinvoke",
      "--simplifycfg",
      "--lower-expect",
      "--loop-unswitch",
      "--lower-guard-intrinsic",
      "--early-cse",
      "--always-inline",
      "--inline"
    ],
    "performance_vs_Oz": "+58.0%"
  }
}