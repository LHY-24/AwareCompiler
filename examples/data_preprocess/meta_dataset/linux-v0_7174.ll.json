{
  "program_id": "linux-v0_7174.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 33,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 4,
    "oneSuccessor": 32,
    "twoPred": 8,
    "twoPredOneSuc": 0,
    "twoEach": 5,
    "twoSuccessor": 10,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 49,
    "BeginPhi": 0,
    "BranchCount": 42,
    "returnInt": 5,
    "CriticalCount": 6,
    "NumEdges": 52,
    "const32Bit": 153,
    "const64Bit": 13,
    "numConstZeroes": 66,
    "numConstOnes": 77,
    "UncondBranches": 32,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 56,
    "NumAndInst": 2,
    "BlockMid": 11,
    "BlockLow": 38,
    "NumBitCastInst": 13,
    "NumBrInst": 42,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 46,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 101,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 61,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 7,
    "NumZExtInst": 5,
    "TotalBlocks": 49,
    "TotalInsts": 379,
    "TotalMemInst": 280,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 179
  },
  "baseline_oz_instcount": 380,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--sroa",
    "--sccp",
    "--elim-avail-extern",
    "--flattencfg",
    "--inline",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--bdce",
    "--instcombine",
    "--correlated-propagation",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--globaldce",
          "--lower-widenable-condition",
          "--flattencfg",
          "--early-cse-memssa",
          "--cross-dso-cfi",
          "--barrier",
          "--instnamer",
          "--ee-instrument",
          "--loop-unroll-and-jam",
          "--dse",
          "--loop-vectorize",
          "--partially-inline-libcalls",
          "--load-store-vectorizer",
          "--adce",
          "--coro-elide",
          "--sroa",
          "--aggressive-instcombine",
          "--called-value-propagation",
          "--inject-tli-mappings",
          "--consthoist",
          "--strip-nondebug"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--globaldce",
      "--lower-widenable-condition",
      "--flattencfg",
      "--early-cse-memssa",
      "--cross-dso-cfi",
      "--barrier",
      "--instnamer",
      "--ee-instrument",
      "--loop-unroll-and-jam",
      "--dse",
      "--loop-vectorize",
      "--partially-inline-libcalls",
      "--load-store-vectorizer",
      "--adce",
      "--coro-elide",
      "--sroa",
      "--aggressive-instcombine",
      "--called-value-propagation",
      "--inject-tli-mappings",
      "--consthoist",
      "--strip-nondebug"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}