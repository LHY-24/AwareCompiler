{
  "program_id": "linux-v0_9954.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 0,
    "oneSuccessor": 12,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 6,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 24,
    "const32Bit": 191,
    "const64Bit": 72,
    "numConstZeroes": 102,
    "numConstOnes": 95,
    "UncondBranches": 12,
    "binaryConstArg": 44,
    "NumAShrInst": 0,
    "NumAddInst": 39,
    "NumAllocaInst": 77,
    "NumAndInst": 8,
    "BlockMid": 14,
    "BlockLow": 15,
    "NumBitCastInst": 23,
    "NumBrInst": 18,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 82,
    "NumICmpInst": 6,
    "NumLShrInst": 16,
    "NumLoadInst": 217,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 12,
    "NumStoreInst": 117,
    "NumSubInst": 9,
    "NumTruncInst": 0,
    "NumXorInst": 24,
    "NumZExtInst": 8,
    "TotalBlocks": 29,
    "TotalInsts": 677,
    "TotalMemInst": 503,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 325
  },
  "baseline_oz_instcount": 677,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--instcombine",
    "--load-store-vectorizer",
    "--instsimplify",
    "--mergefunc",
    "--licm",
    "--inline",
    "--dse",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--sroa",
    "--memcpyopt",
    "--gvn-hoist",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--always-inline",
          "--tailcallelim",
          "--mergereturn",
          "--mergefunc",
          "--elim-avail-extern",
          "--instnamer",
          "--name-anon-globals",
          "--loop-sink",
          "--die",
          "--load-store-vectorizer",
          "--strip-debug-declare",
          "--reassociate",
          "--indvars",
          "--lcssa",
          "--partially-inline-libcalls",
          "--loop-instsimplify",
          "--bdce",
          "--coro-elide",
          "--forceattrs",
          "--loop-data-prefetch",
          "--sccp",
          "--instsimplify",
          "--globaldce",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--always-inline",
      "--tailcallelim",
      "--mergereturn",
      "--mergefunc",
      "--elim-avail-extern",
      "--instnamer",
      "--name-anon-globals",
      "--loop-sink",
      "--die",
      "--load-store-vectorizer",
      "--strip-debug-declare",
      "--reassociate",
      "--indvars",
      "--lcssa",
      "--partially-inline-libcalls",
      "--loop-instsimplify",
      "--bdce",
      "--coro-elide",
      "--forceattrs",
      "--loop-data-prefetch",
      "--sccp",
      "--instsimplify",
      "--globaldce",
      "--gvn"
    ],
    "performance_vs_Oz": "+6.2%"
  }
}