{
  "program_id": "github-v0_15092.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 2,
    "oneSuccessor": 4,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 6,
    "CriticalCount": 0,
    "NumEdges": 10,
    "const32Bit": 27,
    "const64Bit": 0,
    "numConstZeroes": 12,
    "numConstOnes": 8,
    "UncondBranches": 4,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 10,
    "NumBitCastInst": 3,
    "NumBrInst": 7,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 2,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 47,
    "TotalMemInst": 31,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 10
  },
  "baseline_oz_instcount": 47,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--instsimplify",
    "--reassociate",
    "--dse",
    "--jump-threading",
    "--mergefunc",
    "--ipsccp",
    "--flattencfg",
    "--mem2reg",
    "--gvn-hoist",
    "--newgvn",
    "--sccp",
    "--die",
    "--early-cse",
    "--die",
    "--sroa",
    "--loop-reroll",
    "--loop-fusion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--mergereturn",
          "--mem2reg",
          "--indvars",
          "-loop-reduce",
          "--aggressive-instcombine",
          "--mergefunc",
          "--inject-tli-mappings",
          "--globalopt",
          "--pgo-memop-opt",
          "--loop-unswitch",
          "--dce",
          "--loop-interchange",
          "--loop-simplify",
          "--libcalls-shrinkwrap",
          "--loop-instsimplify",
          "--loop-sink",
          "--loweratomic",
          "--loop-reroll",
          "--strip-dead-prototypes",
          "--rewrite-statepoints-for-gc",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--mergereturn",
      "--mem2reg",
      "--indvars",
      "-loop-reduce",
      "--aggressive-instcombine",
      "--mergefunc",
      "--inject-tli-mappings",
      "--globalopt",
      "--pgo-memop-opt",
      "--loop-unswitch",
      "--dce",
      "--loop-interchange",
      "--loop-simplify",
      "--libcalls-shrinkwrap",
      "--loop-instsimplify",
      "--loop-sink",
      "--loweratomic",
      "--loop-reroll",
      "--strip-dead-prototypes",
      "--rewrite-statepoints-for-gc",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}