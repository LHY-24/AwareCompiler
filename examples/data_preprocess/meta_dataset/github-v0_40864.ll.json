{
  "program_id": "github-v0_40864.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 30,
    "const64Bit": 42,
    "numConstZeroes": 40,
    "numConstOnes": 24,
    "UncondBranches": 9,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 14,
    "NumBitCastInst": 8,
    "NumBrInst": 14,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 18,
    "TotalInsts": 162,
    "TotalMemInst": 103,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 72
  },
  "baseline_oz_instcount": 162,
  "knowledge_base_entry": [
    "--inferattrs",
    "--dse",
    "--mergefunc",
    "--sroa",
    "--instsimplify",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--ipsccp",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--inferattrs",
          "--lcssa",
          "--bdce",
          "--barrier",
          "--forceattrs",
          "--functionattrs",
          "--sink",
          "--div-rem-pairs",
          "--speculative-execution",
          "--rpo-functionattrs",
          "--name-anon-globals",
          "--alignment-from-assumptions",
          "--attributor",
          "--aggressive-instcombine",
          "--break-crit-edges",
          "--cross-dso-cfi",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--inferattrs",
      "--lcssa",
      "--bdce",
      "--barrier",
      "--forceattrs",
      "--functionattrs",
      "--sink",
      "--div-rem-pairs",
      "--speculative-execution",
      "--rpo-functionattrs",
      "--name-anon-globals",
      "--alignment-from-assumptions",
      "--attributor",
      "--aggressive-instcombine",
      "--break-crit-edges",
      "--cross-dso-cfi",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+5.6%"
  }
}