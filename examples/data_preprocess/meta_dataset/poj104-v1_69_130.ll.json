{
  "program_id": "poj104-v1_69_130.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 30,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 6,
    "oneSuccessor": 29,
    "twoPred": 13,
    "twoPredOneSuc": 4,
    "twoEach": 7,
    "twoSuccessor": 15,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 1,
    "BranchCount": 44,
    "returnInt": 16,
    "CriticalCount": 8,
    "NumEdges": 59,
    "const32Bit": 84,
    "const64Bit": 82,
    "numConstZeroes": 56,
    "numConstOnes": 54,
    "UncondBranches": 29,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 37,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 52,
    "NumBitCastInst": 62,
    "NumBrInst": 44,
    "NumCallInst": 69,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 103,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 17,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 55,
    "NumSubInst": 5,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 61,
    "TotalInsts": 487,
    "TotalMemInst": 304,
    "TotalFuncs": 29,
    "ArgsPhi": 2,
    "testUnary": 225
  },
  "baseline_oz_instcount": 176,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--gvn-hoist",
    "--sroa",
    "--lower-expect",
    "--load-store-vectorizer",
    "--instcombine",
    "--sccp",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--mergefunc",
    "--mergefunc",
    "--sroa",
    "--dse",
    "--instsimplify",
    "--early-cse-memssa",
    "--dce",
    "--sroa",
    "--jump-threading",
    "--mem2reg",
    "--licm",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--dce",
    "--slp-vectorizer",
    "--simplifycfg",
    "--gvn",
    "--instsimplify",
    "--mem2reg",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--loop-fusion",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--sccp",
    "--inline",
    "--prune-eh",
    "--gvn-hoist",
    "--sroa",
    "--lower-expect",
    "--load-store-vectorizer",
    "--instcombine",
    "--sccp",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--mergefunc",
    "--mergefunc",
    "--sroa",
    "--dse",
    "--instsimplify",
    "--early-cse-memssa",
    "--dce",
    "--sroa",
    "--jump-threading",
    "--elim-avail-extern",
    "--inline",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--gvn",
    "--indvars",
    "--simplifycfg",
    "--loop-instsimplify",
    "--dse",
    "--globalopt",
    "--loop-deletion",
    "--early-cse-memssa",
    "--mldst-motion",
    "--newgvn",
    "--early-cse",
    "--loop-simplifycfg",
    "--die",
    "--sccp",
    "--inline",
    "--prune-eh",
    "--gvn-hoist",
    "--sroa",
    "--lower-expect",
    "--load-store-vectorizer",
    "--instcombine",
    "--sccp",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--dce",
    "--simplifycfg",
    "--inline",
    "--mldst-motion",
    "--mem2reg",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--break-crit-edges",
          "--dce",
          "--loop-predication",
          "--insert-gcov-profiling",
          "--loop-fusion",
          "--inline",
          "--lower-constant-intrinsics",
          "--early-cse",
          "--mergeicmps",
          "--instcombine",
          "--loop-load-elim",
          "--pgo-memop-opt",
          "--indvars",
          "--functionattrs",
          "--loop-unswitch",
          "--jump-threading",
          "--name-anon-globals",
          "--sancov",
          "--loop-reroll",
          "--mergefunc",
          "--add-discriminators",
          "--lower-expect",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--break-crit-edges",
      "--dce",
      "--loop-predication",
      "--insert-gcov-profiling",
      "--loop-fusion",
      "--inline",
      "--lower-constant-intrinsics",
      "--early-cse",
      "--mergeicmps",
      "--instcombine",
      "--loop-load-elim",
      "--pgo-memop-opt",
      "--indvars",
      "--functionattrs",
      "--loop-unswitch",
      "--jump-threading",
      "--name-anon-globals",
      "--sancov",
      "--loop-reroll",
      "--mergefunc",
      "--add-discriminators",
      "--lower-expect",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+8.0%"
  }
}