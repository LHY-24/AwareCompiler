{
  "program_id": "github-v0_9703.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 6,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 8,
    "twoPredOneSuc": 0,
    "twoEach": 7,
    "twoSuccessor": 10,
    "morePreds": 1,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 5,
    "BranchCount": 15,
    "returnInt": 1,
    "CriticalCount": 14,
    "NumEdges": 25,
    "const32Bit": 28,
    "const64Bit": 3,
    "numConstZeroes": 14,
    "numConstOnes": 7,
    "UncondBranches": 5,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 15,
    "NumBitCastInst": 0,
    "NumBrInst": 15,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 3,
    "NumOrInst": 3,
    "NumPHIInst": 7,
    "NumRetInst": 1,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 6,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 16,
    "TotalInsts": 107,
    "TotalMemInst": 31,
    "TotalFuncs": 2,
    "ArgsPhi": 14,
    "testUnary": 24
  },
  "baseline_oz_instcount": 108,
  "knowledge_base_entry": [
    "--loop-unroll",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--mem2reg",
    "--gvn",
    "--lower-expect",
    "--prune-eh",
    "--instcombine",
    "--sccp",
    "--sroa",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--simplifycfg",
    "--dse",
    "--sroa",
    "--globalopt",
    "--instcombine",
    "--correlated-propagation",
    "--simplifycfg",
    "-loop-reduce",
    "--gvn",
    "--instcombine",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--adce",
    "--sccp",
    "--early-cse",
    "--adce",
    "--loop-simplifycfg",
    "--mergefunc",
    "--lower-expect",
    "--sccp",
    "--sroa",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--jump-threading",
    "--loop-reroll",
    "--slsr",
    "-loop-reduce",
    "--slsr",
    "--indvars",
    "--slsr",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--newgvn",
    "--instsimplify",
    "--instcombine",
    "--flattencfg",
    "--early-cse",
    "--dce",
    "--jump-threading",
    "-loop-reduce",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--mem2reg",
    "--gvn",
    "--lower-expect",
    "--prune-eh",
    "--instcombine",
    "--correlated-propagation",
    "--simplifycfg",
    "-loop-reduce",
    "--gvn",
    "--instcombine",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--adce",
    "--sccp",
    "--early-cse",
    "--adce",
    "--loop-simplifycfg",
    "--mergefunc",
    "--lower-expect",
    "--sccp",
    "--sroa",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--jump-threading",
    "--loop-reroll",
    "--slsr",
    "-loop-reduce",
    "--slsr",
    "--indvars",
    "--slsr",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--newgvn",
    "--instsimplify",
    "--instcombine",
    "--flattencfg",
    "--early-cse",
    "--dce",
    "--jump-threading",
    "-loop-reduce",
    "--early-cse-memssa",
    "--sccp",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--sccp",
    "--newgvn",
    "--loop-instsimplify",
    "--sroa",
    "--instcombine",
    "--mergefunc",
    "--early-cse",
    "--adce",
    "--jump-threading",
    "--reassociate",
    "--mergefunc",
    "--ipsccp",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--coro-elide",
          "--prune-eh",
          "--loop-versioning",
          "--nary-reassociate",
          "--loop-fusion",
          "--loop-distribute",
          "--instnamer",
          "--lowerinvoke",
          "--rpo-functionattrs",
          "--sccp",
          "--loop-predication",
          "--reassociate",
          "--redundant-dbg-inst-elim",
          "--hotcoldsplit",
          "--name-anon-globals",
          "--licm",
          "--lower-widenable-condition",
          "--always-inline",
          "--strip-debug-declare",
          "--early-cse",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--coro-elide",
      "--prune-eh",
      "--loop-versioning",
      "--nary-reassociate",
      "--loop-fusion",
      "--loop-distribute",
      "--instnamer",
      "--lowerinvoke",
      "--rpo-functionattrs",
      "--sccp",
      "--loop-predication",
      "--reassociate",
      "--redundant-dbg-inst-elim",
      "--hotcoldsplit",
      "--name-anon-globals",
      "--licm",
      "--lower-widenable-condition",
      "--always-inline",
      "--strip-debug-declare",
      "--early-cse",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+3.7%"
  }
}