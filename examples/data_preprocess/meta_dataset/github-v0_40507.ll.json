{
  "program_id": "github-v0_40507.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 31,
    "const64Bit": 29,
    "numConstZeroes": 29,
    "numConstOnes": 20,
    "UncondBranches": 9,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 14,
    "NumBitCastInst": 4,
    "NumBrInst": 14,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 18,
    "TotalInsts": 144,
    "TotalMemInst": 93,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 64
  },
  "baseline_oz_instcount": 144,
  "knowledge_base_entry": [
    "--simple-loop-unswitch",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--prune-eh",
    "--early-cse",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--flattencfg",
    "--mergefunc",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalsplit",
          "--break-crit-edges",
          "--licm",
          "--consthoist",
          "--speculative-execution",
          "--flattencfg",
          "--loop-distribute",
          "--load-store-vectorizer",
          "--called-value-propagation",
          "--always-inline",
          "--loop-guard-widening",
          "--aggressive-instcombine",
          "--gvn",
          "--tailcallelim",
          "--irce",
          "--early-cse",
          "--jump-threading",
          "--memcpyopt",
          "--elim-avail-extern",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalsplit",
      "--break-crit-edges",
      "--licm",
      "--consthoist",
      "--speculative-execution",
      "--flattencfg",
      "--loop-distribute",
      "--load-store-vectorizer",
      "--called-value-propagation",
      "--always-inline",
      "--loop-guard-widening",
      "--aggressive-instcombine",
      "--gvn",
      "--tailcallelim",
      "--irce",
      "--early-cse",
      "--jump-threading",
      "--memcpyopt",
      "--elim-avail-extern",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+4.2%"
  }
}