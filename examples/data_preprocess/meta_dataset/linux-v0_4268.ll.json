{
  "program_id": "linux-v0_4268.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 68,
    "onePredOneSuc": 58,
    "onePredTwoSuc": 9,
    "oneSuccessor": 64,
    "twoPred": 22,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 29,
    "morePreds": 5,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 128,
    "BeginPhi": 2,
    "BranchCount": 93,
    "returnInt": 22,
    "CriticalCount": 14,
    "NumEdges": 132,
    "const32Bit": 279,
    "const64Bit": 27,
    "numConstZeroes": 119,
    "numConstOnes": 132,
    "UncondBranches": 64,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 98,
    "NumAndInst": 8,
    "BlockMid": 13,
    "BlockLow": 117,
    "NumBitCastInst": 39,
    "NumBrInst": 93,
    "NumCallInst": 87,
    "NumGetElementPtrInst": 65,
    "NumICmpInst": 36,
    "NumLShrInst": 1,
    "NumLoadInst": 248,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 35,
    "NumSExtInst": 21,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 136,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 18,
    "NumZExtInst": 10,
    "TotalBlocks": 130,
    "TotalInsts": 912,
    "TotalMemInst": 634,
    "TotalFuncs": 70,
    "ArgsPhi": 4,
    "testUnary": 426
  },
  "baseline_oz_instcount": 910,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--loop-simplifycfg",
    "--instsimplify",
    "--early-cse",
    "--loop-rotate",
    "--mem2reg",
    "--dce",
    "--correlated-propagation",
    "--gvn-hoist",
    "--early-cse",
    "--simplifycfg",
    "--jump-threading",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--ipsccp",
    "--loweratomic",
    "--globalopt",
    "--lower-expect",
    "--sroa",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--load-store-vectorizer",
          "--gvn",
          "--ipsccp",
          "--strip-dead-prototypes",
          "--loop-versioning",
          "--loop-deletion",
          "--loop-rotate",
          "--libcalls-shrinkwrap",
          "--deadargelim",
          "--rpo-functionattrs",
          "--loop-sink",
          "--slsr",
          "--argpromotion",
          "--constprop",
          "--loop-simplifycfg",
          "--strip-debug-declare",
          "--lower-guard-intrinsic",
          "--coro-early",
          "--attributor",
          "--aggressive-instcombine",
          "--scalarizer",
          "--loop-unroll",
          "--mergeicmps",
          "--strip",
          "--globalsplit",
          "--loop-load-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--load-store-vectorizer",
      "--gvn",
      "--ipsccp",
      "--strip-dead-prototypes",
      "--loop-versioning",
      "--loop-deletion",
      "--loop-rotate",
      "--libcalls-shrinkwrap",
      "--deadargelim",
      "--rpo-functionattrs",
      "--loop-sink",
      "--slsr",
      "--argpromotion",
      "--constprop",
      "--loop-simplifycfg",
      "--strip-debug-declare",
      "--lower-guard-intrinsic",
      "--coro-early",
      "--attributor",
      "--aggressive-instcombine",
      "--scalarizer",
      "--loop-unroll",
      "--mergeicmps",
      "--strip",
      "--globalsplit",
      "--loop-load-elim"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}