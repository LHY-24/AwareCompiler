{
  "program_id": "linux-v0_8096.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 18,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 0,
    "oneSuccessor": 18,
    "twoPred": 10,
    "twoPredOneSuc": 0,
    "twoEach": 6,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 4,
    "BranchCount": 28,
    "returnInt": 26,
    "CriticalCount": 3,
    "NumEdges": 38,
    "const32Bit": 213,
    "const64Bit": 43,
    "numConstZeroes": 73,
    "numConstOnes": 108,
    "UncondBranches": 18,
    "binaryConstArg": 23,
    "NumAShrInst": 3,
    "NumAddInst": 5,
    "NumAllocaInst": 57,
    "NumAndInst": 10,
    "BlockMid": 9,
    "BlockLow": 32,
    "NumBitCastInst": 6,
    "NumBrInst": 28,
    "NumCallInst": 78,
    "NumGetElementPtrInst": 95,
    "NumICmpInst": 10,
    "NumLShrInst": 1,
    "NumLoadInst": 205,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 4,
    "NumRetInst": 13,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 68,
    "NumSubInst": 4,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 41,
    "TotalInsts": 599,
    "TotalMemInst": 503,
    "TotalFuncs": 21,
    "ArgsPhi": 8,
    "testUnary": 274
  },
  "baseline_oz_instcount": 599,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--early-cse-memssa",
    "--jump-threading",
    "--mergefunc",
    "--aggressive-instcombine",
    "--lower-expect",
    "--die",
    "--elim-avail-extern",
    "--instcombine",
    "--bdce",
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--reassociate",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--sroa",
          "--mergefunc",
          "--ipsccp",
          "--instsimplify",
          "--flattencfg",
          "--loop-deletion",
          "--redundant-dbg-inst-elim",
          "--prune-eh",
          "--always-inline",
          "--infer-address-spaces",
          "--scalarizer",
          "--lower-matrix-intrinsics",
          "--pgo-memop-opt",
          "--cross-dso-cfi",
          "--coro-elide",
          "--aggressive-instcombine",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--sroa",
      "--mergefunc",
      "--ipsccp",
      "--instsimplify",
      "--flattencfg",
      "--loop-deletion",
      "--redundant-dbg-inst-elim",
      "--prune-eh",
      "--always-inline",
      "--infer-address-spaces",
      "--scalarizer",
      "--lower-matrix-intrinsics",
      "--pgo-memop-opt",
      "--cross-dso-cfi",
      "--coro-elide",
      "--aggressive-instcombine",
      "--coro-split"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}