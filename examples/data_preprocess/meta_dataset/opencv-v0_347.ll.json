{
  "program_id": "opencv-v0_347.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 1,
    "onePred": 8,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 5,
    "oneSuccessor": 4,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 1,
    "BBNoPhi": 10,
    "BeginPhi": 3,
    "BranchCount": 12,
    "returnInt": 0,
    "CriticalCount": 8,
    "NumEdges": 20,
    "const32Bit": 14,
    "const64Bit": 61,
    "numConstZeroes": 16,
    "numConstOnes": 8,
    "UncondBranches": 4,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 1,
    "NumAndInst": 8,
    "BlockMid": 3,
    "BlockLow": 10,
    "NumBitCastInst": 2,
    "NumBrInst": 12,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 65,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 7,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 13,
    "TotalInsts": 279,
    "TotalMemInst": 134,
    "TotalFuncs": 3,
    "ArgsPhi": 18,
    "testUnary": 71
  },
  "baseline_oz_instcount": 278,
  "knowledge_base_entry": [
    "--loweratomic",
    "--instcombine",
    "--ipsccp",
    "--mem2reg",
    "--lower-expect",
    "--instcombine",
    "--early-cse",
    "--gvn",
    "--slsr",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--slp-vectorizer",
    "--loop-reroll",
    "--loop-fusion",
    "--gvn-hoist",
    "--prune-eh",
    "--reassociate",
    "--correlated-propagation",
    "--jump-threading",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-matrix-intrinsics",
          "--partial-inliner",
          "--gvn",
          "--canonicalize-aliases",
          "--loop-idiom",
          "--simplifycfg",
          "--tailcallelim",
          "--loop-vectorize",
          "--forceattrs",
          "--infer-address-spaces",
          "--loop-unroll-and-jam",
          "--loop-data-prefetch",
          "--scalarizer",
          "--functionattrs",
          "--globaldce",
          "--mem2reg",
          "--loop-unroll",
          "--globalopt",
          "--load-store-vectorizer",
          "--lower-widenable-condition",
          "--coro-split",
          "--pgo-memop-opt",
          "--instsimplify",
          "--strip",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-matrix-intrinsics",
      "--partial-inliner",
      "--gvn",
      "--canonicalize-aliases",
      "--loop-idiom",
      "--simplifycfg",
      "--tailcallelim",
      "--loop-vectorize",
      "--forceattrs",
      "--infer-address-spaces",
      "--loop-unroll-and-jam",
      "--loop-data-prefetch",
      "--scalarizer",
      "--functionattrs",
      "--globaldce",
      "--mem2reg",
      "--loop-unroll",
      "--globalopt",
      "--load-store-vectorizer",
      "--lower-widenable-condition",
      "--coro-split",
      "--pgo-memop-opt",
      "--instsimplify",
      "--strip",
      "--always-inline"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}