{
  "program_id": "linux-v0_9483.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 15,
    "oneSuccessor": 27,
    "twoPred": 9,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 22,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 55,
    "BeginPhi": 0,
    "BranchCount": 47,
    "returnInt": 18,
    "CriticalCount": 7,
    "NumEdges": 71,
    "const32Bit": 215,
    "const64Bit": 9,
    "numConstZeroes": 116,
    "numConstOnes": 50,
    "UncondBranches": 27,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 31,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 49,
    "NumBitCastInst": 3,
    "NumBrInst": 47,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 67,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 159,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 57,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 55,
    "TotalInsts": 429,
    "TotalMemInst": 348,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 196
  },
  "baseline_oz_instcount": 431,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--lower-expect",
    "--loop-simplifycfg",
    "--flattencfg",
    "--licm",
    "--ipsccp",
    "--die",
    "--dse",
    "--bdce",
    "--loop-simplifycfg",
    "--dce",
    "--sccp",
    "--sroa",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--licm",
          "--deadargelim",
          "--sccp",
          "--callsite-splitting",
          "--globalsplit",
          "--lower-constant-intrinsics",
          "--instsimplify",
          "--lower-expect",
          "--loop-vectorize",
          "--gvn",
          "--sroa",
          "--canonicalize-aliases",
          "--loop-deletion",
          "--add-discriminators",
          "--ee-instrument",
          "--indvars",
          "--lower-matrix-intrinsics",
          "--lower-guard-intrinsic",
          "--coro-elide",
          "--loop-sink",
          "--elim-avail-extern",
          "--loop-rotate",
          "--partially-inline-libcalls",
          "--loop-reroll",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--licm",
      "--deadargelim",
      "--sccp",
      "--callsite-splitting",
      "--globalsplit",
      "--lower-constant-intrinsics",
      "--instsimplify",
      "--lower-expect",
      "--loop-vectorize",
      "--gvn",
      "--sroa",
      "--canonicalize-aliases",
      "--loop-deletion",
      "--add-discriminators",
      "--ee-instrument",
      "--indvars",
      "--lower-matrix-intrinsics",
      "--lower-guard-intrinsic",
      "--coro-elide",
      "--loop-sink",
      "--elim-avail-extern",
      "--loop-rotate",
      "--partially-inline-libcalls",
      "--loop-reroll",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}