{
  "program_id": "linux-v0_2421.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 28,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 6,
    "oneSuccessor": 24,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 15,
    "morePreds": 2,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 4,
    "BranchCount": 39,
    "returnInt": 15,
    "CriticalCount": 4,
    "NumEdges": 54,
    "const32Bit": 101,
    "const64Bit": 10,
    "numConstZeroes": 39,
    "numConstOnes": 50,
    "UncondBranches": 24,
    "binaryConstArg": 14,
    "NumAShrInst": 2,
    "NumAddInst": 0,
    "NumAllocaInst": 40,
    "NumAndInst": 4,
    "BlockMid": 5,
    "BlockLow": 44,
    "NumBitCastInst": 3,
    "NumBrInst": 39,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 63,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 4,
    "NumRetInst": 10,
    "NumSExtInst": 7,
    "NumSelectInst": 2,
    "NumShlInst": 5,
    "NumStoreInst": 48,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 6,
    "TotalBlocks": 49,
    "TotalInsts": 286,
    "TotalMemInst": 178,
    "TotalFuncs": 16,
    "ArgsPhi": 8,
    "testUnary": 123
  },
  "baseline_oz_instcount": 286,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--instcombine",
    "--aggressive-instcombine",
    "--flattencfg",
    "--mergefunc",
    "--correlated-propagation",
    "--mergefunc",
    "--mem2reg",
    "--early-cse",
    "--newgvn",
    "--slp-vectorizer",
    "--mergefunc",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simplifycfg",
          "--constmerge",
          "--called-value-propagation",
          "--elim-avail-extern",
          "--coro-cleanup",
          "--instsimplify",
          "--loop-predication",
          "--globaldce",
          "--aggressive-instcombine",
          "--tailcallelim",
          "--infer-address-spaces",
          "--mergefunc",
          "--libcalls-shrinkwrap",
          "--hotcoldsplit",
          "--lowerswitch",
          "--loop-reroll",
          "--deadargelim",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simplifycfg",
      "--constmerge",
      "--called-value-propagation",
      "--elim-avail-extern",
      "--coro-cleanup",
      "--instsimplify",
      "--loop-predication",
      "--globaldce",
      "--aggressive-instcombine",
      "--tailcallelim",
      "--infer-address-spaces",
      "--mergefunc",
      "--libcalls-shrinkwrap",
      "--hotcoldsplit",
      "--lowerswitch",
      "--loop-reroll",
      "--deadargelim",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}