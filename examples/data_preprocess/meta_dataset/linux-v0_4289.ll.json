{
  "program_id": "linux-v0_4289.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 80,
    "onePredOneSuc": 53,
    "onePredTwoSuc": 26,
    "oneSuccessor": 72,
    "twoPred": 23,
    "twoPredOneSuc": 14,
    "twoEach": 5,
    "twoSuccessor": 38,
    "morePreds": 9,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 124,
    "BeginPhi": 1,
    "BranchCount": 109,
    "returnInt": 21,
    "CriticalCount": 18,
    "NumEdges": 160,
    "const32Bit": 329,
    "const64Bit": 67,
    "numConstZeroes": 187,
    "numConstOnes": 115,
    "UncondBranches": 72,
    "binaryConstArg": 31,
    "NumAShrInst": 1,
    "NumAddInst": 6,
    "NumAllocaInst": 77,
    "NumAndInst": 9,
    "BlockMid": 9,
    "BlockLow": 116,
    "NumBitCastInst": 17,
    "NumBrInst": 109,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 112,
    "NumICmpInst": 39,
    "NumLShrInst": 0,
    "NumLoadInst": 218,
    "NumMulInst": 3,
    "NumOrInst": 10,
    "NumPHIInst": 1,
    "NumRetInst": 13,
    "NumSExtInst": 23,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 130,
    "NumSubInst": 3,
    "NumTruncInst": 13,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 125,
    "TotalInsts": 840,
    "TotalMemInst": 580,
    "TotalFuncs": 40,
    "ArgsPhi": 2,
    "testUnary": 357
  },
  "baseline_oz_instcount": 841,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--bdce",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--mem2reg",
    "--prune-eh",
    "--gvn",
    "--gvn",
    "--early-cse",
    "--correlated-propagation",
    "--gvn",
    "-loop-reduce",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--jump-threading",
    "--gvn",
    "--sroa",
    "--loop-deletion",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--aggressive-instcombine",
          "--simple-loop-unswitch",
          "--loop-simplify",
          "--callsite-splitting",
          "--mergeicmps",
          "--separate-const-offset-from-gep",
          "--slsr",
          "--constmerge",
          "--sink",
          "--guard-widening",
          "--float2int",
          "--alignment-from-assumptions",
          "--indvars",
          "--insert-gcov-profiling",
          "--loop-unroll",
          "--rewrite-statepoints-for-gc",
          "--early-cse",
          "--loop-versioning",
          "--loop-fusion",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--aggressive-instcombine",
      "--simple-loop-unswitch",
      "--loop-simplify",
      "--callsite-splitting",
      "--mergeicmps",
      "--separate-const-offset-from-gep",
      "--slsr",
      "--constmerge",
      "--sink",
      "--guard-widening",
      "--float2int",
      "--alignment-from-assumptions",
      "--indvars",
      "--insert-gcov-profiling",
      "--loop-unroll",
      "--rewrite-statepoints-for-gc",
      "--early-cse",
      "--loop-versioning",
      "--loop-fusion",
      "--globaldce"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}