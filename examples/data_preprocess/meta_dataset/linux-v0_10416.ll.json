{
  "program_id": "linux-v0_10416.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 55,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 18,
    "oneSuccessor": 47,
    "twoPred": 15,
    "twoPredOneSuc": 8,
    "twoEach": 2,
    "twoSuccessor": 26,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 1,
    "BranchCount": 72,
    "returnInt": 23,
    "CriticalCount": 9,
    "NumEdges": 104,
    "const32Bit": 254,
    "const64Bit": 13,
    "numConstZeroes": 108,
    "numConstOnes": 92,
    "UncondBranches": 47,
    "binaryConstArg": 29,
    "NumAShrInst": 2,
    "NumAddInst": 1,
    "NumAllocaInst": 69,
    "NumAndInst": 11,
    "BlockMid": 8,
    "BlockLow": 87,
    "NumBitCastInst": 13,
    "NumBrInst": 72,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 58,
    "NumICmpInst": 30,
    "NumLShrInst": 3,
    "NumLoadInst": 169,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 1,
    "NumRetInst": 21,
    "NumSExtInst": 4,
    "NumSelectInst": 2,
    "NumShlInst": 1,
    "NumStoreInst": 117,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 6,
    "NumZExtInst": 17,
    "TotalBlocks": 95,
    "TotalInsts": 669,
    "TotalMemInst": 467,
    "TotalFuncs": 38,
    "ArgsPhi": 2,
    "testUnary": 280
  },
  "baseline_oz_instcount": 670,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--instsimplify",
    "--newgvn",
    "--sccp",
    "--dse",
    "--inline",
    "--die",
    "--reassociate",
    "--lower-expect",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--jump-threading",
    "--mldst-motion",
    "--newgvn",
    "--flattencfg",
    "--aggressive-instcombine",
    "--instcombine",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--gvn-hoist",
    "--gvn",
    "--flattencfg",
    "--early-cse",
    "--jump-threading",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--constprop",
          "--pgo-memop-opt",
          "--gvn",
          "--elim-avail-extern",
          "--ipconstprop",
          "--coro-cleanup",
          "--lower-expect",
          "--sancov",
          "--loop-deletion",
          "-loop-reduce",
          "--forceattrs",
          "--post-inline-ee-instrument",
          "--coro-split",
          "--tailcallelim",
          "--redundant-dbg-inst-elim",
          "--aggressive-instcombine",
          "--mldst-motion",
          "--newgvn",
          "--partial-inliner",
          "--bdce",
          "--loop-interchange",
          "--guard-widening",
          "--coro-elide",
          "--sroa",
          "--dse",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--constprop",
      "--pgo-memop-opt",
      "--gvn",
      "--elim-avail-extern",
      "--ipconstprop",
      "--coro-cleanup",
      "--lower-expect",
      "--sancov",
      "--loop-deletion",
      "-loop-reduce",
      "--forceattrs",
      "--post-inline-ee-instrument",
      "--coro-split",
      "--tailcallelim",
      "--redundant-dbg-inst-elim",
      "--aggressive-instcombine",
      "--mldst-motion",
      "--newgvn",
      "--partial-inliner",
      "--bdce",
      "--loop-interchange",
      "--guard-widening",
      "--coro-elide",
      "--sroa",
      "--dse",
      "--licm"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}