{
  "program_id": "linux-v0_4610.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 21,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 5,
    "oneSuccessor": 19,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 38,
    "BeginPhi": 1,
    "BranchCount": 31,
    "returnInt": 9,
    "CriticalCount": 5,
    "NumEdges": 43,
    "const32Bit": 109,
    "const64Bit": 39,
    "numConstZeroes": 52,
    "numConstOnes": 66,
    "UncondBranches": 19,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 44,
    "NumAndInst": 6,
    "BlockMid": 6,
    "BlockLow": 33,
    "NumBitCastInst": 5,
    "NumBrInst": 31,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 17,
    "NumLShrInst": 1,
    "NumLoadInst": 90,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 8,
    "NumSExtInst": 12,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 69,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 39,
    "TotalInsts": 379,
    "TotalMemInst": 270,
    "TotalFuncs": 16,
    "ArgsPhi": 2,
    "testUnary": 170
  },
  "baseline_oz_instcount": 379,
  "knowledge_base_entry": [
    "--globalopt",
    "--ipsccp",
    "--aggressive-instcombine",
    "--inline",
    "--sroa",
    "--prune-eh",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--loop-simplify",
          "--lcssa",
          "--mergefunc",
          "--libcalls-shrinkwrap",
          "--slp-vectorizer",
          "--globaldce",
          "--mergeicmps",
          "--lowerinvoke",
          "--barrier",
          "--aggressive-instcombine",
          "--early-cse-memssa",
          "--instcombine",
          "--loop-guard-widening",
          "--separate-const-offset-from-gep",
          "--reassociate",
          "--cross-dso-cfi",
          "-loop-reduce",
          "--lower-widenable-condition",
          "--coro-elide",
          "--inject-tli-mappings",
          "--lower-matrix-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--loop-simplify",
      "--lcssa",
      "--mergefunc",
      "--libcalls-shrinkwrap",
      "--slp-vectorizer",
      "--globaldce",
      "--mergeicmps",
      "--lowerinvoke",
      "--barrier",
      "--aggressive-instcombine",
      "--early-cse-memssa",
      "--instcombine",
      "--loop-guard-widening",
      "--separate-const-offset-from-gep",
      "--reassociate",
      "--cross-dso-cfi",
      "-loop-reduce",
      "--lower-widenable-condition",
      "--coro-elide",
      "--inject-tli-mappings",
      "--lower-matrix-intrinsics"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}