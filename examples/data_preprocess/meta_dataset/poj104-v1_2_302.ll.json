{
  "program_id": "poj104-v1_2_302.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 4,
    "oneSuccessor": 31,
    "twoPred": 13,
    "twoPredOneSuc": 4,
    "twoEach": 9,
    "twoSuccessor": 13,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 0,
    "BranchCount": 44,
    "returnInt": 5,
    "CriticalCount": 4,
    "NumEdges": 57,
    "const32Bit": 48,
    "const64Bit": 37,
    "numConstZeroes": 38,
    "numConstOnes": 23,
    "UncondBranches": 31,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 43,
    "NumBitCastInst": 19,
    "NumBrInst": 44,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 53,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 21,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 47,
    "TotalInsts": 247,
    "TotalMemInst": 135,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 104
  },
  "baseline_oz_instcount": 159,
  "knowledge_base_entry": [
    "--prune-eh",
    "--gvn-hoist",
    "--gvn-hoist",
    "--nary-reassociate",
    "--correlated-propagation",
    "--sroa",
    "--inline",
    "--loop-instsimplify",
    "--jump-threading",
    "--load-store-vectorizer",
    "--instcombine",
    "--newgvn",
    "--slsr",
    "--early-cse",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--mem2reg",
    "--gvn-hoist",
    "--correlated-propagation",
    "--newgvn",
    "--memcpyopt",
    "--elim-avail-extern",
    "--simplifycfg",
    "--mem2reg",
    "--ipsccp",
    "--sroa",
    "--flattencfg",
    "--instcombine",
    "--sroa",
    "--indvars",
    "--simplifycfg",
    "--inline",
    "--early-cse",
    "--simplifycfg",
    "--ipsccp",
    "--loweratomic",
    "--ipsccp",
    "--globaldce",
    "--ipsccp",
    "--dse",
    "--correlated-propagation",
    "--gvn-hoist",
    "--jump-threading",
    "--instcombine",
    "--bdce",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--loop-sink",
          "--mergeicmps",
          "--globaldce",
          "--div-rem-pairs",
          "--adce",
          "--speculative-execution",
          "--newgvn",
          "--early-cse-memssa",
          "--lower-guard-intrinsic",
          "--ipconstprop",
          "--coro-split",
          "--loop-distribute",
          "--globalopt",
          "--globalsplit",
          "--mem2reg",
          "--partial-inliner",
          "--alignment-from-assumptions",
          "--mergefunc",
          "--simplifycfg",
          "--sink",
          "--instnamer",
          "--lcssa",
          "--loop-versioning",
          "--attributor",
          "--lower-matrix-intrinsics",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+13.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--loop-sink",
      "--mergeicmps",
      "--globaldce",
      "--div-rem-pairs",
      "--adce",
      "--speculative-execution",
      "--newgvn",
      "--early-cse-memssa",
      "--lower-guard-intrinsic",
      "--ipconstprop",
      "--coro-split",
      "--loop-distribute",
      "--globalopt",
      "--globalsplit",
      "--mem2reg",
      "--partial-inliner",
      "--alignment-from-assumptions",
      "--mergefunc",
      "--simplifycfg",
      "--sink",
      "--instnamer",
      "--lcssa",
      "--loop-versioning",
      "--attributor",
      "--lower-matrix-intrinsics",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+13.2%"
  }
}