{
  "program_id": "linux-v0_3979.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 10,
    "const32Bit": 91,
    "const64Bit": 2,
    "numConstZeroes": 43,
    "numConstOnes": 28,
    "UncondBranches": 4,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 14,
    "NumAndInst": 2,
    "BlockMid": 3,
    "BlockLow": 14,
    "NumBitCastInst": 8,
    "NumBrInst": 7,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 45,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 17,
    "TotalInsts": 162,
    "TotalMemInst": 124,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 74
  },
  "baseline_oz_instcount": 162,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--gvn",
    "--aggressive-instcombine",
    "--early-cse",
    "--reassociate",
    "--early-cse",
    "--simplifycfg",
    "--ipsccp",
    "--adce",
    "--slp-vectorizer",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--called-value-propagation",
          "--alignment-from-assumptions",
          "--loop-distribute",
          "--rpo-functionattrs",
          "--attributor",
          "--constmerge",
          "--elim-avail-extern",
          "--simplifycfg",
          "--lower-expect",
          "--irce",
          "--slsr",
          "--libcalls-shrinkwrap",
          "--prune-eh",
          "--aggressive-instcombine",
          "--callsite-splitting",
          "--licm",
          "--mergefunc",
          "--loop-reroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--called-value-propagation",
      "--alignment-from-assumptions",
      "--loop-distribute",
      "--rpo-functionattrs",
      "--attributor",
      "--constmerge",
      "--elim-avail-extern",
      "--simplifycfg",
      "--lower-expect",
      "--irce",
      "--slsr",
      "--libcalls-shrinkwrap",
      "--prune-eh",
      "--aggressive-instcombine",
      "--callsite-splitting",
      "--licm",
      "--mergefunc",
      "--loop-reroll"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}