{
  "program_id": "github-v0_32103.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 1,
    "onePred": 15,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 10,
    "oneSuccessor": 5,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 13,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 2,
    "BranchCount": 18,
    "returnInt": 2,
    "CriticalCount": 11,
    "NumEdges": 31,
    "const32Bit": 57,
    "const64Bit": 18,
    "numConstZeroes": 19,
    "numConstOnes": 18,
    "UncondBranches": 5,
    "binaryConstArg": 43,
    "NumAShrInst": 0,
    "NumAddInst": 57,
    "NumAllocaInst": 0,
    "NumAndInst": 3,
    "BlockMid": 6,
    "BlockLow": 13,
    "NumBitCastInst": 0,
    "NumBrInst": 18,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 52,
    "NumICmpInst": 26,
    "NumLShrInst": 8,
    "NumLoadInst": 52,
    "NumMulInst": 11,
    "NumOrInst": 14,
    "NumPHIInst": 4,
    "NumRetInst": 1,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 15,
    "NumStoreInst": 3,
    "NumSubInst": 9,
    "NumTruncInst": 10,
    "NumXorInst": 1,
    "NumZExtInst": 52,
    "TotalBlocks": 19,
    "TotalInsts": 351,
    "TotalMemInst": 109,
    "TotalFuncs": 3,
    "ArgsPhi": 38,
    "testUnary": 124
  },
  "baseline_oz_instcount": 354,
  "knowledge_base_entry": [
    "--loop-fusion",
    "--nary-reassociate",
    "--correlated-propagation",
    "--instcombine",
    "--sccp",
    "--inline",
    "--early-cse-memssa",
    "--die",
    "--simplifycfg",
    "--gvn-hoist",
    "--newgvn",
    "--inline",
    "--memcpyopt",
    "--jump-threading",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--loop-simplifycfg",
          "--elim-avail-extern",
          "--pgo-memop-opt",
          "--loop-deletion",
          "--instnamer",
          "--loop-simplify",
          "--prune-eh",
          "--inferattrs",
          "--memcpyopt",
          "--loop-instsimplify",
          "--loop-interchange",
          "--sccp",
          "--loop-versioning-licm",
          "--partially-inline-libcalls",
          "--strip",
          "--loop-idiom",
          "--gvn-hoist",
          "--instcombine",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--loop-simplifycfg",
      "--elim-avail-extern",
      "--pgo-memop-opt",
      "--loop-deletion",
      "--instnamer",
      "--loop-simplify",
      "--prune-eh",
      "--inferattrs",
      "--memcpyopt",
      "--loop-instsimplify",
      "--loop-interchange",
      "--sccp",
      "--loop-versioning-licm",
      "--partially-inline-libcalls",
      "--strip",
      "--loop-idiom",
      "--gvn-hoist",
      "--instcombine",
      "--globalopt"
    ],
    "performance_vs_Oz": "+4.5%"
  }
}