{
  "program_id": "github-v0_29580.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 38,
    "const64Bit": 26,
    "numConstZeroes": 33,
    "numConstOnes": 23,
    "UncondBranches": 13,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 13,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 40,
    "NumMulInst": 1,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 24,
    "TotalBlocks": 24,
    "TotalInsts": 185,
    "TotalMemInst": 101,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 87
  },
  "baseline_oz_instcount": 185,
  "knowledge_base_entry": [
    "--licm",
    "--aggressive-instcombine",
    "--lower-expect",
    "--loop-instsimplify",
    "--instcombine",
    "--dce",
    "--reassociate",
    "--prune-eh",
    "--lower-expect",
    "--jump-threading",
    "--sccp",
    "--gvn-hoist",
    "--sroa",
    "--reassociate",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--argpromotion",
          "--attributor",
          "--reassociate",
          "--inferattrs",
          "--mergeicmps",
          "--strip-nondebug",
          "--loop-simplify",
          "--infer-address-spaces",
          "--consthoist",
          "--jump-threading",
          "--loop-sink",
          "--loop-fusion",
          "--loop-unroll",
          "--irce",
          "--aggressive-instcombine",
          "--loop-unroll-and-jam",
          "--post-inline-ee-instrument",
          "--lower-expect",
          "--insert-gcov-profiling",
          "--functionattrs",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--argpromotion",
      "--attributor",
      "--reassociate",
      "--inferattrs",
      "--mergeicmps",
      "--strip-nondebug",
      "--loop-simplify",
      "--infer-address-spaces",
      "--consthoist",
      "--jump-threading",
      "--loop-sink",
      "--loop-fusion",
      "--loop-unroll",
      "--irce",
      "--aggressive-instcombine",
      "--loop-unroll-and-jam",
      "--post-inline-ee-instrument",
      "--lower-expect",
      "--insert-gcov-profiling",
      "--functionattrs",
      "--early-cse"
    ],
    "performance_vs_Oz": "+3.8%"
  }
}