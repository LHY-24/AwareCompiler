{
  "program_id": "github-v0_17587.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 7,
    "oneSuccessor": 36,
    "twoPred": 11,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 17,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 63,
    "BeginPhi": 0,
    "BranchCount": 53,
    "returnInt": 5,
    "CriticalCount": 5,
    "NumEdges": 70,
    "const32Bit": 177,
    "const64Bit": 7,
    "numConstZeroes": 42,
    "numConstOnes": 53,
    "UncondBranches": 36,
    "binaryConstArg": 63,
    "NumAShrInst": 0,
    "NumAddInst": 31,
    "NumAllocaInst": 36,
    "NumAndInst": 6,
    "BlockMid": 9,
    "BlockLow": 54,
    "NumBitCastInst": 0,
    "NumBrInst": 53,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 17,
    "NumLShrInst": 2,
    "NumLoadInst": 115,
    "NumMulInst": 16,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 73,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 25,
    "TotalBlocks": 63,
    "TotalInsts": 471,
    "TotalMemInst": 275,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 184
  },
  "baseline_oz_instcount": 472,
  "knowledge_base_entry": [
    "--dse",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--bdce",
    "--lower-expect",
    "--newgvn",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loweratomic",
          "--loop-data-prefetch",
          "--ee-instrument",
          "--functionattrs",
          "--lowerswitch",
          "--adce",
          "--dse",
          "--coro-elide",
          "--redundant-dbg-inst-elim",
          "--instcombine",
          "--ipconstprop",
          "--loop-vectorize",
          "--partially-inline-libcalls",
          "--correlated-propagation",
          "--div-rem-pairs",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loweratomic",
      "--loop-data-prefetch",
      "--ee-instrument",
      "--functionattrs",
      "--lowerswitch",
      "--adce",
      "--dse",
      "--coro-elide",
      "--redundant-dbg-inst-elim",
      "--instcombine",
      "--ipconstprop",
      "--loop-vectorize",
      "--partially-inline-libcalls",
      "--correlated-propagation",
      "--div-rem-pairs",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}