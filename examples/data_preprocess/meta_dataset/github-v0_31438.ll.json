{
  "program_id": "github-v0_31438.ll",
  "autophase_features": {
    "BBNumArgsHi": 9,
    "BBNumArgsLo": 4,
    "onePred": 18,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 8,
    "oneSuccessor": 13,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 7,
    "twoSuccessor": 19,
    "morePreds": 5,
    "BB03Phi": 12,
    "BBHiPhi": 1,
    "BBNoPhi": 22,
    "BeginPhi": 13,
    "BranchCount": 32,
    "returnInt": 3,
    "CriticalCount": 23,
    "NumEdges": 54,
    "const32Bit": 39,
    "const64Bit": 25,
    "numConstZeroes": 23,
    "numConstOnes": 17,
    "UncondBranches": 13,
    "binaryConstArg": 14,
    "NumAShrInst": 2,
    "NumAddInst": 24,
    "NumAllocaInst": 0,
    "NumAndInst": 10,
    "BlockMid": 8,
    "BlockLow": 27,
    "NumBitCastInst": 0,
    "NumBrInst": 32,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 31,
    "NumLShrInst": 0,
    "NumLoadInst": 14,
    "NumMulInst": 8,
    "NumOrInst": 6,
    "NumPHIInst": 31,
    "NumRetInst": 2,
    "NumSExtInst": 7,
    "NumSelectInst": 10,
    "NumShlInst": 2,
    "NumStoreInst": 1,
    "NumSubInst": 6,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 0,
    "TotalBlocks": 35,
    "TotalInsts": 264,
    "TotalMemInst": 26,
    "TotalFuncs": 4,
    "ArgsPhi": 75,
    "testUnary": 25
  },
  "baseline_oz_instcount": 273,
  "knowledge_base_entry": [
    "--dce",
    "--newgvn",
    "--load-store-vectorizer",
    "--instcombine",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--loop-deletion",
    "--sroa",
    "--reassociate",
    "--bdce",
    "--gvn",
    "--bdce",
    "--instcombine",
    "--simplifycfg",
    "--dse",
    "--ipsccp",
    "--dce",
    "--mergefunc",
    "--correlated-propagation",
    "--early-cse",
    "--prune-eh",
    "--mem2reg",
    "--loop-rotate",
    "--instsimplify",
    "--early-cse-memssa",
    "--flattencfg",
    "--mem2reg",
    "--memcpyopt",
    "--gvn",
    "--sroa",
    "--loop-reroll",
    "--instcombine",
    "--die",
    "--correlated-propagation",
    "--simplifycfg",
    "--dse",
    "--slp-vectorizer",
    "--dse",
    "--adce",
    "--inline",
    "--early-cse",
    "--adce",
    "--die",
    "--slp-vectorizer",
    "--instcombine",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--loop-deletion",
    "--sroa",
    "--reassociate",
    "--bdce",
    "--gvn",
    "--bdce",
    "--instcombine",
    "--simplifycfg",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--insert-gcov-profiling",
          "--partially-inline-libcalls",
          "--constmerge",
          "--strip-nondebug",
          "--globaldce",
          "--newgvn",
          "--gvn",
          "--div-rem-pairs",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--insert-gcov-profiling",
      "--partially-inline-libcalls",
      "--constmerge",
      "--strip-nondebug",
      "--globaldce",
      "--newgvn",
      "--gvn",
      "--div-rem-pairs",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+4.8%"
  }
}