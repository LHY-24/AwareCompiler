{
  "program_id": "linux-v0_13527.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 30,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 8,
    "oneSuccessor": 26,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 17,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 0,
    "BranchCount": 43,
    "returnInt": 30,
    "CriticalCount": 16,
    "NumEdges": 60,
    "const32Bit": 158,
    "const64Bit": 4,
    "numConstZeroes": 59,
    "numConstOnes": 65,
    "UncondBranches": 26,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 51,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 37,
    "NumBitCastInst": 7,
    "NumBrInst": 43,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 105,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 67,
    "NumSubInst": 2,
    "NumTruncInst": 23,
    "NumXorInst": 0,
    "NumZExtInst": 34,
    "TotalBlocks": 46,
    "TotalInsts": 448,
    "TotalMemInst": 304,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 220
  },
  "baseline_oz_instcount": 448,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--aggressive-instcombine",
    "--die",
    "--mergefunc",
    "--dce",
    "--licm",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--jump-threading",
    "--mldst-motion",
    "--early-cse-memssa",
    "--gvn",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--loop-distribute",
          "--strip-debug-declare",
          "--bdce",
          "--barrier",
          "--aggressive-instcombine",
          "--loop-unroll",
          "--strip",
          "--ipconstprop",
          "--load-store-vectorizer",
          "--loop-idiom",
          "--flattencfg",
          "--add-discriminators",
          "--deadargelim",
          "--mergeicmps",
          "--pgo-memop-opt",
          "--lower-matrix-intrinsics",
          "--loop-fusion",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--loop-distribute",
      "--strip-debug-declare",
      "--bdce",
      "--barrier",
      "--aggressive-instcombine",
      "--loop-unroll",
      "--strip",
      "--ipconstprop",
      "--load-store-vectorizer",
      "--loop-idiom",
      "--flattencfg",
      "--add-discriminators",
      "--deadargelim",
      "--mergeicmps",
      "--pgo-memop-opt",
      "--lower-matrix-intrinsics",
      "--loop-fusion",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+4.0%"
  }
}