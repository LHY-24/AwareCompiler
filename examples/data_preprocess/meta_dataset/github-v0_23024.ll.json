{
  "program_id": "github-v0_23024.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 83,
    "onePredOneSuc": 61,
    "onePredTwoSuc": 22,
    "oneSuccessor": 77,
    "twoPred": 39,
    "twoPredOneSuc": 16,
    "twoEach": 11,
    "twoSuccessor": 51,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 147,
    "BeginPhi": 1,
    "BranchCount": 128,
    "returnInt": 1,
    "CriticalCount": 23,
    "NumEdges": 179,
    "const32Bit": 270,
    "const64Bit": 4,
    "numConstZeroes": 120,
    "numConstOnes": 141,
    "UncondBranches": 77,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 79,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 141,
    "NumBitCastInst": 7,
    "NumBrInst": 128,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 86,
    "NumICmpInst": 51,
    "NumLShrInst": 0,
    "NumLoadInst": 254,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 140,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 148,
    "TotalInsts": 804,
    "TotalMemInst": 582,
    "TotalFuncs": 23,
    "ArgsPhi": 3,
    "testUnary": 340
  },
  "baseline_oz_instcount": 806,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--early-cse",
    "--lower-expect",
    "--instcombine",
    "--sccp",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--lowerinvoke",
          "--mergefunc",
          "--hotcoldsplit",
          "--separate-const-offset-from-gep",
          "--ipconstprop",
          "--aggressive-instcombine",
          "--instnamer",
          "--slp-vectorizer",
          "--coro-early",
          "--correlated-propagation",
          "--guard-widening",
          "--loop-data-prefetch",
          "--instsimplify",
          "--sroa",
          "--attributor"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--lowerinvoke",
      "--mergefunc",
      "--hotcoldsplit",
      "--separate-const-offset-from-gep",
      "--ipconstprop",
      "--aggressive-instcombine",
      "--instnamer",
      "--slp-vectorizer",
      "--coro-early",
      "--correlated-propagation",
      "--guard-widening",
      "--loop-data-prefetch",
      "--instsimplify",
      "--sroa",
      "--attributor"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}