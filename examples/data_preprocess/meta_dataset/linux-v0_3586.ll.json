{
  "program_id": "linux-v0_3586.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 34,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 6,
    "oneSuccessor": 31,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 12,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 61,
    "BeginPhi": 0,
    "BranchCount": 43,
    "returnInt": 10,
    "CriticalCount": 8,
    "NumEdges": 69,
    "const32Bit": 160,
    "const64Bit": 16,
    "numConstZeroes": 79,
    "numConstOnes": 71,
    "UncondBranches": 31,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 49,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 53,
    "NumBitCastInst": 23,
    "NumBrInst": 43,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 14,
    "NumLShrInst": 1,
    "NumLoadInst": 119,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 64,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 4,
    "NumZExtInst": 5,
    "TotalBlocks": 61,
    "TotalInsts": 434,
    "TotalMemInst": 308,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 209
  },
  "baseline_oz_instcount": 434,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--elim-avail-extern",
    "--reassociate",
    "--instcombine",
    "--early-cse-memssa",
    "-loop-reduce",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--globalopt",
    "--lower-expect",
    "--adce",
    "--simplifycfg",
    "--sccp",
    "--instsimplify",
    "--nary-reassociate",
    "--slsr",
    "--jump-threading",
    "--gvn",
    "--loop-deletion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--lcssa",
          "--sroa",
          "--float2int",
          "--loop-unroll",
          "--coro-elide",
          "--mergefunc",
          "--licm",
          "--mergereturn",
          "--argpromotion",
          "--pgo-memop-opt",
          "--loop-load-elim",
          "--barrier",
          "--loop-unswitch",
          "--simplifycfg",
          "--strip",
          "-loop-reduce",
          "--loop-predication",
          "--early-cse",
          "--partial-inliner",
          "--loop-fusion",
          "--called-value-propagation",
          "--partially-inline-libcalls",
          "--elim-avail-extern",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--lcssa",
      "--sroa",
      "--float2int",
      "--loop-unroll",
      "--coro-elide",
      "--mergefunc",
      "--licm",
      "--mergereturn",
      "--argpromotion",
      "--pgo-memop-opt",
      "--loop-load-elim",
      "--barrier",
      "--loop-unswitch",
      "--simplifycfg",
      "--strip",
      "-loop-reduce",
      "--loop-predication",
      "--early-cse",
      "--partial-inliner",
      "--loop-fusion",
      "--called-value-propagation",
      "--partially-inline-libcalls",
      "--elim-avail-extern",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}