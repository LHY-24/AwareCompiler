{
  "program_id": "linux-v0_8847.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 5,
    "oneSuccessor": 19,
    "twoPred": 11,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 11,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 0,
    "BranchCount": 30,
    "returnInt": 8,
    "CriticalCount": 7,
    "NumEdges": 41,
    "const32Bit": 187,
    "const64Bit": 43,
    "numConstZeroes": 83,
    "numConstOnes": 44,
    "UncondBranches": 19,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 37,
    "NumAndInst": 6,
    "BlockMid": 5,
    "BlockLow": 43,
    "NumBitCastInst": 2,
    "NumBrInst": 30,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 11,
    "NumLShrInst": 4,
    "NumLoadInst": 128,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 46,
    "NumSubInst": 6,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 48,
    "TotalInsts": 396,
    "TotalMemInst": 304,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 176
  },
  "baseline_oz_instcount": 398,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--mergefunc",
    "--die",
    "--jump-threading",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--functionattrs",
          "--simplifycfg",
          "--correlated-propagation",
          "--loop-distribute",
          "--name-anon-globals",
          "--canonicalize-aliases",
          "--lower-widenable-condition",
          "--strip",
          "--strip-dead-prototypes",
          "--sink",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--functionattrs",
      "--simplifycfg",
      "--correlated-propagation",
      "--loop-distribute",
      "--name-anon-globals",
      "--canonicalize-aliases",
      "--lower-widenable-condition",
      "--strip",
      "--strip-dead-prototypes",
      "--sink",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}