{
  "program_id": "tensorflow-v0_1739.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 12,
    "onePred": 32,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 11,
    "oneSuccessor": 27,
    "twoPred": 23,
    "twoPredOneSuc": 6,
    "twoEach": 13,
    "twoSuccessor": 31,
    "morePreds": 3,
    "BB03Phi": 12,
    "BBHiPhi": 0,
    "BBNoPhi": 55,
    "BeginPhi": 12,
    "BranchCount": 58,
    "returnInt": 0,
    "CriticalCount": 30,
    "NumEdges": 89,
    "const32Bit": 181,
    "const64Bit": 167,
    "numConstZeroes": 214,
    "numConstOnes": 45,
    "UncondBranches": 27,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 16,
    "NumAndInst": 6,
    "BlockMid": 3,
    "BlockLow": 64,
    "NumBitCastInst": 41,
    "NumBrInst": 58,
    "NumCallInst": 126,
    "NumGetElementPtrInst": 78,
    "NumICmpInst": 31,
    "NumLShrInst": 0,
    "NumLoadInst": 73,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 12,
    "NumRetInst": 9,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 33,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 67,
    "TotalInsts": 484,
    "TotalMemInst": 326,
    "TotalFuncs": 28,
    "ArgsPhi": 24,
    "testUnary": 131
  },
  "baseline_oz_instcount": 480,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--instcombine",
    "--gvn",
    "--mem2reg",
    "--prune-eh",
    "--simplifycfg",
    "--lower-expect",
    "--reassociate",
    "--bdce",
    "--elim-avail-extern",
    "--prune-eh",
    "--mem2reg",
    "--dse",
    "--simplifycfg",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--coro-cleanup",
          "--globalsplit",
          "--loweratomic",
          "--coro-elide",
          "--lower-matrix-intrinsics",
          "--strip-nondebug",
          "--ipsccp",
          "--canonicalize-aliases",
          "--loop-distribute",
          "--mldst-motion",
          "--add-discriminators",
          "--rewrite-statepoints-for-gc",
          "--coro-early",
          "--elim-avail-extern",
          "--barrier",
          "--globaldce",
          "--always-inline",
          "--bdce",
          "--mergefunc",
          "--loop-versioning-licm",
          "--strip-dead-prototypes",
          "--sccp",
          "--consthoist",
          "--load-store-vectorizer",
          "--hotcoldsplit",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+10.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--coro-cleanup",
      "--globalsplit",
      "--loweratomic",
      "--coro-elide",
      "--lower-matrix-intrinsics",
      "--strip-nondebug",
      "--ipsccp",
      "--canonicalize-aliases",
      "--loop-distribute",
      "--mldst-motion",
      "--add-discriminators",
      "--rewrite-statepoints-for-gc",
      "--coro-early",
      "--elim-avail-extern",
      "--barrier",
      "--globaldce",
      "--always-inline",
      "--bdce",
      "--mergefunc",
      "--loop-versioning-licm",
      "--strip-dead-prototypes",
      "--sccp",
      "--consthoist",
      "--load-store-vectorizer",
      "--hotcoldsplit",
      "--dce"
    ],
    "performance_vs_Oz": "+10.8%"
  }
}