{
  "program_id": "poj104-v1_14_1332.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 7,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 7,
    "CriticalCount": 7,
    "NumEdges": 31,
    "const32Bit": 83,
    "const64Bit": 24,
    "numConstZeroes": 46,
    "numConstOnes": 23,
    "UncondBranches": 11,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 22,
    "NumBitCastInst": 24,
    "NumBrInst": 21,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 83,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 30,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 26,
    "TotalInsts": 260,
    "TotalMemInst": 193,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 120
  },
  "baseline_oz_instcount": 116,
  "knowledge_base_entry": [
    "--globalopt",
    "--sccp",
    "--mem2reg",
    "--lower-expect",
    "--prune-eh",
    "--gvn",
    "-loop-reduce",
    "--reassociate",
    "--adce",
    "--die",
    "--slp-vectorizer",
    "-loop-reduce",
    "--sroa",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--adce",
    "--gvn-hoist",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--adce",
          "--mergereturn",
          "--cross-dso-cfi",
          "--inject-tli-mappings",
          "--lower-guard-intrinsic",
          "--globaldce",
          "--sink",
          "--coro-elide",
          "--simplifycfg",
          "--instsimplify",
          "--load-store-vectorizer",
          "--insert-gcov-profiling",
          "--instnamer",
          "--guard-widening",
          "--nary-reassociate",
          "--newgvn",
          "--aggressive-instcombine",
          "--post-inline-ee-instrument",
          "--mergefunc",
          "--div-rem-pairs",
          "--loop-simplify",
          "--deadargelim",
          "--sroa",
          "--loop-versioning",
          "--barrier",
          "--scalarizer",
          "--mem2reg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--adce",
      "--mergereturn",
      "--cross-dso-cfi",
      "--inject-tli-mappings",
      "--lower-guard-intrinsic",
      "--globaldce",
      "--sink",
      "--coro-elide",
      "--simplifycfg",
      "--instsimplify",
      "--load-store-vectorizer",
      "--insert-gcov-profiling",
      "--instnamer",
      "--guard-widening",
      "--nary-reassociate",
      "--newgvn",
      "--aggressive-instcombine",
      "--post-inline-ee-instrument",
      "--mergefunc",
      "--div-rem-pairs",
      "--loop-simplify",
      "--deadargelim",
      "--sroa",
      "--loop-versioning",
      "--barrier",
      "--scalarizer",
      "--mem2reg"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}