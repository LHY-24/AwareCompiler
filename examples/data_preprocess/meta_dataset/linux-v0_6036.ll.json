{
  "program_id": "linux-v0_6036.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 59,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 25,
    "oneSuccessor": 45,
    "twoPred": 16,
    "twoPredOneSuc": 10,
    "twoEach": 5,
    "twoSuccessor": 38,
    "morePreds": 8,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 109,
    "BeginPhi": 1,
    "BranchCount": 83,
    "returnInt": 27,
    "CriticalCount": 21,
    "NumEdges": 121,
    "const32Bit": 226,
    "const64Bit": 63,
    "numConstZeroes": 110,
    "numConstOnes": 101,
    "UncondBranches": 45,
    "binaryConstArg": 19,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 73,
    "NumAndInst": 6,
    "BlockMid": 9,
    "BlockLow": 101,
    "NumBitCastInst": 5,
    "NumBrInst": 83,
    "NumCallInst": 70,
    "NumGetElementPtrInst": 77,
    "NumICmpInst": 34,
    "NumLShrInst": 1,
    "NumLoadInst": 199,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 1,
    "NumRetInst": 27,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 118,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 110,
    "TotalInsts": 736,
    "TotalMemInst": 537,
    "TotalFuncs": 43,
    "ArgsPhi": 2,
    "testUnary": 302
  },
  "baseline_oz_instcount": 736,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--jump-threading",
    "--loop-rotate",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--gvn",
    "--ipsccp",
    "--nary-reassociate",
    "--correlated-propagation",
    "--mergefunc",
    "--simplifycfg",
    "--loop-rotate",
    "--inline",
    "--gvn",
    "--adce",
    "--inline",
    "--globalopt",
    "--reassociate",
    "--early-cse",
    "--inline",
    "--mldst-motion",
    "--licm",
    "--licm",
    "--early-cse",
    "--loop-simplifycfg",
    "--instsimplify",
    "--aggressive-instcombine",
    "--prune-eh",
    "--simplifycfg",
    "--jump-threading",
    "--loop-simplifycfg",
    "--instsimplify",
    "--aggressive-instcombine",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--deadargelim",
          "--correlated-propagation",
          "--strip-nondebug",
          "--die",
          "--simplifycfg",
          "--constmerge",
          "--mergefunc",
          "--loop-vectorize",
          "--dce",
          "--lower-constant-intrinsics",
          "--lowerswitch",
          "--loop-guard-widening",
          "--ee-instrument",
          "--rewrite-statepoints-for-gc",
          "--loop-sink",
          "--slsr",
          "--name-anon-globals",
          "--consthoist",
          "--add-discriminators",
          "--gvn",
          "--ipconstprop",
          "--memcpyopt",
          "--loop-fusion",
          "--loop-rotate",
          "--bdce",
          "--argpromotion",
          "--adce",
          "--speculative-execution",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--deadargelim",
      "--correlated-propagation",
      "--strip-nondebug",
      "--die",
      "--simplifycfg",
      "--constmerge",
      "--mergefunc",
      "--loop-vectorize",
      "--dce",
      "--lower-constant-intrinsics",
      "--lowerswitch",
      "--loop-guard-widening",
      "--ee-instrument",
      "--rewrite-statepoints-for-gc",
      "--loop-sink",
      "--slsr",
      "--name-anon-globals",
      "--consthoist",
      "--add-discriminators",
      "--gvn",
      "--ipconstprop",
      "--memcpyopt",
      "--loop-fusion",
      "--loop-rotate",
      "--bdce",
      "--argpromotion",
      "--adce",
      "--speculative-execution",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}