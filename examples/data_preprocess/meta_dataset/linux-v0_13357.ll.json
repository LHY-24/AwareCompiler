{
  "program_id": "linux-v0_13357.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 82,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 23,
    "oneSuccessor": 73,
    "twoPred": 30,
    "twoPredOneSuc": 12,
    "twoEach": 10,
    "twoSuccessor": 46,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 146,
    "BeginPhi": 0,
    "BranchCount": 119,
    "returnInt": 47,
    "CriticalCount": 14,
    "NumEdges": 165,
    "const32Bit": 360,
    "const64Bit": 18,
    "numConstZeroes": 174,
    "numConstOnes": 135,
    "UncondBranches": 73,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 108,
    "NumAndInst": 3,
    "BlockMid": 12,
    "BlockLow": 134,
    "NumBitCastInst": 35,
    "NumBrInst": 119,
    "NumCallInst": 125,
    "NumGetElementPtrInst": 94,
    "NumICmpInst": 42,
    "NumLShrInst": 0,
    "NumLoadInst": 218,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 27,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 162,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 2,
    "NumZExtInst": 8,
    "TotalBlocks": 146,
    "TotalInsts": 963,
    "TotalMemInst": 707,
    "TotalFuncs": 66,
    "ArgsPhi": 0,
    "testUnary": 387
  },
  "baseline_oz_instcount": 963,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--jump-threading",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--simplifycfg",
    "--slsr",
    "--gvn",
    "--early-cse",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--strip-nondebug",
          "--loop-rotate",
          "--loop-instsimplify",
          "--insert-gcov-profiling",
          "--dse",
          "--loop-guard-widening",
          "--inline",
          "--inferattrs",
          "--early-cse-memssa",
          "--loop-idiom",
          "--dce",
          "--always-inline",
          "--loop-unroll-and-jam",
          "--callsite-splitting",
          "--redundant-dbg-inst-elim",
          "--loop-versioning",
          "--instsimplify",
          "--aggressive-instcombine",
          "--nary-reassociate",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--strip-nondebug",
      "--loop-rotate",
      "--loop-instsimplify",
      "--insert-gcov-profiling",
      "--dse",
      "--loop-guard-widening",
      "--inline",
      "--inferattrs",
      "--early-cse-memssa",
      "--loop-idiom",
      "--dce",
      "--always-inline",
      "--loop-unroll-and-jam",
      "--callsite-splitting",
      "--redundant-dbg-inst-elim",
      "--loop-versioning",
      "--instsimplify",
      "--aggressive-instcombine",
      "--nary-reassociate",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}