{
  "program_id": "linux-v0_1970.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 66,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 15,
    "oneSuccessor": 64,
    "twoPred": 20,
    "twoPredOneSuc": 11,
    "twoEach": 7,
    "twoSuccessor": 24,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 110,
    "BeginPhi": 0,
    "BranchCount": 88,
    "returnInt": 8,
    "CriticalCount": 9,
    "NumEdges": 122,
    "const32Bit": 331,
    "const64Bit": 46,
    "numConstZeroes": 154,
    "numConstOnes": 138,
    "UncondBranches": 64,
    "binaryConstArg": 51,
    "NumAShrInst": 4,
    "NumAddInst": 9,
    "NumAllocaInst": 82,
    "NumAndInst": 16,
    "BlockMid": 11,
    "BlockLow": 99,
    "NumBitCastInst": 29,
    "NumBrInst": 88,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 98,
    "NumICmpInst": 31,
    "NumLShrInst": 0,
    "NumLoadInst": 258,
    "NumMulInst": 6,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 14,
    "NumSelectInst": 2,
    "NumShlInst": 2,
    "NumStoreInst": 129,
    "NumSubInst": 2,
    "NumTruncInst": 9,
    "NumXorInst": 12,
    "NumZExtInst": 30,
    "TotalBlocks": 110,
    "TotalInsts": 904,
    "TotalMemInst": 622,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 422
  },
  "baseline_oz_instcount": 903,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--jump-threading",
    "--mldst-motion",
    "--instsimplify",
    "--loop-instsimplify",
    "--ipsccp",
    "--aggressive-instcombine",
    "--gvn",
    "--licm",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--tailcallelim",
          "--lower-widenable-condition",
          "--ipsccp",
          "--aggressive-instcombine",
          "--strip",
          "--instsimplify",
          "--slsr",
          "--early-cse-memssa",
          "--lower-guard-intrinsic",
          "--inject-tli-mappings",
          "--jump-threading",
          "--hotcoldsplit",
          "--rewrite-statepoints-for-gc",
          "--loop-data-prefetch",
          "--loop-unroll-and-jam",
          "--post-inline-ee-instrument",
          "--cross-dso-cfi",
          "--loop-vectorize",
          "--inferattrs",
          "--scalarizer",
          "--mldst-motion",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--tailcallelim",
      "--lower-widenable-condition",
      "--ipsccp",
      "--aggressive-instcombine",
      "--strip",
      "--instsimplify",
      "--slsr",
      "--early-cse-memssa",
      "--lower-guard-intrinsic",
      "--inject-tli-mappings",
      "--jump-threading",
      "--hotcoldsplit",
      "--rewrite-statepoints-for-gc",
      "--loop-data-prefetch",
      "--loop-unroll-and-jam",
      "--post-inline-ee-instrument",
      "--cross-dso-cfi",
      "--loop-vectorize",
      "--inferattrs",
      "--scalarizer",
      "--mldst-motion",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}