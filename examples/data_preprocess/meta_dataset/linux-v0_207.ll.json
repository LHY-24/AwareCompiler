{
  "program_id": "linux-v0_207.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 3,
    "oneSuccessor": 5,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 3,
    "CriticalCount": 6,
    "NumEdges": 19,
    "const32Bit": 55,
    "const64Bit": 0,
    "numConstZeroes": 21,
    "numConstOnes": 21,
    "UncondBranches": 5,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 18,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 16,
    "NumBitCastInst": 5,
    "NumBrInst": 12,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 20,
    "TotalInsts": 131,
    "TotalMemInst": 98,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 59
  },
  "baseline_oz_instcount": 131,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--jump-threading",
    "--gvn",
    "--licm",
    "--mergefunc",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--simplifycfg",
    "--early-cse-memssa",
    "--ipsccp",
    "--loop-deletion",
    "--early-cse",
    "--loop-simplifycfg",
    "--sroa",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simple-loop-unswitch",
          "--instnamer",
          "--called-value-propagation",
          "--strip-nondebug",
          "--canonicalize-aliases",
          "--loop-load-elim",
          "--inline",
          "--constmerge",
          "--lowerinvoke",
          "--constprop",
          "--strip",
          "--loop-interchange",
          "--globalsplit",
          "--libcalls-shrinkwrap",
          "--sink",
          "--coro-cleanup",
          "--mergefunc",
          "--strip-dead-prototypes",
          "--forceattrs",
          "--strip-debug-declare",
          "--gvn-hoist",
          "--loop-fusion",
          "--loop-guard-widening",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+26.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simple-loop-unswitch",
      "--instnamer",
      "--called-value-propagation",
      "--strip-nondebug",
      "--canonicalize-aliases",
      "--loop-load-elim",
      "--inline",
      "--constmerge",
      "--lowerinvoke",
      "--constprop",
      "--strip",
      "--loop-interchange",
      "--globalsplit",
      "--libcalls-shrinkwrap",
      "--sink",
      "--coro-cleanup",
      "--mergefunc",
      "--strip-dead-prototypes",
      "--forceattrs",
      "--strip-debug-declare",
      "--gvn-hoist",
      "--loop-fusion",
      "--loop-guard-widening",
      "--adce"
    ],
    "performance_vs_Oz": "+26.7%"
  }
}