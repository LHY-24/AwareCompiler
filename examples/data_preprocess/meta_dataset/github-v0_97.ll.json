{
  "program_id": "github-v0_97.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 8,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 12,
    "BeginPhi": 2,
    "BranchCount": 13,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 18,
    "const32Bit": 29,
    "const64Bit": 2,
    "numConstZeroes": 8,
    "numConstOnes": 19,
    "UncondBranches": 8,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 11,
    "NumBitCastInst": 6,
    "NumBrInst": 13,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 39,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 1,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 4,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 14,
    "TotalInsts": 134,
    "TotalMemInst": 78,
    "TotalFuncs": 2,
    "ArgsPhi": 4,
    "testUnary": 64
  },
  "baseline_oz_instcount": 135,
  "knowledge_base_entry": [
    "--dse",
    "--gvn",
    "--instcombine",
    "--inline",
    "--mem2reg",
    "--reassociate",
    "--ipsccp",
    "--instcombine",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--ipsccp",
    "--simplifycfg",
    "--early-cse-memssa",
    "--jump-threading",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globaldce",
          "--hotcoldsplit",
          "--lower-widenable-condition",
          "--coro-cleanup",
          "--tailcallelim",
          "--rewrite-statepoints-for-gc",
          "--lower-guard-intrinsic",
          "--jump-threading",
          "--correlated-propagation",
          "--slsr",
          "--mergereturn",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globaldce",
      "--hotcoldsplit",
      "--lower-widenable-condition",
      "--coro-cleanup",
      "--tailcallelim",
      "--rewrite-statepoints-for-gc",
      "--lower-guard-intrinsic",
      "--jump-threading",
      "--correlated-propagation",
      "--slsr",
      "--mergereturn",
      "--dse"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}