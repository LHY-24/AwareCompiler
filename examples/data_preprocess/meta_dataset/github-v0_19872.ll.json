{
  "program_id": "github-v0_19872.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 3,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 2,
    "CriticalCount": 4,
    "NumEdges": 12,
    "const32Bit": 12,
    "const64Bit": 0,
    "numConstZeroes": 4,
    "numConstOnes": 7,
    "UncondBranches": 4,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 8,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 10,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 3,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 37,
    "TotalMemInst": 20,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 15
  },
  "baseline_oz_instcount": 38,
  "knowledge_base_entry": [
    "--globalopt",
    "--early-cse",
    "--slp-vectorizer",
    "--lower-expect",
    "--correlated-propagation",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--flattencfg",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--slsr",
          "--flattencfg",
          "--correlated-propagation",
          "--jump-threading",
          "--separate-const-offset-from-gep",
          "--lower-guard-intrinsic",
          "--pgo-memop-opt",
          "--ipconstprop",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--slsr",
      "--flattencfg",
      "--correlated-propagation",
      "--jump-threading",
      "--separate-const-offset-from-gep",
      "--lower-guard-intrinsic",
      "--pgo-memop-opt",
      "--ipconstprop",
      "--strip"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}