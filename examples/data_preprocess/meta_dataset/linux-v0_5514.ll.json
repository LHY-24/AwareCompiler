{
  "program_id": "linux-v0_5514.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 78,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 30,
    "oneSuccessor": 71,
    "twoPred": 44,
    "twoPredOneSuc": 22,
    "twoEach": 18,
    "twoSuccessor": 53,
    "morePreds": 2,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 124,
    "BeginPhi": 5,
    "BranchCount": 124,
    "returnInt": 34,
    "CriticalCount": 31,
    "NumEdges": 177,
    "const32Bit": 187,
    "const64Bit": 71,
    "numConstZeroes": 122,
    "numConstOnes": 80,
    "UncondBranches": 71,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 52,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 121,
    "NumBitCastInst": 0,
    "NumBrInst": 124,
    "NumCallInst": 59,
    "NumGetElementPtrInst": 78,
    "NumICmpInst": 54,
    "NumLShrInst": 0,
    "NumLoadInst": 248,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 5,
    "NumRetInst": 5,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 98,
    "NumSubInst": 6,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 15,
    "TotalBlocks": 129,
    "TotalInsts": 777,
    "TotalMemInst": 535,
    "TotalFuncs": 23,
    "ArgsPhi": 10,
    "testUnary": 328
  },
  "baseline_oz_instcount": 778,
  "knowledge_base_entry": [
    "--flattencfg",
    "--adce",
    "--sccp",
    "--reassociate",
    "--bdce",
    "--mergefunc",
    "--aggressive-instcombine",
    "--dse",
    "--sccp",
    "--die",
    "--correlated-propagation",
    "--jump-threading",
    "--sroa",
    "--early-cse-memssa",
    "--mem2reg",
    "--gvn",
    "--die",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--bdce",
    "--early-cse",
    "--sroa",
    "--sccp",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--loop-rotate",
          "--lower-widenable-condition",
          "--forceattrs",
          "--licm",
          "--loop-fusion",
          "-loop-reduce",
          "--inferattrs",
          "--globalsplit",
          "--globaldce",
          "--aggressive-instcombine",
          "--ipconstprop",
          "--lower-constant-intrinsics",
          "--loop-guard-widening",
          "--dce",
          "--loop-versioning",
          "--flattencfg",
          "--elim-avail-extern",
          "--ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--loop-rotate",
      "--lower-widenable-condition",
      "--forceattrs",
      "--licm",
      "--loop-fusion",
      "-loop-reduce",
      "--inferattrs",
      "--globalsplit",
      "--globaldce",
      "--aggressive-instcombine",
      "--ipconstprop",
      "--lower-constant-intrinsics",
      "--loop-guard-widening",
      "--dce",
      "--loop-versioning",
      "--flattencfg",
      "--elim-avail-extern",
      "--ee-instrument"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}