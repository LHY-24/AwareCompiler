{
  "program_id": "poj104-v1_77_1665.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 8,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 41,
    "const64Bit": 23,
    "numConstZeroes": 22,
    "numConstOnes": 27,
    "UncondBranches": 9,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 23,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 27,
    "NumBitCastInst": 18,
    "NumBrInst": 14,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 45,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 29,
    "TotalInsts": 210,
    "TotalMemInst": 147,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 93
  },
  "baseline_oz_instcount": 55,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--prune-eh",
    "--mem2reg",
    "--prune-eh",
    "--elim-avail-extern",
    "--instcombine",
    "--memcpyopt",
    "--inline",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--gvn",
    "--mem2reg",
    "--loop-instsimplify",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--sancov",
          "--loop-unswitch",
          "--elim-avail-extern",
          "--loop-unroll-and-jam",
          "--inline",
          "--lower-guard-intrinsic",
          "--cross-dso-cfi",
          "--ipsccp",
          "--correlated-propagation",
          "--mem2reg",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--sancov",
      "--loop-unswitch",
      "--elim-avail-extern",
      "--loop-unroll-and-jam",
      "--inline",
      "--lower-guard-intrinsic",
      "--cross-dso-cfi",
      "--ipsccp",
      "--correlated-propagation",
      "--mem2reg",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+3.6%"
  }
}