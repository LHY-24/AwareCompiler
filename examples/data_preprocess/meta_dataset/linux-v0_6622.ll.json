{
  "program_id": "linux-v0_6622.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 12,
    "oneSuccessor": 35,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 1,
    "twoSuccessor": 19,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 0,
    "BranchCount": 54,
    "returnInt": 19,
    "CriticalCount": 19,
    "NumEdges": 87,
    "const32Bit": 237,
    "const64Bit": 22,
    "numConstZeroes": 96,
    "numConstOnes": 89,
    "UncondBranches": 35,
    "binaryConstArg": 20,
    "NumAShrInst": 3,
    "NumAddInst": 6,
    "NumAllocaInst": 73,
    "NumAndInst": 8,
    "BlockMid": 18,
    "BlockLow": 59,
    "NumBitCastInst": 14,
    "NumBrInst": 54,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 66,
    "NumICmpInst": 19,
    "NumLShrInst": 1,
    "NumLoadInst": 184,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 98,
    "NumSubInst": 3,
    "NumTruncInst": 15,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 77,
    "TotalInsts": 628,
    "TotalMemInst": 461,
    "TotalFuncs": 33,
    "ArgsPhi": 0,
    "testUnary": 305
  },
  "baseline_oz_instcount": 628,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--sccp",
    "--die",
    "--gvn-hoist",
    "--correlated-propagation",
    "--reassociate",
    "--correlated-propagation",
    "--jump-threading",
    "--loop-rotate",
    "--gvn",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--early-cse",
    "--early-cse-memssa",
    "--lower-expect",
    "--slp-vectorizer",
    "--gvn",
    "--correlated-propagation",
    "--lower-expect",
    "--globalopt",
    "--globaldce",
    "--mergefunc",
    "--mem2reg",
    "--memcpyopt",
    "--early-cse-memssa",
    "--inline",
    "--simplifycfg",
    "--loop-instsimplify",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--barrier",
          "--pgo-memop-opt",
          "--div-rem-pairs",
          "--nary-reassociate",
          "--adce",
          "--strip-debug-declare",
          "--ipsccp",
          "--alignment-from-assumptions",
          "--mem2reg",
          "--coro-early",
          "--mergefunc",
          "--aggressive-instcombine",
          "-loop-reduce",
          "--constmerge",
          "--loop-unroll",
          "--lcssa",
          "--consthoist",
          "--reassociate",
          "--constprop",
          "--partially-inline-libcalls",
          "--lower-constant-intrinsics",
          "--simple-loop-unswitch",
          "--slsr",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--barrier",
      "--pgo-memop-opt",
      "--div-rem-pairs",
      "--nary-reassociate",
      "--adce",
      "--strip-debug-declare",
      "--ipsccp",
      "--alignment-from-assumptions",
      "--mem2reg",
      "--coro-early",
      "--mergefunc",
      "--aggressive-instcombine",
      "-loop-reduce",
      "--constmerge",
      "--loop-unroll",
      "--lcssa",
      "--consthoist",
      "--reassociate",
      "--constprop",
      "--partially-inline-libcalls",
      "--lower-constant-intrinsics",
      "--simple-loop-unswitch",
      "--slsr",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+11.5%"
  }
}