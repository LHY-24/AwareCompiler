{
  "program_id": "github-v0_40367.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 41,
    "const64Bit": 29,
    "numConstZeroes": 32,
    "numConstOnes": 25,
    "UncondBranches": 11,
    "binaryConstArg": 20,
    "NumAShrInst": 5,
    "NumAddInst": 5,
    "NumAllocaInst": 12,
    "NumAndInst": 4,
    "BlockMid": 6,
    "BlockLow": 15,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 1,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 17,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 19,
    "TotalBlocks": 21,
    "TotalInsts": 175,
    "TotalMemInst": 89,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 79
  },
  "baseline_oz_instcount": 175,
  "knowledge_base_entry": [
    "--loop-rotate",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--dse",
    "--simplifycfg",
    "--licm",
    "--dse",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--sccp",
    "--die",
    "--ipsccp",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--reassociate",
    "--jump-threading",
    "--load-store-vectorizer",
    "--gvn",
    "--loop-rotate",
    "--instsimplify",
    "--adce",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerswitch",
          "--deadargelim",
          "--jump-threading",
          "--infer-address-spaces",
          "--inline",
          "--speculative-execution",
          "--coro-early",
          "--instcombine",
          "--sroa",
          "--argpromotion",
          "--elim-avail-extern",
          "--post-inline-ee-instrument",
          "--constmerge",
          "--aggressive-instcombine",
          "--ipsccp",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerswitch",
      "--deadargelim",
      "--jump-threading",
      "--infer-address-spaces",
      "--inline",
      "--speculative-execution",
      "--coro-early",
      "--instcombine",
      "--sroa",
      "--argpromotion",
      "--elim-avail-extern",
      "--post-inline-ee-instrument",
      "--constmerge",
      "--aggressive-instcombine",
      "--ipsccp",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+4.6%"
  }
}