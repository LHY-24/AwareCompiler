{
  "program_id": "github-v0_18051.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 5,
    "oneSuccessor": 12,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 0,
    "CriticalCount": 7,
    "NumEdges": 34,
    "const32Bit": 91,
    "const64Bit": 2,
    "numConstZeroes": 47,
    "numConstOnes": 12,
    "UncondBranches": 12,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 10,
    "NumAndInst": 5,
    "BlockMid": 6,
    "BlockLow": 19,
    "NumBitCastInst": 31,
    "NumBrInst": 23,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 76,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 25,
    "TotalInsts": 236,
    "TotalMemInst": 147,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 132
  },
  "baseline_oz_instcount": 236,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--instcombine",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--ipsccp",
    "--instcombine",
    "--licm",
    "--loop-rotate",
    "--lower-expect",
    "--loop-instsimplify",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--functionattrs",
          "--loop-distribute",
          "--loop-guard-widening",
          "--ee-instrument",
          "--coro-early",
          "--licm",
          "--sink",
          "--ipconstprop",
          "--loweratomic",
          "--lowerswitch",
          "--hotcoldsplit",
          "--loop-unroll-and-jam",
          "--irce",
          "--aggressive-instcombine",
          "--constprop",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--functionattrs",
      "--loop-distribute",
      "--loop-guard-widening",
      "--ee-instrument",
      "--coro-early",
      "--licm",
      "--sink",
      "--ipconstprop",
      "--loweratomic",
      "--lowerswitch",
      "--hotcoldsplit",
      "--loop-unroll-and-jam",
      "--irce",
      "--aggressive-instcombine",
      "--constprop",
      "--float2int"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}