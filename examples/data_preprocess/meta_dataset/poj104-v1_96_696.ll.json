{
  "program_id": "poj104-v1_96_696.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 35,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 9,
    "oneSuccessor": 32,
    "twoPred": 15,
    "twoPredOneSuc": 6,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 0,
    "BranchCount": 50,
    "returnInt": 19,
    "CriticalCount": 7,
    "NumEdges": 68,
    "const32Bit": 122,
    "const64Bit": 88,
    "numConstZeroes": 62,
    "numConstOnes": 74,
    "UncondBranches": 32,
    "binaryConstArg": 39,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 48,
    "NumAndInst": 0,
    "BlockMid": 10,
    "BlockLow": 67,
    "NumBitCastInst": 62,
    "NumBrInst": 50,
    "NumCallInst": 80,
    "NumGetElementPtrInst": 61,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 159,
    "NumMulInst": 8,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 26,
    "NumSExtInst": 29,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 69,
    "NumSubInst": 14,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 77,
    "TotalInsts": 660,
    "TotalMemInst": 417,
    "TotalFuncs": 43,
    "ArgsPhi": 0,
    "testUnary": 305
  },
  "baseline_oz_instcount": 200,
  "knowledge_base_entry": [
    "--indvars",
    "--gvn-hoist",
    "--flattencfg",
    "--elim-avail-extern",
    "--mem2reg",
    "--elim-avail-extern",
    "--sroa",
    "--gvn-hoist",
    "--simplifycfg",
    "--nary-reassociate",
    "--indvars",
    "--instcombine",
    "--sccp",
    "--loop-deletion",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--sroa",
    "--sccp",
    "--globalopt",
    "--newgvn",
    "--correlated-propagation",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--licm",
    "--gvn",
    "--licm",
    "--sroa",
    "--licm",
    "--simplifycfg",
    "--nary-reassociate",
    "--indvars",
    "--instcombine",
    "--ipsccp",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--dce",
    "--aggressive-instcombine",
    "--dce",
    "--newgvn",
    "--inline",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--early-cse",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--jump-threading",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--sroa",
    "--sccp",
    "--dse",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--loop-sink",
          "--instsimplify",
          "--always-inline",
          "--early-cse",
          "--globalsplit",
          "--dse",
          "--break-crit-edges",
          "--simple-loop-unswitch",
          "--sancov",
          "--forceattrs",
          "--lower-widenable-condition",
          "--sroa",
          "--coro-elide",
          "--lower-constant-intrinsics",
          "--called-value-propagation",
          "--indvars",
          "--gvn",
          "--lower-matrix-intrinsics",
          "--functionattrs",
          "--aggressive-instcombine",
          "--licm",
          "--sccp",
          "--simplifycfg",
          "--loop-versioning-licm",
          "--insert-gcov-profiling",
          "--infer-address-spaces"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--loop-sink",
      "--instsimplify",
      "--always-inline",
      "--early-cse",
      "--globalsplit",
      "--dse",
      "--break-crit-edges",
      "--simple-loop-unswitch",
      "--sancov",
      "--forceattrs",
      "--lower-widenable-condition",
      "--sroa",
      "--coro-elide",
      "--lower-constant-intrinsics",
      "--called-value-propagation",
      "--indvars",
      "--gvn",
      "--lower-matrix-intrinsics",
      "--functionattrs",
      "--aggressive-instcombine",
      "--licm",
      "--sccp",
      "--simplifycfg",
      "--loop-versioning-licm",
      "--insert-gcov-profiling",
      "--infer-address-spaces"
    ],
    "performance_vs_Oz": "+11.0%"
  }
}