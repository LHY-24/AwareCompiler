{
  "program_id": "linux-v0_7387.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 5,
    "oneSuccessor": 23,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 57,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 14,
    "CriticalCount": 2,
    "NumEdges": 45,
    "const32Bit": 319,
    "const64Bit": 28,
    "numConstZeroes": 150,
    "numConstOnes": 79,
    "UncondBranches": 23,
    "binaryConstArg": 33,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 53,
    "NumAndInst": 23,
    "BlockMid": 12,
    "BlockLow": 45,
    "NumBitCastInst": 8,
    "NumBrInst": 34,
    "NumCallInst": 61,
    "NumGetElementPtrInst": 142,
    "NumICmpInst": 12,
    "NumLShrInst": 3,
    "NumLoadInst": 251,
    "NumMulInst": 0,
    "NumOrInst": 11,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 11,
    "NumStoreInst": 98,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 3,
    "NumZExtInst": 60,
    "TotalBlocks": 57,
    "TotalInsts": 808,
    "TotalMemInst": 605,
    "TotalFuncs": 36,
    "ArgsPhi": 0,
    "testUnary": 384
  },
  "baseline_oz_instcount": 808,
  "knowledge_base_entry": [
    "--bdce",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--sccp",
    "--adce",
    "--gvn-hoist",
    "--gvn",
    "--mergefunc",
    "--gvn",
    "--simplifycfg",
    "--prune-eh",
    "--instsimplify",
    "--early-cse",
    "--instsimplify",
    "--sccp",
    "--adce",
    "--gvn-hoist",
    "--gvn",
    "--mergefunc",
    "--gvn",
    "--simplifycfg",
    "--prune-eh",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--irce",
          "--mem2reg",
          "--guard-widening",
          "--float2int",
          "--instcombine",
          "--dce",
          "--constmerge",
          "--mergefunc",
          "--loop-interchange",
          "--licm",
          "--partial-inliner",
          "--lower-matrix-intrinsics",
          "--mldst-motion",
          "--indvars",
          "--canonicalize-aliases",
          "--mergereturn",
          "--aggressive-instcombine",
          "--loop-sink",
          "--separate-const-offset-from-gep",
          "--ee-instrument",
          "--name-anon-globals",
          "--correlated-propagation",
          "--loop-instsimplify",
          "--loop-rotate",
          "--div-rem-pairs",
          "--jump-threading",
          "--inferattrs",
          "--hotcoldsplit",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--irce",
      "--mem2reg",
      "--guard-widening",
      "--float2int",
      "--instcombine",
      "--dce",
      "--constmerge",
      "--mergefunc",
      "--loop-interchange",
      "--licm",
      "--partial-inliner",
      "--lower-matrix-intrinsics",
      "--mldst-motion",
      "--indvars",
      "--canonicalize-aliases",
      "--mergereturn",
      "--aggressive-instcombine",
      "--loop-sink",
      "--separate-const-offset-from-gep",
      "--ee-instrument",
      "--name-anon-globals",
      "--correlated-propagation",
      "--loop-instsimplify",
      "--loop-rotate",
      "--div-rem-pairs",
      "--jump-threading",
      "--inferattrs",
      "--hotcoldsplit",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}