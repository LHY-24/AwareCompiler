{
  "program_id": "github-v0_12718.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 46,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 4,
    "oneSuccessor": 44,
    "twoPred": 17,
    "twoPredOneSuc": 3,
    "twoEach": 13,
    "twoSuccessor": 20,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 68,
    "BeginPhi": 1,
    "BranchCount": 64,
    "returnInt": 9,
    "CriticalCount": 6,
    "NumEdges": 84,
    "const32Bit": 290,
    "const64Bit": 92,
    "numConstZeroes": 171,
    "numConstOnes": 129,
    "UncondBranches": 44,
    "binaryConstArg": 66,
    "NumAShrInst": 3,
    "NumAddInst": 26,
    "NumAllocaInst": 44,
    "NumAndInst": 18,
    "BlockMid": 18,
    "BlockLow": 51,
    "NumBitCastInst": 15,
    "NumBrInst": 64,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 107,
    "NumICmpInst": 26,
    "NumLShrInst": 7,
    "NumLoadInst": 200,
    "NumMulInst": 0,
    "NumOrInst": 18,
    "NumPHIInst": 1,
    "NumRetInst": 5,
    "NumSExtInst": 46,
    "NumSelectInst": 6,
    "NumShlInst": 23,
    "NumStoreInst": 138,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 4,
    "NumZExtInst": 9,
    "TotalBlocks": 69,
    "TotalInsts": 781,
    "TotalMemInst": 503,
    "TotalFuncs": 6,
    "ArgsPhi": 2,
    "testUnary": 319
  },
  "baseline_oz_instcount": 782,
  "knowledge_base_entry": [
    "--sroa",
    "--inline",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--dce",
    "--gvn-hoist",
    "--mergefunc",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--instcombine",
    "--loop-instsimplify",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll",
          "--pgo-memop-opt",
          "--attributor",
          "--loop-simplifycfg",
          "--loop-rotate",
          "--loop-unswitch",
          "--dse",
          "--called-value-propagation",
          "--reassociate",
          "--partially-inline-libcalls",
          "--speculative-execution",
          "--ipconstprop",
          "--loop-versioning-licm",
          "--sink",
          "--gvn-hoist",
          "--lower-expect",
          "--loop-deletion",
          "--separate-const-offset-from-gep",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll",
      "--pgo-memop-opt",
      "--attributor",
      "--loop-simplifycfg",
      "--loop-rotate",
      "--loop-unswitch",
      "--dse",
      "--called-value-propagation",
      "--reassociate",
      "--partially-inline-libcalls",
      "--speculative-execution",
      "--ipconstprop",
      "--loop-versioning-licm",
      "--sink",
      "--gvn-hoist",
      "--lower-expect",
      "--loop-deletion",
      "--separate-const-offset-from-gep",
      "--newgvn"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}