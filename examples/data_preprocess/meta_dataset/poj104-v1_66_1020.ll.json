{
  "program_id": "poj104-v1_66_1020.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 2,
    "oneSuccessor": 15,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 9,
    "CriticalCount": 5,
    "NumEdges": 33,
    "const32Bit": 63,
    "const64Bit": 64,
    "numConstZeroes": 32,
    "numConstOnes": 20,
    "UncondBranches": 15,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 22,
    "NumBitCastInst": 14,
    "NumBrInst": 20,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 38,
    "NumSubInst": 5,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 24,
    "TotalInsts": 192,
    "TotalMemInst": 124,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 51
  },
  "baseline_oz_instcount": 131,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--newgvn",
    "--prune-eh",
    "--inline",
    "--load-store-vectorizer",
    "--jump-threading",
    "--slsr",
    "--jump-threading",
    "--instsimplify",
    "--instcombine",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--instcombine",
    "--reassociate",
    "--early-cse-memssa",
    "--ipsccp",
    "--ipsccp",
    "--flattencfg",
    "--load-store-vectorizer",
    "--instcombine",
    "--dse",
    "--sccp",
    "--mem2reg",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--load-store-vectorizer",
          "--strip",
          "--always-inline",
          "--sink",
          "--mem2reg",
          "--lowerinvoke",
          "--alignment-from-assumptions",
          "--insert-gcov-profiling",
          "--gvn-hoist",
          "--newgvn",
          "--loop-unroll-and-jam",
          "--bdce",
          "--instnamer",
          "--consthoist",
          "--early-cse",
          "--guard-widening",
          "--cross-dso-cfi",
          "--memcpyopt",
          "--simplifycfg",
          "--hotcoldsplit",
          "--inferattrs",
          "--redundant-dbg-inst-elim",
          "--loop-sink",
          "--sancov",
          "--lower-matrix-intrinsics",
          "--loop-fusion",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+16.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--load-store-vectorizer",
      "--strip",
      "--always-inline",
      "--sink",
      "--mem2reg",
      "--lowerinvoke",
      "--alignment-from-assumptions",
      "--insert-gcov-profiling",
      "--gvn-hoist",
      "--newgvn",
      "--loop-unroll-and-jam",
      "--bdce",
      "--instnamer",
      "--consthoist",
      "--early-cse",
      "--guard-widening",
      "--cross-dso-cfi",
      "--memcpyopt",
      "--simplifycfg",
      "--hotcoldsplit",
      "--inferattrs",
      "--redundant-dbg-inst-elim",
      "--loop-sink",
      "--sancov",
      "--lower-matrix-intrinsics",
      "--loop-fusion",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+16.0%"
  }
}