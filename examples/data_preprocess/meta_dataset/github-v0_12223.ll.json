{
  "program_id": "github-v0_12223.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 87,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 32,
    "oneSuccessor": 25,
    "twoPred": 15,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 48,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 117,
    "BeginPhi": 3,
    "BranchCount": 73,
    "returnInt": 48,
    "CriticalCount": 14,
    "NumEdges": 124,
    "const32Bit": 159,
    "const64Bit": 43,
    "numConstZeroes": 57,
    "numConstOnes": 101,
    "UncondBranches": 25,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 77,
    "NumAndInst": 0,
    "BlockMid": 16,
    "BlockLow": 104,
    "NumBitCastInst": 7,
    "NumBrInst": 73,
    "NumCallInst": 223,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 48,
    "NumLShrInst": 0,
    "NumLoadInst": 315,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 16,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 90,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 120,
    "TotalInsts": 904,
    "TotalMemInst": 719,
    "TotalFuncs": 91,
    "ArgsPhi": 6,
    "testUnary": 402
  },
  "baseline_oz_instcount": 905,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--adce",
    "--jump-threading",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--reassociate",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--sccp",
    "--sroa",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--strip-dead-prototypes",
          "--rewrite-statepoints-for-gc",
          "--hotcoldsplit",
          "--loop-interchange",
          "--lower-expect",
          "--loop-fusion",
          "--inject-tli-mappings",
          "--separate-const-offset-from-gep",
          "--loop-simplifycfg",
          "--early-cse-memssa",
          "--lcssa",
          "--dce",
          "--called-value-propagation",
          "--div-rem-pairs",
          "--forceattrs",
          "--loop-unswitch",
          "--loop-simplify",
          "--prune-eh",
          "--constmerge",
          "--strip",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--strip-dead-prototypes",
      "--rewrite-statepoints-for-gc",
      "--hotcoldsplit",
      "--loop-interchange",
      "--lower-expect",
      "--loop-fusion",
      "--inject-tli-mappings",
      "--separate-const-offset-from-gep",
      "--loop-simplifycfg",
      "--early-cse-memssa",
      "--lcssa",
      "--dce",
      "--called-value-propagation",
      "--div-rem-pairs",
      "--forceattrs",
      "--loop-unswitch",
      "--loop-simplify",
      "--prune-eh",
      "--constmerge",
      "--strip",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}