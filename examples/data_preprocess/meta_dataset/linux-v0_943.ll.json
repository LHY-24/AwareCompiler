{
  "program_id": "linux-v0_943.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 0,
    "oneSuccessor": 6,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 2,
    "CriticalCount": 6,
    "NumEdges": 18,
    "const32Bit": 79,
    "const64Bit": 1,
    "numConstZeroes": 37,
    "numConstOnes": 22,
    "UncondBranches": 6,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 22,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 20,
    "NumBitCastInst": 4,
    "NumBrInst": 12,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 64,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 30,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 22,
    "TotalInsts": 190,
    "TotalMemInst": 155,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 92
  },
  "baseline_oz_instcount": 190,
  "knowledge_base_entry": [
    "--newgvn",
    "--newgvn",
    "--slp-vectorizer",
    "--mem2reg",
    "--load-store-vectorizer",
    "--die",
    "--sccp",
    "--instcombine",
    "--flattencfg",
    "--gvn",
    "--instcombine",
    "--aggressive-instcombine",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--early-cse-memssa",
    "--memcpyopt",
    "--slp-vectorizer",
    "--loop-reroll",
    "--indvars",
    "--gvn",
    "--instcombine",
    "-loop-reduce",
    "--instcombine",
    "--prune-eh",
    "--aggressive-instcombine",
    "--lower-expect",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--sroa",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "--lower-matrix-intrinsics",
          "--ee-instrument",
          "--nary-reassociate",
          "--deadargelim",
          "--rpo-functionattrs",
          "--div-rem-pairs",
          "--mergefunc",
          "--lower-widenable-condition",
          "--elim-avail-extern",
          "--loop-data-prefetch",
          "--sancov",
          "--memcpyopt",
          "--inject-tli-mappings",
          "--infer-address-spaces",
          "--strip-nondebug",
          "--reassociate",
          "--partially-inline-libcalls",
          "--mergereturn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "--lower-matrix-intrinsics",
      "--ee-instrument",
      "--nary-reassociate",
      "--deadargelim",
      "--rpo-functionattrs",
      "--div-rem-pairs",
      "--mergefunc",
      "--lower-widenable-condition",
      "--elim-avail-extern",
      "--loop-data-prefetch",
      "--sancov",
      "--memcpyopt",
      "--inject-tli-mappings",
      "--infer-address-spaces",
      "--strip-nondebug",
      "--reassociate",
      "--partially-inline-libcalls",
      "--mergereturn"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}