{
  "program_id": "github-v0_24147.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 2,
    "oneSuccessor": 14,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 26,
    "const32Bit": 17,
    "const64Bit": 2,
    "numConstZeroes": 5,
    "numConstOnes": 10,
    "UncondBranches": 14,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 21,
    "NumBitCastInst": 5,
    "NumBrInst": 20,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 30,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 21,
    "TotalInsts": 105,
    "TotalMemInst": 62,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 47
  },
  "baseline_oz_instcount": 106,
  "knowledge_base_entry": [
    "--inline",
    "--instcombine",
    "--aggressive-instcombine",
    "--reassociate",
    "--dse",
    "--load-store-vectorizer",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--gvn-hoist",
          "--inject-tli-mappings",
          "--mergefunc",
          "--sink",
          "--inferattrs",
          "--lowerinvoke",
          "--scalarizer",
          "--attributor",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--gvn-hoist",
      "--inject-tli-mappings",
      "--mergefunc",
      "--sink",
      "--inferattrs",
      "--lowerinvoke",
      "--scalarizer",
      "--attributor",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}