{
  "program_id": "poj104-v1_61_1018.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 1,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 3,
    "CriticalCount": 2,
    "NumEdges": 27,
    "const32Bit": 37,
    "const64Bit": 21,
    "numConstZeroes": 12,
    "numConstOnes": 27,
    "UncondBranches": 13,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 18,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 27,
    "NumBitCastInst": 19,
    "NumBrInst": 20,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 40,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 30,
    "TotalInsts": 189,
    "TotalMemInst": 124,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 82
  },
  "baseline_oz_instcount": 58,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--gvn-hoist",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--sroa",
    "--jump-threading",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--reassociate",
    "--ipsccp",
    "--mergefunc",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--sroa",
    "--lower-expect",
    "--early-cse-memssa",
    "--inline",
    "--ipsccp",
    "--die",
    "--correlated-propagation",
    "--sroa",
    "--simplifycfg",
    "--prune-eh",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--sroa",
          "--coro-cleanup",
          "--mergereturn",
          "--load-store-vectorizer",
          "--early-cse-memssa",
          "--break-crit-edges",
          "--loop-idiom",
          "--lower-guard-intrinsic",
          "--flattencfg",
          "--instnamer",
          "--lcssa",
          "--slp-vectorizer",
          "--hotcoldsplit",
          "--libcalls-shrinkwrap",
          "--partially-inline-libcalls",
          "--elim-avail-extern",
          "--deadargelim",
          "--inline",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--sroa",
      "--coro-cleanup",
      "--mergereturn",
      "--load-store-vectorizer",
      "--early-cse-memssa",
      "--break-crit-edges",
      "--loop-idiom",
      "--lower-guard-intrinsic",
      "--flattencfg",
      "--instnamer",
      "--lcssa",
      "--slp-vectorizer",
      "--hotcoldsplit",
      "--libcalls-shrinkwrap",
      "--partially-inline-libcalls",
      "--elim-avail-extern",
      "--deadargelim",
      "--inline",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}