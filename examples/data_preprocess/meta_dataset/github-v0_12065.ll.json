{
  "program_id": "github-v0_12065.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 151,
    "onePredOneSuc": 60,
    "onePredTwoSuc": 91,
    "oneSuccessor": 111,
    "twoPred": 62,
    "twoPredOneSuc": 42,
    "twoEach": 20,
    "twoSuccessor": 126,
    "morePreds": 25,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 237,
    "BeginPhi": 3,
    "BranchCount": 237,
    "returnInt": 38,
    "CriticalCount": 112,
    "NumEdges": 368,
    "const32Bit": 181,
    "const64Bit": 24,
    "numConstZeroes": 76,
    "numConstOnes": 77,
    "UncondBranches": 111,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 20,
    "NumAndInst": 10,
    "BlockMid": 1,
    "BlockLow": 239,
    "NumBitCastInst": 0,
    "NumBrInst": 237,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 129,
    "NumLShrInst": 0,
    "NumLoadInst": 242,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 2,
    "NumSExtInst": 36,
    "NumSelectInst": 3,
    "NumShlInst": 0,
    "NumStoreInst": 96,
    "NumSubInst": 2,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 96,
    "TotalBlocks": 240,
    "TotalInsts": 951,
    "TotalMemInst": 424,
    "TotalFuncs": 17,
    "ArgsPhi": 6,
    "testUnary": 402
  },
  "baseline_oz_instcount": 928,
  "knowledge_base_entry": [
    "--ipsccp",
    "--instcombine",
    "--sccp",
    "--inline",
    "--die",
    "--mem2reg",
    "--elim-avail-extern",
    "--instcombine",
    "--memcpyopt",
    "--gvn-hoist",
    "--memcpyopt",
    "--inline",
    "--instcombine",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--lower-matrix-intrinsics",
          "--strip-nondebug",
          "--lower-guard-intrinsic",
          "--callsite-splitting",
          "--attributor",
          "--constprop",
          "--coro-cleanup",
          "--ipsccp",
          "--gvn-hoist",
          "--constmerge",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--lower-matrix-intrinsics",
      "--strip-nondebug",
      "--lower-guard-intrinsic",
      "--callsite-splitting",
      "--attributor",
      "--constprop",
      "--coro-cleanup",
      "--ipsccp",
      "--gvn-hoist",
      "--constmerge",
      "--reassociate"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}