{
  "program_id": "github-v0_28997.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 25,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 4,
    "oneSuccessor": 24,
    "twoPred": 16,
    "twoPredOneSuc": 3,
    "twoEach": 10,
    "twoSuccessor": 18,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 3,
    "BranchCount": 42,
    "returnInt": 7,
    "CriticalCount": 12,
    "NumEdges": 60,
    "const32Bit": 64,
    "const64Bit": 3,
    "numConstZeroes": 15,
    "numConstOnes": 36,
    "UncondBranches": 24,
    "binaryConstArg": 18,
    "NumAShrInst": 3,
    "NumAddInst": 4,
    "NumAllocaInst": 22,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 44,
    "NumBitCastInst": 0,
    "NumBrInst": 42,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 18,
    "NumLShrInst": 1,
    "NumLoadInst": 77,
    "NumMulInst": 5,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 7,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 51,
    "NumSubInst": 3,
    "NumTruncInst": 11,
    "NumXorInst": 2,
    "NumZExtInst": 11,
    "TotalBlocks": 49,
    "TotalInsts": 293,
    "TotalMemInst": 164,
    "TotalFuncs": 8,
    "ArgsPhi": 6,
    "testUnary": 136
  },
  "baseline_oz_instcount": 293,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--gvn",
    "--aggressive-instcombine",
    "--instsimplify",
    "--sroa",
    "--memcpyopt",
    "--licm",
    "--sccp",
    "--globalopt",
    "--loop-deletion",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "--guard-widening",
          "--loop-data-prefetch",
          "--coro-cleanup",
          "--mldst-motion",
          "--ipconstprop",
          "--speculative-execution",
          "--irce",
          "--post-inline-ee-instrument",
          "--strip-debug-declare",
          "--loop-unroll-and-jam",
          "--mergereturn",
          "--inferattrs",
          "--loop-interchange",
          "--separate-const-offset-from-gep",
          "--aggressive-instcombine",
          "--lcssa",
          "--loop-unroll",
          "--sancov",
          "--ee-instrument",
          "--sroa",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "--guard-widening",
      "--loop-data-prefetch",
      "--coro-cleanup",
      "--mldst-motion",
      "--ipconstprop",
      "--speculative-execution",
      "--irce",
      "--post-inline-ee-instrument",
      "--strip-debug-declare",
      "--loop-unroll-and-jam",
      "--mergereturn",
      "--inferattrs",
      "--loop-interchange",
      "--separate-const-offset-from-gep",
      "--aggressive-instcombine",
      "--lcssa",
      "--loop-unroll",
      "--sancov",
      "--ee-instrument",
      "--sroa",
      "--gvn"
    ],
    "performance_vs_Oz": "+3.1%"
  }
}