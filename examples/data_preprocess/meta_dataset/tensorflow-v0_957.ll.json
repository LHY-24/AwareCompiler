{
  "program_id": "tensorflow-v0_957.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 13,
    "onePred": 54,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 17,
    "oneSuccessor": 35,
    "twoPred": 27,
    "twoPredOneSuc": 5,
    "twoEach": 17,
    "twoSuccessor": 42,
    "morePreds": 3,
    "BB03Phi": 15,
    "BBHiPhi": 1,
    "BBNoPhi": 78,
    "BeginPhi": 16,
    "BranchCount": 77,
    "returnInt": 0,
    "CriticalCount": 30,
    "NumEdges": 119,
    "const32Bit": 282,
    "const64Bit": 213,
    "numConstZeroes": 299,
    "numConstOnes": 105,
    "UncondBranches": 35,
    "binaryConstArg": 44,
    "NumAShrInst": 4,
    "NumAddInst": 6,
    "NumAllocaInst": 23,
    "NumAndInst": 17,
    "BlockMid": 15,
    "BlockLow": 79,
    "NumBitCastInst": 80,
    "NumBrInst": 77,
    "NumCallInst": 115,
    "NumGetElementPtrInst": 106,
    "NumICmpInst": 54,
    "NumLShrInst": 12,
    "NumLoadInst": 89,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 24,
    "NumRetInst": 10,
    "NumSExtInst": 1,
    "NumSelectInst": 19,
    "NumShlInst": 2,
    "NumStoreInst": 47,
    "NumSubInst": 12,
    "NumTruncInst": 7,
    "NumXorInst": 1,
    "NumZExtInst": 10,
    "TotalBlocks": 94,
    "TotalInsts": 741,
    "TotalMemInst": 380,
    "TotalFuncs": 36,
    "ArgsPhi": 53,
    "testUnary": 224
  },
  "baseline_oz_instcount": 736,
  "knowledge_base_entry": [
    "--licm",
    "--instsimplify",
    "--early-cse",
    "--memcpyopt",
    "--early-cse",
    "--nary-reassociate",
    "--dse",
    "--dce",
    "--gvn",
    "--dse",
    "--mergefunc",
    "--gvn",
    "--mem2reg",
    "--dse",
    "--lower-expect",
    "--instsimplify",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--gvn-hoist",
    "--bdce",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--adce",
    "--newgvn",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--gvn",
    "--mergefunc",
    "--loop-simplifycfg",
    "--dse",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--lower-expect",
    "--simplifycfg",
    "--elim-avail-extern",
    "--mldst-motion",
    "--instcombine",
    "--nary-reassociate",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--adce",
    "--elim-avail-extern",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--instsimplify",
    "--early-cse",
    "--memcpyopt",
    "--early-cse",
    "--nary-reassociate",
    "--dse",
    "--dce",
    "--gvn",
    "--dse",
    "--mergefunc",
    "--gvn",
    "--mem2reg",
    "--dse",
    "--lower-expect",
    "--instsimplify",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--gvn-hoist",
    "--bdce",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--adce",
    "--newgvn",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--gvn",
    "--mergefunc",
    "--loop-simplifycfg",
    "--dse",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--lower-expect",
    "--simplifycfg",
    "--elim-avail-extern",
    "--mldst-motion",
    "--instcombine",
    "--slp-vectorizer",
    "--simplifycfg",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--loop-load-elim",
          "--loop-instsimplify",
          "--rewrite-statepoints-for-gc",
          "--lower-constant-intrinsics",
          "--instsimplify",
          "--loop-rotate",
          "--loop-sink",
          "--flattencfg",
          "--mergereturn",
          "--strip-debug-declare",
          "--simplifycfg",
          "--licm",
          "--early-cse",
          "--dce",
          "--reassociate",
          "--gvn",
          "--rpo-functionattrs",
          "--lower-widenable-condition",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--loop-load-elim",
      "--loop-instsimplify",
      "--rewrite-statepoints-for-gc",
      "--lower-constant-intrinsics",
      "--instsimplify",
      "--loop-rotate",
      "--loop-sink",
      "--flattencfg",
      "--mergereturn",
      "--strip-debug-declare",
      "--simplifycfg",
      "--licm",
      "--early-cse",
      "--dce",
      "--reassociate",
      "--gvn",
      "--rpo-functionattrs",
      "--lower-widenable-condition",
      "--instcombine"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}