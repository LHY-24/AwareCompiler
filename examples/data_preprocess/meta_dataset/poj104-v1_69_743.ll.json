{
  "program_id": "poj104-v1_69_743.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 49,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 10,
    "oneSuccessor": 45,
    "twoPred": 16,
    "twoPredOneSuc": 5,
    "twoEach": 9,
    "twoSuccessor": 22,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 85,
    "BeginPhi": 0,
    "BranchCount": 67,
    "returnInt": 18,
    "CriticalCount": 10,
    "NumEdges": 89,
    "const32Bit": 94,
    "const64Bit": 96,
    "numConstZeroes": 65,
    "numConstOnes": 63,
    "UncondBranches": 45,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 40,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 77,
    "NumBitCastInst": 62,
    "NumBrInst": 67,
    "NumCallInst": 75,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 126,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 21,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 69,
    "NumSubInst": 10,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 85,
    "TotalInsts": 584,
    "TotalMemInst": 355,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 259
  },
  "baseline_oz_instcount": 244,
  "knowledge_base_entry": [
    "--ipsccp",
    "--elim-avail-extern",
    "--adce",
    "--simplifycfg",
    "--sroa",
    "--sccp",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--bdce",
    "--newgvn",
    "--early-cse-memssa",
    "--die",
    "--jump-threading",
    "--nary-reassociate",
    "--mem2reg",
    "--simplifycfg",
    "--dce",
    "--dse",
    "--sccp",
    "--elim-avail-extern",
    "--reassociate",
    "--lower-expect",
    "--sroa",
    "--ipsccp",
    "--globaldce",
    "--mergefunc",
    "--instcombine",
    "--mergefunc",
    "--memcpyopt",
    "--newgvn",
    "--early-cse",
    "--mergefunc",
    "--mem2reg",
    "--inline",
    "--adce",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--strip-nondebug",
          "--ipconstprop",
          "--loop-distribute",
          "--inject-tli-mappings",
          "--strip-debug-declare",
          "--scalarizer",
          "--sroa",
          "--mergefunc",
          "--libcalls-shrinkwrap",
          "--partial-inliner",
          "--speculative-execution",
          "--coro-early",
          "--rpo-functionattrs",
          "--gvn",
          "--lower-constant-intrinsics",
          "--globaldce",
          "--constprop",
          "--loop-simplify",
          "--dse",
          "--lower-guard-intrinsic",
          "--loop-reroll",
          "--argpromotion",
          "--post-inline-ee-instrument",
          "--rewrite-statepoints-for-gc",
          "--consthoist",
          "--coro-cleanup",
          "--mergereturn",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+22.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--strip-nondebug",
      "--ipconstprop",
      "--loop-distribute",
      "--inject-tli-mappings",
      "--strip-debug-declare",
      "--scalarizer",
      "--sroa",
      "--mergefunc",
      "--libcalls-shrinkwrap",
      "--partial-inliner",
      "--speculative-execution",
      "--coro-early",
      "--rpo-functionattrs",
      "--gvn",
      "--lower-constant-intrinsics",
      "--globaldce",
      "--constprop",
      "--loop-simplify",
      "--dse",
      "--lower-guard-intrinsic",
      "--loop-reroll",
      "--argpromotion",
      "--post-inline-ee-instrument",
      "--rewrite-statepoints-for-gc",
      "--consthoist",
      "--coro-cleanup",
      "--mergereturn",
      "--inline"
    ],
    "performance_vs_Oz": "+22.5%"
  }
}