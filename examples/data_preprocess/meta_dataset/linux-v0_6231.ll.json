{
  "program_id": "linux-v0_6231.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 66,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 25,
    "oneSuccessor": 52,
    "twoPred": 19,
    "twoPredOneSuc": 9,
    "twoEach": 7,
    "twoSuccessor": 40,
    "morePreds": 10,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 109,
    "BeginPhi": 3,
    "BranchCount": 92,
    "returnInt": 37,
    "CriticalCount": 34,
    "NumEdges": 149,
    "const32Bit": 459,
    "const64Bit": 33,
    "numConstZeroes": 273,
    "numConstOnes": 106,
    "UncondBranches": 52,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 65,
    "NumAndInst": 4,
    "BlockMid": 12,
    "BlockLow": 100,
    "NumBitCastInst": 39,
    "NumBrInst": 92,
    "NumCallInst": 53,
    "NumGetElementPtrInst": 177,
    "NumICmpInst": 40,
    "NumLShrInst": 0,
    "NumLoadInst": 216,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 17,
    "NumSExtInst": 12,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 124,
    "NumSubInst": 3,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 112,
    "TotalInsts": 876,
    "TotalMemInst": 635,
    "TotalFuncs": 31,
    "ArgsPhi": 6,
    "testUnary": 348
  },
  "baseline_oz_instcount": 876,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--loweratomic",
    "--instcombine",
    "--mem2reg",
    "--dse",
    "--loop-rotate",
    "--elim-avail-extern",
    "--gvn",
    "--slp-vectorizer",
    "--mem2reg",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--dce",
    "--aggressive-instcombine",
    "--reassociate",
    "--mem2reg",
    "--jump-threading",
    "--reassociate",
    "--adce",
    "--dse",
    "--mergefunc",
    "--adce",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--strip-nondebug",
          "--functionattrs",
          "--hotcoldsplit",
          "--loop-deletion",
          "--instnamer",
          "--loop-load-elim",
          "--lower-matrix-intrinsics",
          "--constprop",
          "--callsite-splitting",
          "--speculative-execution",
          "--nary-reassociate",
          "--globaldce",
          "--ipsccp",
          "--partially-inline-libcalls",
          "--elim-avail-extern",
          "--canonicalize-aliases",
          "--mem2reg",
          "--strip",
          "--adce",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--strip-nondebug",
      "--functionattrs",
      "--hotcoldsplit",
      "--loop-deletion",
      "--instnamer",
      "--loop-load-elim",
      "--lower-matrix-intrinsics",
      "--constprop",
      "--callsite-splitting",
      "--speculative-execution",
      "--nary-reassociate",
      "--globaldce",
      "--ipsccp",
      "--partially-inline-libcalls",
      "--elim-avail-extern",
      "--canonicalize-aliases",
      "--mem2reg",
      "--strip",
      "--adce",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+4.8%"
  }
}