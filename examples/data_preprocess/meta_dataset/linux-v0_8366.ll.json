{
  "program_id": "linux-v0_8366.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 49,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 16,
    "oneSuccessor": 40,
    "twoPred": 13,
    "twoPredOneSuc": 6,
    "twoEach": 2,
    "twoSuccessor": 27,
    "morePreds": 5,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 3,
    "BranchCount": 67,
    "returnInt": 19,
    "CriticalCount": 10,
    "NumEdges": 94,
    "const32Bit": 174,
    "const64Bit": 6,
    "numConstZeroes": 47,
    "numConstOnes": 102,
    "UncondBranches": 40,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 92,
    "NumAndInst": 4,
    "BlockMid": 13,
    "BlockLow": 71,
    "NumBitCastInst": 9,
    "NumBrInst": 67,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 145,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 17,
    "NumSExtInst": 3,
    "NumSelectInst": 3,
    "NumShlInst": 0,
    "NumStoreInst": 112,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 84,
    "TotalInsts": 543,
    "TotalMemInst": 399,
    "TotalFuncs": 28,
    "ArgsPhi": 6,
    "testUnary": 256
  },
  "baseline_oz_instcount": 543,
  "knowledge_base_entry": [
    "--sink",
    "--jump-threading",
    "--mergefunc",
    "--reassociate",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--dce",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--die",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--flattencfg",
    "--gvn-hoist",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--coro-early",
          "--irce",
          "--loop-data-prefetch",
          "--add-discriminators",
          "--loop-distribute",
          "--mem2reg",
          "--reassociate",
          "--sccp",
          "--ipsccp",
          "--loop-interchange",
          "--libcalls-shrinkwrap",
          "--redundant-dbg-inst-elim",
          "--nary-reassociate",
          "--loop-unswitch",
          "--constmerge",
          "--loop-simplify",
          "--mergefunc",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--coro-early",
      "--irce",
      "--loop-data-prefetch",
      "--add-discriminators",
      "--loop-distribute",
      "--mem2reg",
      "--reassociate",
      "--sccp",
      "--ipsccp",
      "--loop-interchange",
      "--libcalls-shrinkwrap",
      "--redundant-dbg-inst-elim",
      "--nary-reassociate",
      "--loop-unswitch",
      "--constmerge",
      "--loop-simplify",
      "--mergefunc",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+9.8%"
  }
}