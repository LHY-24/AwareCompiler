{
  "program_id": "linux-v0_3458.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 83,
    "onePredOneSuc": 61,
    "onePredTwoSuc": 20,
    "oneSuccessor": 77,
    "twoPred": 22,
    "twoPredOneSuc": 10,
    "twoEach": 5,
    "twoSuccessor": 31,
    "morePreds": 12,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 147,
    "BeginPhi": 0,
    "BranchCount": 106,
    "returnInt": 46,
    "CriticalCount": 37,
    "NumEdges": 187,
    "const32Bit": 375,
    "const64Bit": 23,
    "numConstZeroes": 122,
    "numConstOnes": 115,
    "UncondBranches": 77,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 91,
    "NumAndInst": 6,
    "BlockMid": 10,
    "BlockLow": 137,
    "NumBitCastInst": 10,
    "NumBrInst": 106,
    "NumCallInst": 68,
    "NumGetElementPtrInst": 62,
    "NumICmpInst": 30,
    "NumLShrInst": 1,
    "NumLoadInst": 223,
    "NumMulInst": 1,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 30,
    "NumSExtInst": 21,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 146,
    "NumSubInst": 2,
    "NumTruncInst": 17,
    "NumXorInst": 3,
    "NumZExtInst": 27,
    "TotalBlocks": 147,
    "TotalInsts": 875,
    "TotalMemInst": 590,
    "TotalFuncs": 53,
    "ArgsPhi": 0,
    "testUnary": 393
  },
  "baseline_oz_instcount": 880,
  "knowledge_base_entry": [
    "--jump-threading",
    "--aggressive-instcombine",
    "--adce",
    "--ipsccp",
    "--simplifycfg",
    "--lower-expect",
    "--prune-eh",
    "--sroa",
    "--simplifycfg",
    "--slsr",
    "--early-cse",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--loop-data-prefetch",
          "--cross-dso-cfi",
          "--jump-threading",
          "--correlated-propagation",
          "--early-cse",
          "--aggressive-instcombine",
          "--newgvn",
          "--memcpyopt",
          "--inject-tli-mappings",
          "--load-store-vectorizer",
          "--add-discriminators",
          "--loop-unroll",
          "--reassociate",
          "--always-inline",
          "--strip-dead-prototypes"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--loop-data-prefetch",
      "--cross-dso-cfi",
      "--jump-threading",
      "--correlated-propagation",
      "--early-cse",
      "--aggressive-instcombine",
      "--newgvn",
      "--memcpyopt",
      "--inject-tli-mappings",
      "--load-store-vectorizer",
      "--add-discriminators",
      "--loop-unroll",
      "--reassociate",
      "--always-inline",
      "--strip-dead-prototypes"
    ],
    "performance_vs_Oz": "+2.8%"
  }
}