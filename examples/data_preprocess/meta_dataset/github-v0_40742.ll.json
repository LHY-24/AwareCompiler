{
  "program_id": "github-v0_40742.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 37,
    "const64Bit": 32,
    "numConstZeroes": 39,
    "numConstOnes": 19,
    "UncondBranches": 15,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 12,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 22,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 8,
    "NumLShrInst": 1,
    "NumLoadInst": 41,
    "NumMulInst": 1,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 26,
    "TotalBlocks": 27,
    "TotalInsts": 191,
    "TotalMemInst": 102,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 89
  },
  "baseline_oz_instcount": 191,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--jump-threading",
    "--sccp",
    "--elim-avail-extern",
    "--loop-rotate",
    "--gvn",
    "--elim-avail-extern",
    "--ipsccp",
    "--loop-instsimplify",
    "--dce",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--early-cse-memssa",
    "--sroa",
    "--simplifycfg",
    "--slsr",
    "--instcombine",
    "--inline",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--lower-expect",
    "--sroa",
    "--globalopt",
    "--early-cse-memssa",
    "--flattencfg",
    "--mergefunc",
    "--gvn",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--tailcallelim",
          "--partially-inline-libcalls",
          "--reassociate",
          "--gvn-hoist",
          "--correlated-propagation",
          "--ipsccp",
          "--loop-interchange",
          "--slp-vectorizer",
          "--loop-reroll",
          "--prune-eh",
          "--mergeicmps",
          "--globalsplit",
          "--loop-sink",
          "--aggressive-instcombine",
          "--loop-instsimplify",
          "--redundant-dbg-inst-elim",
          "--inline",
          "--inject-tli-mappings",
          "--lower-guard-intrinsic",
          "--strip-debug-declare",
          "--loop-simplifycfg",
          "--loop-load-elim",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--tailcallelim",
      "--partially-inline-libcalls",
      "--reassociate",
      "--gvn-hoist",
      "--correlated-propagation",
      "--ipsccp",
      "--loop-interchange",
      "--slp-vectorizer",
      "--loop-reroll",
      "--prune-eh",
      "--mergeicmps",
      "--globalsplit",
      "--loop-sink",
      "--aggressive-instcombine",
      "--loop-instsimplify",
      "--redundant-dbg-inst-elim",
      "--inline",
      "--inject-tli-mappings",
      "--lower-guard-intrinsic",
      "--strip-debug-declare",
      "--loop-simplifycfg",
      "--loop-load-elim",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}