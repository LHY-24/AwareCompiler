{
  "program_id": "opencv-v0_210.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 13,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 1,
    "oneSuccessor": 12,
    "twoPred": 10,
    "twoPredOneSuc": 0,
    "twoEach": 8,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 1,
    "BranchCount": 24,
    "returnInt": 0,
    "CriticalCount": 11,
    "NumEdges": 36,
    "const32Bit": 75,
    "const64Bit": 59,
    "numConstZeroes": 82,
    "numConstOnes": 9,
    "UncondBranches": 12,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 1,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 25,
    "NumBitCastInst": 12,
    "NumBrInst": 24,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 27,
    "TotalInsts": 205,
    "TotalMemInst": 141,
    "TotalFuncs": 7,
    "ArgsPhi": 3,
    "testUnary": 66
  },
  "baseline_oz_instcount": 205,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--newgvn",
    "--slsr",
    "--instcombine",
    "--early-cse-memssa",
    "--loop-fusion",
    "--indvars",
    "--gvn-hoist",
    "--ipsccp",
    "--jump-threading",
    "--dce",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--called-value-propagation",
          "--post-inline-ee-instrument",
          "--coro-split",
          "--lower-constant-intrinsics",
          "--instcombine",
          "--nary-reassociate",
          "--partial-inliner",
          "--jump-threading",
          "--speculative-execution",
          "--loop-sink",
          "--gvn",
          "--loop-simplify",
          "--early-cse-memssa",
          "--correlated-propagation",
          "--lower-matrix-intrinsics",
          "--strip-debug-declare",
          "--coro-cleanup",
          "--instnamer",
          "--guard-widening",
          "--always-inline",
          "--reassociate",
          "--strip-dead-prototypes",
          "--tailcallelim",
          "--ipconstprop",
          "--div-rem-pairs",
          "--insert-gcov-profiling",
          "--sccp",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--called-value-propagation",
      "--post-inline-ee-instrument",
      "--coro-split",
      "--lower-constant-intrinsics",
      "--instcombine",
      "--nary-reassociate",
      "--partial-inliner",
      "--jump-threading",
      "--speculative-execution",
      "--loop-sink",
      "--gvn",
      "--loop-simplify",
      "--early-cse-memssa",
      "--correlated-propagation",
      "--lower-matrix-intrinsics",
      "--strip-debug-declare",
      "--coro-cleanup",
      "--instnamer",
      "--guard-widening",
      "--always-inline",
      "--reassociate",
      "--strip-dead-prototypes",
      "--tailcallelim",
      "--ipconstprop",
      "--div-rem-pairs",
      "--insert-gcov-profiling",
      "--sccp",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}