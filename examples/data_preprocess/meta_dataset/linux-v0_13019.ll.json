{
  "program_id": "linux-v0_13019.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 1,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 5,
    "BeginPhi": 0,
    "BranchCount": 4,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 5,
    "const32Bit": 37,
    "const64Bit": 10,
    "numConstZeroes": 18,
    "numConstOnes": 19,
    "UncondBranches": 3,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 15,
    "NumAndInst": 4,
    "BlockMid": 4,
    "BlockLow": 1,
    "NumBitCastInst": 16,
    "NumBrInst": 4,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 1,
    "NumLShrInst": 4,
    "NumLoadInst": 33,
    "NumMulInst": 7,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 5,
    "TotalInsts": 147,
    "TotalMemInst": 79,
    "TotalFuncs": 1,
    "ArgsPhi": 0,
    "testUnary": 88
  },
  "baseline_oz_instcount": 147,
  "knowledge_base_entry": [
    "--sink",
    "--early-cse",
    "--bdce",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--sroa",
    "--reassociate",
    "--simplifycfg",
    "--gvn",
    "--dse",
    "--sroa",
    "--aggressive-instcombine",
    "--early-cse",
    "--nary-reassociate",
    "-loop-reduce",
    "--jump-threading",
    "--mergefunc",
    "-loop-reduce",
    "--gvn",
    "--dse",
    "--sroa",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--nary-reassociate",
          "--loop-distribute",
          "--coro-early",
          "--aggressive-instcombine",
          "--lowerswitch",
          "--rewrite-statepoints-for-gc",
          "--loop-unswitch",
          "--strip-dead-prototypes",
          "--libcalls-shrinkwrap",
          "--constprop",
          "--speculative-execution",
          "--pgo-memop-opt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--nary-reassociate",
      "--loop-distribute",
      "--coro-early",
      "--aggressive-instcombine",
      "--lowerswitch",
      "--rewrite-statepoints-for-gc",
      "--loop-unswitch",
      "--strip-dead-prototypes",
      "--libcalls-shrinkwrap",
      "--constprop",
      "--speculative-execution",
      "--pgo-memop-opt"
    ],
    "performance_vs_Oz": "+5.4%"
  }
}