{
  "program_id": "linux-v0_6059.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 11,
    "oneSuccessor": 24,
    "twoPred": 13,
    "twoPredOneSuc": 6,
    "twoEach": 5,
    "twoSuccessor": 18,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 42,
    "returnInt": 8,
    "CriticalCount": 9,
    "NumEdges": 60,
    "const32Bit": 114,
    "const64Bit": 7,
    "numConstZeroes": 51,
    "numConstOnes": 44,
    "UncondBranches": 24,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 27,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 45,
    "NumBitCastInst": 0,
    "NumBrInst": 42,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 16,
    "NumLShrInst": 1,
    "NumLoadInst": 108,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 34,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 50,
    "TotalInsts": 324,
    "TotalMemInst": 233,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 151
  },
  "baseline_oz_instcount": 325,
  "knowledge_base_entry": [
    "--dse",
    "--instcombine",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--sroa",
    "--instsimplify",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--sroa",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--lower-guard-intrinsic",
          "--pgo-memop-opt",
          "--elim-avail-extern",
          "--instcombine",
          "--constmerge",
          "--simplifycfg",
          "--slsr",
          "--coro-elide",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--lower-guard-intrinsic",
      "--pgo-memop-opt",
      "--elim-avail-extern",
      "--instcombine",
      "--constmerge",
      "--simplifycfg",
      "--slsr",
      "--coro-elide",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}