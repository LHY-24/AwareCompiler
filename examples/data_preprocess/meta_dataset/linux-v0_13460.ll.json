{
  "program_id": "linux-v0_13460.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 4,
    "oneSuccessor": 14,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 9,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 7,
    "CriticalCount": 4,
    "NumEdges": 32,
    "const32Bit": 96,
    "const64Bit": 28,
    "numConstZeroes": 34,
    "numConstOnes": 59,
    "UncondBranches": 14,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 58,
    "NumAndInst": 8,
    "BlockMid": 7,
    "BlockLow": 32,
    "NumBitCastInst": 14,
    "NumBrInst": 23,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 9,
    "NumLShrInst": 1,
    "NumLoadInst": 100,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 73,
    "NumSubInst": 6,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 39,
    "TotalInsts": 382,
    "TotalMemInst": 294,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 180
  },
  "baseline_oz_instcount": 382,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--mergefunc",
    "--elim-avail-extern",
    "--adce",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--bdce",
    "--load-store-vectorizer",
    "--early-cse",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--mergefunc",
          "--loop-vectorize",
          "--called-value-propagation",
          "--loop-data-prefetch",
          "--instnamer",
          "--loop-predication",
          "-loop-reduce",
          "--always-inline",
          "--dce",
          "--loop-instsimplify",
          "--mergereturn",
          "--insert-gcov-profiling",
          "--flattencfg",
          "--coro-elide",
          "--loop-rotate",
          "--lowerswitch",
          "--elim-avail-extern",
          "--early-cse",
          "--sroa",
          "--lowerinvoke",
          "--lcssa",
          "--deadargelim",
          "--loop-reroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--mergefunc",
      "--loop-vectorize",
      "--called-value-propagation",
      "--loop-data-prefetch",
      "--instnamer",
      "--loop-predication",
      "-loop-reduce",
      "--always-inline",
      "--dce",
      "--loop-instsimplify",
      "--mergereturn",
      "--insert-gcov-profiling",
      "--flattencfg",
      "--coro-elide",
      "--loop-rotate",
      "--lowerswitch",
      "--elim-avail-extern",
      "--early-cse",
      "--sroa",
      "--lowerinvoke",
      "--lcssa",
      "--deadargelim",
      "--loop-reroll"
    ],
    "performance_vs_Oz": "+5.2%"
  }
}