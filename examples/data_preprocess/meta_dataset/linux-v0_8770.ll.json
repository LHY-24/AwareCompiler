{
  "program_id": "linux-v0_8770.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 5,
    "oneSuccessor": 14,
    "twoPred": 10,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 3,
    "CriticalCount": 6,
    "NumEdges": 34,
    "const32Bit": 99,
    "const64Bit": 38,
    "numConstZeroes": 62,
    "numConstOnes": 35,
    "UncondBranches": 14,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 17,
    "NumAndInst": 5,
    "BlockMid": 4,
    "BlockLow": 22,
    "NumBitCastInst": 9,
    "NumBrInst": 24,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 39,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 56,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 6,
    "NumStoreInst": 43,
    "NumSubInst": 4,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 26,
    "TotalInsts": 260,
    "TotalMemInst": 171,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 100
  },
  "baseline_oz_instcount": 260,
  "knowledge_base_entry": [
    "--early-cse",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--bdce",
    "--inline",
    "--instsimplify",
    "--reassociate",
    "--slp-vectorizer",
    "--newgvn",
    "--jump-threading",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--lowerinvoke",
          "--speculative-execution",
          "--lower-guard-intrinsic",
          "--load-store-vectorizer",
          "--adce",
          "--post-inline-ee-instrument",
          "--slp-vectorizer",
          "--mergefunc",
          "--irce",
          "--loop-interchange",
          "--coro-early",
          "--nary-reassociate",
          "--loop-instsimplify",
          "--aggressive-instcombine",
          "--lower-expect",
          "--die",
          "--globalsplit",
          "--gvn",
          "--loop-deletion",
          "--barrier",
          "--always-inline",
          "--deadargelim",
          "--instcombine",
          "--rpo-functionattrs",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--lowerinvoke",
      "--speculative-execution",
      "--lower-guard-intrinsic",
      "--load-store-vectorizer",
      "--adce",
      "--post-inline-ee-instrument",
      "--slp-vectorizer",
      "--mergefunc",
      "--irce",
      "--loop-interchange",
      "--coro-early",
      "--nary-reassociate",
      "--loop-instsimplify",
      "--aggressive-instcombine",
      "--lower-expect",
      "--die",
      "--globalsplit",
      "--gvn",
      "--loop-deletion",
      "--barrier",
      "--always-inline",
      "--deadargelim",
      "--instcombine",
      "--rpo-functionattrs",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}