{
  "program_id": "poj104-v1_89_584.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 7,
    "CriticalCount": 2,
    "NumEdges": 25,
    "const32Bit": 43,
    "const64Bit": 17,
    "numConstZeroes": 16,
    "numConstOnes": 29,
    "UncondBranches": 11,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 24,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 31,
    "NumBitCastInst": 21,
    "NumBrInst": 18,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 47,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 33,
    "TotalInsts": 216,
    "TotalMemInst": 147,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 95
  },
  "baseline_oz_instcount": 70,
  "knowledge_base_entry": [
    "--loop-unroll",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--loop-deletion",
    "--elim-avail-extern",
    "--mldst-motion",
    "--instcombine",
    "--elim-avail-extern",
    "--inline",
    "--licm",
    "--mldst-motion",
    "--slp-vectorizer",
    "--newgvn",
    "--mldst-motion",
    "--jump-threading",
    "--licm",
    "--flattencfg",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--dce",
    "--mergefunc",
    "--mergefunc",
    "--dse",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--simplifycfg",
    "--memcpyopt",
    "--jump-threading",
    "--die",
    "--ipsccp",
    "--ipsccp",
    "--aggressive-instcombine",
    "--reassociate",
    "--inline",
    "--bdce",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--reassociate",
          "--constmerge",
          "--loop-simplify",
          "--sancov",
          "--mem2reg",
          "--coro-cleanup",
          "--prune-eh",
          "--elim-avail-extern",
          "--lcssa",
          "--always-inline",
          "--simplifycfg",
          "--lower-guard-intrinsic",
          "--redundant-dbg-inst-elim",
          "--nary-reassociate",
          "--loweratomic",
          "--ipsccp",
          "--loop-guard-widening",
          "--loop-predication",
          "--early-cse",
          "--globalopt",
          "--attributor",
          "--indvars",
          "--lower-matrix-intrinsics",
          "--add-discriminators",
          "--simple-loop-unswitch",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--reassociate",
      "--constmerge",
      "--loop-simplify",
      "--sancov",
      "--mem2reg",
      "--coro-cleanup",
      "--prune-eh",
      "--elim-avail-extern",
      "--lcssa",
      "--always-inline",
      "--simplifycfg",
      "--lower-guard-intrinsic",
      "--redundant-dbg-inst-elim",
      "--nary-reassociate",
      "--loweratomic",
      "--ipsccp",
      "--loop-guard-widening",
      "--loop-predication",
      "--early-cse",
      "--globalopt",
      "--attributor",
      "--indvars",
      "--lower-matrix-intrinsics",
      "--add-discriminators",
      "--simple-loop-unswitch",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+5.7%"
  }
}