{
  "program_id": "linux-v0_6123.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 35,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 3,
    "oneSuccessor": 34,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 49,
    "BeginPhi": 0,
    "BranchCount": 45,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 56,
    "const32Bit": 37,
    "const64Bit": 43,
    "numConstZeroes": 45,
    "numConstOnes": 30,
    "UncondBranches": 34,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 13,
    "NumAndInst": 3,
    "BlockMid": 2,
    "BlockLow": 47,
    "NumBitCastInst": 2,
    "NumBrInst": 45,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 14,
    "NumLShrInst": 1,
    "NumLoadInst": 59,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 7,
    "NumZExtInst": 5,
    "TotalBlocks": 49,
    "TotalInsts": 248,
    "TotalMemInst": 137,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 101
  },
  "baseline_oz_instcount": 245,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--dce",
    "--sccp",
    "--early-cse",
    "--mergefunc",
    "--bdce",
    "--early-cse-memssa",
    "--flattencfg",
    "--aggressive-instcombine",
    "--die",
    "--ipsccp",
    "--globaldce",
    "--mergefunc",
    "--bdce",
    "--slp-vectorizer",
    "--simplifycfg",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--ipconstprop",
          "--correlated-propagation",
          "--early-cse",
          "--aggressive-instcombine",
          "--simple-loop-unswitch",
          "--loop-deletion",
          "--loop-simplifycfg",
          "--loop-data-prefetch",
          "--nary-reassociate",
          "--ee-instrument",
          "--globalopt",
          "--memcpyopt",
          "--always-inline",
          "--loop-unswitch",
          "--loop-guard-widening",
          "--loop-rotate",
          "--coro-split",
          "--lower-expect",
          "--simplifycfg",
          "--forceattrs",
          "--flattencfg",
          "--loop-interchange",
          "--licm",
          "--functionattrs",
          "--separate-const-offset-from-gep"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--ipconstprop",
      "--correlated-propagation",
      "--early-cse",
      "--aggressive-instcombine",
      "--simple-loop-unswitch",
      "--loop-deletion",
      "--loop-simplifycfg",
      "--loop-data-prefetch",
      "--nary-reassociate",
      "--ee-instrument",
      "--globalopt",
      "--memcpyopt",
      "--always-inline",
      "--loop-unswitch",
      "--loop-guard-widening",
      "--loop-rotate",
      "--coro-split",
      "--lower-expect",
      "--simplifycfg",
      "--forceattrs",
      "--flattencfg",
      "--loop-interchange",
      "--licm",
      "--functionattrs",
      "--separate-const-offset-from-gep"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}