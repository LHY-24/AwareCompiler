{
  "program_id": "github-v0_28201.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 7,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 10,
    "CriticalCount": 4,
    "NumEdges": 17,
    "const32Bit": 23,
    "const64Bit": 0,
    "numConstZeroes": 4,
    "numConstOnes": 12,
    "UncondBranches": 7,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 11,
    "NumBitCastInst": 0,
    "NumBrInst": 12,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 13,
    "TotalInsts": 92,
    "TotalMemInst": 60,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 41
  },
  "baseline_oz_instcount": 91,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--die",
    "--early-cse-memssa",
    "--ipsccp",
    "--loweratomic",
    "--instcombine",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--inline",
    "--prune-eh",
    "--lower-expect",
    "--jump-threading",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--gvn",
    "--die",
    "--sroa",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--gvn-hoist",
          "--early-cse",
          "--lower-expect",
          "--always-inline",
          "--sroa",
          "--globalopt",
          "--constmerge",
          "--early-cse-memssa",
          "--lcssa",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--gvn-hoist",
      "--early-cse",
      "--lower-expect",
      "--always-inline",
      "--sroa",
      "--globalopt",
      "--constmerge",
      "--early-cse-memssa",
      "--lcssa",
      "--globaldce"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}