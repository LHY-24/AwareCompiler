{
  "program_id": "linux-v0_10174.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 75,
    "onePredOneSuc": 53,
    "onePredTwoSuc": 19,
    "oneSuccessor": 64,
    "twoPred": 20,
    "twoPredOneSuc": 7,
    "twoEach": 11,
    "twoSuccessor": 36,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 124,
    "BeginPhi": 0,
    "BranchCount": 100,
    "returnInt": 19,
    "CriticalCount": 14,
    "NumEdges": 144,
    "const32Bit": 388,
    "const64Bit": 56,
    "numConstZeroes": 214,
    "numConstOnes": 105,
    "UncondBranches": 64,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 80,
    "NumAndInst": 2,
    "BlockMid": 13,
    "BlockLow": 111,
    "NumBitCastInst": 15,
    "NumBrInst": 100,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 151,
    "NumICmpInst": 34,
    "NumLShrInst": 0,
    "NumLoadInst": 286,
    "NumMulInst": 2,
    "NumOrInst": 10,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 19,
    "NumSelectInst": 0,
    "NumShlInst": 9,
    "NumStoreInst": 147,
    "NumSubInst": 2,
    "NumTruncInst": 20,
    "NumXorInst": 2,
    "NumZExtInst": 19,
    "TotalBlocks": 124,
    "TotalInsts": 990,
    "TotalMemInst": 715,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 443
  },
  "baseline_oz_instcount": 991,
  "knowledge_base_entry": [
    "--float2int",
    "--newgvn",
    "--ipsccp",
    "--newgvn",
    "--instcombine",
    "--die",
    "--mem2reg",
    "--lower-expect",
    "--nary-reassociate",
    "--early-cse",
    "--gvn-hoist",
    "--ipsccp",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--sccp",
    "--simplifycfg",
    "--instcombine",
    "--die",
    "--mem2reg",
    "--lower-expect",
    "--nary-reassociate",
    "--early-cse",
    "--gvn-hoist",
    "--ipsccp",
    "--mergefunc",
    "--aggressive-instcombine",
    "--reassociate",
    "--elim-avail-extern",
    "--inline",
    "--slp-vectorizer",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--div-rem-pairs",
          "--guard-widening",
          "--strip-dead-prototypes",
          "--prune-eh",
          "--elim-avail-extern",
          "--rewrite-statepoints-for-gc",
          "--aggressive-instcombine",
          "--loop-unroll",
          "--barrier",
          "--loop-predication",
          "--canonicalize-aliases",
          "--strip-nondebug",
          "--instnamer",
          "--inferattrs",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--div-rem-pairs",
      "--guard-widening",
      "--strip-dead-prototypes",
      "--prune-eh",
      "--elim-avail-extern",
      "--rewrite-statepoints-for-gc",
      "--aggressive-instcombine",
      "--loop-unroll",
      "--barrier",
      "--loop-predication",
      "--canonicalize-aliases",
      "--strip-nondebug",
      "--instnamer",
      "--inferattrs",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}