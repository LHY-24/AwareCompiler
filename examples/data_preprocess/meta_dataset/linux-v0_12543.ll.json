{
  "program_id": "linux-v0_12543.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 57,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 14,
    "oneSuccessor": 54,
    "twoPred": 18,
    "twoPredOneSuc": 9,
    "twoEach": 5,
    "twoSuccessor": 24,
    "morePreds": 5,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 101,
    "BeginPhi": 2,
    "BranchCount": 78,
    "returnInt": 18,
    "CriticalCount": 21,
    "NumEdges": 112,
    "const32Bit": 352,
    "const64Bit": 29,
    "numConstZeroes": 144,
    "numConstOnes": 120,
    "UncondBranches": 54,
    "binaryConstArg": 18,
    "NumAShrInst": 2,
    "NumAddInst": 14,
    "NumAllocaInst": 94,
    "NumAndInst": 5,
    "BlockMid": 14,
    "BlockLow": 89,
    "NumBitCastInst": 31,
    "NumBrInst": 78,
    "NumCallInst": 61,
    "NumGetElementPtrInst": 119,
    "NumICmpInst": 23,
    "NumLShrInst": 0,
    "NumLoadInst": 261,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 23,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 3,
    "NumStoreInst": 119,
    "NumSubInst": 6,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 21,
    "TotalBlocks": 103,
    "TotalInsts": 882,
    "TotalMemInst": 654,
    "TotalFuncs": 35,
    "ArgsPhi": 4,
    "testUnary": 422
  },
  "baseline_oz_instcount": 863,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--instcombine",
    "--inline",
    "--ipsccp",
    "--loweratomic",
    "--aggressive-instcombine",
    "--mergefunc",
    "--dse",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--post-inline-ee-instrument",
          "--loop-simplifycfg",
          "--memcpyopt",
          "--bdce",
          "--loop-guard-widening",
          "--strip-dead-prototypes",
          "--tailcallelim",
          "--loop-unroll",
          "--name-anon-globals",
          "--die",
          "--dse",
          "--sancov",
          "--loop-simplify",
          "--loop-data-prefetch",
          "--libcalls-shrinkwrap",
          "--loop-idiom",
          "--reassociate",
          "--aggressive-instcombine",
          "--infer-address-spaces",
          "--mergefunc",
          "--indvars",
          "--canonicalize-aliases",
          "--coro-elide",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--post-inline-ee-instrument",
      "--loop-simplifycfg",
      "--memcpyopt",
      "--bdce",
      "--loop-guard-widening",
      "--strip-dead-prototypes",
      "--tailcallelim",
      "--loop-unroll",
      "--name-anon-globals",
      "--die",
      "--dse",
      "--sancov",
      "--loop-simplify",
      "--loop-data-prefetch",
      "--libcalls-shrinkwrap",
      "--loop-idiom",
      "--reassociate",
      "--aggressive-instcombine",
      "--infer-address-spaces",
      "--mergefunc",
      "--indvars",
      "--canonicalize-aliases",
      "--coro-elide",
      "--globalopt"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}