{
  "program_id": "github-v0_26371.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 5,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 6,
    "returnInt": 10,
    "CriticalCount": 1,
    "NumEdges": 7,
    "const32Bit": 66,
    "const64Bit": 1,
    "numConstZeroes": 13,
    "numConstOnes": 50,
    "UncondBranches": 5,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 33,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 28,
    "NumBitCastInst": 0,
    "NumBrInst": 6,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 46,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 29,
    "TotalInsts": 194,
    "TotalMemInst": 145,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 66
  },
  "baseline_oz_instcount": 194,
  "knowledge_base_entry": [
    "--mergereturn",
    "--jump-threading",
    "--inline",
    "--sccp",
    "--newgvn",
    "--mldst-motion",
    "--jump-threading",
    "--ipsccp",
    "--bdce",
    "--correlated-propagation",
    "--early-cse",
    "-loop-reduce",
    "--mergefunc",
    "--sroa",
    "--reassociate",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--gvn",
    "--flattencfg",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--newgvn",
    "--sccp",
    "--die",
    "--early-cse-memssa",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--loop-idiom",
          "--nary-reassociate",
          "--inferattrs",
          "--instcombine",
          "--loop-instsimplify",
          "--simple-loop-unswitch",
          "--speculative-execution",
          "--loop-interchange",
          "--slsr",
          "--loop-load-elim",
          "--loop-unroll",
          "--ipconstprop",
          "--newgvn",
          "--canonicalize-aliases",
          "--memcpyopt",
          "--loop-versioning",
          "--loop-reroll",
          "--load-store-vectorizer",
          "--post-inline-ee-instrument",
          "--cross-dso-cfi",
          "--loop-predication",
          "--sccp",
          "--prune-eh",
          "--redundant-dbg-inst-elim",
          "--globalsplit",
          "--mergefunc",
          "--coro-elide"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+24.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--loop-idiom",
      "--nary-reassociate",
      "--inferattrs",
      "--instcombine",
      "--loop-instsimplify",
      "--simple-loop-unswitch",
      "--speculative-execution",
      "--loop-interchange",
      "--slsr",
      "--loop-load-elim",
      "--loop-unroll",
      "--ipconstprop",
      "--newgvn",
      "--canonicalize-aliases",
      "--memcpyopt",
      "--loop-versioning",
      "--loop-reroll",
      "--load-store-vectorizer",
      "--post-inline-ee-instrument",
      "--cross-dso-cfi",
      "--loop-predication",
      "--sccp",
      "--prune-eh",
      "--redundant-dbg-inst-elim",
      "--globalsplit",
      "--mergefunc",
      "--coro-elide"
    ],
    "performance_vs_Oz": "+24.2%"
  }
}