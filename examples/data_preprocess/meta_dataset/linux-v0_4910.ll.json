{
  "program_id": "linux-v0_4910.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 57,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 18,
    "oneSuccessor": 45,
    "twoPred": 29,
    "twoPredOneSuc": 8,
    "twoEach": 17,
    "twoSuccessor": 42,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 102,
    "BeginPhi": 0,
    "BranchCount": 87,
    "returnInt": 39,
    "CriticalCount": 31,
    "NumEdges": 129,
    "const32Bit": 160,
    "const64Bit": 68,
    "numConstZeroes": 97,
    "numConstOnes": 48,
    "UncondBranches": 45,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 33,
    "NumAndInst": 3,
    "BlockMid": 6,
    "BlockLow": 96,
    "NumBitCastInst": 0,
    "NumBrInst": 87,
    "NumCallInst": 72,
    "NumGetElementPtrInst": 63,
    "NumICmpInst": 42,
    "NumLShrInst": 3,
    "NumLoadInst": 121,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 47,
    "NumSubInst": 3,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 102,
    "TotalInsts": 540,
    "TotalMemInst": 336,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 186
  },
  "baseline_oz_instcount": 540,
  "knowledge_base_entry": [
    "--irce",
    "--gvn-hoist",
    "--loop-deletion",
    "--sccp",
    "--gvn",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--lower-expect",
    "--early-cse",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--simplifycfg",
    "--memcpyopt",
    "--jump-threading",
    "--dse",
    "--ipsccp",
    "--mergefunc",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--callsite-splitting",
          "--mldst-motion",
          "--gvn-hoist",
          "--adce",
          "--loop-rotate",
          "--dce",
          "--infer-address-spaces",
          "--bdce",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--callsite-splitting",
      "--mldst-motion",
      "--gvn-hoist",
      "--adce",
      "--loop-rotate",
      "--dce",
      "--infer-address-spaces",
      "--bdce",
      "--always-inline"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}