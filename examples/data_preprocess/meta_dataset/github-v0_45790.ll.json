{
  "program_id": "github-v0_45790.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 22,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 7,
    "oneSuccessor": 20,
    "twoPred": 11,
    "twoPredOneSuc": 4,
    "twoEach": 7,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 2,
    "BranchCount": 34,
    "returnInt": 0,
    "CriticalCount": 7,
    "NumEdges": 48,
    "const32Bit": 37,
    "const64Bit": 9,
    "numConstZeroes": 9,
    "numConstOnes": 20,
    "UncondBranches": 20,
    "binaryConstArg": 13,
    "NumAShrInst": 1,
    "NumAddInst": 7,
    "NumAllocaInst": 11,
    "NumAndInst": 3,
    "BlockMid": 2,
    "BlockLow": 33,
    "NumBitCastInst": 2,
    "NumBrInst": 34,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 67,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 1,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 38,
    "NumSubInst": 6,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 10,
    "TotalBlocks": 35,
    "TotalInsts": 218,
    "TotalMemInst": 127,
    "TotalFuncs": 1,
    "ArgsPhi": 4,
    "testUnary": 99
  },
  "baseline_oz_instcount": 218,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--mem2reg",
    "--instcombine",
    "--simplifycfg",
    "--sccp",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--adce",
    "--gvn-hoist",
    "--loop-reroll",
    "--memcpyopt",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-sink",
          "--hotcoldsplit",
          "--scalarizer",
          "--newgvn",
          "--speculative-execution",
          "--lower-matrix-intrinsics",
          "--loop-simplifycfg",
          "--lower-expect",
          "--strip-nondebug",
          "--libcalls-shrinkwrap",
          "--aggressive-instcombine",
          "--coro-split",
          "--dce",
          "--div-rem-pairs",
          "--lower-constant-intrinsics",
          "--functionattrs",
          "--cross-dso-cfi",
          "--correlated-propagation",
          "--consthoist",
          "--bdce",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-sink",
      "--hotcoldsplit",
      "--scalarizer",
      "--newgvn",
      "--speculative-execution",
      "--lower-matrix-intrinsics",
      "--loop-simplifycfg",
      "--lower-expect",
      "--strip-nondebug",
      "--libcalls-shrinkwrap",
      "--aggressive-instcombine",
      "--coro-split",
      "--dce",
      "--div-rem-pairs",
      "--lower-constant-intrinsics",
      "--functionattrs",
      "--cross-dso-cfi",
      "--correlated-propagation",
      "--consthoist",
      "--bdce",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}