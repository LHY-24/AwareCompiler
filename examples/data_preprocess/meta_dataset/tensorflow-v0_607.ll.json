{
  "program_id": "tensorflow-v0_607.ll",
  "autophase_features": {
    "BBNumArgsHi": 7,
    "BBNumArgsLo": 13,
    "onePred": 64,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 33,
    "oneSuccessor": 43,
    "twoPred": 20,
    "twoPredOneSuc": 8,
    "twoEach": 8,
    "twoSuccessor": 46,
    "morePreds": 11,
    "BB03Phi": 20,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 20,
    "BranchCount": 70,
    "returnInt": 2,
    "CriticalCount": 34,
    "NumEdges": 141,
    "const32Bit": 143,
    "const64Bit": 94,
    "numConstZeroes": 170,
    "numConstOnes": 47,
    "UncondBranches": 43,
    "binaryConstArg": 36,
    "NumAShrInst": 1,
    "NumAddInst": 16,
    "NumAllocaInst": 9,
    "NumAndInst": 14,
    "BlockMid": 2,
    "BlockLow": 95,
    "NumBitCastInst": 12,
    "NumBrInst": 70,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 49,
    "NumICmpInst": 26,
    "NumLShrInst": 2,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 33,
    "NumRetInst": 2,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 97,
    "TotalInsts": 404,
    "TotalMemInst": 174,
    "TotalFuncs": 19,
    "ArgsPhi": 81,
    "testUnary": 88
  },
  "baseline_oz_instcount": 397,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "-loop-reduce",
    "--indvars",
    "--slp-vectorizer",
    "--reassociate",
    "--correlated-propagation",
    "--simplifycfg",
    "--dce",
    "--dse",
    "--early-cse-memssa",
    "--instcombine",
    "--gvn",
    "--simplifycfg",
    "--flattencfg",
    "--mem2reg",
    "--reassociate",
    "--globalopt",
    "--gvn-hoist",
    "--jump-threading",
    "--newgvn",
    "--adce",
    "--dce",
    "--die",
    "--licm",
    "--simplifycfg",
    "--prune-eh",
    "--newgvn",
    "--ipsccp",
    "--loop-deletion",
    "--early-cse",
    "--sccp",
    "--lower-expect",
    "--mem2reg",
    "--lower-expect",
    "--mem2reg",
    "--elim-avail-extern",
    "--die",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--instcombine",
          "--argpromotion",
          "--called-value-propagation",
          "--pgo-memop-opt",
          "--partially-inline-libcalls",
          "--loop-versioning-licm",
          "--instnamer",
          "--loop-distribute",
          "--indvars",
          "--lowerinvoke",
          "--barrier",
          "--div-rem-pairs",
          "--bdce",
          "--strip-dead-prototypes",
          "--lcssa",
          "--sancov",
          "--canonicalize-aliases",
          "--inline",
          "--sroa",
          "--globalopt",
          "--loop-deletion",
          "--loop-simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+18.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--instcombine",
      "--argpromotion",
      "--called-value-propagation",
      "--pgo-memop-opt",
      "--partially-inline-libcalls",
      "--loop-versioning-licm",
      "--instnamer",
      "--loop-distribute",
      "--indvars",
      "--lowerinvoke",
      "--barrier",
      "--div-rem-pairs",
      "--bdce",
      "--strip-dead-prototypes",
      "--lcssa",
      "--sancov",
      "--canonicalize-aliases",
      "--inline",
      "--sroa",
      "--globalopt",
      "--loop-deletion",
      "--loop-simplifycfg"
    ],
    "performance_vs_Oz": "+18.6%"
  }
}