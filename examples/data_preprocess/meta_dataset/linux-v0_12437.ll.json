{
  "program_id": "linux-v0_12437.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 64,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 25,
    "oneSuccessor": 54,
    "twoPred": 30,
    "twoPredOneSuc": 15,
    "twoEach": 13,
    "twoSuccessor": 48,
    "morePreds": 8,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 113,
    "BeginPhi": 1,
    "BranchCount": 102,
    "returnInt": 41,
    "CriticalCount": 36,
    "NumEdges": 150,
    "const32Bit": 162,
    "const64Bit": 24,
    "numConstZeroes": 90,
    "numConstOnes": 85,
    "UncondBranches": 54,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 56,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 108,
    "NumBitCastInst": 5,
    "NumBrInst": 102,
    "NumCallInst": 69,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 47,
    "NumLShrInst": 0,
    "NumLoadInst": 147,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 12,
    "NumSExtInst": 3,
    "NumSelectInst": 2,
    "NumShlInst": 1,
    "NumStoreInst": 64,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 114,
    "TotalInsts": 569,
    "TotalMemInst": 374,
    "TotalFuncs": 24,
    "ArgsPhi": 2,
    "testUnary": 219
  },
  "baseline_oz_instcount": 571,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--early-cse",
    "--nary-reassociate",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--mergefunc",
    "--newgvn",
    "--sccp",
    "--inline",
    "--ipsccp",
    "--flattencfg",
    "--instcombine",
    "--globalopt",
    "--globaldce",
    "--aggressive-instcombine",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--alignment-from-assumptions",
          "--loweratomic",
          "--barrier",
          "--loop-simplifycfg",
          "--loop-fusion",
          "--reassociate",
          "--correlated-propagation",
          "--lowerswitch",
          "--coro-early",
          "--strip",
          "--loop-predication",
          "--lcssa",
          "--coro-cleanup",
          "--gvn-hoist",
          "--globalsplit",
          "--infer-address-spaces",
          "--licm",
          "--dce",
          "--mergefunc",
          "--mem2reg",
          "--loop-vectorize",
          "--mergeicmps",
          "--irce",
          "--gvn",
          "--hotcoldsplit",
          "--libcalls-shrinkwrap",
          "-loop-reduce",
          "--cross-dso-cfi",
          "--loop-guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--alignment-from-assumptions",
      "--loweratomic",
      "--barrier",
      "--loop-simplifycfg",
      "--loop-fusion",
      "--reassociate",
      "--correlated-propagation",
      "--lowerswitch",
      "--coro-early",
      "--strip",
      "--loop-predication",
      "--lcssa",
      "--coro-cleanup",
      "--gvn-hoist",
      "--globalsplit",
      "--infer-address-spaces",
      "--licm",
      "--dce",
      "--mergefunc",
      "--mem2reg",
      "--loop-vectorize",
      "--mergeicmps",
      "--irce",
      "--gvn",
      "--hotcoldsplit",
      "--libcalls-shrinkwrap",
      "-loop-reduce",
      "--cross-dso-cfi",
      "--loop-guard-widening"
    ],
    "performance_vs_Oz": "+5.8%"
  }
}