{
  "program_id": "linux-v0_3757.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 50,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 18,
    "oneSuccessor": 43,
    "twoPred": 18,
    "twoPredOneSuc": 7,
    "twoEach": 9,
    "twoSuccessor": 29,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 1,
    "BranchCount": 72,
    "returnInt": 5,
    "CriticalCount": 18,
    "NumEdges": 107,
    "const32Bit": 109,
    "const64Bit": 23,
    "numConstZeroes": 61,
    "numConstOnes": 46,
    "UncondBranches": 43,
    "binaryConstArg": 15,
    "NumAShrInst": 2,
    "NumAddInst": 14,
    "NumAllocaInst": 25,
    "NumAndInst": 6,
    "BlockMid": 5,
    "BlockLow": 73,
    "NumBitCastInst": 11,
    "NumBrInst": 72,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 26,
    "NumLShrInst": 1,
    "NumLoadInst": 148,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 5,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 60,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 3,
    "NumZExtInst": 20,
    "TotalBlocks": 78,
    "TotalInsts": 481,
    "TotalMemInst": 299,
    "TotalFuncs": 6,
    "ArgsPhi": 2,
    "testUnary": 221
  },
  "baseline_oz_instcount": 481,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse-memssa",
    "--gvn",
    "--elim-avail-extern",
    "--early-cse",
    "--indvars",
    "--sroa",
    "--dce",
    "--lower-expect",
    "--globalopt",
    "--early-cse",
    "--globalopt",
    "--newgvn",
    "--sroa",
    "--early-cse",
    "--aggressive-instcombine",
    "--globalopt",
    "--licm",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--aggressive-instcombine",
          "--lower-matrix-intrinsics",
          "--rpo-functionattrs",
          "--always-inline",
          "--post-inline-ee-instrument",
          "--loop-predication",
          "--strip-nondebug",
          "--called-value-propagation",
          "--load-store-vectorizer",
          "--loop-distribute",
          "--slp-vectorizer",
          "--ipconstprop",
          "--name-anon-globals",
          "--licm",
          "--lower-constant-intrinsics",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--aggressive-instcombine",
      "--lower-matrix-intrinsics",
      "--rpo-functionattrs",
      "--always-inline",
      "--post-inline-ee-instrument",
      "--loop-predication",
      "--strip-nondebug",
      "--called-value-propagation",
      "--load-store-vectorizer",
      "--loop-distribute",
      "--slp-vectorizer",
      "--ipconstprop",
      "--name-anon-globals",
      "--licm",
      "--lower-constant-intrinsics",
      "--dce"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}