{
  "program_id": "github-v0_9147.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 12,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 24,
    "const32Bit": 23,
    "const64Bit": 12,
    "numConstZeroes": 9,
    "numConstOnes": 22,
    "UncondBranches": 12,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 15,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 17,
    "NumBitCastInst": 9,
    "NumBrInst": 18,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 6,
    "NumZExtInst": 12,
    "TotalBlocks": 20,
    "TotalInsts": 164,
    "TotalMemInst": 96,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 83
  },
  "baseline_oz_instcount": 164,
  "knowledge_base_entry": [
    "--instsimplify",
    "--newgvn",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--sroa",
    "--inline",
    "--die",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--jump-threading",
          "--correlated-propagation",
          "--rewrite-statepoints-for-gc",
          "--lcssa",
          "--loop-predication",
          "--lower-guard-intrinsic",
          "--attributor",
          "--instnamer",
          "--loweratomic",
          "--globalsplit",
          "--coro-elide",
          "--aggressive-instcombine",
          "--lower-matrix-intrinsics",
          "--instsimplify",
          "--mem2reg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--jump-threading",
      "--correlated-propagation",
      "--rewrite-statepoints-for-gc",
      "--lcssa",
      "--loop-predication",
      "--lower-guard-intrinsic",
      "--attributor",
      "--instnamer",
      "--loweratomic",
      "--globalsplit",
      "--coro-elide",
      "--aggressive-instcombine",
      "--lower-matrix-intrinsics",
      "--instsimplify",
      "--mem2reg"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}