{
  "program_id": "linux-v0_4029.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 43,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 8,
    "oneSuccessor": 38,
    "twoPred": 12,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 18,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 101,
    "BeginPhi": 0,
    "BranchCount": 56,
    "returnInt": 22,
    "CriticalCount": 4,
    "NumEdges": 77,
    "const32Bit": 394,
    "const64Bit": 14,
    "numConstZeroes": 164,
    "numConstOnes": 152,
    "UncondBranches": 38,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 115,
    "NumAndInst": 7,
    "BlockMid": 18,
    "BlockLow": 83,
    "NumBitCastInst": 30,
    "NumBrInst": 56,
    "NumCallInst": 80,
    "NumGetElementPtrInst": 125,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 286,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 43,
    "NumSExtInst": 3,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 154,
    "NumSubInst": 3,
    "NumTruncInst": 2,
    "NumXorInst": 8,
    "NumZExtInst": 10,
    "TotalBlocks": 101,
    "TotalInsts": 960,
    "TotalMemInst": 760,
    "TotalFuncs": 59,
    "ArgsPhi": 0,
    "testUnary": 452
  },
  "baseline_oz_instcount": 960,
  "knowledge_base_entry": [
    "--die",
    "--mergefunc",
    "--mem2reg",
    "--mergefunc",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--separate-const-offset-from-gep",
          "--strip-nondebug",
          "--called-value-propagation",
          "--functionattrs",
          "--consthoist",
          "--elim-avail-extern",
          "--loop-vectorize",
          "--strip-debug-declare",
          "--bdce",
          "--libcalls-shrinkwrap",
          "--tailcallelim",
          "--mergefunc",
          "--loop-data-prefetch",
          "--load-store-vectorizer",
          "--alignment-from-assumptions",
          "--loop-instsimplify",
          "--partial-inliner",
          "--simple-loop-unswitch",
          "--prune-eh",
          "--strip-dead-prototypes",
          "--infer-address-spaces",
          "--inline",
          "--inferattrs",
          "--lower-constant-intrinsics",
          "--loop-interchange"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--separate-const-offset-from-gep",
      "--strip-nondebug",
      "--called-value-propagation",
      "--functionattrs",
      "--consthoist",
      "--elim-avail-extern",
      "--loop-vectorize",
      "--strip-debug-declare",
      "--bdce",
      "--libcalls-shrinkwrap",
      "--tailcallelim",
      "--mergefunc",
      "--loop-data-prefetch",
      "--load-store-vectorizer",
      "--alignment-from-assumptions",
      "--loop-instsimplify",
      "--partial-inliner",
      "--simple-loop-unswitch",
      "--prune-eh",
      "--strip-dead-prototypes",
      "--infer-address-spaces",
      "--inline",
      "--inferattrs",
      "--lower-constant-intrinsics",
      "--loop-interchange"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}