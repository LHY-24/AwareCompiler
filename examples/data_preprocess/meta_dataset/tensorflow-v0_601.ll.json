{
  "program_id": "tensorflow-v0_601.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 14,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 6,
    "oneSuccessor": 10,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 3,
    "BranchCount": 23,
    "returnInt": 0,
    "CriticalCount": 12,
    "NumEdges": 36,
    "const32Bit": 59,
    "const64Bit": 39,
    "numConstZeroes": 54,
    "numConstOnes": 13,
    "UncondBranches": 10,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 24,
    "NumBitCastInst": 7,
    "NumBrInst": 23,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 30,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 3,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 26,
    "TotalInsts": 143,
    "TotalMemInst": 87,
    "TotalFuncs": 3,
    "ArgsPhi": 8,
    "testUnary": 38
  },
  "baseline_oz_instcount": 141,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--dse",
    "--bdce",
    "--lower-expect",
    "--sccp",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--lower-expect",
    "--sccp",
    "--simplifycfg",
    "--correlated-propagation",
    "--dce",
    "--load-store-vectorizer",
    "--lower-expect",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--mergefunc",
    "--licm",
    "--instsimplify",
    "--early-cse",
    "--bdce",
    "--gvn-hoist",
    "--slsr",
    "--jump-threading",
    "--dse",
    "--mem2reg",
    "--instcombine",
    "--sroa",
    "--memcpyopt",
    "--elim-avail-extern",
    "--bdce",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--lower-expect",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--mergefunc",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--loweratomic"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerswitch",
          "--indvars",
          "--load-store-vectorizer",
          "--loop-sink",
          "--loop-reroll",
          "--sroa",
          "--consthoist",
          "--lower-constant-intrinsics",
          "--lower-widenable-condition",
          "--instsimplify",
          "--early-cse-memssa",
          "--separate-const-offset-from-gep",
          "--div-rem-pairs",
          "--sccp",
          "--loop-interchange",
          "--sink",
          "--called-value-propagation",
          "--sancov",
          "--inferattrs",
          "--mem2reg",
          "--jump-threading",
          "--gvn",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerswitch",
      "--indvars",
      "--load-store-vectorizer",
      "--loop-sink",
      "--loop-reroll",
      "--sroa",
      "--consthoist",
      "--lower-constant-intrinsics",
      "--lower-widenable-condition",
      "--instsimplify",
      "--early-cse-memssa",
      "--separate-const-offset-from-gep",
      "--div-rem-pairs",
      "--sccp",
      "--loop-interchange",
      "--sink",
      "--called-value-propagation",
      "--sancov",
      "--inferattrs",
      "--mem2reg",
      "--jump-threading",
      "--gvn",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}