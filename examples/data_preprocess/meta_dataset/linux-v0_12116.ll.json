{
  "program_id": "linux-v0_12116.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 71,
    "onePredOneSuc": 54,
    "onePredTwoSuc": 16,
    "oneSuccessor": 66,
    "twoPred": 20,
    "twoPredOneSuc": 8,
    "twoEach": 8,
    "twoSuccessor": 30,
    "morePreds": 8,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 117,
    "BeginPhi": 3,
    "BranchCount": 96,
    "returnInt": 12,
    "CriticalCount": 13,
    "NumEdges": 140,
    "const32Bit": 228,
    "const64Bit": 26,
    "numConstZeroes": 83,
    "numConstOnes": 136,
    "UncondBranches": 66,
    "binaryConstArg": 37,
    "NumAShrInst": 2,
    "NumAddInst": 12,
    "NumAllocaInst": 99,
    "NumAndInst": 6,
    "BlockMid": 14,
    "BlockLow": 106,
    "NumBitCastInst": 33,
    "NumBrInst": 96,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 36,
    "NumLShrInst": 1,
    "NumLoadInst": 275,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 21,
    "NumSExtInst": 35,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 132,
    "NumSubInst": 9,
    "NumTruncInst": 8,
    "NumXorInst": 7,
    "NumZExtInst": 10,
    "TotalBlocks": 120,
    "TotalInsts": 923,
    "TotalMemInst": 628,
    "TotalFuncs": 37,
    "ArgsPhi": 6,
    "testUnary": 467
  },
  "baseline_oz_instcount": 923,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--mergefunc",
    "--instsimplify",
    "--dce",
    "--die",
    "--slp-vectorizer",
    "--reassociate",
    "--aggressive-instcombine",
    "--globalopt",
    "--lower-expect",
    "--loop-rotate",
    "--inline",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--loop-versioning",
          "--reassociate",
          "--rpo-functionattrs",
          "--insert-gcov-profiling",
          "--loop-predication",
          "--loop-guard-widening",
          "--lower-guard-intrinsic",
          "--ipsccp",
          "--loop-instsimplify",
          "--flattencfg",
          "--ee-instrument",
          "--lowerinvoke",
          "--gvn-hoist",
          "--loweratomic",
          "--constprop",
          "--always-inline",
          "--mergefunc",
          "--loop-data-prefetch",
          "--prune-eh",
          "--loop-deletion",
          "--die",
          "--functionattrs",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--loop-versioning",
      "--reassociate",
      "--rpo-functionattrs",
      "--insert-gcov-profiling",
      "--loop-predication",
      "--loop-guard-widening",
      "--lower-guard-intrinsic",
      "--ipsccp",
      "--loop-instsimplify",
      "--flattencfg",
      "--ee-instrument",
      "--lowerinvoke",
      "--gvn-hoist",
      "--loweratomic",
      "--constprop",
      "--always-inline",
      "--mergefunc",
      "--loop-data-prefetch",
      "--prune-eh",
      "--loop-deletion",
      "--die",
      "--functionattrs",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}