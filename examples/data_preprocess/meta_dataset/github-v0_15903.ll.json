{
  "program_id": "github-v0_15903.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 7,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 12,
    "CriticalCount": 1,
    "NumEdges": 15,
    "const32Bit": 54,
    "const64Bit": 1,
    "numConstZeroes": 20,
    "numConstOnes": 16,
    "UncondBranches": 7,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 11,
    "NumBitCastInst": 0,
    "NumBrInst": 11,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 8,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 13,
    "TotalInsts": 86,
    "TotalMemInst": 64,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 23
  },
  "baseline_oz_instcount": 87,
  "knowledge_base_entry": [
    "--mem2reg",
    "--memcpyopt",
    "--gvn",
    "--ipsccp",
    "--aggressive-instcombine",
    "--mergefunc",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--die",
          "--pgo-memop-opt",
          "--inline",
          "--forceattrs",
          "--lower-widenable-condition",
          "--loop-distribute",
          "--rewrite-statepoints-for-gc",
          "--alignment-from-assumptions",
          "--canonicalize-aliases",
          "--correlated-propagation",
          "--mergeicmps",
          "--early-cse",
          "--ipconstprop",
          "--newgvn",
          "--sroa",
          "--inject-tli-mappings",
          "--loop-data-prefetch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--die",
      "--pgo-memop-opt",
      "--inline",
      "--forceattrs",
      "--lower-widenable-condition",
      "--loop-distribute",
      "--rewrite-statepoints-for-gc",
      "--alignment-from-assumptions",
      "--canonicalize-aliases",
      "--correlated-propagation",
      "--mergeicmps",
      "--early-cse",
      "--ipconstprop",
      "--newgvn",
      "--sroa",
      "--inject-tli-mappings",
      "--loop-data-prefetch"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}