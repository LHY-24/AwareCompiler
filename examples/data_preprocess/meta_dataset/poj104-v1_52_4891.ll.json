{
  "program_id": "poj104-v1_52_4891.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 1,
    "oneSuccessor": 13,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 5,
    "CriticalCount": 1,
    "NumEdges": 23,
    "const32Bit": 16,
    "const64Bit": 13,
    "numConstZeroes": 10,
    "numConstOnes": 11,
    "UncondBranches": 13,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 20,
    "NumBitCastInst": 8,
    "NumBrInst": 18,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 21,
    "TotalInsts": 113,
    "TotalMemInst": 64,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 45
  },
  "baseline_oz_instcount": 83,
  "knowledge_base_entry": [
    "--globaldce",
    "--ipsccp",
    "--inline",
    "--sroa",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--mem2reg",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--flattencfg",
    "--elim-avail-extern",
    "--die",
    "--early-cse-memssa",
    "--early-cse",
    "--jump-threading",
    "--instcombine",
    "--memcpyopt",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--correlated-propagation",
    "--nary-reassociate",
    "--gvn-hoist",
    "--loop-deletion",
    "--early-cse",
    "--elim-avail-extern",
    "--memcpyopt",
    "--mem2reg",
    "--adce",
    "--sccp",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--instcombine",
    "--memcpyopt",
    "--gvn-hoist",
    "--instsimplify",
    "--loop-reroll",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--gvn-hoist",
    "--mldst-motion",
    "--early-cse-memssa",
    "--lower-expect",
    "--globalopt",
    "--lower-expect",
    "--simplifycfg",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--strip-debug-declare",
          "--always-inline",
          "--tailcallelim",
          "--float2int",
          "--name-anon-globals",
          "--argpromotion",
          "--mergeicmps",
          "--constprop",
          "--licm",
          "--reg2mem",
          "--loop-deletion",
          "--functionattrs",
          "--dce",
          "--partially-inline-libcalls",
          "--loop-versioning",
          "--lower-guard-intrinsic",
          "--called-value-propagation",
          "--mldst-motion",
          "--lcssa",
          "--lower-expect",
          "--mem2reg",
          "--lower-matrix-intrinsics",
          "--newgvn",
          "--instcombine",
          "--loop-sink",
          "--simplifycfg",
          "--mergereturn",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--strip-debug-declare",
      "--always-inline",
      "--tailcallelim",
      "--float2int",
      "--name-anon-globals",
      "--argpromotion",
      "--mergeicmps",
      "--constprop",
      "--licm",
      "--reg2mem",
      "--loop-deletion",
      "--functionattrs",
      "--dce",
      "--partially-inline-libcalls",
      "--loop-versioning",
      "--lower-guard-intrinsic",
      "--called-value-propagation",
      "--mldst-motion",
      "--lcssa",
      "--lower-expect",
      "--mem2reg",
      "--lower-matrix-intrinsics",
      "--newgvn",
      "--instcombine",
      "--loop-sink",
      "--simplifycfg",
      "--mergereturn",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+6.0%"
  }
}