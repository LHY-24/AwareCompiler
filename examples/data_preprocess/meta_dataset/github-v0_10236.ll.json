{
  "program_id": "github-v0_10236.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 6,
    "onePred": 7,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 3,
    "oneSuccessor": 4,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 5,
    "twoSuccessor": 11,
    "morePreds": 3,
    "BB03Phi": 8,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 8,
    "BranchCount": 15,
    "returnInt": 0,
    "CriticalCount": 15,
    "NumEdges": 26,
    "const32Bit": 24,
    "const64Bit": 7,
    "numConstZeroes": 4,
    "numConstOnes": 12,
    "UncondBranches": 4,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 6,
    "BlockLow": 12,
    "NumBitCastInst": 0,
    "NumBrInst": 15,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 23,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 15,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 0,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 18,
    "TotalInsts": 160,
    "TotalMemInst": 50,
    "TotalFuncs": 11,
    "ArgsPhi": 33,
    "testUnary": 61
  },
  "baseline_oz_instcount": 162,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--instcombine",
    "--slp-vectorizer",
    "--inline",
    "--mldst-motion",
    "--slp-vectorizer",
    "--mem2reg",
    "--elim-avail-extern",
    "--instcombine",
    "--globalopt",
    "--mergefunc",
    "--mem2reg",
    "--loop-simplifycfg",
    "--newgvn",
    "--sccp",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--instcombine",
    "--memcpyopt",
    "--inline",
    "--reassociate",
    "--simplifycfg",
    "--ipsccp",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--redundant-dbg-inst-elim",
          "--globalopt",
          "--lowerswitch",
          "--argpromotion",
          "--speculative-execution",
          "--barrier",
          "--loweratomic",
          "--functionattrs",
          "--tailcallelim",
          "--loop-unroll",
          "--scalarizer",
          "--loop-guard-widening",
          "--loop-unroll-and-jam",
          "--loop-vectorize",
          "--coro-elide",
          "--post-inline-ee-instrument",
          "--die",
          "--insert-gcov-profiling",
          "--coro-cleanup",
          "--bdce",
          "--lower-guard-intrinsic",
          "--deadargelim",
          "--strip",
          "--newgvn",
          "--strip-debug-declare",
          "--simplifycfg",
          "--pgo-memop-opt",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--redundant-dbg-inst-elim",
      "--globalopt",
      "--lowerswitch",
      "--argpromotion",
      "--speculative-execution",
      "--barrier",
      "--loweratomic",
      "--functionattrs",
      "--tailcallelim",
      "--loop-unroll",
      "--scalarizer",
      "--loop-guard-widening",
      "--loop-unroll-and-jam",
      "--loop-vectorize",
      "--coro-elide",
      "--post-inline-ee-instrument",
      "--die",
      "--insert-gcov-profiling",
      "--coro-cleanup",
      "--bdce",
      "--lower-guard-intrinsic",
      "--deadargelim",
      "--strip",
      "--newgvn",
      "--strip-debug-declare",
      "--simplifycfg",
      "--pgo-memop-opt",
      "--sancov"
    ],
    "performance_vs_Oz": "+3.7%"
  }
}