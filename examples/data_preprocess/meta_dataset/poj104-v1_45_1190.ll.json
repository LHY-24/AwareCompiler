{
  "program_id": "poj104-v1_45_1190.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 14,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 3,
    "CriticalCount": 3,
    "NumEdges": 26,
    "const32Bit": 26,
    "const64Bit": 23,
    "numConstZeroes": 16,
    "numConstOnes": 16,
    "UncondBranches": 14,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 21,
    "NumBitCastInst": 14,
    "NumBrInst": 20,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 15,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 23,
    "TotalInsts": 137,
    "TotalMemInst": 75,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 56
  },
  "baseline_oz_instcount": 69,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--early-cse-memssa",
    "--dce",
    "--sccp",
    "--gvn",
    "--aggressive-instcombine",
    "--reassociate",
    "--gvn",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--licm",
    "--lower-expect",
    "--instcombine",
    "--die",
    "--early-cse",
    "--loop-deletion",
    "--newgvn",
    "--newgvn",
    "--mergefunc",
    "--load-store-vectorizer",
    "--adce",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--sroa",
    "--flattencfg",
    "--elim-avail-extern",
    "--bdce",
    "--sroa",
    "--simplifycfg",
    "--slsr",
    "--slp-vectorizer",
    "--bdce",
    "--correlated-propagation",
    "--mergefunc",
    "--flattencfg",
    "--simplifycfg",
    "--mem2reg",
    "--inline",
    "--instcombine",
    "--die",
    "--early-cse",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "-loop-reduce",
          "--loop-versioning",
          "--strip-nondebug",
          "--guard-widening",
          "--canonicalize-aliases",
          "--loop-vectorize",
          "--add-discriminators",
          "--rewrite-statepoints-for-gc",
          "--early-cse",
          "--post-inline-ee-instrument",
          "--callsite-splitting",
          "--partially-inline-libcalls",
          "--inline",
          "--slsr",
          "--sroa",
          "--coro-early",
          "--partial-inliner",
          "--nary-reassociate",
          "--constmerge",
          "--lower-constant-intrinsics",
          "--lowerinvoke",
          "--lower-widenable-condition",
          "--flattencfg",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "-loop-reduce",
      "--loop-versioning",
      "--strip-nondebug",
      "--guard-widening",
      "--canonicalize-aliases",
      "--loop-vectorize",
      "--add-discriminators",
      "--rewrite-statepoints-for-gc",
      "--early-cse",
      "--post-inline-ee-instrument",
      "--callsite-splitting",
      "--partially-inline-libcalls",
      "--inline",
      "--slsr",
      "--sroa",
      "--coro-early",
      "--partial-inliner",
      "--nary-reassociate",
      "--constmerge",
      "--lower-constant-intrinsics",
      "--lowerinvoke",
      "--lower-widenable-condition",
      "--flattencfg",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}