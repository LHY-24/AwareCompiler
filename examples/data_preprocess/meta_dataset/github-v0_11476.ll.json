{
  "program_id": "github-v0_11476.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 30,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 0,
    "oneSuccessor": 30,
    "twoPred": 10,
    "twoPredOneSuc": 0,
    "twoEach": 10,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 43,
    "BeginPhi": 0,
    "BranchCount": 40,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 50,
    "const32Bit": 115,
    "const64Bit": 24,
    "numConstZeroes": 84,
    "numConstOnes": 36,
    "UncondBranches": 30,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 20,
    "NumAndInst": 0,
    "BlockMid": 18,
    "BlockLow": 25,
    "NumBitCastInst": 0,
    "NumBrInst": 40,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 96,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 242,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 48,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 91,
    "NumSubInst": 12,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 21,
    "TotalBlocks": 43,
    "TotalInsts": 623,
    "TotalMemInst": 466,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 337
  },
  "baseline_oz_instcount": 623,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--lower-expect",
    "--reassociate",
    "--licm",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--prune-eh",
    "--sroa",
    "--mergefunc",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--mem2reg",
          "--globaldce",
          "--loop-deletion",
          "--loop-versioning-licm",
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--simple-loop-unswitch",
          "--loop-idiom",
          "--sccp",
          "--instsimplify",
          "--loop-load-elim",
          "--separate-const-offset-from-gep",
          "--loop-versioning",
          "--rewrite-statepoints-for-gc",
          "--attributor",
          "--loop-vectorize",
          "--hotcoldsplit",
          "--strip-debug-declare",
          "--strip-nondebug",
          "--mergeicmps",
          "--loop-unroll",
          "--loop-simplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--mem2reg",
      "--globaldce",
      "--loop-deletion",
      "--loop-versioning-licm",
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--simple-loop-unswitch",
      "--loop-idiom",
      "--sccp",
      "--instsimplify",
      "--loop-load-elim",
      "--separate-const-offset-from-gep",
      "--loop-versioning",
      "--rewrite-statepoints-for-gc",
      "--attributor",
      "--loop-vectorize",
      "--hotcoldsplit",
      "--strip-debug-declare",
      "--strip-nondebug",
      "--mergeicmps",
      "--loop-unroll",
      "--loop-simplify"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}