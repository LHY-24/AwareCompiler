{
  "program_id": "github-v0_4676.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 73,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 26,
    "oneSuccessor": 45,
    "twoPred": 19,
    "twoPredOneSuc": 3,
    "twoEach": 16,
    "twoSuccessor": 47,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 101,
    "BeginPhi": 0,
    "BranchCount": 92,
    "returnInt": 9,
    "CriticalCount": 32,
    "NumEdges": 139,
    "const32Bit": 307,
    "const64Bit": 3,
    "numConstZeroes": 156,
    "numConstOnes": 61,
    "UncondBranches": 45,
    "binaryConstArg": 53,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 21,
    "NumAndInst": 18,
    "BlockMid": 9,
    "BlockLow": 92,
    "NumBitCastInst": 17,
    "NumBrInst": 92,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 106,
    "NumICmpInst": 47,
    "NumLShrInst": 18,
    "NumLoadInst": 206,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 24,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 59,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 22,
    "TotalBlocks": 101,
    "TotalInsts": 719,
    "TotalMemInst": 454,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 291
  },
  "baseline_oz_instcount": 720,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--newgvn",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--lower-widenable-condition",
          "--rpo-functionattrs",
          "--instsimplify",
          "--mem2reg",
          "--partial-inliner",
          "--speculative-execution",
          "--lower-guard-intrinsic",
          "--loop-unroll-and-jam",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--lower-widenable-condition",
      "--rpo-functionattrs",
      "--instsimplify",
      "--mem2reg",
      "--partial-inliner",
      "--speculative-execution",
      "--lower-guard-intrinsic",
      "--loop-unroll-and-jam",
      "--dce"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}