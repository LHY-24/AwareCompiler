{
  "program_id": "linux-v0_7420.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 50,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 14,
    "oneSuccessor": 40,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 25,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 98,
    "BeginPhi": 0,
    "BranchCount": 65,
    "returnInt": 35,
    "CriticalCount": 7,
    "NumEdges": 94,
    "const32Bit": 391,
    "const64Bit": 32,
    "numConstZeroes": 162,
    "numConstOnes": 127,
    "UncondBranches": 40,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 89,
    "NumAndInst": 12,
    "BlockMid": 22,
    "BlockLow": 76,
    "NumBitCastInst": 21,
    "NumBrInst": 65,
    "NumCallInst": 104,
    "NumGetElementPtrInst": 139,
    "NumICmpInst": 23,
    "NumLShrInst": 1,
    "NumLoadInst": 301,
    "NumMulInst": 6,
    "NumOrInst": 8,
    "NumPHIInst": 0,
    "NumRetInst": 32,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 156,
    "NumSubInst": 0,
    "NumTruncInst": 11,
    "NumXorInst": 2,
    "NumZExtInst": 15,
    "TotalBlocks": 98,
    "TotalInsts": 998,
    "TotalMemInst": 789,
    "TotalFuncs": 59,
    "ArgsPhi": 0,
    "testUnary": 442
  },
  "baseline_oz_instcount": 998,
  "knowledge_base_entry": [
    "--sccp",
    "--gvn",
    "--loop-reroll",
    "--memcpyopt",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--early-cse",
    "--die",
    "--sroa",
    "--indvars",
    "--loop-fusion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--slsr",
          "--ipsccp",
          "--licm",
          "--lower-matrix-intrinsics",
          "--loop-guard-widening",
          "--prune-eh",
          "--loop-vectorize",
          "--rpo-functionattrs",
          "--lcssa",
          "--correlated-propagation",
          "--elim-avail-extern",
          "--jump-threading",
          "--inject-tli-mappings",
          "--aggressive-instcombine",
          "--loop-sink",
          "--guard-widening",
          "--canonicalize-aliases",
          "--consthoist",
          "--hotcoldsplit",
          "--forceattrs",
          "--strip-debug-declare",
          "--globalopt",
          "--coro-early",
          "--memcpyopt",
          "--tailcallelim",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--slsr",
      "--ipsccp",
      "--licm",
      "--lower-matrix-intrinsics",
      "--loop-guard-widening",
      "--prune-eh",
      "--loop-vectorize",
      "--rpo-functionattrs",
      "--lcssa",
      "--correlated-propagation",
      "--elim-avail-extern",
      "--jump-threading",
      "--inject-tli-mappings",
      "--aggressive-instcombine",
      "--loop-sink",
      "--guard-widening",
      "--canonicalize-aliases",
      "--consthoist",
      "--hotcoldsplit",
      "--forceattrs",
      "--strip-debug-declare",
      "--globalopt",
      "--coro-early",
      "--memcpyopt",
      "--tailcallelim",
      "--inline"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}