{
  "program_id": "linux-v0_3451.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 44,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 6,
    "oneSuccessor": 43,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 12,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 84,
    "BeginPhi": 0,
    "BranchCount": 53,
    "returnInt": 34,
    "CriticalCount": 5,
    "NumEdges": 89,
    "const32Bit": 240,
    "const64Bit": 12,
    "numConstZeroes": 75,
    "numConstOnes": 77,
    "UncondBranches": 43,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 57,
    "NumAndInst": 3,
    "BlockMid": 6,
    "BlockLow": 78,
    "NumBitCastInst": 8,
    "NumBrInst": 53,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 132,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 78,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 7,
    "TotalBlocks": 84,
    "TotalInsts": 497,
    "TotalMemInst": 363,
    "TotalFuncs": 42,
    "ArgsPhi": 0,
    "testUnary": 219
  },
  "baseline_oz_instcount": 499,
  "knowledge_base_entry": [
    "--early-cse",
    "--reassociate",
    "--bdce",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--gvn-hoist",
    "--loop-rotate",
    "--mem2reg",
    "--jump-threading",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--pgo-memop-opt",
          "--loop-simplify",
          "--strip-dead-prototypes",
          "--simplifycfg",
          "--loop-data-prefetch",
          "--called-value-propagation",
          "--coro-elide",
          "--slp-vectorizer",
          "--loop-rotate",
          "--consthoist",
          "--lcssa",
          "--scalarizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--pgo-memop-opt",
      "--loop-simplify",
      "--strip-dead-prototypes",
      "--simplifycfg",
      "--loop-data-prefetch",
      "--called-value-propagation",
      "--coro-elide",
      "--slp-vectorizer",
      "--loop-rotate",
      "--consthoist",
      "--lcssa",
      "--scalarizer"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}