{
  "program_id": "github-v0_6353.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 50,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 18,
    "oneSuccessor": 47,
    "twoPred": 25,
    "twoPredOneSuc": 14,
    "twoEach": 6,
    "twoSuccessor": 30,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 90,
    "BeginPhi": 0,
    "BranchCount": 77,
    "returnInt": 15,
    "CriticalCount": 16,
    "NumEdges": 112,
    "const32Bit": 405,
    "const64Bit": 27,
    "numConstZeroes": 220,
    "numConstOnes": 92,
    "UncondBranches": 47,
    "binaryConstArg": 18,
    "NumAShrInst": 2,
    "NumAddInst": 4,
    "NumAllocaInst": 48,
    "NumAndInst": 8,
    "BlockMid": 17,
    "BlockLow": 73,
    "NumBitCastInst": 15,
    "NumBrInst": 77,
    "NumCallInst": 73,
    "NumGetElementPtrInst": 155,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 303,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 106,
    "NumSubInst": 0,
    "NumTruncInst": 14,
    "NumXorInst": 1,
    "NumZExtInst": 17,
    "TotalBlocks": 90,
    "TotalInsts": 880,
    "TotalMemInst": 685,
    "TotalFuncs": 45,
    "ArgsPhi": 0,
    "testUnary": 409
  },
  "baseline_oz_instcount": 880,
  "knowledge_base_entry": [
    "--reassociate",
    "--adce",
    "--early-cse",
    "--slp-vectorizer",
    "--instcombine",
    "--lower-expect",
    "--adce",
    "--aggressive-instcombine",
    "--lower-expect",
    "--elim-avail-extern",
    "--gvn",
    "--indvars",
    "--slsr",
    "--slp-vectorizer",
    "--newgvn",
    "--slp-vectorizer",
    "--reassociate",
    "--dce",
    "--mergefunc",
    "--correlated-propagation",
    "--newgvn",
    "--slp-vectorizer",
    "--reassociate",
    "--adce",
    "--early-cse",
    "--aggressive-instcombine",
    "--loweratomic",
    "--globalopt",
    "--mem2reg",
    "--lower-expect",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--mldst-motion",
    "--licm",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--loop-distribute",
          "--load-store-vectorizer",
          "--strip",
          "--loop-load-elim",
          "--functionattrs",
          "--memcpyopt",
          "--inferattrs",
          "--aggressive-instcombine",
          "--coro-early",
          "--loop-data-prefetch",
          "--redundant-dbg-inst-elim",
          "--ipconstprop",
          "--deadargelim",
          "--slsr",
          "--bdce",
          "--strip-debug-declare",
          "--dce",
          "--loop-simplifycfg",
          "--globalopt",
          "--lower-expect",
          "--mergefunc",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--loop-distribute",
      "--load-store-vectorizer",
      "--strip",
      "--loop-load-elim",
      "--functionattrs",
      "--memcpyopt",
      "--inferattrs",
      "--aggressive-instcombine",
      "--coro-early",
      "--loop-data-prefetch",
      "--redundant-dbg-inst-elim",
      "--ipconstprop",
      "--deadargelim",
      "--slsr",
      "--bdce",
      "--strip-debug-declare",
      "--dce",
      "--loop-simplifycfg",
      "--globalopt",
      "--lower-expect",
      "--mergefunc",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}