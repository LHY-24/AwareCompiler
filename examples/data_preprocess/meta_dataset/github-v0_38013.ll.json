{
  "program_id": "github-v0_38013.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 73,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 23,
    "oneSuccessor": 61,
    "twoPred": 26,
    "twoPredOneSuc": 10,
    "twoEach": 16,
    "twoSuccessor": 41,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 104,
    "BeginPhi": 0,
    "BranchCount": 102,
    "returnInt": 1,
    "CriticalCount": 27,
    "NumEdges": 159,
    "const32Bit": 192,
    "const64Bit": 23,
    "numConstZeroes": 91,
    "numConstOnes": 49,
    "UncondBranches": 61,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 15,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 96,
    "NumBitCastInst": 7,
    "NumBrInst": 102,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 76,
    "NumICmpInst": 41,
    "NumLShrInst": 0,
    "NumLoadInst": 204,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 97,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 6,
    "TotalBlocks": 104,
    "TotalInsts": 599,
    "TotalMemInst": 405,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 247
  },
  "baseline_oz_instcount": 600,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--prune-eh",
    "--simplifycfg",
    "--ipsccp",
    "--reassociate",
    "--early-cse-memssa",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--dse",
    "--gvn",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--insert-gcov-profiling",
          "--loop-vectorize",
          "--strip",
          "--separate-const-offset-from-gep",
          "--instnamer",
          "--redundant-dbg-inst-elim",
          "--mergefunc",
          "--sccp",
          "--sroa",
          "--name-anon-globals",
          "--guard-widening",
          "--coro-cleanup",
          "--mergereturn",
          "--loop-versioning",
          "--coro-early",
          "--early-cse",
          "--loweratomic",
          "--globalsplit",
          "--attributor",
          "--add-discriminators",
          "--infer-address-spaces",
          "--constmerge",
          "--inject-tli-mappings",
          "--newgvn",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--insert-gcov-profiling",
      "--loop-vectorize",
      "--strip",
      "--separate-const-offset-from-gep",
      "--instnamer",
      "--redundant-dbg-inst-elim",
      "--mergefunc",
      "--sccp",
      "--sroa",
      "--name-anon-globals",
      "--guard-widening",
      "--coro-cleanup",
      "--mergereturn",
      "--loop-versioning",
      "--coro-early",
      "--early-cse",
      "--loweratomic",
      "--globalsplit",
      "--attributor",
      "--add-discriminators",
      "--infer-address-spaces",
      "--constmerge",
      "--inject-tli-mappings",
      "--newgvn",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}