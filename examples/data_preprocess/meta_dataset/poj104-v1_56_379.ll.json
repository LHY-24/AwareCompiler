{
  "program_id": "poj104-v1_56_379.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 3,
    "CriticalCount": 2,
    "NumEdges": 10,
    "const32Bit": 39,
    "const64Bit": 14,
    "numConstZeroes": 5,
    "numConstOnes": 10,
    "UncondBranches": 4,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 7,
    "NumBitCastInst": 14,
    "NumBrInst": 7,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 20,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 10,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 145,
    "TotalMemInst": 74,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 57
  },
  "baseline_oz_instcount": 55,
  "knowledge_base_entry": [
    "--flattencfg",
    "--jump-threading",
    "--mldst-motion",
    "--instsimplify",
    "--jump-threading",
    "--licm",
    "--sroa",
    "--indvars",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--globalopt",
    "--flattencfg",
    "--inline",
    "--mergefunc",
    "--flattencfg",
    "--jump-threading",
    "--mldst-motion",
    "--instsimplify",
    "--jump-threading",
    "--licm",
    "--sroa",
    "--indvars",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--globalopt",
    "--flattencfg",
    "--inline",
    "--newgvn",
    "--sroa",
    "--prune-eh",
    "--gvn-hoist",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simple-loop-unswitch",
          "--loop-vectorize",
          "--alignment-from-assumptions",
          "--loop-guard-widening",
          "--attributor",
          "--gvn",
          "--constmerge",
          "--inline",
          "--adce",
          "--jump-threading",
          "--ipsccp",
          "--memcpyopt",
          "--mem2reg",
          "--lower-widenable-condition",
          "--loop-interchange",
          "--indvars",
          "--div-rem-pairs",
          "--slsr",
          "--loop-simplifycfg",
          "--add-discriminators",
          "--forceattrs",
          "--lcssa",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simple-loop-unswitch",
      "--loop-vectorize",
      "--alignment-from-assumptions",
      "--loop-guard-widening",
      "--attributor",
      "--gvn",
      "--constmerge",
      "--inline",
      "--adce",
      "--jump-threading",
      "--ipsccp",
      "--memcpyopt",
      "--mem2reg",
      "--lower-widenable-condition",
      "--loop-interchange",
      "--indvars",
      "--div-rem-pairs",
      "--slsr",
      "--loop-simplifycfg",
      "--add-discriminators",
      "--forceattrs",
      "--lcssa",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}