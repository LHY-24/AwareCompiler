{
  "program_id": "github-v0_48646.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 33,
    "const64Bit": 88,
    "numConstZeroes": 77,
    "numConstOnes": 40,
    "UncondBranches": 11,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 28,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 66,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 55,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 38,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 18,
    "TotalBlocks": 21,
    "TotalInsts": 270,
    "TotalMemInst": 182,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 123
  },
  "baseline_oz_instcount": 270,
  "knowledge_base_entry": [
    "--sccp",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--jump-threading",
    "--dse",
    "--instcombine",
    "--memcpyopt",
    "--slp-vectorizer",
    "--adce",
    "--aggressive-instcombine",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-reroll",
          "--partial-inliner",
          "--lower-expect",
          "--lower-guard-intrinsic",
          "--globaldce",
          "--aggressive-instcombine",
          "--correlated-propagation",
          "--licm",
          "--instnamer",
          "--coro-split",
          "--ipconstprop",
          "--div-rem-pairs",
          "--loop-fusion",
          "--reg2mem",
          "--loop-distribute",
          "--slp-vectorizer",
          "--dse",
          "--gvn",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-reroll",
      "--partial-inliner",
      "--lower-expect",
      "--lower-guard-intrinsic",
      "--globaldce",
      "--aggressive-instcombine",
      "--correlated-propagation",
      "--licm",
      "--instnamer",
      "--coro-split",
      "--ipconstprop",
      "--div-rem-pairs",
      "--loop-fusion",
      "--reg2mem",
      "--loop-distribute",
      "--slp-vectorizer",
      "--dse",
      "--gvn",
      "--die"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}