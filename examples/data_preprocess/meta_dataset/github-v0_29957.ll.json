{
  "program_id": "github-v0_29957.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 34,
    "const64Bit": 31,
    "numConstZeroes": 35,
    "numConstOnes": 22,
    "UncondBranches": 13,
    "binaryConstArg": 12,
    "NumAShrInst": 2,
    "NumAddInst": 4,
    "NumAllocaInst": 12,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 7,
    "NumLShrInst": 1,
    "NumLoadInst": 34,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 18,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 20,
    "TotalBlocks": 24,
    "TotalInsts": 171,
    "TotalMemInst": 91,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 80
  },
  "baseline_oz_instcount": 171,
  "knowledge_base_entry": [
    "--indvars",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--instsimplify",
    "--dce",
    "--sccp",
    "--dce",
    "--mem2reg",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--loop-vectorize",
          "--loop-predication",
          "--ipsccp",
          "--loop-simplifycfg",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--partially-inline-libcalls",
          "--scalarizer",
          "--reg2mem",
          "--loop-data-prefetch",
          "--gvn",
          "--consthoist",
          "--ipconstprop",
          "--redundant-dbg-inst-elim",
          "--inferattrs",
          "--loop-versioning-licm",
          "--loop-rotate",
          "--licm",
          "--cross-dso-cfi",
          "--loop-deletion",
          "--coro-early",
          "--elim-avail-extern",
          "--inject-tli-mappings",
          "--lowerswitch",
          "--instnamer",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--loop-vectorize",
      "--loop-predication",
      "--ipsccp",
      "--loop-simplifycfg",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--partially-inline-libcalls",
      "--scalarizer",
      "--reg2mem",
      "--loop-data-prefetch",
      "--gvn",
      "--consthoist",
      "--ipconstprop",
      "--redundant-dbg-inst-elim",
      "--inferattrs",
      "--loop-versioning-licm",
      "--loop-rotate",
      "--licm",
      "--cross-dso-cfi",
      "--loop-deletion",
      "--coro-early",
      "--elim-avail-extern",
      "--inject-tli-mappings",
      "--lowerswitch",
      "--instnamer",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+5.3%"
  }
}