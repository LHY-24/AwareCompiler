{
  "program_id": "linux-v0_10919.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 5,
    "oneSuccessor": 22,
    "twoPred": 3,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 7,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 0,
    "BranchCount": 29,
    "returnInt": 10,
    "CriticalCount": 17,
    "NumEdges": 61,
    "const32Bit": 122,
    "const64Bit": 7,
    "numConstZeroes": 43,
    "numConstOnes": 33,
    "UncondBranches": 22,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 29,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 43,
    "NumBitCastInst": 3,
    "NumBrInst": 29,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 80,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 56,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 6,
    "TotalBlocks": 45,
    "TotalInsts": 298,
    "TotalMemInst": 217,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 130
  },
  "baseline_oz_instcount": 298,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--mem2reg",
    "--dse",
    "--licm",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--licm",
    "--bdce",
    "--load-store-vectorizer",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--sink",
          "--ipsccp",
          "--callsite-splitting",
          "--loop-deletion",
          "--cross-dso-cfi",
          "--attributor",
          "--irce",
          "--prune-eh",
          "--slp-vectorizer",
          "--lower-guard-intrinsic",
          "--aggressive-instcombine",
          "--pgo-memop-opt",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--sink",
      "--ipsccp",
      "--callsite-splitting",
      "--loop-deletion",
      "--cross-dso-cfi",
      "--attributor",
      "--irce",
      "--prune-eh",
      "--slp-vectorizer",
      "--lower-guard-intrinsic",
      "--aggressive-instcombine",
      "--pgo-memop-opt",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+3.4%"
  }
}