{
  "program_id": "linux-v0_7046.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 4,
    "oneSuccessor": 23,
    "twoPred": 10,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 14,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 51,
    "BeginPhi": 0,
    "BranchCount": 37,
    "returnInt": 13,
    "CriticalCount": 3,
    "NumEdges": 51,
    "const32Bit": 130,
    "const64Bit": 12,
    "numConstZeroes": 45,
    "numConstOnes": 41,
    "UncondBranches": 23,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 38,
    "NumAndInst": 3,
    "BlockMid": 6,
    "BlockLow": 45,
    "NumBitCastInst": 4,
    "NumBrInst": 37,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 13,
    "NumLShrInst": 1,
    "NumLoadInst": 83,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 54,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 4,
    "NumZExtInst": 7,
    "TotalBlocks": 51,
    "TotalInsts": 333,
    "TotalMemInst": 231,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 143
  },
  "baseline_oz_instcount": 333,
  "knowledge_base_entry": [
    "--loop-sink",
    "--jump-threading",
    "--correlated-propagation",
    "--die",
    "--gvn",
    "--early-cse-memssa",
    "--early-cse",
    "--bdce",
    "--aggressive-instcombine",
    "--reassociate",
    "--instcombine",
    "--licm",
    "--gvn-hoist",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-sink",
          "--sroa",
          "--loop-fusion",
          "--slsr",
          "--aggressive-instcombine",
          "--mem2reg",
          "--name-anon-globals",
          "--loop-unswitch",
          "--early-cse-memssa",
          "--ipconstprop",
          "--callsite-splitting",
          "--add-discriminators",
          "--scalarizer",
          "--loop-versioning-licm",
          "--div-rem-pairs",
          "--reassociate",
          "--load-store-vectorizer",
          "--lower-matrix-intrinsics",
          "--irce",
          "--bdce",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-sink",
      "--sroa",
      "--loop-fusion",
      "--slsr",
      "--aggressive-instcombine",
      "--mem2reg",
      "--name-anon-globals",
      "--loop-unswitch",
      "--early-cse-memssa",
      "--ipconstprop",
      "--callsite-splitting",
      "--add-discriminators",
      "--scalarizer",
      "--loop-versioning-licm",
      "--div-rem-pairs",
      "--reassociate",
      "--load-store-vectorizer",
      "--lower-matrix-intrinsics",
      "--irce",
      "--bdce",
      "--adce"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}