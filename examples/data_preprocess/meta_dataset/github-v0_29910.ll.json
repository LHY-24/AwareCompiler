{
  "program_id": "github-v0_29910.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 39,
    "const64Bit": 54,
    "numConstZeroes": 45,
    "numConstOnes": 28,
    "UncondBranches": 13,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 14,
    "NumAndInst": 4,
    "BlockMid": 7,
    "BlockLow": 17,
    "NumBitCastInst": 12,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 7,
    "NumLShrInst": 1,
    "NumLoadInst": 60,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 26,
    "NumSubInst": 3,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 24,
    "TotalBlocks": 24,
    "TotalInsts": 248,
    "TotalMemInst": 151,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 118
  },
  "baseline_oz_instcount": 248,
  "knowledge_base_entry": [
    "--prune-eh",
    "--inline",
    "--flattencfg",
    "--ipsccp",
    "--globalopt",
    "--mergefunc",
    "--aggressive-instcombine",
    "--dce",
    "--mem2reg",
    "--elim-avail-extern",
    "--simplifycfg",
    "--memcpyopt",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--sroa",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--inject-tli-mappings",
          "--coro-split",
          "--flattencfg",
          "--loop-reroll",
          "--forceattrs",
          "--sancov",
          "--loop-interchange",
          "--libcalls-shrinkwrap",
          "--loop-simplifycfg",
          "--float2int",
          "--aggressive-instcombine",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--inject-tli-mappings",
      "--coro-split",
      "--flattencfg",
      "--loop-reroll",
      "--forceattrs",
      "--sancov",
      "--loop-interchange",
      "--libcalls-shrinkwrap",
      "--loop-simplifycfg",
      "--float2int",
      "--aggressive-instcombine",
      "--indvars"
    ],
    "performance_vs_Oz": "+3.2%"
  }
}