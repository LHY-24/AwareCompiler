{
  "program_id": "github-v0_46051.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 4,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 1,
    "CriticalCount": 0,
    "NumEdges": 4,
    "const32Bit": 3,
    "const64Bit": 2,
    "numConstZeroes": 2,
    "numConstOnes": 3,
    "UncondBranches": 2,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 2,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 4,
    "NumBitCastInst": 0,
    "NumBrInst": 3,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 3,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 3,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 4,
    "TotalInsts": 18,
    "TotalMemInst": 9,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 8
  },
  "baseline_oz_instcount": 18,
  "knowledge_base_entry": [
    "--reg2mem",
    "--simplifycfg",
    "--jump-threading",
    "--ipsccp",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--indvars",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--prune-eh",
    "--loop-simplifycfg",
    "--bdce",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--adce",
    "--load-store-vectorizer",
    "--indvars",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--prune-eh",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--newgvn",
    "--mem2reg",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--aggressive-instcombine",
          "--mergeicmps",
          "--sancov",
          "--sink",
          "--redundant-dbg-inst-elim",
          "--partial-inliner",
          "--simplifycfg",
          "--libcalls-shrinkwrap",
          "--tailcallelim",
          "--strip",
          "--reg2mem",
          "--constmerge",
          "--infer-address-spaces",
          "--attributor",
          "--lower-widenable-condition",
          "--constprop",
          "--hotcoldsplit",
          "--deadargelim",
          "--partially-inline-libcalls",
          "--called-value-propagation",
          "--sroa",
          "--float2int",
          "--slp-vectorizer",
          "--loop-simplifycfg",
          "--reassociate",
          "--mldst-motion",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--aggressive-instcombine",
      "--mergeicmps",
      "--sancov",
      "--sink",
      "--redundant-dbg-inst-elim",
      "--partial-inliner",
      "--simplifycfg",
      "--libcalls-shrinkwrap",
      "--tailcallelim",
      "--strip",
      "--reg2mem",
      "--constmerge",
      "--infer-address-spaces",
      "--attributor",
      "--lower-widenable-condition",
      "--constprop",
      "--hotcoldsplit",
      "--deadargelim",
      "--partially-inline-libcalls",
      "--called-value-propagation",
      "--sroa",
      "--float2int",
      "--slp-vectorizer",
      "--loop-simplifycfg",
      "--reassociate",
      "--mldst-motion",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+11.1%"
  }
}