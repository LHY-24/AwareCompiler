{
  "program_id": "linux-v0_5469.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 10,
    "oneSuccessor": 24,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 17,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 0,
    "BranchCount": 41,
    "returnInt": 51,
    "CriticalCount": 5,
    "NumEdges": 58,
    "const32Bit": 270,
    "const64Bit": 53,
    "numConstZeroes": 125,
    "numConstOnes": 77,
    "UncondBranches": 24,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 54,
    "NumAndInst": 10,
    "BlockMid": 14,
    "BlockLow": 45,
    "NumBitCastInst": 9,
    "NumBrInst": 41,
    "NumCallInst": 93,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 204,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 1,
    "NumSelectInst": 3,
    "NumShlInst": 0,
    "NumStoreInst": 106,
    "NumSubInst": 2,
    "NumTruncInst": 22,
    "NumXorInst": 2,
    "NumZExtInst": 47,
    "TotalBlocks": 59,
    "TotalInsts": 736,
    "TotalMemInst": 544,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 341
  },
  "baseline_oz_instcount": 736,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--gvn",
    "--bdce",
    "--gvn-hoist",
    "--ipsccp",
    "--aggressive-instcombine",
    "--flattencfg",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--licm",
    "--instcombine",
    "--reassociate",
    "--mem2reg",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--coro-cleanup",
          "--sink",
          "--jump-threading",
          "--post-inline-ee-instrument",
          "--simplifycfg",
          "--lower-matrix-intrinsics",
          "--newgvn",
          "--coro-split",
          "--lower-guard-intrinsic",
          "--loop-sink",
          "--constmerge",
          "--loop-unroll-and-jam",
          "--adce",
          "--aggressive-instcombine",
          "--loop-idiom",
          "--forceattrs",
          "--loop-interchange",
          "--prune-eh",
          "--separate-const-offset-from-gep",
          "--add-discriminators",
          "--loop-vectorize",
          "--globalsplit",
          "--name-anon-globals",
          "--lcssa",
          "--loop-reroll",
          "--coro-elide",
          "--flattencfg",
          "--loop-unroll",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--coro-cleanup",
      "--sink",
      "--jump-threading",
      "--post-inline-ee-instrument",
      "--simplifycfg",
      "--lower-matrix-intrinsics",
      "--newgvn",
      "--coro-split",
      "--lower-guard-intrinsic",
      "--loop-sink",
      "--constmerge",
      "--loop-unroll-and-jam",
      "--adce",
      "--aggressive-instcombine",
      "--loop-idiom",
      "--forceattrs",
      "--loop-interchange",
      "--prune-eh",
      "--separate-const-offset-from-gep",
      "--add-discriminators",
      "--loop-vectorize",
      "--globalsplit",
      "--name-anon-globals",
      "--lcssa",
      "--loop-reroll",
      "--coro-elide",
      "--flattencfg",
      "--loop-unroll",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}