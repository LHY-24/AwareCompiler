{
  "program_id": "linux-v0_4674.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 4,
    "oneSuccessor": 12,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 6,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 15,
    "CriticalCount": 0,
    "NumEdges": 28,
    "const32Bit": 99,
    "const64Bit": 26,
    "numConstZeroes": 40,
    "numConstOnes": 53,
    "UncondBranches": 12,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 29,
    "NumAndInst": 4,
    "BlockMid": 7,
    "BlockLow": 22,
    "NumBitCastInst": 5,
    "NumBrInst": 18,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 100,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 53,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 2,
    "NumZExtInst": 8,
    "TotalBlocks": 29,
    "TotalInsts": 333,
    "TotalMemInst": 258,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 155
  },
  "baseline_oz_instcount": 333,
  "knowledge_base_entry": [
    "--flattencfg",
    "--mem2reg",
    "--aggressive-instcombine",
    "--lower-expect",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--bdce",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--gvn-hoist",
    "--prune-eh",
    "--inline",
    "--load-store-vectorizer",
    "--gvn",
    "--loop-instsimplify",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--loop-guard-widening",
          "--gvn-hoist",
          "--coro-early",
          "--float2int",
          "--globaldce",
          "--mergeicmps",
          "--lower-guard-intrinsic",
          "--functionattrs",
          "--coro-cleanup",
          "--mldst-motion",
          "--aggressive-instcombine",
          "--instcombine",
          "--ipconstprop",
          "--sink",
          "--strip",
          "--bdce",
          "--infer-address-spaces",
          "--coro-split",
          "--reg2mem",
          "--inline",
          "--ipsccp",
          "--loop-unswitch",
          "--tailcallelim",
          "--loop-simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--loop-guard-widening",
      "--gvn-hoist",
      "--coro-early",
      "--float2int",
      "--globaldce",
      "--mergeicmps",
      "--lower-guard-intrinsic",
      "--functionattrs",
      "--coro-cleanup",
      "--mldst-motion",
      "--aggressive-instcombine",
      "--instcombine",
      "--ipconstprop",
      "--sink",
      "--strip",
      "--bdce",
      "--infer-address-spaces",
      "--coro-split",
      "--reg2mem",
      "--inline",
      "--ipsccp",
      "--loop-unswitch",
      "--tailcallelim",
      "--loop-simplifycfg"
    ],
    "performance_vs_Oz": "+4.2%"
  }
}