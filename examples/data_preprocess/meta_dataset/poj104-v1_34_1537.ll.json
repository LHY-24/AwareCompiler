{
  "program_id": "poj104-v1_34_1537.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 28,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 14,
    "CriticalCount": 0,
    "NumEdges": 18,
    "const32Bit": 38,
    "const64Bit": 6,
    "numConstZeroes": 10,
    "numConstOnes": 23,
    "UncondBranches": 8,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 20,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 27,
    "NumBitCastInst": 12,
    "NumBrInst": 13,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 43,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 28,
    "TotalInsts": 187,
    "TotalMemInst": 136,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 76
  },
  "baseline_oz_instcount": 59,
  "knowledge_base_entry": [
    "--functionattrs",
    "--instsimplify",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--mergefunc",
    "--globalopt",
    "--early-cse",
    "--prune-eh",
    "--licm",
    "--instcombine",
    "--sccp",
    "--elim-avail-extern",
    "--jump-threading",
    "--aggressive-instcombine",
    "--loweratomic",
    "--ipsccp",
    "--elim-avail-extern",
    "--adce",
    "--simplifycfg",
    "--instsimplify",
    "--simplifycfg",
    "--inline",
    "--simplifycfg",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--mldst-motion",
    "--licm",
    "--loop-instsimplify",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip",
          "--elim-avail-extern",
          "--lower-expect",
          "--jump-threading",
          "--dse",
          "--inferattrs",
          "--ipsccp",
          "--loop-unroll-and-jam",
          "--globalopt",
          "--globaldce",
          "--lower-matrix-intrinsics",
          "--sroa",
          "--newgvn",
          "--strip-debug-declare",
          "--canonicalize-aliases",
          "--slsr",
          "--loweratomic",
          "--rpo-functionattrs",
          "--aggressive-instcombine",
          "--loop-reroll",
          "--loop-unswitch",
          "--sccp",
          "--pgo-memop-opt",
          "--loop-data-prefetch",
          "--loop-load-elim",
          "--loop-guard-widening",
          "--instcombine",
          "--gvn-hoist",
          "--coro-elide",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+22.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip",
      "--elim-avail-extern",
      "--lower-expect",
      "--jump-threading",
      "--dse",
      "--inferattrs",
      "--ipsccp",
      "--loop-unroll-and-jam",
      "--globalopt",
      "--globaldce",
      "--lower-matrix-intrinsics",
      "--sroa",
      "--newgvn",
      "--strip-debug-declare",
      "--canonicalize-aliases",
      "--slsr",
      "--loweratomic",
      "--rpo-functionattrs",
      "--aggressive-instcombine",
      "--loop-reroll",
      "--loop-unswitch",
      "--sccp",
      "--pgo-memop-opt",
      "--loop-data-prefetch",
      "--loop-load-elim",
      "--loop-guard-widening",
      "--instcombine",
      "--gvn-hoist",
      "--coro-elide",
      "--bdce"
    ],
    "performance_vs_Oz": "+22.0%"
  }
}