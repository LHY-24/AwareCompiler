{
  "program_id": "linux-v0_1953.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 2,
    "oneSuccessor": 16,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 5,
    "CriticalCount": 4,
    "NumEdges": 30,
    "const32Bit": 29,
    "const64Bit": 9,
    "numConstZeroes": 6,
    "numConstOnes": 21,
    "UncondBranches": 16,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 15,
    "NumAndInst": 3,
    "BlockMid": 1,
    "BlockLow": 25,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 31,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 26,
    "TotalInsts": 141,
    "TotalMemInst": 89,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 58
  },
  "baseline_oz_instcount": 143,
  "knowledge_base_entry": [
    "--gvn",
    "--sroa",
    "--mldst-motion",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--lower-expect",
    "--die",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slp-vectorizer",
          "--add-discriminators",
          "--globaldce",
          "--loweratomic",
          "--die",
          "--guard-widening",
          "--argpromotion",
          "--dse",
          "--hotcoldsplit",
          "--partial-inliner",
          "--dce",
          "--alignment-from-assumptions",
          "--globalsplit",
          "--functionattrs",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slp-vectorizer",
      "--add-discriminators",
      "--globaldce",
      "--loweratomic",
      "--die",
      "--guard-widening",
      "--argpromotion",
      "--dse",
      "--hotcoldsplit",
      "--partial-inliner",
      "--dce",
      "--alignment-from-assumptions",
      "--globalsplit",
      "--functionattrs",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+2.8%"
  }
}