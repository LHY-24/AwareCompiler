{
  "program_id": "linux-v0_100.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 67,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 25,
    "oneSuccessor": 54,
    "twoPred": 14,
    "twoPredOneSuc": 9,
    "twoEach": 4,
    "twoSuccessor": 33,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 99,
    "BeginPhi": 0,
    "BranchCount": 87,
    "returnInt": 15,
    "CriticalCount": 19,
    "NumEdges": 120,
    "const32Bit": 208,
    "const64Bit": 26,
    "numConstZeroes": 114,
    "numConstOnes": 93,
    "UncondBranches": 54,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 50,
    "NumAndInst": 5,
    "BlockMid": 13,
    "BlockLow": 86,
    "NumBitCastInst": 45,
    "NumBrInst": 87,
    "NumCallInst": 69,
    "NumGetElementPtrInst": 71,
    "NumICmpInst": 34,
    "NumLShrInst": 2,
    "NumLoadInst": 189,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 74,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 19,
    "NumZExtInst": 24,
    "TotalBlocks": 99,
    "TotalInsts": 711,
    "TotalMemInst": 453,
    "TotalFuncs": 33,
    "ArgsPhi": 0,
    "testUnary": 334
  },
  "baseline_oz_instcount": 712,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--instcombine",
    "--lower-expect",
    "--dse",
    "--dce",
    "--gvn",
    "--lower-expect",
    "--mem2reg",
    "--aggressive-instcombine",
    "--newgvn",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--tailcallelim",
          "--loop-instsimplify",
          "--constmerge",
          "--instsimplify",
          "--loop-load-elim",
          "--newgvn",
          "--loop-unroll",
          "--loop-unswitch",
          "--sccp",
          "--instcombine",
          "--mem2reg",
          "--lower-guard-intrinsic",
          "--reassociate",
          "--loop-reroll",
          "--loop-guard-widening",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--tailcallelim",
      "--loop-instsimplify",
      "--constmerge",
      "--instsimplify",
      "--loop-load-elim",
      "--newgvn",
      "--loop-unroll",
      "--loop-unswitch",
      "--sccp",
      "--instcombine",
      "--mem2reg",
      "--lower-guard-intrinsic",
      "--reassociate",
      "--loop-reroll",
      "--loop-guard-widening",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}