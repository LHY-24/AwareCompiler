{
  "program_id": "linux-v0_5789.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 71,
    "onePredOneSuc": 46,
    "onePredTwoSuc": 18,
    "oneSuccessor": 68,
    "twoPred": 21,
    "twoPredOneSuc": 12,
    "twoEach": 6,
    "twoSuccessor": 27,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 115,
    "BeginPhi": 0,
    "BranchCount": 95,
    "returnInt": 31,
    "CriticalCount": 6,
    "NumEdges": 141,
    "const32Bit": 376,
    "const64Bit": 26,
    "numConstZeroes": 130,
    "numConstOnes": 138,
    "UncondBranches": 68,
    "binaryConstArg": 107,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 58,
    "NumAndInst": 23,
    "BlockMid": 19,
    "BlockLow": 96,
    "NumBitCastInst": 18,
    "NumBrInst": 95,
    "NumCallInst": 105,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 51,
    "NumLShrInst": 2,
    "NumLoadInst": 269,
    "NumMulInst": 0,
    "NumOrInst": 22,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 10,
    "NumStoreInst": 92,
    "NumSubInst": 0,
    "NumTruncInst": 18,
    "NumXorInst": 48,
    "NumZExtInst": 55,
    "TotalBlocks": 115,
    "TotalInsts": 979,
    "TotalMemInst": 594,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 431
  },
  "baseline_oz_instcount": 979,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse-memssa",
    "--inline",
    "--instcombine",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--adce",
    "--newgvn",
    "-loop-reduce",
    "--mergefunc",
    "--adce",
    "--elim-avail-extern",
    "--memcpyopt",
    "--newgvn",
    "--loop-simplifycfg",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--slsr",
    "--newgvn",
    "--instsimplify",
    "--jump-threading",
    "--aggressive-instcombine",
    "--lower-expect",
    "--simplifycfg",
    "--jump-threading",
    "--mergefunc",
    "--mergefunc",
    "--load-store-vectorizer",
    "--dse",
    "--early-cse",
    "--adce",
    "--instsimplify",
    "--die",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--newgvn",
    "--licm",
    "--inline",
    "--mem2reg",
    "--lower-expect",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--mergefunc",
    "--dse",
    "--newgvn",
    "--inline",
    "--reassociate",
    "--aggressive-instcombine",
    "--instcombine",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slp-vectorizer",
          "--flattencfg",
          "--lower-matrix-intrinsics",
          "--globalsplit",
          "--aggressive-instcombine",
          "--mergereturn",
          "--functionattrs",
          "--scalarizer",
          "--speculative-execution",
          "--add-discriminators"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slp-vectorizer",
      "--flattencfg",
      "--lower-matrix-intrinsics",
      "--globalsplit",
      "--aggressive-instcombine",
      "--mergereturn",
      "--functionattrs",
      "--scalarizer",
      "--speculative-execution",
      "--add-discriminators"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}