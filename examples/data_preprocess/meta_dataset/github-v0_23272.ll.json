{
  "program_id": "github-v0_23272.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 5,
    "oneSuccessor": 16,
    "twoPred": 9,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 25,
    "returnInt": 8,
    "CriticalCount": 6,
    "NumEdges": 34,
    "const32Bit": 21,
    "const64Bit": 0,
    "numConstZeroes": 11,
    "numConstOnes": 12,
    "UncondBranches": 16,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 23,
    "NumBitCastInst": 0,
    "NumBrInst": 25,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 37,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 3,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 31,
    "TotalBlocks": 26,
    "TotalInsts": 170,
    "TotalMemInst": 80,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 90
  },
  "baseline_oz_instcount": 170,
  "knowledge_base_entry": [
    "--gvn",
    "--aggressive-instcombine",
    "--loweratomic",
    "--ipsccp",
    "--newgvn",
    "--mergefunc",
    "--instcombine",
    "--instsimplify",
    "--mldst-motion",
    "--elim-avail-extern",
    "--bdce",
    "--early-cse",
    "--inline",
    "--sroa",
    "--prune-eh",
    "--loop-simplifycfg",
    "--mem2reg",
    "--mldst-motion",
    "--simplifycfg",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--libcalls-shrinkwrap",
          "--forceattrs",
          "--simplifycfg",
          "--consthoist",
          "--separate-const-offset-from-gep",
          "--mergefunc",
          "--loop-load-elim",
          "--dse",
          "--lower-matrix-intrinsics",
          "--gvn",
          "--coro-split",
          "--deadargelim",
          "--lower-expect",
          "--loop-versioning-licm",
          "--aggressive-instcombine",
          "--loop-vectorize",
          "--lowerinvoke",
          "--adce",
          "--strip-debug-declare",
          "--globalsplit",
          "--globaldce",
          "--strip",
          "--slsr",
          "--coro-early",
          "--speculative-execution",
          "--name-anon-globals",
          "--die",
          "--constmerge",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+10.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--libcalls-shrinkwrap",
      "--forceattrs",
      "--simplifycfg",
      "--consthoist",
      "--separate-const-offset-from-gep",
      "--mergefunc",
      "--loop-load-elim",
      "--dse",
      "--lower-matrix-intrinsics",
      "--gvn",
      "--coro-split",
      "--deadargelim",
      "--lower-expect",
      "--loop-versioning-licm",
      "--aggressive-instcombine",
      "--loop-vectorize",
      "--lowerinvoke",
      "--adce",
      "--strip-debug-declare",
      "--globalsplit",
      "--globaldce",
      "--strip",
      "--slsr",
      "--coro-early",
      "--speculative-execution",
      "--name-anon-globals",
      "--die",
      "--constmerge",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+10.6%"
  }
}