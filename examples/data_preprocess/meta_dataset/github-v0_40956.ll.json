{
  "program_id": "github-v0_40956.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 32,
    "const64Bit": 25,
    "numConstZeroes": 26,
    "numConstOnes": 22,
    "UncondBranches": 11,
    "binaryConstArg": 12,
    "NumAShrInst": 2,
    "NumAddInst": 4,
    "NumAllocaInst": 12,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 16,
    "NumICmpInst": 6,
    "NumLShrInst": 1,
    "NumLoadInst": 30,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 17,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 16,
    "TotalBlocks": 21,
    "TotalInsts": 152,
    "TotalMemInst": 82,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 71
  },
  "baseline_oz_instcount": 152,
  "knowledge_base_entry": [
    "--loop-fusion",
    "--load-store-vectorizer",
    "--gvn",
    "--reassociate",
    "-loop-reduce",
    "--newgvn",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--inline",
    "--aggressive-instcombine",
    "--dse",
    "--correlated-propagation",
    "--mergefunc",
    "--licm",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplify",
          "--break-crit-edges",
          "--lower-matrix-intrinsics",
          "--loop-idiom",
          "--irce",
          "--loop-fusion",
          "--sancov",
          "--reg2mem",
          "--name-anon-globals",
          "--slsr",
          "--loop-vectorize",
          "-loop-reduce",
          "--hotcoldsplit",
          "--rewrite-statepoints-for-gc",
          "--called-value-propagation",
          "--coro-early",
          "--loop-deletion",
          "--functionattrs",
          "--simplifycfg",
          "--deadargelim",
          "--infer-address-spaces",
          "--licm",
          "--redundant-dbg-inst-elim",
          "--loop-simplifycfg",
          "--inject-tli-mappings",
          "--slp-vectorizer",
          "--dce",
          "--aggressive-instcombine",
          "--bdce",
          "--pgo-memop-opt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplify",
      "--break-crit-edges",
      "--lower-matrix-intrinsics",
      "--loop-idiom",
      "--irce",
      "--loop-fusion",
      "--sancov",
      "--reg2mem",
      "--name-anon-globals",
      "--slsr",
      "--loop-vectorize",
      "-loop-reduce",
      "--hotcoldsplit",
      "--rewrite-statepoints-for-gc",
      "--called-value-propagation",
      "--coro-early",
      "--loop-deletion",
      "--functionattrs",
      "--simplifycfg",
      "--deadargelim",
      "--infer-address-spaces",
      "--licm",
      "--redundant-dbg-inst-elim",
      "--loop-simplifycfg",
      "--inject-tli-mappings",
      "--slp-vectorizer",
      "--dce",
      "--aggressive-instcombine",
      "--bdce",
      "--pgo-memop-opt"
    ],
    "performance_vs_Oz": "+5.3%"
  }
}