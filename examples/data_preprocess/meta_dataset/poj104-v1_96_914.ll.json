{
  "program_id": "poj104-v1_96_914.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 5,
    "oneSuccessor": 24,
    "twoPred": 11,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 12,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 51,
    "BeginPhi": 0,
    "BranchCount": 36,
    "returnInt": 8,
    "CriticalCount": 2,
    "NumEdges": 48,
    "const32Bit": 72,
    "const64Bit": 82,
    "numConstZeroes": 50,
    "numConstOnes": 51,
    "UncondBranches": 24,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 28,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 46,
    "NumBitCastInst": 30,
    "NumBrInst": 36,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 42,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 83,
    "NumMulInst": 6,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 45,
    "NumSubInst": 6,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 51,
    "TotalInsts": 385,
    "TotalMemInst": 253,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 151
  },
  "baseline_oz_instcount": 152,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--gvn",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--instcombine",
    "--mergefunc",
    "--simplifycfg",
    "--loop-reroll",
    "--correlated-propagation",
    "--early-cse",
    "--newgvn",
    "--correlated-propagation",
    "--simplifycfg",
    "--memcpyopt",
    "--licm",
    "--jump-threading",
    "--mergefunc",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--jump-threading",
    "--gvn",
    "--gvn",
    "--aggressive-instcombine",
    "--inline",
    "--globalopt",
    "--inline",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--sccp",
    "--lower-expect",
    "--mem2reg",
    "--nary-reassociate",
    "--indvars",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-cleanup",
          "--dse",
          "--loop-versioning-licm",
          "--attributor",
          "--tailcallelim",
          "--lowerinvoke",
          "--redundant-dbg-inst-elim",
          "--reassociate",
          "--loop-unroll-and-jam",
          "--elim-avail-extern",
          "--functionattrs",
          "--lower-guard-intrinsic",
          "--consthoist",
          "--die",
          "--loop-rotate",
          "--flattencfg",
          "--partially-inline-libcalls",
          "--inline",
          "--cross-dso-cfi",
          "--sroa",
          "--licm",
          "--rpo-functionattrs",
          "--mergefunc",
          "--newgvn",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-cleanup",
      "--dse",
      "--loop-versioning-licm",
      "--attributor",
      "--tailcallelim",
      "--lowerinvoke",
      "--redundant-dbg-inst-elim",
      "--reassociate",
      "--loop-unroll-and-jam",
      "--elim-avail-extern",
      "--functionattrs",
      "--lower-guard-intrinsic",
      "--consthoist",
      "--die",
      "--loop-rotate",
      "--flattencfg",
      "--partially-inline-libcalls",
      "--inline",
      "--cross-dso-cfi",
      "--sroa",
      "--licm",
      "--rpo-functionattrs",
      "--mergefunc",
      "--newgvn",
      "--barrier"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}