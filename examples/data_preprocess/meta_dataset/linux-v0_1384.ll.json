{
  "program_id": "linux-v0_1384.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 5,
    "oneSuccessor": 22,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 10,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 31,
    "returnInt": 21,
    "CriticalCount": 5,
    "NumEdges": 46,
    "const32Bit": 165,
    "const64Bit": 7,
    "numConstZeroes": 68,
    "numConstOnes": 57,
    "UncondBranches": 22,
    "binaryConstArg": 6,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 39,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 45,
    "NumBitCastInst": 7,
    "NumBrInst": 31,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 42,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 96,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 48,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 50,
    "TotalInsts": 345,
    "TotalMemInst": 262,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 150
  },
  "baseline_oz_instcount": 346,
  "knowledge_base_entry": [
    "--globaldce",
    "--ipsccp",
    "--loweratomic",
    "--early-cse-memssa",
    "--loop-reroll",
    "--loop-fusion",
    "--jump-threading",
    "--elim-avail-extern",
    "--newgvn",
    "--dce",
    "--newgvn",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--early-cse",
    "--flattencfg",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--alignment-from-assumptions",
          "--attributor",
          "--loweratomic",
          "--loop-guard-widening",
          "--hotcoldsplit",
          "--slp-vectorizer",
          "--mldst-motion",
          "--aggressive-instcombine",
          "--globaldce",
          "--inferattrs",
          "--add-discriminators",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--alignment-from-assumptions",
      "--attributor",
      "--loweratomic",
      "--loop-guard-widening",
      "--hotcoldsplit",
      "--slp-vectorizer",
      "--mldst-motion",
      "--aggressive-instcombine",
      "--globaldce",
      "--inferattrs",
      "--add-discriminators",
      "--newgvn"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}