{
  "program_id": "github-v0_1653.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 8,
    "oneSuccessor": 14,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 25,
    "returnInt": 15,
    "CriticalCount": 1,
    "NumEdges": 36,
    "const32Bit": 47,
    "const64Bit": 0,
    "numConstZeroes": 16,
    "numConstOnes": 11,
    "UncondBranches": 14,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 27,
    "NumBitCastInst": 1,
    "NumBrInst": 25,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 7,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 27,
    "TotalInsts": 89,
    "TotalMemInst": 50,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 17
  },
  "baseline_oz_instcount": 90,
  "knowledge_base_entry": [
    "--jump-threading",
    "--sroa",
    "--gvn-hoist",
    "--nary-reassociate",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--elim-avail-extern",
          "--mergefunc",
          "--slsr",
          "--lower-matrix-intrinsics",
          "--prune-eh",
          "--instcombine",
          "--mem2reg",
          "--loop-vectorize",
          "--argpromotion",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--elim-avail-extern",
      "--mergefunc",
      "--slsr",
      "--lower-matrix-intrinsics",
      "--prune-eh",
      "--instcombine",
      "--mem2reg",
      "--loop-vectorize",
      "--argpromotion",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}