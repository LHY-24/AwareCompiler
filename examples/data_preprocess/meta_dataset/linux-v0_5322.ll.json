{
  "program_id": "linux-v0_5322.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 10,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 12,
    "CriticalCount": 2,
    "NumEdges": 18,
    "const32Bit": 94,
    "const64Bit": 4,
    "numConstZeroes": 21,
    "numConstOnes": 24,
    "UncondBranches": 10,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 23,
    "NumAndInst": 5,
    "BlockMid": 7,
    "BlockLow": 12,
    "NumBitCastInst": 4,
    "NumBrInst": 14,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 6,
    "NumLShrInst": 1,
    "NumLoadInst": 74,
    "NumMulInst": 5,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 1,
    "NumSelectInst": 2,
    "NumShlInst": 6,
    "NumStoreInst": 29,
    "NumSubInst": 3,
    "NumTruncInst": 12,
    "NumXorInst": 3,
    "NumZExtInst": 29,
    "TotalBlocks": 19,
    "TotalInsts": 264,
    "TotalMemInst": 160,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 143
  },
  "baseline_oz_instcount": 264,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--reassociate",
    "--aggressive-instcombine",
    "--prune-eh",
    "--elim-avail-extern",
    "--globalopt",
    "--ipsccp",
    "--early-cse",
    "--mldst-motion",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--scalarizer",
          "--partial-inliner",
          "--loop-deletion",
          "--loop-data-prefetch",
          "--constprop",
          "--inline",
          "--speculative-execution",
          "--sancov",
          "--loop-vectorize",
          "--prune-eh",
          "--die",
          "--lower-guard-intrinsic",
          "--aggressive-instcombine",
          "--barrier",
          "--indvars",
          "--globalopt",
          "--constmerge",
          "--loop-instsimplify",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--scalarizer",
      "--partial-inliner",
      "--loop-deletion",
      "--loop-data-prefetch",
      "--constprop",
      "--inline",
      "--speculative-execution",
      "--sancov",
      "--loop-vectorize",
      "--prune-eh",
      "--die",
      "--lower-guard-intrinsic",
      "--aggressive-instcombine",
      "--barrier",
      "--indvars",
      "--globalopt",
      "--constmerge",
      "--loop-instsimplify",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+3.0%"
  }
}