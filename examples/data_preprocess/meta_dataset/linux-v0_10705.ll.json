{
  "program_id": "linux-v0_10705.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 94,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 36,
    "oneSuccessor": 80,
    "twoPred": 36,
    "twoPredOneSuc": 20,
    "twoEach": 8,
    "twoSuccessor": 58,
    "morePreds": 10,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 155,
    "BeginPhi": 1,
    "BranchCount": 138,
    "returnInt": 21,
    "CriticalCount": 38,
    "NumEdges": 203,
    "const32Bit": 339,
    "const64Bit": 43,
    "numConstZeroes": 150,
    "numConstOnes": 101,
    "UncondBranches": 80,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 65,
    "NumAndInst": 10,
    "BlockMid": 14,
    "BlockLow": 142,
    "NumBitCastInst": 6,
    "NumBrInst": 138,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 101,
    "NumICmpInst": 60,
    "NumLShrInst": 0,
    "NumLoadInst": 258,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 1,
    "NumRetInst": 16,
    "NumSExtInst": 7,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 121,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 46,
    "TotalBlocks": 156,
    "TotalInsts": 906,
    "TotalMemInst": 591,
    "TotalFuncs": 29,
    "ArgsPhi": 2,
    "testUnary": 389
  },
  "baseline_oz_instcount": 903,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--jump-threading",
    "--instsimplify",
    "--simplifycfg",
    "--reassociate",
    "--aggressive-instcombine",
    "--ipsccp",
    "--early-cse",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--dse",
    "--licm",
    "--mergefunc",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--loop-unroll",
          "--mldst-motion",
          "--called-value-propagation",
          "--globaldce",
          "--bdce",
          "--tailcallelim",
          "--mem2reg",
          "--coro-cleanup",
          "--attributor",
          "--hotcoldsplit",
          "--guard-widening",
          "--sancov",
          "--instnamer",
          "--constmerge",
          "--globalopt",
          "--speculative-execution",
          "--loop-versioning",
          "--redundant-dbg-inst-elim",
          "--globalsplit",
          "--aggressive-instcombine",
          "--constprop",
          "--argpromotion",
          "--loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--loop-unroll",
      "--mldst-motion",
      "--called-value-propagation",
      "--globaldce",
      "--bdce",
      "--tailcallelim",
      "--mem2reg",
      "--coro-cleanup",
      "--attributor",
      "--hotcoldsplit",
      "--guard-widening",
      "--sancov",
      "--instnamer",
      "--constmerge",
      "--globalopt",
      "--speculative-execution",
      "--loop-versioning",
      "--redundant-dbg-inst-elim",
      "--globalsplit",
      "--aggressive-instcombine",
      "--constprop",
      "--argpromotion",
      "--loop-unswitch"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}