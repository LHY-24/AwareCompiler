{
  "program_id": "opencv-v0_55.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 17,
    "onePred": 132,
    "onePredOneSuc": 44,
    "onePredTwoSuc": 58,
    "oneSuccessor": 60,
    "twoPred": 50,
    "twoPredOneSuc": 14,
    "twoEach": 15,
    "twoSuccessor": 98,
    "morePreds": 8,
    "BB03Phi": 17,
    "BBHiPhi": 0,
    "BBNoPhi": 224,
    "BeginPhi": 17,
    "BranchCount": 123,
    "returnInt": 2,
    "CriticalCount": 64,
    "NumEdges": 256,
    "const32Bit": 206,
    "const64Bit": 249,
    "numConstZeroes": 278,
    "numConstOnes": 78,
    "UncondBranches": 60,
    "binaryConstArg": 36,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 14,
    "NumAndInst": 35,
    "BlockMid": 0,
    "BlockLow": 241,
    "NumBitCastInst": 62,
    "NumBrInst": 123,
    "NumCallInst": 130,
    "NumGetElementPtrInst": 137,
    "NumICmpInst": 67,
    "NumLShrInst": 0,
    "NumLoadInst": 94,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 21,
    "NumRetInst": 49,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 86,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 241,
    "TotalInsts": 987,
    "TotalMemInst": 496,
    "TotalFuncs": 88,
    "ArgsPhi": 42,
    "testUnary": 226
  },
  "baseline_oz_instcount": 986,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "-loop-reduce",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--dse",
    "--nary-reassociate",
    "--gvn-hoist",
    "--reassociate",
    "--globalopt",
    "--loweratomic",
    "--globalopt",
    "--flattencfg",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--mergefunc",
    "--gvn",
    "--early-cse",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--mergefunc",
    "--load-store-vectorizer",
    "--mem2reg",
    "--early-cse-memssa",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--mergefunc",
    "--loop-reroll",
    "--gvn-hoist",
    "--reassociate",
    "--globalopt",
    "--loweratomic",
    "--globalopt",
    "--flattencfg",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--mergefunc",
    "--gvn",
    "--early-cse",
    "--slp-vectorizer",
    "--mem2reg",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--reassociate",
    "--slp-vectorizer",
    "--early-cse",
    "--nary-reassociate",
    "--instcombine",
    "--instsimplify",
    "--lower-expect",
    "--bdce",
    "--gvn-hoist",
    "--loop-reroll",
    "--gvn-hoist",
    "--reassociate",
    "--globalopt",
    "--loweratomic",
    "--globalopt",
    "--flattencfg",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--mergefunc",
    "--gvn",
    "--early-cse",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--mergefunc",
    "--load-store-vectorizer",
    "--mem2reg",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--loop-reroll",
    "--newgvn",
    "--load-store-vectorizer",
    "--jump-threading",
    "--licm",
    "--jump-threading",
    "--dce",
    "--loop-simplifycfg",
    "--lower-expect",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--instsimplify",
    "--ipsccp",
    "--correlated-propagation",
    "--mergefunc",
    "--load-store-vectorizer",
    "--mem2reg",
    "--early-cse-memssa",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--mergefunc",
    "--mem2reg",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--reassociate",
    "--slp-vectorizer",
    "--early-cse",
    "--nary-reassociate",
    "--instcombine",
    "--instsimplify",
    "--lower-expect",
    "--bdce",
    "--gvn-hoist",
    "--loop-rotate",
    "--mem2reg",
    "--loop-simplifycfg",
    "--globalopt",
    "--elim-avail-extern",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--hotcoldsplit",
          "--loop-reroll",
          "--flattencfg",
          "--functionattrs",
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--strip-debug-declare",
          "--name-anon-globals",
          "--instsimplify",
          "--dse",
          "--simplifycfg",
          "--cross-dso-cfi",
          "--argpromotion",
          "--strip-nondebug",
          "--coro-early",
          "--loop-rotate",
          "--jump-threading",
          "--rewrite-statepoints-for-gc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+19.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--hotcoldsplit",
      "--loop-reroll",
      "--flattencfg",
      "--functionattrs",
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--strip-debug-declare",
      "--name-anon-globals",
      "--instsimplify",
      "--dse",
      "--simplifycfg",
      "--cross-dso-cfi",
      "--argpromotion",
      "--strip-nondebug",
      "--coro-early",
      "--loop-rotate",
      "--jump-threading",
      "--rewrite-statepoints-for-gc"
    ],
    "performance_vs_Oz": "+19.0%"
  }
}