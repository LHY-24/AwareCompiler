{
  "program_id": "linux-v0_10539.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 38,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 13,
    "oneSuccessor": 30,
    "twoPred": 9,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 19,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 69,
    "BeginPhi": 0,
    "BranchCount": 49,
    "returnInt": 14,
    "CriticalCount": 7,
    "NumEdges": 68,
    "const32Bit": 303,
    "const64Bit": 16,
    "numConstZeroes": 175,
    "numConstOnes": 64,
    "UncondBranches": 30,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 46,
    "NumAndInst": 6,
    "BlockMid": 9,
    "BlockLow": 60,
    "NumBitCastInst": 24,
    "NumBrInst": 49,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 108,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 159,
    "NumMulInst": 2,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 91,
    "NumSubInst": 2,
    "NumTruncInst": 7,
    "NumXorInst": 2,
    "NumZExtInst": 7,
    "TotalBlocks": 69,
    "TotalInsts": 611,
    "TotalMemInst": 456,
    "TotalFuncs": 37,
    "ArgsPhi": 0,
    "testUnary": 249
  },
  "baseline_oz_instcount": 611,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--newgvn",
    "--lower-expect",
    "--aggressive-instcombine",
    "--mem2reg",
    "--gvn",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--licm",
    "--newgvn",
    "--ipsccp",
    "--correlated-propagation",
    "--ipsccp",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--mem2reg",
    "--loop-simplifycfg",
    "--jump-threading",
    "--loop-simplifycfg",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--licm",
    "--newgvn",
    "--ipsccp",
    "--correlated-propagation",
    "--dce",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--instcombine",
    "--aggressive-instcombine",
    "--mem2reg",
    "--gvn",
    "--mldst-motion",
    "--licm",
    "--dse",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--insert-gcov-profiling",
          "--prune-eh",
          "--div-rem-pairs",
          "--partially-inline-libcalls",
          "--loop-unroll-and-jam",
          "--loop-sink",
          "--slsr",
          "--ee-instrument",
          "--nary-reassociate",
          "-loop-reduce",
          "--mergefunc",
          "--globalopt",
          "--coro-split",
          "--lower-guard-intrinsic",
          "--lower-matrix-intrinsics",
          "--load-store-vectorizer",
          "--memcpyopt",
          "--coro-early",
          "--post-inline-ee-instrument",
          "--argpromotion",
          "--aggressive-instcombine",
          "--loop-fusion",
          "--cross-dso-cfi"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--insert-gcov-profiling",
      "--prune-eh",
      "--div-rem-pairs",
      "--partially-inline-libcalls",
      "--loop-unroll-and-jam",
      "--loop-sink",
      "--slsr",
      "--ee-instrument",
      "--nary-reassociate",
      "-loop-reduce",
      "--mergefunc",
      "--globalopt",
      "--coro-split",
      "--lower-guard-intrinsic",
      "--lower-matrix-intrinsics",
      "--load-store-vectorizer",
      "--memcpyopt",
      "--coro-early",
      "--post-inline-ee-instrument",
      "--argpromotion",
      "--aggressive-instcombine",
      "--loop-fusion",
      "--cross-dso-cfi"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}