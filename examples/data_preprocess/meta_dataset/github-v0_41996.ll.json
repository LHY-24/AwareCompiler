{
  "program_id": "github-v0_41996.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 3,
    "oneSuccessor": 12,
    "twoPred": 8,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 7,
    "CriticalCount": 6,
    "NumEdges": 28,
    "const32Bit": 47,
    "const64Bit": 3,
    "numConstZeroes": 21,
    "numConstOnes": 21,
    "UncondBranches": 12,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 21,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 30,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 25,
    "TotalInsts": 140,
    "TotalMemInst": 84,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 59
  },
  "baseline_oz_instcount": 140,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--gvn-hoist",
    "--sroa",
    "--aggressive-instcombine",
    "--mem2reg",
    "--loop-rotate",
    "--elim-avail-extern",
    "--licm",
    "--sccp",
    "--reassociate",
    "--prune-eh",
    "--simplifycfg",
    "--dce",
    "--ipsccp",
    "--loop-simplifycfg",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--aggressive-instcombine",
          "--loop-idiom",
          "--separate-const-offset-from-gep",
          "--rpo-functionattrs",
          "--strip",
          "--irce",
          "--sroa",
          "--loop-unroll",
          "--reassociate",
          "--add-discriminators",
          "--memcpyopt",
          "--argpromotion",
          "--guard-widening",
          "--loop-versioning-licm",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--aggressive-instcombine",
      "--loop-idiom",
      "--separate-const-offset-from-gep",
      "--rpo-functionattrs",
      "--strip",
      "--irce",
      "--sroa",
      "--loop-unroll",
      "--reassociate",
      "--add-discriminators",
      "--memcpyopt",
      "--argpromotion",
      "--guard-widening",
      "--loop-versioning-licm",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+5.7%"
  }
}