{
  "program_id": "blas-v0_121.ll",
  "autophase_features": {
    "BBNumArgsHi": 7,
    "BBNumArgsLo": 1,
    "onePred": 17,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 8,
    "oneSuccessor": 12,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 14,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 5,
    "BBNoPhi": 19,
    "BeginPhi": 8,
    "BranchCount": 26,
    "returnInt": 0,
    "CriticalCount": 11,
    "NumEdges": 40,
    "const32Bit": 10,
    "const64Bit": 8,
    "numConstZeroes": 7,
    "numConstOnes": 5,
    "UncondBranches": 12,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 6,
    "BlockMid": 2,
    "BlockLow": 25,
    "NumBitCastInst": 11,
    "NumBrInst": 26,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 4,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 38,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 19,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 27,
    "TotalInsts": 200,
    "TotalMemInst": 35,
    "TotalFuncs": 2,
    "ArgsPhi": 101,
    "testUnary": 15
  },
  "baseline_oz_instcount": 198,
  "knowledge_base_entry": [
    "--sccp",
    "--mem2reg",
    "--dse",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--loop-instsimplify",
    "--ipsccp",
    "--correlated-propagation",
    "--mergefunc",
    "--lower-expect",
    "--bdce",
    "--load-store-vectorizer",
    "--instsimplify",
    "--instcombine",
    "--loop-reroll",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--adce",
    "--sroa",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--sroa",
    "--gvn-hoist",
    "--slsr",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--die",
    "--licm",
    "--die",
    "--loop-simplifycfg",
    "--instsimplify",
    "--globalopt",
    "--inline",
    "--bdce",
    "--early-cse-memssa",
    "--loop-fusion",
    "--early-cse",
    "--licm",
    "--sroa",
    "--newgvn",
    "--instsimplify",
    "--mergefunc",
    "--memcpyopt",
    "--elim-avail-extern",
    "--simplifycfg",
    "--mldst-motion",
    "--early-cse",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--dse",
    "--mergefunc",
    "--load-store-vectorizer",
    "--lower-expect",
    "--loop-instsimplify",
    "--ipsccp",
    "--correlated-propagation",
    "--mergefunc",
    "--lower-expect",
    "--bdce",
    "--load-store-vectorizer",
    "--instsimplify",
    "--instcombine",
    "--load-store-vectorizer",
    "--mergefunc",
    "--dse",
    "--jump-threading",
    "--loop-rotate",
    "--dse",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--adce",
    "--sroa",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--sroa",
    "--gvn-hoist",
    "--slsr",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--die",
    "--licm",
    "--die",
    "--loop-simplifycfg",
    "--instsimplify",
    "--globalopt",
    "--inline",
    "--bdce",
    "--early-cse-memssa",
    "--loop-fusion",
    "--early-cse",
    "--licm",
    "--sroa",
    "--newgvn",
    "--instsimplify",
    "--mergefunc",
    "--memcpyopt",
    "--elim-avail-extern",
    "--flattencfg",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--globaldce",
          "--indvars",
          "--ee-instrument",
          "--rewrite-statepoints-for-gc",
          "-loop-reduce",
          "--loop-idiom",
          "--strip-dead-prototypes",
          "--coro-elide",
          "--coro-split",
          "--hotcoldsplit",
          "--alignment-from-assumptions",
          "--scalarizer",
          "--elim-avail-extern",
          "--globalsplit",
          "--instsimplify",
          "--add-discriminators",
          "--speculative-execution",
          "--gvn",
          "--lower-guard-intrinsic",
          "--loweratomic",
          "--always-inline",
          "--redundant-dbg-inst-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--globaldce",
      "--indvars",
      "--ee-instrument",
      "--rewrite-statepoints-for-gc",
      "-loop-reduce",
      "--loop-idiom",
      "--strip-dead-prototypes",
      "--coro-elide",
      "--coro-split",
      "--hotcoldsplit",
      "--alignment-from-assumptions",
      "--scalarizer",
      "--elim-avail-extern",
      "--globalsplit",
      "--instsimplify",
      "--add-discriminators",
      "--speculative-execution",
      "--gvn",
      "--lower-guard-intrinsic",
      "--loweratomic",
      "--always-inline",
      "--redundant-dbg-inst-elim"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}