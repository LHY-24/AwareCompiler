{
  "program_id": "linux-v0_13867.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 11,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 3,
    "oneSuccessor": 10,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 1,
    "BranchCount": 16,
    "returnInt": 9,
    "CriticalCount": 1,
    "NumEdges": 22,
    "const32Bit": 51,
    "const64Bit": 3,
    "numConstZeroes": 22,
    "numConstOnes": 18,
    "UncondBranches": 10,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 15,
    "NumAndInst": 3,
    "BlockMid": 3,
    "BlockLow": 20,
    "NumBitCastInst": 0,
    "NumBrInst": 16,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 7,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 23,
    "TotalInsts": 135,
    "TotalMemInst": 93,
    "TotalFuncs": 15,
    "ArgsPhi": 2,
    "testUnary": 58
  },
  "baseline_oz_instcount": 135,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--jump-threading",
    "--mldst-motion",
    "--inline",
    "--jump-threading",
    "--loop-reroll",
    "--load-store-vectorizer",
    "--mem2reg",
    "--aggressive-instcombine",
    "--flattencfg",
    "--newgvn",
    "--reassociate",
    "--ipsccp",
    "--loop-deletion",
    "--early-cse",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--flattencfg",
          "--ipsccp",
          "--slp-vectorizer",
          "--loop-versioning-licm",
          "--loop-deletion",
          "--loop-sink",
          "--jump-threading",
          "--mergereturn",
          "--libcalls-shrinkwrap",
          "--sroa",
          "--aggressive-instcombine",
          "--loop-unswitch",
          "--mergefunc",
          "--loop-versioning",
          "--rpo-functionattrs",
          "--coro-elide",
          "--dce",
          "--strip-debug-declare",
          "--name-anon-globals",
          "--simple-loop-unswitch",
          "--prune-eh",
          "--loop-simplifycfg",
          "--elim-avail-extern",
          "--loop-fusion",
          "--argpromotion",
          "--die",
          "--speculative-execution"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--flattencfg",
      "--ipsccp",
      "--slp-vectorizer",
      "--loop-versioning-licm",
      "--loop-deletion",
      "--loop-sink",
      "--jump-threading",
      "--mergereturn",
      "--libcalls-shrinkwrap",
      "--sroa",
      "--aggressive-instcombine",
      "--loop-unswitch",
      "--mergefunc",
      "--loop-versioning",
      "--rpo-functionattrs",
      "--coro-elide",
      "--dce",
      "--strip-debug-declare",
      "--name-anon-globals",
      "--simple-loop-unswitch",
      "--prune-eh",
      "--loop-simplifycfg",
      "--elim-avail-extern",
      "--loop-fusion",
      "--argpromotion",
      "--die",
      "--speculative-execution"
    ],
    "performance_vs_Oz": "+4.4%"
  }
}