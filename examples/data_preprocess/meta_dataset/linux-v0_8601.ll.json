{
  "program_id": "linux-v0_8601.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 8,
    "oneSuccessor": 20,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 14,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 11,
    "CriticalCount": 3,
    "NumEdges": 48,
    "const32Bit": 99,
    "const64Bit": 7,
    "numConstZeroes": 45,
    "numConstOnes": 40,
    "UncondBranches": 20,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 29,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 39,
    "NumBitCastInst": 0,
    "NumBrInst": 34,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 74,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 6,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 44,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 3,
    "TotalBlocks": 42,
    "TotalInsts": 268,
    "TotalMemInst": 192,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 115
  },
  "baseline_oz_instcount": 270,
  "knowledge_base_entry": [
    "--early-cse",
    "--nary-reassociate",
    "--sroa",
    "--newgvn",
    "--mem2reg",
    "--globalopt",
    "--instsimplify",
    "--gvn-hoist",
    "--bdce",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--lower-expect",
    "--slp-vectorizer",
    "--dce",
    "--dse",
    "--lower-constant-intrinsics",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-cleanup",
          "--loop-unroll-and-jam",
          "--lower-widenable-condition",
          "--insert-gcov-profiling",
          "--mergeicmps",
          "--dce",
          "--strip-nondebug",
          "--sroa",
          "--load-store-vectorizer",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-cleanup",
      "--loop-unroll-and-jam",
      "--lower-widenable-condition",
      "--insert-gcov-profiling",
      "--mergeicmps",
      "--dce",
      "--strip-nondebug",
      "--sroa",
      "--load-store-vectorizer",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}