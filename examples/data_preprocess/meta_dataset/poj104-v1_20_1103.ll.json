{
  "program_id": "poj104-v1_20_1103.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 5,
    "oneSuccessor": 24,
    "twoPred": 11,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 67,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 24,
    "CriticalCount": 6,
    "NumEdges": 52,
    "const32Bit": 90,
    "const64Bit": 74,
    "numConstZeroes": 45,
    "numConstOnes": 64,
    "UncondBranches": 24,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 50,
    "NumAndInst": 1,
    "BlockMid": 8,
    "BlockLow": 59,
    "NumBitCastInst": 65,
    "NumBrInst": 38,
    "NumCallInst": 78,
    "NumGetElementPtrInst": 46,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 121,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 28,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 62,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 5,
    "TotalBlocks": 67,
    "TotalInsts": 535,
    "TotalMemInst": 357,
    "TotalFuncs": 43,
    "ArgsPhi": 0,
    "testUnary": 253
  },
  "baseline_oz_instcount": 160,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--licm",
    "--simplifycfg",
    "--dse",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--inline",
    "--load-store-vectorizer",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--adce",
    "--instsimplify",
    "--early-cse-memssa",
    "--instcombine",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--simplifycfg",
    "--bdce",
    "--sccp",
    "--globalopt",
    "--instcombine",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--lower-guard-intrinsic",
          "--lower-constant-intrinsics",
          "--memcpyopt",
          "--reassociate",
          "--newgvn",
          "--loop-interchange",
          "--coro-elide",
          "--globaldce",
          "--cross-dso-cfi",
          "--sancov",
          "--loop-idiom",
          "--gvn-hoist",
          "--slp-vectorizer",
          "--functionattrs",
          "--instnamer",
          "--callsite-splitting",
          "--loop-predication",
          "--mem2reg",
          "--dse",
          "--adce",
          "--always-inline",
          "--mldst-motion",
          "--tailcallelim",
          "--loop-vectorize",
          "--scalarizer",
          "--inline",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+22.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--lower-guard-intrinsic",
      "--lower-constant-intrinsics",
      "--memcpyopt",
      "--reassociate",
      "--newgvn",
      "--loop-interchange",
      "--coro-elide",
      "--globaldce",
      "--cross-dso-cfi",
      "--sancov",
      "--loop-idiom",
      "--gvn-hoist",
      "--slp-vectorizer",
      "--functionattrs",
      "--instnamer",
      "--callsite-splitting",
      "--loop-predication",
      "--mem2reg",
      "--dse",
      "--adce",
      "--always-inline",
      "--mldst-motion",
      "--tailcallelim",
      "--loop-vectorize",
      "--scalarizer",
      "--inline",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+22.5%"
  }
}