{
  "program_id": "linux-v0_4006.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 68,
    "onePredOneSuc": 59,
    "onePredTwoSuc": 9,
    "oneSuccessor": 66,
    "twoPred": 17,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 21,
    "morePreds": 5,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 107,
    "BeginPhi": 2,
    "BranchCount": 87,
    "returnInt": 14,
    "CriticalCount": 11,
    "NumEdges": 123,
    "const32Bit": 216,
    "const64Bit": 21,
    "numConstZeroes": 68,
    "numConstOnes": 116,
    "UncondBranches": 66,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 95,
    "NumAndInst": 6,
    "BlockMid": 15,
    "BlockLow": 94,
    "NumBitCastInst": 34,
    "NumBrInst": 87,
    "NumCallInst": 53,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 191,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 2,
    "NumRetInst": 19,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 119,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 12,
    "NumZExtInst": 24,
    "TotalBlocks": 109,
    "TotalInsts": 741,
    "TotalMemInst": 496,
    "TotalFuncs": 23,
    "ArgsPhi": 4,
    "testUnary": 367
  },
  "baseline_oz_instcount": 741,
  "knowledge_base_entry": [
    "--adce",
    "--die",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--prune-eh",
    "--gvn-hoist",
    "--inline",
    "--sccp",
    "--instsimplify",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--mergereturn",
          "--sroa",
          "--argpromotion",
          "--licm",
          "--scalarizer",
          "--loop-guard-widening",
          "--tailcallelim",
          "--jump-threading",
          "--flattencfg",
          "--pgo-memop-opt",
          "--irce",
          "--loop-rotate",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--mergereturn",
      "--sroa",
      "--argpromotion",
      "--licm",
      "--scalarizer",
      "--loop-guard-widening",
      "--tailcallelim",
      "--jump-threading",
      "--flattencfg",
      "--pgo-memop-opt",
      "--irce",
      "--loop-rotate",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}