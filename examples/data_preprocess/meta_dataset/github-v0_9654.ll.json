{
  "program_id": "github-v0_9654.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 2,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 6,
    "CriticalCount": 3,
    "NumEdges": 12,
    "const32Bit": 19,
    "const64Bit": 10,
    "numConstZeroes": 14,
    "numConstOnes": 6,
    "UncondBranches": 4,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 8,
    "NumBitCastInst": 4,
    "NumBrInst": 8,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 5,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 0,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 157,
    "TotalMemInst": 33,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 19
  },
  "baseline_oz_instcount": 159,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--flattencfg",
    "--gvn-hoist",
    "--loop-deletion",
    "--newgvn",
    "--nary-reassociate",
    "--loop-fusion",
    "--loop-reroll",
    "--mergefunc",
    "--correlated-propagation",
    "--loop-reroll",
    "--slsr",
    "--loop-simplifycfg",
    "--jump-threading",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--instsimplify",
    "--loop-simplifycfg",
    "--gvn",
    "--memcpyopt",
    "--jump-threading",
    "--slsr",
    "--slp-vectorizer",
    "--gvn",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--loop-unswitch",
          "--lower-guard-intrinsic",
          "-loop-reduce",
          "--slsr",
          "--nary-reassociate",
          "--insert-gcov-profiling",
          "--slp-vectorizer",
          "--globalopt",
          "--pgo-memop-opt",
          "--inline",
          "--sroa",
          "--gvn",
          "--loop-unroll",
          "--separate-const-offset-from-gep",
          "--correlated-propagation",
          "--gvn-hoist",
          "--loop-simplify",
          "--dce",
          "--instcombine",
          "--loop-vectorize",
          "--argpromotion",
          "--redundant-dbg-inst-elim",
          "--loop-versioning",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--loop-unswitch",
      "--lower-guard-intrinsic",
      "-loop-reduce",
      "--slsr",
      "--nary-reassociate",
      "--insert-gcov-profiling",
      "--slp-vectorizer",
      "--globalopt",
      "--pgo-memop-opt",
      "--inline",
      "--sroa",
      "--gvn",
      "--loop-unroll",
      "--separate-const-offset-from-gep",
      "--correlated-propagation",
      "--gvn-hoist",
      "--loop-simplify",
      "--dce",
      "--instcombine",
      "--loop-vectorize",
      "--argpromotion",
      "--redundant-dbg-inst-elim",
      "--loop-versioning",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+5.7%"
  }
}