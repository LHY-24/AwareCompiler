{
  "program_id": "linux-v0_3519.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 8,
    "BeginPhi": 0,
    "BranchCount": 6,
    "returnInt": 1,
    "CriticalCount": 0,
    "NumEdges": 8,
    "const32Bit": 24,
    "const64Bit": 6,
    "numConstZeroes": 9,
    "numConstOnes": 12,
    "UncondBranches": 4,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 7,
    "NumBitCastInst": 1,
    "NumBrInst": 6,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 19,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 8,
    "TotalInsts": 70,
    "TotalMemInst": 55,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 32
  },
  "baseline_oz_instcount": 70,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--gvn",
    "--indvars",
    "--instcombine",
    "--adce",
    "--mem2reg",
    "--memcpyopt",
    "--loop-reroll",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--guard-widening",
          "--called-value-propagation",
          "--mergefunc",
          "--loweratomic",
          "--loop-simplifycfg",
          "--coro-cleanup",
          "--dce",
          "--sink",
          "--deadargelim",
          "--ee-instrument",
          "--loop-instsimplify",
          "--lower-guard-intrinsic",
          "--indvars",
          "--add-discriminators",
          "--forceattrs",
          "--name-anon-globals",
          "--callsite-splitting",
          "--mergeicmps",
          "--inferattrs",
          "--float2int",
          "--redundant-dbg-inst-elim",
          "--early-cse-memssa",
          "--coro-elide",
          "--aggressive-instcombine",
          "--loop-rotate",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--guard-widening",
      "--called-value-propagation",
      "--mergefunc",
      "--loweratomic",
      "--loop-simplifycfg",
      "--coro-cleanup",
      "--dce",
      "--sink",
      "--deadargelim",
      "--ee-instrument",
      "--loop-instsimplify",
      "--lower-guard-intrinsic",
      "--indvars",
      "--add-discriminators",
      "--forceattrs",
      "--name-anon-globals",
      "--callsite-splitting",
      "--mergeicmps",
      "--inferattrs",
      "--float2int",
      "--redundant-dbg-inst-elim",
      "--early-cse-memssa",
      "--coro-elide",
      "--aggressive-instcombine",
      "--loop-rotate",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}