{
  "program_id": "linux-v0_7966.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 48,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 9,
    "oneSuccessor": 41,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 19,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 75,
    "BeginPhi": 0,
    "BranchCount": 60,
    "returnInt": 13,
    "CriticalCount": 6,
    "NumEdges": 89,
    "const32Bit": 172,
    "const64Bit": 23,
    "numConstZeroes": 55,
    "numConstOnes": 100,
    "UncondBranches": 41,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 89,
    "NumAndInst": 5,
    "BlockMid": 12,
    "BlockLow": 63,
    "NumBitCastInst": 38,
    "NumBrInst": 60,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 162,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 107,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 3,
    "NumZExtInst": 3,
    "TotalBlocks": 75,
    "TotalInsts": 580,
    "TotalMemInst": 423,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 302
  },
  "baseline_oz_instcount": 511,
  "knowledge_base_entry": [
    "--indvars",
    "--jump-threading",
    "--loop-deletion",
    "--mem2reg",
    "--globalopt",
    "--aggressive-instcombine",
    "--early-cse",
    "--prune-eh",
    "--inline",
    "--sccp",
    "--loop-simplifycfg",
    "--slsr",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--lcssa",
          "--globalopt",
          "--separate-const-offset-from-gep",
          "--lowerinvoke",
          "--always-inline",
          "--loop-unroll-and-jam",
          "--add-discriminators",
          "--mldst-motion",
          "--constprop",
          "--instcombine",
          "--functionattrs",
          "--libcalls-shrinkwrap",
          "--lower-constant-intrinsics",
          "--loop-versioning-licm",
          "--slp-vectorizer",
          "--coro-elide",
          "--prune-eh",
          "--aggressive-instcombine",
          "--loop-unroll",
          "--loop-interchange",
          "--coro-early",
          "--loop-versioning",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--lcssa",
      "--globalopt",
      "--separate-const-offset-from-gep",
      "--lowerinvoke",
      "--always-inline",
      "--loop-unroll-and-jam",
      "--add-discriminators",
      "--mldst-motion",
      "--constprop",
      "--instcombine",
      "--functionattrs",
      "--libcalls-shrinkwrap",
      "--lower-constant-intrinsics",
      "--loop-versioning-licm",
      "--slp-vectorizer",
      "--coro-elide",
      "--prune-eh",
      "--aggressive-instcombine",
      "--loop-unroll",
      "--loop-interchange",
      "--coro-early",
      "--loop-versioning",
      "--dse"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}