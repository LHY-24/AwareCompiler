{
  "program_id": "github-v0_20138.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 60,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 8,
    "oneSuccessor": 56,
    "twoPred": 26,
    "twoPredOneSuc": 3,
    "twoEach": 22,
    "twoSuccessor": 34,
    "morePreds": 4,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 109,
    "BeginPhi": 2,
    "BranchCount": 90,
    "returnInt": 8,
    "CriticalCount": 13,
    "NumEdges": 124,
    "const32Bit": 210,
    "const64Bit": 20,
    "numConstZeroes": 53,
    "numConstOnes": 122,
    "UncondBranches": 56,
    "binaryConstArg": 79,
    "NumAShrInst": 20,
    "NumAddInst": 36,
    "NumAllocaInst": 89,
    "NumAndInst": 30,
    "BlockMid": 24,
    "BlockLow": 87,
    "NumBitCastInst": 1,
    "NumBrInst": 90,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 36,
    "NumLShrInst": 0,
    "NumLoadInst": 236,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 2,
    "NumRetInst": 21,
    "NumSExtInst": 41,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 140,
    "NumSubInst": 4,
    "NumTruncInst": 13,
    "NumXorInst": 6,
    "NumZExtInst": 39,
    "TotalBlocks": 111,
    "TotalInsts": 870,
    "TotalMemInst": 524,
    "TotalFuncs": 27,
    "ArgsPhi": 4,
    "testUnary": 419
  },
  "baseline_oz_instcount": 872,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--instcombine",
    "--loop-deletion",
    "--gvn-hoist",
    "--inline",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--mem2reg",
    "--flattencfg",
    "--newgvn",
    "--loop-reroll",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--prune-eh",
    "--early-cse",
    "--gvn",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--loop-deletion",
          "--pgo-memop-opt",
          "--instsimplify",
          "--mergefunc",
          "--strip-debug-declare",
          "--aggressive-instcombine",
          "--strip-dead-prototypes",
          "--strip-nondebug",
          "--dse",
          "--speculative-execution",
          "--constmerge",
          "--loop-fusion",
          "--mergeicmps",
          "--lower-guard-intrinsic",
          "--loop-unroll",
          "--correlated-propagation",
          "--slsr",
          "--rpo-functionattrs",
          "--loop-reroll",
          "--lower-widenable-condition",
          "--instnamer",
          "--name-anon-globals",
          "--lowerswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--loop-deletion",
      "--pgo-memop-opt",
      "--instsimplify",
      "--mergefunc",
      "--strip-debug-declare",
      "--aggressive-instcombine",
      "--strip-dead-prototypes",
      "--strip-nondebug",
      "--dse",
      "--speculative-execution",
      "--constmerge",
      "--loop-fusion",
      "--mergeicmps",
      "--lower-guard-intrinsic",
      "--loop-unroll",
      "--correlated-propagation",
      "--slsr",
      "--rpo-functionattrs",
      "--loop-reroll",
      "--lower-widenable-condition",
      "--instnamer",
      "--name-anon-globals",
      "--lowerswitch"
    ],
    "performance_vs_Oz": "+4.5%"
  }
}