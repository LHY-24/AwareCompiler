{
  "program_id": "github-v0_8376.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 14,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 8,
    "CriticalCount": 4,
    "NumEdges": 30,
    "const32Bit": 42,
    "const64Bit": 11,
    "numConstZeroes": 27,
    "numConstOnes": 28,
    "UncondBranches": 14,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 21,
    "NumBitCastInst": 2,
    "NumBrInst": 22,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 39,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 8,
    "NumZExtInst": 8,
    "TotalBlocks": 23,
    "TotalInsts": 171,
    "TotalMemInst": 94,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 75
  },
  "baseline_oz_instcount": 172,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--early-cse-memssa",
    "--instcombine",
    "--slp-vectorizer",
    "--mem2reg",
    "--mldst-motion",
    "--dse",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--guard-widening",
          "--lcssa",
          "--prune-eh",
          "--loop-versioning",
          "--sancov",
          "--lower-matrix-intrinsics",
          "--infer-address-spaces",
          "--instsimplify",
          "--argpromotion",
          "--loop-distribute",
          "--scalarizer",
          "--adce",
          "--libcalls-shrinkwrap",
          "--slsr",
          "--loop-vectorize",
          "--canonicalize-aliases",
          "--slp-vectorizer",
          "--attributor",
          "--die",
          "--loop-unroll-and-jam",
          "--coro-early",
          "--lower-expect",
          "--dse",
          "--partial-inliner",
          "--rewrite-statepoints-for-gc",
          "--jump-threading"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--guard-widening",
      "--lcssa",
      "--prune-eh",
      "--loop-versioning",
      "--sancov",
      "--lower-matrix-intrinsics",
      "--infer-address-spaces",
      "--instsimplify",
      "--argpromotion",
      "--loop-distribute",
      "--scalarizer",
      "--adce",
      "--libcalls-shrinkwrap",
      "--slsr",
      "--loop-vectorize",
      "--canonicalize-aliases",
      "--slp-vectorizer",
      "--attributor",
      "--die",
      "--loop-unroll-and-jam",
      "--coro-early",
      "--lower-expect",
      "--dse",
      "--partial-inliner",
      "--rewrite-statepoints-for-gc",
      "--jump-threading"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}