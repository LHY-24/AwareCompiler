{
  "program_id": "linux-v0_4625.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 80,
    "onePredOneSuc": 66,
    "onePredTwoSuc": 11,
    "oneSuccessor": 80,
    "twoPred": 21,
    "twoPredOneSuc": 10,
    "twoEach": 5,
    "twoSuccessor": 22,
    "morePreds": 6,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 124,
    "BeginPhi": 2,
    "BranchCount": 102,
    "returnInt": 13,
    "CriticalCount": 17,
    "NumEdges": 147,
    "const32Bit": 313,
    "const64Bit": 23,
    "numConstZeroes": 123,
    "numConstOnes": 153,
    "UncondBranches": 80,
    "binaryConstArg": 37,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 102,
    "NumAndInst": 1,
    "BlockMid": 14,
    "BlockLow": 112,
    "NumBitCastInst": 56,
    "NumBrInst": 102,
    "NumCallInst": 59,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 40,
    "NumLShrInst": 0,
    "NumLoadInst": 229,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 19,
    "NumSExtInst": 19,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 134,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 35,
    "NumZExtInst": 20,
    "TotalBlocks": 126,
    "TotalInsts": 903,
    "TotalMemInst": 592,
    "TotalFuncs": 33,
    "ArgsPhi": 4,
    "testUnary": 435
  },
  "baseline_oz_instcount": 905,
  "knowledge_base_entry": [
    "--mergefunc",
    "--newgvn",
    "--globalopt",
    "--gvn",
    "--dse",
    "--dce",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--inline",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--instsimplify",
    "--jump-threading",
    "--correlated-propagation",
    "--adce",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-instsimplify",
          "--mergefunc",
          "--barrier",
          "--loop-rotate",
          "--forceattrs",
          "--add-discriminators",
          "--post-inline-ee-instrument",
          "--libcalls-shrinkwrap",
          "--loop-predication",
          "--irce",
          "--ipconstprop",
          "--bdce",
          "--ee-instrument",
          "--lower-constant-intrinsics",
          "--loop-unroll",
          "--loop-vectorize",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-instsimplify",
      "--mergefunc",
      "--barrier",
      "--loop-rotate",
      "--forceattrs",
      "--add-discriminators",
      "--post-inline-ee-instrument",
      "--libcalls-shrinkwrap",
      "--loop-predication",
      "--irce",
      "--ipconstprop",
      "--bdce",
      "--ee-instrument",
      "--lower-constant-intrinsics",
      "--loop-unroll",
      "--loop-vectorize",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}