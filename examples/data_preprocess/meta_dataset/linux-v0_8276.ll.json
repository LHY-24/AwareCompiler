{
  "program_id": "linux-v0_8276.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 1,
    "oneSuccessor": 26,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 0,
    "BranchCount": 30,
    "returnInt": 9,
    "CriticalCount": 1,
    "NumEdges": 40,
    "const32Bit": 80,
    "const64Bit": 13,
    "numConstZeroes": 17,
    "numConstOnes": 56,
    "UncondBranches": 26,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 54,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 37,
    "NumBitCastInst": 17,
    "NumBrInst": 30,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 61,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 63,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 42,
    "TotalInsts": 286,
    "TotalMemInst": 213,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 141
  },
  "baseline_oz_instcount": 287,
  "knowledge_base_entry": [
    "--sink",
    "--ipsccp",
    "--instsimplify",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--bdce",
    "--dse",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--aggressive-instcombine",
          "--sink",
          "--slp-vectorizer",
          "--redundant-dbg-inst-elim",
          "--inferattrs",
          "--sancov",
          "--strip-nondebug",
          "--bdce",
          "--strip",
          "--mldst-motion",
          "--globalopt",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--aggressive-instcombine",
      "--sink",
      "--slp-vectorizer",
      "--redundant-dbg-inst-elim",
      "--inferattrs",
      "--sancov",
      "--strip-nondebug",
      "--bdce",
      "--strip",
      "--mldst-motion",
      "--globalopt",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}