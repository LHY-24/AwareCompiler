{
  "program_id": "linux-v0_9409.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 83,
    "onePredOneSuc": 60,
    "onePredTwoSuc": 21,
    "oneSuccessor": 75,
    "twoPred": 23,
    "twoPredOneSuc": 12,
    "twoEach": 6,
    "twoSuccessor": 36,
    "morePreds": 10,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 147,
    "BeginPhi": 0,
    "BranchCount": 110,
    "returnInt": 38,
    "CriticalCount": 12,
    "NumEdges": 166,
    "const32Bit": 358,
    "const64Bit": 13,
    "numConstZeroes": 152,
    "numConstOnes": 128,
    "UncondBranches": 75,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 97,
    "NumAndInst": 4,
    "BlockMid": 14,
    "BlockLow": 133,
    "NumBitCastInst": 13,
    "NumBrInst": 110,
    "NumCallInst": 84,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 31,
    "NumLShrInst": 0,
    "NumLoadInst": 269,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 31,
    "NumSExtInst": 10,
    "NumSelectInst": 1,
    "NumShlInst": 4,
    "NumStoreInst": 163,
    "NumSubInst": 3,
    "NumTruncInst": 15,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 147,
    "TotalInsts": 948,
    "TotalMemInst": 692,
    "TotalFuncs": 64,
    "ArgsPhi": 0,
    "testUnary": 420
  },
  "baseline_oz_instcount": 950,
  "knowledge_base_entry": [
    "--scalarizer",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--mergefunc",
    "--memcpyopt",
    "--mem2reg",
    "--flattencfg",
    "--jump-threading",
    "--slsr",
    "--simplifycfg",
    "--dce",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--sccp",
    "--early-cse",
    "--prune-eh",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-split",
          "--libcalls-shrinkwrap",
          "--insert-gcov-profiling",
          "--tailcallelim",
          "--callsite-splitting",
          "--inject-tli-mappings",
          "--gvn-hoist",
          "--float2int",
          "--mergefunc",
          "--strip-dead-prototypes",
          "--coro-cleanup",
          "--constprop",
          "--mergeicmps"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-split",
      "--libcalls-shrinkwrap",
      "--insert-gcov-profiling",
      "--tailcallelim",
      "--callsite-splitting",
      "--inject-tli-mappings",
      "--gvn-hoist",
      "--float2int",
      "--mergefunc",
      "--strip-dead-prototypes",
      "--coro-cleanup",
      "--constprop",
      "--mergeicmps"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}