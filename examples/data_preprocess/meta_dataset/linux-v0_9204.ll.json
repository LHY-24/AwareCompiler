{
  "program_id": "linux-v0_9204.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 18,
    "oneSuccessor": 38,
    "twoPred": 10,
    "twoPredOneSuc": 6,
    "twoEach": 3,
    "twoSuccessor": 21,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 0,
    "BranchCount": 59,
    "returnInt": 12,
    "CriticalCount": 6,
    "NumEdges": 80,
    "const32Bit": 178,
    "const64Bit": 20,
    "numConstZeroes": 83,
    "numConstOnes": 65,
    "UncondBranches": 38,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 44,
    "NumAndInst": 8,
    "BlockMid": 7,
    "BlockLow": 57,
    "NumBitCastInst": 18,
    "NumBrInst": 59,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 53,
    "NumICmpInst": 26,
    "NumLShrInst": 3,
    "NumLoadInst": 140,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 60,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 6,
    "NumZExtInst": 11,
    "TotalBlocks": 64,
    "TotalInsts": 501,
    "TotalMemInst": 331,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 230
  },
  "baseline_oz_instcount": 502,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--simplifycfg",
    "--instsimplify",
    "--simplifycfg",
    "--inline",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergereturn",
          "--attributor",
          "--sink",
          "--instcombine",
          "--called-value-propagation",
          "--pgo-memop-opt",
          "--mergefunc",
          "--aggressive-instcombine",
          "--strip-debug-declare",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergereturn",
      "--attributor",
      "--sink",
      "--instcombine",
      "--called-value-propagation",
      "--pgo-memop-opt",
      "--mergefunc",
      "--aggressive-instcombine",
      "--strip-debug-declare",
      "--globaldce"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}