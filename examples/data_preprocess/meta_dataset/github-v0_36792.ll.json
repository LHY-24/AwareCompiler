{
  "program_id": "github-v0_36792.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 7,
    "oneSuccessor": 12,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 12,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 1,
    "BranchCount": 24,
    "returnInt": 2,
    "CriticalCount": 7,
    "NumEdges": 36,
    "const32Bit": 44,
    "const64Bit": 9,
    "numConstZeroes": 32,
    "numConstOnes": 17,
    "UncondBranches": 12,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 26,
    "NumBitCastInst": 0,
    "NumBrInst": 24,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 7,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 27,
    "TotalInsts": 159,
    "TotalMemInst": 106,
    "TotalFuncs": 12,
    "ArgsPhi": 2,
    "testUnary": 64
  },
  "baseline_oz_instcount": 160,
  "knowledge_base_entry": [
    "--flattencfg",
    "--gvn",
    "--memcpyopt",
    "--elim-avail-extern",
    "--mldst-motion",
    "--slp-vectorizer",
    "--mem2reg",
    "--reassociate",
    "--correlated-propagation",
    "--gvn",
    "--reassociate",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--rewrite-statepoints-for-gc",
          "--lower-guard-intrinsic",
          "--add-discriminators",
          "--instsimplify",
          "--name-anon-globals",
          "--sink",
          "--hotcoldsplit",
          "--alignment-from-assumptions",
          "--sancov",
          "--scalarizer",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--rewrite-statepoints-for-gc",
      "--lower-guard-intrinsic",
      "--add-discriminators",
      "--instsimplify",
      "--name-anon-globals",
      "--sink",
      "--hotcoldsplit",
      "--alignment-from-assumptions",
      "--sancov",
      "--scalarizer",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}