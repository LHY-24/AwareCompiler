{
  "program_id": "github-v0_4616.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 33,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 8,
    "oneSuccessor": 32,
    "twoPred": 17,
    "twoPredOneSuc": 6,
    "twoEach": 9,
    "twoSuccessor": 19,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 56,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 14,
    "CriticalCount": 11,
    "NumEdges": 70,
    "const32Bit": 60,
    "const64Bit": 51,
    "numConstZeroes": 36,
    "numConstOnes": 38,
    "UncondBranches": 32,
    "binaryConstArg": 39,
    "NumAShrInst": 1,
    "NumAddInst": 21,
    "NumAllocaInst": 23,
    "NumAndInst": 4,
    "BlockMid": 7,
    "BlockLow": 49,
    "NumBitCastInst": 0,
    "NumBrInst": 51,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 102,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 44,
    "NumSubInst": 0,
    "NumTruncInst": 18,
    "NumXorInst": 1,
    "NumZExtInst": 26,
    "TotalBlocks": 56,
    "TotalInsts": 383,
    "TotalMemInst": 206,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 172
  },
  "baseline_oz_instcount": 385,
  "knowledge_base_entry": [
    "--mem2reg",
    "--licm",
    "--gvn-hoist",
    "--sccp",
    "--newgvn",
    "--globalopt",
    "--gvn",
    "--prune-eh",
    "--simplifycfg",
    "--reassociate",
    "--globalopt",
    "--globaldce",
    "--aggressive-instcombine",
    "--licm",
    "--die",
    "--die",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--loop-instsimplify",
    "--simplifycfg",
    "--lower-expect",
    "--instcombine",
    "--lower-expect",
    "--newgvn",
    "--load-store-vectorizer",
    "--reassociate",
    "--instsimplify",
    "--mergefunc",
    "--loop-reroll",
    "-loop-reduce",
    "--jump-threading",
    "-loop-reduce",
    "--early-cse-memssa",
    "--gvn",
    "--mem2reg",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--memcpyopt",
          "--loop-idiom",
          "--strip-dead-prototypes",
          "--hotcoldsplit",
          "--infer-address-spaces",
          "--jump-threading",
          "--bdce",
          "--loop-distribute",
          "--globaldce",
          "--loop-sink",
          "--early-cse",
          "--constprop",
          "--correlated-propagation",
          "--lower-guard-intrinsic",
          "--always-inline",
          "--redundant-dbg-inst-elim",
          "--licm",
          "--loop-reroll",
          "--deadargelim",
          "--dce",
          "--aggressive-instcombine",
          "--loweratomic",
          "--tailcallelim",
          "--ee-instrument",
          "--instcombine",
          "--loop-unroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--memcpyopt",
      "--loop-idiom",
      "--strip-dead-prototypes",
      "--hotcoldsplit",
      "--infer-address-spaces",
      "--jump-threading",
      "--bdce",
      "--loop-distribute",
      "--globaldce",
      "--loop-sink",
      "--early-cse",
      "--constprop",
      "--correlated-propagation",
      "--lower-guard-intrinsic",
      "--always-inline",
      "--redundant-dbg-inst-elim",
      "--licm",
      "--loop-reroll",
      "--deadargelim",
      "--dce",
      "--aggressive-instcombine",
      "--loweratomic",
      "--tailcallelim",
      "--ee-instrument",
      "--instcombine",
      "--loop-unroll"
    ],
    "performance_vs_Oz": "+6.0%"
  }
}