{
  "program_id": "github-v0_24645.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 0,
    "oneSuccessor": 5,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 5,
    "CriticalCount": 1,
    "NumEdges": 11,
    "const32Bit": 11,
    "const64Bit": 0,
    "numConstZeroes": 2,
    "numConstOnes": 9,
    "UncondBranches": 5,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 8,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 9,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 6,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 38,
    "TotalMemInst": 24,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 13
  },
  "baseline_oz_instcount": 39,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--aggressive-instcombine",
    "--inline",
    "--simplifycfg",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--post-inline-ee-instrument",
          "--inferattrs",
          "--instcombine",
          "--ipconstprop",
          "--coro-early",
          "--loop-unroll-and-jam",
          "--simplifycfg",
          "--gvn-hoist",
          "--sink",
          "--coro-cleanup",
          "--lowerswitch",
          "--constprop",
          "--speculative-execution",
          "--called-value-propagation",
          "--lower-guard-intrinsic",
          "--lower-expect",
          "--consthoist",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--post-inline-ee-instrument",
      "--inferattrs",
      "--instcombine",
      "--ipconstprop",
      "--coro-early",
      "--loop-unroll-and-jam",
      "--simplifycfg",
      "--gvn-hoist",
      "--sink",
      "--coro-cleanup",
      "--lowerswitch",
      "--constprop",
      "--speculative-execution",
      "--called-value-propagation",
      "--lower-guard-intrinsic",
      "--lower-expect",
      "--consthoist",
      "--strip"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}