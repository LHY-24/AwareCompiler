{
  "program_id": "linux-v0_10458.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 12,
    "oneSuccessor": 27,
    "twoPred": 12,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 20,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 70,
    "BeginPhi": 0,
    "BranchCount": 47,
    "returnInt": 20,
    "CriticalCount": 8,
    "NumEdges": 67,
    "const32Bit": 177,
    "const64Bit": 7,
    "numConstZeroes": 63,
    "numConstOnes": 60,
    "UncondBranches": 27,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 50,
    "NumAndInst": 9,
    "BlockMid": 6,
    "BlockLow": 64,
    "NumBitCastInst": 18,
    "NumBrInst": 47,
    "NumCallInst": 58,
    "NumGetElementPtrInst": 49,
    "NumICmpInst": 20,
    "NumLShrInst": 3,
    "NumLoadInst": 137,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 73,
    "NumSubInst": 0,
    "NumTruncInst": 11,
    "NumXorInst": 2,
    "NumZExtInst": 9,
    "TotalBlocks": 70,
    "TotalInsts": 521,
    "TotalMemInst": 367,
    "TotalFuncs": 41,
    "ArgsPhi": 0,
    "testUnary": 232
  },
  "baseline_oz_instcount": 521,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--gvn",
    "--aggressive-instcombine",
    "--mergefunc",
    "-loop-reduce",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--early-cse",
    "--indvars",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--argpromotion",
          "--sroa",
          "--slsr",
          "--cross-dso-cfi",
          "--mem2reg",
          "--loop-simplify",
          "--licm",
          "--ipsccp",
          "--lowerswitch",
          "--gvn-hoist",
          "--simple-loop-unswitch",
          "--loop-versioning-licm",
          "--aggressive-instcombine",
          "--loop-sink",
          "--forceattrs",
          "--insert-gcov-profiling",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--argpromotion",
      "--sroa",
      "--slsr",
      "--cross-dso-cfi",
      "--mem2reg",
      "--loop-simplify",
      "--licm",
      "--ipsccp",
      "--lowerswitch",
      "--gvn-hoist",
      "--simple-loop-unswitch",
      "--loop-versioning-licm",
      "--aggressive-instcombine",
      "--loop-sink",
      "--forceattrs",
      "--insert-gcov-profiling",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}