{
  "program_id": "tensorflow-v0_1072.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 10,
    "onePred": 77,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 45,
    "oneSuccessor": 36,
    "twoPred": 25,
    "twoPredOneSuc": 9,
    "twoEach": 12,
    "twoSuccessor": 66,
    "morePreds": 10,
    "BB03Phi": 13,
    "BBHiPhi": 0,
    "BBNoPhi": 105,
    "BeginPhi": 13,
    "BranchCount": 80,
    "returnInt": 5,
    "CriticalCount": 55,
    "NumEdges": 168,
    "const32Bit": 166,
    "const64Bit": 179,
    "numConstZeroes": 206,
    "numConstOnes": 60,
    "UncondBranches": 36,
    "binaryConstArg": 31,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 15,
    "NumAndInst": 11,
    "BlockMid": 5,
    "BlockLow": 113,
    "NumBitCastInst": 51,
    "NumBrInst": 80,
    "NumCallInst": 88,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 48,
    "NumLShrInst": 1,
    "NumLoadInst": 76,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 20,
    "NumRetInst": 5,
    "NumSExtInst": 1,
    "NumSelectInst": 5,
    "NumShlInst": 3,
    "NumStoreInst": 37,
    "NumSubInst": 4,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 118,
    "TotalInsts": 617,
    "TotalMemInst": 325,
    "TotalFuncs": 39,
    "ArgsPhi": 49,
    "testUnary": 163
  },
  "baseline_oz_instcount": 613,
  "knowledge_base_entry": [
    "--newgvn",
    "--instsimplify",
    "--dse",
    "--load-store-vectorizer",
    "--dse",
    "--sccp",
    "--licm",
    "--lower-constant-intrinsics",
    "--sroa",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--inline",
    "--sroa",
    "--mem2reg",
    "--dce",
    "--slp-vectorizer",
    "--adce",
    "--slp-vectorizer",
    "--mem2reg",
    "--simplifycfg",
    "--instcombine",
    "--prune-eh",
    "--jump-threading",
    "--elim-avail-extern",
    "--lower-expect",
    "--bdce",
    "--sroa",
    "--elim-avail-extern",
    "--mergefunc",
    "--aggressive-instcombine",
    "--lower-expect",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--lower-expect",
    "--gvn-hoist",
    "--sccp",
    "--licm",
    "--lower-constant-intrinsics",
    "--sroa",
    "--loop-rotate",
    "--early-cse-memssa",
    "--loop-deletion",
    "--jump-threading",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--newgvn",
    "--instcombine",
    "--gvn",
    "--load-store-vectorizer",
    "--dce",
    "--gvn-hoist",
    "--globalopt",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--inline",
    "--bdce",
    "--loop-instsimplify",
    "--instcombine",
    "--gvn-hoist",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--inline",
    "--sroa",
    "--mem2reg",
    "--dce",
    "--slp-vectorizer",
    "--adce",
    "--slp-vectorizer",
    "--mem2reg",
    "--simplifycfg",
    "--instcombine",
    "--prune-eh",
    "--gvn-hoist",
    "--globalopt",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--inline",
    "--mergefunc",
    "--ipsccp",
    "--lower-expect",
    "--gvn-hoist",
    "--sccp",
    "--licm",
    "--lower-constant-intrinsics",
    "--sroa",
    "--loop-rotate",
    "--early-cse-memssa",
    "--loop-deletion",
    "--jump-threading",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--newgvn",
    "--memcpyopt",
    "--early-cse",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--lower-widenable-condition",
          "--lowerinvoke",
          "--inline",
          "--memcpyopt",
          "--dce",
          "--rewrite-statepoints-for-gc",
          "--float2int",
          "--globalopt",
          "--ipsccp",
          "--dse",
          "--loop-versioning-licm",
          "--gvn-hoist",
          "--libcalls-shrinkwrap",
          "--sroa",
          "--strip-dead-prototypes",
          "--lower-constant-intrinsics",
          "--pgo-memop-opt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+13.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--lower-widenable-condition",
      "--lowerinvoke",
      "--inline",
      "--memcpyopt",
      "--dce",
      "--rewrite-statepoints-for-gc",
      "--float2int",
      "--globalopt",
      "--ipsccp",
      "--dse",
      "--loop-versioning-licm",
      "--gvn-hoist",
      "--libcalls-shrinkwrap",
      "--sroa",
      "--strip-dead-prototypes",
      "--lower-constant-intrinsics",
      "--pgo-memop-opt"
    ],
    "performance_vs_Oz": "+13.5%"
  }
}