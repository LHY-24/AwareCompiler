{
  "program_id": "github-v0_12696.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 35,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 2,
    "oneSuccessor": 35,
    "twoPred": 15,
    "twoPredOneSuc": 2,
    "twoEach": 10,
    "twoSuccessor": 15,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 0,
    "BranchCount": 50,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 65,
    "const32Bit": 66,
    "const64Bit": 11,
    "numConstZeroes": 17,
    "numConstOnes": 51,
    "UncondBranches": 35,
    "binaryConstArg": 31,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 37,
    "NumAndInst": 0,
    "BlockMid": 12,
    "BlockLow": 46,
    "NumBitCastInst": 0,
    "NumBrInst": 50,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 134,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 79,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 58,
    "TotalInsts": 447,
    "TotalMemInst": 274,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 191
  },
  "baseline_oz_instcount": 447,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--newgvn",
    "--instcombine",
    "--sroa",
    "--memcpyopt",
    "--elim-avail-extern",
    "--mergefunc",
    "--loop-instsimplify",
    "--ipsccp",
    "--instsimplify",
    "--prune-eh",
    "--elim-avail-extern",
    "--die",
    "--licm",
    "--ipsccp",
    "--loop-simplifycfg",
    "--adce",
    "--ipsccp",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--newgvn",
          "--barrier",
          "--inline",
          "--globalsplit",
          "--memcpyopt",
          "--flattencfg",
          "-loop-reduce",
          "--inject-tli-mappings",
          "--pgo-memop-opt",
          "--loop-fusion",
          "--loop-vectorize",
          "--ipsccp",
          "--infer-address-spaces",
          "--mldst-motion",
          "--strip",
          "--coro-elide",
          "--rpo-functionattrs",
          "--elim-avail-extern",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--newgvn",
      "--barrier",
      "--inline",
      "--globalsplit",
      "--memcpyopt",
      "--flattencfg",
      "-loop-reduce",
      "--inject-tli-mappings",
      "--pgo-memop-opt",
      "--loop-fusion",
      "--loop-vectorize",
      "--ipsccp",
      "--infer-address-spaces",
      "--mldst-motion",
      "--strip",
      "--coro-elide",
      "--rpo-functionattrs",
      "--elim-avail-extern",
      "--dse"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}