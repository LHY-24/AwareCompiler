{
  "program_id": "linux-v0_916.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 50,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 8,
    "oneSuccessor": 48,
    "twoPred": 17,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 21,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 89,
    "BeginPhi": 1,
    "BranchCount": 69,
    "returnInt": 10,
    "CriticalCount": 14,
    "NumEdges": 95,
    "const32Bit": 241,
    "const64Bit": 17,
    "numConstZeroes": 121,
    "numConstOnes": 111,
    "UncondBranches": 48,
    "binaryConstArg": 12,
    "NumAShrInst": 1,
    "NumAddInst": 5,
    "NumAllocaInst": 82,
    "NumAndInst": 5,
    "BlockMid": 13,
    "BlockLow": 77,
    "NumBitCastInst": 32,
    "NumBrInst": 69,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 71,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 176,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 108,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 3,
    "NumZExtInst": 4,
    "TotalBlocks": 90,
    "TotalInsts": 650,
    "TotalMemInst": 479,
    "TotalFuncs": 32,
    "ArgsPhi": 2,
    "testUnary": 303
  },
  "baseline_oz_instcount": 648,
  "knowledge_base_entry": [
    "--instsimplify",
    "--aggressive-instcombine",
    "--newgvn",
    "--mergefunc",
    "--globalopt",
    "--reassociate",
    "--aggressive-instcombine",
    "--loweratomic",
    "--instcombine",
    "--mergefunc",
    "--globalopt",
    "--flattencfg",
    "--sroa",
    "--mergefunc",
    "--globalopt",
    "--reassociate",
    "--jump-threading",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalopt",
          "--slsr",
          "--always-inline",
          "--barrier",
          "--coro-elide",
          "--correlated-propagation",
          "--lowerinvoke",
          "--post-inline-ee-instrument",
          "--sancov",
          "--loop-reroll",
          "--rewrite-statepoints-for-gc",
          "--callsite-splitting",
          "--guard-widening",
          "--strip-debug-declare",
          "--simplifycfg",
          "--lower-expect",
          "--mergefunc",
          "--early-cse-memssa",
          "--name-anon-globals",
          "--sroa",
          "--functionattrs",
          "--attributor",
          "--prune-eh",
          "--loop-versioning",
          "--lower-guard-intrinsic",
          "--float2int",
          "--newgvn",
          "--load-store-vectorizer",
          "--loop-idiom"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalopt",
      "--slsr",
      "--always-inline",
      "--barrier",
      "--coro-elide",
      "--correlated-propagation",
      "--lowerinvoke",
      "--post-inline-ee-instrument",
      "--sancov",
      "--loop-reroll",
      "--rewrite-statepoints-for-gc",
      "--callsite-splitting",
      "--guard-widening",
      "--strip-debug-declare",
      "--simplifycfg",
      "--lower-expect",
      "--mergefunc",
      "--early-cse-memssa",
      "--name-anon-globals",
      "--sroa",
      "--functionattrs",
      "--attributor",
      "--prune-eh",
      "--loop-versioning",
      "--lower-guard-intrinsic",
      "--float2int",
      "--newgvn",
      "--load-store-vectorizer",
      "--loop-idiom"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}