{
  "program_id": "linux-v0_5091.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 0,
    "oneSuccessor": 14,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 2,
    "CriticalCount": 1,
    "NumEdges": 29,
    "const32Bit": 106,
    "const64Bit": 6,
    "numConstZeroes": 37,
    "numConstOnes": 44,
    "UncondBranches": 14,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 38,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 26,
    "NumBitCastInst": 19,
    "NumBrInst": 19,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 70,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 44,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 31,
    "TotalInsts": 254,
    "TotalMemInst": 197,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 128
  },
  "baseline_oz_instcount": 254,
  "knowledge_base_entry": [
    "--simple-loop-unswitch",
    "--gvn",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--instcombine",
    "--mergefunc",
    "--globalopt",
    "--globaldce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--nary-reassociate",
          "--separate-const-offset-from-gep",
          "--alignment-from-assumptions",
          "--lower-guard-intrinsic",
          "--mergefunc",
          "--loop-unroll",
          "--licm",
          "--loweratomic",
          "--simplifycfg",
          "--called-value-propagation",
          "--globalopt",
          "--dce",
          "--die",
          "--globaldce",
          "--sroa",
          "--slsr",
          "--flattencfg",
          "-loop-reduce",
          "--loop-distribute",
          "--dse",
          "--always-inline",
          "--float2int",
          "--loop-idiom",
          "--correlated-propagation",
          "--lcssa",
          "--consthoist",
          "--partially-inline-libcalls",
          "--loop-reroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--nary-reassociate",
      "--separate-const-offset-from-gep",
      "--alignment-from-assumptions",
      "--lower-guard-intrinsic",
      "--mergefunc",
      "--loop-unroll",
      "--licm",
      "--loweratomic",
      "--simplifycfg",
      "--called-value-propagation",
      "--globalopt",
      "--dce",
      "--die",
      "--globaldce",
      "--sroa",
      "--slsr",
      "--flattencfg",
      "-loop-reduce",
      "--loop-distribute",
      "--dse",
      "--always-inline",
      "--float2int",
      "--loop-idiom",
      "--correlated-propagation",
      "--lcssa",
      "--consthoist",
      "--partially-inline-libcalls",
      "--loop-reroll"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}