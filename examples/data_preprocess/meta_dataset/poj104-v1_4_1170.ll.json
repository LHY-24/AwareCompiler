{
  "program_id": "poj104-v1_4_1170.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 14,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 1,
    "oneSuccessor": 12,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 28,
    "BeginPhi": 1,
    "BranchCount": 19,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 26,
    "const32Bit": 38,
    "const64Bit": 20,
    "numConstZeroes": 15,
    "numConstOnes": 25,
    "UncondBranches": 12,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 18,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 25,
    "NumBitCastInst": 19,
    "NumBrInst": 19,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 48,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 9,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 5,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 29,
    "TotalInsts": 208,
    "TotalMemInst": 134,
    "TotalFuncs": 20,
    "ArgsPhi": 2,
    "testUnary": 89
  },
  "baseline_oz_instcount": 92,
  "knowledge_base_entry": [
    "--early-cse",
    "--loop-deletion",
    "--elim-avail-extern",
    "--dse",
    "--early-cse-memssa",
    "--instcombine",
    "--sccp",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--die",
    "--sroa",
    "--elim-avail-extern",
    "--instcombine",
    "--licm",
    "--mldst-motion",
    "--elim-avail-extern",
    "--simplifycfg",
    "--loop-deletion",
    "--jump-threading",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--licm",
    "--flattencfg",
    "--mergefunc",
    "--elim-avail-extern",
    "--sroa",
    "--ipsccp",
    "--elim-avail-extern",
    "--prune-eh",
    "--inline",
    "--reassociate",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--instcombine",
    "--sccp",
    "--simplifycfg",
    "--bdce",
    "--aggressive-instcombine",
    "--early-cse",
    "--gvn-hoist",
    "--jump-threading",
    "--dce",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--licm",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--early-cse",
    "--mergefunc",
    "--dse",
    "--sroa",
    "--ipsccp",
    "--reassociate",
    "--instcombine",
    "--gvn-hoist",
    "--early-cse",
    "--newgvn",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--lower-expect",
    "--slp-vectorizer",
    "--simplifycfg",
    "--inline",
    "--loop-simplifycfg",
    "--sccp",
    "--sroa",
    "--elim-avail-extern",
    "--newgvn",
    "--die",
    "--sroa",
    "--elim-avail-extern",
    "--instcombine",
    "--licm",
    "--mldst-motion",
    "--elim-avail-extern",
    "--simplifycfg",
    "--loop-deletion",
    "--jump-threading",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--licm",
    "--flattencfg",
    "--mergefunc",
    "--elim-avail-extern",
    "--sroa",
    "--ipsccp",
    "--reassociate",
    "--instcombine",
    "--gvn-hoist",
    "--early-cse",
    "--newgvn",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--loweratomic"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--lowerswitch",
          "--sroa",
          "--always-inline",
          "--elim-avail-extern",
          "--instcombine",
          "--loop-unroll",
          "--lcssa",
          "--ee-instrument",
          "--constprop",
          "--coro-cleanup",
          "--loop-idiom",
          "--loop-predication",
          "--globaldce",
          "--lower-matrix-intrinsics",
          "--inject-tli-mappings",
          "--consthoist",
          "--hotcoldsplit",
          "--libcalls-shrinkwrap"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--lowerswitch",
      "--sroa",
      "--always-inline",
      "--elim-avail-extern",
      "--instcombine",
      "--loop-unroll",
      "--lcssa",
      "--ee-instrument",
      "--constprop",
      "--coro-cleanup",
      "--loop-idiom",
      "--loop-predication",
      "--globaldce",
      "--lower-matrix-intrinsics",
      "--inject-tli-mappings",
      "--consthoist",
      "--hotcoldsplit",
      "--libcalls-shrinkwrap"
    ],
    "performance_vs_Oz": "+5.4%"
  }
}