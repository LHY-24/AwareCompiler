{
  "program_id": "github-v0_7921.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 34,
    "const64Bit": 47,
    "numConstZeroes": 45,
    "numConstOnes": 26,
    "UncondBranches": 15,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 22,
    "NumBitCastInst": 12,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 55,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 18,
    "TotalBlocks": 27,
    "TotalInsts": 223,
    "TotalMemInst": 143,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 105
  },
  "baseline_oz_instcount": 223,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--jump-threading",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--sroa",
    "--dce",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--globalopt",
    "--dse",
    "--slp-vectorizer",
    "--die",
    "--early-cse",
    "--instcombine",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--slsr",
    "--simplifycfg",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--loop-unroll",
          "--die",
          "--libcalls-shrinkwrap",
          "--aggressive-instcombine",
          "--ee-instrument",
          "--lcssa",
          "--dse",
          "--loop-unswitch",
          "--loop-simplify",
          "--indvars",
          "--globaldce",
          "--strip-dead-prototypes",
          "--barrier",
          "--globalopt",
          "--redundant-dbg-inst-elim",
          "--float2int",
          "--sink",
          "--loweratomic",
          "--lower-widenable-condition",
          "--bdce",
          "--irce",
          "--instcombine",
          "--reg2mem",
          "--name-anon-globals",
          "--simple-loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--loop-unroll",
      "--die",
      "--libcalls-shrinkwrap",
      "--aggressive-instcombine",
      "--ee-instrument",
      "--lcssa",
      "--dse",
      "--loop-unswitch",
      "--loop-simplify",
      "--indvars",
      "--globaldce",
      "--strip-dead-prototypes",
      "--barrier",
      "--globalopt",
      "--redundant-dbg-inst-elim",
      "--float2int",
      "--sink",
      "--loweratomic",
      "--lower-widenable-condition",
      "--bdce",
      "--irce",
      "--instcombine",
      "--reg2mem",
      "--name-anon-globals",
      "--simple-loop-unswitch"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}