{
  "program_id": "github-v0_50410.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 2,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 5,
    "BranchCount": 9,
    "returnInt": 9,
    "CriticalCount": 8,
    "NumEdges": 15,
    "const32Bit": 42,
    "const64Bit": 47,
    "numConstZeroes": 11,
    "numConstOnes": 10,
    "UncondBranches": 3,
    "binaryConstArg": 71,
    "NumAShrInst": 16,
    "NumAddInst": 33,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 8,
    "NumBitCastInst": 4,
    "NumBrInst": 9,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 8,
    "NumOrInst": 16,
    "NumPHIInst": 11,
    "NumRetInst": 2,
    "NumSExtInst": 26,
    "NumSelectInst": 0,
    "NumShlInst": 20,
    "NumStoreInst": 4,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 11,
    "TotalInsts": 279,
    "TotalMemInst": 119,
    "TotalFuncs": 8,
    "ArgsPhi": 23,
    "testUnary": 77
  },
  "baseline_oz_instcount": 272,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--gvn",
    "--reassociate",
    "--slsr",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--inline",
    "--reassociate",
    "--slsr",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--gvn",
    "--mem2reg",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--loop-interchange",
          "--mergefunc",
          "--rpo-functionattrs",
          "--elim-avail-extern",
          "--loop-rotate",
          "--called-value-propagation",
          "--slp-vectorizer",
          "--slsr",
          "--loop-instsimplify",
          "--mergereturn",
          "--loop-simplifycfg",
          "--prune-eh",
          "--early-cse-memssa",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--loop-interchange",
      "--mergefunc",
      "--rpo-functionattrs",
      "--elim-avail-extern",
      "--loop-rotate",
      "--called-value-propagation",
      "--slp-vectorizer",
      "--slsr",
      "--loop-instsimplify",
      "--mergereturn",
      "--loop-simplifycfg",
      "--prune-eh",
      "--early-cse-memssa",
      "--sancov"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}