{
  "program_id": "linux-v0_11869.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 48,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 13,
    "oneSuccessor": 43,
    "twoPred": 20,
    "twoPredOneSuc": 6,
    "twoEach": 11,
    "twoSuccessor": 27,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 87,
    "BeginPhi": 3,
    "BranchCount": 70,
    "returnInt": 14,
    "CriticalCount": 13,
    "NumEdges": 97,
    "const32Bit": 266,
    "const64Bit": 8,
    "numConstZeroes": 119,
    "numConstOnes": 93,
    "UncondBranches": 43,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 65,
    "NumAndInst": 9,
    "BlockMid": 9,
    "BlockLow": 81,
    "NumBitCastInst": 27,
    "NumBrInst": 70,
    "NumCallInst": 58,
    "NumGetElementPtrInst": 76,
    "NumICmpInst": 30,
    "NumLShrInst": 3,
    "NumLoadInst": 168,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 3,
    "NumRetInst": 20,
    "NumSExtInst": 3,
    "NumSelectInst": 1,
    "NumShlInst": 2,
    "NumStoreInst": 88,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 6,
    "NumZExtInst": 9,
    "TotalBlocks": 90,
    "TotalInsts": 651,
    "TotalMemInst": 455,
    "TotalFuncs": 36,
    "ArgsPhi": 6,
    "testUnary": 276
  },
  "baseline_oz_instcount": 650,
  "knowledge_base_entry": [
    "--loop-interchange",
    "--newgvn",
    "--licm",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--licm",
    "--gvn",
    "--sccp",
    "--sroa",
    "--adce",
    "--lower-constant-intrinsics",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--adce",
    "--loop-simplifycfg",
    "--mergefunc",
    "--gvn",
    "--instsimplify",
    "--nary-reassociate",
    "--indvars",
    "--instcombine",
    "--inline",
    "--loop-instsimplify",
    "--early-cse",
    "--simplifycfg",
    "--ipsccp",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-guard-intrinsic",
          "--indvars",
          "--simplifycfg",
          "--flattencfg",
          "--always-inline",
          "--speculative-execution",
          "--instcombine",
          "--loop-simplifycfg",
          "--aggressive-instcombine",
          "--coro-elide",
          "--strip-debug-declare",
          "--partially-inline-libcalls",
          "--loop-rotate",
          "--loop-fusion",
          "--argpromotion",
          "--mem2reg",
          "--correlated-propagation",
          "--loop-versioning-licm",
          "--loop-vectorize",
          "--coro-split",
          "-loop-reduce",
          "--simple-loop-unswitch",
          "--add-discriminators",
          "--lower-constant-intrinsics",
          "--mergefunc",
          "--lower-expect",
          "--loop-predication",
          "--loop-deletion",
          "--loop-unroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-guard-intrinsic",
      "--indvars",
      "--simplifycfg",
      "--flattencfg",
      "--always-inline",
      "--speculative-execution",
      "--instcombine",
      "--loop-simplifycfg",
      "--aggressive-instcombine",
      "--coro-elide",
      "--strip-debug-declare",
      "--partially-inline-libcalls",
      "--loop-rotate",
      "--loop-fusion",
      "--argpromotion",
      "--mem2reg",
      "--correlated-propagation",
      "--loop-versioning-licm",
      "--loop-vectorize",
      "--coro-split",
      "-loop-reduce",
      "--simple-loop-unswitch",
      "--add-discriminators",
      "--lower-constant-intrinsics",
      "--mergefunc",
      "--lower-expect",
      "--loop-predication",
      "--loop-deletion",
      "--loop-unroll"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}