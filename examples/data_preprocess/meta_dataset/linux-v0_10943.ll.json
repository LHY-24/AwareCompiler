{
  "program_id": "linux-v0_10943.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 48,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 15,
    "oneSuccessor": 37,
    "twoPred": 14,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 28,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 91,
    "BeginPhi": 0,
    "BranchCount": 65,
    "returnInt": 25,
    "CriticalCount": 12,
    "NumEdges": 93,
    "const32Bit": 325,
    "const64Bit": 5,
    "numConstZeroes": 142,
    "numConstOnes": 94,
    "UncondBranches": 37,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 65,
    "NumAndInst": 1,
    "BlockMid": 10,
    "BlockLow": 81,
    "NumBitCastInst": 11,
    "NumBrInst": 65,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 105,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 209,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 26,
    "NumSExtInst": 1,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 106,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 2,
    "NumZExtInst": 4,
    "TotalBlocks": 91,
    "TotalInsts": 700,
    "TotalMemInst": 548,
    "TotalFuncs": 47,
    "ArgsPhi": 0,
    "testUnary": 298
  },
  "baseline_oz_instcount": 700,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--bdce",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--lower-matrix-intrinsics",
          "--loop-unroll",
          "-loop-reduce",
          "--cross-dso-cfi",
          "--speculative-execution",
          "--sancov",
          "--mergereturn",
          "--lowerswitch",
          "--early-cse",
          "--prune-eh",
          "--loop-sink",
          "--sink",
          "--loop-guard-widening",
          "--loop-distribute",
          "--insert-gcov-profiling",
          "--lowerinvoke",
          "--correlated-propagation",
          "--lower-expect",
          "--aggressive-instcombine",
          "--coro-elide",
          "--mergefunc",
          "--indvars",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--lower-matrix-intrinsics",
      "--loop-unroll",
      "-loop-reduce",
      "--cross-dso-cfi",
      "--speculative-execution",
      "--sancov",
      "--mergereturn",
      "--lowerswitch",
      "--early-cse",
      "--prune-eh",
      "--loop-sink",
      "--sink",
      "--loop-guard-widening",
      "--loop-distribute",
      "--insert-gcov-profiling",
      "--lowerinvoke",
      "--correlated-propagation",
      "--lower-expect",
      "--aggressive-instcombine",
      "--coro-elide",
      "--mergefunc",
      "--indvars",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}