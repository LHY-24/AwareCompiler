{
  "program_id": "github-v0_20417.ll",
  "autophase_features": {
    "BBNumArgsHi": 6,
    "BBNumArgsLo": 24,
    "onePred": 24,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 6,
    "oneSuccessor": 18,
    "twoPred": 24,
    "twoPredOneSuc": 0,
    "twoEach": 20,
    "twoSuccessor": 36,
    "morePreds": 6,
    "BB03Phi": 30,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 30,
    "BranchCount": 54,
    "returnInt": 24,
    "CriticalCount": 48,
    "NumEdges": 90,
    "const32Bit": 102,
    "const64Bit": 12,
    "numConstZeroes": 30,
    "numConstOnes": 44,
    "UncondBranches": 18,
    "binaryConstArg": 72,
    "NumAShrInst": 6,
    "NumAddInst": 96,
    "NumAllocaInst": 0,
    "NumAndInst": 6,
    "BlockMid": 10,
    "BlockLow": 50,
    "NumBitCastInst": 0,
    "NumBrInst": 54,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 42,
    "NumICmpInst": 60,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 42,
    "NumOrInst": 0,
    "NumPHIInst": 54,
    "NumRetInst": 6,
    "NumSExtInst": 36,
    "NumSelectInst": 24,
    "NumShlInst": 6,
    "NumStoreInst": 6,
    "NumSubInst": 42,
    "NumTruncInst": 24,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 60,
    "TotalInsts": 594,
    "TotalMemInst": 126,
    "TotalFuncs": 9,
    "ArgsPhi": 114,
    "testUnary": 96
  },
  "baseline_oz_instcount": 630,
  "knowledge_base_entry": [
    "--mem2reg",
    "--dse",
    "--newgvn",
    "--slsr",
    "--early-cse",
    "--ipsccp",
    "--bdce",
    "--early-cse-memssa",
    "--adce",
    "--sroa",
    "--adce",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--adce",
    "--sccp",
    "--loop-instsimplify",
    "--adce",
    "--instcombine",
    "--inline",
    "--nary-reassociate",
    "--early-cse",
    "--inline",
    "--jump-threading",
    "--slsr",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--adce",
    "--sccp",
    "--loop-instsimplify",
    "--adce",
    "--instcombine",
    "--sccp",
    "--adce",
    "--simplifycfg",
    "--reassociate",
    "--elim-avail-extern",
    "--mem2reg",
    "--load-store-vectorizer",
    "--dse",
    "--gvn-hoist",
    "--die",
    "--die",
    "--licm",
    "--instsimplify",
    "--nary-reassociate",
    "--early-cse",
    "--inline",
    "--jump-threading",
    "--slsr",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--adce",
    "--sccp",
    "--loop-instsimplify",
    "--adce",
    "--instcombine",
    "--sccp",
    "--adce",
    "--simplifycfg",
    "--reassociate",
    "--elim-avail-extern",
    "--mem2reg",
    "--load-store-vectorizer",
    "--dse",
    "--gvn-hoist",
    "--dse",
    "--inline",
    "--dce",
    "--simplifycfg",
    "--newgvn",
    "--mergefunc",
    "--licm",
    "--mldst-motion",
    "--inline",
    "--nary-reassociate",
    "--early-cse",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--bdce",
    "--early-cse-memssa",
    "--adce",
    "--sroa",
    "--adce",
    "--correlated-propagation",
    "--bdce",
    "--mem2reg",
    "--sccp",
    "--bdce",
    "--early-cse-memssa",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--reassociate",
          "--called-value-propagation",
          "--loop-versioning-licm",
          "--lowerinvoke",
          "--lowerswitch",
          "--loop-deletion",
          "--loop-idiom",
          "--dse",
          "--strip-debug-declare",
          "--coro-early",
          "--loop-versioning",
          "--partial-inliner",
          "--correlated-propagation",
          "--simplifycfg",
          "--libcalls-shrinkwrap",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--reassociate",
      "--called-value-propagation",
      "--loop-versioning-licm",
      "--lowerinvoke",
      "--lowerswitch",
      "--loop-deletion",
      "--loop-idiom",
      "--dse",
      "--strip-debug-declare",
      "--coro-early",
      "--loop-versioning",
      "--partial-inliner",
      "--correlated-propagation",
      "--simplifycfg",
      "--libcalls-shrinkwrap",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+6.7%"
  }
}