{
  "program_id": "linux-v0_6383.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 40,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 9,
    "oneSuccessor": 35,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 17,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 1,
    "BranchCount": 52,
    "returnInt": 6,
    "CriticalCount": 10,
    "NumEdges": 69,
    "const32Bit": 291,
    "const64Bit": 65,
    "numConstZeroes": 155,
    "numConstOnes": 133,
    "UncondBranches": 35,
    "binaryConstArg": 58,
    "NumAShrInst": 1,
    "NumAddInst": 12,
    "NumAllocaInst": 73,
    "NumAndInst": 20,
    "BlockMid": 12,
    "BlockLow": 47,
    "NumBitCastInst": 28,
    "NumBrInst": 52,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 109,
    "NumICmpInst": 28,
    "NumLShrInst": 9,
    "NumLoadInst": 179,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 1,
    "NumRetInst": 7,
    "NumSExtInst": 12,
    "NumSelectInst": 2,
    "NumShlInst": 3,
    "NumStoreInst": 87,
    "NumSubInst": 0,
    "NumTruncInst": 29,
    "NumXorInst": 13,
    "NumZExtInst": 35,
    "TotalBlocks": 59,
    "TotalInsts": 729,
    "TotalMemInst": 473,
    "TotalFuncs": 15,
    "ArgsPhi": 2,
    "testUnary": 356
  },
  "baseline_oz_instcount": 729,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--gvn",
    "--flattencfg",
    "--inline",
    "--prune-eh",
    "--sroa",
    "--instcombine",
    "--slsr",
    "--early-cse",
    "--ipsccp",
    "--sccp",
    "--adce",
    "--ipsccp",
    "--mem2reg",
    "--loop-instsimplify",
    "--mergefunc",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--loop-fusion",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--insert-gcov-profiling",
          "--attributor",
          "--float2int",
          "--loop-guard-widening",
          "--deadargelim",
          "--mergeicmps",
          "--die",
          "--sink",
          "--ipsccp",
          "--div-rem-pairs",
          "--lower-guard-intrinsic",
          "--instnamer",
          "--inferattrs",
          "--instsimplify",
          "--coro-elide",
          "--slp-vectorizer",
          "--strip-dead-prototypes",
          "--name-anon-globals",
          "--canonicalize-aliases",
          "--loweratomic",
          "--ipconstprop",
          "--loop-versioning",
          "--aggressive-instcombine",
          "--hotcoldsplit",
          "--adce",
          "--elim-avail-extern",
          "--lower-matrix-intrinsics",
          "--loop-load-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--insert-gcov-profiling",
      "--attributor",
      "--float2int",
      "--loop-guard-widening",
      "--deadargelim",
      "--mergeicmps",
      "--die",
      "--sink",
      "--ipsccp",
      "--div-rem-pairs",
      "--lower-guard-intrinsic",
      "--instnamer",
      "--inferattrs",
      "--instsimplify",
      "--coro-elide",
      "--slp-vectorizer",
      "--strip-dead-prototypes",
      "--name-anon-globals",
      "--canonicalize-aliases",
      "--loweratomic",
      "--ipconstprop",
      "--loop-versioning",
      "--aggressive-instcombine",
      "--hotcoldsplit",
      "--adce",
      "--elim-avail-extern",
      "--lower-matrix-intrinsics",
      "--loop-load-elim"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}