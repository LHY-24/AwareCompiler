{
  "program_id": "poj104-v1_74_345.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 6,
    "oneSuccessor": 26,
    "twoPred": 12,
    "twoPredOneSuc": 1,
    "twoEach": 8,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 0,
    "BranchCount": 40,
    "returnInt": 9,
    "CriticalCount": 9,
    "NumEdges": 54,
    "const32Bit": 46,
    "const64Bit": 28,
    "numConstZeroes": 15,
    "numConstOnes": 29,
    "UncondBranches": 26,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 42,
    "NumBitCastInst": 24,
    "NumBrInst": 40,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 50,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 45,
    "TotalInsts": 237,
    "TotalMemInst": 132,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 93
  },
  "baseline_oz_instcount": 122,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--adce",
    "--dce",
    "--elim-avail-extern",
    "--globalopt",
    "--loop-simplifycfg",
    "--mem2reg",
    "--newgvn",
    "--jump-threading",
    "--reassociate",
    "--early-cse",
    "--newgvn",
    "--correlated-propagation",
    "--instcombine",
    "--simplifycfg",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--loop-instsimplify",
          "--loop-idiom",
          "--sancov",
          "--canonicalize-aliases",
          "--guard-widening",
          "--mem2reg",
          "--coro-elide",
          "--loop-reroll",
          "--irce",
          "--partially-inline-libcalls",
          "--loweratomic",
          "--instcombine",
          "--loop-guard-widening",
          "--break-crit-edges",
          "--div-rem-pairs",
          "--coro-split",
          "--newgvn",
          "--scalarizer",
          "--mergefunc",
          "--loop-unswitch",
          "--constprop",
          "--simplifycfg",
          "--libcalls-shrinkwrap",
          "--cross-dso-cfi",
          "--add-discriminators",
          "--called-value-propagation",
          "--coro-cleanup"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--loop-instsimplify",
      "--loop-idiom",
      "--sancov",
      "--canonicalize-aliases",
      "--guard-widening",
      "--mem2reg",
      "--coro-elide",
      "--loop-reroll",
      "--irce",
      "--partially-inline-libcalls",
      "--loweratomic",
      "--instcombine",
      "--loop-guard-widening",
      "--break-crit-edges",
      "--div-rem-pairs",
      "--coro-split",
      "--newgvn",
      "--scalarizer",
      "--mergefunc",
      "--loop-unswitch",
      "--constprop",
      "--simplifycfg",
      "--libcalls-shrinkwrap",
      "--cross-dso-cfi",
      "--add-discriminators",
      "--called-value-propagation",
      "--coro-cleanup"
    ],
    "performance_vs_Oz": "+5.7%"
  }
}