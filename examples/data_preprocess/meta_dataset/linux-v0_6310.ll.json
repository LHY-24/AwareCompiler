{
  "program_id": "linux-v0_6310.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 2,
    "oneSuccessor": 6,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 2,
    "CriticalCount": 2,
    "NumEdges": 14,
    "const32Bit": 22,
    "const64Bit": 3,
    "numConstZeroes": 6,
    "numConstOnes": 13,
    "UncondBranches": 6,
    "binaryConstArg": 3,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 11,
    "NumAndInst": 2,
    "BlockMid": 2,
    "BlockLow": 12,
    "NumBitCastInst": 0,
    "NumBrInst": 10,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 21,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 14,
    "TotalInsts": 86,
    "TotalMemInst": 55,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 42
  },
  "baseline_oz_instcount": 86,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--dce",
    "--slp-vectorizer",
    "--newgvn",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--adce",
    "--load-store-vectorizer",
    "--lower-expect",
    "--load-store-vectorizer",
    "--licm",
    "--dse",
    "--inline",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse-memssa",
    "--slsr",
    "--early-cse",
    "--memcpyopt",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--adce",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-reroll",
          "--flattencfg",
          "--sancov",
          "--loop-simplify",
          "--loop-sink",
          "--load-store-vectorizer",
          "--irce",
          "--loop-load-elim",
          "--consthoist",
          "--lowerinvoke",
          "--dse",
          "--aggressive-instcombine",
          "--loop-unroll-and-jam",
          "--partial-inliner",
          "--loop-versioning-licm",
          "--loop-deletion",
          "--loop-unroll",
          "--gvn",
          "--separate-const-offset-from-gep",
          "--post-inline-ee-instrument",
          "--loop-idiom"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-reroll",
      "--flattencfg",
      "--sancov",
      "--loop-simplify",
      "--loop-sink",
      "--load-store-vectorizer",
      "--irce",
      "--loop-load-elim",
      "--consthoist",
      "--lowerinvoke",
      "--dse",
      "--aggressive-instcombine",
      "--loop-unroll-and-jam",
      "--partial-inliner",
      "--loop-versioning-licm",
      "--loop-deletion",
      "--loop-unroll",
      "--gvn",
      "--separate-const-offset-from-gep",
      "--post-inline-ee-instrument",
      "--loop-idiom"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}