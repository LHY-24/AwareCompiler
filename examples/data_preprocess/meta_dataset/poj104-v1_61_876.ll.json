{
  "program_id": "poj104-v1_61_876.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 0,
    "oneSuccessor": 9,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 8,
    "CriticalCount": 0,
    "NumEdges": 15,
    "const32Bit": 20,
    "const64Bit": 21,
    "numConstZeroes": 16,
    "numConstOnes": 13,
    "UncondBranches": 9,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 13,
    "NumBitCastInst": 12,
    "NumBrInst": 12,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 20,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 16,
    "TotalInsts": 110,
    "TotalMemInst": 66,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 44
  },
  "baseline_oz_instcount": 109,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--instcombine",
    "--adce",
    "--mem2reg",
    "--elim-avail-extern",
    "--bdce",
    "--gvn",
    "--early-cse-memssa",
    "--newgvn",
    "--inline",
    "--globalopt",
    "--aggressive-instcombine",
    "--instsimplify",
    "--die",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--early-cse",
    "--early-cse",
    "--indvars",
    "--gvn-hoist",
    "--instsimplify",
    "--instcombine",
    "--adce",
    "--mem2reg",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--indvars",
    "--slsr",
    "--gvn-hoist",
    "--adce",
    "--gvn-hoist",
    "--loop-reroll",
    "--loop-fusion",
    "--instcombine",
    "--elim-avail-extern",
    "--flattencfg",
    "--aggressive-instcombine",
    "--mem2reg",
    "--slp-vectorizer",
    "--mem2reg",
    "--sccp",
    "--early-cse",
    "--slp-vectorizer",
    "--early-cse",
    "--inline",
    "--simplifycfg",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--insert-gcov-profiling",
          "--sroa",
          "--gvn",
          "--strip-dead-prototypes",
          "--mem2reg",
          "--elim-avail-extern",
          "--loop-idiom",
          "--mergeicmps",
          "--inline",
          "--slsr",
          "--lowerinvoke",
          "--inferattrs",
          "--loop-fusion",
          "--loop-versioning-licm",
          "--partial-inliner",
          "--ipsccp",
          "--globalopt",
          "--loop-simplifycfg",
          "--called-value-propagation",
          "--adce",
          "--coro-cleanup",
          "--flattencfg",
          "--instsimplify",
          "--always-inline",
          "--loop-distribute",
          "--newgvn",
          "--float2int",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+35.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--insert-gcov-profiling",
      "--sroa",
      "--gvn",
      "--strip-dead-prototypes",
      "--mem2reg",
      "--elim-avail-extern",
      "--loop-idiom",
      "--mergeicmps",
      "--inline",
      "--slsr",
      "--lowerinvoke",
      "--inferattrs",
      "--loop-fusion",
      "--loop-versioning-licm",
      "--partial-inliner",
      "--ipsccp",
      "--globalopt",
      "--loop-simplifycfg",
      "--called-value-propagation",
      "--adce",
      "--coro-cleanup",
      "--flattencfg",
      "--instsimplify",
      "--always-inline",
      "--loop-distribute",
      "--newgvn",
      "--float2int",
      "--sancov"
    ],
    "performance_vs_Oz": "+35.8%"
  }
}