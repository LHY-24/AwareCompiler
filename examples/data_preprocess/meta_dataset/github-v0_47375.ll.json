{
  "program_id": "github-v0_47375.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 0,
    "oneSuccessor": 24,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 5,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 29,
    "returnInt": 3,
    "CriticalCount": 9,
    "NumEdges": 52,
    "const32Bit": 25,
    "const64Bit": 12,
    "numConstZeroes": 5,
    "numConstOnes": 10,
    "UncondBranches": 24,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 33,
    "NumBitCastInst": 8,
    "NumBrInst": 29,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 46,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 33,
    "TotalInsts": 144,
    "TotalMemInst": 94,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 59
  },
  "baseline_oz_instcount": 139,
  "knowledge_base_entry": [
    "--loop-versioning-licm",
    "--early-cse",
    "--slsr",
    "-loop-reduce",
    "--slsr",
    "--jump-threading",
    "--licm",
    "--mem2reg",
    "--reassociate",
    "--correlated-propagation",
    "--ipsccp",
    "--nary-reassociate",
    "--instcombine",
    "--ipsccp",
    "--dce",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--instsimplify",
    "--licm",
    "--loop-simplifycfg",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--loweratomic",
          "--adce",
          "--aggressive-instcombine",
          "--coro-cleanup",
          "--float2int",
          "--instnamer",
          "--ipsccp",
          "--loop-unroll-and-jam",
          "--redundant-dbg-inst-elim",
          "--partial-inliner",
          "--ipconstprop",
          "--loop-guard-widening",
          "--coro-elide",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--loweratomic",
      "--adce",
      "--aggressive-instcombine",
      "--coro-cleanup",
      "--float2int",
      "--instnamer",
      "--ipsccp",
      "--loop-unroll-and-jam",
      "--redundant-dbg-inst-elim",
      "--partial-inliner",
      "--ipconstprop",
      "--loop-guard-widening",
      "--coro-elide",
      "--die"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}