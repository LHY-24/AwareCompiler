{
  "program_id": "github-v0_48519.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 25,
    "const32Bit": 32,
    "const64Bit": 25,
    "numConstZeroes": 30,
    "numConstOnes": 20,
    "UncondBranches": 11,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 12,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 18,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 30,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 17,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 1,
    "NumZExtInst": 15,
    "TotalBlocks": 22,
    "TotalInsts": 146,
    "TotalMemInst": 83,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 65
  },
  "baseline_oz_instcount": 146,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--instsimplify",
    "--nary-reassociate",
    "--gvn",
    "--adce",
    "--bdce",
    "--instcombine",
    "--prune-eh",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--post-inline-ee-instrument",
          "--constmerge",
          "--barrier",
          "--separate-const-offset-from-gep",
          "--aggressive-instcombine",
          "--mergeicmps",
          "--simplifycfg",
          "--libcalls-shrinkwrap",
          "--instnamer",
          "--licm",
          "--loop-instsimplify",
          "--die",
          "-loop-reduce",
          "--float2int",
          "--adce",
          "--loop-reroll",
          "--ee-instrument",
          "--ipconstprop",
          "--loop-sink",
          "--loweratomic",
          "--flattencfg",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--post-inline-ee-instrument",
      "--constmerge",
      "--barrier",
      "--separate-const-offset-from-gep",
      "--aggressive-instcombine",
      "--mergeicmps",
      "--simplifycfg",
      "--libcalls-shrinkwrap",
      "--instnamer",
      "--licm",
      "--loop-instsimplify",
      "--die",
      "-loop-reduce",
      "--float2int",
      "--adce",
      "--loop-reroll",
      "--ee-instrument",
      "--ipconstprop",
      "--loop-sink",
      "--loweratomic",
      "--flattencfg",
      "--instcombine"
    ],
    "performance_vs_Oz": "+4.8%"
  }
}