{
  "program_id": "github-v0_28214.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 55,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 0,
    "oneSuccessor": 55,
    "twoPred": 19,
    "twoPredOneSuc": 0,
    "twoEach": 17,
    "twoSuccessor": 19,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 89,
    "BeginPhi": 0,
    "BranchCount": 74,
    "returnInt": 5,
    "CriticalCount": 0,
    "NumEdges": 93,
    "const32Bit": 263,
    "const64Bit": 11,
    "numConstZeroes": 93,
    "numConstOnes": 115,
    "UncondBranches": 55,
    "binaryConstArg": 32,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 91,
    "NumAndInst": 0,
    "BlockMid": 18,
    "BlockLow": 71,
    "NumBitCastInst": 18,
    "NumBrInst": 74,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 103,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 307,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 33,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 127,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 89,
    "TotalInsts": 904,
    "TotalMemInst": 682,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 462
  },
  "baseline_oz_instcount": 904,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--gvn",
    "--memcpyopt",
    "--instsimplify",
    "--loop-instsimplify",
    "--dce",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--insert-gcov-profiling",
          "--deadargelim",
          "--loop-reroll",
          "--gvn-hoist",
          "--early-cse",
          "--alignment-from-assumptions",
          "--loop-unroll",
          "--irce",
          "--speculative-execution",
          "--globaldce",
          "--post-inline-ee-instrument",
          "--aggressive-instcombine",
          "--scalarizer",
          "--lcssa",
          "--inline",
          "--load-store-vectorizer",
          "--break-crit-edges",
          "--lowerinvoke",
          "--instsimplify",
          "--loop-predication",
          "--lower-constant-intrinsics",
          "--gvn",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--insert-gcov-profiling",
      "--deadargelim",
      "--loop-reroll",
      "--gvn-hoist",
      "--early-cse",
      "--alignment-from-assumptions",
      "--loop-unroll",
      "--irce",
      "--speculative-execution",
      "--globaldce",
      "--post-inline-ee-instrument",
      "--aggressive-instcombine",
      "--scalarizer",
      "--lcssa",
      "--inline",
      "--load-store-vectorizer",
      "--break-crit-edges",
      "--lowerinvoke",
      "--instsimplify",
      "--loop-predication",
      "--lower-constant-intrinsics",
      "--gvn",
      "--reassociate"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}