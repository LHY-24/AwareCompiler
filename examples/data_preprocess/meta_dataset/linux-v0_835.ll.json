{
  "program_id": "linux-v0_835.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 46,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 7,
    "oneSuccessor": 42,
    "twoPred": 13,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 21,
    "morePreds": 4,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 83,
    "BeginPhi": 4,
    "BranchCount": 63,
    "returnInt": 14,
    "CriticalCount": 12,
    "NumEdges": 84,
    "const32Bit": 230,
    "const64Bit": 24,
    "numConstZeroes": 115,
    "numConstOnes": 123,
    "UncondBranches": 42,
    "binaryConstArg": 34,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 74,
    "NumAndInst": 4,
    "BlockMid": 13,
    "BlockLow": 74,
    "NumBitCastInst": 20,
    "NumBrInst": 63,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 58,
    "NumICmpInst": 34,
    "NumLShrInst": 0,
    "NumLoadInst": 134,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 4,
    "NumRetInst": 24,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 87,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 28,
    "NumZExtInst": 18,
    "TotalBlocks": 87,
    "TotalInsts": 612,
    "TotalMemInst": 396,
    "TotalFuncs": 35,
    "ArgsPhi": 10,
    "testUnary": 263
  },
  "baseline_oz_instcount": 602,
  "knowledge_base_entry": [
    "--float2int",
    "--newgvn",
    "--memcpyopt",
    "--instcombine",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--inline",
    "--gvn-hoist",
    "--sccp",
    "--instsimplify",
    "--ipsccp",
    "--lower-expect",
    "--dse",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--called-value-propagation",
          "--early-cse",
          "--always-inline",
          "--jump-threading",
          "--globalsplit",
          "--tailcallelim",
          "--gvn",
          "--dce",
          "--argpromotion",
          "--globalopt",
          "--sccp",
          "--constprop",
          "--strip-nondebug",
          "--constmerge",
          "--die",
          "--ipsccp",
          "--mergeicmps",
          "--lowerinvoke",
          "--irce",
          "--loweratomic",
          "--loop-rotate",
          "--loop-interchange",
          "--div-rem-pairs",
          "--mergefunc",
          "--hotcoldsplit",
          "--slp-vectorizer",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--called-value-propagation",
      "--early-cse",
      "--always-inline",
      "--jump-threading",
      "--globalsplit",
      "--tailcallelim",
      "--gvn",
      "--dce",
      "--argpromotion",
      "--globalopt",
      "--sccp",
      "--constprop",
      "--strip-nondebug",
      "--constmerge",
      "--die",
      "--ipsccp",
      "--mergeicmps",
      "--lowerinvoke",
      "--irce",
      "--loweratomic",
      "--loop-rotate",
      "--loop-interchange",
      "--div-rem-pairs",
      "--mergefunc",
      "--hotcoldsplit",
      "--slp-vectorizer",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}