{
  "program_id": "github-v0_19605.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 57,
    "onePredOneSuc": 46,
    "onePredTwoSuc": 10,
    "oneSuccessor": 51,
    "twoPred": 17,
    "twoPredOneSuc": 4,
    "twoEach": 13,
    "twoSuccessor": 24,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 0,
    "BranchCount": 75,
    "returnInt": 12,
    "CriticalCount": 6,
    "NumEdges": 109,
    "const32Bit": 43,
    "const64Bit": 108,
    "numConstZeroes": 45,
    "numConstOnes": 60,
    "UncondBranches": 51,
    "binaryConstArg": 45,
    "NumAShrInst": 0,
    "NumAddInst": 21,
    "NumAllocaInst": 38,
    "NumAndInst": 3,
    "BlockMid": 16,
    "BlockLow": 65,
    "NumBitCastInst": 0,
    "NumBrInst": 75,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 42,
    "NumICmpInst": 24,
    "NumLShrInst": 5,
    "NumLoadInst": 221,
    "NumMulInst": 1,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 122,
    "NumSubInst": 17,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 16,
    "TotalBlocks": 81,
    "TotalInsts": 676,
    "TotalMemInst": 435,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 330
  },
  "baseline_oz_instcount": 676,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--instcombine",
    "--mldst-motion",
    "--dse",
    "--jump-threading",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--instnamer",
          "--alignment-from-assumptions",
          "--post-inline-ee-instrument",
          "--speculative-execution",
          "--load-store-vectorizer",
          "--loop-simplify",
          "--aggressive-instcombine",
          "--lower-expect",
          "--correlated-propagation",
          "--inject-tli-mappings",
          "--constprop",
          "--loop-unswitch",
          "--sancov",
          "--loop-interchange",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--instnamer",
      "--alignment-from-assumptions",
      "--post-inline-ee-instrument",
      "--speculative-execution",
      "--load-store-vectorizer",
      "--loop-simplify",
      "--aggressive-instcombine",
      "--lower-expect",
      "--correlated-propagation",
      "--inject-tli-mappings",
      "--constprop",
      "--loop-unswitch",
      "--sancov",
      "--loop-interchange",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}