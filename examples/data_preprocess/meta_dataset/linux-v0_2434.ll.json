{
  "program_id": "linux-v0_2434.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 58,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 11,
    "oneSuccessor": 53,
    "twoPred": 20,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 29,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 96,
    "BeginPhi": 0,
    "BranchCount": 82,
    "returnInt": 20,
    "CriticalCount": 14,
    "NumEdges": 111,
    "const32Bit": 187,
    "const64Bit": 9,
    "numConstZeroes": 76,
    "numConstOnes": 80,
    "UncondBranches": 53,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 72,
    "NumAndInst": 3,
    "BlockMid": 14,
    "BlockLow": 82,
    "NumBitCastInst": 10,
    "NumBrInst": 82,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 29,
    "NumLShrInst": 3,
    "NumLoadInst": 165,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 101,
    "NumSubInst": 3,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 96,
    "TotalInsts": 596,
    "TotalMemInst": 407,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 279
  },
  "baseline_oz_instcount": 598,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--dse",
    "--early-cse",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--reassociate",
    "--correlated-propagation",
    "--mergefunc",
    "--sroa",
    "--newgvn",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--globaldce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--loop-versioning",
          "--infer-address-spaces",
          "--lower-guard-intrinsic",
          "--simple-loop-unswitch",
          "--inline",
          "--loop-data-prefetch",
          "--deadargelim",
          "--sroa",
          "--strip-dead-prototypes",
          "--loop-vectorize",
          "--indvars",
          "--libcalls-shrinkwrap",
          "--early-cse-memssa",
          "--jump-threading",
          "--loop-sink",
          "--adce",
          "--loop-interchange",
          "--elim-avail-extern",
          "--mergereturn",
          "--mergefunc",
          "--lower-matrix-intrinsics",
          "--post-inline-ee-instrument",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--loop-versioning",
      "--infer-address-spaces",
      "--lower-guard-intrinsic",
      "--simple-loop-unswitch",
      "--inline",
      "--loop-data-prefetch",
      "--deadargelim",
      "--sroa",
      "--strip-dead-prototypes",
      "--loop-vectorize",
      "--indvars",
      "--libcalls-shrinkwrap",
      "--early-cse-memssa",
      "--jump-threading",
      "--loop-sink",
      "--adce",
      "--loop-interchange",
      "--elim-avail-extern",
      "--mergereturn",
      "--mergefunc",
      "--lower-matrix-intrinsics",
      "--post-inline-ee-instrument",
      "--instcombine"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}