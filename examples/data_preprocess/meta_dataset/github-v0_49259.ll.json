{
  "program_id": "github-v0_49259.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 32,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 11,
    "oneSuccessor": 27,
    "twoPred": 12,
    "twoPredOneSuc": 5,
    "twoEach": 6,
    "twoSuccessor": 20,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 3,
    "BranchCount": 47,
    "returnInt": 14,
    "CriticalCount": 12,
    "NumEdges": 67,
    "const32Bit": 50,
    "const64Bit": 2,
    "numConstZeroes": 17,
    "numConstOnes": 14,
    "UncondBranches": 27,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 12,
    "NumAndInst": 7,
    "BlockMid": 1,
    "BlockLow": 50,
    "NumBitCastInst": 0,
    "NumBrInst": 47,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 63,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 4,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 32,
    "NumSubInst": 3,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 51,
    "TotalInsts": 245,
    "TotalMemInst": 138,
    "TotalFuncs": 7,
    "ArgsPhi": 7,
    "testUnary": 92
  },
  "baseline_oz_instcount": 247,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--gvn",
    "--bdce",
    "--reassociate",
    "--lower-expect",
    "--jump-threading",
    "--mem2reg",
    "--dse",
    "--adce",
    "--simplifycfg",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "--globalopt",
          "--inferattrs",
          "--consthoist",
          "--memcpyopt",
          "--add-discriminators",
          "--hotcoldsplit",
          "--mergeicmps",
          "--load-store-vectorizer",
          "--gvn-hoist",
          "--mldst-motion",
          "--instnamer",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "--globalopt",
      "--inferattrs",
      "--consthoist",
      "--memcpyopt",
      "--add-discriminators",
      "--hotcoldsplit",
      "--mergeicmps",
      "--load-store-vectorizer",
      "--gvn-hoist",
      "--mldst-motion",
      "--instnamer",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}