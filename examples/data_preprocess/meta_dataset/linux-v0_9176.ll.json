{
  "program_id": "linux-v0_9176.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 1,
    "oneSuccessor": 1,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 3,
    "CriticalCount": 2,
    "NumEdges": 5,
    "const32Bit": 127,
    "const64Bit": 7,
    "numConstZeroes": 22,
    "numConstOnes": 82,
    "UncondBranches": 1,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 77,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 32,
    "NumBitCastInst": 9,
    "NumBrInst": 3,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 30,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 82,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 1,
    "NumZExtInst": 3,
    "TotalBlocks": 33,
    "TotalInsts": 269,
    "TotalMemInst": 214,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 118
  },
  "baseline_oz_instcount": 269,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--ipsccp",
    "--adce",
    "--die",
    "--jump-threading",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--lower-expect",
    "--mergefunc",
    "--reassociate",
    "--elim-avail-extern",
    "--dce",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "-loop-reduce",
    "--jump-threading",
    "--newgvn",
    "--loop-fusion",
    "--simplifycfg",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rewrite-statepoints-for-gc",
          "--coro-early",
          "--always-inline",
          "--strip",
          "--canonicalize-aliases",
          "--aggressive-instcombine",
          "--tailcallelim",
          "--redundant-dbg-inst-elim",
          "--jump-threading",
          "--loop-unroll",
          "--consthoist",
          "--globalopt",
          "--mergefunc",
          "--strip-debug-declare",
          "--loop-guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rewrite-statepoints-for-gc",
      "--coro-early",
      "--always-inline",
      "--strip",
      "--canonicalize-aliases",
      "--aggressive-instcombine",
      "--tailcallelim",
      "--redundant-dbg-inst-elim",
      "--jump-threading",
      "--loop-unroll",
      "--consthoist",
      "--globalopt",
      "--mergefunc",
      "--strip-debug-declare",
      "--loop-guard-widening"
    ],
    "performance_vs_Oz": "+7.8%"
  }
}