{
  "program_id": "github-v0_39270.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 54,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 23,
    "oneSuccessor": 46,
    "twoPred": 23,
    "twoPredOneSuc": 12,
    "twoEach": 9,
    "twoSuccessor": 34,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 84,
    "BeginPhi": 2,
    "BranchCount": 80,
    "returnInt": 10,
    "CriticalCount": 19,
    "NumEdges": 114,
    "const32Bit": 144,
    "const64Bit": 3,
    "numConstZeroes": 72,
    "numConstOnes": 44,
    "UncondBranches": 46,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 29,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 81,
    "NumBitCastInst": 7,
    "NumBrInst": 80,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 49,
    "NumICmpInst": 34,
    "NumLShrInst": 0,
    "NumLoadInst": 156,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 6,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 66,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 86,
    "TotalInsts": 459,
    "TotalMemInst": 330,
    "TotalFuncs": 13,
    "ArgsPhi": 4,
    "testUnary": 192
  },
  "baseline_oz_instcount": 463,
  "knowledge_base_entry": [
    "--inline",
    "--mergefunc",
    "--newgvn",
    "--newgvn",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--sroa",
    "--slp-vectorizer",
    "--reassociate",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instcombine",
          "--div-rem-pairs",
          "--cross-dso-cfi",
          "--globalsplit",
          "--ee-instrument",
          "--loweratomic",
          "--tailcallelim",
          "--guard-widening",
          "--callsite-splitting",
          "--inferattrs",
          "--lowerinvoke",
          "--globalopt",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instcombine",
      "--div-rem-pairs",
      "--cross-dso-cfi",
      "--globalsplit",
      "--ee-instrument",
      "--loweratomic",
      "--tailcallelim",
      "--guard-widening",
      "--callsite-splitting",
      "--inferattrs",
      "--lowerinvoke",
      "--globalopt",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}