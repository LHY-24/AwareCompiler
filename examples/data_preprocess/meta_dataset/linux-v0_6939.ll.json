{
  "program_id": "linux-v0_6939.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 22,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 10,
    "oneSuccessor": 18,
    "twoPred": 6,
    "twoPredOneSuc": 5,
    "twoEach": 1,
    "twoSuccessor": 14,
    "morePreds": 4,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 2,
    "BranchCount": 32,
    "returnInt": 3,
    "CriticalCount": 6,
    "NumEdges": 46,
    "const32Bit": 72,
    "const64Bit": 3,
    "numConstZeroes": 24,
    "numConstOnes": 30,
    "UncondBranches": 18,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 23,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 34,
    "NumBitCastInst": 4,
    "NumBrInst": 32,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 17,
    "NumLShrInst": 2,
    "NumLoadInst": 75,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 6,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 28,
    "NumSubInst": 4,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 21,
    "TotalBlocks": 38,
    "TotalInsts": 262,
    "TotalMemInst": 154,
    "TotalFuncs": 9,
    "ArgsPhi": 4,
    "testUnary": 129
  },
  "baseline_oz_instcount": 262,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--licm",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--inline",
          "--loop-instsimplify",
          "--scalarizer",
          "--loop-guard-widening",
          "--aggressive-instcombine",
          "--loop-versioning-licm",
          "--alignment-from-assumptions",
          "--indvars",
          "--loop-interchange",
          "--strip-debug-declare",
          "--loop-distribute",
          "-loop-reduce",
          "--early-cse",
          "--attributor",
          "--slp-vectorizer",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--inline",
      "--loop-instsimplify",
      "--scalarizer",
      "--loop-guard-widening",
      "--aggressive-instcombine",
      "--loop-versioning-licm",
      "--alignment-from-assumptions",
      "--indvars",
      "--loop-interchange",
      "--strip-debug-declare",
      "--loop-distribute",
      "-loop-reduce",
      "--early-cse",
      "--attributor",
      "--slp-vectorizer",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}