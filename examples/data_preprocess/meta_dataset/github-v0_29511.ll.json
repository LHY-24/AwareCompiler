{
  "program_id": "github-v0_29511.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 4,
    "oneSuccessor": 14,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 30,
    "const32Bit": 32,
    "const64Bit": 42,
    "numConstZeroes": 43,
    "numConstOnes": 24,
    "UncondBranches": 14,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 22,
    "NumBitCastInst": 8,
    "NumBrInst": 22,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 47,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 26,
    "TotalInsts": 191,
    "TotalMemInst": 124,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 85
  },
  "baseline_oz_instcount": 191,
  "knowledge_base_entry": [
    "--mergefunc",
    "--reassociate",
    "--simplifycfg",
    "--slp-vectorizer",
    "--licm",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--bdce",
    "--loop-instsimplify",
    "--jump-threading",
    "--loop-reroll",
    "--indvars",
    "--early-cse-memssa",
    "--sccp",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--aggressive-instcombine",
          "--separate-const-offset-from-gep",
          "--lower-guard-intrinsic",
          "--argpromotion",
          "--load-store-vectorizer",
          "--slp-vectorizer",
          "--loop-reroll",
          "--simple-loop-unswitch",
          "--reassociate",
          "--indvars",
          "--gvn",
          "--lower-expect"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--aggressive-instcombine",
      "--separate-const-offset-from-gep",
      "--lower-guard-intrinsic",
      "--argpromotion",
      "--load-store-vectorizer",
      "--slp-vectorizer",
      "--loop-reroll",
      "--simple-loop-unswitch",
      "--reassociate",
      "--indvars",
      "--gvn",
      "--lower-expect"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}