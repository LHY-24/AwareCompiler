{
  "program_id": "github-v0_24366.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 6,
    "returnInt": 4,
    "CriticalCount": 3,
    "NumEdges": 9,
    "const32Bit": 22,
    "const64Bit": 0,
    "numConstZeroes": 1,
    "numConstOnes": 18,
    "UncondBranches": 3,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 17,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 14,
    "NumBitCastInst": 0,
    "NumBrInst": 6,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 14,
    "TotalInsts": 77,
    "TotalMemInst": 55,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 36
  },
  "baseline_oz_instcount": 74,
  "knowledge_base_entry": [
    "--mergefunc",
    "--mergefunc",
    "--mergefunc",
    "--ipsccp",
    "--gvn-hoist",
    "--dce",
    "--slp-vectorizer",
    "--die",
    "--elim-avail-extern",
    "--globalopt",
    "--flattencfg",
    "--mem2reg",
    "--memcpyopt",
    "--licm",
    "--prune-eh",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--loop-fusion",
    "--gvn",
    "--loop-simplifycfg",
    "--reassociate",
    "--sccp",
    "--dse",
    "--jump-threading",
    "--prune-eh",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--loop-guard-widening",
          "--early-cse-memssa",
          "--libcalls-shrinkwrap",
          "--licm",
          "--coro-split",
          "--bdce",
          "--mem2reg",
          "--lower-matrix-intrinsics",
          "--die",
          "--early-cse",
          "--lowerswitch",
          "--globalopt",
          "--rewrite-statepoints-for-gc",
          "--indvars",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--loop-guard-widening",
      "--early-cse-memssa",
      "--libcalls-shrinkwrap",
      "--licm",
      "--coro-split",
      "--bdce",
      "--mem2reg",
      "--lower-matrix-intrinsics",
      "--die",
      "--early-cse",
      "--lowerswitch",
      "--globalopt",
      "--rewrite-statepoints-for-gc",
      "--indvars",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+5.4%"
  }
}