{
  "program_id": "github-v0_4555.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 24,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 5,
    "oneSuccessor": 22,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 14,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 1,
    "BranchCount": 36,
    "returnInt": 8,
    "CriticalCount": 6,
    "NumEdges": 50,
    "const32Bit": 58,
    "const64Bit": 70,
    "numConstZeroes": 66,
    "numConstOnes": 27,
    "UncondBranches": 22,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 19,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 45,
    "NumBitCastInst": 9,
    "NumBrInst": 36,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 47,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 75,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 13,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 36,
    "TotalBlocks": 49,
    "TotalInsts": 314,
    "TotalMemInst": 202,
    "TotalFuncs": 24,
    "ArgsPhi": 2,
    "testUnary": 142
  },
  "baseline_oz_instcount": 315,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse-memssa",
    "--instcombine",
    "--prune-eh",
    "--loop-simplifycfg",
    "--dce",
    "--correlated-propagation",
    "--globalopt",
    "--loop-instsimplify",
    "--jump-threading",
    "--loop-rotate",
    "--lower-expect",
    "--newgvn",
    "--aggressive-instcombine",
    "--instsimplify",
    "--die",
    "--lower-constant-intrinsics",
    "--gvn",
    "--simplifycfg",
    "--dse",
    "--newgvn",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--licm",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--gvn",
          "--loweratomic",
          "--sancov",
          "--rpo-functionattrs",
          "--loop-reroll",
          "--irce",
          "--partial-inliner",
          "--loop-unroll",
          "--mem2reg",
          "--dce",
          "--consthoist",
          "--ipconstprop",
          "--globalopt",
          "--post-inline-ee-instrument",
          "--reassociate",
          "--inferattrs",
          "--aggressive-instcombine",
          "--loop-versioning-licm",
          "--die",
          "--called-value-propagation",
          "--instcombine",
          "--hotcoldsplit",
          "--dse",
          "--constmerge",
          "--loop-rotate",
          "--libcalls-shrinkwrap"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--gvn",
      "--loweratomic",
      "--sancov",
      "--rpo-functionattrs",
      "--loop-reroll",
      "--irce",
      "--partial-inliner",
      "--loop-unroll",
      "--mem2reg",
      "--dce",
      "--consthoist",
      "--ipconstprop",
      "--globalopt",
      "--post-inline-ee-instrument",
      "--reassociate",
      "--inferattrs",
      "--aggressive-instcombine",
      "--loop-versioning-licm",
      "--die",
      "--called-value-propagation",
      "--instcombine",
      "--hotcoldsplit",
      "--dse",
      "--constmerge",
      "--loop-rotate",
      "--libcalls-shrinkwrap"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}