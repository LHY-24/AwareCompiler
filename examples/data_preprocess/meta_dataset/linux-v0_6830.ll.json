{
  "program_id": "linux-v0_6830.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 0,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 16,
    "const32Bit": 57,
    "const64Bit": 0,
    "numConstZeroes": 16,
    "numConstOnes": 18,
    "UncondBranches": 8,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 5,
    "NumAndInst": 6,
    "BlockMid": 0,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 12,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 17,
    "TotalInsts": 109,
    "TotalMemInst": 72,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 47
  },
  "baseline_oz_instcount": 109,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--sccp",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--instcombine",
    "--simplifycfg",
    "--mem2reg",
    "--die",
    "--load-store-vectorizer",
    "--reassociate",
    "--die",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--instcombine",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--instcombine",
    "--simplifycfg",
    "--mem2reg",
    "--die",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--gvn",
    "--lower-expect",
    "--correlated-propagation",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--tailcallelim",
          "--irce",
          "--instnamer",
          "--strip",
          "--dce",
          "--functionattrs",
          "--lower-matrix-intrinsics",
          "--argpromotion",
          "--loop-unroll",
          "--mergeicmps",
          "--called-value-propagation",
          "--constmerge",
          "--alignment-from-assumptions",
          "--pgo-memop-opt",
          "--lowerswitch",
          "--callsite-splitting",
          "--correlated-propagation",
          "--aggressive-instcombine",
          "--memcpyopt",
          "--guard-widening",
          "--coro-elide",
          "--loop-unroll-and-jam",
          "--deadargelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--tailcallelim",
      "--irce",
      "--instnamer",
      "--strip",
      "--dce",
      "--functionattrs",
      "--lower-matrix-intrinsics",
      "--argpromotion",
      "--loop-unroll",
      "--mergeicmps",
      "--called-value-propagation",
      "--constmerge",
      "--alignment-from-assumptions",
      "--pgo-memop-opt",
      "--lowerswitch",
      "--callsite-splitting",
      "--correlated-propagation",
      "--aggressive-instcombine",
      "--memcpyopt",
      "--guard-widening",
      "--coro-elide",
      "--loop-unroll-and-jam",
      "--deadargelim"
    ],
    "performance_vs_Oz": "+5.5%"
  }
}