{
  "program_id": "linux-v0_1136.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 57,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 14,
    "oneSuccessor": 48,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 22,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 1,
    "BranchCount": 70,
    "returnInt": 32,
    "CriticalCount": 6,
    "NumEdges": 92,
    "const32Bit": 287,
    "const64Bit": 25,
    "numConstZeroes": 111,
    "numConstOnes": 159,
    "UncondBranches": 48,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 128,
    "NumAndInst": 3,
    "BlockMid": 17,
    "BlockLow": 78,
    "NumBitCastInst": 20,
    "NumBrInst": 70,
    "NumCallInst": 59,
    "NumGetElementPtrInst": 65,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 208,
    "NumMulInst": 5,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 25,
    "NumSExtInst": 11,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 142,
    "NumSubInst": 4,
    "NumTruncInst": 16,
    "NumXorInst": 2,
    "NumZExtInst": 26,
    "TotalBlocks": 95,
    "TotalInsts": 840,
    "TotalMemInst": 602,
    "TotalFuncs": 45,
    "ArgsPhi": 2,
    "testUnary": 418
  },
  "baseline_oz_instcount": 840,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--instsimplify",
    "--gvn",
    "--slp-vectorizer",
    "--mldst-motion",
    "--sroa",
    "--newgvn",
    "--adce",
    "--lower-constant-intrinsics",
    "--dse",
    "--early-cse",
    "--simplifycfg",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-instsimplify",
          "--strip-dead-prototypes",
          "--loop-rotate",
          "--strip-nondebug",
          "--lower-constant-intrinsics",
          "--float2int",
          "--elim-avail-extern",
          "--mergereturn",
          "--globalopt",
          "--libcalls-shrinkwrap",
          "--bdce",
          "--loop-interchange",
          "--correlated-propagation",
          "--functionattrs",
          "--infer-address-spaces",
          "--guard-widening",
          "--loop-vectorize",
          "--aggressive-instcombine",
          "--reassociate",
          "--forceattrs",
          "--redundant-dbg-inst-elim",
          "--lowerinvoke",
          "--constmerge",
          "--gvn",
          "--lower-guard-intrinsic",
          "--name-anon-globals",
          "--loop-versioning-licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-instsimplify",
      "--strip-dead-prototypes",
      "--loop-rotate",
      "--strip-nondebug",
      "--lower-constant-intrinsics",
      "--float2int",
      "--elim-avail-extern",
      "--mergereturn",
      "--globalopt",
      "--libcalls-shrinkwrap",
      "--bdce",
      "--loop-interchange",
      "--correlated-propagation",
      "--functionattrs",
      "--infer-address-spaces",
      "--guard-widening",
      "--loop-vectorize",
      "--aggressive-instcombine",
      "--reassociate",
      "--forceattrs",
      "--redundant-dbg-inst-elim",
      "--lowerinvoke",
      "--constmerge",
      "--gvn",
      "--lower-guard-intrinsic",
      "--name-anon-globals",
      "--loop-versioning-licm"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}