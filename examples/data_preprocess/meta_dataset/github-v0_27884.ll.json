{
  "program_id": "github-v0_27884.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 9,
    "oneSuccessor": 20,
    "twoPred": 10,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 14,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 39,
    "CriticalCount": 6,
    "NumEdges": 48,
    "const32Bit": 132,
    "const64Bit": 23,
    "numConstZeroes": 82,
    "numConstOnes": 61,
    "UncondBranches": 20,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 51,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 37,
    "NumBitCastInst": 5,
    "NumBrInst": 34,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 75,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 48,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 42,
    "TotalInsts": 334,
    "TotalMemInst": 259,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 140
  },
  "baseline_oz_instcount": 335,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--early-cse",
    "--jump-threading",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--cross-dso-cfi",
          "--sroa",
          "--lower-constant-intrinsics",
          "--argpromotion",
          "--gvn",
          "--forceattrs",
          "--ipconstprop",
          "--functionattrs",
          "--always-inline",
          "--flattencfg",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--cross-dso-cfi",
      "--sroa",
      "--lower-constant-intrinsics",
      "--argpromotion",
      "--gvn",
      "--forceattrs",
      "--ipconstprop",
      "--functionattrs",
      "--always-inline",
      "--flattencfg",
      "--globalopt"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}