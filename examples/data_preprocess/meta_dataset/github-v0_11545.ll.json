{
  "program_id": "github-v0_11545.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 30,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 16,
    "oneSuccessor": 27,
    "twoPred": 18,
    "twoPredOneSuc": 11,
    "twoEach": 7,
    "twoSuccessor": 24,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 52,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 0,
    "CriticalCount": 21,
    "NumEdges": 75,
    "const32Bit": 69,
    "const64Bit": 2,
    "numConstZeroes": 33,
    "numConstOnes": 22,
    "UncondBranches": 27,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 6,
    "NumAndInst": 2,
    "BlockMid": 0,
    "BlockLow": 52,
    "NumBitCastInst": 4,
    "NumBrInst": 51,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 71,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 52,
    "TotalInsts": 222,
    "TotalMemInst": 127,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 85
  },
  "baseline_oz_instcount": 224,
  "knowledge_base_entry": [
    "--slsr",
    "--load-store-vectorizer",
    "--dce",
    "--newgvn",
    "--instcombine",
    "--mergefunc",
    "--flattencfg",
    "--mem2reg",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--loop-versioning",
          "--sancov",
          "--gvn",
          "--lowerswitch",
          "--canonicalize-aliases",
          "--strip-nondebug",
          "--lower-expect",
          "--sccp",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--loop-versioning",
      "--sancov",
      "--gvn",
      "--lowerswitch",
      "--canonicalize-aliases",
      "--strip-nondebug",
      "--lower-expect",
      "--sccp",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}