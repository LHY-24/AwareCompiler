{
  "program_id": "linux-v0_6709.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 11,
    "oneSuccessor": 35,
    "twoPred": 23,
    "twoPredOneSuc": 4,
    "twoEach": 11,
    "twoSuccessor": 24,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 79,
    "BeginPhi": 0,
    "BranchCount": 59,
    "returnInt": 9,
    "CriticalCount": 13,
    "NumEdges": 83,
    "const32Bit": 85,
    "const64Bit": 35,
    "numConstZeroes": 29,
    "numConstOnes": 36,
    "UncondBranches": 35,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 27,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 75,
    "NumBitCastInst": 3,
    "NumBrInst": 59,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 90,
    "NumMulInst": 5,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 21,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 37,
    "NumSubInst": 4,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 79,
    "TotalInsts": 366,
    "TotalMemInst": 212,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 149
  },
  "baseline_oz_instcount": 352,
  "knowledge_base_entry": [
    "--irce",
    "--gvn-hoist",
    "--ipsccp",
    "--early-cse",
    "--aggressive-instcombine",
    "--newgvn",
    "--early-cse-memssa",
    "--mem2reg",
    "--memcpyopt",
    "--mem2reg",
    "--gvn",
    "--load-store-vectorizer",
    "--instcombine",
    "--mldst-motion",
    "--instsimplify",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--aggressive-instcombine",
          "--lcssa",
          "--lower-matrix-intrinsics",
          "--float2int",
          "--alignment-from-assumptions",
          "--tailcallelim",
          "--constprop",
          "--inferattrs",
          "--simple-loop-unswitch",
          "--adce",
          "--consthoist",
          "--sroa",
          "--instnamer",
          "--gvn",
          "--globalopt",
          "--speculative-execution",
          "--deadargelim",
          "--rewrite-statepoints-for-gc",
          "--indvars",
          "--lower-guard-intrinsic",
          "--forceattrs",
          "--redundant-dbg-inst-elim",
          "--lowerswitch",
          "--flattencfg",
          "--early-cse",
          "--lower-constant-intrinsics",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--aggressive-instcombine",
      "--lcssa",
      "--lower-matrix-intrinsics",
      "--float2int",
      "--alignment-from-assumptions",
      "--tailcallelim",
      "--constprop",
      "--inferattrs",
      "--simple-loop-unswitch",
      "--adce",
      "--consthoist",
      "--sroa",
      "--instnamer",
      "--gvn",
      "--globalopt",
      "--speculative-execution",
      "--deadargelim",
      "--rewrite-statepoints-for-gc",
      "--indvars",
      "--lower-guard-intrinsic",
      "--forceattrs",
      "--redundant-dbg-inst-elim",
      "--lowerswitch",
      "--flattencfg",
      "--early-cse",
      "--lower-constant-intrinsics",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}