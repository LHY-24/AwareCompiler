{
  "program_id": "poj104-v1_79_6193.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 14,
    "const32Bit": 18,
    "const64Bit": 17,
    "numConstZeroes": 9,
    "numConstOnes": 12,
    "UncondBranches": 8,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 13,
    "NumBitCastInst": 12,
    "NumBrInst": 11,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 19,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 15,
    "TotalInsts": 101,
    "TotalMemInst": 61,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 45
  },
  "baseline_oz_instcount": 47,
  "knowledge_base_entry": [
    "--mem2reg",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--indvars",
    "--loop-reroll",
    "--indvars",
    "--loop-reroll",
    "--instsimplify",
    "--mergefunc",
    "--early-cse-memssa",
    "--jump-threading",
    "--licm",
    "--lower-expect",
    "--loop-simplifycfg",
    "--flattencfg",
    "--simplifycfg",
    "--memcpyopt",
    "--newgvn",
    "--mem2reg",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inject-tli-mappings",
          "--lower-expect",
          "-loop-reduce",
          "--lower-guard-intrinsic",
          "--loop-data-prefetch",
          "--mem2reg",
          "--mergefunc",
          "--hotcoldsplit",
          "--flattencfg",
          "--loop-unroll",
          "--speculative-execution",
          "--libcalls-shrinkwrap",
          "--add-discriminators",
          "--adce",
          "--lower-matrix-intrinsics",
          "--loop-predication",
          "--simplifycfg",
          "--prune-eh",
          "--ipsccp",
          "--loop-interchange",
          "--load-store-vectorizer",
          "--gvn-hoist",
          "--float2int",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+10.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inject-tli-mappings",
      "--lower-expect",
      "-loop-reduce",
      "--lower-guard-intrinsic",
      "--loop-data-prefetch",
      "--mem2reg",
      "--mergefunc",
      "--hotcoldsplit",
      "--flattencfg",
      "--loop-unroll",
      "--speculative-execution",
      "--libcalls-shrinkwrap",
      "--add-discriminators",
      "--adce",
      "--lower-matrix-intrinsics",
      "--loop-predication",
      "--simplifycfg",
      "--prune-eh",
      "--ipsccp",
      "--loop-interchange",
      "--load-store-vectorizer",
      "--gvn-hoist",
      "--float2int",
      "--newgvn"
    ],
    "performance_vs_Oz": "+10.6%"
  }
}