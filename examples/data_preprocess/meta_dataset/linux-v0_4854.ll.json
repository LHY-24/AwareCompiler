{
  "program_id": "linux-v0_4854.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 39,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 9,
    "oneSuccessor": 39,
    "twoPred": 23,
    "twoPredOneSuc": 9,
    "twoEach": 6,
    "twoSuccessor": 23,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 74,
    "BeginPhi": 0,
    "BranchCount": 61,
    "returnInt": 13,
    "CriticalCount": 9,
    "NumEdges": 85,
    "const32Bit": 225,
    "const64Bit": 25,
    "numConstZeroes": 152,
    "numConstOnes": 96,
    "UncondBranches": 39,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 63,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 65,
    "NumBitCastInst": 8,
    "NumBrInst": 61,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 78,
    "NumICmpInst": 30,
    "NumLShrInst": 0,
    "NumLoadInst": 122,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 71,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 16,
    "NumZExtInst": 10,
    "TotalBlocks": 74,
    "TotalInsts": 527,
    "TotalMemInst": 378,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 211
  },
  "baseline_oz_instcount": 528,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--loop-reroll",
    "-loop-reduce",
    "--jump-threading",
    "--dce",
    "--dse",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--inject-tli-mappings",
          "--dce",
          "--deadargelim",
          "--separate-const-offset-from-gep",
          "--ipconstprop",
          "--always-inline",
          "--bdce",
          "--tailcallelim",
          "--loop-simplifycfg",
          "--partially-inline-libcalls",
          "--elim-avail-extern",
          "--mldst-motion",
          "--cross-dso-cfi",
          "--libcalls-shrinkwrap",
          "--lower-widenable-condition",
          "--name-anon-globals",
          "--attributor",
          "--flattencfg",
          "--redundant-dbg-inst-elim",
          "--add-discriminators",
          "--indvars",
          "--insert-gcov-profiling",
          "--loop-instsimplify",
          "--loop-unroll-and-jam",
          "--newgvn",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--inject-tli-mappings",
      "--dce",
      "--deadargelim",
      "--separate-const-offset-from-gep",
      "--ipconstprop",
      "--always-inline",
      "--bdce",
      "--tailcallelim",
      "--loop-simplifycfg",
      "--partially-inline-libcalls",
      "--elim-avail-extern",
      "--mldst-motion",
      "--cross-dso-cfi",
      "--libcalls-shrinkwrap",
      "--lower-widenable-condition",
      "--name-anon-globals",
      "--attributor",
      "--flattencfg",
      "--redundant-dbg-inst-elim",
      "--add-discriminators",
      "--indvars",
      "--insert-gcov-profiling",
      "--loop-instsimplify",
      "--loop-unroll-and-jam",
      "--newgvn",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}