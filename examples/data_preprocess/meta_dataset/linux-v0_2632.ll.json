{
  "program_id": "linux-v0_2632.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 46,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 15,
    "oneSuccessor": 36,
    "twoPred": 9,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 23,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 86,
    "BeginPhi": 0,
    "BranchCount": 59,
    "returnInt": 32,
    "CriticalCount": 8,
    "NumEdges": 86,
    "const32Bit": 240,
    "const64Bit": 33,
    "numConstZeroes": 121,
    "numConstOnes": 95,
    "UncondBranches": 36,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 67,
    "NumAndInst": 9,
    "BlockMid": 11,
    "BlockLow": 75,
    "NumBitCastInst": 20,
    "NumBrInst": 59,
    "NumCallInst": 81,
    "NumGetElementPtrInst": 71,
    "NumICmpInst": 22,
    "NumLShrInst": 2,
    "NumLoadInst": 208,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 26,
    "NumSExtInst": 3,
    "NumSelectInst": 1,
    "NumShlInst": 3,
    "NumStoreInst": 110,
    "NumSubInst": 0,
    "NumTruncInst": 13,
    "NumXorInst": 6,
    "NumZExtInst": 11,
    "TotalBlocks": 86,
    "TotalInsts": 723,
    "TotalMemInst": 537,
    "TotalFuncs": 46,
    "ArgsPhi": 0,
    "testUnary": 327
  },
  "baseline_oz_instcount": 723,
  "knowledge_base_entry": [
    "--loop-rotate",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--instcombine",
    "--simplifycfg",
    "--gvn-hoist",
    "--globalopt",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--bdce",
    "--jump-threading",
    "--globalopt",
    "--globaldce",
    "--ipsccp",
    "--gvn",
    "--dse",
    "--adce",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--sccp",
          "--separate-const-offset-from-gep",
          "-loop-reduce",
          "--loop-versioning-licm",
          "--mergefunc",
          "--deadargelim",
          "--insert-gcov-profiling",
          "--aggressive-instcombine",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--sccp",
      "--separate-const-offset-from-gep",
      "-loop-reduce",
      "--loop-versioning-licm",
      "--mergefunc",
      "--deadargelim",
      "--insert-gcov-profiling",
      "--aggressive-instcombine",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}