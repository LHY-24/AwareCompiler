{
  "program_id": "github-v0_31525.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 5,
    "onePred": 8,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 3,
    "oneSuccessor": 5,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 6,
    "twoSuccessor": 12,
    "morePreds": 3,
    "BB03Phi": 7,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 7,
    "BranchCount": 17,
    "returnInt": 1,
    "CriticalCount": 16,
    "NumEdges": 29,
    "const32Bit": 30,
    "const64Bit": 10,
    "numConstZeroes": 21,
    "numConstOnes": 7,
    "UncondBranches": 5,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 1,
    "NumAndInst": 2,
    "BlockMid": 3,
    "BlockLow": 15,
    "NumBitCastInst": 11,
    "NumBrInst": 17,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 11,
    "NumMulInst": 5,
    "NumOrInst": 4,
    "NumPHIInst": 13,
    "NumRetInst": 1,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 6,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 18,
    "TotalInsts": 142,
    "TotalMemInst": 41,
    "TotalFuncs": 5,
    "ArgsPhi": 27,
    "testUnary": 41
  },
  "baseline_oz_instcount": 141,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--ipsccp",
    "--loop-instsimplify",
    "--globalopt",
    "--ipsccp",
    "--loop-instsimplify",
    "--simplifycfg",
    "--globalopt",
    "--loop-instsimplify",
    "--globalopt",
    "--flattencfg",
    "--loop-simplifycfg",
    "--slsr",
    "--early-cse-memssa",
    "--instsimplify",
    "--licm",
    "--slp-vectorizer",
    "--newgvn",
    "--loop-rotate",
    "--licm",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--licm",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--dce",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--dse",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--slp-vectorizer",
    "--die",
    "--gvn-hoist",
    "--sccp",
    "--gvn",
    "--aggressive-instcombine",
    "--instcombine",
    "--elim-avail-extern",
    "--instcombine",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--load-store-vectorizer",
          "--loop-predication",
          "--slp-vectorizer",
          "--coro-elide",
          "--early-cse",
          "--libcalls-shrinkwrap",
          "--instcombine",
          "--mergefunc",
          "--functionattrs",
          "--canonicalize-aliases"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+17.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--load-store-vectorizer",
      "--loop-predication",
      "--slp-vectorizer",
      "--coro-elide",
      "--early-cse",
      "--libcalls-shrinkwrap",
      "--instcombine",
      "--mergefunc",
      "--functionattrs",
      "--canonicalize-aliases"
    ],
    "performance_vs_Oz": "+17.7%"
  }
}