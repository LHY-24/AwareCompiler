{
  "program_id": "github-v0_8017.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 34,
    "const64Bit": 27,
    "numConstZeroes": 28,
    "numConstOnes": 24,
    "UncondBranches": 11,
    "binaryConstArg": 14,
    "NumAShrInst": 2,
    "NumAddInst": 5,
    "NumAllocaInst": 12,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 1,
    "NumZExtInst": 13,
    "TotalBlocks": 21,
    "TotalInsts": 150,
    "TotalMemInst": 80,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 66
  },
  "baseline_oz_instcount": 150,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--early-cse",
    "--gvn-hoist",
    "--mergefunc",
    "--die",
    "--early-cse",
    "--sroa",
    "--mldst-motion",
    "--simplifycfg",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--dse",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-guard-intrinsic",
          "--licm",
          "--loop-unswitch",
          "--rpo-functionattrs",
          "--tailcallelim",
          "--dce",
          "--mergefunc",
          "--speculative-execution",
          "--lower-widenable-condition",
          "--simplifycfg",
          "--div-rem-pairs",
          "--pgo-memop-opt",
          "--argpromotion",
          "--aggressive-instcombine",
          "--early-cse",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-guard-intrinsic",
      "--licm",
      "--loop-unswitch",
      "--rpo-functionattrs",
      "--tailcallelim",
      "--dce",
      "--mergefunc",
      "--speculative-execution",
      "--lower-widenable-condition",
      "--simplifycfg",
      "--div-rem-pairs",
      "--pgo-memop-opt",
      "--argpromotion",
      "--aggressive-instcombine",
      "--early-cse",
      "--strip"
    ],
    "performance_vs_Oz": "+8.0%"
  }
}