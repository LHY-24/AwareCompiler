{
  "program_id": "github-v0_46175.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 5,
    "oneSuccessor": 14,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 9,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 1,
    "BranchCount": 23,
    "returnInt": 1,
    "CriticalCount": 8,
    "NumEdges": 37,
    "const32Bit": 17,
    "const64Bit": 3,
    "numConstZeroes": 9,
    "numConstOnes": 7,
    "UncondBranches": 14,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 25,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 28,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 1,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 25,
    "TotalInsts": 94,
    "TotalMemInst": 55,
    "TotalFuncs": 6,
    "ArgsPhi": 2,
    "testUnary": 36
  },
  "baseline_oz_instcount": 96,
  "knowledge_base_entry": [
    "--instcombine",
    "--slp-vectorizer",
    "--simplifycfg",
    "--mem2reg",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--called-value-propagation",
          "--sroa",
          "--ipsccp",
          "--redundant-dbg-inst-elim",
          "--functionattrs",
          "--bdce",
          "--barrier",
          "--loop-versioning",
          "--aggressive-instcombine",
          "--loweratomic",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--called-value-propagation",
      "--sroa",
      "--ipsccp",
      "--redundant-dbg-inst-elim",
      "--functionattrs",
      "--bdce",
      "--barrier",
      "--loop-versioning",
      "--aggressive-instcombine",
      "--loweratomic",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}