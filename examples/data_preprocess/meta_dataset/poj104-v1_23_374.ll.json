{
  "program_id": "poj104-v1_23_374.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 0,
    "oneSuccessor": 7,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 8,
    "CriticalCount": 3,
    "NumEdges": 19,
    "const32Bit": 37,
    "const64Bit": 16,
    "numConstZeroes": 16,
    "numConstOnes": 24,
    "UncondBranches": 7,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 23,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 27,
    "NumBitCastInst": 16,
    "NumBrInst": 13,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 16,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 43,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 29,
    "TotalInsts": 190,
    "TotalMemInst": 134,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 86
  },
  "baseline_oz_instcount": 35,
  "knowledge_base_entry": [
    "--inline",
    "--mergefunc",
    "--newgvn",
    "-loop-reduce",
    "--load-store-vectorizer",
    "--licm",
    "--newgvn",
    "--instcombine",
    "--early-cse-memssa",
    "--instcombine",
    "--mem2reg",
    "--die",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--adce",
    "--elim-avail-extern",
    "--simplifycfg",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--loop-guard-widening",
          "--newgvn",
          "--bdce",
          "--indvars",
          "--instsimplify",
          "--loop-unswitch",
          "--ee-instrument",
          "--lowerswitch",
          "--loop-predication",
          "--strip-dead-prototypes",
          "--slsr",
          "--loop-data-prefetch",
          "--barrier",
          "--elim-avail-extern",
          "--strip-debug-declare",
          "--globaldce",
          "--attributor",
          "--loop-load-elim",
          "--float2int",
          "--coro-elide",
          "--globalopt",
          "--insert-gcov-profiling",
          "--loop-versioning-licm",
          "--loop-reroll",
          "--lower-expect",
          "--add-discriminators",
          "--sroa",
          "--loop-simplify",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+20.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--loop-guard-widening",
      "--newgvn",
      "--bdce",
      "--indvars",
      "--instsimplify",
      "--loop-unswitch",
      "--ee-instrument",
      "--lowerswitch",
      "--loop-predication",
      "--strip-dead-prototypes",
      "--slsr",
      "--loop-data-prefetch",
      "--barrier",
      "--elim-avail-extern",
      "--strip-debug-declare",
      "--globaldce",
      "--attributor",
      "--loop-load-elim",
      "--float2int",
      "--coro-elide",
      "--globalopt",
      "--insert-gcov-profiling",
      "--loop-versioning-licm",
      "--loop-reroll",
      "--lower-expect",
      "--add-discriminators",
      "--sroa",
      "--loop-simplify",
      "--instcombine"
    ],
    "performance_vs_Oz": "+20.0%"
  }
}