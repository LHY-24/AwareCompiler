{
  "program_id": "poj104-v1_4_1148.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 23,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 1,
    "oneSuccessor": 21,
    "twoPred": 9,
    "twoPredOneSuc": 1,
    "twoEach": 7,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 2,
    "BranchCount": 31,
    "returnInt": 3,
    "CriticalCount": 2,
    "NumEdges": 41,
    "const32Bit": 45,
    "const64Bit": 27,
    "numConstZeroes": 31,
    "numConstOnes": 25,
    "UncondBranches": 21,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 17,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 39,
    "NumBitCastInst": 17,
    "NumBrInst": 31,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 55,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 9,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 31,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 41,
    "TotalInsts": 243,
    "TotalMemInst": 154,
    "TotalFuncs": 20,
    "ArgsPhi": 4,
    "testUnary": 96
  },
  "baseline_oz_instcount": 110,
  "knowledge_base_entry": [
    "--die",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--adce",
    "--mem2reg",
    "--loop-simplifycfg",
    "--die",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--instcombine",
    "--bdce",
    "--sroa",
    "--adce",
    "--early-cse",
    "--ipsccp",
    "--elim-avail-extern",
    "--sroa",
    "--dce",
    "--mem2reg",
    "--mldst-motion",
    "--simplifycfg",
    "--mldst-motion",
    "--newgvn",
    "--flattencfg",
    "--newgvn",
    "--prune-eh",
    "--instcombine",
    "--prune-eh",
    "--sroa",
    "--mldst-motion",
    "--inline",
    "--globalopt",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--die",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--gvn-hoist",
    "--jump-threading",
    "--die",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--slsr",
    "--jump-threading",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "--lowerinvoke",
          "--globalopt",
          "--elim-avail-extern",
          "--strip-dead-prototypes",
          "--sccp",
          "--dse",
          "--tailcallelim",
          "--globaldce",
          "--pgo-memop-opt",
          "--alignment-from-assumptions",
          "--called-value-propagation",
          "--mldst-motion",
          "--nary-reassociate",
          "--loop-versioning-licm",
          "--load-store-vectorizer",
          "--reassociate",
          "--lower-guard-intrinsic",
          "-loop-reduce",
          "--callsite-splitting",
          "--loop-unswitch",
          "--aggressive-instcombine",
          "--mem2reg",
          "--redundant-dbg-inst-elim",
          "--libcalls-shrinkwrap",
          "--mergeicmps",
          "--add-discriminators",
          "--post-inline-ee-instrument",
          "--dce",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "--lowerinvoke",
      "--globalopt",
      "--elim-avail-extern",
      "--strip-dead-prototypes",
      "--sccp",
      "--dse",
      "--tailcallelim",
      "--globaldce",
      "--pgo-memop-opt",
      "--alignment-from-assumptions",
      "--called-value-propagation",
      "--mldst-motion",
      "--nary-reassociate",
      "--loop-versioning-licm",
      "--load-store-vectorizer",
      "--reassociate",
      "--lower-guard-intrinsic",
      "-loop-reduce",
      "--callsite-splitting",
      "--loop-unswitch",
      "--aggressive-instcombine",
      "--mem2reg",
      "--redundant-dbg-inst-elim",
      "--libcalls-shrinkwrap",
      "--mergeicmps",
      "--add-discriminators",
      "--post-inline-ee-instrument",
      "--dce",
      "--instcombine"
    ],
    "performance_vs_Oz": "+5.5%"
  }
}