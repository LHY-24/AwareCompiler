{
  "program_id": "linux-v0_10081.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 0,
    "oneSuccessor": 11,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 15,
    "returnInt": 8,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 27,
    "const64Bit": 17,
    "numConstZeroes": 14,
    "numConstOnes": 17,
    "UncondBranches": 11,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 12,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 2,
    "NumBrInst": 15,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 11,
    "TotalBlocks": 21,
    "TotalInsts": 187,
    "TotalMemInst": 119,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 93
  },
  "baseline_oz_instcount": 187,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--reassociate",
    "--inline",
    "--dse",
    "--lower-expect",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-interchange",
          "--lowerswitch",
          "--licm",
          "--mldst-motion",
          "--aggressive-instcombine",
          "--argpromotion",
          "--instcombine",
          "--irce",
          "--sroa",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-interchange",
      "--lowerswitch",
      "--licm",
      "--mldst-motion",
      "--aggressive-instcombine",
      "--argpromotion",
      "--instcombine",
      "--irce",
      "--sroa",
      "--float2int"
    ],
    "performance_vs_Oz": "+4.3%"
  }
}