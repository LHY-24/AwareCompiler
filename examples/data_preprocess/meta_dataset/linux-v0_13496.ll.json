{
  "program_id": "linux-v0_13496.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 6,
    "oneSuccessor": 16,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 8,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 1,
    "CriticalCount": 5,
    "NumEdges": 32,
    "const32Bit": 178,
    "const64Bit": 54,
    "numConstZeroes": 116,
    "numConstOnes": 49,
    "UncondBranches": 16,
    "binaryConstArg": 7,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 38,
    "NumAndInst": 2,
    "BlockMid": 9,
    "BlockLow": 21,
    "NumBitCastInst": 11,
    "NumBrInst": 23,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 91,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 114,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 53,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 30,
    "TotalInsts": 376,
    "TotalMemInst": 309,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 176
  },
  "baseline_oz_instcount": 366,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--jump-threading",
    "--loop-rotate",
    "--dse",
    "--mldst-motion",
    "--inline",
    "--ipsccp",
    "--bdce",
    "--slp-vectorizer",
    "--early-cse",
    "--dce",
    "--simplifycfg",
    "-loop-reduce",
    "--nary-reassociate",
    "--dse",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--early-cse",
    "--ipsccp",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--die",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-elide",
          "--loop-fusion",
          "--tailcallelim",
          "--bdce",
          "--loop-interchange",
          "--pgo-memop-opt",
          "--loop-unswitch",
          "--attributor",
          "--argpromotion",
          "--loop-reroll",
          "--reassociate",
          "--jump-threading",
          "--hotcoldsplit",
          "--scalarizer",
          "--ipsccp",
          "--mldst-motion",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-elide",
      "--loop-fusion",
      "--tailcallelim",
      "--bdce",
      "--loop-interchange",
      "--pgo-memop-opt",
      "--loop-unswitch",
      "--attributor",
      "--argpromotion",
      "--loop-reroll",
      "--reassociate",
      "--jump-threading",
      "--hotcoldsplit",
      "--scalarizer",
      "--ipsccp",
      "--mldst-motion",
      "--always-inline"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}