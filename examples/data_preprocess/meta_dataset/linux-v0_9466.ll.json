{
  "program_id": "linux-v0_9466.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 11,
    "oneSuccessor": 23,
    "twoPred": 9,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 15,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 51,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 15,
    "CriticalCount": 10,
    "NumEdges": 58,
    "const32Bit": 95,
    "const64Bit": 4,
    "numConstZeroes": 42,
    "numConstOnes": 35,
    "UncondBranches": 23,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 27,
    "NumAndInst": 2,
    "BlockMid": 2,
    "BlockLow": 49,
    "NumBitCastInst": 5,
    "NumBrInst": 38,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 16,
    "NumLShrInst": 1,
    "NumLoadInst": 70,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 52,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 4,
    "NumZExtInst": 2,
    "TotalBlocks": 51,
    "TotalInsts": 294,
    "TotalMemInst": 205,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 112
  },
  "baseline_oz_instcount": 296,
  "knowledge_base_entry": [
    "--irce",
    "--jump-threading",
    "--mem2reg",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--simplifycfg",
    "--newgvn",
    "--instsimplify",
    "--reassociate",
    "--adce",
    "--reassociate",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--insert-gcov-profiling",
          "--loop-rotate",
          "--slsr",
          "--inline",
          "--flattencfg",
          "--add-discriminators",
          "--cross-dso-cfi",
          "-loop-reduce",
          "--coro-early",
          "--loop-sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--insert-gcov-profiling",
      "--loop-rotate",
      "--slsr",
      "--inline",
      "--flattencfg",
      "--add-discriminators",
      "--cross-dso-cfi",
      "-loop-reduce",
      "--coro-early",
      "--loop-sink"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}