{
  "program_id": "linux-v0_9883.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 0,
    "onePred": 81,
    "onePredOneSuc": 62,
    "onePredTwoSuc": 13,
    "oneSuccessor": 76,
    "twoPred": 16,
    "twoPredOneSuc": 8,
    "twoEach": 6,
    "twoSuccessor": 23,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 122,
    "BeginPhi": 1,
    "BranchCount": 98,
    "returnInt": 6,
    "CriticalCount": 16,
    "NumEdges": 132,
    "const32Bit": 357,
    "const64Bit": 19,
    "numConstZeroes": 173,
    "numConstOnes": 98,
    "UncondBranches": 76,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 55,
    "NumAndInst": 6,
    "BlockMid": 10,
    "BlockLow": 113,
    "NumBitCastInst": 34,
    "NumBrInst": 98,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 126,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 203,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 22,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 102,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 19,
    "NumZExtInst": 14,
    "TotalBlocks": 123,
    "TotalInsts": 799,
    "TotalMemInst": 548,
    "TotalFuncs": 48,
    "ArgsPhi": 6,
    "testUnary": 327
  },
  "baseline_oz_instcount": 794,
  "knowledge_base_entry": [
    "--loop-interchange",
    "--early-cse-memssa",
    "--sroa",
    "--inline",
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--globaldce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--loop-simplify",
          "--strip-nondebug",
          "--lower-expect",
          "--aggressive-instcombine",
          "--ipsccp",
          "--loop-versioning-licm",
          "--insert-gcov-profiling",
          "--add-discriminators",
          "--mergefunc",
          "--partially-inline-libcalls",
          "--correlated-propagation",
          "--irce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--loop-simplify",
      "--strip-nondebug",
      "--lower-expect",
      "--aggressive-instcombine",
      "--ipsccp",
      "--loop-versioning-licm",
      "--insert-gcov-profiling",
      "--add-discriminators",
      "--mergefunc",
      "--partially-inline-libcalls",
      "--correlated-propagation",
      "--irce"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}