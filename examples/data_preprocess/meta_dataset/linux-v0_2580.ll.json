{
  "program_id": "linux-v0_2580.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 12,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 2,
    "BranchCount": 16,
    "returnInt": 12,
    "CriticalCount": 2,
    "NumEdges": 25,
    "const32Bit": 63,
    "const64Bit": 3,
    "numConstZeroes": 14,
    "numConstOnes": 18,
    "UncondBranches": 11,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 18,
    "NumAllocaInst": 17,
    "NumAndInst": 7,
    "BlockMid": 2,
    "BlockLow": 25,
    "NumBitCastInst": 0,
    "NumBrInst": 16,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 10,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 30,
    "TotalBlocks": 27,
    "TotalInsts": 207,
    "TotalMemInst": 106,
    "TotalFuncs": 19,
    "ArgsPhi": 4,
    "testUnary": 91
  },
  "baseline_oz_instcount": 207,
  "knowledge_base_entry": [
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--reassociate",
    "--simplifycfg",
    "--mem2reg",
    "--instcombine",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partial-inliner",
          "--memcpyopt",
          "--lowerinvoke",
          "--gvn",
          "--loop-unroll-and-jam",
          "--dse",
          "--loop-reroll",
          "--early-cse",
          "--insert-gcov-profiling",
          "--called-value-propagation",
          "--lower-matrix-intrinsics",
          "--slsr",
          "--die",
          "--libcalls-shrinkwrap",
          "--coro-cleanup",
          "--ipconstprop",
          "--strip-dead-prototypes",
          "--aggressive-instcombine",
          "--constprop",
          "--instcombine",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partial-inliner",
      "--memcpyopt",
      "--lowerinvoke",
      "--gvn",
      "--loop-unroll-and-jam",
      "--dse",
      "--loop-reroll",
      "--early-cse",
      "--insert-gcov-profiling",
      "--called-value-propagation",
      "--lower-matrix-intrinsics",
      "--slsr",
      "--die",
      "--libcalls-shrinkwrap",
      "--coro-cleanup",
      "--ipconstprop",
      "--strip-dead-prototypes",
      "--aggressive-instcombine",
      "--constprop",
      "--instcombine",
      "--always-inline"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}