{
  "program_id": "linux-v0_12931.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 71,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 18,
    "oneSuccessor": 68,
    "twoPred": 22,
    "twoPredOneSuc": 12,
    "twoEach": 4,
    "twoSuccessor": 28,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 121,
    "BeginPhi": 2,
    "BranchCount": 96,
    "returnInt": 9,
    "CriticalCount": 22,
    "NumEdges": 124,
    "const32Bit": 230,
    "const64Bit": 41,
    "numConstZeroes": 81,
    "numConstOnes": 122,
    "UncondBranches": 68,
    "binaryConstArg": 19,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 94,
    "NumAndInst": 7,
    "BlockMid": 11,
    "BlockLow": 112,
    "NumBitCastInst": 9,
    "NumBrInst": 96,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 56,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 185,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 2,
    "NumRetInst": 27,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 104,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 9,
    "NumZExtInst": 11,
    "TotalBlocks": 123,
    "TotalInsts": 714,
    "TotalMemInst": 502,
    "TotalFuncs": 42,
    "ArgsPhi": 5,
    "testUnary": 319
  },
  "baseline_oz_instcount": 697,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--ipsccp",
    "--flattencfg",
    "--mergefunc",
    "--aggressive-instcombine",
    "--gvn",
    "--mem2reg",
    "--gvn",
    "--dse",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-reroll",
          "--lower-guard-intrinsic",
          "--guard-widening",
          "--sancov",
          "--dse",
          "--pgo-memop-opt",
          "--lowerinvoke",
          "--prune-eh",
          "--callsite-splitting",
          "--loweratomic",
          "--tailcallelim",
          "--loop-sink",
          "--load-store-vectorizer",
          "--mergereturn",
          "--ipsccp",
          "--strip-debug-declare",
          "--aggressive-instcombine",
          "--loop-data-prefetch",
          "--nary-reassociate",
          "--loop-fusion",
          "--mem2reg",
          "--globalopt",
          "--add-discriminators",
          "--loop-unroll",
          "--simple-loop-unswitch",
          "--inline",
          "--bdce",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-reroll",
      "--lower-guard-intrinsic",
      "--guard-widening",
      "--sancov",
      "--dse",
      "--pgo-memop-opt",
      "--lowerinvoke",
      "--prune-eh",
      "--callsite-splitting",
      "--loweratomic",
      "--tailcallelim",
      "--loop-sink",
      "--load-store-vectorizer",
      "--mergereturn",
      "--ipsccp",
      "--strip-debug-declare",
      "--aggressive-instcombine",
      "--loop-data-prefetch",
      "--nary-reassociate",
      "--loop-fusion",
      "--mem2reg",
      "--globalopt",
      "--add-discriminators",
      "--loop-unroll",
      "--simple-loop-unswitch",
      "--inline",
      "--bdce",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}