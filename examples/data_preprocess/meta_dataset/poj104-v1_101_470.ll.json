{
  "program_id": "poj104-v1_101_470.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 30,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 10,
    "oneSuccessor": 20,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 21,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 56,
    "BeginPhi": 0,
    "BranchCount": 41,
    "returnInt": 7,
    "CriticalCount": 15,
    "NumEdges": 62,
    "const32Bit": 45,
    "const64Bit": 10,
    "numConstZeroes": 8,
    "numConstOnes": 32,
    "UncondBranches": 20,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 22,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 55,
    "NumBitCastInst": 16,
    "NumBrInst": 41,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 27,
    "NumLShrInst": 0,
    "NumLoadInst": 80,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 56,
    "TotalInsts": 292,
    "TotalMemInst": 176,
    "TotalFuncs": 26,
    "ArgsPhi": 0,
    "testUnary": 125
  },
  "baseline_oz_instcount": 129,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--mem2reg",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--dce",
    "--lower-expect",
    "--die",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--mem2reg",
    "--die",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--globalopt",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--die",
    "--ipsccp",
    "--elim-avail-extern",
    "--mem2reg",
    "--slp-vectorizer",
    "--simplifycfg",
    "--dce",
    "--lower-expect",
    "--die",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--mem2reg",
    "--die",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--globalopt",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--adce",
    "--dce",
    "--slp-vectorizer",
    "--indvars",
    "--correlated-propagation",
    "--loop-reroll",
    "--gvn-hoist",
    "--loop-deletion",
    "--jump-threading",
    "--bdce",
    "--jump-threading",
    "--mergefunc",
    "--loop-simplifycfg",
    "--dce",
    "--newgvn",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--die",
    "--licm",
    "--jump-threading",
    "--adce",
    "--lower-expect",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--gvn-hoist",
    "--inline",
    "--adce",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--simplifycfg",
    "--dce",
    "--lower-expect",
    "--die",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--mem2reg",
    "--die",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--globalopt",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--adce",
    "--dce",
    "--slp-vectorizer",
    "--indvars",
    "--correlated-propagation",
    "--loop-reroll",
    "--gvn-hoist",
    "--loop-deletion",
    "--jump-threading",
    "--bdce",
    "--jump-threading",
    "--mergefunc",
    "--loop-simplifycfg",
    "--dce",
    "--newgvn",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--loop-instsimplify",
          "--speculative-execution",
          "--libcalls-shrinkwrap",
          "--mem2reg",
          "--partially-inline-libcalls",
          "--elim-avail-extern",
          "--memcpyopt",
          "--flattencfg",
          "--forceattrs",
          "--load-store-vectorizer",
          "--gvn",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+14.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--loop-instsimplify",
      "--speculative-execution",
      "--libcalls-shrinkwrap",
      "--mem2reg",
      "--partially-inline-libcalls",
      "--elim-avail-extern",
      "--memcpyopt",
      "--flattencfg",
      "--forceattrs",
      "--load-store-vectorizer",
      "--gvn",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+14.7%"
  }
}