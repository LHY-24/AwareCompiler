{
  "program_id": "linux-v0_13126.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 6,
    "oneSuccessor": 22,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 15,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 68,
    "BeginPhi": 0,
    "BranchCount": 37,
    "returnInt": 36,
    "CriticalCount": 6,
    "NumEdges": 52,
    "const32Bit": 297,
    "const64Bit": 32,
    "numConstZeroes": 141,
    "numConstOnes": 93,
    "UncondBranches": 22,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 79,
    "NumAndInst": 3,
    "BlockMid": 14,
    "BlockLow": 54,
    "NumBitCastInst": 16,
    "NumBrInst": 37,
    "NumCallInst": 81,
    "NumGetElementPtrInst": 116,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 204,
    "NumMulInst": 2,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 31,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 111,
    "NumSubInst": 0,
    "NumTruncInst": 14,
    "NumXorInst": 2,
    "NumZExtInst": 13,
    "TotalBlocks": 68,
    "TotalInsts": 734,
    "TotalMemInst": 591,
    "TotalFuncs": 48,
    "ArgsPhi": 0,
    "testUnary": 334
  },
  "baseline_oz_instcount": 723,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--newgvn",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--sroa",
    "--correlated-propagation",
    "--gvn-hoist",
    "--adce",
    "--instsimplify",
    "--bdce",
    "--ipsccp",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--jump-threading",
    "--nary-reassociate",
    "--ipsccp",
    "--nary-reassociate",
    "--lower-expect",
    "--gvn",
    "--loop-simplifycfg",
    "--sccp",
    "--newgvn",
    "--slp-vectorizer",
    "--early-cse",
    "-loop-reduce",
    "--newgvn",
    "--adce",
    "--ipsccp",
    "--aggressive-instcombine",
    "--sroa",
    "--prune-eh",
    "--licm",
    "--loop-instsimplify",
    "--sccp",
    "--inline",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "--tailcallelim",
          "--correlated-propagation",
          "--constprop",
          "--gvn",
          "--loop-unroll",
          "--deadargelim",
          "--lower-guard-intrinsic",
          "--simple-loop-unswitch",
          "--name-anon-globals",
          "--ipsccp",
          "--ee-instrument",
          "--loop-instsimplify",
          "--die",
          "--partial-inliner",
          "--aggressive-instcombine",
          "--post-inline-ee-instrument",
          "--gvn-hoist",
          "--globalopt",
          "--hotcoldsplit",
          "--loweratomic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "--tailcallelim",
      "--correlated-propagation",
      "--constprop",
      "--gvn",
      "--loop-unroll",
      "--deadargelim",
      "--lower-guard-intrinsic",
      "--simple-loop-unswitch",
      "--name-anon-globals",
      "--ipsccp",
      "--ee-instrument",
      "--loop-instsimplify",
      "--die",
      "--partial-inliner",
      "--aggressive-instcombine",
      "--post-inline-ee-instrument",
      "--gvn-hoist",
      "--globalopt",
      "--hotcoldsplit",
      "--loweratomic"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}