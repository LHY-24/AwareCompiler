{
  "program_id": "linux-v0_1508.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 62,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 20,
    "oneSuccessor": 44,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 28,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 89,
    "BeginPhi": 0,
    "BranchCount": 72,
    "returnInt": 26,
    "CriticalCount": 5,
    "NumEdges": 103,
    "const32Bit": 146,
    "const64Bit": 20,
    "numConstZeroes": 78,
    "numConstOnes": 53,
    "UncondBranches": 44,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 45,
    "NumAndInst": 5,
    "BlockMid": 4,
    "BlockLow": 85,
    "NumBitCastInst": 14,
    "NumBrInst": 72,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 28,
    "NumLShrInst": 1,
    "NumLoadInst": 131,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 95,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 89,
    "TotalInsts": 502,
    "TotalMemInst": 350,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 202
  },
  "baseline_oz_instcount": 503,
  "knowledge_base_entry": [
    "--bdce",
    "--elim-avail-extern",
    "--sroa",
    "--gvn-hoist",
    "--correlated-propagation",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--inline",
    "--instcombine",
    "--memcpyopt",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--mem2reg",
          "--canonicalize-aliases",
          "--mldst-motion",
          "--instnamer",
          "--adce",
          "--aggressive-instcombine",
          "--licm",
          "--dce",
          "--forceattrs",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--mem2reg",
      "--canonicalize-aliases",
      "--mldst-motion",
      "--instnamer",
      "--adce",
      "--aggressive-instcombine",
      "--licm",
      "--dce",
      "--forceattrs",
      "--dse"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}