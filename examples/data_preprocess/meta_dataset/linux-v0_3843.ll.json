{
  "program_id": "linux-v0_3843.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 30,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 6,
    "oneSuccessor": 26,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 13,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 4,
    "CriticalCount": 10,
    "NumEdges": 52,
    "const32Bit": 143,
    "const64Bit": 10,
    "numConstZeroes": 73,
    "numConstOnes": 59,
    "UncondBranches": 26,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 51,
    "NumAndInst": 4,
    "BlockMid": 8,
    "BlockLow": 50,
    "NumBitCastInst": 13,
    "NumBrInst": 39,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 93,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 64,
    "NumSubInst": 1,
    "NumTruncInst": 9,
    "NumXorInst": 2,
    "NumZExtInst": 8,
    "TotalBlocks": 58,
    "TotalInsts": 403,
    "TotalMemInst": 284,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 185
  },
  "baseline_oz_instcount": 403,
  "knowledge_base_entry": [
    "--sink",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--mergefunc",
    "--simplifycfg",
    "--mem2reg",
    "--simplifycfg",
    "--licm",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--die",
    "--loop-simplifycfg",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--mergefunc",
    "--simplifycfg",
    "--mem2reg",
    "--simplifycfg",
    "--licm",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--die",
    "--loop-simplifycfg",
    "--lower-expect",
    "--prune-eh",
    "--newgvn",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--instnamer",
          "--elim-avail-extern",
          "--loop-guard-widening",
          "--aggressive-instcombine",
          "--nary-reassociate",
          "--loop-sink",
          "--loop-unroll",
          "--mem2reg",
          "--die",
          "--post-inline-ee-instrument",
          "--forceattrs",
          "--callsite-splitting",
          "--irce",
          "--early-cse",
          "--partial-inliner",
          "--sink",
          "--div-rem-pairs",
          "--add-discriminators",
          "--correlated-propagation",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--instnamer",
      "--elim-avail-extern",
      "--loop-guard-widening",
      "--aggressive-instcombine",
      "--nary-reassociate",
      "--loop-sink",
      "--loop-unroll",
      "--mem2reg",
      "--die",
      "--post-inline-ee-instrument",
      "--forceattrs",
      "--callsite-splitting",
      "--irce",
      "--early-cse",
      "--partial-inliner",
      "--sink",
      "--div-rem-pairs",
      "--add-discriminators",
      "--correlated-propagation",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}