{
  "program_id": "github-v0_3518.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 9,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 6,
    "CriticalCount": 1,
    "NumEdges": 19,
    "const32Bit": 33,
    "const64Bit": 4,
    "numConstZeroes": 20,
    "numConstOnes": 17,
    "UncondBranches": 9,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 14,
    "NumBitCastInst": 0,
    "NumBrInst": 14,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 20,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 3,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 15,
    "TotalInsts": 95,
    "TotalMemInst": 58,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 40
  },
  "baseline_oz_instcount": 96,
  "knowledge_base_entry": [
    "--globalopt",
    "--mergefunc",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--jump-threading",
    "--inline",
    "--gvn-hoist",
    "--mem2reg",
    "--simplifycfg",
    "--gvn",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--constprop",
          "--mldst-motion",
          "--consthoist",
          "--float2int",
          "--prune-eh",
          "--functionattrs",
          "--mergefunc",
          "--inferattrs",
          "--forceattrs",
          "--loop-distribute",
          "--lower-guard-intrinsic",
          "--early-cse",
          "--coro-elide"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--constprop",
      "--mldst-motion",
      "--consthoist",
      "--float2int",
      "--prune-eh",
      "--functionattrs",
      "--mergefunc",
      "--inferattrs",
      "--forceattrs",
      "--loop-distribute",
      "--lower-guard-intrinsic",
      "--early-cse",
      "--coro-elide"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}