{
  "program_id": "github-v0_19022.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 14,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 30,
    "const32Bit": 53,
    "const64Bit": 89,
    "numConstZeroes": 81,
    "numConstOnes": 33,
    "UncondBranches": 14,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 13,
    "NumAndInst": 9,
    "BlockMid": 6,
    "BlockLow": 20,
    "NumBitCastInst": 16,
    "NumBrInst": 22,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 56,
    "NumICmpInst": 8,
    "NumLShrInst": 6,
    "NumLoadInst": 44,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 30,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 2,
    "TotalBlocks": 26,
    "TotalInsts": 238,
    "TotalMemInst": 150,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 81
  },
  "baseline_oz_instcount": 238,
  "knowledge_base_entry": [
    "--simple-loop-unswitch",
    "--instcombine",
    "--aggressive-instcombine",
    "--jump-threading",
    "--aggressive-instcombine",
    "--globalopt",
    "--flattencfg",
    "--aggressive-instcombine",
    "--dce",
    "--mem2reg",
    "--inline",
    "--mergefunc",
    "--early-cse",
    "--slsr",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--strip-debug-declare",
          "--die",
          "--name-anon-globals",
          "--aggressive-instcombine",
          "--coro-cleanup",
          "--gvn",
          "--sink",
          "--correlated-propagation",
          "--cross-dso-cfi",
          "--simplifycfg",
          "--mem2reg",
          "--coro-early",
          "--lower-expect",
          "--dce",
          "--lower-guard-intrinsic",
          "--scalarizer",
          "--globalsplit",
          "--consthoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--strip-debug-declare",
      "--die",
      "--name-anon-globals",
      "--aggressive-instcombine",
      "--coro-cleanup",
      "--gvn",
      "--sink",
      "--correlated-propagation",
      "--cross-dso-cfi",
      "--simplifycfg",
      "--mem2reg",
      "--coro-early",
      "--lower-expect",
      "--dce",
      "--lower-guard-intrinsic",
      "--scalarizer",
      "--globalsplit",
      "--consthoist"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}