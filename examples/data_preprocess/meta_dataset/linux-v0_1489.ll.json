{
  "program_id": "linux-v0_1489.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 20,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 5,
    "oneSuccessor": 17,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 9,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 1,
    "BranchCount": 24,
    "returnInt": 8,
    "CriticalCount": 2,
    "NumEdges": 38,
    "const32Bit": 140,
    "const64Bit": 10,
    "numConstZeroes": 51,
    "numConstOnes": 62,
    "UncondBranches": 17,
    "binaryConstArg": 11,
    "NumAShrInst": 2,
    "NumAddInst": 0,
    "NumAllocaInst": 46,
    "NumAndInst": 4,
    "BlockMid": 8,
    "BlockLow": 34,
    "NumBitCastInst": 7,
    "NumBrInst": 24,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 93,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 1,
    "NumRetInst": 15,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 69,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 42,
    "TotalInsts": 347,
    "TotalMemInst": 266,
    "TotalFuncs": 23,
    "ArgsPhi": 2,
    "testUnary": 155
  },
  "baseline_oz_instcount": 348,
  "knowledge_base_entry": [
    "--early-cse",
    "--instcombine",
    "--loop-deletion",
    "--instcombine",
    "--slp-vectorizer",
    "--adce",
    "--lower-expect",
    "--mem2reg",
    "--ipsccp",
    "--lower-expect",
    "--aggressive-instcombine",
    "--lower-expect",
    "--nary-reassociate",
    "--loop-fusion",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipconstprop",
          "--inferattrs",
          "--div-rem-pairs",
          "--loop-rotate",
          "--simplifycfg",
          "--mldst-motion",
          "--strip-nondebug",
          "--sccp",
          "--lower-constant-intrinsics",
          "--loop-deletion",
          "--constprop",
          "--inject-tli-mappings",
          "--lower-matrix-intrinsics",
          "--loop-unroll",
          "--ipsccp",
          "--always-inline",
          "--coro-split",
          "--loop-predication",
          "--mergereturn",
          "--sroa",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipconstprop",
      "--inferattrs",
      "--div-rem-pairs",
      "--loop-rotate",
      "--simplifycfg",
      "--mldst-motion",
      "--strip-nondebug",
      "--sccp",
      "--lower-constant-intrinsics",
      "--loop-deletion",
      "--constprop",
      "--inject-tli-mappings",
      "--lower-matrix-intrinsics",
      "--loop-unroll",
      "--ipsccp",
      "--always-inline",
      "--coro-split",
      "--loop-predication",
      "--mergereturn",
      "--sroa",
      "--sancov"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}