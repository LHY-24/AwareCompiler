{
  "program_id": "github-v0_18826.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 30,
    "const64Bit": 22,
    "numConstZeroes": 24,
    "numConstOnes": 22,
    "UncondBranches": 11,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 21,
    "TotalInsts": 139,
    "TotalMemInst": 82,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 62
  },
  "baseline_oz_instcount": 139,
  "knowledge_base_entry": [
    "--break-crit-edges",
    "--gvn-hoist",
    "--correlated-propagation",
    "--globalopt",
    "--flattencfg",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--licm",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simplifycfg",
          "--ipsccp",
          "--reg2mem",
          "--add-discriminators",
          "--irce",
          "--lower-constant-intrinsics",
          "--loop-rotate",
          "--guard-widening",
          "--aggressive-instcombine",
          "--inline",
          "--slsr",
          "--instcombine",
          "--dse",
          "--correlated-propagation",
          "--loop-unroll-and-jam",
          "--always-inline",
          "--redundant-dbg-inst-elim",
          "--loop-unswitch",
          "--sink",
          "--mldst-motion",
          "--called-value-propagation",
          "--reassociate",
          "--jump-threading",
          "--instsimplify",
          "--gvn",
          "--forceattrs",
          "--mergefunc",
          "--early-cse",
          "--separate-const-offset-from-gep"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simplifycfg",
      "--ipsccp",
      "--reg2mem",
      "--add-discriminators",
      "--irce",
      "--lower-constant-intrinsics",
      "--loop-rotate",
      "--guard-widening",
      "--aggressive-instcombine",
      "--inline",
      "--slsr",
      "--instcombine",
      "--dse",
      "--correlated-propagation",
      "--loop-unroll-and-jam",
      "--always-inline",
      "--redundant-dbg-inst-elim",
      "--loop-unswitch",
      "--sink",
      "--mldst-motion",
      "--called-value-propagation",
      "--reassociate",
      "--jump-threading",
      "--instsimplify",
      "--gvn",
      "--forceattrs",
      "--mergefunc",
      "--early-cse",
      "--separate-const-offset-from-gep"
    ],
    "performance_vs_Oz": "+6.5%"
  }
}