{
  "program_id": "github-v0_37399.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 51,
    "const64Bit": 0,
    "numConstZeroes": 0,
    "numConstOnes": 51,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 51,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 18,
    "NumBitCastInst": 14,
    "NumBrInst": 0,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 47,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 20,
    "TotalInsts": 198,
    "TotalMemInst": 157,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 105
  },
  "baseline_oz_instcount": 198,
  "knowledge_base_entry": [
    "--reg2mem",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--early-cse",
    "--dse",
    "--mergefunc",
    "--dse",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse",
    "--newgvn",
    "--lower-expect",
    "--bdce",
    "--sroa",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--bdce",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--dce",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--break-crit-edges",
          "--correlated-propagation",
          "--jump-threading",
          "--lower-matrix-intrinsics",
          "--lowerinvoke",
          "--post-inline-ee-instrument",
          "--loop-versioning",
          "--separate-const-offset-from-gep",
          "--strip-nondebug",
          "--rpo-functionattrs",
          "--mergefunc",
          "--globalsplit",
          "--bdce",
          "--instnamer",
          "--licm",
          "--coro-cleanup",
          "--constmerge",
          "--indvars",
          "--inject-tli-mappings",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+23.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--break-crit-edges",
      "--correlated-propagation",
      "--jump-threading",
      "--lower-matrix-intrinsics",
      "--lowerinvoke",
      "--post-inline-ee-instrument",
      "--loop-versioning",
      "--separate-const-offset-from-gep",
      "--strip-nondebug",
      "--rpo-functionattrs",
      "--mergefunc",
      "--globalsplit",
      "--bdce",
      "--instnamer",
      "--licm",
      "--coro-cleanup",
      "--constmerge",
      "--indvars",
      "--inject-tli-mappings",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+23.7%"
  }
}