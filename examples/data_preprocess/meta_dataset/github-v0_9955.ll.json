{
  "program_id": "github-v0_9955.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 3,
    "onePred": 8,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 7,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 5,
    "twoSuccessor": 8,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 2,
    "BBNoPhi": 11,
    "BeginPhi": 5,
    "BranchCount": 15,
    "returnInt": 10,
    "CriticalCount": 8,
    "NumEdges": 23,
    "const32Bit": 29,
    "const64Bit": 2,
    "numConstZeroes": 11,
    "numConstOnes": 11,
    "UncondBranches": 7,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 1,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 11,
    "NumBitCastInst": 1,
    "NumBrInst": 15,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 8,
    "NumMulInst": 2,
    "NumOrInst": 2,
    "NumPHIInst": 14,
    "NumRetInst": 1,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 8,
    "NumSubInst": 9,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 16,
    "TotalInsts": 165,
    "TotalMemInst": 47,
    "TotalFuncs": 10,
    "ArgsPhi": 28,
    "testUnary": 48
  },
  "baseline_oz_instcount": 171,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--gvn",
    "--jump-threading",
    "--prune-eh",
    "--instsimplify",
    "--dse",
    "--newgvn",
    "--gvn",
    "--die",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--aggressive-instcombine",
    "--globalopt",
    "--sccp",
    "--dse",
    "--lower-expect",
    "--correlated-propagation",
    "--simplifycfg",
    "--memcpyopt",
    "--inline",
    "--globalopt",
    "--dse",
    "--newgvn",
    "--reassociate",
    "--inline",
    "--jump-threading",
    "--newgvn",
    "--sroa",
    "--flattencfg",
    "--gvn-hoist",
    "--simplifycfg",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unswitch",
          "--called-value-propagation",
          "--loop-deletion",
          "--sroa",
          "--jump-threading",
          "--flattencfg",
          "--alignment-from-assumptions",
          "--gvn-hoist",
          "--float2int",
          "--reassociate",
          "--mldst-motion",
          "--argpromotion",
          "--adce",
          "--lcssa",
          "--newgvn",
          "--aggressive-instcombine",
          "--correlated-propagation",
          "--gvn",
          "--sink",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unswitch",
      "--called-value-propagation",
      "--loop-deletion",
      "--sroa",
      "--jump-threading",
      "--flattencfg",
      "--alignment-from-assumptions",
      "--gvn-hoist",
      "--float2int",
      "--reassociate",
      "--mldst-motion",
      "--argpromotion",
      "--adce",
      "--lcssa",
      "--newgvn",
      "--aggressive-instcombine",
      "--correlated-propagation",
      "--gvn",
      "--sink",
      "--dce"
    ],
    "performance_vs_Oz": "+4.7%"
  }
}