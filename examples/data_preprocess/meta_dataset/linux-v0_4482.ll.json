{
  "program_id": "linux-v0_4482.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 12,
    "oneSuccessor": 30,
    "twoPred": 5,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 16,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 0,
    "BranchCount": 44,
    "returnInt": 8,
    "CriticalCount": 7,
    "NumEdges": 70,
    "const32Bit": 156,
    "const64Bit": 11,
    "numConstZeroes": 77,
    "numConstOnes": 29,
    "UncondBranches": 30,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 24,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 49,
    "NumBitCastInst": 5,
    "NumBrInst": 44,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 53,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 112,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 57,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 53,
    "TotalInsts": 350,
    "TotalMemInst": 270,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 147
  },
  "baseline_oz_instcount": 352,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--aggressive-instcombine",
    "--jump-threading",
    "--prune-eh",
    "--inline",
    "--ipsccp",
    "--die",
    "--lower-expect",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--redundant-dbg-inst-elim",
          "--simplifycfg",
          "--functionattrs",
          "--loop-simplify",
          "--loop-rotate",
          "--infer-address-spaces",
          "--early-cse",
          "--alignment-from-assumptions",
          "--always-inline",
          "--sancov",
          "--float2int",
          "--tailcallelim",
          "--coro-split",
          "--lower-matrix-intrinsics",
          "--instnamer",
          "--lower-widenable-condition",
          "--mldst-motion",
          "--coro-early",
          "--constprop",
          "--licm",
          "--called-value-propagation",
          "--aggressive-instcombine",
          "--separate-const-offset-from-gep",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--redundant-dbg-inst-elim",
      "--simplifycfg",
      "--functionattrs",
      "--loop-simplify",
      "--loop-rotate",
      "--infer-address-spaces",
      "--early-cse",
      "--alignment-from-assumptions",
      "--always-inline",
      "--sancov",
      "--float2int",
      "--tailcallelim",
      "--coro-split",
      "--lower-matrix-intrinsics",
      "--instnamer",
      "--lower-widenable-condition",
      "--mldst-motion",
      "--coro-early",
      "--constprop",
      "--licm",
      "--called-value-propagation",
      "--aggressive-instcombine",
      "--separate-const-offset-from-gep",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}