{
  "program_id": "linux-v0_5580.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 46,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 7,
    "oneSuccessor": 44,
    "twoPred": 19,
    "twoPredOneSuc": 2,
    "twoEach": 9,
    "twoSuccessor": 23,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 91,
    "BeginPhi": 0,
    "BranchCount": 67,
    "returnInt": 18,
    "CriticalCount": 40,
    "NumEdges": 126,
    "const32Bit": 297,
    "const64Bit": 22,
    "numConstZeroes": 136,
    "numConstOnes": 95,
    "UncondBranches": 44,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 71,
    "NumAndInst": 2,
    "BlockMid": 13,
    "BlockLow": 78,
    "NumBitCastInst": 15,
    "NumBrInst": 67,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 82,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 203,
    "NumMulInst": 1,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 112,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 4,
    "NumZExtInst": 12,
    "TotalBlocks": 91,
    "TotalInsts": 689,
    "TotalMemInst": 507,
    "TotalFuncs": 45,
    "ArgsPhi": 0,
    "testUnary": 317
  },
  "baseline_oz_instcount": 688,
  "knowledge_base_entry": [
    "--mergefunc",
    "--globaldce",
    "--ipsccp",
    "--lower-expect",
    "--elim-avail-extern",
    "--jump-threading",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--pgo-memop-opt",
          "--jump-threading",
          "--loop-simplify",
          "--slsr",
          "--aggressive-instcombine",
          "--simplifycfg",
          "--elim-avail-extern",
          "--insert-gcov-profiling",
          "--ipsccp",
          "--consthoist",
          "--add-discriminators",
          "--hotcoldsplit",
          "--strip-dead-prototypes",
          "--coro-elide",
          "--loop-rotate",
          "--infer-address-spaces",
          "--early-cse-memssa",
          "--mergefunc",
          "--mergereturn",
          "--constprop",
          "--constmerge",
          "--sccp",
          "--rpo-functionattrs",
          "--dce",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--pgo-memop-opt",
      "--jump-threading",
      "--loop-simplify",
      "--slsr",
      "--aggressive-instcombine",
      "--simplifycfg",
      "--elim-avail-extern",
      "--insert-gcov-profiling",
      "--ipsccp",
      "--consthoist",
      "--add-discriminators",
      "--hotcoldsplit",
      "--strip-dead-prototypes",
      "--coro-elide",
      "--loop-rotate",
      "--infer-address-spaces",
      "--early-cse-memssa",
      "--mergefunc",
      "--mergereturn",
      "--constprop",
      "--constmerge",
      "--sccp",
      "--rpo-functionattrs",
      "--dce",
      "--globalopt"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}