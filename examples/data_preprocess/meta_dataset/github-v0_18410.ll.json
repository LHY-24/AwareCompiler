{
  "program_id": "github-v0_18410.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 9,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 2,
    "oneSuccessor": 9,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 2,
    "BranchCount": 16,
    "returnInt": 0,
    "CriticalCount": 5,
    "NumEdges": 23,
    "const32Bit": 20,
    "const64Bit": 4,
    "numConstZeroes": 5,
    "numConstOnes": 13,
    "UncondBranches": 9,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 16,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 28,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 2,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 18,
    "TotalInsts": 107,
    "TotalMemInst": 56,
    "TotalFuncs": 2,
    "ArgsPhi": 4,
    "testUnary": 53
  },
  "baseline_oz_instcount": 107,
  "knowledge_base_entry": [
    "--slsr",
    "--jump-threading",
    "--aggressive-instcombine",
    "--ipsccp",
    "--globalopt",
    "--dse",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--bdce",
    "--slp-vectorizer",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "--licm",
          "--loop-sink",
          "--simple-loop-unswitch",
          "--callsite-splitting",
          "--strip-nondebug",
          "--consthoist",
          "--argpromotion",
          "--loop-rotate",
          "--add-discriminators",
          "--aggressive-instcombine",
          "--slp-vectorizer",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "--licm",
      "--loop-sink",
      "--simple-loop-unswitch",
      "--callsite-splitting",
      "--strip-nondebug",
      "--consthoist",
      "--argpromotion",
      "--loop-rotate",
      "--add-discriminators",
      "--aggressive-instcombine",
      "--slp-vectorizer",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}