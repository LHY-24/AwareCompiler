{
  "program_id": "linux-v0_4142.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 72,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 12,
    "oneSuccessor": 69,
    "twoPred": 21,
    "twoPredOneSuc": 5,
    "twoEach": 10,
    "twoSuccessor": 25,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 102,
    "BeginPhi": 2,
    "BranchCount": 94,
    "returnInt": 24,
    "CriticalCount": 13,
    "NumEdges": 119,
    "const32Bit": 244,
    "const64Bit": 47,
    "numConstZeroes": 89,
    "numConstOnes": 156,
    "UncondBranches": 69,
    "binaryConstArg": 42,
    "NumAShrInst": 0,
    "NumAddInst": 20,
    "NumAllocaInst": 119,
    "NumAndInst": 4,
    "BlockMid": 18,
    "BlockLow": 86,
    "NumBitCastInst": 28,
    "NumBrInst": 94,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 63,
    "NumICmpInst": 24,
    "NumLShrInst": 2,
    "NumLoadInst": 264,
    "NumMulInst": 10,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 10,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 10,
    "NumStoreInst": 148,
    "NumSubInst": 7,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 29,
    "TotalBlocks": 104,
    "TotalInsts": 892,
    "TotalMemInst": 628,
    "TotalFuncs": 19,
    "ArgsPhi": 4,
    "testUnary": 447
  },
  "baseline_oz_instcount": 894,
  "knowledge_base_entry": [
    "--jump-threading",
    "--sroa",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--redundant-dbg-inst-elim",
          "--instsimplify",
          "--sccp",
          "--cross-dso-cfi",
          "--mergeicmps",
          "--attributor",
          "--float2int",
          "--lowerinvoke",
          "--lowerswitch",
          "--coro-cleanup",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--redundant-dbg-inst-elim",
      "--instsimplify",
      "--sccp",
      "--cross-dso-cfi",
      "--mergeicmps",
      "--attributor",
      "--float2int",
      "--lowerinvoke",
      "--lowerswitch",
      "--coro-cleanup",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}