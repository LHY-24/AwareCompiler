{
  "program_id": "github-v0_12804.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 78,
    "onePredOneSuc": 56,
    "onePredTwoSuc": 16,
    "oneSuccessor": 61,
    "twoPred": 12,
    "twoPredOneSuc": 1,
    "twoEach": 8,
    "twoSuccessor": 28,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 99,
    "BeginPhi": 0,
    "BranchCount": 89,
    "returnInt": 25,
    "CriticalCount": 8,
    "NumEdges": 117,
    "const32Bit": 329,
    "const64Bit": 24,
    "numConstZeroes": 164,
    "numConstOnes": 43,
    "UncondBranches": 61,
    "binaryConstArg": 48,
    "NumAShrInst": 19,
    "NumAddInst": 12,
    "NumAllocaInst": 16,
    "NumAndInst": 19,
    "BlockMid": 6,
    "BlockLow": 93,
    "NumBitCastInst": 0,
    "NumBrInst": 89,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 136,
    "NumICmpInst": 28,
    "NumLShrInst": 0,
    "NumLoadInst": 164,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 22,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 83,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 99,
    "TotalInsts": 665,
    "TotalMemInst": 462,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 202
  },
  "baseline_oz_instcount": 665,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--globalopt",
    "--inline",
    "--jump-threading",
    "--slp-vectorizer",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn-hoist",
          "--argpromotion",
          "--redundant-dbg-inst-elim",
          "--lower-guard-intrinsic",
          "--coro-split",
          "--loop-versioning",
          "--prune-eh",
          "--dce",
          "--globaldce",
          "--correlated-propagation",
          "--ipsccp",
          "--mergefunc",
          "--sroa",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn-hoist",
      "--argpromotion",
      "--redundant-dbg-inst-elim",
      "--lower-guard-intrinsic",
      "--coro-split",
      "--loop-versioning",
      "--prune-eh",
      "--dce",
      "--globaldce",
      "--correlated-propagation",
      "--ipsccp",
      "--mergefunc",
      "--sroa",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}