{
  "program_id": "linux-v0_3029.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 46,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 7,
    "oneSuccessor": 42,
    "twoPred": 21,
    "twoPredOneSuc": 2,
    "twoEach": 13,
    "twoSuccessor": 27,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 89,
    "BeginPhi": 2,
    "BranchCount": 69,
    "returnInt": 59,
    "CriticalCount": 14,
    "NumEdges": 100,
    "const32Bit": 220,
    "const64Bit": 8,
    "numConstZeroes": 85,
    "numConstOnes": 67,
    "UncondBranches": 42,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 56,
    "NumAndInst": 5,
    "BlockMid": 12,
    "BlockLow": 79,
    "NumBitCastInst": 6,
    "NumBrInst": 69,
    "NumCallInst": 66,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 27,
    "NumLShrInst": 1,
    "NumLoadInst": 145,
    "NumMulInst": 2,
    "NumOrInst": 6,
    "NumPHIInst": 2,
    "NumRetInst": 21,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 89,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 91,
    "TotalInsts": 551,
    "TotalMemInst": 392,
    "TotalFuncs": 39,
    "ArgsPhi": 4,
    "testUnary": 222
  },
  "baseline_oz_instcount": 551,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--gvn",
    "--newgvn",
    "--adce",
    "--slp-vectorizer",
    "--inline",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--indvars",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--flattencfg",
    "--newgvn",
    "--licm",
    "--loop-simplifycfg",
    "--globalopt",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mem2reg",
          "--irce",
          "--strip",
          "--loweratomic",
          "--canonicalize-aliases",
          "--mergeicmps",
          "--deadargelim",
          "--div-rem-pairs",
          "--instnamer",
          "-loop-reduce",
          "--separate-const-offset-from-gep",
          "--aggressive-instcombine",
          "--partial-inliner",
          "--dce",
          "--inject-tli-mappings",
          "--slp-vectorizer",
          "--slsr",
          "--strip-nondebug",
          "--rewrite-statepoints-for-gc",
          "--loop-vectorize",
          "--constmerge",
          "--globalopt",
          "--strip-debug-declare",
          "--loop-fusion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mem2reg",
      "--irce",
      "--strip",
      "--loweratomic",
      "--canonicalize-aliases",
      "--mergeicmps",
      "--deadargelim",
      "--div-rem-pairs",
      "--instnamer",
      "-loop-reduce",
      "--separate-const-offset-from-gep",
      "--aggressive-instcombine",
      "--partial-inliner",
      "--dce",
      "--inject-tli-mappings",
      "--slp-vectorizer",
      "--slsr",
      "--strip-nondebug",
      "--rewrite-statepoints-for-gc",
      "--loop-vectorize",
      "--constmerge",
      "--globalopt",
      "--strip-debug-declare",
      "--loop-fusion"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}