{
  "program_id": "poj104-v1_96_226.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 7,
    "oneSuccessor": 18,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 13,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 56,
    "BeginPhi": 0,
    "BranchCount": 31,
    "returnInt": 16,
    "CriticalCount": 9,
    "NumEdges": 44,
    "const32Bit": 83,
    "const64Bit": 52,
    "numConstZeroes": 31,
    "numConstOnes": 56,
    "UncondBranches": 18,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 43,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 49,
    "NumBitCastInst": 53,
    "NumBrInst": 31,
    "NumCallInst": 67,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 98,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 24,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 51,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 56,
    "TotalInsts": 437,
    "TotalMemInst": 290,
    "TotalFuncs": 39,
    "ArgsPhi": 0,
    "testUnary": 205
  },
  "baseline_oz_instcount": 102,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--instsimplify",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--mldst-motion",
    "--instsimplify",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--jump-threading",
    "--lower-expect",
    "--dce",
    "--gvn-hoist",
    "--reassociate",
    "--newgvn",
    "--ipsccp",
    "--licm",
    "--instsimplify",
    "--gvn",
    "--simplifycfg",
    "--mldst-motion",
    "--newgvn",
    "--elim-avail-extern",
    "--instsimplify",
    "--mergefunc",
    "--loop-reroll",
    "--simplifycfg",
    "--slp-vectorizer",
    "--dse",
    "--slp-vectorizer",
    "--mldst-motion",
    "--simplifycfg",
    "--instcombine",
    "--gvn-hoist",
    "--early-cse",
    "--sccp",
    "--bdce",
    "--lower-constant-intrinsics",
    "--loop-simplifycfg",
    "--sccp",
    "--gvn",
    "--gvn-hoist",
    "--inline",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--early-cse",
    "--inline",
    "--reassociate",
    "--slsr",
    "--indvars",
    "--correlated-propagation",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-predication",
          "--gvn-hoist",
          "--cross-dso-cfi",
          "--coro-early",
          "--lower-constant-intrinsics",
          "--loop-distribute",
          "--instcombine",
          "--loop-reroll",
          "--mem2reg",
          "--globalsplit",
          "--consthoist",
          "--strip-nondebug",
          "--strip",
          "--loop-idiom",
          "--loop-load-elim",
          "--pgo-memop-opt",
          "--deadargelim",
          "--jump-threading",
          "--slp-vectorizer",
          "--inject-tli-mappings",
          "--infer-address-spaces",
          "--ipsccp",
          "--globalopt",
          "--instnamer",
          "--early-cse",
          "--argpromotion",
          "--loop-vectorize",
          "--attributor",
          "--rpo-functionattrs",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-predication",
      "--gvn-hoist",
      "--cross-dso-cfi",
      "--coro-early",
      "--lower-constant-intrinsics",
      "--loop-distribute",
      "--instcombine",
      "--loop-reroll",
      "--mem2reg",
      "--globalsplit",
      "--consthoist",
      "--strip-nondebug",
      "--strip",
      "--loop-idiom",
      "--loop-load-elim",
      "--pgo-memop-opt",
      "--deadargelim",
      "--jump-threading",
      "--slp-vectorizer",
      "--inject-tli-mappings",
      "--infer-address-spaces",
      "--ipsccp",
      "--globalopt",
      "--instnamer",
      "--early-cse",
      "--argpromotion",
      "--loop-vectorize",
      "--attributor",
      "--rpo-functionattrs",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+3.9%"
  }
}