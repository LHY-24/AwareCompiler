{
  "program_id": "linux-v0_1522.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 53,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 9,
    "oneSuccessor": 48,
    "twoPred": 15,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 23,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 105,
    "BeginPhi": 1,
    "BranchCount": 70,
    "returnInt": 27,
    "CriticalCount": 7,
    "NumEdges": 107,
    "const32Bit": 333,
    "const64Bit": 28,
    "numConstZeroes": 156,
    "numConstOnes": 138,
    "UncondBranches": 48,
    "binaryConstArg": 22,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 104,
    "NumAndInst": 6,
    "BlockMid": 17,
    "BlockLow": 89,
    "NumBitCastInst": 44,
    "NumBrInst": 70,
    "NumCallInst": 65,
    "NumGetElementPtrInst": 94,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 232,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 1,
    "NumRetInst": 32,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 9,
    "NumStoreInst": 153,
    "NumSubInst": 0,
    "NumTruncInst": 13,
    "NumXorInst": 4,
    "NumZExtInst": 14,
    "TotalBlocks": 106,
    "TotalInsts": 886,
    "TotalMemInst": 648,
    "TotalFuncs": 55,
    "ArgsPhi": 2,
    "testUnary": 419
  },
  "baseline_oz_instcount": 886,
  "knowledge_base_entry": [
    "--loop-versioning-licm",
    "--newgvn",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--instcombine",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--ipsccp",
    "--nary-reassociate",
    "--gvn",
    "--aggressive-instcombine",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--name-anon-globals",
          "--cross-dso-cfi",
          "--early-cse",
          "--lowerinvoke",
          "--loop-reroll",
          "--coro-early",
          "--strip-dead-prototypes",
          "--simple-loop-unswitch",
          "--separate-const-offset-from-gep",
          "--dse",
          "--canonicalize-aliases",
          "--lower-guard-intrinsic",
          "--loop-predication",
          "--partially-inline-libcalls",
          "--scalarizer",
          "--instsimplify",
          "--consthoist",
          "--flattencfg",
          "--partial-inliner",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--bdce",
          "--callsite-splitting"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--name-anon-globals",
      "--cross-dso-cfi",
      "--early-cse",
      "--lowerinvoke",
      "--loop-reroll",
      "--coro-early",
      "--strip-dead-prototypes",
      "--simple-loop-unswitch",
      "--separate-const-offset-from-gep",
      "--dse",
      "--canonicalize-aliases",
      "--lower-guard-intrinsic",
      "--loop-predication",
      "--partially-inline-libcalls",
      "--scalarizer",
      "--instsimplify",
      "--consthoist",
      "--flattencfg",
      "--partial-inliner",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--bdce",
      "--callsite-splitting"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}