{
  "program_id": "linux-v0_7704.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 92,
    "onePredOneSuc": 60,
    "onePredTwoSuc": 30,
    "oneSuccessor": 77,
    "twoPred": 30,
    "twoPredOneSuc": 13,
    "twoEach": 15,
    "twoSuccessor": 49,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 137,
    "BeginPhi": 0,
    "BranchCount": 126,
    "returnInt": 1,
    "CriticalCount": 21,
    "NumEdges": 189,
    "const32Bit": 358,
    "const64Bit": 60,
    "numConstZeroes": 175,
    "numConstOnes": 71,
    "UncondBranches": 77,
    "binaryConstArg": 31,
    "NumAShrInst": 1,
    "NumAddInst": 10,
    "NumAllocaInst": 35,
    "NumAndInst": 19,
    "BlockMid": 13,
    "BlockLow": 124,
    "NumBitCastInst": 15,
    "NumBrInst": 126,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 141,
    "NumICmpInst": 54,
    "NumLShrInst": 0,
    "NumLoadInst": 303,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 9,
    "NumSelectInst": 4,
    "NumShlInst": 2,
    "NumStoreInst": 103,
    "NumSubInst": 5,
    "NumTruncInst": 12,
    "NumXorInst": 3,
    "NumZExtInst": 38,
    "TotalBlocks": 137,
    "TotalInsts": 929,
    "TotalMemInst": 618,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 413
  },
  "baseline_oz_instcount": 929,
  "knowledge_base_entry": [
    "--indvars",
    "--early-cse-memssa",
    "--memcpyopt",
    "--early-cse-memssa",
    "--die",
    "--aggressive-instcombine",
    "--mem2reg",
    "--reassociate",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--mem2reg",
          "--called-value-propagation",
          "--loop-simplify",
          "--insert-gcov-profiling",
          "--ee-instrument",
          "--aggressive-instcombine",
          "--constmerge",
          "--irce",
          "--canonicalize-aliases",
          "--simple-loop-unswitch",
          "--loop-load-elim",
          "--redundant-dbg-inst-elim",
          "--instsimplify",
          "--rewrite-statepoints-for-gc",
          "--div-rem-pairs",
          "--coro-split",
          "--coro-cleanup",
          "--loop-vectorize",
          "--coro-elide",
          "--inferattrs",
          "--correlated-propagation",
          "--float2int",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--mem2reg",
      "--called-value-propagation",
      "--loop-simplify",
      "--insert-gcov-profiling",
      "--ee-instrument",
      "--aggressive-instcombine",
      "--constmerge",
      "--irce",
      "--canonicalize-aliases",
      "--simple-loop-unswitch",
      "--loop-load-elim",
      "--redundant-dbg-inst-elim",
      "--instsimplify",
      "--rewrite-statepoints-for-gc",
      "--div-rem-pairs",
      "--coro-split",
      "--coro-cleanup",
      "--loop-vectorize",
      "--coro-elide",
      "--inferattrs",
      "--correlated-propagation",
      "--float2int",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}