{
  "program_id": "linux-v0_12802.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 54,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 16,
    "oneSuccessor": 47,
    "twoPred": 18,
    "twoPredOneSuc": 7,
    "twoEach": 7,
    "twoSuccessor": 29,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 100,
    "BeginPhi": 1,
    "BranchCount": 76,
    "returnInt": 34,
    "CriticalCount": 8,
    "NumEdges": 105,
    "const32Bit": 314,
    "const64Bit": 40,
    "numConstZeroes": 137,
    "numConstOnes": 116,
    "UncondBranches": 47,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 76,
    "NumAndInst": 12,
    "BlockMid": 13,
    "BlockLow": 88,
    "NumBitCastInst": 19,
    "NumBrInst": 76,
    "NumCallInst": 86,
    "NumGetElementPtrInst": 104,
    "NumICmpInst": 26,
    "NumLShrInst": 1,
    "NumLoadInst": 251,
    "NumMulInst": 4,
    "NumOrInst": 6,
    "NumPHIInst": 1,
    "NumRetInst": 25,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 133,
    "NumSubInst": 1,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 101,
    "TotalInsts": 860,
    "TotalMemInst": 650,
    "TotalFuncs": 53,
    "ArgsPhi": 2,
    "testUnary": 375
  },
  "baseline_oz_instcount": 860,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--flattencfg",
    "--mergefunc",
    "--lower-expect",
    "--correlated-propagation",
    "--dce",
    "--lower-expect",
    "--prune-eh",
    "--instsimplify",
    "--early-cse-memssa",
    "--flattencfg",
    "--aggressive-instcombine",
    "--licm",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--dce",
    "--loop-simplifycfg",
    "--adce",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--instsimplify",
          "--sroa",
          "--coro-split",
          "--indvars",
          "--lower-matrix-intrinsics",
          "--elim-avail-extern",
          "--always-inline",
          "--loop-guard-widening",
          "--lower-widenable-condition",
          "--post-inline-ee-instrument",
          "--scalarizer",
          "--functionattrs",
          "--loop-simplifycfg",
          "--lower-constant-intrinsics",
          "--loop-unswitch",
          "--cross-dso-cfi",
          "--speculative-execution",
          "--div-rem-pairs",
          "--argpromotion",
          "--float2int",
          "-loop-reduce",
          "--canonicalize-aliases",
          "--guard-widening",
          "--loop-fusion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--instsimplify",
      "--sroa",
      "--coro-split",
      "--indvars",
      "--lower-matrix-intrinsics",
      "--elim-avail-extern",
      "--always-inline",
      "--loop-guard-widening",
      "--lower-widenable-condition",
      "--post-inline-ee-instrument",
      "--scalarizer",
      "--functionattrs",
      "--loop-simplifycfg",
      "--lower-constant-intrinsics",
      "--loop-unswitch",
      "--cross-dso-cfi",
      "--speculative-execution",
      "--div-rem-pairs",
      "--argpromotion",
      "--float2int",
      "-loop-reduce",
      "--canonicalize-aliases",
      "--guard-widening",
      "--loop-fusion"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}