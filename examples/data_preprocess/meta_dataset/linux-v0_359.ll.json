{
  "program_id": "linux-v0_359.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 0,
    "oneSuccessor": 7,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 8,
    "CriticalCount": 1,
    "NumEdges": 15,
    "const32Bit": 144,
    "const64Bit": 5,
    "numConstZeroes": 82,
    "numConstOnes": 39,
    "UncondBranches": 7,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 24,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 13,
    "NumBitCastInst": 9,
    "NumBrInst": 11,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 47,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 68,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 56,
    "NumSubInst": 0,
    "NumTruncInst": 13,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 18,
    "TotalInsts": 264,
    "TotalMemInst": 211,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 118
  },
  "baseline_oz_instcount": 264,
  "knowledge_base_entry": [
    "--instcombine",
    "--loop-reroll",
    "--jump-threading",
    "--aggressive-instcombine",
    "--early-cse",
    "--dce",
    "--die",
    "--loop-instsimplify",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simplifycfg",
          "--always-inline",
          "--rewrite-statepoints-for-gc",
          "--dse",
          "--hotcoldsplit",
          "--irce",
          "--coro-cleanup",
          "--aggressive-instcombine",
          "--sancov",
          "--loop-fusion",
          "--indvars",
          "--loop-sink",
          "--globaldce",
          "--alignment-from-assumptions",
          "--loop-deletion",
          "--flattencfg",
          "--insert-gcov-profiling",
          "--float2int",
          "--elim-avail-extern",
          "--load-store-vectorizer",
          "--bdce",
          "--lower-constant-intrinsics",
          "--called-value-propagation",
          "--mergefunc",
          "--loop-simplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simplifycfg",
      "--always-inline",
      "--rewrite-statepoints-for-gc",
      "--dse",
      "--hotcoldsplit",
      "--irce",
      "--coro-cleanup",
      "--aggressive-instcombine",
      "--sancov",
      "--loop-fusion",
      "--indvars",
      "--loop-sink",
      "--globaldce",
      "--alignment-from-assumptions",
      "--loop-deletion",
      "--flattencfg",
      "--insert-gcov-profiling",
      "--float2int",
      "--elim-avail-extern",
      "--load-store-vectorizer",
      "--bdce",
      "--lower-constant-intrinsics",
      "--called-value-propagation",
      "--mergefunc",
      "--loop-simplify"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}