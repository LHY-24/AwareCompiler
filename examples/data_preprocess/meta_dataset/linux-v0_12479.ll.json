{
  "program_id": "linux-v0_12479.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 33,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 12,
    "oneSuccessor": 32,
    "twoPred": 18,
    "twoPredOneSuc": 11,
    "twoEach": 2,
    "twoSuccessor": 20,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 3,
    "BranchCount": 52,
    "returnInt": 5,
    "CriticalCount": 7,
    "NumEdges": 72,
    "const32Bit": 169,
    "const64Bit": 1,
    "numConstZeroes": 62,
    "numConstOnes": 61,
    "UncondBranches": 32,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 44,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 62,
    "NumBitCastInst": 9,
    "NumBrInst": 52,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 20,
    "NumLShrInst": 2,
    "NumLoadInst": 138,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 15,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 65,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 67,
    "TotalInsts": 442,
    "TotalMemInst": 318,
    "TotalFuncs": 21,
    "ArgsPhi": 6,
    "testUnary": 200
  },
  "baseline_oz_instcount": 442,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--early-cse-memssa",
    "--loop-fusion",
    "--early-cse",
    "--dce",
    "--correlated-propagation",
    "--globalopt",
    "--loop-instsimplify",
    "--dse",
    "--simplifycfg",
    "--adce",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--elim-avail-extern",
          "--instcombine",
          "--loop-idiom",
          "--instsimplify",
          "--deadargelim",
          "--mergefunc",
          "--float2int",
          "--cross-dso-cfi",
          "--lower-matrix-intrinsics",
          "--sink",
          "--lower-expect",
          "--speculative-execution",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--elim-avail-extern",
      "--instcombine",
      "--loop-idiom",
      "--instsimplify",
      "--deadargelim",
      "--mergefunc",
      "--float2int",
      "--cross-dso-cfi",
      "--lower-matrix-intrinsics",
      "--sink",
      "--lower-expect",
      "--speculative-execution",
      "--globalopt"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}