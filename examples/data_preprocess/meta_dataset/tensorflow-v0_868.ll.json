{
  "program_id": "tensorflow-v0_868.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 12,
    "BeginPhi": 0,
    "BranchCount": 4,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 6,
    "const32Bit": 4,
    "const64Bit": 13,
    "numConstZeroes": 5,
    "numConstOnes": 4,
    "UncondBranches": 2,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 2,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 12,
    "NumBitCastInst": 9,
    "NumBrInst": 4,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 2,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 2,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 12,
    "TotalInsts": 55,
    "TotalMemInst": 32,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 13
  },
  "baseline_oz_instcount": 55,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--instcombine",
    "--slp-vectorizer",
    "--instsimplify",
    "--licm",
    "--inline",
    "--mergefunc",
    "--globaldce",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--die",
          "--prune-eh",
          "--instsimplify",
          "--loop-predication",
          "--constmerge",
          "--consthoist",
          "--early-cse-memssa",
          "--mergefunc",
          "--canonicalize-aliases",
          "--simple-loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--die",
      "--prune-eh",
      "--instsimplify",
      "--loop-predication",
      "--constmerge",
      "--consthoist",
      "--early-cse-memssa",
      "--mergefunc",
      "--canonicalize-aliases",
      "--simple-loop-unswitch"
    ],
    "performance_vs_Oz": "+7.3%"
  }
}