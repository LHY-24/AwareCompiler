{
  "program_id": "github-v0_5398.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 25,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 6,
    "oneSuccessor": 25,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 1,
    "BranchCount": 36,
    "returnInt": 0,
    "CriticalCount": 8,
    "NumEdges": 57,
    "const32Bit": 44,
    "const64Bit": 0,
    "numConstZeroes": 7,
    "numConstOnes": 18,
    "UncondBranches": 25,
    "binaryConstArg": 14,
    "NumAShrInst": 1,
    "NumAddInst": 4,
    "NumAllocaInst": 13,
    "NumAndInst": 3,
    "BlockMid": 1,
    "BlockLow": 39,
    "NumBitCastInst": 0,
    "NumBrInst": 36,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 51,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 10,
    "NumTruncInst": 11,
    "NumXorInst": 0,
    "NumZExtInst": 34,
    "TotalBlocks": 40,
    "TotalInsts": 222,
    "TotalMemInst": 102,
    "TotalFuncs": 3,
    "ArgsPhi": 2,
    "testUnary": 112
  },
  "baseline_oz_instcount": 222,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--licm",
    "--licm",
    "--die",
    "--newgvn",
    "--sroa",
    "--lower-expect",
    "--elim-avail-extern",
    "--licm",
    "--licm",
    "--die",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--sccp",
    "--adce",
    "--gvn-hoist",
    "--adce",
    "--instcombine",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--bdce",
    "--lower-expect",
    "--elim-avail-extern",
    "--licm",
    "--gvn-hoist",
    "--early-cse",
    "--newgvn",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--aggressive-instcombine",
          "--loop-rotate",
          "--constmerge",
          "--partial-inliner",
          "--infer-address-spaces",
          "--inferattrs",
          "--slp-vectorizer",
          "--instsimplify",
          "--always-inline",
          "--mergereturn",
          "--mldst-motion",
          "--bdce",
          "--sroa",
          "--loop-vectorize",
          "--loop-sink",
          "--jump-threading",
          "--sccp",
          "--gvn-hoist",
          "--insert-gcov-profiling",
          "--die",
          "--loop-unroll-and-jam",
          "--float2int",
          "--hotcoldsplit",
          "--loop-interchange",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--aggressive-instcombine",
      "--loop-rotate",
      "--constmerge",
      "--partial-inliner",
      "--infer-address-spaces",
      "--inferattrs",
      "--slp-vectorizer",
      "--instsimplify",
      "--always-inline",
      "--mergereturn",
      "--mldst-motion",
      "--bdce",
      "--sroa",
      "--loop-vectorize",
      "--loop-sink",
      "--jump-threading",
      "--sccp",
      "--gvn-hoist",
      "--insert-gcov-profiling",
      "--die",
      "--loop-unroll-and-jam",
      "--float2int",
      "--hotcoldsplit",
      "--loop-interchange",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+9.9%"
  }
}