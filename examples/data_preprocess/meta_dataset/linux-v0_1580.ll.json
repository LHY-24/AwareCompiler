{
  "program_id": "linux-v0_1580.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 30,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 6,
    "oneSuccessor": 27,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 55,
    "BeginPhi": 1,
    "BranchCount": 40,
    "returnInt": 7,
    "CriticalCount": 6,
    "NumEdges": 53,
    "const32Bit": 194,
    "const64Bit": 19,
    "numConstZeroes": 91,
    "numConstOnes": 77,
    "UncondBranches": 27,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 52,
    "NumAndInst": 1,
    "BlockMid": 9,
    "BlockLow": 47,
    "NumBitCastInst": 12,
    "NumBrInst": 40,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 58,
    "NumICmpInst": 17,
    "NumLShrInst": 2,
    "NumLoadInst": 113,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 16,
    "NumSExtInst": 6,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 64,
    "NumSubInst": 4,
    "NumTruncInst": 2,
    "NumXorInst": 6,
    "NumZExtInst": 8,
    "TotalBlocks": 56,
    "TotalInsts": 445,
    "TotalMemInst": 323,
    "TotalFuncs": 27,
    "ArgsPhi": 2,
    "testUnary": 195
  },
  "baseline_oz_instcount": 445,
  "knowledge_base_entry": [
    "--reassociate",
    "--bdce",
    "--mergefunc",
    "--die",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--jump-threading",
    "--instsimplify",
    "--lower-expect",
    "--early-cse",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--licm",
    "--gvn-hoist",
    "--prune-eh",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--lower-matrix-intrinsics",
          "--reassociate",
          "--deadargelim",
          "--float2int",
          "--early-cse-memssa",
          "--loop-idiom",
          "--load-store-vectorizer",
          "--loop-load-elim",
          "--die",
          "--ipsccp",
          "--irce",
          "--mergefunc",
          "--barrier",
          "--loop-reroll",
          "--newgvn",
          "--lower-constant-intrinsics",
          "--loop-predication",
          "--canonicalize-aliases",
          "--strip-nondebug",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--lower-matrix-intrinsics",
      "--reassociate",
      "--deadargelim",
      "--float2int",
      "--early-cse-memssa",
      "--loop-idiom",
      "--load-store-vectorizer",
      "--loop-load-elim",
      "--die",
      "--ipsccp",
      "--irce",
      "--mergefunc",
      "--barrier",
      "--loop-reroll",
      "--newgvn",
      "--lower-constant-intrinsics",
      "--loop-predication",
      "--canonicalize-aliases",
      "--strip-nondebug",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+3.4%"
  }
}