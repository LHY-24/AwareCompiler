{
  "program_id": "github-v0_10873.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 4,
    "onePred": 28,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 8,
    "oneSuccessor": 13,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 14,
    "morePreds": 3,
    "BB03Phi": 7,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 7,
    "BranchCount": 27,
    "returnInt": 8,
    "CriticalCount": 8,
    "NumEdges": 41,
    "const32Bit": 211,
    "const64Bit": 85,
    "numConstZeroes": 174,
    "numConstOnes": 63,
    "UncondBranches": 13,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 27,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 36,
    "NumBitCastInst": 74,
    "NumBrInst": 27,
    "NumCallInst": 94,
    "NumGetElementPtrInst": 91,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 10,
    "NumRetInst": 11,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 52,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 43,
    "TotalInsts": 462,
    "TotalMemInst": 297,
    "TotalFuncs": 34,
    "ArgsPhi": 24,
    "testUnary": 155
  },
  "baseline_oz_instcount": 339,
  "knowledge_base_entry": [
    "--die",
    "--loop-instsimplify",
    "--dse",
    "--instcombine",
    "--globalopt",
    "--sroa",
    "--loop-reroll",
    "--early-cse-memssa",
    "--inline",
    "--adce",
    "--aggressive-instcombine",
    "--instcombine",
    "--lower-expect",
    "--dse",
    "--lower-expect",
    "--elim-avail-extern",
    "--adce",
    "--instcombine",
    "--instsimplify",
    "--load-store-vectorizer",
    "--instsimplify",
    "--simplifycfg",
    "--die",
    "--die",
    "--loop-simplifycfg",
    "--sccp",
    "--early-cse",
    "--loop-deletion",
    "--newgvn",
    "--loop-reroll",
    "--instcombine",
    "--memcpyopt",
    "--gvn",
    "--early-cse",
    "--loop-fusion",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--newgvn",
          "--loop-deletion",
          "--consthoist",
          "--loop-distribute",
          "--reassociate",
          "--jump-threading",
          "--load-store-vectorizer",
          "--inline",
          "--sccp",
          "--loop-data-prefetch",
          "--lowerswitch",
          "--inject-tli-mappings",
          "--strip-nondebug",
          "--loweratomic",
          "--loop-versioning-licm",
          "--partially-inline-libcalls",
          "--prune-eh",
          "--add-discriminators",
          "--sink",
          "--bdce",
          "--alignment-from-assumptions",
          "--instsimplify",
          "--instcombine",
          "--insert-gcov-profiling",
          "--constmerge",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--newgvn",
      "--loop-deletion",
      "--consthoist",
      "--loop-distribute",
      "--reassociate",
      "--jump-threading",
      "--load-store-vectorizer",
      "--inline",
      "--sccp",
      "--loop-data-prefetch",
      "--lowerswitch",
      "--inject-tli-mappings",
      "--strip-nondebug",
      "--loweratomic",
      "--loop-versioning-licm",
      "--partially-inline-libcalls",
      "--prune-eh",
      "--add-discriminators",
      "--sink",
      "--bdce",
      "--alignment-from-assumptions",
      "--instsimplify",
      "--instcombine",
      "--insert-gcov-profiling",
      "--constmerge",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+11.5%"
  }
}