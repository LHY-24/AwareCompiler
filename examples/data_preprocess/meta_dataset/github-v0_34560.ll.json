{
  "program_id": "github-v0_34560.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 0,
    "oneSuccessor": 21,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 7,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 35,
    "const32Bit": 49,
    "const64Bit": 0,
    "numConstZeroes": 4,
    "numConstOnes": 33,
    "UncondBranches": 21,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 18,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 39,
    "NumBitCastInst": 0,
    "NumBrInst": 28,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 23,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 39,
    "TotalInsts": 159,
    "TotalMemInst": 86,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 54
  },
  "baseline_oz_instcount": 159,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--simplifycfg",
    "--loop-rotate",
    "--mem2reg",
    "--die",
    "--jump-threading",
    "--prune-eh",
    "--early-cse-memssa",
    "--instsimplify",
    "--newgvn",
    "--loop-fusion",
    "--jump-threading",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--instcombine",
    "--adce",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--early-cse",
          "--loop-sink",
          "--mergefunc",
          "--strip-dead-prototypes",
          "--aggressive-instcombine",
          "--flattencfg",
          "--ipconstprop",
          "--slp-vectorizer",
          "--bdce",
          "--speculative-execution",
          "--lower-expect",
          "--loop-predication",
          "--post-inline-ee-instrument",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--early-cse",
      "--loop-sink",
      "--mergefunc",
      "--strip-dead-prototypes",
      "--aggressive-instcombine",
      "--flattencfg",
      "--ipconstprop",
      "--slp-vectorizer",
      "--bdce",
      "--speculative-execution",
      "--lower-expect",
      "--loop-predication",
      "--post-inline-ee-instrument",
      "--die"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}