{
  "program_id": "linux-v0_10378.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 10,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 6,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 9,
    "CriticalCount": 1,
    "NumEdges": 22,
    "const32Bit": 56,
    "const64Bit": 3,
    "numConstZeroes": 29,
    "numConstOnes": 20,
    "UncondBranches": 10,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 22,
    "NumBitCastInst": 5,
    "NumBrInst": 16,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 4,
    "TotalBlocks": 24,
    "TotalInsts": 171,
    "TotalMemInst": 118,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 78
  },
  "baseline_oz_instcount": 171,
  "knowledge_base_entry": [
    "--mem2reg",
    "--adce",
    "--inline",
    "--flattencfg",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--gvn-hoist",
    "--loop-reroll",
    "--slsr",
    "--indvars",
    "--slp-vectorizer",
    "--instcombine",
    "--dce",
    "--die",
    "--dse",
    "--early-cse",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--libcalls-shrinkwrap",
          "--constprop",
          "--rewrite-statepoints-for-gc",
          "--lowerswitch",
          "--flattencfg",
          "--lcssa",
          "--licm",
          "--aggressive-instcombine",
          "--coro-split",
          "--correlated-propagation",
          "--nary-reassociate",
          "--loweratomic",
          "--scalarizer",
          "--newgvn",
          "--globalsplit",
          "--loop-vectorize",
          "--ipsccp",
          "--globalopt",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--libcalls-shrinkwrap",
      "--constprop",
      "--rewrite-statepoints-for-gc",
      "--lowerswitch",
      "--flattencfg",
      "--lcssa",
      "--licm",
      "--aggressive-instcombine",
      "--coro-split",
      "--correlated-propagation",
      "--nary-reassociate",
      "--loweratomic",
      "--scalarizer",
      "--newgvn",
      "--globalsplit",
      "--loop-vectorize",
      "--ipsccp",
      "--globalopt",
      "--strip"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}