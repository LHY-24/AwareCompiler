{
  "program_id": "linux-v0_13654.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 62,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 12,
    "oneSuccessor": 59,
    "twoPred": 19,
    "twoPredOneSuc": 8,
    "twoEach": 3,
    "twoSuccessor": 26,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 111,
    "BeginPhi": 0,
    "BranchCount": 85,
    "returnInt": 35,
    "CriticalCount": 7,
    "NumEdges": 125,
    "const32Bit": 381,
    "const64Bit": 23,
    "numConstZeroes": 175,
    "numConstOnes": 153,
    "UncondBranches": 59,
    "binaryConstArg": 49,
    "NumAShrInst": 0,
    "NumAddInst": 21,
    "NumAllocaInst": 91,
    "NumAndInst": 10,
    "BlockMid": 21,
    "BlockLow": 90,
    "NumBitCastInst": 11,
    "NumBrInst": 85,
    "NumCallInst": 85,
    "NumGetElementPtrInst": 96,
    "NumICmpInst": 30,
    "NumLShrInst": 1,
    "NumLoadInst": 286,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 24,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 12,
    "NumStoreInst": 146,
    "NumSubInst": 0,
    "NumTruncInst": 27,
    "NumXorInst": 11,
    "NumZExtInst": 37,
    "TotalBlocks": 111,
    "TotalInsts": 985,
    "TotalMemInst": 704,
    "TotalFuncs": 39,
    "ArgsPhi": 0,
    "testUnary": 456
  },
  "baseline_oz_instcount": 985,
  "knowledge_base_entry": [
    "--dce",
    "--inline",
    "--dce",
    "--aggressive-instcombine",
    "--bdce",
    "--gvn",
    "--nary-reassociate",
    "--loop-reroll",
    "--memcpyopt",
    "--gvn",
    "--flattencfg",
    "--gvn-hoist",
    "--loop-reroll",
    "--instcombine",
    "--dse",
    "--instcombine",
    "--adce",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--inject-tli-mappings",
          "--post-inline-ee-instrument",
          "--aggressive-instcombine",
          "--lower-widenable-condition",
          "--newgvn",
          "--sink",
          "--loop-versioning",
          "--early-cse-memssa",
          "--called-value-propagation",
          "--infer-address-spaces",
          "--mergereturn",
          "--loop-fusion",
          "--dse",
          "--die",
          "--bdce",
          "--loop-interchange",
          "--speculative-execution",
          "--cross-dso-cfi",
          "--loop-unswitch",
          "--slp-vectorizer",
          "--lower-guard-intrinsic",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--inject-tli-mappings",
      "--post-inline-ee-instrument",
      "--aggressive-instcombine",
      "--lower-widenable-condition",
      "--newgvn",
      "--sink",
      "--loop-versioning",
      "--early-cse-memssa",
      "--called-value-propagation",
      "--infer-address-spaces",
      "--mergereturn",
      "--loop-fusion",
      "--dse",
      "--die",
      "--bdce",
      "--loop-interchange",
      "--speculative-execution",
      "--cross-dso-cfi",
      "--loop-unswitch",
      "--slp-vectorizer",
      "--lower-guard-intrinsic",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}