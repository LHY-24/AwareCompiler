{
  "program_id": "linux-v0_5462.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 38,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 13,
    "oneSuccessor": 31,
    "twoPred": 11,
    "twoPredOneSuc": 4,
    "twoEach": 0,
    "twoSuccessor": 19,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 1,
    "BranchCount": 50,
    "returnInt": 37,
    "CriticalCount": 4,
    "NumEdges": 69,
    "const32Bit": 260,
    "const64Bit": 28,
    "numConstZeroes": 116,
    "numConstOnes": 98,
    "UncondBranches": 31,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 80,
    "NumAndInst": 6,
    "BlockMid": 14,
    "BlockLow": 68,
    "NumBitCastInst": 22,
    "NumBrInst": 50,
    "NumCallInst": 79,
    "NumGetElementPtrInst": 82,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 192,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 32,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 110,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 4,
    "NumZExtInst": 12,
    "TotalBlocks": 82,
    "TotalInsts": 706,
    "TotalMemInst": 543,
    "TotalFuncs": 51,
    "ArgsPhi": 2,
    "testUnary": 320
  },
  "baseline_oz_instcount": 706,
  "knowledge_base_entry": [
    "--adce",
    "--lower-expect",
    "--bdce",
    "--ipsccp",
    "--loop-deletion",
    "--sccp",
    "--licm",
    "--dse",
    "--reassociate",
    "--die",
    "--sroa",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--gvn-hoist",
    "--early-cse",
    "--inline",
    "--globalopt",
    "--ipsccp",
    "--loop-deletion",
    "--sccp",
    "--licm",
    "--dse",
    "--reassociate",
    "--die",
    "--sroa",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--gvn-hoist",
    "--inline",
    "--early-cse-memssa",
    "--loop-fusion",
    "--newgvn",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--licm",
    "--licm",
    "--dce",
    "--loop-simplifycfg",
    "--reassociate",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--rpo-functionattrs",
          "--pgo-memop-opt",
          "--add-discriminators",
          "--sroa",
          "--libcalls-shrinkwrap",
          "--coro-cleanup",
          "--called-value-propagation",
          "--licm",
          "--flattencfg",
          "--strip-debug-declare",
          "--infer-address-spaces",
          "--constprop",
          "--sancov",
          "--speculative-execution",
          "--cross-dso-cfi",
          "--alignment-from-assumptions",
          "--loop-predication",
          "--loop-sink",
          "--early-cse-memssa",
          "--hotcoldsplit",
          "--loop-unroll-and-jam",
          "--inject-tli-mappings",
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--loop-interchange",
          "--loop-guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--rpo-functionattrs",
      "--pgo-memop-opt",
      "--add-discriminators",
      "--sroa",
      "--libcalls-shrinkwrap",
      "--coro-cleanup",
      "--called-value-propagation",
      "--licm",
      "--flattencfg",
      "--strip-debug-declare",
      "--infer-address-spaces",
      "--constprop",
      "--sancov",
      "--speculative-execution",
      "--cross-dso-cfi",
      "--alignment-from-assumptions",
      "--loop-predication",
      "--loop-sink",
      "--early-cse-memssa",
      "--hotcoldsplit",
      "--loop-unroll-and-jam",
      "--inject-tli-mappings",
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--loop-interchange",
      "--loop-guard-widening"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}