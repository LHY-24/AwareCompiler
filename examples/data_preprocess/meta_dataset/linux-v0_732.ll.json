{
  "program_id": "linux-v0_732.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 84,
    "onePredOneSuc": 60,
    "onePredTwoSuc": 21,
    "oneSuccessor": 77,
    "twoPred": 59,
    "twoPredOneSuc": 17,
    "twoEach": 32,
    "twoSuccessor": 64,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 158,
    "BeginPhi": 0,
    "BranchCount": 141,
    "returnInt": 95,
    "CriticalCount": 44,
    "NumEdges": 205,
    "const32Bit": 214,
    "const64Bit": 25,
    "numConstZeroes": 75,
    "numConstOnes": 84,
    "UncondBranches": 77,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 32,
    "NumAllocaInst": 33,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 147,
    "NumBitCastInst": 2,
    "NumBrInst": 141,
    "NumCallInst": 164,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 64,
    "NumLShrInst": 1,
    "NumLoadInst": 195,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 30,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 91,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 158,
    "TotalInsts": 814,
    "TotalMemInst": 518,
    "TotalFuncs": 38,
    "ArgsPhi": 0,
    "testUnary": 263
  },
  "baseline_oz_instcount": 800,
  "knowledge_base_entry": [
    "--instsimplify",
    "--globalopt",
    "--loop-simplifycfg",
    "--dce",
    "--die",
    "--aggressive-instcombine",
    "--ipsccp",
    "--instcombine",
    "--adce",
    "--gvn",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--globalopt",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--sroa",
    "--inline",
    "--instsimplify",
    "--inline",
    "--newgvn",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-expect",
          "--guard-widening",
          "--insert-gcov-profiling",
          "--ee-instrument",
          "--gvn",
          "--newgvn",
          "--dce",
          "--lower-guard-intrinsic",
          "--barrier",
          "--lower-matrix-intrinsics",
          "--coro-elide",
          "--called-value-propagation",
          "--separate-const-offset-from-gep",
          "--slp-vectorizer",
          "--coro-cleanup",
          "--inferattrs",
          "--aggressive-instcombine",
          "--globalopt",
          "--functionattrs",
          "--loop-vectorize",
          "--loweratomic",
          "--callsite-splitting",
          "--loop-simplify",
          "--consthoist",
          "--loop-distribute",
          "--loop-versioning-licm",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-expect",
      "--guard-widening",
      "--insert-gcov-profiling",
      "--ee-instrument",
      "--gvn",
      "--newgvn",
      "--dce",
      "--lower-guard-intrinsic",
      "--barrier",
      "--lower-matrix-intrinsics",
      "--coro-elide",
      "--called-value-propagation",
      "--separate-const-offset-from-gep",
      "--slp-vectorizer",
      "--coro-cleanup",
      "--inferattrs",
      "--aggressive-instcombine",
      "--globalopt",
      "--functionattrs",
      "--loop-vectorize",
      "--loweratomic",
      "--callsite-splitting",
      "--loop-simplify",
      "--consthoist",
      "--loop-distribute",
      "--loop-versioning-licm",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}