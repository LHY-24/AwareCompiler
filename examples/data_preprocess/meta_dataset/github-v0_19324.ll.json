{
  "program_id": "github-v0_19324.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 3,
    "oneSuccessor": 20,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 6,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 30,
    "returnInt": 6,
    "CriticalCount": 4,
    "NumEdges": 40,
    "const32Bit": 77,
    "const64Bit": 9,
    "numConstZeroes": 47,
    "numConstOnes": 44,
    "UncondBranches": 20,
    "binaryConstArg": 36,
    "NumAShrInst": 4,
    "NumAddInst": 21,
    "NumAllocaInst": 29,
    "NumAndInst": 8,
    "BlockMid": 8,
    "BlockLow": 25,
    "NumBitCastInst": 1,
    "NumBrInst": 30,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 88,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 64,
    "NumSubInst": 6,
    "NumTruncInst": 17,
    "NumXorInst": 0,
    "NumZExtInst": 46,
    "TotalBlocks": 33,
    "TotalInsts": 376,
    "TotalMemInst": 226,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 185
  },
  "baseline_oz_instcount": 376,
  "knowledge_base_entry": [
    "--licm",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--gvn",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--sroa",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--coro-elide",
          "--loop-idiom",
          "--loop-data-prefetch",
          "--functionattrs",
          "--guard-widening",
          "--aggressive-instcombine",
          "--reassociate",
          "--callsite-splitting",
          "--irce",
          "--loweratomic",
          "--lowerswitch",
          "--instsimplify",
          "--newgvn",
          "--memcpyopt",
          "--argpromotion",
          "--sink",
          "--loop-predication",
          "--early-cse-memssa",
          "--redundant-dbg-inst-elim",
          "--rpo-functionattrs",
          "--cross-dso-cfi",
          "--gvn-hoist",
          "--sancov",
          "--loop-unswitch",
          "--loop-interchange",
          "--constprop",
          "--lower-expect"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--coro-elide",
      "--loop-idiom",
      "--loop-data-prefetch",
      "--functionattrs",
      "--guard-widening",
      "--aggressive-instcombine",
      "--reassociate",
      "--callsite-splitting",
      "--irce",
      "--loweratomic",
      "--lowerswitch",
      "--instsimplify",
      "--newgvn",
      "--memcpyopt",
      "--argpromotion",
      "--sink",
      "--loop-predication",
      "--early-cse-memssa",
      "--redundant-dbg-inst-elim",
      "--rpo-functionattrs",
      "--cross-dso-cfi",
      "--gvn-hoist",
      "--sancov",
      "--loop-unswitch",
      "--loop-interchange",
      "--constprop",
      "--lower-expect"
    ],
    "performance_vs_Oz": "+4.8%"
  }
}