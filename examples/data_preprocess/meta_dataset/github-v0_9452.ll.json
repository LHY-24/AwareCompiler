{
  "program_id": "github-v0_9452.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 1,
    "onePred": 6,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 3,
    "oneSuccessor": 3,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 2,
    "BranchCount": 10,
    "returnInt": 2,
    "CriticalCount": 8,
    "NumEdges": 17,
    "const32Bit": 7,
    "const64Bit": 4,
    "numConstZeroes": 9,
    "numConstOnes": 7,
    "UncondBranches": 3,
    "binaryConstArg": 6,
    "NumAShrInst": 2,
    "NumAddInst": 3,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 12,
    "NumBitCastInst": 0,
    "NumBrInst": 10,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 9,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 5,
    "NumRetInst": 2,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 7,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 12,
    "TotalInsts": 64,
    "TotalMemInst": 29,
    "TotalFuncs": 3,
    "ArgsPhi": 10,
    "testUnary": 13
  },
  "baseline_oz_instcount": 65,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--early-cse-memssa",
    "--newgvn",
    "--correlated-propagation",
    "--nary-reassociate",
    "--simplifycfg",
    "--instcombine",
    "--mldst-motion",
    "--mem2reg",
    "--elim-avail-extern",
    "--bdce",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--strip-debug-declare",
          "--redundant-dbg-inst-elim",
          "--insert-gcov-profiling",
          "--scalarizer",
          "--coro-cleanup",
          "--instsimplify",
          "--strip-nondebug",
          "--aggressive-instcombine",
          "--lower-widenable-condition",
          "--coro-early",
          "--globalsplit",
          "--tailcallelim",
          "--deadargelim",
          "--inline",
          "--strip-dead-prototypes",
          "--attributor"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--strip-debug-declare",
      "--redundant-dbg-inst-elim",
      "--insert-gcov-profiling",
      "--scalarizer",
      "--coro-cleanup",
      "--instsimplify",
      "--strip-nondebug",
      "--aggressive-instcombine",
      "--lower-widenable-condition",
      "--coro-early",
      "--globalsplit",
      "--tailcallelim",
      "--deadargelim",
      "--inline",
      "--strip-dead-prototypes",
      "--attributor"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}