{
  "program_id": "linux-v0_6974.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 9,
    "oneSuccessor": 21,
    "twoPred": 3,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 12,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 31,
    "CriticalCount": 0,
    "NumEdges": 48,
    "const32Bit": 182,
    "const64Bit": 10,
    "numConstZeroes": 69,
    "numConstOnes": 69,
    "UncondBranches": 21,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 56,
    "NumAndInst": 4,
    "BlockMid": 8,
    "BlockLow": 51,
    "NumBitCastInst": 13,
    "NumBrInst": 33,
    "NumCallInst": 68,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 159,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 88,
    "NumSubInst": 0,
    "NumTruncInst": 12,
    "NumXorInst": 2,
    "NumZExtInst": 10,
    "TotalBlocks": 59,
    "TotalInsts": 542,
    "TotalMemInst": 421,
    "TotalFuncs": 41,
    "ArgsPhi": 0,
    "testUnary": 255
  },
  "baseline_oz_instcount": 542,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--sroa",
    "--reassociate",
    "--globalopt",
    "--aggressive-instcombine",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--loop-instsimplify",
          "--post-inline-ee-instrument",
          "--irce",
          "--strip-dead-prototypes",
          "--coro-split",
          "--inferattrs",
          "--coro-early",
          "--strip-nondebug",
          "--slsr",
          "--inline",
          "--dse",
          "--tailcallelim",
          "--loop-deletion",
          "--loop-guard-widening",
          "--mldst-motion",
          "--elim-avail-extern",
          "--aggressive-instcombine",
          "--constprop",
          "--newgvn",
          "--loop-reroll",
          "--slp-vectorizer",
          "--adce",
          "--add-discriminators",
          "--consthoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--loop-instsimplify",
      "--post-inline-ee-instrument",
      "--irce",
      "--strip-dead-prototypes",
      "--coro-split",
      "--inferattrs",
      "--coro-early",
      "--strip-nondebug",
      "--slsr",
      "--inline",
      "--dse",
      "--tailcallelim",
      "--loop-deletion",
      "--loop-guard-widening",
      "--mldst-motion",
      "--elim-avail-extern",
      "--aggressive-instcombine",
      "--constprop",
      "--newgvn",
      "--loop-reroll",
      "--slp-vectorizer",
      "--adce",
      "--add-discriminators",
      "--consthoist"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}