{
  "program_id": "blas-v0_197.ll",
  "autophase_features": {
    "BBNumArgsHi": 6,
    "BBNumArgsLo": 1,
    "onePred": 19,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 9,
    "oneSuccessor": 12,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 15,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 5,
    "BBNoPhi": 21,
    "BeginPhi": 7,
    "BranchCount": 27,
    "returnInt": 0,
    "CriticalCount": 11,
    "NumEdges": 42,
    "const32Bit": 0,
    "const64Bit": 8,
    "numConstZeroes": 0,
    "numConstOnes": 2,
    "UncondBranches": 12,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 6,
    "BlockMid": 3,
    "BlockLow": 25,
    "NumBitCastInst": 17,
    "NumBrInst": 27,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 4,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 34,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 17,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 28,
    "TotalInsts": 199,
    "TotalMemInst": 43,
    "TotalFuncs": 2,
    "ArgsPhi": 95,
    "testUnary": 21
  },
  "baseline_oz_instcount": 197,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--licm",
    "--reassociate",
    "--loop-instsimplify",
    "--licm",
    "--load-store-vectorizer",
    "--slsr",
    "--early-cse",
    "--licm",
    "--bdce",
    "--elim-avail-extern",
    "--reassociate",
    "--slp-vectorizer",
    "--die",
    "--mem2reg",
    "--lower-expect",
    "--globalopt",
    "--loop-deletion",
    "--newgvn",
    "--mem2reg",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--sroa",
    "--load-store-vectorizer",
    "--newgvn",
    "--reassociate",
    "--instcombine",
    "-loop-reduce",
    "--gvn-hoist",
    "--die",
    "--dse",
    "--load-store-vectorizer",
    "--dse",
    "--load-store-vectorizer",
    "--dce",
    "--lower-expect",
    "--prune-eh",
    "--newgvn",
    "--bdce",
    "--licm",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--instsimplify",
    "--gvn-hoist",
    "--instcombine",
    "--die",
    "--simplifycfg",
    "--lower-expect",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--slp-vectorizer",
    "--gvn",
    "--flattencfg",
    "--instcombine",
    "--dce",
    "--load-store-vectorizer",
    "--die",
    "--mem2reg",
    "--lower-expect",
    "--globalopt",
    "--loop-deletion",
    "--gvn-hoist",
    "--simplifycfg",
    "--dse",
    "--sccp",
    "--instsimplify",
    "--load-store-vectorizer",
    "--sroa",
    "--early-cse",
    "--licm",
    "--bdce",
    "--elim-avail-extern",
    "--reassociate",
    "--slp-vectorizer",
    "--die",
    "--dse",
    "--mem2reg",
    "--simplifycfg",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--flattencfg",
    "--adce",
    "--early-cse-memssa",
    "--gvn",
    "--flattencfg",
    "--instcombine",
    "--dce",
    "--load-store-vectorizer",
    "--die",
    "--mem2reg",
    "--lower-expect",
    "--prune-eh",
    "--newgvn",
    "--bdce",
    "--licm",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--instsimplify",
    "--gvn-hoist",
    "--instcombine",
    "--die",
    "--simplifycfg",
    "--lower-expect",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-interchange",
          "--alignment-from-assumptions",
          "--die",
          "--lcssa",
          "--loop-versioning-licm",
          "--load-store-vectorizer",
          "--loweratomic",
          "--sancov",
          "--newgvn",
          "--loop-guard-widening",
          "--name-anon-globals",
          "--inline",
          "--ipconstprop",
          "--speculative-execution",
          "--instcombine",
          "--separate-const-offset-from-gep",
          "--loop-load-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-interchange",
      "--alignment-from-assumptions",
      "--die",
      "--lcssa",
      "--loop-versioning-licm",
      "--load-store-vectorizer",
      "--loweratomic",
      "--sancov",
      "--newgvn",
      "--loop-guard-widening",
      "--name-anon-globals",
      "--inline",
      "--ipconstprop",
      "--speculative-execution",
      "--instcombine",
      "--separate-const-offset-from-gep",
      "--loop-load-elim"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}