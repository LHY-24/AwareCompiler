{
  "program_id": "github-v0_32403.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 6,
    "onePred": 19,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 8,
    "oneSuccessor": 12,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 5,
    "twoSuccessor": 15,
    "morePreds": 3,
    "BB03Phi": 6,
    "BBHiPhi": 1,
    "BBNoPhi": 23,
    "BeginPhi": 7,
    "BranchCount": 27,
    "returnInt": 9,
    "CriticalCount": 11,
    "NumEdges": 42,
    "const32Bit": 63,
    "const64Bit": 0,
    "numConstZeroes": 6,
    "numConstOnes": 2,
    "UncondBranches": 12,
    "binaryConstArg": 60,
    "NumAShrInst": 5,
    "NumAddInst": 20,
    "NumAllocaInst": 0,
    "NumAndInst": 29,
    "BlockMid": 6,
    "BlockLow": 24,
    "NumBitCastInst": 0,
    "NumBrInst": 27,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 2,
    "NumMulInst": 11,
    "NumOrInst": 17,
    "NumPHIInst": 12,
    "NumRetInst": 3,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 23,
    "NumStoreInst": 2,
    "NumSubInst": 8,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 30,
    "TotalInsts": 213,
    "TotalMemInst": 22,
    "TotalFuncs": 8,
    "ArgsPhi": 30,
    "testUnary": 11
  },
  "baseline_oz_instcount": 215,
  "knowledge_base_entry": [
    "--loop-predication",
    "--gvn",
    "--inline",
    "--bdce",
    "--sccp",
    "--die",
    "--simplifycfg",
    "--loop-deletion",
    "--early-cse",
    "--flattencfg",
    "--load-store-vectorizer",
    "--die",
    "--elim-avail-extern",
    "--licm",
    "--sccp",
    "--die",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--dce",
    "--dse",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-predication",
          "--globalopt",
          "--ipsccp",
          "--alignment-from-assumptions",
          "--early-cse",
          "--inferattrs",
          "--bdce",
          "--simplifycfg",
          "--mergeicmps",
          "--argpromotion",
          "--slsr"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-predication",
      "--globalopt",
      "--ipsccp",
      "--alignment-from-assumptions",
      "--early-cse",
      "--inferattrs",
      "--bdce",
      "--simplifycfg",
      "--mergeicmps",
      "--argpromotion",
      "--slsr"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}