{
  "program_id": "linux-v0_9881.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 6,
    "oneSuccessor": 24,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 0,
    "twoSuccessor": 8,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 0,
    "BranchCount": 32,
    "returnInt": 13,
    "CriticalCount": 13,
    "NumEdges": 53,
    "const32Bit": 293,
    "const64Bit": 6,
    "numConstZeroes": 131,
    "numConstOnes": 81,
    "UncondBranches": 24,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 63,
    "NumAndInst": 5,
    "BlockMid": 15,
    "BlockLow": 38,
    "NumBitCastInst": 35,
    "NumBrInst": 32,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 101,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 165,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 88,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 53,
    "TotalInsts": 594,
    "TotalMemInst": 467,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 283
  },
  "baseline_oz_instcount": 594,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--licm",
    "--jump-threading",
    "--nary-reassociate",
    "--lower-expect",
    "--slp-vectorizer",
    "--inline",
    "--aggressive-instcombine",
    "--sroa",
    "--sccp",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--flattencfg",
          "--simplifycfg",
          "--loop-distribute",
          "--speculative-execution",
          "--tailcallelim",
          "--mergeicmps",
          "--load-store-vectorizer",
          "--strip-nondebug",
          "--aggressive-instcombine",
          "--partially-inline-libcalls",
          "--rpo-functionattrs",
          "--irce",
          "--strip",
          "--loop-unswitch",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--flattencfg",
      "--simplifycfg",
      "--loop-distribute",
      "--speculative-execution",
      "--tailcallelim",
      "--mergeicmps",
      "--load-store-vectorizer",
      "--strip-nondebug",
      "--aggressive-instcombine",
      "--partially-inline-libcalls",
      "--rpo-functionattrs",
      "--irce",
      "--strip",
      "--loop-unswitch",
      "--globaldce"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}