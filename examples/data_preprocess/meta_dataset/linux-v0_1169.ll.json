{
  "program_id": "linux-v0_1169.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 2,
    "oneSuccessor": 6,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 11,
    "CriticalCount": 0,
    "NumEdges": 14,
    "const32Bit": 30,
    "const64Bit": 11,
    "numConstZeroes": 9,
    "numConstOnes": 19,
    "UncondBranches": 6,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 16,
    "NumAndInst": 3,
    "BlockMid": 2,
    "BlockLow": 15,
    "NumBitCastInst": 4,
    "NumBrInst": 10,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 4,
    "TotalBlocks": 17,
    "TotalInsts": 151,
    "TotalMemInst": 106,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 70
  },
  "baseline_oz_instcount": 151,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--gvn",
    "--bdce",
    "--aggressive-instcombine",
    "--instcombine",
    "--reassociate",
    "-loop-reduce",
    "--slp-vectorizer",
    "--indvars",
    "--early-cse-memssa",
    "--licm",
    "--slp-vectorizer",
    "--dse",
    "--load-store-vectorizer",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--forceattrs",
          "--lower-matrix-intrinsics",
          "--loop-fusion",
          "--hotcoldsplit",
          "--aggressive-instcombine",
          "--ipsccp",
          "--inferattrs",
          "--sroa",
          "--flattencfg",
          "--redundant-dbg-inst-elim",
          "--mergereturn",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--forceattrs",
      "--lower-matrix-intrinsics",
      "--loop-fusion",
      "--hotcoldsplit",
      "--aggressive-instcombine",
      "--ipsccp",
      "--inferattrs",
      "--sroa",
      "--flattencfg",
      "--redundant-dbg-inst-elim",
      "--mergereturn",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+4.0%"
  }
}