{
  "program_id": "github-v0_30926.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 164,
    "const64Bit": 4,
    "numConstZeroes": 4,
    "numConstOnes": 98,
    "UncondBranches": 0,
    "binaryConstArg": 84,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 80,
    "NumAndInst": 54,
    "BlockMid": 33,
    "BlockLow": 12,
    "NumBitCastInst": 126,
    "NumBrInst": 0,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 15,
    "NumLoadInst": 138,
    "NumMulInst": 0,
    "NumOrInst": 18,
    "NumPHIInst": 0,
    "NumRetInst": 45,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 15,
    "NumStoreInst": 120,
    "NumSubInst": 0,
    "NumTruncInst": 36,
    "NumXorInst": 0,
    "NumZExtInst": 54,
    "TotalBlocks": 45,
    "TotalInsts": 705,
    "TotalMemInst": 342,
    "TotalFuncs": 45,
    "ArgsPhi": 0,
    "testUnary": 434
  },
  "baseline_oz_instcount": 705,
  "knowledge_base_entry": [
    "--loweratomic",
    "--early-cse-memssa",
    "--indvars",
    "--slp-vectorizer",
    "-loop-reduce",
    "--slsr",
    "--gvn",
    "--aggressive-instcombine",
    "--gvn",
    "--nary-reassociate",
    "--licm",
    "--dse",
    "--loop-rotate",
    "--inline",
    "--instsimplify",
    "--aggressive-instcombine",
    "--gvn",
    "--gvn-hoist",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--lower-expect",
    "--instcombine",
    "--simplifycfg",
    "--instcombine",
    "--elim-avail-extern",
    "--ipsccp",
    "--bdce",
    "--loop-simplifycfg",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-guard-widening",
          "--loop-distribute",
          "--canonicalize-aliases",
          "--simple-loop-unswitch",
          "--bdce",
          "--sccp",
          "--gvn",
          "--called-value-propagation",
          "--lcssa",
          "--loop-versioning",
          "--flattencfg",
          "--speculative-execution",
          "--sroa",
          "--globaldce",
          "--aggressive-instcombine",
          "--partially-inline-libcalls",
          "--coro-early",
          "--elim-avail-extern",
          "--loop-deletion",
          "--name-anon-globals",
          "--loop-data-prefetch",
          "--lowerswitch",
          "--ee-instrument",
          "--early-cse-memssa",
          "--partial-inliner",
          "--loop-sink",
          "--irce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-guard-widening",
      "--loop-distribute",
      "--canonicalize-aliases",
      "--simple-loop-unswitch",
      "--bdce",
      "--sccp",
      "--gvn",
      "--called-value-propagation",
      "--lcssa",
      "--loop-versioning",
      "--flattencfg",
      "--speculative-execution",
      "--sroa",
      "--globaldce",
      "--aggressive-instcombine",
      "--partially-inline-libcalls",
      "--coro-early",
      "--elim-avail-extern",
      "--loop-deletion",
      "--name-anon-globals",
      "--loop-data-prefetch",
      "--lowerswitch",
      "--ee-instrument",
      "--early-cse-memssa",
      "--partial-inliner",
      "--loop-sink",
      "--irce"
    ],
    "performance_vs_Oz": "+5.1%"
  }
}