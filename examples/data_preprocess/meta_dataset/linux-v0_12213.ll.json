{
  "program_id": "linux-v0_12213.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 57,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 18,
    "oneSuccessor": 45,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 26,
    "morePreds": 7,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 92,
    "BeginPhi": 1,
    "BranchCount": 71,
    "returnInt": 23,
    "CriticalCount": 9,
    "NumEdges": 106,
    "const32Bit": 295,
    "const64Bit": 16,
    "numConstZeroes": 134,
    "numConstOnes": 90,
    "UncondBranches": 45,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 70,
    "NumAndInst": 5,
    "BlockMid": 11,
    "BlockLow": 82,
    "NumBitCastInst": 23,
    "NumBrInst": 71,
    "NumCallInst": 47,
    "NumGetElementPtrInst": 85,
    "NumICmpInst": 29,
    "NumLShrInst": 1,
    "NumLoadInst": 207,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 3,
    "NumStoreInst": 113,
    "NumSubInst": 4,
    "NumTruncInst": 2,
    "NumXorInst": 4,
    "NumZExtInst": 5,
    "TotalBlocks": 93,
    "TotalInsts": 711,
    "TotalMemInst": 522,
    "TotalFuncs": 41,
    "ArgsPhi": 2,
    "testUnary": 318
  },
  "baseline_oz_instcount": 711,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "-loop-reduce",
    "--nary-reassociate",
    "--instcombine",
    "--dse",
    "--gvn-hoist",
    "--loop-reroll",
    "--simplifycfg",
    "--ipsccp",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--loop-predication",
          "--loop-data-prefetch",
          "--mergefunc",
          "--partially-inline-libcalls",
          "--inferattrs",
          "--insert-gcov-profiling",
          "--gvn",
          "--alignment-from-assumptions",
          "--lower-constant-intrinsics",
          "--globaldce",
          "--globalsplit",
          "--elim-avail-extern",
          "--ipsccp",
          "--loop-distribute",
          "--argpromotion",
          "--add-discriminators",
          "--functionattrs",
          "--partial-inliner",
          "--always-inline",
          "--loop-rotate",
          "--pgo-memop-opt",
          "--cross-dso-cfi"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--loop-predication",
      "--loop-data-prefetch",
      "--mergefunc",
      "--partially-inline-libcalls",
      "--inferattrs",
      "--insert-gcov-profiling",
      "--gvn",
      "--alignment-from-assumptions",
      "--lower-constant-intrinsics",
      "--globaldce",
      "--globalsplit",
      "--elim-avail-extern",
      "--ipsccp",
      "--loop-distribute",
      "--argpromotion",
      "--add-discriminators",
      "--functionattrs",
      "--partial-inliner",
      "--always-inline",
      "--loop-rotate",
      "--pgo-memop-opt",
      "--cross-dso-cfi"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}