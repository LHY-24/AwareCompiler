{
  "program_id": "linux-v0_11586.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 1,
    "oneSuccessor": 12,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 7,
    "CriticalCount": 0,
    "NumEdges": 24,
    "const32Bit": 53,
    "const64Bit": 8,
    "numConstZeroes": 9,
    "numConstOnes": 27,
    "UncondBranches": 12,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 22,
    "NumAndInst": 5,
    "BlockMid": 0,
    "BlockLow": 29,
    "NumBitCastInst": 2,
    "NumBrInst": 18,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 2,
    "NumZExtInst": 10,
    "TotalBlocks": 29,
    "TotalInsts": 177,
    "TotalMemInst": 104,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 73
  },
  "baseline_oz_instcount": 177,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--instcombine",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--reassociate",
    "--globalopt",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--dce",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--aggressive-instcombine",
          "--loop-guard-widening",
          "--licm",
          "--flattencfg",
          "--separate-const-offset-from-gep",
          "--loop-unroll-and-jam",
          "--slsr",
          "--loop-idiom",
          "--reg2mem",
          "--mergeicmps",
          "--always-inline",
          "--irce",
          "--nary-reassociate",
          "--early-cse",
          "--instnamer",
          "--reassociate",
          "--scalarizer",
          "--coro-cleanup",
          "--loop-deletion",
          "--constmerge",
          "--jump-threading",
          "--coro-elide",
          "--sroa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--aggressive-instcombine",
      "--loop-guard-widening",
      "--licm",
      "--flattencfg",
      "--separate-const-offset-from-gep",
      "--loop-unroll-and-jam",
      "--slsr",
      "--loop-idiom",
      "--reg2mem",
      "--mergeicmps",
      "--always-inline",
      "--irce",
      "--nary-reassociate",
      "--early-cse",
      "--instnamer",
      "--reassociate",
      "--scalarizer",
      "--coro-cleanup",
      "--loop-deletion",
      "--constmerge",
      "--jump-threading",
      "--coro-elide",
      "--sroa"
    ],
    "performance_vs_Oz": "+9.0%"
  }
}