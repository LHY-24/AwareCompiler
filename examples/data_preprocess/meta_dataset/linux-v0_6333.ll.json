{
  "program_id": "linux-v0_6333.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 25,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 4,
    "oneSuccessor": 25,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 1,
    "BranchCount": 36,
    "returnInt": 22,
    "CriticalCount": 3,
    "NumEdges": 51,
    "const32Bit": 184,
    "const64Bit": 42,
    "numConstZeroes": 101,
    "numConstOnes": 64,
    "UncondBranches": 25,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 53,
    "NumAndInst": 7,
    "BlockMid": 11,
    "BlockLow": 43,
    "NumBitCastInst": 12,
    "NumBrInst": 36,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 61,
    "NumICmpInst": 11,
    "NumLShrInst": 1,
    "NumLoadInst": 148,
    "NumMulInst": 0,
    "NumOrInst": 12,
    "NumPHIInst": 1,
    "NumRetInst": 17,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 91,
    "NumSubInst": 3,
    "NumTruncInst": 16,
    "NumXorInst": 0,
    "NumZExtInst": 26,
    "TotalBlocks": 54,
    "TotalInsts": 539,
    "TotalMemInst": 391,
    "TotalFuncs": 25,
    "ArgsPhi": 2,
    "testUnary": 256
  },
  "baseline_oz_instcount": 539,
  "knowledge_base_entry": [
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--mldst-motion",
    "--sroa",
    "--inline",
    "--aggressive-instcombine",
    "--dse",
    "--loop-simplifycfg",
    "--slsr",
    "--indvars",
    "--newgvn",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--loop-fusion",
          "--gvn-hoist",
          "--guard-widening",
          "--insert-gcov-profiling",
          "--redundant-dbg-inst-elim",
          "--lower-guard-intrinsic",
          "--coro-split",
          "--aggressive-instcombine",
          "--adce",
          "--lowerinvoke",
          "--called-value-propagation",
          "--loop-load-elim",
          "--mem2reg",
          "--globalopt",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--loop-fusion",
      "--gvn-hoist",
      "--guard-widening",
      "--insert-gcov-profiling",
      "--redundant-dbg-inst-elim",
      "--lower-guard-intrinsic",
      "--coro-split",
      "--aggressive-instcombine",
      "--adce",
      "--lowerinvoke",
      "--called-value-propagation",
      "--loop-load-elim",
      "--mem2reg",
      "--globalopt",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+5.9%"
  }
}