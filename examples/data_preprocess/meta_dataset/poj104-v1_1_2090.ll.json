{
  "program_id": "poj104-v1_1_2090.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 17,
    "const32Bit": 20,
    "const64Bit": 14,
    "numConstZeroes": 5,
    "numConstOnes": 14,
    "UncondBranches": 9,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 15,
    "NumBitCastInst": 14,
    "NumBrInst": 13,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 8,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 17,
    "TotalInsts": 95,
    "TotalMemInst": 55,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 39
  },
  "baseline_oz_instcount": 45,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--gvn",
    "--mldst-motion",
    "--instsimplify",
    "--prune-eh",
    "--early-cse",
    "--memcpyopt",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--flattencfg",
    "--elim-avail-extern",
    "--bdce",
    "--inline",
    "--globalopt",
    "--sccp",
    "--bdce",
    "--reassociate",
    "--inline",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--correlated-propagation",
    "--globalopt",
    "--mergefunc",
    "--elim-avail-extern",
    "--bdce",
    "--inline",
    "--globalopt",
    "--sccp",
    "--bdce",
    "--reassociate",
    "--inline",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--correlated-propagation",
    "--gvn-hoist",
    "--memcpyopt",
    "--mergefunc",
    "--lower-expect",
    "--early-cse-memssa",
    "--simplifycfg",
    "--mem2reg",
    "--memcpyopt",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--flattencfg",
    "--elim-avail-extern",
    "--die",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--licm",
    "--early-cse",
    "--prune-eh",
    "--lower-expect",
    "--early-cse",
    "--prune-eh",
    "--gvn",
    "--loop-reroll",
    "--newgvn",
    "--simplifycfg",
    "--sroa",
    "--gvn",
    "-loop-reduce",
    "--gvn",
    "--mergefunc",
    "--ipsccp",
    "--inline",
    "--licm",
    "--licm",
    "--adce",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--gvn-hoist",
    "--mem2reg",
    "--inline",
    "--newgvn",
    "--elim-avail-extern",
    "--globalopt",
    "--sccp",
    "--gvn-hoist",
    "--sccp",
    "--gvn-hoist",
    "--slsr",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--reassociate",
    "--mergefunc",
    "--instsimplify",
    "--prune-eh",
    "--early-cse",
    "--memcpyopt",
    "--instcombine",
    "--aggressive-instcombine",
    "--licm",
    "--inline",
    "--mldst-motion",
    "--simplifycfg",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--globaldce",
          "--coro-split",
          "--div-rem-pairs",
          "--mergefunc",
          "--partially-inline-libcalls",
          "--lowerinvoke",
          "--strip-debug-declare",
          "--loop-unroll-and-jam",
          "--consthoist",
          "--reg2mem",
          "--sancov",
          "--forceattrs",
          "--post-inline-ee-instrument",
          "--lower-guard-intrinsic",
          "--argpromotion",
          "--lowerswitch",
          "--loop-interchange",
          "--die",
          "--gvn",
          "--flattencfg",
          "--float2int",
          "--called-value-propagation",
          "--instcombine",
          "--rewrite-statepoints-for-gc",
          "--lower-widenable-condition",
          "--always-inline",
          "--simplifycfg",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--globaldce",
      "--coro-split",
      "--div-rem-pairs",
      "--mergefunc",
      "--partially-inline-libcalls",
      "--lowerinvoke",
      "--strip-debug-declare",
      "--loop-unroll-and-jam",
      "--consthoist",
      "--reg2mem",
      "--sancov",
      "--forceattrs",
      "--post-inline-ee-instrument",
      "--lower-guard-intrinsic",
      "--argpromotion",
      "--lowerswitch",
      "--loop-interchange",
      "--die",
      "--gvn",
      "--flattencfg",
      "--float2int",
      "--called-value-propagation",
      "--instcombine",
      "--rewrite-statepoints-for-gc",
      "--lower-widenable-condition",
      "--always-inline",
      "--simplifycfg",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}