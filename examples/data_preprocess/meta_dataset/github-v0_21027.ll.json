{
  "program_id": "github-v0_21027.ll",
  "autophase_features": {
    "BBNumArgsHi": 9,
    "BBNumArgsLo": 2,
    "onePred": 23,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 11,
    "oneSuccessor": 16,
    "twoPred": 15,
    "twoPredOneSuc": 4,
    "twoEach": 11,
    "twoSuccessor": 26,
    "morePreds": 4,
    "BB03Phi": 4,
    "BBHiPhi": 7,
    "BBNoPhi": 32,
    "BeginPhi": 11,
    "BranchCount": 42,
    "returnInt": 5,
    "CriticalCount": 29,
    "NumEdges": 68,
    "const32Bit": 63,
    "const64Bit": 14,
    "numConstZeroes": 11,
    "numConstOnes": 21,
    "UncondBranches": 16,
    "binaryConstArg": 38,
    "NumAShrInst": 2,
    "NumAddInst": 30,
    "NumAllocaInst": 4,
    "NumAndInst": 1,
    "BlockMid": 9,
    "BlockLow": 34,
    "NumBitCastInst": 12,
    "NumBrInst": 42,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 23,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 59,
    "NumRetInst": 1,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 31,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 43,
    "TotalInsts": 386,
    "TotalMemInst": 145,
    "TotalFuncs": 13,
    "ArgsPhi": 132,
    "testUnary": 87
  },
  "baseline_oz_instcount": 379,
  "knowledge_base_entry": [
    "--loop-rotate",
    "--sroa",
    "--instcombine",
    "--slp-vectorizer",
    "--dce",
    "--early-cse-memssa",
    "--newgvn",
    "--sroa",
    "--indvars",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--mergefunc",
    "--instcombine",
    "--slp-vectorizer",
    "--licm",
    "--adce",
    "--sccp",
    "--gvn-hoist",
    "--sccp",
    "--loop-instsimplify",
    "--lower-expect",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--simplifycfg",
    "--loop-reroll",
    "--correlated-propagation",
    "--sroa",
    "--bdce",
    "--gvn-hoist",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--mergefunc",
          "--nary-reassociate",
          "--instcombine",
          "--lower-widenable-condition",
          "--tailcallelim",
          "--inferattrs",
          "--mergereturn",
          "--loop-reroll",
          "--loop-versioning",
          "--loop-deletion",
          "--div-rem-pairs",
          "--constmerge",
          "--loop-interchange",
          "--memcpyopt",
          "--called-value-propagation",
          "--gvn",
          "--strip-nondebug",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--mergefunc",
      "--nary-reassociate",
      "--instcombine",
      "--lower-widenable-condition",
      "--tailcallelim",
      "--inferattrs",
      "--mergereturn",
      "--loop-reroll",
      "--loop-versioning",
      "--loop-deletion",
      "--div-rem-pairs",
      "--constmerge",
      "--loop-interchange",
      "--memcpyopt",
      "--called-value-propagation",
      "--gvn",
      "--strip-nondebug",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}