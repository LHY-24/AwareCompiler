{
  "program_id": "github-v0_49309.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 10,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 15,
    "returnInt": 7,
    "CriticalCount": 1,
    "NumEdges": 20,
    "const32Bit": 45,
    "const64Bit": 22,
    "numConstZeroes": 24,
    "numConstOnes": 24,
    "UncondBranches": 10,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 19,
    "NumAndInst": 4,
    "BlockMid": 3,
    "BlockLow": 15,
    "NumBitCastInst": 3,
    "NumBrInst": 15,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 5,
    "NumLShrInst": 3,
    "NumLoadInst": 35,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 1,
    "NumZExtInst": 2,
    "TotalBlocks": 18,
    "TotalInsts": 157,
    "TotalMemInst": 105,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 67
  },
  "baseline_oz_instcount": 157,
  "knowledge_base_entry": [
    "--globalopt",
    "--globaldce",
    "--aggressive-instcombine",
    "--dse",
    "--sccp",
    "--elim-avail-extern",
    "--bdce",
    "--mem2reg",
    "--slp-vectorizer",
    "-loop-reduce",
    "--jump-threading",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--correlated-propagation",
          "--loop-predication",
          "--nary-reassociate",
          "--lcssa",
          "--coro-early",
          "--loop-simplify",
          "--hotcoldsplit",
          "--early-cse-memssa",
          "--loop-unroll-and-jam",
          "--barrier",
          "--indvars",
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--infer-address-spaces",
          "--inject-tli-mappings"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--correlated-propagation",
      "--loop-predication",
      "--nary-reassociate",
      "--lcssa",
      "--coro-early",
      "--loop-simplify",
      "--hotcoldsplit",
      "--early-cse-memssa",
      "--loop-unroll-and-jam",
      "--barrier",
      "--indvars",
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--infer-address-spaces",
      "--inject-tli-mappings"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}