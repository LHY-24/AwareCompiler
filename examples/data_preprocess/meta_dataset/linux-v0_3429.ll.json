{
  "program_id": "linux-v0_3429.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 68,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 16,
    "oneSuccessor": 58,
    "twoPred": 20,
    "twoPredOneSuc": 5,
    "twoEach": 9,
    "twoSuccessor": 32,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 104,
    "BeginPhi": 1,
    "BranchCount": 90,
    "returnInt": 21,
    "CriticalCount": 11,
    "NumEdges": 125,
    "const32Bit": 223,
    "const64Bit": 48,
    "numConstZeroes": 104,
    "numConstOnes": 121,
    "UncondBranches": 58,
    "binaryConstArg": 44,
    "NumAShrInst": 2,
    "NumAddInst": 19,
    "NumAllocaInst": 62,
    "NumAndInst": 5,
    "BlockMid": 11,
    "BlockLow": 94,
    "NumBitCastInst": 8,
    "NumBrInst": 90,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 65,
    "NumICmpInst": 38,
    "NumLShrInst": 0,
    "NumLoadInst": 173,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 14,
    "NumSExtInst": 10,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 91,
    "NumSubInst": 0,
    "NumTruncInst": 29,
    "NumXorInst": 18,
    "NumZExtInst": 28,
    "TotalBlocks": 105,
    "TotalInsts": 708,
    "TotalMemInst": 436,
    "TotalFuncs": 23,
    "ArgsPhi": 2,
    "testUnary": 317
  },
  "baseline_oz_instcount": 710,
  "knowledge_base_entry": [
    "--ipsccp",
    "--aggressive-instcombine",
    "--lower-expect",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--lowerinvoke",
          "--redundant-dbg-inst-elim",
          "--lcssa",
          "--speculative-execution",
          "--float2int",
          "--scalarizer",
          "--canonicalize-aliases",
          "--aggressive-instcombine",
          "--gvn",
          "--indvars",
          "--loop-data-prefetch",
          "--loop-simplifycfg",
          "--strip",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--lowerinvoke",
      "--redundant-dbg-inst-elim",
      "--lcssa",
      "--speculative-execution",
      "--float2int",
      "--scalarizer",
      "--canonicalize-aliases",
      "--aggressive-instcombine",
      "--gvn",
      "--indvars",
      "--loop-data-prefetch",
      "--loop-simplifycfg",
      "--strip",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}