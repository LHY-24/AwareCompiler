{
  "program_id": "linux-v0_11670.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 5,
    "oneSuccessor": 12,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 10,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 20,
    "CriticalCount": 4,
    "NumEdges": 32,
    "const32Bit": 179,
    "const64Bit": 28,
    "numConstZeroes": 86,
    "numConstOnes": 72,
    "UncondBranches": 12,
    "binaryConstArg": 17,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 51,
    "NumAndInst": 5,
    "BlockMid": 8,
    "BlockLow": 40,
    "NumBitCastInst": 16,
    "NumBrInst": 22,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 62,
    "NumICmpInst": 9,
    "NumLShrInst": 1,
    "NumLoadInst": 118,
    "NumMulInst": 1,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 26,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 71,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 2,
    "NumZExtInst": 5,
    "TotalBlocks": 48,
    "TotalInsts": 463,
    "TotalMemInst": 354,
    "TotalFuncs": 39,
    "ArgsPhi": 0,
    "testUnary": 202
  },
  "baseline_oz_instcount": 463,
  "knowledge_base_entry": [
    "--loop-sink",
    "--early-cse",
    "--simplifycfg",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--instsimplify",
    "--load-store-vectorizer",
    "--loop-reroll",
    "-loop-reduce",
    "--reassociate",
    "--globalopt",
    "--loweratomic"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--loop-rotate",
          "--load-store-vectorizer",
          "--strip",
          "--aggressive-instcombine",
          "--barrier",
          "--loop-versioning",
          "--mem2reg",
          "--mldst-motion",
          "--slp-vectorizer",
          "--functionattrs",
          "--constprop",
          "--coro-split",
          "--dse",
          "--indvars",
          "--instsimplify",
          "--adce",
          "--sroa",
          "--loop-fusion",
          "--bdce",
          "--instnamer",
          "--loop-predication",
          "--loop-vectorize",
          "--newgvn",
          "--ipconstprop",
          "--loop-sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--loop-rotate",
      "--load-store-vectorizer",
      "--strip",
      "--aggressive-instcombine",
      "--barrier",
      "--loop-versioning",
      "--mem2reg",
      "--mldst-motion",
      "--slp-vectorizer",
      "--functionattrs",
      "--constprop",
      "--coro-split",
      "--dse",
      "--indvars",
      "--instsimplify",
      "--adce",
      "--sroa",
      "--loop-fusion",
      "--bdce",
      "--instnamer",
      "--loop-predication",
      "--loop-vectorize",
      "--newgvn",
      "--ipconstprop",
      "--loop-sink"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}