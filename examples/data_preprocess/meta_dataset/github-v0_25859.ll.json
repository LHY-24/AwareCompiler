{
  "program_id": "github-v0_25859.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 10,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 5,
    "CriticalCount": 1,
    "NumEdges": 22,
    "const32Bit": 26,
    "const64Bit": 4,
    "numConstZeroes": 9,
    "numConstOnes": 13,
    "UncondBranches": 10,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 17,
    "NumBitCastInst": 3,
    "NumBrInst": 16,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 17,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 18,
    "TotalInsts": 89,
    "TotalMemInst": 55,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 34
  },
  "baseline_oz_instcount": 90,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--instsimplify",
    "--early-cse",
    "--inline",
    "--mldst-motion",
    "--dse",
    "--mldst-motion",
    "--gvn-hoist",
    "--sccp",
    "--gvn-hoist",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--deadargelim",
          "--lower-expect",
          "--globaldce",
          "--float2int",
          "--gvn-hoist",
          "--strip-dead-prototypes",
          "--lcssa",
          "--speculative-execution",
          "--alignment-from-assumptions",
          "--instcombine",
          "--adce",
          "--consthoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--deadargelim",
      "--lower-expect",
      "--globaldce",
      "--float2int",
      "--gvn-hoist",
      "--strip-dead-prototypes",
      "--lcssa",
      "--speculative-execution",
      "--alignment-from-assumptions",
      "--instcombine",
      "--adce",
      "--consthoist"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}