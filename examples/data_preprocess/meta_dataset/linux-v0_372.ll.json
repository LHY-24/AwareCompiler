{
  "program_id": "linux-v0_372.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 6,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 9,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 5,
    "CriticalCount": 4,
    "NumEdges": 33,
    "const32Bit": 136,
    "const64Bit": 7,
    "numConstZeroes": 69,
    "numConstOnes": 35,
    "UncondBranches": 15,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 25,
    "NumAndInst": 2,
    "BlockMid": 6,
    "BlockLow": 23,
    "NumBitCastInst": 9,
    "NumBrInst": 24,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 47,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 77,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 48,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 29,
    "TotalInsts": 278,
    "TotalMemInst": 208,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 123
  },
  "baseline_oz_instcount": 278,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--die",
    "--loop-instsimplify",
    "--gvn",
    "--aggressive-instcombine",
    "--newgvn",
    "--die",
    "--lower-expect",
    "--simplifycfg",
    "--gvn",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--licm",
    "--lower-expect",
    "--correlated-propagation",
    "--die",
    "--early-cse-memssa",
    "--inline",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--ipsccp",
    "--licm",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--globalopt",
    "--globaldce",
    "--ipsccp",
    "--die",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--loop-predication",
          "--aggressive-instcombine",
          "--speculative-execution",
          "--simplifycfg",
          "--separate-const-offset-from-gep",
          "--always-inline",
          "--consthoist",
          "--constprop",
          "--coro-elide",
          "--inferattrs",
          "--slsr",
          "--strip",
          "--lower-matrix-intrinsics",
          "--flattencfg",
          "--loop-versioning-licm",
          "--loop-instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--loop-predication",
      "--aggressive-instcombine",
      "--speculative-execution",
      "--simplifycfg",
      "--separate-const-offset-from-gep",
      "--always-inline",
      "--consthoist",
      "--constprop",
      "--coro-elide",
      "--inferattrs",
      "--slsr",
      "--strip",
      "--lower-matrix-intrinsics",
      "--flattencfg",
      "--loop-versioning-licm",
      "--loop-instsimplify"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}