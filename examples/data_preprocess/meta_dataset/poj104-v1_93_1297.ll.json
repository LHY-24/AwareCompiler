{
  "program_id": "poj104-v1_93_1297.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 5,
    "oneSuccessor": 13,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 9,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 5,
    "CriticalCount": 7,
    "NumEdges": 35,
    "const32Bit": 41,
    "const64Bit": 5,
    "numConstZeroes": 13,
    "numConstOnes": 13,
    "UncondBranches": 13,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 30,
    "NumBitCastInst": 9,
    "NumBrInst": 22,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 11,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 31,
    "TotalInsts": 144,
    "TotalMemInst": 75,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 52
  },
  "baseline_oz_instcount": 69,
  "knowledge_base_entry": [
    "--sccp",
    "--newgvn",
    "--early-cse",
    "--reassociate",
    "--mergefunc",
    "--dce",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--jump-threading",
    "--early-cse-memssa",
    "--loop-reroll",
    "--gvn-hoist",
    "--simplifycfg",
    "--early-cse-memssa",
    "--flattencfg",
    "--loop-simplifycfg",
    "--sccp",
    "--loop-instsimplify",
    "--dce",
    "--inline",
    "--loop-simplifycfg",
    "--inline",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--instsimplify",
    "--lower-expect",
    "--slp-vectorizer",
    "--sroa",
    "--nary-reassociate",
    "--instsimplify",
    "--gvn-hoist",
    "--simplifycfg",
    "--inline",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--early-cse",
    "--bdce",
    "--mem2reg",
    "--globalopt",
    "--newgvn",
    "--jump-threading",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--licm",
    "--flattencfg",
    "--jump-threading",
    "-loop-reduce",
    "--instcombine",
    "--sccp",
    "--dse",
    "--aggressive-instcombine",
    "--jump-threading",
    "--correlated-propagation",
    "--mergefunc",
    "--lower-expect",
    "--ipsccp",
    "--globaldce",
    "--ipsccp",
    "--mem2reg",
    "--ipsccp",
    "--globaldce",
    "--ipsccp",
    "--lower-expect",
    "--early-cse",
    "--inline",
    "--load-store-vectorizer",
    "--die",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--mergefunc",
    "--early-cse-memssa",
    "--dse",
    "--aggressive-instcombine",
    "--jump-threading",
    "--correlated-propagation",
    "--mergefunc",
    "--lower-expect",
    "--ipsccp",
    "--early-cse",
    "--adce",
    "--dse",
    "--licm",
    "--instcombine",
    "--memcpyopt",
    "--gvn-hoist",
    "--instcombine",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--simplifycfg",
    "--loop-deletion",
    "--early-cse",
    "--dce",
    "--early-cse-memssa",
    "--loop-rotate",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--jump-threading",
    "--loop-instsimplify",
    "--inline",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--mem2reg",
    "--memcpyopt",
    "--instcombine",
    "--memcpyopt",
    "--gvn-hoist",
    "--instcombine",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--simplifycfg",
    "--dse",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--loop-versioning",
          "--constprop",
          "--barrier",
          "--inject-tli-mappings",
          "--nary-reassociate",
          "--ipsccp",
          "--name-anon-globals",
          "--newgvn",
          "--lower-guard-intrinsic",
          "--strip-nondebug",
          "--jump-threading",
          "--inline",
          "--constmerge",
          "--instcombine",
          "--irce",
          "--alignment-from-assumptions",
          "--pgo-memop-opt",
          "--dce",
          "--coro-early",
          "--lower-expect",
          "--globalopt",
          "--ipconstprop",
          "--loop-reroll",
          "--always-inline",
          "--simplifycfg",
          "--insert-gcov-profiling",
          "--add-discriminators",
          "--loop-predication",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--loop-versioning",
      "--constprop",
      "--barrier",
      "--inject-tli-mappings",
      "--nary-reassociate",
      "--ipsccp",
      "--name-anon-globals",
      "--newgvn",
      "--lower-guard-intrinsic",
      "--strip-nondebug",
      "--jump-threading",
      "--inline",
      "--constmerge",
      "--instcombine",
      "--irce",
      "--alignment-from-assumptions",
      "--pgo-memop-opt",
      "--dce",
      "--coro-early",
      "--lower-expect",
      "--globalopt",
      "--ipconstprop",
      "--loop-reroll",
      "--always-inline",
      "--simplifycfg",
      "--insert-gcov-profiling",
      "--add-discriminators",
      "--loop-predication",
      "--licm"
    ],
    "performance_vs_Oz": "+8.7%"
  }
}