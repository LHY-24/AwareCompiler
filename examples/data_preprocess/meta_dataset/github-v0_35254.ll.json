{
  "program_id": "github-v0_35254.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 2,
    "oneSuccessor": 25,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 7,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 6,
    "CriticalCount": 0,
    "NumEdges": 43,
    "const32Bit": 51,
    "const64Bit": 3,
    "numConstZeroes": 11,
    "numConstOnes": 34,
    "UncondBranches": 25,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 22,
    "NumAllocaInst": 15,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 28,
    "NumBitCastInst": 0,
    "NumBrInst": 34,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 85,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 19,
    "NumSelectInst": 0,
    "NumShlInst": 10,
    "NumStoreInst": 32,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 17,
    "TotalBlocks": 36,
    "TotalInsts": 283,
    "TotalMemInst": 157,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 141
  },
  "baseline_oz_instcount": 283,
  "knowledge_base_entry": [
    "--dse",
    "--sroa",
    "--gvn",
    "--aggressive-instcombine",
    "--inline",
    "--gvn",
    "--flattencfg",
    "--gvn-hoist",
    "--gvn-hoist",
    "--loop-deletion",
    "--elim-avail-extern",
    "--dce",
    "--early-cse-memssa",
    "--newgvn",
    "--flattencfg",
    "--mem2reg",
    "--flattencfg",
    "--aggressive-instcombine",
    "--dse",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--strip-dead-prototypes",
          "--loop-interchange",
          "--lower-widenable-condition",
          "--loweratomic",
          "--hotcoldsplit",
          "--callsite-splitting",
          "--sccp",
          "--loop-guard-widening",
          "--licm",
          "--forceattrs",
          "--lower-guard-intrinsic",
          "--always-inline",
          "--add-discriminators",
          "--sink",
          "--lowerinvoke",
          "--insert-gcov-profiling",
          "--aggressive-instcombine",
          "--simplifycfg",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--strip-dead-prototypes",
      "--loop-interchange",
      "--lower-widenable-condition",
      "--loweratomic",
      "--hotcoldsplit",
      "--callsite-splitting",
      "--sccp",
      "--loop-guard-widening",
      "--licm",
      "--forceattrs",
      "--lower-guard-intrinsic",
      "--always-inline",
      "--add-discriminators",
      "--sink",
      "--lowerinvoke",
      "--insert-gcov-profiling",
      "--aggressive-instcombine",
      "--simplifycfg",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+5.3%"
  }
}