{
  "program_id": "github-v0_43216.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 3,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 7,
    "BeginPhi": 1,
    "BranchCount": 6,
    "returnInt": 49,
    "CriticalCount": 3,
    "NumEdges": 9,
    "const32Bit": 66,
    "const64Bit": 25,
    "numConstZeroes": 34,
    "numConstOnes": 28,
    "UncondBranches": 3,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 0,
    "NumAndInst": 3,
    "BlockMid": 2,
    "BlockLow": 6,
    "NumBitCastInst": 0,
    "NumBrInst": 6,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 5,
    "NumMulInst": 13,
    "NumOrInst": 7,
    "NumPHIInst": 1,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 9,
    "TotalBlocks": 8,
    "TotalInsts": 144,
    "TotalMemInst": 80,
    "TotalFuncs": 9,
    "ArgsPhi": 2,
    "testUnary": 17
  },
  "baseline_oz_instcount": 155,
  "knowledge_base_entry": [
    "--globalopt",
    "--mergefunc",
    "--early-cse",
    "--nary-reassociate",
    "--licm",
    "--early-cse-memssa",
    "-loop-reduce",
    "--simplifycfg",
    "--dse",
    "--mem2reg",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--gvn-hoist",
          "--break-crit-edges",
          "--loop-load-elim",
          "--reg2mem",
          "--coro-cleanup",
          "--rewrite-statepoints-for-gc",
          "--loop-idiom",
          "--loop-simplify",
          "--strip-dead-prototypes",
          "--rpo-functionattrs",
          "--mem2reg",
          "--strip",
          "-loop-reduce",
          "--strip-nondebug",
          "--dse",
          "--lowerswitch",
          "--elim-avail-extern",
          "--jump-threading",
          "--slp-vectorizer",
          "--strip-debug-declare",
          "--ipconstprop",
          "--coro-early",
          "--newgvn",
          "--constprop",
          "--float2int",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+14.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--gvn-hoist",
      "--break-crit-edges",
      "--loop-load-elim",
      "--reg2mem",
      "--coro-cleanup",
      "--rewrite-statepoints-for-gc",
      "--loop-idiom",
      "--loop-simplify",
      "--strip-dead-prototypes",
      "--rpo-functionattrs",
      "--mem2reg",
      "--strip",
      "-loop-reduce",
      "--strip-nondebug",
      "--dse",
      "--lowerswitch",
      "--elim-avail-extern",
      "--jump-threading",
      "--slp-vectorizer",
      "--strip-debug-declare",
      "--ipconstprop",
      "--coro-early",
      "--newgvn",
      "--constprop",
      "--float2int",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+14.8%"
  }
}