{
  "program_id": "github-v0_40978.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 36,
    "const64Bit": 27,
    "numConstZeroes": 34,
    "numConstOnes": 22,
    "UncondBranches": 11,
    "binaryConstArg": 8,
    "NumAShrInst": 1,
    "NumAddInst": 5,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 4,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 28,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 11,
    "TotalBlocks": 21,
    "TotalInsts": 150,
    "TotalMemInst": 90,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 66
  },
  "baseline_oz_instcount": 150,
  "knowledge_base_entry": [
    "--loweratomic",
    "--aggressive-instcombine",
    "--die",
    "--elim-avail-extern",
    "--flattencfg",
    "--simplifycfg",
    "--mldst-motion",
    "--licm",
    "--gvn",
    "--dse",
    "--dce",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--cross-dso-cfi",
          "--globalsplit",
          "--strip-nondebug",
          "--forceattrs",
          "--lcssa",
          "--instnamer",
          "--rewrite-statepoints-for-gc",
          "--early-cse",
          "--aggressive-instcombine",
          "--lower-constant-intrinsics",
          "--argpromotion",
          "--mldst-motion",
          "--called-value-propagation",
          "--coro-elide",
          "--pgo-memop-opt",
          "--speculative-execution",
          "--loop-predication",
          "--inferattrs",
          "--float2int",
          "--adce",
          "--nary-reassociate",
          "--strip-dead-prototypes",
          "--die",
          "--loop-versioning",
          "--irce",
          "--insert-gcov-profiling",
          "--coro-cleanup",
          "--loop-simplifycfg",
          "--mergeicmps"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--cross-dso-cfi",
      "--globalsplit",
      "--strip-nondebug",
      "--forceattrs",
      "--lcssa",
      "--instnamer",
      "--rewrite-statepoints-for-gc",
      "--early-cse",
      "--aggressive-instcombine",
      "--lower-constant-intrinsics",
      "--argpromotion",
      "--mldst-motion",
      "--called-value-propagation",
      "--coro-elide",
      "--pgo-memop-opt",
      "--speculative-execution",
      "--loop-predication",
      "--inferattrs",
      "--float2int",
      "--adce",
      "--nary-reassociate",
      "--strip-dead-prototypes",
      "--die",
      "--loop-versioning",
      "--irce",
      "--insert-gcov-profiling",
      "--coro-cleanup",
      "--loop-simplifycfg",
      "--mergeicmps"
    ],
    "performance_vs_Oz": "+6.0%"
  }
}