{
  "program_id": "github-v0_3681.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 7,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 12,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 25,
    "returnInt": 0,
    "CriticalCount": 7,
    "NumEdges": 37,
    "const32Bit": 177,
    "const64Bit": 84,
    "numConstZeroes": 107,
    "numConstOnes": 65,
    "UncondBranches": 13,
    "binaryConstArg": 32,
    "NumAShrInst": 4,
    "NumAddInst": 9,
    "NumAllocaInst": 45,
    "NumAndInst": 13,
    "BlockMid": 12,
    "BlockLow": 17,
    "NumBitCastInst": 3,
    "NumBrInst": 25,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 104,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 186,
    "NumMulInst": 3,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 89,
    "NumSubInst": 4,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 34,
    "TotalBlocks": 29,
    "TotalInsts": 578,
    "TotalMemInst": 447,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 284
  },
  "baseline_oz_instcount": 578,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--early-cse",
    "--prune-eh",
    "--instcombine",
    "--prune-eh",
    "--instsimplify",
    "--loop-instsimplify",
    "--reassociate",
    "--gvn-hoist",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--instsimplify",
    "--jump-threading",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mem2reg",
          "--coro-elide",
          "--simplifycfg",
          "--redundant-dbg-inst-elim",
          "--lower-matrix-intrinsics",
          "--functionattrs",
          "--coro-cleanup",
          "--guard-widening",
          "--loop-instsimplify",
          "--dse",
          "--argpromotion",
          "--globalsplit",
          "--slp-vectorizer",
          "--lcssa",
          "--barrier",
          "--loop-rotate",
          "--mergereturn",
          "--loop-reroll",
          "--loop-versioning",
          "--aggressive-instcombine",
          "--globalopt",
          "--irce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mem2reg",
      "--coro-elide",
      "--simplifycfg",
      "--redundant-dbg-inst-elim",
      "--lower-matrix-intrinsics",
      "--functionattrs",
      "--coro-cleanup",
      "--guard-widening",
      "--loop-instsimplify",
      "--dse",
      "--argpromotion",
      "--globalsplit",
      "--slp-vectorizer",
      "--lcssa",
      "--barrier",
      "--loop-rotate",
      "--mergereturn",
      "--loop-reroll",
      "--loop-versioning",
      "--aggressive-instcombine",
      "--globalopt",
      "--irce"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}