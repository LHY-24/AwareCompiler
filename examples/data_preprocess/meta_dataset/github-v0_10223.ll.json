{
  "program_id": "github-v0_10223.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 4,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 0,
    "oneSuccessor": 4,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 5,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 8,
    "BeginPhi": 3,
    "BranchCount": 10,
    "returnInt": 5,
    "CriticalCount": 8,
    "NumEdges": 16,
    "const32Bit": 11,
    "const64Bit": 5,
    "numConstZeroes": 8,
    "numConstOnes": 4,
    "UncondBranches": 4,
    "binaryConstArg": 6,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 10,
    "NumBitCastInst": 2,
    "NumBrInst": 10,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 6,
    "NumLShrInst": 2,
    "NumLoadInst": 9,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 1,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 3,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 11,
    "TotalInsts": 72,
    "TotalMemInst": 32,
    "TotalFuncs": 9,
    "ArgsPhi": 8,
    "testUnary": 16
  },
  "baseline_oz_instcount": 70,
  "knowledge_base_entry": [
    "--flattencfg",
    "--instcombine",
    "--instsimplify",
    "--die",
    "--reassociate",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--mergefunc",
    "--ipsccp",
    "--jump-threading",
    "-loop-reduce",
    "--gvn-hoist",
    "--loop-reroll",
    "--mergefunc",
    "--ipsccp",
    "--sroa",
    "--sccp",
    "--bdce",
    "--loop-instsimplify",
    "--adce",
    "--mergefunc",
    "--memcpyopt",
    "--loop-reroll",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--early-cse-memssa",
    "--adce",
    "--gvn",
    "--prune-eh",
    "--gvn",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--instsimplify",
    "--die",
    "--reassociate",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--mergefunc",
    "--ipsccp",
    "--jump-threading",
    "--die",
    "--lower-expect",
    "--instsimplify",
    "--jump-threading",
    "--flattencfg",
    "--early-cse-memssa",
    "--bdce",
    "--inline",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--instsimplify",
    "--die",
    "--reassociate",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--mergefunc",
    "--ipsccp",
    "--jump-threading",
    "--die",
    "--slp-vectorizer",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--dce",
          "--load-store-vectorizer",
          "--loop-rotate",
          "--loop-interchange",
          "--nary-reassociate",
          "--mem2reg",
          "--early-cse",
          "--prune-eh",
          "--lcssa",
          "--sink",
          "--coro-split",
          "--ipsccp",
          "--simple-loop-unswitch",
          "--functionattrs",
          "--loop-predication",
          "--inferattrs",
          "--simplifycfg",
          "--slp-vectorizer",
          "--bdce",
          "--mergefunc",
          "--scalarizer",
          "--infer-address-spaces",
          "--deadargelim",
          "--mergeicmps",
          "--sroa",
          "--coro-cleanup"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--dce",
      "--load-store-vectorizer",
      "--loop-rotate",
      "--loop-interchange",
      "--nary-reassociate",
      "--mem2reg",
      "--early-cse",
      "--prune-eh",
      "--lcssa",
      "--sink",
      "--coro-split",
      "--ipsccp",
      "--simple-loop-unswitch",
      "--functionattrs",
      "--loop-predication",
      "--inferattrs",
      "--simplifycfg",
      "--slp-vectorizer",
      "--bdce",
      "--mergefunc",
      "--scalarizer",
      "--infer-address-spaces",
      "--deadargelim",
      "--mergeicmps",
      "--sroa",
      "--coro-cleanup"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}