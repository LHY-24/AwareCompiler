{
  "program_id": "linux-v0_3058.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 48,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 18,
    "oneSuccessor": 42,
    "twoPred": 16,
    "twoPredOneSuc": 9,
    "twoEach": 5,
    "twoSuccessor": 25,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 0,
    "BranchCount": 67,
    "returnInt": 19,
    "CriticalCount": 10,
    "NumEdges": 92,
    "const32Bit": 129,
    "const64Bit": 14,
    "numConstZeroes": 55,
    "numConstOnes": 74,
    "UncondBranches": 42,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 48,
    "NumAndInst": 9,
    "BlockMid": 3,
    "BlockLow": 78,
    "NumBitCastInst": 6,
    "NumBrInst": 67,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 24,
    "NumLShrInst": 4,
    "NumLoadInst": 150,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 70,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 10,
    "NumZExtInst": 17,
    "TotalBlocks": 81,
    "TotalInsts": 528,
    "TotalMemInst": 344,
    "TotalFuncs": 26,
    "ArgsPhi": 0,
    "testUnary": 244
  },
  "baseline_oz_instcount": 528,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--sroa",
    "--mldst-motion",
    "--early-cse-memssa",
    "--flattencfg",
    "--early-cse",
    "--die",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--instcombine",
    "--inline",
    "--early-cse-memssa",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--instsimplify",
    "--jump-threading",
    "--newgvn",
    "--aggressive-instcombine",
    "--adce",
    "--inline",
    "--mergefunc",
    "--adce",
    "--gvn",
    "--mergefunc",
    "--sroa",
    "--inline",
    "--instsimplify",
    "--loop-instsimplify",
    "--ipsccp",
    "--flattencfg",
    "--early-cse",
    "--die",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--instcombine",
    "--inline",
    "--early-cse-memssa",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--inline",
    "--memcpyopt",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--adce",
    "--inline",
    "--mergefunc",
    "--adce",
    "--gvn",
    "--mergefunc",
    "--sroa",
    "--inline",
    "--mergefunc",
    "--lower-expect",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--name-anon-globals",
          "--post-inline-ee-instrument",
          "--add-discriminators",
          "--instcombine",
          "--lcssa",
          "--slsr",
          "--slp-vectorizer",
          "--adce",
          "--globalsplit",
          "--loop-fusion",
          "--loop-guard-widening",
          "--loweratomic",
          "--aggressive-instcombine",
          "--loop-versioning-licm",
          "--separate-const-offset-from-gep",
          "--ee-instrument",
          "--coro-split",
          "--lower-constant-intrinsics",
          "--lower-widenable-condition"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--name-anon-globals",
      "--post-inline-ee-instrument",
      "--add-discriminators",
      "--instcombine",
      "--lcssa",
      "--slsr",
      "--slp-vectorizer",
      "--adce",
      "--globalsplit",
      "--loop-fusion",
      "--loop-guard-widening",
      "--loweratomic",
      "--aggressive-instcombine",
      "--loop-versioning-licm",
      "--separate-const-offset-from-gep",
      "--ee-instrument",
      "--coro-split",
      "--lower-constant-intrinsics",
      "--lower-widenable-condition"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}