{
  "program_id": "opencv-v0_316.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 9,
    "onePred": 18,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 9,
    "oneSuccessor": 14,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 17,
    "morePreds": 4,
    "BB03Phi": 9,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 9,
    "BranchCount": 31,
    "returnInt": 2,
    "CriticalCount": 16,
    "NumEdges": 48,
    "const32Bit": 142,
    "const64Bit": 95,
    "numConstZeroes": 96,
    "numConstOnes": 54,
    "UncondBranches": 14,
    "binaryConstArg": 37,
    "NumAShrInst": 18,
    "NumAddInst": 26,
    "NumAllocaInst": 1,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 34,
    "NumBitCastInst": 9,
    "NumBrInst": 31,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 93,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 9,
    "NumRetInst": 8,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 59,
    "NumSubInst": 20,
    "NumTruncInst": 1,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 39,
    "TotalInsts": 372,
    "TotalMemInst": 209,
    "TotalFuncs": 12,
    "ArgsPhi": 20,
    "testUnary": 65
  },
  "baseline_oz_instcount": 367,
  "knowledge_base_entry": [
    "--jump-threading",
    "--loop-simplifycfg",
    "--reassociate",
    "--gvn",
    "--mldst-motion",
    "--instsimplify",
    "--loop-simplifycfg",
    "--gvn",
    "--mldst-motion",
    "--instsimplify",
    "--mergefunc",
    "--instcombine",
    "--newgvn",
    "--loop-deletion",
    "--sccp",
    "--lower-expect",
    "--sroa",
    "--reassociate",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--prune-eh",
    "--newgvn",
    "--loop-deletion",
    "--sccp",
    "--lower-expect",
    "--sroa",
    "--reassociate",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--prune-eh",
    "--newgvn",
    "--memcpyopt",
    "--loop-reroll",
    "--gvn",
    "--loop-deletion",
    "--instcombine",
    "--dse",
    "--newgvn",
    "--memcpyopt",
    "--loop-reroll",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--partially-inline-libcalls",
          "--post-inline-ee-instrument",
          "--mldst-motion",
          "--scalarizer",
          "--loop-simplify",
          "--early-cse",
          "--ipsccp",
          "--loop-sink",
          "--loop-unroll-and-jam",
          "--loop-reroll",
          "--sccp",
          "--always-inline",
          "--attributor",
          "--lower-matrix-intrinsics",
          "--redundant-dbg-inst-elim",
          "--indvars",
          "--aggressive-instcombine",
          "--strip-dead-prototypes",
          "--memcpyopt",
          "--die",
          "--rewrite-statepoints-for-gc",
          "--instsimplify",
          "--loweratomic",
          "--sroa",
          "--deadargelim",
          "--canonicalize-aliases",
          "--load-store-vectorizer",
          "--add-discriminators",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--partially-inline-libcalls",
      "--post-inline-ee-instrument",
      "--mldst-motion",
      "--scalarizer",
      "--loop-simplify",
      "--early-cse",
      "--ipsccp",
      "--loop-sink",
      "--loop-unroll-and-jam",
      "--loop-reroll",
      "--sccp",
      "--always-inline",
      "--attributor",
      "--lower-matrix-intrinsics",
      "--redundant-dbg-inst-elim",
      "--indvars",
      "--aggressive-instcombine",
      "--strip-dead-prototypes",
      "--memcpyopt",
      "--die",
      "--rewrite-statepoints-for-gc",
      "--instsimplify",
      "--loweratomic",
      "--sroa",
      "--deadargelim",
      "--canonicalize-aliases",
      "--load-store-vectorizer",
      "--add-discriminators",
      "--gvn"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}