{
  "program_id": "github-v0_41988.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 104,
    "onePredOneSuc": 59,
    "onePredTwoSuc": 41,
    "oneSuccessor": 90,
    "twoPred": 43,
    "twoPredOneSuc": 24,
    "twoEach": 16,
    "twoSuccessor": 62,
    "morePreds": 9,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 157,
    "BeginPhi": 6,
    "BranchCount": 152,
    "returnInt": 18,
    "CriticalCount": 52,
    "NumEdges": 241,
    "const32Bit": 345,
    "const64Bit": 30,
    "numConstZeroes": 182,
    "numConstOnes": 75,
    "UncondBranches": 90,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 23,
    "NumAndInst": 3,
    "BlockMid": 7,
    "BlockLow": 156,
    "NumBitCastInst": 10,
    "NumBrInst": 152,
    "NumCallInst": 69,
    "NumGetElementPtrInst": 128,
    "NumICmpInst": 63,
    "NumLShrInst": 0,
    "NumLoadInst": 263,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 6,
    "NumRetInst": 6,
    "NumSExtInst": 21,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 74,
    "NumSubInst": 5,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 163,
    "TotalInsts": 866,
    "TotalMemInst": 557,
    "TotalFuncs": 35,
    "ArgsPhi": 12,
    "testUnary": 336
  },
  "baseline_oz_instcount": 865,
  "knowledge_base_entry": [
    "--scalarizer",
    "--early-cse-memssa",
    "--globalopt",
    "--sccp",
    "--elim-avail-extern",
    "--lower-expect",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--gvn",
    "--mldst-motion",
    "--early-cse",
    "--ipsccp",
    "--mem2reg",
    "--early-cse",
    "--slsr",
    "--slp-vectorizer",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--ipsccp",
          "--always-inline",
          "--coro-split",
          "--pgo-memop-opt",
          "--post-inline-ee-instrument",
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--speculative-execution",
          "--cross-dso-cfi",
          "--coro-early",
          "--barrier",
          "--tailcallelim",
          "--loop-interchange",
          "--attributor",
          "--name-anon-globals",
          "--add-discriminators"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--ipsccp",
      "--always-inline",
      "--coro-split",
      "--pgo-memop-opt",
      "--post-inline-ee-instrument",
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--speculative-execution",
      "--cross-dso-cfi",
      "--coro-early",
      "--barrier",
      "--tailcallelim",
      "--loop-interchange",
      "--attributor",
      "--name-anon-globals",
      "--add-discriminators"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}