{
  "program_id": "github-v0_21133.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 1,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 5,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 2,
    "morePreds": 4,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 3,
    "BranchCount": 7,
    "returnInt": 1,
    "CriticalCount": 23,
    "NumEdges": 30,
    "const32Bit": 44,
    "const64Bit": 0,
    "numConstZeroes": 14,
    "numConstOnes": 3,
    "UncondBranches": 5,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 14,
    "NumBitCastInst": 0,
    "NumBrInst": 7,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 2,
    "NumLShrInst": 2,
    "NumLoadInst": 0,
    "NumMulInst": 4,
    "NumOrInst": 5,
    "NumPHIInst": 5,
    "NumRetInst": 7,
    "NumSExtInst": 4,
    "NumSelectInst": 30,
    "NumShlInst": 3,
    "NumStoreInst": 4,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 19,
    "TotalInsts": 194,
    "TotalMemInst": 16,
    "TotalFuncs": 9,
    "ArgsPhi": 18,
    "testUnary": 34
  },
  "baseline_oz_instcount": 194,
  "knowledge_base_entry": [
    "--globalopt",
    "--sccp",
    "--die",
    "--slp-vectorizer",
    "--dse",
    "--mldst-motion",
    "--early-cse-memssa",
    "--globalopt",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--newgvn",
    "--adce",
    "--gvn-hoist",
    "--flattencfg",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip",
          "--loop-idiom",
          "--instnamer",
          "--loweratomic",
          "--loop-vectorize",
          "--name-anon-globals",
          "--canonicalize-aliases",
          "--loop-unswitch",
          "--die",
          "--inject-tli-mappings",
          "--slp-vectorizer",
          "--loop-deletion",
          "--prune-eh",
          "--guard-widening",
          "--coro-early",
          "--strip-debug-declare",
          "--loop-instsimplify",
          "--loop-interchange",
          "--loop-sink",
          "--instcombine",
          "--coro-cleanup",
          "--simplifycfg",
          "--float2int",
          "--consthoist",
          "--cross-dso-cfi"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip",
      "--loop-idiom",
      "--instnamer",
      "--loweratomic",
      "--loop-vectorize",
      "--name-anon-globals",
      "--canonicalize-aliases",
      "--loop-unswitch",
      "--die",
      "--inject-tli-mappings",
      "--slp-vectorizer",
      "--loop-deletion",
      "--prune-eh",
      "--guard-widening",
      "--coro-early",
      "--strip-debug-declare",
      "--loop-instsimplify",
      "--loop-interchange",
      "--loop-sink",
      "--instcombine",
      "--coro-cleanup",
      "--simplifycfg",
      "--float2int",
      "--consthoist",
      "--cross-dso-cfi"
    ],
    "performance_vs_Oz": "+3.6%"
  }
}