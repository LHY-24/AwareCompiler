{
  "program_id": "linux-v0_4060.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 47,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 18,
    "oneSuccessor": 38,
    "twoPred": 16,
    "twoPredOneSuc": 5,
    "twoEach": 7,
    "twoSuccessor": 32,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 82,
    "BeginPhi": 0,
    "BranchCount": 70,
    "returnInt": 4,
    "CriticalCount": 19,
    "NumEdges": 102,
    "const32Bit": 184,
    "const64Bit": 8,
    "numConstZeroes": 73,
    "numConstOnes": 66,
    "UncondBranches": 38,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 54,
    "NumAndInst": 2,
    "BlockMid": 13,
    "BlockLow": 69,
    "NumBitCastInst": 12,
    "NumBrInst": 70,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 52,
    "NumICmpInst": 34,
    "NumLShrInst": 0,
    "NumLoadInst": 174,
    "NumMulInst": 2,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 98,
    "NumSubInst": 3,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 22,
    "TotalBlocks": 82,
    "TotalInsts": 583,
    "TotalMemInst": 400,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 277
  },
  "baseline_oz_instcount": 583,
  "knowledge_base_entry": [
    "--adce",
    "--lower-expect",
    "--adce",
    "--jump-threading",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--bdce",
    "--aggressive-instcombine",
    "--globalopt",
    "--early-cse",
    "--slsr",
    "--gvn",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--aggressive-instcombine",
          "--forceattrs",
          "--lcssa",
          "--callsite-splitting",
          "--mldst-motion",
          "--loop-simplify",
          "--coro-split",
          "--instnamer",
          "--deadargelim",
          "--mergereturn",
          "--dse",
          "--coro-cleanup",
          "--add-discriminators",
          "--ipsccp",
          "--strip-dead-prototypes",
          "--loweratomic",
          "--globalsplit",
          "--separate-const-offset-from-gep",
          "--lower-widenable-condition",
          "--loop-fusion",
          "--partial-inliner",
          "--tailcallelim",
          "--slsr",
          "--inferattrs",
          "--rpo-functionattrs",
          "--licm",
          "--strip-debug-declare",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--aggressive-instcombine",
      "--forceattrs",
      "--lcssa",
      "--callsite-splitting",
      "--mldst-motion",
      "--loop-simplify",
      "--coro-split",
      "--instnamer",
      "--deadargelim",
      "--mergereturn",
      "--dse",
      "--coro-cleanup",
      "--add-discriminators",
      "--ipsccp",
      "--strip-dead-prototypes",
      "--loweratomic",
      "--globalsplit",
      "--separate-const-offset-from-gep",
      "--lower-widenable-condition",
      "--loop-fusion",
      "--partial-inliner",
      "--tailcallelim",
      "--slsr",
      "--inferattrs",
      "--rpo-functionattrs",
      "--licm",
      "--strip-debug-declare",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}