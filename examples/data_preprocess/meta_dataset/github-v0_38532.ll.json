{
  "program_id": "github-v0_38532.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 49,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 9,
    "oneSuccessor": 47,
    "twoPred": 22,
    "twoPredOneSuc": 8,
    "twoEach": 9,
    "twoSuccessor": 23,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 90,
    "BeginPhi": 0,
    "BranchCount": 70,
    "returnInt": 3,
    "CriticalCount": 12,
    "NumEdges": 93,
    "const32Bit": 204,
    "const64Bit": 17,
    "numConstZeroes": 102,
    "numConstOnes": 67,
    "UncondBranches": 47,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 43,
    "NumAndInst": 0,
    "BlockMid": 10,
    "BlockLow": 80,
    "NumBitCastInst": 34,
    "NumBrInst": 70,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 172,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 8,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 84,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 90,
    "TotalInsts": 599,
    "TotalMemInst": 420,
    "TotalFuncs": 36,
    "ArgsPhi": 0,
    "testUnary": 260
  },
  "baseline_oz_instcount": 597,
  "knowledge_base_entry": [
    "--inline",
    "--adce",
    "--lower-expect",
    "--globalopt",
    "--elim-avail-extern",
    "--mldst-motion",
    "--simplifycfg",
    "--instsimplify",
    "--elim-avail-extern",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--mem2reg",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--deadargelim",
          "--sccp",
          "--simplifycfg",
          "--partial-inliner",
          "--sancov",
          "--die",
          "--canonicalize-aliases",
          "--flattencfg",
          "--lower-matrix-intrinsics",
          "--mergereturn",
          "--instnamer",
          "--lower-guard-intrinsic",
          "--sroa",
          "--post-inline-ee-instrument",
          "--sink",
          "--alignment-from-assumptions",
          "--rpo-functionattrs",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--deadargelim",
      "--sccp",
      "--simplifycfg",
      "--partial-inliner",
      "--sancov",
      "--die",
      "--canonicalize-aliases",
      "--flattencfg",
      "--lower-matrix-intrinsics",
      "--mergereturn",
      "--instnamer",
      "--lower-guard-intrinsic",
      "--sroa",
      "--post-inline-ee-instrument",
      "--sink",
      "--alignment-from-assumptions",
      "--rpo-functionattrs",
      "--globalopt"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}