{
  "program_id": "linux-v0_11913.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 30,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 1,
    "oneSuccessor": 29,
    "twoPred": 15,
    "twoPredOneSuc": 0,
    "twoEach": 6,
    "twoSuccessor": 17,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 2,
    "BranchCount": 46,
    "returnInt": 4,
    "CriticalCount": 6,
    "NumEdges": 63,
    "const32Bit": 191,
    "const64Bit": 4,
    "numConstZeroes": 91,
    "numConstOnes": 48,
    "UncondBranches": 29,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 43,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 51,
    "NumBitCastInst": 23,
    "NumBrInst": 46,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 71,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 154,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 16,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 57,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 16,
    "TotalBlocks": 62,
    "TotalInsts": 480,
    "TotalMemInst": 350,
    "TotalFuncs": 26,
    "ArgsPhi": 4,
    "testUnary": 242
  },
  "baseline_oz_instcount": 481,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--gvn-hoist",
    "--sccp",
    "--dse",
    "--simplifycfg",
    "--ipsccp",
    "--instcombine",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--gvn",
          "--coro-split",
          "--partial-inliner",
          "--loop-data-prefetch",
          "--newgvn",
          "--pgo-memop-opt",
          "--infer-address-spaces",
          "--canonicalize-aliases",
          "--aggressive-instcombine",
          "--lower-constant-intrinsics",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--gvn",
      "--coro-split",
      "--partial-inliner",
      "--loop-data-prefetch",
      "--newgvn",
      "--pgo-memop-opt",
      "--infer-address-spaces",
      "--canonicalize-aliases",
      "--aggressive-instcombine",
      "--lower-constant-intrinsics",
      "--reassociate"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}