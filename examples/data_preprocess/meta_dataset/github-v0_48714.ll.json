{
  "program_id": "github-v0_48714.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 5,
    "oneSuccessor": 17,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 35,
    "const32Bit": 46,
    "const64Bit": 88,
    "numConstZeroes": 88,
    "numConstOnes": 33,
    "UncondBranches": 17,
    "binaryConstArg": 17,
    "NumAShrInst": 5,
    "NumAddInst": 10,
    "NumAllocaInst": 14,
    "NumAndInst": 5,
    "BlockMid": 6,
    "BlockLow": 24,
    "NumBitCastInst": 16,
    "NumBrInst": 26,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 55,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 43,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 17,
    "TotalBlocks": 30,
    "TotalInsts": 251,
    "TotalMemInst": 148,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 100
  },
  "baseline_oz_instcount": 251,
  "knowledge_base_entry": [
    "--bdce",
    "--sroa",
    "--bdce",
    "--aggressive-instcombine",
    "--adce",
    "--dce",
    "--early-cse",
    "--die",
    "--licm",
    "--instcombine",
    "--inline",
    "--die",
    "--licm",
    "--mem2reg",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--dse",
    "--newgvn",
    "--gvn",
    "--nary-reassociate",
    "--instsimplify",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--flattencfg",
    "--newgvn",
    "--dce",
    "--lower-constant-intrinsics",
    "--die",
    "--elim-avail-extern",
    "--dse",
    "--gvn-hoist",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--sroa",
    "--gvn-hoist",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--instcombine",
          "--canonicalize-aliases",
          "--coro-cleanup",
          "--loop-distribute",
          "--globaldce",
          "--functionattrs",
          "-loop-reduce",
          "--gvn",
          "--coro-early",
          "--loop-instsimplify",
          "--correlated-propagation",
          "--forceattrs",
          "--aggressive-instcombine",
          "--loop-idiom",
          "--mldst-motion",
          "--loop-vectorize",
          "--inject-tli-mappings",
          "--mergeicmps",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--instcombine",
      "--canonicalize-aliases",
      "--coro-cleanup",
      "--loop-distribute",
      "--globaldce",
      "--functionattrs",
      "-loop-reduce",
      "--gvn",
      "--coro-early",
      "--loop-instsimplify",
      "--correlated-propagation",
      "--forceattrs",
      "--aggressive-instcombine",
      "--loop-idiom",
      "--mldst-motion",
      "--loop-vectorize",
      "--inject-tli-mappings",
      "--mergeicmps",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+6.4%"
  }
}