{
  "program_id": "github-v0_37561.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 55,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 23,
    "oneSuccessor": 55,
    "twoPred": 35,
    "twoPredOneSuc": 23,
    "twoEach": 11,
    "twoSuccessor": 35,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 0,
    "BranchCount": 90,
    "returnInt": 15,
    "CriticalCount": 18,
    "NumEdges": 125,
    "const32Bit": 322,
    "const64Bit": 47,
    "numConstZeroes": 207,
    "numConstOnes": 88,
    "UncondBranches": 55,
    "binaryConstArg": 37,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 24,
    "NumAndInst": 0,
    "BlockMid": 14,
    "BlockLow": 80,
    "NumBitCastInst": 22,
    "NumBrInst": 90,
    "NumCallInst": 53,
    "NumGetElementPtrInst": 158,
    "NumICmpInst": 31,
    "NumLShrInst": 0,
    "NumLoadInst": 149,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 42,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 65,
    "NumSubInst": 4,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 3,
    "TotalBlocks": 94,
    "TotalInsts": 704,
    "TotalMemInst": 449,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 254
  },
  "baseline_oz_instcount": 707,
  "knowledge_base_entry": [
    "--ipsccp",
    "--mem2reg",
    "--flattencfg",
    "--inline",
    "--gvn",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--redundant-dbg-inst-elim",
          "--strip",
          "--lower-constant-intrinsics",
          "--jump-threading",
          "--memcpyopt",
          "--guard-widening",
          "--dce",
          "--sroa",
          "--infer-address-spaces",
          "--constmerge",
          "--strip-dead-prototypes"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--redundant-dbg-inst-elim",
      "--strip",
      "--lower-constant-intrinsics",
      "--jump-threading",
      "--memcpyopt",
      "--guard-widening",
      "--dce",
      "--sroa",
      "--infer-address-spaces",
      "--constmerge",
      "--strip-dead-prototypes"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}