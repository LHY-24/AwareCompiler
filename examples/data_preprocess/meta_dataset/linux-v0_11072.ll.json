{
  "program_id": "linux-v0_11072.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 35,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 1,
    "oneSuccessor": 35,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 54,
    "BeginPhi": 0,
    "BranchCount": 42,
    "returnInt": 26,
    "CriticalCount": 1,
    "NumEdges": 53,
    "const32Bit": 163,
    "const64Bit": 9,
    "numConstZeroes": 57,
    "numConstOnes": 59,
    "UncondBranches": 35,
    "binaryConstArg": 17,
    "NumAShrInst": 3,
    "NumAddInst": 0,
    "NumAllocaInst": 45,
    "NumAndInst": 9,
    "BlockMid": 5,
    "BlockLow": 49,
    "NumBitCastInst": 5,
    "NumBrInst": 42,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 106,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 66,
    "NumSubInst": 0,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 16,
    "TotalBlocks": 54,
    "TotalInsts": 420,
    "TotalMemInst": 306,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 185
  },
  "baseline_oz_instcount": 420,
  "knowledge_base_entry": [
    "--mem2reg",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--prune-eh",
    "--newgvn",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--always-inline",
          "--deadargelim",
          "--lowerinvoke",
          "--loop-simplifycfg",
          "--insert-gcov-profiling",
          "--argpromotion",
          "--infer-address-spaces",
          "--mem2reg",
          "--memcpyopt",
          "--gvn",
          "--div-rem-pairs",
          "--flattencfg",
          "--constmerge",
          "--loop-interchange",
          "--dce",
          "--callsite-splitting",
          "--sink",
          "--elim-avail-extern",
          "--aggressive-instcombine",
          "--tailcallelim",
          "--float2int",
          "--loop-unroll",
          "--rewrite-statepoints-for-gc",
          "--slp-vectorizer",
          "--irce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--always-inline",
      "--deadargelim",
      "--lowerinvoke",
      "--loop-simplifycfg",
      "--insert-gcov-profiling",
      "--argpromotion",
      "--infer-address-spaces",
      "--mem2reg",
      "--memcpyopt",
      "--gvn",
      "--div-rem-pairs",
      "--flattencfg",
      "--constmerge",
      "--loop-interchange",
      "--dce",
      "--callsite-splitting",
      "--sink",
      "--elim-avail-extern",
      "--aggressive-instcombine",
      "--tailcallelim",
      "--float2int",
      "--loop-unroll",
      "--rewrite-statepoints-for-gc",
      "--slp-vectorizer",
      "--irce"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}