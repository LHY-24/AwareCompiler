{
  "program_id": "linux-v0_12271.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 60,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 13,
    "oneSuccessor": 54,
    "twoPred": 18,
    "twoPredOneSuc": 6,
    "twoEach": 6,
    "twoSuccessor": 26,
    "morePreds": 5,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 102,
    "BeginPhi": 4,
    "BranchCount": 78,
    "returnInt": 26,
    "CriticalCount": 6,
    "NumEdges": 117,
    "const32Bit": 296,
    "const64Bit": 12,
    "numConstZeroes": 126,
    "numConstOnes": 95,
    "UncondBranches": 54,
    "binaryConstArg": 19,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 72,
    "NumAndInst": 5,
    "BlockMid": 8,
    "BlockLow": 98,
    "NumBitCastInst": 14,
    "NumBrInst": 78,
    "NumCallInst": 67,
    "NumGetElementPtrInst": 74,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 206,
    "NumMulInst": 1,
    "NumOrInst": 3,
    "NumPHIInst": 4,
    "NumRetInst": 23,
    "NumSExtInst": 5,
    "NumSelectInst": 1,
    "NumShlInst": 3,
    "NumStoreInst": 110,
    "NumSubInst": 2,
    "NumTruncInst": 7,
    "NumXorInst": 3,
    "NumZExtInst": 13,
    "TotalBlocks": 106,
    "TotalInsts": 727,
    "TotalMemInst": 529,
    "TotalFuncs": 51,
    "ArgsPhi": 8,
    "testUnary": 321
  },
  "baseline_oz_instcount": 730,
  "knowledge_base_entry": [
    "--mergereturn",
    "--jump-threading",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--dse",
    "--jump-threading",
    "--instcombine",
    "--sroa",
    "--mem2reg",
    "--elim-avail-extern",
    "--dce",
    "--die",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--scalarizer",
          "--mergereturn",
          "--load-store-vectorizer",
          "--simplifycfg",
          "--loop-vectorize",
          "--gvn",
          "--elim-avail-extern",
          "--always-inline",
          "--coro-split",
          "--tailcallelim",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--scalarizer",
      "--mergereturn",
      "--load-store-vectorizer",
      "--simplifycfg",
      "--loop-vectorize",
      "--gvn",
      "--elim-avail-extern",
      "--always-inline",
      "--coro-split",
      "--tailcallelim",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}