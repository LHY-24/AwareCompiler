{
  "program_id": "github-v0_40368.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 22,
    "const32Bit": 37,
    "const64Bit": 32,
    "numConstZeroes": 37,
    "numConstOnes": 22,
    "UncondBranches": 10,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 12,
    "NumAndInst": 3,
    "BlockMid": 4,
    "BlockLow": 16,
    "NumBitCastInst": 4,
    "NumBrInst": 16,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 6,
    "NumLShrInst": 1,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 17,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 20,
    "TotalInsts": 131,
    "TotalMemInst": 83,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 47
  },
  "baseline_oz_instcount": 131,
  "knowledge_base_entry": [
    "--instcombine",
    "--ipsccp",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--globalopt",
    "--aggressive-instcombine",
    "--gvn",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--bdce",
    "--gvn",
    "--gvn-hoist",
    "--correlated-propagation",
    "--dce",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--dse",
    "--aggressive-instcombine",
    "--newgvn",
    "--sccp",
    "--instsimplify",
    "--die",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--inline",
    "--ipsccp",
    "--loweratomic",
    "--aggressive-instcombine",
    "--instsimplify",
    "--lower-expect",
    "--mem2reg",
    "--ipsccp",
    "--elim-avail-extern",
    "--mergefunc",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--constprop",
          "--early-cse",
          "--newgvn",
          "--lower-expect",
          "--dce",
          "--loop-data-prefetch",
          "--sccp",
          "--irce",
          "--constmerge",
          "--hotcoldsplit",
          "--strip",
          "--inferattrs",
          "--loop-sink",
          "--loop-fusion",
          "-loop-reduce",
          "--sink",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--add-discriminators",
          "--loop-simplify",
          "--coro-cleanup",
          "--loop-distribute",
          "--inline",
          "--instnamer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--constprop",
      "--early-cse",
      "--newgvn",
      "--lower-expect",
      "--dce",
      "--loop-data-prefetch",
      "--sccp",
      "--irce",
      "--constmerge",
      "--hotcoldsplit",
      "--strip",
      "--inferattrs",
      "--loop-sink",
      "--loop-fusion",
      "-loop-reduce",
      "--sink",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--add-discriminators",
      "--loop-simplify",
      "--coro-cleanup",
      "--loop-distribute",
      "--inline",
      "--instnamer"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}