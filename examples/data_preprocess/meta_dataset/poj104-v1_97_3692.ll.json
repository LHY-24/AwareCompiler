{
  "program_id": "poj104-v1_97_3692.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 3,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 25,
    "const64Bit": 24,
    "numConstZeroes": 2,
    "numConstOnes": 13,
    "UncondBranches": 0,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 2,
    "NumBitCastInst": 24,
    "NumBrInst": 0,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 17,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 3,
    "TotalInsts": 108,
    "TotalMemInst": 71,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 54
  },
  "baseline_oz_instcount": 26,
  "knowledge_base_entry": [
    "--sroa",
    "--dce",
    "--simplifycfg",
    "--instcombine",
    "--memcpyopt",
    "--inline",
    "--mem2reg",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--mergefunc",
    "--aggressive-instcombine",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--gvn-hoist",
    "--memcpyopt",
    "--inline",
    "--reassociate",
    "--lower-expect",
    "--correlated-propagation",
    "--ipsccp",
    "--sroa",
    "-loop-reduce",
    "--jump-threading",
    "--loop-reroll",
    "--lower-constant-intrinsics",
    "--bdce",
    "--sccp",
    "--die",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergeicmps",
          "--ipsccp",
          "--ee-instrument",
          "--consthoist",
          "--aggressive-instcombine",
          "--lower-guard-intrinsic",
          "--infer-address-spaces",
          "--alignment-from-assumptions",
          "--memcpyopt",
          "--elim-avail-extern",
          "--globalsplit",
          "--adce",
          "--lower-widenable-condition",
          "--loop-vectorize",
          "--inline",
          "--early-cse-memssa",
          "--mergereturn",
          "--loop-deletion",
          "--coro-early",
          "--sancov",
          "--die",
          "--reg2mem",
          "--loop-distribute",
          "--instcombine",
          "--coro-elide",
          "--scalarizer",
          "--post-inline-ee-instrument",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+19.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergeicmps",
      "--ipsccp",
      "--ee-instrument",
      "--consthoist",
      "--aggressive-instcombine",
      "--lower-guard-intrinsic",
      "--infer-address-spaces",
      "--alignment-from-assumptions",
      "--memcpyopt",
      "--elim-avail-extern",
      "--globalsplit",
      "--adce",
      "--lower-widenable-condition",
      "--loop-vectorize",
      "--inline",
      "--early-cse-memssa",
      "--mergereturn",
      "--loop-deletion",
      "--coro-early",
      "--sancov",
      "--die",
      "--reg2mem",
      "--loop-distribute",
      "--instcombine",
      "--coro-elide",
      "--scalarizer",
      "--post-inline-ee-instrument",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+19.2%"
  }
}