{
  "program_id": "linux-v0_11386.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 28,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 5,
    "oneSuccessor": 27,
    "twoPred": 11,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 14,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 56,
    "BeginPhi": 0,
    "BranchCount": 41,
    "returnInt": 18,
    "CriticalCount": 13,
    "NumEdges": 60,
    "const32Bit": 79,
    "const64Bit": 32,
    "numConstZeroes": 37,
    "numConstOnes": 51,
    "UncondBranches": 27,
    "binaryConstArg": 31,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 34,
    "NumAndInst": 15,
    "BlockMid": 3,
    "BlockLow": 53,
    "NumBitCastInst": 6,
    "NumBrInst": 41,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 19,
    "NumLShrInst": 1,
    "NumLoadInst": 64,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 50,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 11,
    "NumZExtInst": 10,
    "TotalBlocks": 56,
    "TotalInsts": 326,
    "TotalMemInst": 195,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 119
  },
  "baseline_oz_instcount": 326,
  "knowledge_base_entry": [
    "--bdce",
    "--load-store-vectorizer",
    "--reassociate",
    "--aggressive-instcombine",
    "--mem2reg",
    "--load-store-vectorizer",
    "--reassociate",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--early-cse",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--newgvn",
          "--strip-debug-declare",
          "--loop-predication",
          "--gvn",
          "--early-cse",
          "--flattencfg",
          "--cross-dso-cfi",
          "--partial-inliner",
          "--div-rem-pairs",
          "--licm",
          "--globalopt",
          "--memcpyopt",
          "--slp-vectorizer",
          "--ipsccp",
          "--strip-dead-prototypes",
          "--libcalls-shrinkwrap",
          "--constprop",
          "--loop-vectorize",
          "--hotcoldsplit",
          "--jump-threading",
          "--coro-cleanup",
          "--early-cse-memssa",
          "--sink",
          "--aggressive-instcombine",
          "--sroa",
          "--loweratomic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--newgvn",
      "--strip-debug-declare",
      "--loop-predication",
      "--gvn",
      "--early-cse",
      "--flattencfg",
      "--cross-dso-cfi",
      "--partial-inliner",
      "--div-rem-pairs",
      "--licm",
      "--globalopt",
      "--memcpyopt",
      "--slp-vectorizer",
      "--ipsccp",
      "--strip-dead-prototypes",
      "--libcalls-shrinkwrap",
      "--constprop",
      "--loop-vectorize",
      "--hotcoldsplit",
      "--jump-threading",
      "--coro-cleanup",
      "--early-cse-memssa",
      "--sink",
      "--aggressive-instcombine",
      "--sroa",
      "--loweratomic"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}