{
  "program_id": "linux-v0_7994.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 2,
    "oneSuccessor": 20,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 25,
    "returnInt": 14,
    "CriticalCount": 2,
    "NumEdges": 35,
    "const32Bit": 280,
    "const64Bit": 43,
    "numConstZeroes": 135,
    "numConstOnes": 84,
    "UncondBranches": 20,
    "binaryConstArg": 24,
    "NumAShrInst": 1,
    "NumAddInst": 4,
    "NumAllocaInst": 51,
    "NumAndInst": 4,
    "BlockMid": 9,
    "BlockLow": 30,
    "NumBitCastInst": 11,
    "NumBrInst": 25,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 117,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 146,
    "NumMulInst": 0,
    "NumOrInst": 11,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 77,
    "NumSubInst": 4,
    "NumTruncInst": 8,
    "NumXorInst": 2,
    "NumZExtInst": 6,
    "TotalBlocks": 39,
    "TotalInsts": 528,
    "TotalMemInst": 416,
    "TotalFuncs": 26,
    "ArgsPhi": 0,
    "testUnary": 231
  },
  "baseline_oz_instcount": 517,
  "knowledge_base_entry": [
    "--loop-sink",
    "--early-cse",
    "--correlated-propagation",
    "--gvn",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--ipsccp",
    "--dse",
    "--mergefunc",
    "--sroa",
    "--flattencfg",
    "--licm",
    "--inline",
    "--simplifycfg",
    "--bdce",
    "--dse",
    "--gvn",
    "--loop-instsimplify",
    "--jump-threading",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--ipsccp",
          "--loop-guard-widening",
          "--strip",
          "--partial-inliner",
          "--early-cse-memssa",
          "--simplifycfg",
          "--licm",
          "--inline",
          "--early-cse",
          "--aggressive-instcombine",
          "--loop-versioning",
          "--infer-address-spaces",
          "--speculative-execution",
          "--strip-debug-declare",
          "--post-inline-ee-instrument",
          "--loop-load-elim",
          "--globalopt",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--ipsccp",
      "--loop-guard-widening",
      "--strip",
      "--partial-inliner",
      "--early-cse-memssa",
      "--simplifycfg",
      "--licm",
      "--inline",
      "--early-cse",
      "--aggressive-instcombine",
      "--loop-versioning",
      "--infer-address-spaces",
      "--speculative-execution",
      "--strip-debug-declare",
      "--post-inline-ee-instrument",
      "--loop-load-elim",
      "--globalopt",
      "--globaldce"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}