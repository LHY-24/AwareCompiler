{
  "program_id": "poj104-v1_48_588.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 0,
    "oneSuccessor": 25,
    "twoPred": 9,
    "twoPredOneSuc": 0,
    "twoEach": 7,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 35,
    "returnInt": 7,
    "CriticalCount": 0,
    "NumEdges": 45,
    "const32Bit": 69,
    "const64Bit": 45,
    "numConstZeroes": 37,
    "numConstOnes": 51,
    "UncondBranches": 25,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 21,
    "NumAllocaInst": 25,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 46,
    "NumBitCastInst": 22,
    "NumBrInst": 35,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 91,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 27,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 38,
    "NumSubInst": 6,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 50,
    "TotalInsts": 369,
    "TotalMemInst": 230,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 166
  },
  "baseline_oz_instcount": 153,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--instcombine",
    "--sroa",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--loop-reroll",
    "--loop-fusion",
    "--newgvn",
    "--indvars",
    "--loop-fusion",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--globalopt",
    "--correlated-propagation",
    "--gvn",
    "--dse",
    "--mergefunc",
    "--loop-instsimplify",
    "--bdce",
    "--dse",
    "--early-cse",
    "--loop-deletion",
    "--newgvn",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--lower-expect",
    "--sroa",
    "--indvars",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--adce",
    "--elim-avail-extern",
    "--licm",
    "--inline",
    "--sroa",
    "--loop-rotate",
    "--early-cse-memssa",
    "--simplifycfg",
    "--loop-instsimplify",
    "--die",
    "--slp-vectorizer",
    "--slsr",
    "--gvn-hoist",
    "--memcpyopt",
    "--instcombine",
    "--newgvn",
    "--adce",
    "--bdce",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--lower-expect",
    "--sroa",
    "--indvars",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--adce",
    "--elim-avail-extern",
    "--dce",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--globalopt",
    "--globaldce",
    "--mergefunc",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--loop-deletion",
    "--sccp",
    "--newgvn",
    "--slp-vectorizer",
    "--mergefunc",
    "--lower-expect",
    "--loop-instsimplify",
    "--simplifycfg",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll",
          "--attributor",
          "--div-rem-pairs",
          "--mergereturn",
          "--loop-unroll-and-jam",
          "--partially-inline-libcalls",
          "--elim-avail-extern",
          "--loweratomic",
          "--consthoist",
          "--coro-elide",
          "--constmerge",
          "--lower-matrix-intrinsics",
          "--infer-address-spaces",
          "--scalarizer",
          "--tailcallelim",
          "--mergeicmps",
          "--always-inline",
          "--gvn",
          "--early-cse-memssa",
          "--inline",
          "--instcombine",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+27.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll",
      "--attributor",
      "--div-rem-pairs",
      "--mergereturn",
      "--loop-unroll-and-jam",
      "--partially-inline-libcalls",
      "--elim-avail-extern",
      "--loweratomic",
      "--consthoist",
      "--coro-elide",
      "--constmerge",
      "--lower-matrix-intrinsics",
      "--infer-address-spaces",
      "--scalarizer",
      "--tailcallelim",
      "--mergeicmps",
      "--always-inline",
      "--gvn",
      "--early-cse-memssa",
      "--inline",
      "--instcombine",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+27.5%"
  }
}