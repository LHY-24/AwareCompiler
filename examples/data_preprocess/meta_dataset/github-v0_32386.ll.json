{
  "program_id": "github-v0_32386.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 1,
    "BranchCount": 5,
    "returnInt": 4,
    "CriticalCount": 4,
    "NumEdges": 8,
    "const32Bit": 23,
    "const64Bit": 3,
    "numConstZeroes": 6,
    "numConstOnes": 1,
    "UncondBranches": 2,
    "binaryConstArg": 20,
    "NumAShrInst": 1,
    "NumAddInst": 7,
    "NumAllocaInst": 0,
    "NumAndInst": 9,
    "BlockMid": 1,
    "BlockLow": 10,
    "NumBitCastInst": 2,
    "NumBrInst": 5,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 3,
    "NumLShrInst": 4,
    "NumLoadInst": 1,
    "NumMulInst": 6,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 6,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 1,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 11,
    "TotalInsts": 69,
    "TotalMemInst": 8,
    "TotalFuncs": 8,
    "ArgsPhi": 2,
    "testUnary": 8
  },
  "baseline_oz_instcount": 70,
  "knowledge_base_entry": [
    "--newgvn",
    "--inline",
    "--globalopt",
    "--lower-expect",
    "--dse",
    "--lower-expect",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--forceattrs",
          "--globaldce",
          "--loop-unroll-and-jam",
          "--globalsplit",
          "--loop-versioning",
          "--strip-nondebug",
          "--barrier",
          "--gvn",
          "--lower-expect",
          "--loop-unroll",
          "--libcalls-shrinkwrap",
          "--gvn-hoist",
          "--slp-vectorizer",
          "--break-crit-edges",
          "--irce",
          "--lower-matrix-intrinsics",
          "--insert-gcov-profiling",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--forceattrs",
      "--globaldce",
      "--loop-unroll-and-jam",
      "--globalsplit",
      "--loop-versioning",
      "--strip-nondebug",
      "--barrier",
      "--gvn",
      "--lower-expect",
      "--loop-unroll",
      "--libcalls-shrinkwrap",
      "--gvn-hoist",
      "--slp-vectorizer",
      "--break-crit-edges",
      "--irce",
      "--lower-matrix-intrinsics",
      "--insert-gcov-profiling",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}