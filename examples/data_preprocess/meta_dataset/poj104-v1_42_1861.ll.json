{
  "program_id": "poj104-v1_42_1861.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 2,
    "oneSuccessor": 12,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 5,
    "CriticalCount": 0,
    "NumEdges": 22,
    "const32Bit": 29,
    "const64Bit": 18,
    "numConstZeroes": 13,
    "numConstOnes": 20,
    "UncondBranches": 12,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 24,
    "NumBitCastInst": 17,
    "NumBrInst": 17,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 25,
    "TotalInsts": 158,
    "TotalMemInst": 101,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 70
  },
  "baseline_oz_instcount": 60,
  "knowledge_base_entry": [
    "--dse",
    "--inline",
    "--instcombine",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--early-cse",
    "--instsimplify",
    "--loop-instsimplify",
    "--dce",
    "--sroa",
    "--reassociate",
    "--dse",
    "--ipsccp",
    "--die",
    "--die",
    "--loop-simplifycfg",
    "--licm",
    "--slp-vectorizer",
    "--instcombine",
    "--early-cse-memssa",
    "--sccp",
    "--jump-threading",
    "--mem2reg",
    "--dse",
    "--gvn-hoist",
    "--memcpyopt",
    "--inline",
    "--mem2reg",
    "--adce",
    "--sroa",
    "--gvn",
    "--newgvn",
    "--instsimplify",
    "--prune-eh",
    "--jump-threading",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--slp-vectorizer",
          "--coro-split",
          "--post-inline-ee-instrument",
          "--redundant-dbg-inst-elim",
          "--newgvn",
          "--early-cse-memssa",
          "--lower-matrix-intrinsics",
          "--loop-deletion",
          "--loop-interchange",
          "--inferattrs",
          "--loop-versioning",
          "--aggressive-instcombine",
          "--elim-avail-extern",
          "--attributor",
          "--barrier",
          "--loop-reroll",
          "--coro-cleanup",
          "--mergeicmps",
          "--sroa",
          "--mem2reg",
          "--lower-widenable-condition",
          "--inline",
          "--guard-widening",
          "--dce",
          "--loop-data-prefetch",
          "--loop-unswitch",
          "--jump-threading"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--slp-vectorizer",
      "--coro-split",
      "--post-inline-ee-instrument",
      "--redundant-dbg-inst-elim",
      "--newgvn",
      "--early-cse-memssa",
      "--lower-matrix-intrinsics",
      "--loop-deletion",
      "--loop-interchange",
      "--inferattrs",
      "--loop-versioning",
      "--aggressive-instcombine",
      "--elim-avail-extern",
      "--attributor",
      "--barrier",
      "--loop-reroll",
      "--coro-cleanup",
      "--mergeicmps",
      "--sroa",
      "--mem2reg",
      "--lower-widenable-condition",
      "--inline",
      "--guard-widening",
      "--dce",
      "--loop-data-prefetch",
      "--loop-unswitch",
      "--jump-threading"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}