{
  "program_id": "linux-v0_9454.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 43,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 3,
    "oneSuccessor": 39,
    "twoPred": 9,
    "twoPredOneSuc": 1,
    "twoEach": 6,
    "twoSuccessor": 14,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 26,
    "CriticalCount": 6,
    "NumEdges": 79,
    "const32Bit": 237,
    "const64Bit": 24,
    "numConstZeroes": 95,
    "numConstOnes": 88,
    "UncondBranches": 39,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 61,
    "NumAndInst": 4,
    "BlockMid": 8,
    "BlockLow": 68,
    "NumBitCastInst": 14,
    "NumBrInst": 51,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 63,
    "NumICmpInst": 12,
    "NumLShrInst": 2,
    "NumLoadInst": 167,
    "NumMulInst": 2,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 99,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 76,
    "TotalInsts": 573,
    "TotalMemInst": 446,
    "TotalFuncs": 66,
    "ArgsPhi": 0,
    "testUnary": 249
  },
  "baseline_oz_instcount": 575,
  "knowledge_base_entry": [
    "--loop-fusion",
    "--instcombine",
    "--slsr",
    "--slp-vectorizer",
    "--instsimplify",
    "--elim-avail-extern",
    "--sccp",
    "--sroa",
    "--newgvn",
    "--mem2reg",
    "--loop-rotate",
    "--lower-expect",
    "--aggressive-instcombine",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inject-tli-mappings",
          "--constprop",
          "--pgo-memop-opt",
          "--early-cse-memssa",
          "--loop-fusion",
          "--libcalls-shrinkwrap",
          "--dce",
          "--div-rem-pairs",
          "--lower-widenable-condition",
          "--loop-sink",
          "--globaldce",
          "--loop-simplify",
          "--speculative-execution"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inject-tli-mappings",
      "--constprop",
      "--pgo-memop-opt",
      "--early-cse-memssa",
      "--loop-fusion",
      "--libcalls-shrinkwrap",
      "--dce",
      "--div-rem-pairs",
      "--lower-widenable-condition",
      "--loop-sink",
      "--globaldce",
      "--loop-simplify",
      "--speculative-execution"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}