{
  "program_id": "github-v0_11508.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 8,
    "CriticalCount": 0,
    "NumEdges": 18,
    "const32Bit": 176,
    "const64Bit": 2,
    "numConstZeroes": 66,
    "numConstOnes": 67,
    "UncondBranches": 0,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 45,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 30,
    "NumBitCastInst": 12,
    "NumBrInst": 9,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 52,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 129,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 64,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 36,
    "TotalInsts": 412,
    "TotalMemInst": 328,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 188
  },
  "baseline_oz_instcount": 412,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--sroa",
    "--instsimplify",
    "--early-cse",
    "--sccp",
    "--dse",
    "--instsimplify",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--adce",
    "--inline",
    "--gvn",
    "--aggressive-instcombine",
    "--bdce",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--ipsccp",
    "--mem2reg",
    "--gvn",
    "--memcpyopt",
    "--jump-threading",
    "--die",
    "--elim-avail-extern",
    "--instcombine",
    "--instsimplify",
    "--early-cse",
    "--adce",
    "--elim-avail-extern",
    "--gvn",
    "--newgvn",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--reassociate",
    "-loop-reduce",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--bdce",
          "--hotcoldsplit",
          "--loop-predication",
          "--instnamer",
          "--ipsccp",
          "--forceattrs",
          "--loop-load-elim",
          "--alignment-from-assumptions",
          "--inferattrs",
          "--loop-fusion",
          "--mergefunc",
          "--memcpyopt",
          "--lower-guard-intrinsic",
          "--callsite-splitting",
          "--slsr",
          "--loop-interchange",
          "--load-store-vectorizer",
          "--break-crit-edges",
          "--always-inline",
          "--strip-nondebug",
          "--scalarizer",
          "--dce",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--bdce",
      "--hotcoldsplit",
      "--loop-predication",
      "--instnamer",
      "--ipsccp",
      "--forceattrs",
      "--loop-load-elim",
      "--alignment-from-assumptions",
      "--inferattrs",
      "--loop-fusion",
      "--mergefunc",
      "--memcpyopt",
      "--lower-guard-intrinsic",
      "--callsite-splitting",
      "--slsr",
      "--loop-interchange",
      "--load-store-vectorizer",
      "--break-crit-edges",
      "--always-inline",
      "--strip-nondebug",
      "--scalarizer",
      "--dce",
      "--float2int"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}