{
  "program_id": "github-v0_9583.ll",
  "autophase_features": {
    "BBNumArgsHi": 4,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 0,
    "oneSuccessor": 6,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 4,
    "BBNoPhi": 8,
    "BeginPhi": 4,
    "BranchCount": 10,
    "returnInt": 34,
    "CriticalCount": 2,
    "NumEdges": 14,
    "const32Bit": 63,
    "const64Bit": 152,
    "numConstZeroes": 62,
    "numConstOnes": 51,
    "UncondBranches": 6,
    "binaryConstArg": 47,
    "NumAShrInst": 4,
    "NumAddInst": 37,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 6,
    "NumBitCastInst": 0,
    "NumBrInst": 10,
    "NumCallInst": 132,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 4,
    "NumLShrInst": 4,
    "NumLoadInst": 20,
    "NumMulInst": 29,
    "NumOrInst": 15,
    "NumPHIInst": 22,
    "NumRetInst": 2,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 17,
    "NumStoreInst": 12,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 18,
    "TotalBlocks": 12,
    "TotalInsts": 559,
    "TotalMemInst": 196,
    "TotalFuncs": 8,
    "ArgsPhi": 44,
    "testUnary": 45
  },
  "baseline_oz_instcount": 560,
  "knowledge_base_entry": [
    "--scalarizer",
    "--early-cse-memssa",
    "--loop-reroll",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--adce",
    "--dce",
    "--lower-expect",
    "--bdce",
    "--simplifycfg",
    "--bdce",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--gvn",
    "--nary-reassociate",
    "-loop-reduce",
    "--nary-reassociate",
    "--sroa",
    "--dce",
    "--gvn-hoist",
    "--gvn",
    "--adce",
    "--instsimplify",
    "--gvn-hoist",
    "--loop-reroll",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--sroa",
    "--newgvn",
    "--slsr",
    "--newgvn",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--bdce",
    "--loop-instsimplify",
    "--globalopt",
    "--globaldce",
    "--mergefunc",
    "--slp-vectorizer",
    "--jump-threading",
    "--globalopt",
    "--loop-deletion",
    "--early-cse-memssa",
    "--bdce",
    "--inline",
    "--elim-avail-extern",
    "--globalopt",
    "--aggressive-instcombine",
    "--instcombine",
    "--early-cse-memssa",
    "-loop-reduce",
    "--gvn",
    "--indvars",
    "--loop-reroll",
    "--jump-threading",
    "--gvn-hoist",
    "--slsr",
    "--nary-reassociate",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--infer-address-spaces",
          "--scalarizer",
          "--speculative-execution",
          "--constmerge",
          "--coro-early",
          "--early-cse-memssa",
          "--loop-guard-widening",
          "--slp-vectorizer",
          "--inline",
          "--correlated-propagation",
          "--bdce",
          "--instnamer",
          "--lowerswitch",
          "--loop-load-elim",
          "--lcssa",
          "--separate-const-offset-from-gep",
          "--loop-deletion",
          "--partial-inliner",
          "--guard-widening",
          "--coro-elide",
          "--jump-threading",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+25.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--infer-address-spaces",
      "--scalarizer",
      "--speculative-execution",
      "--constmerge",
      "--coro-early",
      "--early-cse-memssa",
      "--loop-guard-widening",
      "--slp-vectorizer",
      "--inline",
      "--correlated-propagation",
      "--bdce",
      "--instnamer",
      "--lowerswitch",
      "--loop-load-elim",
      "--lcssa",
      "--separate-const-offset-from-gep",
      "--loop-deletion",
      "--partial-inliner",
      "--guard-widening",
      "--coro-elide",
      "--jump-threading",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+25.4%"
  }
}