{
  "program_id": "github-v0_29638.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 32,
    "const64Bit": 45,
    "numConstZeroes": 44,
    "numConstOnes": 27,
    "UncondBranches": 9,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 14,
    "NumAndInst": 1,
    "BlockMid": 4,
    "BlockLow": 14,
    "NumBitCastInst": 12,
    "NumBrInst": 14,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 10,
    "TotalBlocks": 18,
    "TotalInsts": 170,
    "TotalMemInst": 112,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 76
  },
  "baseline_oz_instcount": 170,
  "knowledge_base_entry": [
    "--irce",
    "--gvn-hoist",
    "--loop-deletion",
    "--mem2reg",
    "--aggressive-instcombine",
    "--instsimplify",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--globalopt",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--div-rem-pairs",
          "--die",
          "--coro-elide",
          "--callsite-splitting",
          "--lower-matrix-intrinsics",
          "--indvars",
          "--barrier",
          "--loop-unswitch",
          "--pgo-memop-opt",
          "--loop-data-prefetch",
          "--dce",
          "--functionattrs",
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--loop-fusion",
          "--simplifycfg",
          "--coro-cleanup",
          "--slp-vectorizer",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--div-rem-pairs",
      "--die",
      "--coro-elide",
      "--callsite-splitting",
      "--lower-matrix-intrinsics",
      "--indvars",
      "--barrier",
      "--loop-unswitch",
      "--pgo-memop-opt",
      "--loop-data-prefetch",
      "--dce",
      "--functionattrs",
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--loop-fusion",
      "--simplifycfg",
      "--coro-cleanup",
      "--slp-vectorizer",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+3.5%"
  }
}