{
  "program_id": "github-v0_18874.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 12,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 26,
    "const32Bit": 36,
    "const64Bit": 38,
    "numConstZeroes": 42,
    "numConstOnes": 23,
    "UncondBranches": 12,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 12,
    "NumAndInst": 3,
    "BlockMid": 4,
    "BlockLow": 19,
    "NumBitCastInst": 4,
    "NumBrInst": 19,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 28,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 23,
    "TotalInsts": 141,
    "TotalMemInst": 90,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 50
  },
  "baseline_oz_instcount": 141,
  "knowledge_base_entry": [
    "--loop-unroll",
    "--instcombine",
    "--sroa",
    "--mldst-motion",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--jump-threading",
    "--aggressive-instcombine",
    "--mergefunc",
    "--instcombine",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--gvn",
    "--gvn-hoist",
    "--sccp",
    "--adce",
    "--dce",
    "--mem2reg",
    "--gvn-hoist",
    "--instsimplify",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--bdce",
    "--mergefunc",
    "--load-store-vectorizer",
    "--reassociate",
    "--load-store-vectorizer",
    "--reassociate",
    "--adce",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--adce",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerswitch",
          "--canonicalize-aliases",
          "--constmerge",
          "--coro-elide",
          "--coro-split",
          "--aggressive-instcombine",
          "--constprop",
          "--loop-unroll",
          "--strip-debug-declare",
          "--strip-nondebug",
          "--lower-constant-intrinsics",
          "--lower-matrix-intrinsics",
          "--forceattrs",
          "--licm",
          "--loop-deletion",
          "--separate-const-offset-from-gep",
          "--loop-data-prefetch",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerswitch",
      "--canonicalize-aliases",
      "--constmerge",
      "--coro-elide",
      "--coro-split",
      "--aggressive-instcombine",
      "--constprop",
      "--loop-unroll",
      "--strip-debug-declare",
      "--strip-nondebug",
      "--lower-constant-intrinsics",
      "--lower-matrix-intrinsics",
      "--forceattrs",
      "--licm",
      "--loop-deletion",
      "--separate-const-offset-from-gep",
      "--loop-data-prefetch",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}