{
  "program_id": "linux-v0_13516.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 18,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 8,
    "oneSuccessor": 12,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 12,
    "morePreds": 4,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 2,
    "BranchCount": 24,
    "returnInt": 0,
    "CriticalCount": 14,
    "NumEdges": 36,
    "const32Bit": 69,
    "const64Bit": 26,
    "numConstZeroes": 36,
    "numConstOnes": 64,
    "UncondBranches": 12,
    "binaryConstArg": 27,
    "NumAShrInst": 3,
    "NumAddInst": 1,
    "NumAllocaInst": 42,
    "NumAndInst": 6,
    "BlockMid": 3,
    "BlockLow": 41,
    "NumBitCastInst": 1,
    "NumBrInst": 24,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 20,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 40,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 14,
    "NumZExtInst": 9,
    "TotalBlocks": 44,
    "TotalInsts": 237,
    "TotalMemInst": 132,
    "TotalFuncs": 27,
    "ArgsPhi": 8,
    "testUnary": 94
  },
  "baseline_oz_instcount": 219,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--die",
    "--mergefunc",
    "--lower-expect",
    "--dse",
    "--mem2reg",
    "--licm",
    "--lower-expect",
    "--mergefunc",
    "--globaldce",
    "--ipsccp",
    "--die",
    "--elim-avail-extern",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--ipsccp",
          "--load-store-vectorizer",
          "--loop-unswitch",
          "--infer-address-spaces",
          "--deadargelim",
          "--aggressive-instcombine",
          "--forceattrs",
          "--coro-split",
          "--loop-rotate",
          "--called-value-propagation",
          "--instsimplify",
          "--alignment-from-assumptions",
          "--mergefunc",
          "--redundant-dbg-inst-elim",
          "--libcalls-shrinkwrap",
          "--loop-unroll-and-jam",
          "--coro-cleanup",
          "--loop-interchange",
          "--mergereturn",
          "--coro-elide",
          "--elim-avail-extern",
          "--cross-dso-cfi",
          "--nary-reassociate",
          "--callsite-splitting",
          "--strip-debug-declare",
          "--attributor",
          "--rewrite-statepoints-for-gc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--ipsccp",
      "--load-store-vectorizer",
      "--loop-unswitch",
      "--infer-address-spaces",
      "--deadargelim",
      "--aggressive-instcombine",
      "--forceattrs",
      "--coro-split",
      "--loop-rotate",
      "--called-value-propagation",
      "--instsimplify",
      "--alignment-from-assumptions",
      "--mergefunc",
      "--redundant-dbg-inst-elim",
      "--libcalls-shrinkwrap",
      "--loop-unroll-and-jam",
      "--coro-cleanup",
      "--loop-interchange",
      "--mergereturn",
      "--coro-elide",
      "--elim-avail-extern",
      "--cross-dso-cfi",
      "--nary-reassociate",
      "--callsite-splitting",
      "--strip-debug-declare",
      "--attributor",
      "--rewrite-statepoints-for-gc"
    ],
    "performance_vs_Oz": "+3.7%"
  }
}