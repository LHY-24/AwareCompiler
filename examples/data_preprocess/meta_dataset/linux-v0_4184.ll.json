{
  "program_id": "linux-v0_4184.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 28,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 3,
    "oneSuccessor": 27,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 2,
    "BranchCount": 33,
    "returnInt": 1,
    "CriticalCount": 0,
    "NumEdges": 39,
    "const32Bit": 250,
    "const64Bit": 20,
    "numConstZeroes": 98,
    "numConstOnes": 104,
    "UncondBranches": 27,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 85,
    "NumAndInst": 3,
    "BlockMid": 19,
    "BlockLow": 29,
    "NumBitCastInst": 21,
    "NumBrInst": 33,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 92,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 168,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 15,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 107,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 3,
    "NumZExtInst": 8,
    "TotalBlocks": 48,
    "TotalInsts": 576,
    "TotalMemInst": 474,
    "TotalFuncs": 17,
    "ArgsPhi": 4,
    "testUnary": 291
  },
  "baseline_oz_instcount": 576,
  "knowledge_base_entry": [
    "--loop-sink",
    "--instcombine",
    "--mergefunc",
    "--loop-reroll",
    "--loop-fusion",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--inline",
    "--globalopt",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--mem2reg",
    "--prune-eh",
    "--gvn",
    "--loop-simplifycfg",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--loop-deletion",
          "--consthoist",
          "--rpo-functionattrs",
          "--loop-versioning",
          "--indvars",
          "--pgo-memop-opt",
          "--mldst-motion",
          "--loop-predication",
          "--loop-reroll",
          "--sccp",
          "--instnamer",
          "--globalopt",
          "--lowerinvoke",
          "--inline",
          "--rewrite-statepoints-for-gc",
          "--partially-inline-libcalls",
          "--forceattrs",
          "--loop-data-prefetch",
          "--globalsplit",
          "--loop-sink",
          "--ee-instrument",
          "--lower-constant-intrinsics",
          "--slsr",
          "--loop-load-elim",
          "--simple-loop-unswitch",
          "--lower-guard-intrinsic",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--loop-deletion",
      "--consthoist",
      "--rpo-functionattrs",
      "--loop-versioning",
      "--indvars",
      "--pgo-memop-opt",
      "--mldst-motion",
      "--loop-predication",
      "--loop-reroll",
      "--sccp",
      "--instnamer",
      "--globalopt",
      "--lowerinvoke",
      "--inline",
      "--rewrite-statepoints-for-gc",
      "--partially-inline-libcalls",
      "--forceattrs",
      "--loop-data-prefetch",
      "--globalsplit",
      "--loop-sink",
      "--ee-instrument",
      "--lower-constant-intrinsics",
      "--slsr",
      "--loop-load-elim",
      "--simple-loop-unswitch",
      "--lower-guard-intrinsic",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}