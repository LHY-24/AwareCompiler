{
  "program_id": "poj104-v1_32_658.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 47,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 6,
    "oneSuccessor": 44,
    "twoPred": 15,
    "twoPredOneSuc": 4,
    "twoEach": 8,
    "twoSuccessor": 18,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 86,
    "BeginPhi": 0,
    "BranchCount": 62,
    "returnInt": 18,
    "CriticalCount": 6,
    "NumEdges": 80,
    "const32Bit": 110,
    "const64Bit": 91,
    "numConstZeroes": 50,
    "numConstOnes": 73,
    "UncondBranches": 44,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 54,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 75,
    "NumBitCastInst": 77,
    "NumBrInst": 62,
    "NumCallInst": 91,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 135,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 75,
    "NumSubInst": 10,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 86,
    "TotalInsts": 628,
    "TotalMemInst": 400,
    "TotalFuncs": 39,
    "ArgsPhi": 0,
    "testUnary": 290
  },
  "baseline_oz_instcount": 209,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--gvn-hoist",
    "--gvn",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--dse",
    "--nary-reassociate",
    "--sroa",
    "--elim-avail-extern",
    "--loop-deletion",
    "--early-cse",
    "--bdce",
    "--correlated-propagation",
    "--dce",
    "--dse",
    "--bdce",
    "--newgvn",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--instcombine",
    "--globalopt",
    "--dse",
    "--elim-avail-extern",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--inline",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--sroa",
    "--aggressive-instcombine",
    "--adce",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--newgvn",
    "--slsr",
    "--loop-simplifycfg",
    "--prune-eh",
    "--early-cse",
    "--mem2reg",
    "--ipsccp",
    "--instcombine",
    "--flattencfg",
    "--globalopt",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--slsr",
    "--instcombine",
    "--flattencfg",
    "--inline",
    "--ipsccp",
    "--instcombine",
    "--ipsccp",
    "--early-cse",
    "--sroa",
    "--simplifycfg",
    "--slsr",
    "--instcombine",
    "--flattencfg",
    "--inline",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--strip",
          "--add-discriminators",
          "--loop-load-elim",
          "--elim-avail-extern",
          "--gvn",
          "--mergefunc",
          "--argpromotion",
          "--forceattrs",
          "--loop-unroll-and-jam",
          "--lower-constant-intrinsics",
          "--always-inline",
          "--adce",
          "--ee-instrument",
          "--redundant-dbg-inst-elim",
          "--sroa",
          "--lowerswitch",
          "--early-cse",
          "--globalsplit",
          "--loop-reroll",
          "--pgo-memop-opt",
          "--coro-elide",
          "--canonicalize-aliases",
          "--mergereturn",
          "--loop-vectorize"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+10.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--strip",
      "--add-discriminators",
      "--loop-load-elim",
      "--elim-avail-extern",
      "--gvn",
      "--mergefunc",
      "--argpromotion",
      "--forceattrs",
      "--loop-unroll-and-jam",
      "--lower-constant-intrinsics",
      "--always-inline",
      "--adce",
      "--ee-instrument",
      "--redundant-dbg-inst-elim",
      "--sroa",
      "--lowerswitch",
      "--early-cse",
      "--globalsplit",
      "--loop-reroll",
      "--pgo-memop-opt",
      "--coro-elide",
      "--canonicalize-aliases",
      "--mergereturn",
      "--loop-vectorize"
    ],
    "performance_vs_Oz": "+10.0%"
  }
}