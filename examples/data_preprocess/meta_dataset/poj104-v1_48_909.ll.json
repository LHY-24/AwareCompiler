{
  "program_id": "poj104-v1_48_909.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 1,
    "oneSuccessor": 25,
    "twoPred": 10,
    "twoPredOneSuc": 1,
    "twoEach": 7,
    "twoSuccessor": 11,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 51,
    "BeginPhi": 0,
    "BranchCount": 36,
    "returnInt": 7,
    "CriticalCount": 1,
    "NumEdges": 47,
    "const32Bit": 77,
    "const64Bit": 73,
    "numConstZeroes": 64,
    "numConstOnes": 58,
    "UncondBranches": 25,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 22,
    "NumAllocaInst": 25,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 47,
    "NumBitCastInst": 24,
    "NumBrInst": 36,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 118,
    "NumMulInst": 8,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 45,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 45,
    "NumSubInst": 6,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 51,
    "TotalInsts": 457,
    "TotalMemInst": 288,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 213
  },
  "baseline_oz_instcount": 185,
  "knowledge_base_entry": [
    "--flattencfg",
    "--early-cse-memssa",
    "--sccp",
    "--early-cse-memssa",
    "--sroa",
    "--newgvn",
    "--loop-instsimplify",
    "--lower-expect",
    "--adce",
    "--early-cse",
    "--memcpyopt",
    "--mem2reg",
    "--elim-avail-extern",
    "--flattencfg",
    "--aggressive-instcombine",
    "--inline",
    "--loop-simplifycfg",
    "--instcombine",
    "--slsr",
    "--simplifycfg",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--lower-expect",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse-memssa",
          "--ee-instrument",
          "--loweratomic",
          "--dse",
          "--early-cse",
          "--libcalls-shrinkwrap",
          "--inferattrs",
          "--memcpyopt",
          "--elim-avail-extern",
          "--loop-predication",
          "--sancov",
          "--loop-unroll",
          "--reassociate",
          "--inline",
          "--lower-guard-intrinsic",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse-memssa",
      "--ee-instrument",
      "--loweratomic",
      "--dse",
      "--early-cse",
      "--libcalls-shrinkwrap",
      "--inferattrs",
      "--memcpyopt",
      "--elim-avail-extern",
      "--loop-predication",
      "--sancov",
      "--loop-unroll",
      "--reassociate",
      "--inline",
      "--lower-guard-intrinsic",
      "--die"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}