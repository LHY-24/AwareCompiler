{
  "program_id": "poj104-v1_46_899.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 30,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 2,
    "oneSuccessor": 30,
    "twoPred": 13,
    "twoPredOneSuc": 1,
    "twoEach": 11,
    "twoSuccessor": 13,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 1,
    "BranchCount": 43,
    "returnInt": 9,
    "CriticalCount": 4,
    "NumEdges": 56,
    "const32Bit": 34,
    "const64Bit": 32,
    "numConstZeroes": 21,
    "numConstOnes": 22,
    "UncondBranches": 30,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 44,
    "NumBitCastInst": 18,
    "NumBrInst": 43,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 64,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 46,
    "TotalInsts": 250,
    "TotalMemInst": 142,
    "TotalFuncs": 10,
    "ArgsPhi": 2,
    "testUnary": 106
  },
  "baseline_oz_instcount": 128,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--early-cse-memssa",
    "--sroa",
    "--inline",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--jump-threading",
    "--globalopt",
    "--mem2reg",
    "--memcpyopt",
    "--mergefunc",
    "--elim-avail-extern",
    "--inline",
    "--mldst-motion",
    "--simplifycfg",
    "--die",
    "--early-cse-memssa",
    "--sroa",
    "--inline",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--jump-threading",
    "--globalopt",
    "--reassociate",
    "--elim-avail-extern",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--sroa",
    "--memcpyopt",
    "--instcombine",
    "--newgvn",
    "--dse",
    "--inline",
    "--mem2reg",
    "--aggressive-instcombine",
    "--instsimplify",
    "--early-cse",
    "--loop-deletion",
    "--sroa",
    "--gvn",
    "--dse",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--bdce",
    "--gvn-hoist",
    "--gvn-hoist",
    "--loop-reroll",
    "--simplifycfg",
    "--newgvn",
    "--dce",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--adce",
    "--dce",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--partially-inline-libcalls",
          "--aggressive-instcombine",
          "--gvn-hoist",
          "--loop-unroll",
          "--functionattrs",
          "--mem2reg",
          "--bdce",
          "--redundant-dbg-inst-elim",
          "--deadargelim",
          "--speculative-execution",
          "--called-value-propagation",
          "--elim-avail-extern",
          "--alignment-from-assumptions",
          "--loop-unroll-and-jam",
          "--consthoist",
          "--early-cse",
          "--loop-simplifycfg",
          "--mergefunc",
          "--loop-interchange",
          "--die",
          "--load-store-vectorizer",
          "--div-rem-pairs",
          "--memcpyopt",
          "--instcombine",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--partially-inline-libcalls",
      "--aggressive-instcombine",
      "--gvn-hoist",
      "--loop-unroll",
      "--functionattrs",
      "--mem2reg",
      "--bdce",
      "--redundant-dbg-inst-elim",
      "--deadargelim",
      "--speculative-execution",
      "--called-value-propagation",
      "--elim-avail-extern",
      "--alignment-from-assumptions",
      "--loop-unroll-and-jam",
      "--consthoist",
      "--early-cse",
      "--loop-simplifycfg",
      "--mergefunc",
      "--loop-interchange",
      "--die",
      "--load-store-vectorizer",
      "--div-rem-pairs",
      "--memcpyopt",
      "--instcombine",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+5.5%"
  }
}