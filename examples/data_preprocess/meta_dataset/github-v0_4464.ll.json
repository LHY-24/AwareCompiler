{
  "program_id": "github-v0_4464.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 34,
    "const64Bit": 0,
    "numConstZeroes": 1,
    "numConstOnes": 33,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 32,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 20,
    "NumBitCastInst": 3,
    "NumBrInst": 0,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 10,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 20,
    "TotalInsts": 124,
    "TotalMemInst": 94,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 52
  },
  "baseline_oz_instcount": 124,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--licm",
    "--reassociate",
    "--gvn-hoist",
    "--mergefunc",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--loop-reroll",
    "--slp-vectorizer",
    "--simplifycfg",
    "--mergefunc",
    "--reassociate",
    "--licm",
    "--elim-avail-extern",
    "--memcpyopt",
    "--early-cse-memssa",
    "--instcombine",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--loop-fusion",
          "--tailcallelim",
          "--die",
          "--loop-versioning-licm",
          "--strip-nondebug",
          "--loop-unroll",
          "--memcpyopt",
          "--ee-instrument",
          "--coro-split",
          "--mldst-motion",
          "--sancov",
          "--elim-avail-extern",
          "--consthoist",
          "--load-store-vectorizer",
          "--lower-guard-intrinsic",
          "--loop-unswitch",
          "--mergefunc",
          "--dce",
          "--float2int",
          "--lower-widenable-condition",
          "--lcssa",
          "--loop-guard-widening",
          "--ipconstprop",
          "--loop-predication",
          "--strip-debug-declare",
          "--jump-threading"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+37.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--loop-fusion",
      "--tailcallelim",
      "--die",
      "--loop-versioning-licm",
      "--strip-nondebug",
      "--loop-unroll",
      "--memcpyopt",
      "--ee-instrument",
      "--coro-split",
      "--mldst-motion",
      "--sancov",
      "--elim-avail-extern",
      "--consthoist",
      "--load-store-vectorizer",
      "--lower-guard-intrinsic",
      "--loop-unswitch",
      "--mergefunc",
      "--dce",
      "--float2int",
      "--lower-widenable-condition",
      "--lcssa",
      "--loop-guard-widening",
      "--ipconstprop",
      "--loop-predication",
      "--strip-debug-declare",
      "--jump-threading"
    ],
    "performance_vs_Oz": "+37.9%"
  }
}