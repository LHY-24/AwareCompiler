{
  "program_id": "linux-v0_8260.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 73,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 24,
    "oneSuccessor": 56,
    "twoPred": 16,
    "twoPredOneSuc": 6,
    "twoEach": 9,
    "twoSuccessor": 39,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 114,
    "BeginPhi": 1,
    "BranchCount": 95,
    "returnInt": 25,
    "CriticalCount": 12,
    "NumEdges": 134,
    "const32Bit": 398,
    "const64Bit": 36,
    "numConstZeroes": 226,
    "numConstOnes": 119,
    "UncondBranches": 56,
    "binaryConstArg": 39,
    "NumAShrInst": 1,
    "NumAddInst": 22,
    "NumAllocaInst": 63,
    "NumAndInst": 5,
    "BlockMid": 15,
    "BlockLow": 100,
    "NumBitCastInst": 6,
    "NumBrInst": 95,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 139,
    "NumICmpInst": 40,
    "NumLShrInst": 1,
    "NumLoadInst": 240,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 12,
    "NumSelectInst": 2,
    "NumShlInst": 2,
    "NumStoreInst": 134,
    "NumSubInst": 1,
    "NumTruncInst": 11,
    "NumXorInst": 4,
    "NumZExtInst": 24,
    "TotalBlocks": 115,
    "TotalInsts": 873,
    "TotalMemInst": 617,
    "TotalFuncs": 31,
    "ArgsPhi": 2,
    "testUnary": 360
  },
  "baseline_oz_instcount": 873,
  "knowledge_base_entry": [
    "--ipsccp",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--ipsccp",
    "--sroa",
    "--dce",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--early-cse",
    "--gvn-hoist",
    "--instsimplify",
    "--lower-expect",
    "--mem2reg",
    "--loop-deletion",
    "--early-cse",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--simplifycfg",
    "--licm",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--ipsccp",
    "--sroa",
    "--dce",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--loop-fusion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--loweratomic",
          "--constmerge",
          "--early-cse-memssa",
          "--memcpyopt",
          "--loop-guard-widening",
          "--callsite-splitting",
          "--aggressive-instcombine",
          "--scalarizer",
          "--loop-instsimplify",
          "--mldst-motion",
          "--add-discriminators",
          "--instsimplify",
          "--lower-widenable-condition",
          "--mergefunc",
          "--libcalls-shrinkwrap",
          "--sroa",
          "--loop-unswitch",
          "--newgvn",
          "--instnamer",
          "--loop-rotate",
          "--rewrite-statepoints-for-gc",
          "--inject-tli-mappings",
          "--slp-vectorizer",
          "--loop-predication",
          "--alignment-from-assumptions",
          "--strip",
          "--loop-sink",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--loweratomic",
      "--constmerge",
      "--early-cse-memssa",
      "--memcpyopt",
      "--loop-guard-widening",
      "--callsite-splitting",
      "--aggressive-instcombine",
      "--scalarizer",
      "--loop-instsimplify",
      "--mldst-motion",
      "--add-discriminators",
      "--instsimplify",
      "--lower-widenable-condition",
      "--mergefunc",
      "--libcalls-shrinkwrap",
      "--sroa",
      "--loop-unswitch",
      "--newgvn",
      "--instnamer",
      "--loop-rotate",
      "--rewrite-statepoints-for-gc",
      "--inject-tli-mappings",
      "--slp-vectorizer",
      "--loop-predication",
      "--alignment-from-assumptions",
      "--strip",
      "--loop-sink",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}