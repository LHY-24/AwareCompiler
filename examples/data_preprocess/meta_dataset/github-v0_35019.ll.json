{
  "program_id": "github-v0_35019.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 65,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 26,
    "oneSuccessor": 57,
    "twoPred": 36,
    "twoPredOneSuc": 17,
    "twoEach": 16,
    "twoSuccessor": 50,
    "morePreds": 6,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 113,
    "BeginPhi": 2,
    "BranchCount": 107,
    "returnInt": 27,
    "CriticalCount": 40,
    "NumEdges": 157,
    "const32Bit": 199,
    "const64Bit": 12,
    "numConstZeroes": 76,
    "numConstOnes": 79,
    "UncondBranches": 57,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 51,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 104,
    "NumBitCastInst": 0,
    "NumBrInst": 107,
    "NumCallInst": 66,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 50,
    "NumLShrInst": 0,
    "NumLoadInst": 252,
    "NumMulInst": 7,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 8,
    "NumSExtInst": 35,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 84,
    "NumSubInst": 12,
    "NumTruncInst": 12,
    "NumXorInst": 2,
    "NumZExtInst": 5,
    "TotalBlocks": 115,
    "TotalInsts": 770,
    "TotalMemInst": 496,
    "TotalFuncs": 25,
    "ArgsPhi": 4,
    "testUnary": 364
  },
  "baseline_oz_instcount": 770,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--newgvn",
    "--slsr",
    "--early-cse",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--die",
    "--aggressive-instcombine",
    "--instsimplify",
    "--early-cse-memssa",
    "--early-cse",
    "--simplifycfg",
    "--memcpyopt",
    "--loop-reroll",
    "--instcombine",
    "--prune-eh",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--gvn",
          "--coro-split",
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--separate-const-offset-from-gep",
          "--loop-fusion",
          "--lower-expect",
          "--globalopt",
          "--loop-versioning-licm",
          "--mldst-motion",
          "--loop-data-prefetch",
          "--mergeicmps",
          "--argpromotion",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--gvn",
      "--coro-split",
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--separate-const-offset-from-gep",
      "--loop-fusion",
      "--lower-expect",
      "--globalopt",
      "--loop-versioning-licm",
      "--mldst-motion",
      "--loop-data-prefetch",
      "--mergeicmps",
      "--argpromotion",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}