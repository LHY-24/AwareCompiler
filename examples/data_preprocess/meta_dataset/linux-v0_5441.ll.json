{
  "program_id": "linux-v0_5441.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 2,
    "oneSuccessor": 6,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 2,
    "CriticalCount": 2,
    "NumEdges": 14,
    "const32Bit": 23,
    "const64Bit": 1,
    "numConstZeroes": 9,
    "numConstOnes": 9,
    "UncondBranches": 6,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 11,
    "NumBitCastInst": 0,
    "NumBrInst": 9,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 24,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 10,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 13,
    "TotalInsts": 81,
    "TotalMemInst": 52,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 39
  },
  "baseline_oz_instcount": 83,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse-memssa",
    "--die",
    "--lower-expect",
    "--instcombine",
    "--instsimplify",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--die",
    "--lower-expect",
    "--instcombine",
    "--instsimplify",
    "--gvn-hoist",
    "--gvn",
    "--early-cse",
    "--sroa",
    "--flattencfg",
    "--sroa",
    "--mem2reg",
    "--memcpyopt",
    "--jump-threading",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--strip-dead-prototypes",
          "--newgvn",
          "--dse",
          "--prune-eh",
          "--elim-avail-extern",
          "--attributor",
          "--infer-address-spaces",
          "--die",
          "--gvn",
          "--nary-reassociate",
          "--instnamer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--strip-dead-prototypes",
      "--newgvn",
      "--dse",
      "--prune-eh",
      "--elim-avail-extern",
      "--attributor",
      "--infer-address-spaces",
      "--die",
      "--gvn",
      "--nary-reassociate",
      "--instnamer"
    ],
    "performance_vs_Oz": "+2.4%"
  }
}