{
  "program_id": "linux-v0_3935.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 3,
    "oneSuccessor": 27,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 8,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 0,
    "BranchCount": 35,
    "returnInt": 1,
    "CriticalCount": 6,
    "NumEdges": 48,
    "const32Bit": 193,
    "const64Bit": 5,
    "numConstZeroes": 113,
    "numConstOnes": 50,
    "UncondBranches": 27,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 35,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 39,
    "NumBitCastInst": 31,
    "NumBrInst": 35,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 94,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 49,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 6,
    "NumZExtInst": 5,
    "TotalBlocks": 46,
    "TotalInsts": 377,
    "TotalMemInst": 272,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 171
  },
  "baseline_oz_instcount": 377,
  "knowledge_base_entry": [
    "--loweratomic",
    "--early-cse",
    "--slsr",
    "--newgvn",
    "--mem2reg",
    "--simplifycfg",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--instsimplify",
    "--mergefunc",
    "--loop-reroll",
    "--correlated-propagation",
    "--dse",
    "--dce",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--instcombine",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--strip",
          "--instcombine",
          "--speculative-execution",
          "--dce",
          "--loop-instsimplify",
          "--coro-elide",
          "--inline",
          "--nary-reassociate",
          "--flattencfg",
          "--gvn-hoist",
          "--lowerinvoke",
          "--sancov",
          "--partially-inline-libcalls",
          "--loop-idiom",
          "--mergefunc",
          "--loop-vectorize",
          "--inject-tli-mappings",
          "--add-discriminators",
          "--correlated-propagation",
          "--loop-distribute",
          "--lower-matrix-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--strip",
      "--instcombine",
      "--speculative-execution",
      "--dce",
      "--loop-instsimplify",
      "--coro-elide",
      "--inline",
      "--nary-reassociate",
      "--flattencfg",
      "--gvn-hoist",
      "--lowerinvoke",
      "--sancov",
      "--partially-inline-libcalls",
      "--loop-idiom",
      "--mergefunc",
      "--loop-vectorize",
      "--inject-tli-mappings",
      "--add-discriminators",
      "--correlated-propagation",
      "--loop-distribute",
      "--lower-matrix-intrinsics"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}