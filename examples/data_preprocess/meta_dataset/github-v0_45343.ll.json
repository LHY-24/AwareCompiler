{
  "program_id": "github-v0_45343.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 68,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 21,
    "oneSuccessor": 56,
    "twoPred": 22,
    "twoPredOneSuc": 13,
    "twoEach": 7,
    "twoSuccessor": 34,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 98,
    "BeginPhi": 0,
    "BranchCount": 90,
    "returnInt": 43,
    "CriticalCount": 7,
    "NumEdges": 124,
    "const32Bit": 432,
    "const64Bit": 67,
    "numConstZeroes": 284,
    "numConstOnes": 101,
    "UncondBranches": 56,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 61,
    "NumAndInst": 0,
    "BlockMid": 14,
    "BlockLow": 84,
    "NumBitCastInst": 39,
    "NumBrInst": 90,
    "NumCallInst": 101,
    "NumGetElementPtrInst": 174,
    "NumICmpInst": 34,
    "NumLShrInst": 0,
    "NumLoadInst": 212,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 93,
    "NumSubInst": 2,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 98,
    "TotalInsts": 861,
    "TotalMemInst": 641,
    "TotalFuncs": 34,
    "ArgsPhi": 0,
    "testUnary": 342
  },
  "baseline_oz_instcount": 866,
  "knowledge_base_entry": [
    "--bdce",
    "--early-cse",
    "--load-store-vectorizer",
    "--early-cse",
    "--die",
    "--lower-expect",
    "--reassociate",
    "--newgvn",
    "--correlated-propagation",
    "--adce",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip",
          "--mergeicmps",
          "--argpromotion",
          "--aggressive-instcombine",
          "--lower-widenable-condition",
          "--lower-guard-intrinsic",
          "--elim-avail-extern",
          "--forceattrs",
          "--instsimplify",
          "--lower-matrix-intrinsics",
          "--libcalls-shrinkwrap",
          "--add-discriminators",
          "--early-cse",
          "--strip-debug-declare",
          "--sancov",
          "--strip-nondebug",
          "--load-store-vectorizer",
          "--simplifycfg",
          "--dce",
          "--hotcoldsplit",
          "--prune-eh",
          "--float2int",
          "--inject-tli-mappings",
          "--ipconstprop",
          "--dse",
          "--globaldce",
          "--globalopt",
          "--separate-const-offset-from-gep",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip",
      "--mergeicmps",
      "--argpromotion",
      "--aggressive-instcombine",
      "--lower-widenable-condition",
      "--lower-guard-intrinsic",
      "--elim-avail-extern",
      "--forceattrs",
      "--instsimplify",
      "--lower-matrix-intrinsics",
      "--libcalls-shrinkwrap",
      "--add-discriminators",
      "--early-cse",
      "--strip-debug-declare",
      "--sancov",
      "--strip-nondebug",
      "--load-store-vectorizer",
      "--simplifycfg",
      "--dce",
      "--hotcoldsplit",
      "--prune-eh",
      "--float2int",
      "--inject-tli-mappings",
      "--ipconstprop",
      "--dse",
      "--globaldce",
      "--globalopt",
      "--separate-const-offset-from-gep",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}