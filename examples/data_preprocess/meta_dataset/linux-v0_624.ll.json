{
  "program_id": "linux-v0_624.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 92,
    "onePredOneSuc": 79,
    "onePredTwoSuc": 7,
    "oneSuccessor": 92,
    "twoPred": 14,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 14,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 131,
    "BeginPhi": 1,
    "BranchCount": 106,
    "returnInt": 11,
    "CriticalCount": 8,
    "NumEdges": 140,
    "const32Bit": 341,
    "const64Bit": 27,
    "numConstZeroes": 139,
    "numConstOnes": 198,
    "UncondBranches": 92,
    "binaryConstArg": 25,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 135,
    "NumAndInst": 6,
    "BlockMid": 19,
    "BlockLow": 113,
    "NumBitCastInst": 67,
    "NumBrInst": 106,
    "NumCallInst": 57,
    "NumGetElementPtrInst": 83,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 237,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 22,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 148,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 11,
    "NumZExtInst": 13,
    "TotalBlocks": 132,
    "TotalInsts": 934,
    "TotalMemInst": 660,
    "TotalFuncs": 29,
    "ArgsPhi": 2,
    "testUnary": 466
  },
  "baseline_oz_instcount": 925,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--mergefunc",
    "--ipsccp",
    "--nary-reassociate",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-split",
          "--die",
          "--partial-inliner",
          "--sccp",
          "--loop-fusion",
          "--scalarizer",
          "--inline",
          "--loop-distribute",
          "--speculative-execution",
          "--ipsccp",
          "--loop-simplifycfg",
          "--aggressive-instcombine",
          "--nary-reassociate",
          "--constprop",
          "--mergefunc",
          "--loweratomic",
          "--lower-expect",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-split",
      "--die",
      "--partial-inliner",
      "--sccp",
      "--loop-fusion",
      "--scalarizer",
      "--inline",
      "--loop-distribute",
      "--speculative-execution",
      "--ipsccp",
      "--loop-simplifycfg",
      "--aggressive-instcombine",
      "--nary-reassociate",
      "--constprop",
      "--mergefunc",
      "--loweratomic",
      "--lower-expect",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}