{
  "program_id": "github-v0_29951.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 2,
    "oneSuccessor": 12,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 26,
    "const32Bit": 30,
    "const64Bit": 18,
    "numConstZeroes": 21,
    "numConstOnes": 22,
    "UncondBranches": 12,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 20,
    "NumBitCastInst": 0,
    "NumBrInst": 19,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 23,
    "TotalInsts": 137,
    "TotalMemInst": 79,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 61
  },
  "baseline_oz_instcount": 137,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--bdce",
    "--sccp",
    "--simplifycfg",
    "--dce",
    "--slp-vectorizer",
    "--adce",
    "--sroa",
    "-loop-reduce",
    "--jump-threading",
    "--newgvn",
    "--loop-fusion",
    "--jump-threading",
    "--sccp",
    "--loop-deletion",
    "--early-cse-memssa",
    "--early-cse",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--elim-avail-extern",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--loop-reroll",
          "--speculative-execution",
          "--always-inline",
          "--load-store-vectorizer",
          "--instnamer",
          "--mldst-motion",
          "--strip-nondebug",
          "--sink",
          "--sccp",
          "--barrier",
          "--aggressive-instcombine",
          "--canonicalize-aliases"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--loop-reroll",
      "--speculative-execution",
      "--always-inline",
      "--load-store-vectorizer",
      "--instnamer",
      "--mldst-motion",
      "--strip-nondebug",
      "--sink",
      "--sccp",
      "--barrier",
      "--aggressive-instcombine",
      "--canonicalize-aliases"
    ],
    "performance_vs_Oz": "+4.4%"
  }
}