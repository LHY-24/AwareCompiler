{
  "program_id": "github-v0_20963.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 68,
    "onePred": 68,
    "onePredOneSuc": 68,
    "onePredTwoSuc": 0,
    "oneSuccessor": 68,
    "twoPred": 68,
    "twoPredOneSuc": 0,
    "twoEach": 56,
    "twoSuccessor": 68,
    "morePreds": 0,
    "BB03Phi": 68,
    "BBHiPhi": 0,
    "BBNoPhi": 80,
    "BeginPhi": 68,
    "BranchCount": 136,
    "returnInt": 136,
    "CriticalCount": 68,
    "NumEdges": 204,
    "const32Bit": 237,
    "const64Bit": 165,
    "numConstZeroes": 234,
    "numConstOnes": 30,
    "UncondBranches": 68,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 148,
    "NumBitCastInst": 0,
    "NumBrInst": 136,
    "NumCallInst": 136,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 146,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 68,
    "NumRetInst": 12,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 0,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 68,
    "TotalBlocks": 148,
    "TotalInsts": 774,
    "TotalMemInst": 136,
    "TotalFuncs": 14,
    "ArgsPhi": 136,
    "testUnary": 78
  },
  "baseline_oz_instcount": 774,
  "knowledge_base_entry": [
    "--inferattrs",
    "--gvn",
    "--inline",
    "--die",
    "--sccp",
    "--gvn-hoist",
    "--mergefunc",
    "--loop-instsimplify",
    "--simplifycfg",
    "--elim-avail-extern",
    "--reassociate",
    "-loop-reduce",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--deadargelim",
          "--globalsplit",
          "--instsimplify",
          "--loop-instsimplify",
          "--guard-widening",
          "--scalarizer",
          "--jump-threading",
          "--pgo-memop-opt",
          "--lower-matrix-intrinsics",
          "-loop-reduce",
          "--ee-instrument",
          "--insert-gcov-profiling",
          "--consthoist",
          "--loop-predication",
          "--loop-vectorize",
          "--coro-split",
          "--cross-dso-cfi",
          "--div-rem-pairs",
          "--strip-nondebug",
          "--instcombine",
          "--rpo-functionattrs",
          "--strip",
          "--loop-deletion",
          "--coro-elide",
          "--loop-load-elim",
          "--elim-avail-extern",
          "--loop-simplify",
          "--rewrite-statepoints-for-gc",
          "--attributor"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--deadargelim",
      "--globalsplit",
      "--instsimplify",
      "--loop-instsimplify",
      "--guard-widening",
      "--scalarizer",
      "--jump-threading",
      "--pgo-memop-opt",
      "--lower-matrix-intrinsics",
      "-loop-reduce",
      "--ee-instrument",
      "--insert-gcov-profiling",
      "--consthoist",
      "--loop-predication",
      "--loop-vectorize",
      "--coro-split",
      "--cross-dso-cfi",
      "--div-rem-pairs",
      "--strip-nondebug",
      "--instcombine",
      "--rpo-functionattrs",
      "--strip",
      "--loop-deletion",
      "--coro-elide",
      "--loop-load-elim",
      "--elim-avail-extern",
      "--loop-simplify",
      "--rewrite-statepoints-for-gc",
      "--attributor"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}