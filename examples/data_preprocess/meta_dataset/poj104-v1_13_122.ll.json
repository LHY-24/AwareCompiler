{
  "program_id": "poj104-v1_13_122.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 13,
    "CriticalCount": 2,
    "NumEdges": 25,
    "const32Bit": 19,
    "const64Bit": 18,
    "numConstZeroes": 14,
    "numConstOnes": 11,
    "UncondBranches": 13,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 21,
    "NumBitCastInst": 12,
    "NumBrInst": 19,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 20,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 9,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 23,
    "TotalInsts": 116,
    "TotalMemInst": 68,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 43
  },
  "baseline_oz_instcount": 66,
  "knowledge_base_entry": [
    "--slsr",
    "--newgvn",
    "--mergefunc",
    "--mem2reg",
    "--bdce",
    "--jump-threading",
    "--instsimplify",
    "--licm",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--licm",
    "--globalopt",
    "--elim-avail-extern",
    "--loop-deletion",
    "--early-cse-memssa",
    "--loop-deletion",
    "--newgvn",
    "--load-store-vectorizer",
    "--slsr",
    "--indvars",
    "--loop-reroll",
    "--simplifycfg",
    "--globalopt",
    "--reassociate",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--ipsccp",
    "--adce",
    "--instsimplify",
    "--slp-vectorizer",
    "--sroa",
    "--bdce",
    "--instcombine",
    "--newgvn",
    "--indvars",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--ipsccp",
    "--adce",
    "--instsimplify",
    "--slp-vectorizer",
    "--sroa",
    "--bdce",
    "--instcombine",
    "--dse",
    "--inline",
    "--early-cse-memssa",
    "--instsimplify",
    "--dse",
    "--reassociate",
    "--slp-vectorizer",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--licm",
    "--globalopt",
    "--elim-avail-extern",
    "--loop-deletion",
    "--early-cse-memssa",
    "--loop-deletion",
    "--newgvn",
    "--load-store-vectorizer",
    "--slsr",
    "--indvars",
    "--loop-reroll",
    "--simplifycfg",
    "--globalopt",
    "--reassociate",
    "--dce",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-elide",
          "--hotcoldsplit",
          "--irce",
          "--loop-guard-widening",
          "--licm",
          "--loop-unroll-and-jam",
          "--alignment-from-assumptions",
          "--simplifycfg",
          "--loop-versioning",
          "--sink",
          "--jump-threading",
          "--lower-widenable-condition",
          "--coro-early",
          "--loop-distribute",
          "--cross-dso-cfi",
          "--instcombine",
          "--insert-gcov-profiling",
          "--tailcallelim",
          "--early-cse-memssa",
          "--consthoist",
          "--lowerswitch",
          "--always-inline",
          "--forceattrs",
          "--barrier",
          "--memcpyopt",
          "--ipsccp",
          "--sroa",
          "--dce",
          "--add-discriminators",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-elide",
      "--hotcoldsplit",
      "--irce",
      "--loop-guard-widening",
      "--licm",
      "--loop-unroll-and-jam",
      "--alignment-from-assumptions",
      "--simplifycfg",
      "--loop-versioning",
      "--sink",
      "--jump-threading",
      "--lower-widenable-condition",
      "--coro-early",
      "--loop-distribute",
      "--cross-dso-cfi",
      "--instcombine",
      "--insert-gcov-profiling",
      "--tailcallelim",
      "--early-cse-memssa",
      "--consthoist",
      "--lowerswitch",
      "--always-inline",
      "--forceattrs",
      "--barrier",
      "--memcpyopt",
      "--ipsccp",
      "--sroa",
      "--dce",
      "--add-discriminators",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}