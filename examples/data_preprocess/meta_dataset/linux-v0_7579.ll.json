{
  "program_id": "linux-v0_7579.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 8,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 16,
    "const32Bit": 34,
    "const64Bit": 4,
    "numConstZeroes": 18,
    "numConstOnes": 14,
    "UncondBranches": 8,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 13,
    "NumBitCastInst": 4,
    "NumBrInst": 12,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 15,
    "TotalInsts": 103,
    "TotalMemInst": 78,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 49
  },
  "baseline_oz_instcount": 99,
  "knowledge_base_entry": [
    "--loweratomic",
    "--globalopt",
    "--ipsccp",
    "--instcombine",
    "--mergefunc",
    "--bdce",
    "--instcombine",
    "--gvn-hoist",
    "--memcpyopt",
    "--elim-avail-extern",
    "--licm",
    "--early-cse-memssa",
    "--memcpyopt",
    "--jump-threading",
    "--loop-deletion",
    "--sccp",
    "--gvn",
    "--mldst-motion",
    "--instsimplify",
    "--prune-eh",
    "--aggressive-instcombine",
    "--lower-expect",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--dse",
    "--bdce",
    "--sccp",
    "--globalopt",
    "--mergefunc",
    "--gvn",
    "--nary-reassociate",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--sancov",
          "--forceattrs",
          "--mldst-motion",
          "--loop-rotate",
          "--add-discriminators",
          "--redundant-dbg-inst-elim",
          "--loop-load-elim",
          "--reassociate",
          "--globalopt",
          "--lowerinvoke",
          "--float2int",
          "--loop-interchange",
          "--name-anon-globals",
          "--loop-versioning",
          "--loop-unroll-and-jam",
          "--mergeicmps",
          "--guard-widening",
          "--simplifycfg",
          "--callsite-splitting",
          "--mem2reg",
          "--loop-sink",
          "--loop-reroll",
          "--load-store-vectorizer",
          "--canonicalize-aliases",
          "--hotcoldsplit",
          "--adce",
          "--ipsccp",
          "--coro-cleanup",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--sancov",
      "--forceattrs",
      "--mldst-motion",
      "--loop-rotate",
      "--add-discriminators",
      "--redundant-dbg-inst-elim",
      "--loop-load-elim",
      "--reassociate",
      "--globalopt",
      "--lowerinvoke",
      "--float2int",
      "--loop-interchange",
      "--name-anon-globals",
      "--loop-versioning",
      "--loop-unroll-and-jam",
      "--mergeicmps",
      "--guard-widening",
      "--simplifycfg",
      "--callsite-splitting",
      "--mem2reg",
      "--loop-sink",
      "--loop-reroll",
      "--load-store-vectorizer",
      "--canonicalize-aliases",
      "--hotcoldsplit",
      "--adce",
      "--ipsccp",
      "--coro-cleanup",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}