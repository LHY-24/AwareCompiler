{
  "program_id": "github-v0_6299.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 52,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 10,
    "oneSuccessor": 49,
    "twoPred": 21,
    "twoPredOneSuc": 7,
    "twoEach": 9,
    "twoSuccessor": 25,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 82,
    "BeginPhi": 2,
    "BranchCount": 74,
    "returnInt": 24,
    "CriticalCount": 4,
    "NumEdges": 99,
    "const32Bit": 100,
    "const64Bit": 29,
    "numConstZeroes": 59,
    "numConstOnes": 46,
    "UncondBranches": 49,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 26,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 81,
    "NumBitCastInst": 3,
    "NumBrInst": 74,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 120,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 8,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 60,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 84,
    "TotalInsts": 431,
    "TotalMemInst": 275,
    "TotalFuncs": 13,
    "ArgsPhi": 4,
    "testUnary": 176
  },
  "baseline_oz_instcount": 431,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--sroa",
    "--mldst-motion",
    "--gvn",
    "--mergefunc",
    "--ipsccp",
    "--jump-threading",
    "--adce",
    "--inline",
    "--elim-avail-extern",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--loop-load-elim",
          "--gvn",
          "--barrier",
          "--ipconstprop",
          "--mergefunc",
          "--loop-interchange",
          "--loop-instsimplify",
          "--early-cse-memssa",
          "--loop-sink",
          "--adce",
          "--correlated-propagation",
          "--float2int",
          "--callsite-splitting",
          "--div-rem-pairs",
          "--sroa",
          "--coro-cleanup",
          "--speculative-execution",
          "--alignment-from-assumptions",
          "--nary-reassociate",
          "--globalopt",
          "-loop-reduce",
          "--attributor"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--loop-load-elim",
      "--gvn",
      "--barrier",
      "--ipconstprop",
      "--mergefunc",
      "--loop-interchange",
      "--loop-instsimplify",
      "--early-cse-memssa",
      "--loop-sink",
      "--adce",
      "--correlated-propagation",
      "--float2int",
      "--callsite-splitting",
      "--div-rem-pairs",
      "--sroa",
      "--coro-cleanup",
      "--speculative-execution",
      "--alignment-from-assumptions",
      "--nary-reassociate",
      "--globalopt",
      "-loop-reduce",
      "--attributor"
    ],
    "performance_vs_Oz": "+6.5%"
  }
}