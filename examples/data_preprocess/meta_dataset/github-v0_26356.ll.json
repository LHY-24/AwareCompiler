{
  "program_id": "github-v0_26356.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 60,
    "const64Bit": 14,
    "numConstZeroes": 23,
    "numConstOnes": 42,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 36,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 18,
    "NumBitCastInst": 9,
    "NumBrInst": 0,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 20,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 35,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 19,
    "TotalInsts": 165,
    "TotalMemInst": 130,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 72
  },
  "baseline_oz_instcount": 165,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--instcombine",
    "--flattencfg",
    "--adce",
    "--licm",
    "--loop-instsimplify",
    "--mergefunc",
    "--mergefunc",
    "--jump-threading",
    "--die",
    "--early-cse",
    "--loop-reroll",
    "--sroa",
    "--correlated-propagation",
    "--mergefunc",
    "--elim-avail-extern",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--simplifycfg",
    "--loop-deletion",
    "--gvn-hoist",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--die",
          "--early-cse-memssa",
          "--functionattrs",
          "--partially-inline-libcalls",
          "--strip-debug-declare",
          "--lowerswitch",
          "--loop-interchange",
          "--loop-vectorize",
          "--mergefunc",
          "--mldst-motion",
          "--reg2mem",
          "--sccp",
          "--hotcoldsplit",
          "--break-crit-edges",
          "--separate-const-offset-from-gep",
          "--loweratomic",
          "--lower-expect",
          "--aggressive-instcombine",
          "--pgo-memop-opt",
          "--loop-versioning-licm",
          "--loop-idiom",
          "--strip-dead-prototypes",
          "--cross-dso-cfi",
          "--tailcallelim",
          "--globaldce",
          "--constmerge",
          "--instsimplify",
          "--coro-cleanup",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+28.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--die",
      "--early-cse-memssa",
      "--functionattrs",
      "--partially-inline-libcalls",
      "--strip-debug-declare",
      "--lowerswitch",
      "--loop-interchange",
      "--loop-vectorize",
      "--mergefunc",
      "--mldst-motion",
      "--reg2mem",
      "--sccp",
      "--hotcoldsplit",
      "--break-crit-edges",
      "--separate-const-offset-from-gep",
      "--loweratomic",
      "--lower-expect",
      "--aggressive-instcombine",
      "--pgo-memop-opt",
      "--loop-versioning-licm",
      "--loop-idiom",
      "--strip-dead-prototypes",
      "--cross-dso-cfi",
      "--tailcallelim",
      "--globaldce",
      "--constmerge",
      "--instsimplify",
      "--coro-cleanup",
      "--reassociate"
    ],
    "performance_vs_Oz": "+28.5%"
  }
}