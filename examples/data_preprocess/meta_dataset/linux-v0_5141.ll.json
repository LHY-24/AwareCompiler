{
  "program_id": "linux-v0_5141.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 70,
    "onePredOneSuc": 61,
    "onePredTwoSuc": 7,
    "oneSuccessor": 66,
    "twoPred": 20,
    "twoPredOneSuc": 3,
    "twoEach": 11,
    "twoSuccessor": 26,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 110,
    "BeginPhi": 3,
    "BranchCount": 92,
    "returnInt": 4,
    "CriticalCount": 13,
    "NumEdges": 123,
    "const32Bit": 361,
    "const64Bit": 26,
    "numConstZeroes": 188,
    "numConstOnes": 152,
    "UncondBranches": 66,
    "binaryConstArg": 36,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 95,
    "NumAndInst": 2,
    "BlockMid": 14,
    "BlockLow": 99,
    "NumBitCastInst": 33,
    "NumBrInst": 92,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 111,
    "NumICmpInst": 33,
    "NumLShrInst": 1,
    "NumLoadInst": 208,
    "NumMulInst": 4,
    "NumOrInst": 2,
    "NumPHIInst": 3,
    "NumRetInst": 20,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 120,
    "NumSubInst": 2,
    "NumTruncInst": 6,
    "NumXorInst": 18,
    "NumZExtInst": 32,
    "TotalBlocks": 113,
    "TotalInsts": 858,
    "TotalMemInst": 588,
    "TotalFuncs": 34,
    "ArgsPhi": 6,
    "testUnary": 387
  },
  "baseline_oz_instcount": 858,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--instcombine",
    "--sroa",
    "--bdce",
    "--sccp",
    "--elim-avail-extern",
    "--memcpyopt",
    "--gvn",
    "--mergefunc",
    "--aggressive-instcombine",
    "--gvn",
    "--loop-rotate",
    "--mem2reg",
    "--globalopt",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--newgvn",
    "--load-store-vectorizer",
    "--adce",
    "--mergefunc",
    "--simplifycfg",
    "--nary-reassociate",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--strip-debug-declare",
          "--mem2reg",
          "--loop-instsimplify",
          "--loop-versioning-licm",
          "--lcssa",
          "--rewrite-statepoints-for-gc",
          "--inject-tli-mappings",
          "--slp-vectorizer",
          "--slsr",
          "--post-inline-ee-instrument",
          "--lower-matrix-intrinsics",
          "--forceattrs",
          "--aggressive-instcombine",
          "--loop-versioning",
          "--scalarizer",
          "--mldst-motion",
          "--loop-unroll-and-jam",
          "--lower-constant-intrinsics",
          "--pgo-memop-opt",
          "--lower-widenable-condition",
          "--rpo-functionattrs",
          "--nary-reassociate",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--strip-debug-declare",
      "--mem2reg",
      "--loop-instsimplify",
      "--loop-versioning-licm",
      "--lcssa",
      "--rewrite-statepoints-for-gc",
      "--inject-tli-mappings",
      "--slp-vectorizer",
      "--slsr",
      "--post-inline-ee-instrument",
      "--lower-matrix-intrinsics",
      "--forceattrs",
      "--aggressive-instcombine",
      "--loop-versioning",
      "--scalarizer",
      "--mldst-motion",
      "--loop-unroll-and-jam",
      "--lower-constant-intrinsics",
      "--pgo-memop-opt",
      "--lower-widenable-condition",
      "--rpo-functionattrs",
      "--nary-reassociate",
      "--indvars"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}