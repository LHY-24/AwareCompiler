{
  "program_id": "linux-v0_6268.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 74,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 31,
    "oneSuccessor": 60,
    "twoPred": 24,
    "twoPredOneSuc": 16,
    "twoEach": 7,
    "twoSuccessor": 44,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 112,
    "BeginPhi": 0,
    "BranchCount": 104,
    "returnInt": 9,
    "CriticalCount": 20,
    "NumEdges": 148,
    "const32Bit": 280,
    "const64Bit": 39,
    "numConstZeroes": 136,
    "numConstOnes": 93,
    "UncondBranches": 60,
    "binaryConstArg": 35,
    "NumAShrInst": 4,
    "NumAddInst": 24,
    "NumAllocaInst": 72,
    "NumAndInst": 8,
    "BlockMid": 19,
    "BlockLow": 93,
    "NumBitCastInst": 21,
    "NumBrInst": 104,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 91,
    "NumICmpInst": 47,
    "NumLShrInst": 3,
    "NumLoadInst": 323,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 24,
    "NumSelectInst": 1,
    "NumShlInst": 4,
    "NumStoreInst": 124,
    "NumSubInst": 15,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 24,
    "TotalBlocks": 112,
    "TotalInsts": 939,
    "TotalMemInst": 639,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 476
  },
  "baseline_oz_instcount": 939,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--newgvn",
    "--aggressive-instcombine",
    "--newgvn",
    "--loop-rotate",
    "--instcombine",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--gvn",
    "--mergefunc",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-rotate",
          "--ipconstprop",
          "--slsr",
          "--loop-guard-widening",
          "--instnamer",
          "--inject-tli-mappings",
          "--loop-instsimplify",
          "--loweratomic",
          "--reassociate",
          "--aggressive-instcombine",
          "--mergereturn",
          "--loop-load-elim",
          "--coro-split",
          "--instsimplify",
          "--lower-guard-intrinsic",
          "--early-cse",
          "--lower-expect",
          "--bdce",
          "--elim-avail-extern",
          "--dse",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-rotate",
      "--ipconstprop",
      "--slsr",
      "--loop-guard-widening",
      "--instnamer",
      "--inject-tli-mappings",
      "--loop-instsimplify",
      "--loweratomic",
      "--reassociate",
      "--aggressive-instcombine",
      "--mergereturn",
      "--loop-load-elim",
      "--coro-split",
      "--instsimplify",
      "--lower-guard-intrinsic",
      "--early-cse",
      "--lower-expect",
      "--bdce",
      "--elim-avail-extern",
      "--dse",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}