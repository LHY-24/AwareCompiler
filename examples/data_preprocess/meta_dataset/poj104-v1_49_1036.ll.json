{
  "program_id": "poj104-v1_49_1036.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 2,
    "oneSuccessor": 15,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 6,
    "CriticalCount": 1,
    "NumEdges": 27,
    "const32Bit": 39,
    "const64Bit": 31,
    "numConstZeroes": 13,
    "numConstOnes": 32,
    "UncondBranches": 15,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 23,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 22,
    "NumBitCastInst": 26,
    "NumBrInst": 21,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 3,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 25,
    "TotalInsts": 205,
    "TotalMemInst": 129,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 92
  },
  "baseline_oz_instcount": 81,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--early-cse",
    "--dse",
    "--instcombine",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--die",
    "--correlated-propagation",
    "--lower-expect",
    "--newgvn",
    "--nary-reassociate",
    "-loop-reduce",
    "--early-cse-memssa",
    "--memcpyopt",
    "--instsimplify",
    "--bdce",
    "--gvn",
    "--reassociate",
    "--sccp",
    "--simplifycfg",
    "--slp-vectorizer",
    "--inline",
    "--dce",
    "--simplifycfg",
    "--nary-reassociate",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--mem2reg",
    "--mergefunc",
    "--globalopt",
    "--reassociate",
    "--sroa",
    "--loop-simplifycfg",
    "--flattencfg",
    "--globalopt",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--jump-threading",
    "--early-cse",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--die",
    "--jump-threading",
    "--instcombine",
    "--prune-eh",
    "--loop-simplifycfg",
    "--inline",
    "--simplifycfg",
    "--inline",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--ipsccp",
    "--flattencfg",
    "--gvn-hoist",
    "--prune-eh",
    "--instsimplify",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--barrier",
          "--globalopt",
          "--slp-vectorizer",
          "--gvn-hoist",
          "--inline",
          "--ipsccp",
          "--callsite-splitting",
          "--mergefunc",
          "--gvn",
          "--loop-unroll",
          "--slsr",
          "--cross-dso-cfi",
          "--scalarizer",
          "--coro-elide",
          "--mldst-motion",
          "--mergeicmps",
          "--die",
          "--instcombine",
          "--lower-constant-intrinsics",
          "--licm",
          "--lower-matrix-intrinsics",
          "--instsimplify",
          "--coro-early",
          "--jump-threading",
          "--strip",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--barrier",
      "--globalopt",
      "--slp-vectorizer",
      "--gvn-hoist",
      "--inline",
      "--ipsccp",
      "--callsite-splitting",
      "--mergefunc",
      "--gvn",
      "--loop-unroll",
      "--slsr",
      "--cross-dso-cfi",
      "--scalarizer",
      "--coro-elide",
      "--mldst-motion",
      "--mergeicmps",
      "--die",
      "--instcombine",
      "--lower-constant-intrinsics",
      "--licm",
      "--lower-matrix-intrinsics",
      "--instsimplify",
      "--coro-early",
      "--jump-threading",
      "--strip",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}