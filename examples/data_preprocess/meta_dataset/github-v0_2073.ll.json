{
  "program_id": "github-v0_2073.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 0,
    "oneSuccessor": 5,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 1,
    "CriticalCount": 0,
    "NumEdges": 9,
    "const32Bit": 32,
    "const64Bit": 5,
    "numConstZeroes": 18,
    "numConstOnes": 14,
    "UncondBranches": 5,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 6,
    "NumBitCastInst": 0,
    "NumBrInst": 7,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 24,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 1,
    "NumZExtInst": 2,
    "TotalBlocks": 9,
    "TotalInsts": 86,
    "TotalMemInst": 67,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 40
  },
  "baseline_oz_instcount": 86,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--reassociate",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--die",
    "--elim-avail-extern",
    "--loop-deletion",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--mem2reg",
    "--licm",
    "--nary-reassociate",
    "--indvars",
    "--instcombine",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--newgvn",
          "--sroa",
          "--mergereturn",
          "--ipsccp",
          "--attributor",
          "--slsr",
          "--tailcallelim",
          "--mergeicmps",
          "--flattencfg",
          "--strip-dead-prototypes",
          "--alignment-from-assumptions",
          "--loop-load-elim",
          "--sancov",
          "--mldst-motion",
          "--loop-unswitch",
          "--canonicalize-aliases",
          "--ipconstprop",
          "--guard-widening",
          "--globalopt",
          "--sink",
          "--globaldce",
          "--correlated-propagation",
          "--barrier",
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--cross-dso-cfi",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--newgvn",
      "--sroa",
      "--mergereturn",
      "--ipsccp",
      "--attributor",
      "--slsr",
      "--tailcallelim",
      "--mergeicmps",
      "--flattencfg",
      "--strip-dead-prototypes",
      "--alignment-from-assumptions",
      "--loop-load-elim",
      "--sancov",
      "--mldst-motion",
      "--loop-unswitch",
      "--canonicalize-aliases",
      "--ipconstprop",
      "--guard-widening",
      "--globalopt",
      "--sink",
      "--globaldce",
      "--correlated-propagation",
      "--barrier",
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--cross-dso-cfi",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+3.5%"
  }
}