{
  "program_id": "github-v0_4689.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 15,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 47,
    "const64Bit": 0,
    "numConstZeroes": 1,
    "numConstOnes": 31,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 31,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 31,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 19,
    "TotalInsts": 96,
    "TotalMemInst": 77,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 31
  },
  "baseline_oz_instcount": 96,
  "knowledge_base_entry": [
    "--gvn",
    "-loop-reduce",
    "--mergefunc",
    "--inline",
    "--globalopt",
    "--dse",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--mergefunc",
    "--memcpyopt",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--early-cse",
    "--nary-reassociate",
    "--jump-threading",
    "--mergefunc",
    "--instsimplify",
    "--reassociate",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--deadargelim",
          "--indvars",
          "--loop-interchange",
          "--loop-unswitch",
          "--correlated-propagation",
          "--loop-unroll",
          "--mergefunc",
          "--strip",
          "--loop-simplifycfg",
          "--loop-versioning-licm",
          "--functionattrs",
          "--lower-expect",
          "--loop-reroll",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+29.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--deadargelim",
      "--indvars",
      "--loop-interchange",
      "--loop-unswitch",
      "--correlated-propagation",
      "--loop-unroll",
      "--mergefunc",
      "--strip",
      "--loop-simplifycfg",
      "--loop-versioning-licm",
      "--functionattrs",
      "--lower-expect",
      "--loop-reroll",
      "--always-inline"
    ],
    "performance_vs_Oz": "+29.2%"
  }
}