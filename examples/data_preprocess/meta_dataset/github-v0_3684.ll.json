{
  "program_id": "github-v0_3684.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 102,
    "onePredOneSuc": 68,
    "onePredTwoSuc": 34,
    "oneSuccessor": 72,
    "twoPred": 22,
    "twoPredOneSuc": 4,
    "twoEach": 15,
    "twoSuccessor": 53,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 126,
    "BeginPhi": 2,
    "BranchCount": 125,
    "returnInt": 109,
    "CriticalCount": 10,
    "NumEdges": 178,
    "const32Bit": 200,
    "const64Bit": 76,
    "numConstZeroes": 179,
    "numConstOnes": 56,
    "UncondBranches": 72,
    "binaryConstArg": 11,
    "NumAShrInst": 1,
    "NumAddInst": 9,
    "NumAllocaInst": 32,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 123,
    "NumBitCastInst": 2,
    "NumBrInst": 125,
    "NumCallInst": 134,
    "NumGetElementPtrInst": 89,
    "NumICmpInst": 53,
    "NumLShrInst": 0,
    "NumLoadInst": 197,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 3,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 56,
    "NumSubInst": 4,
    "NumTruncInst": 8,
    "NumXorInst": 1,
    "NumZExtInst": 27,
    "TotalBlocks": 128,
    "TotalInsts": 756,
    "TotalMemInst": 508,
    "TotalFuncs": 40,
    "ArgsPhi": 4,
    "testUnary": 272
  },
  "baseline_oz_instcount": 756,
  "knowledge_base_entry": [
    "--sink",
    "--simplifycfg",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--sroa",
    "--loop-deletion",
    "--gvn",
    "--globalopt",
    "--licm",
    "--load-store-vectorizer",
    "--newgvn",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--ipconstprop",
          "--loop-fusion",
          "--loop-versioning",
          "--strip-dead-prototypes",
          "--aggressive-instcombine",
          "--ee-instrument",
          "--lowerinvoke",
          "--constmerge",
          "--gvn",
          "--newgvn",
          "--always-inline",
          "--insert-gcov-profiling",
          "--libcalls-shrinkwrap",
          "--scalarizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--ipconstprop",
      "--loop-fusion",
      "--loop-versioning",
      "--strip-dead-prototypes",
      "--aggressive-instcombine",
      "--ee-instrument",
      "--lowerinvoke",
      "--constmerge",
      "--gvn",
      "--newgvn",
      "--always-inline",
      "--insert-gcov-profiling",
      "--libcalls-shrinkwrap",
      "--scalarizer"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}