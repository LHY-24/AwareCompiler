{
  "program_id": "github-v0_34558.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 5,
    "oneSuccessor": 18,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 2,
    "CriticalCount": 3,
    "NumEdges": 38,
    "const32Bit": 38,
    "const64Bit": 0,
    "numConstZeroes": 12,
    "numConstOnes": 30,
    "UncondBranches": 18,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 23,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 25,
    "NumBitCastInst": 0,
    "NumBrInst": 28,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 69,
    "NumMulInst": 7,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 38,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 30,
    "TotalInsts": 227,
    "TotalMemInst": 152,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 110
  },
  "baseline_oz_instcount": 228,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--sroa",
    "--slp-vectorizer",
    "--instcombine",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--lower-expect",
    "--globalopt",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-expect",
          "--tailcallelim",
          "--dce",
          "--elim-avail-extern",
          "--sink",
          "--lowerinvoke",
          "--jump-threading",
          "--div-rem-pairs",
          "--memcpyopt",
          "--mergefunc",
          "--always-inline",
          "--instsimplify",
          "--infer-address-spaces",
          "--early-cse",
          "--coro-cleanup",
          "--inferattrs",
          "--bdce",
          "--coro-elide"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-expect",
      "--tailcallelim",
      "--dce",
      "--elim-avail-extern",
      "--sink",
      "--lowerinvoke",
      "--jump-threading",
      "--div-rem-pairs",
      "--memcpyopt",
      "--mergefunc",
      "--always-inline",
      "--instsimplify",
      "--infer-address-spaces",
      "--early-cse",
      "--coro-cleanup",
      "--inferattrs",
      "--bdce",
      "--coro-elide"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}