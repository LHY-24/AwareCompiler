{
  "program_id": "linux-v0_5493.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 59,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 16,
    "oneSuccessor": 46,
    "twoPred": 12,
    "twoPredOneSuc": 2,
    "twoEach": 8,
    "twoSuccessor": 31,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 86,
    "BeginPhi": 1,
    "BranchCount": 77,
    "returnInt": 24,
    "CriticalCount": 6,
    "NumEdges": 108,
    "const32Bit": 224,
    "const64Bit": 26,
    "numConstZeroes": 97,
    "numConstOnes": 83,
    "UncondBranches": 46,
    "binaryConstArg": 34,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 52,
    "NumAndInst": 8,
    "BlockMid": 11,
    "BlockLow": 76,
    "NumBitCastInst": 0,
    "NumBrInst": 77,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 51,
    "NumICmpInst": 33,
    "NumLShrInst": 2,
    "NumLoadInst": 173,
    "NumMulInst": 3,
    "NumOrInst": 13,
    "NumPHIInst": 1,
    "NumRetInst": 10,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 97,
    "NumSubInst": 6,
    "NumTruncInst": 14,
    "NumXorInst": 3,
    "NumZExtInst": 21,
    "TotalBlocks": 87,
    "TotalInsts": 611,
    "TotalMemInst": 400,
    "TotalFuncs": 17,
    "ArgsPhi": 3,
    "testUnary": 271
  },
  "baseline_oz_instcount": 611,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--early-cse",
    "--inline",
    "--load-store-vectorizer",
    "--reassociate",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--lower-expect",
    "--elim-avail-extern",
    "--instsimplify",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-reroll",
          "--scalarizer",
          "--loop-interchange",
          "--slp-vectorizer",
          "--dce",
          "--memcpyopt",
          "--loop-data-prefetch",
          "--sccp",
          "--loop-load-elim",
          "--inject-tli-mappings",
          "--jump-threading",
          "--div-rem-pairs",
          "--load-store-vectorizer",
          "--rewrite-statepoints-for-gc",
          "--coro-split",
          "--post-inline-ee-instrument",
          "--cross-dso-cfi",
          "--loop-instsimplify",
          "--called-value-propagation",
          "--lower-expect",
          "--aggressive-instcombine",
          "--globalopt",
          "--partially-inline-libcalls",
          "--mergereturn",
          "-loop-reduce",
          "--infer-address-spaces",
          "--lowerswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-reroll",
      "--scalarizer",
      "--loop-interchange",
      "--slp-vectorizer",
      "--dce",
      "--memcpyopt",
      "--loop-data-prefetch",
      "--sccp",
      "--loop-load-elim",
      "--inject-tli-mappings",
      "--jump-threading",
      "--div-rem-pairs",
      "--load-store-vectorizer",
      "--rewrite-statepoints-for-gc",
      "--coro-split",
      "--post-inline-ee-instrument",
      "--cross-dso-cfi",
      "--loop-instsimplify",
      "--called-value-propagation",
      "--lower-expect",
      "--aggressive-instcombine",
      "--globalopt",
      "--partially-inline-libcalls",
      "--mergereturn",
      "-loop-reduce",
      "--infer-address-spaces",
      "--lowerswitch"
    ],
    "performance_vs_Oz": "+3.6%"
  }
}