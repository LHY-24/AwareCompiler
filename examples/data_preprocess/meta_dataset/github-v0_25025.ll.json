{
  "program_id": "github-v0_25025.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 66,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 18,
    "oneSuccessor": 51,
    "twoPred": 33,
    "twoPredOneSuc": 13,
    "twoEach": 18,
    "twoSuccessor": 42,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 103,
    "BeginPhi": 2,
    "BranchCount": 93,
    "returnInt": 24,
    "CriticalCount": 22,
    "NumEdges": 135,
    "const32Bit": 88,
    "const64Bit": 28,
    "numConstZeroes": 42,
    "numConstOnes": 63,
    "UncondBranches": 51,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 33,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 100,
    "NumBitCastInst": 1,
    "NumBrInst": 93,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 43,
    "NumLShrInst": 0,
    "NumLoadInst": 160,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 5,
    "NumSExtInst": 10,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 80,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 105,
    "TotalInsts": 544,
    "TotalMemInst": 370,
    "TotalFuncs": 23,
    "ArgsPhi": 4,
    "testUnary": 206
  },
  "baseline_oz_instcount": 545,
  "knowledge_base_entry": [
    "--inline",
    "--nary-reassociate",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--instcombine",
    "--gvn",
    "--simplifycfg",
    "--mldst-motion",
    "--early-cse-memssa",
    "--adce",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse-memssa",
          "--coro-split",
          "--prune-eh",
          "--attributor",
          "--div-rem-pairs",
          "--dce",
          "--always-inline",
          "--lower-guard-intrinsic",
          "--gvn",
          "--die",
          "--add-discriminators",
          "--inferattrs",
          "--sink",
          "--coro-early",
          "--coro-cleanup",
          "--memcpyopt",
          "--hotcoldsplit",
          "--slp-vectorizer",
          "--lowerswitch",
          "--consthoist",
          "--post-inline-ee-instrument",
          "--load-store-vectorizer",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse-memssa",
      "--coro-split",
      "--prune-eh",
      "--attributor",
      "--div-rem-pairs",
      "--dce",
      "--always-inline",
      "--lower-guard-intrinsic",
      "--gvn",
      "--die",
      "--add-discriminators",
      "--inferattrs",
      "--sink",
      "--coro-early",
      "--coro-cleanup",
      "--memcpyopt",
      "--hotcoldsplit",
      "--slp-vectorizer",
      "--lowerswitch",
      "--consthoist",
      "--post-inline-ee-instrument",
      "--load-store-vectorizer",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}