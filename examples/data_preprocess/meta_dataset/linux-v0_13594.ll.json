{
  "program_id": "linux-v0_13594.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 59,
    "onePredOneSuc": 44,
    "onePredTwoSuc": 14,
    "oneSuccessor": 55,
    "twoPred": 18,
    "twoPredOneSuc": 8,
    "twoEach": 4,
    "twoSuccessor": 24,
    "morePreds": 7,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 108,
    "BeginPhi": 1,
    "BranchCount": 78,
    "returnInt": 22,
    "CriticalCount": 11,
    "NumEdges": 122,
    "const32Bit": 405,
    "const64Bit": 9,
    "numConstZeroes": 176,
    "numConstOnes": 106,
    "UncondBranches": 55,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 75,
    "NumAndInst": 4,
    "BlockMid": 11,
    "BlockLow": 98,
    "NumBitCastInst": 15,
    "NumBrInst": 78,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 122,
    "NumICmpInst": 23,
    "NumLShrInst": 0,
    "NumLoadInst": 253,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 25,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 145,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 2,
    "NumZExtInst": 1,
    "TotalBlocks": 109,
    "TotalInsts": 820,
    "TotalMemInst": 649,
    "TotalFuncs": 44,
    "ArgsPhi": 2,
    "testUnary": 357
  },
  "baseline_oz_instcount": 820,
  "knowledge_base_entry": [
    "--sroa",
    "--lower-expect",
    "--ipsccp",
    "--dse",
    "--adce",
    "--early-cse",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--flattencfg",
          "--attributor",
          "--loop-distribute",
          "--sancov",
          "--canonicalize-aliases",
          "--ipsccp",
          "--inferattrs",
          "--loop-versioning",
          "--memcpyopt",
          "--loop-sink",
          "--newgvn",
          "--strip",
          "--tailcallelim",
          "--lower-constant-intrinsics",
          "--mergereturn",
          "--loop-vectorize",
          "-loop-reduce",
          "--infer-address-spaces",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--flattencfg",
      "--attributor",
      "--loop-distribute",
      "--sancov",
      "--canonicalize-aliases",
      "--ipsccp",
      "--inferattrs",
      "--loop-versioning",
      "--memcpyopt",
      "--loop-sink",
      "--newgvn",
      "--strip",
      "--tailcallelim",
      "--lower-constant-intrinsics",
      "--mergereturn",
      "--loop-vectorize",
      "-loop-reduce",
      "--infer-address-spaces",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}