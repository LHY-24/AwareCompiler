{
  "program_id": "linux-v0_2534.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 21,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 2,
    "oneSuccessor": 21,
    "twoPred": 12,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 12,
    "morePreds": 0,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 43,
    "BeginPhi": 4,
    "BranchCount": 33,
    "returnInt": 15,
    "CriticalCount": 5,
    "NumEdges": 45,
    "const32Bit": 152,
    "const64Bit": 10,
    "numConstZeroes": 53,
    "numConstOnes": 59,
    "UncondBranches": 21,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 48,
    "NumAndInst": 4,
    "BlockMid": 9,
    "BlockLow": 38,
    "NumBitCastInst": 4,
    "NumBrInst": 33,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 121,
    "NumMulInst": 2,
    "NumOrInst": 7,
    "NumPHIInst": 4,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 54,
    "NumSubInst": 2,
    "NumTruncInst": 16,
    "NumXorInst": 1,
    "NumZExtInst": 27,
    "TotalBlocks": 47,
    "TotalInsts": 431,
    "TotalMemInst": 298,
    "TotalFuncs": 43,
    "ArgsPhi": 8,
    "testUnary": 216
  },
  "baseline_oz_instcount": 432,
  "knowledge_base_entry": [
    "--early-cse",
    "--globalopt",
    "--instsimplify",
    "--simplifycfg",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--lower-expect",
          "--loweratomic",
          "--jump-threading",
          "--globalopt",
          "--lcssa",
          "--separate-const-offset-from-gep",
          "--loop-vectorize",
          "--mergefunc",
          "--consthoist",
          "--post-inline-ee-instrument",
          "--early-cse-memssa",
          "--constmerge",
          "--mem2reg",
          "--attributor",
          "--speculative-execution",
          "--loop-unroll-and-jam",
          "--loop-unroll",
          "--called-value-propagation",
          "--prune-eh",
          "--strip-dead-prototypes",
          "--lowerswitch",
          "--aggressive-instcombine",
          "--sccp",
          "--strip-nondebug"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--lower-expect",
      "--loweratomic",
      "--jump-threading",
      "--globalopt",
      "--lcssa",
      "--separate-const-offset-from-gep",
      "--loop-vectorize",
      "--mergefunc",
      "--consthoist",
      "--post-inline-ee-instrument",
      "--early-cse-memssa",
      "--constmerge",
      "--mem2reg",
      "--attributor",
      "--speculative-execution",
      "--loop-unroll-and-jam",
      "--loop-unroll",
      "--called-value-propagation",
      "--prune-eh",
      "--strip-dead-prototypes",
      "--lowerswitch",
      "--aggressive-instcombine",
      "--sccp",
      "--strip-nondebug"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}