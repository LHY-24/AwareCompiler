{
  "program_id": "linux-v0_12556.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 34,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 4,
    "oneSuccessor": 33,
    "twoPred": 7,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 9,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 0,
    "BranchCount": 42,
    "returnInt": 5,
    "CriticalCount": 2,
    "NumEdges": 65,
    "const32Bit": 208,
    "const64Bit": 5,
    "numConstZeroes": 86,
    "numConstOnes": 92,
    "UncondBranches": 33,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 65,
    "NumAndInst": 3,
    "BlockMid": 12,
    "BlockLow": 46,
    "NumBitCastInst": 30,
    "NumBrInst": 42,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 172,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 7,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 97,
    "NumSubInst": 4,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 58,
    "TotalInsts": 562,
    "TotalMemInst": 424,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 289
  },
  "baseline_oz_instcount": 561,
  "knowledge_base_entry": [
    "--ipsccp",
    "--aggressive-instcombine",
    "--newgvn",
    "--slsr",
    "--loop-reroll",
    "--early-cse",
    "--dse",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--globalopt",
    "--globaldce",
    "--ipsccp",
    "--aggressive-instcombine",
    "--instcombine",
    "--prune-eh",
    "--sroa",
    "--instcombine",
    "--aggressive-instcombine",
    "--ipsccp",
    "--die",
    "--gvn-hoist",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--reassociate",
    "--licm",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalsplit",
          "--sccp",
          "--newgvn",
          "--inline",
          "--loop-load-elim",
          "--elim-avail-extern",
          "--rewrite-statepoints-for-gc",
          "--loop-data-prefetch",
          "--loop-versioning",
          "--dce",
          "--called-value-propagation",
          "--redundant-dbg-inst-elim",
          "--inferattrs",
          "--aggressive-instcombine",
          "--loop-fusion",
          "--functionattrs",
          "--mem2reg",
          "--ipsccp",
          "--gvn-hoist",
          "--globaldce",
          "--strip-dead-prototypes",
          "--coro-cleanup",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalsplit",
      "--sccp",
      "--newgvn",
      "--inline",
      "--loop-load-elim",
      "--elim-avail-extern",
      "--rewrite-statepoints-for-gc",
      "--loop-data-prefetch",
      "--loop-versioning",
      "--dce",
      "--called-value-propagation",
      "--redundant-dbg-inst-elim",
      "--inferattrs",
      "--aggressive-instcombine",
      "--loop-fusion",
      "--functionattrs",
      "--mem2reg",
      "--ipsccp",
      "--gvn-hoist",
      "--globaldce",
      "--strip-dead-prototypes",
      "--coro-cleanup",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}