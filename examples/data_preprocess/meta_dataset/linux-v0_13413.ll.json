{
  "program_id": "linux-v0_13413.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 4,
    "oneSuccessor": 31,
    "twoPred": 28,
    "twoPredOneSuc": 4,
    "twoEach": 19,
    "twoSuccessor": 28,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 65,
    "BeginPhi": 0,
    "BranchCount": 59,
    "returnInt": 34,
    "CriticalCount": 25,
    "NumEdges": 87,
    "const32Bit": 159,
    "const64Bit": 4,
    "numConstZeroes": 80,
    "numConstOnes": 31,
    "UncondBranches": 31,
    "binaryConstArg": 37,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 19,
    "NumAndInst": 28,
    "BlockMid": 7,
    "BlockLow": 58,
    "NumBitCastInst": 2,
    "NumBrInst": 59,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 30,
    "NumLShrInst": 0,
    "NumLoadInst": 85,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 6,
    "NumStoreInst": 25,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 46,
    "TotalBlocks": 65,
    "TotalInsts": 396,
    "TotalMemInst": 208,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 153
  },
  "baseline_oz_instcount": 396,
  "knowledge_base_entry": [
    "--gvn",
    "--correlated-propagation",
    "--mergefunc",
    "--licm",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--prune-eh",
    "--licm",
    "--sroa",
    "--gvn-hoist",
    "--simplifycfg",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--functionattrs",
          "--alignment-from-assumptions",
          "--aggressive-instcombine",
          "--constmerge",
          "--rpo-functionattrs",
          "--loop-simplify",
          "--loweratomic",
          "--reassociate",
          "--lower-expect"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--functionattrs",
      "--alignment-from-assumptions",
      "--aggressive-instcombine",
      "--constmerge",
      "--rpo-functionattrs",
      "--loop-simplify",
      "--loweratomic",
      "--reassociate",
      "--lower-expect"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}