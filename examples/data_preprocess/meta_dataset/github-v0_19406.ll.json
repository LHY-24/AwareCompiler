{
  "program_id": "github-v0_19406.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 8,
    "oneSuccessor": 27,
    "twoPred": 20,
    "twoPredOneSuc": 8,
    "twoEach": 11,
    "twoSuccessor": 20,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 47,
    "returnInt": 30,
    "CriticalCount": 16,
    "NumEdges": 67,
    "const32Bit": 59,
    "const64Bit": 19,
    "numConstZeroes": 23,
    "numConstOnes": 42,
    "UncondBranches": 27,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 48,
    "NumBitCastInst": 2,
    "NumBrInst": 47,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 96,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 43,
    "NumSubInst": 4,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 50,
    "TotalInsts": 301,
    "TotalMemInst": 203,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 116
  },
  "baseline_oz_instcount": 303,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--flattencfg",
    "--load-store-vectorizer",
    "--dce",
    "--reassociate",
    "--simplifycfg",
    "--prune-eh",
    "--early-cse-memssa",
    "--newgvn",
    "--early-cse",
    "--globalopt",
    "--flattencfg",
    "--adce",
    "--gvn-hoist",
    "--ipsccp",
    "--nary-reassociate",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--newgvn",
    "--early-cse",
    "--globalopt",
    "--flattencfg",
    "--adce",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--scalarizer",
          "--dce",
          "--lowerinvoke",
          "--rpo-functionattrs",
          "--correlated-propagation",
          "--coro-elide",
          "--sancov",
          "--rewrite-statepoints-for-gc",
          "--globalopt",
          "--mldst-motion",
          "--infer-address-spaces",
          "--callsite-splitting",
          "--inline",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--scalarizer",
      "--dce",
      "--lowerinvoke",
      "--rpo-functionattrs",
      "--correlated-propagation",
      "--coro-elide",
      "--sancov",
      "--rewrite-statepoints-for-gc",
      "--globalopt",
      "--mldst-motion",
      "--infer-address-spaces",
      "--callsite-splitting",
      "--inline",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}