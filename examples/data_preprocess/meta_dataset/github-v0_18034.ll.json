{
  "program_id": "github-v0_18034.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 9,
    "oneSuccessor": 39,
    "twoPred": 14,
    "twoPredOneSuc": 6,
    "twoEach": 3,
    "twoSuccessor": 19,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 69,
    "BeginPhi": 0,
    "BranchCount": 58,
    "returnInt": 15,
    "CriticalCount": 25,
    "NumEdges": 102,
    "const32Bit": 128,
    "const64Bit": 18,
    "numConstZeroes": 49,
    "numConstOnes": 79,
    "UncondBranches": 39,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 53,
    "NumAndInst": 1,
    "BlockMid": 7,
    "BlockLow": 62,
    "NumBitCastInst": 2,
    "NumBrInst": 58,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 19,
    "NumLShrInst": 2,
    "NumLoadInst": 127,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 83,
    "NumSubInst": 3,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 16,
    "TotalBlocks": 69,
    "TotalInsts": 455,
    "TotalMemInst": 320,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 208
  },
  "baseline_oz_instcount": 455,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--ipsccp",
    "--adce",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--elim-avail-extern",
    "--jump-threading",
    "--globalopt",
    "--globaldce",
    "--mergefunc",
    "--instsimplify",
    "--jump-threading",
    "--dse",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--deadargelim",
          "--memcpyopt",
          "--loop-simplify",
          "--prune-eh",
          "--forceattrs",
          "--globaldce",
          "--constmerge",
          "--aggressive-instcombine",
          "--partial-inliner",
          "--loop-predication",
          "--libcalls-shrinkwrap",
          "--inferattrs",
          "--loop-idiom",
          "--constprop",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--deadargelim",
      "--memcpyopt",
      "--loop-simplify",
      "--prune-eh",
      "--forceattrs",
      "--globaldce",
      "--constmerge",
      "--aggressive-instcombine",
      "--partial-inliner",
      "--loop-predication",
      "--libcalls-shrinkwrap",
      "--inferattrs",
      "--loop-idiom",
      "--constprop",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}