{
  "program_id": "linux-v0_2438.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 3,
    "oneSuccessor": 21,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 8,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 34,
    "BeginPhi": 0,
    "BranchCount": 29,
    "returnInt": 9,
    "CriticalCount": 3,
    "NumEdges": 37,
    "const32Bit": 66,
    "const64Bit": 0,
    "numConstZeroes": 19,
    "numConstOnes": 38,
    "UncondBranches": 21,
    "binaryConstArg": 9,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 30,
    "NumAndInst": 6,
    "BlockMid": 5,
    "BlockLow": 29,
    "NumBitCastInst": 4,
    "NumBrInst": 29,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 1,
    "NumZExtInst": 12,
    "TotalBlocks": 34,
    "TotalInsts": 200,
    "TotalMemInst": 122,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 95
  },
  "baseline_oz_instcount": 200,
  "knowledge_base_entry": [
    "--lower-expect",
    "--gvn-hoist",
    "--loop-rotate",
    "--sroa",
    "--licm",
    "--licm",
    "--flattencfg",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--reassociate",
    "--loop-simplifycfg",
    "--bdce",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--newgvn",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--reassociate",
    "--loop-simplifycfg",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--tailcallelim",
          "--inject-tli-mappings",
          "--lower-matrix-intrinsics",
          "--instnamer",
          "--slp-vectorizer",
          "--ee-instrument",
          "--alignment-from-assumptions",
          "--loop-fusion",
          "--lowerswitch",
          "--strip",
          "--name-anon-globals",
          "--coro-early",
          "--post-inline-ee-instrument",
          "--lower-expect",
          "--jump-threading",
          "--partial-inliner",
          "--forceattrs",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--tailcallelim",
      "--inject-tli-mappings",
      "--lower-matrix-intrinsics",
      "--instnamer",
      "--slp-vectorizer",
      "--ee-instrument",
      "--alignment-from-assumptions",
      "--loop-fusion",
      "--lowerswitch",
      "--strip",
      "--name-anon-globals",
      "--coro-early",
      "--post-inline-ee-instrument",
      "--lower-expect",
      "--jump-threading",
      "--partial-inliner",
      "--forceattrs",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+5.0%"
  }
}