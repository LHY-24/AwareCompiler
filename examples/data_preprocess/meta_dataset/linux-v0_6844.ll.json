{
  "program_id": "linux-v0_6844.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 31,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 5,
    "oneSuccessor": 27,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 11,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 55,
    "BeginPhi": 1,
    "BranchCount": 38,
    "returnInt": 12,
    "CriticalCount": 2,
    "NumEdges": 52,
    "const32Bit": 144,
    "const64Bit": 5,
    "numConstZeroes": 63,
    "numConstOnes": 48,
    "UncondBranches": 27,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 33,
    "NumAndInst": 2,
    "BlockMid": 6,
    "BlockLow": 50,
    "NumBitCastInst": 8,
    "NumBrInst": 38,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 93,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 17,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 55,
    "NumSubInst": 3,
    "NumTruncInst": 1,
    "NumXorInst": 4,
    "NumZExtInst": 9,
    "TotalBlocks": 56,
    "TotalInsts": 364,
    "TotalMemInst": 254,
    "TotalFuncs": 29,
    "ArgsPhi": 2,
    "testUnary": 154
  },
  "baseline_oz_instcount": 364,
  "knowledge_base_entry": [
    "--loweratomic",
    "--aggressive-instcombine",
    "--jump-threading",
    "--loop-reroll",
    "--correlated-propagation",
    "--gvn-hoist",
    "--globalopt",
    "--correlated-propagation",
    "--mergefunc",
    "--loop-reroll",
    "--early-cse",
    "--nary-reassociate",
    "--gvn",
    "--prune-eh",
    "--sroa",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--indvars",
    "--sroa",
    "--early-cse-memssa",
    "--mldst-motion",
    "--simplifycfg",
    "--flattencfg",
    "--gvn",
    "--licm",
    "--simplifycfg",
    "--adce",
    "--load-store-vectorizer",
    "--mem2reg",
    "--aggressive-instcombine",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--die",
    "--licm",
    "--flattencfg",
    "--jump-threading",
    "--inline",
    "--loop-simplifycfg",
    "--dse",
    "--bdce",
    "--early-cse-memssa",
    "--adce",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simplifycfg",
          "--loop-guard-widening",
          "--loop-rotate",
          "--loop-simplify",
          "--insert-gcov-profiling",
          "--lower-guard-intrinsic",
          "--early-cse",
          "--tailcallelim",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--inject-tli-mappings",
          "--loop-unroll-and-jam",
          "--loop-fusion",
          "--instnamer",
          "--slsr",
          "--mergefunc",
          "--sccp",
          "--canonicalize-aliases"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simplifycfg",
      "--loop-guard-widening",
      "--loop-rotate",
      "--loop-simplify",
      "--insert-gcov-profiling",
      "--lower-guard-intrinsic",
      "--early-cse",
      "--tailcallelim",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--inject-tli-mappings",
      "--loop-unroll-and-jam",
      "--loop-fusion",
      "--instnamer",
      "--slsr",
      "--mergefunc",
      "--sccp",
      "--canonicalize-aliases"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}