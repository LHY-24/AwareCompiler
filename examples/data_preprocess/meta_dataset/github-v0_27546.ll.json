{
  "program_id": "github-v0_27546.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 1,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 1,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 4,
    "const64Bit": 1,
    "numConstZeroes": 1,
    "numConstOnes": 4,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 0,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 4,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 4,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 1,
    "TotalInsts": 17,
    "TotalMemInst": 13,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 10
  },
  "baseline_oz_instcount": 17,
  "knowledge_base_entry": [
    "--flattencfg",
    "--newgvn",
    "--loop-instsimplify",
    "--instcombine",
    "--bdce",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--newgvn",
    "--inline",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--lower-expect",
    "--globalopt",
    "--globaldce",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--functionattrs",
          "--flattencfg",
          "--gvn-hoist",
          "--alignment-from-assumptions",
          "--slsr",
          "--rpo-functionattrs",
          "--strip",
          "--partial-inliner",
          "--name-anon-globals",
          "--partially-inline-libcalls",
          "--lowerswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--functionattrs",
      "--flattencfg",
      "--gvn-hoist",
      "--alignment-from-assumptions",
      "--slsr",
      "--rpo-functionattrs",
      "--strip",
      "--partial-inliner",
      "--name-anon-globals",
      "--partially-inline-libcalls",
      "--lowerswitch"
    ],
    "performance_vs_Oz": "+5.9%"
  }
}