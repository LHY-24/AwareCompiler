{
  "program_id": "github-v0_42898.ll",
  "autophase_features": {
    "BBNumArgsHi": 5,
    "BBNumArgsLo": 4,
    "onePred": 12,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 6,
    "oneSuccessor": 7,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 7,
    "twoSuccessor": 15,
    "morePreds": 3,
    "BB03Phi": 7,
    "BBHiPhi": 2,
    "BBNoPhi": 14,
    "BeginPhi": 9,
    "BranchCount": 22,
    "returnInt": 2,
    "CriticalCount": 18,
    "NumEdges": 37,
    "const32Bit": 42,
    "const64Bit": 2,
    "numConstZeroes": 9,
    "numConstOnes": 5,
    "UncondBranches": 7,
    "binaryConstArg": 39,
    "NumAShrInst": 1,
    "NumAddInst": 27,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 22,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 26,
    "NumMulInst": 10,
    "NumOrInst": 1,
    "NumPHIInst": 26,
    "NumRetInst": 1,
    "NumSExtInst": 29,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 1,
    "NumSubInst": 8,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 23,
    "TotalInsts": 315,
    "TotalMemInst": 98,
    "TotalFuncs": 5,
    "ArgsPhi": 65,
    "testUnary": 83
  },
  "baseline_oz_instcount": 308,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--newgvn",
    "--instsimplify",
    "--gvn",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--jump-threading",
    "--correlated-propagation",
    "--loop-reroll",
    "--gvn",
    "--loop-reroll",
    "--newgvn",
    "--licm",
    "--flattencfg",
    "--ipsccp",
    "--die",
    "--ipsccp",
    "--gvn-hoist",
    "--flattencfg",
    "--gvn",
    "--loop-instsimplify",
    "--jump-threading",
    "--simplifycfg",
    "--mem2reg",
    "--instcombine",
    "--correlated-propagation",
    "--gvn-hoist",
    "--instcombine",
    "--lower-expect",
    "--gvn",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--reassociate",
    "--loop-simplifycfg",
    "--die",
    "--mem2reg",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--mem2reg",
    "--simplifycfg",
    "--mem2reg",
    "--instcombine",
    "--correlated-propagation",
    "--gvn-hoist",
    "--instcombine",
    "--lower-expect",
    "--gvn",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--reassociate",
    "--loop-simplifycfg",
    "--die",
    "--mem2reg",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--mem2reg",
    "--simplifycfg",
    "--slp-vectorizer",
    "--reassociate",
    "--sroa",
    "--early-cse",
    "--instcombine",
    "--elim-avail-extern",
    "--instsimplify",
    "--jump-threading",
    "--correlated-propagation",
    "--loop-reroll",
    "--simplifycfg",
    "--nary-reassociate",
    "--jump-threading",
    "--mem2reg",
    "--globalopt",
    "--instcombine",
    "--dce",
    "--die",
    "--sccp",
    "--elim-avail-extern",
    "--bdce",
    "--instcombine",
    "--prune-eh",
    "--simplifycfg",
    "--slp-vectorizer",
    "--instcombine",
    "--sroa",
    "--bdce",
    "--correlated-propagation",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--functionattrs",
          "--nary-reassociate",
          "--gvn",
          "--loop-reroll",
          "--globalopt",
          "--cross-dso-cfi",
          "--always-inline",
          "--flattencfg",
          "--globaldce",
          "--loop-unroll-and-jam",
          "--early-cse",
          "--sancov",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+10.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--functionattrs",
      "--nary-reassociate",
      "--gvn",
      "--loop-reroll",
      "--globalopt",
      "--cross-dso-cfi",
      "--always-inline",
      "--flattencfg",
      "--globaldce",
      "--loop-unroll-and-jam",
      "--early-cse",
      "--sancov",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+10.4%"
  }
}