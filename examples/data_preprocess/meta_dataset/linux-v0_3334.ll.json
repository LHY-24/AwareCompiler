{
  "program_id": "linux-v0_3334.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 59,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 15,
    "oneSuccessor": 51,
    "twoPred": 16,
    "twoPredOneSuc": 4,
    "twoEach": 7,
    "twoSuccessor": 30,
    "morePreds": 6,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 100,
    "BeginPhi": 3,
    "BranchCount": 81,
    "returnInt": 23,
    "CriticalCount": 9,
    "NumEdges": 111,
    "const32Bit": 353,
    "const64Bit": 33,
    "numConstZeroes": 157,
    "numConstOnes": 131,
    "UncondBranches": 51,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 102,
    "NumAndInst": 12,
    "BlockMid": 16,
    "BlockLow": 87,
    "NumBitCastInst": 17,
    "NumBrInst": 81,
    "NumCallInst": 70,
    "NumGetElementPtrInst": 122,
    "NumICmpInst": 31,
    "NumLShrInst": 0,
    "NumLoadInst": 279,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 22,
    "NumSExtInst": 18,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 136,
    "NumSubInst": 6,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 25,
    "TotalBlocks": 103,
    "TotalInsts": 964,
    "TotalMemInst": 709,
    "TotalFuncs": 51,
    "ArgsPhi": 6,
    "testUnary": 467
  },
  "baseline_oz_instcount": 967,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll",
          "--mergeicmps",
          "--lower-matrix-intrinsics",
          "--lower-widenable-condition",
          "--load-store-vectorizer",
          "--coro-elide",
          "--globaldce",
          "--die",
          "--strip-nondebug",
          "--inferattrs",
          "--mldst-motion",
          "--callsite-splitting",
          "--loop-data-prefetch",
          "--early-cse-memssa",
          "--loop-reroll",
          "--ipsccp",
          "--inline",
          "--slp-vectorizer",
          "-loop-reduce",
          "--aggressive-instcombine",
          "--lowerswitch",
          "--jump-threading",
          "--canonicalize-aliases",
          "--nary-reassociate",
          "--coro-early",
          "--loop-versioning",
          "--consthoist",
          "--newgvn",
          "--forceattrs",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll",
      "--mergeicmps",
      "--lower-matrix-intrinsics",
      "--lower-widenable-condition",
      "--load-store-vectorizer",
      "--coro-elide",
      "--globaldce",
      "--die",
      "--strip-nondebug",
      "--inferattrs",
      "--mldst-motion",
      "--callsite-splitting",
      "--loop-data-prefetch",
      "--early-cse-memssa",
      "--loop-reroll",
      "--ipsccp",
      "--inline",
      "--slp-vectorizer",
      "-loop-reduce",
      "--aggressive-instcombine",
      "--lowerswitch",
      "--jump-threading",
      "--canonicalize-aliases",
      "--nary-reassociate",
      "--coro-early",
      "--loop-versioning",
      "--consthoist",
      "--newgvn",
      "--forceattrs",
      "--instcombine"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}