{
  "program_id": "linux-v0_9898.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 22,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 5,
    "oneSuccessor": 21,
    "twoPred": 5,
    "twoPredOneSuc": 4,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 38,
    "BeginPhi": 1,
    "BranchCount": 28,
    "returnInt": 2,
    "CriticalCount": 6,
    "NumEdges": 48,
    "const32Bit": 129,
    "const64Bit": 3,
    "numConstZeroes": 48,
    "numConstOnes": 57,
    "UncondBranches": 21,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 46,
    "NumAndInst": 4,
    "BlockMid": 6,
    "BlockLow": 33,
    "NumBitCastInst": 31,
    "NumBrInst": 28,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 101,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 8,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 58,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 7,
    "TotalBlocks": 39,
    "TotalInsts": 350,
    "TotalMemInst": 249,
    "TotalFuncs": 15,
    "ArgsPhi": 2,
    "testUnary": 191
  },
  "baseline_oz_instcount": 350,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--adce",
    "--sccp",
    "--licm",
    "--jump-threading",
    "--inline",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--dce",
    "--mergefunc",
    "--loop-reroll",
    "--newgvn",
    "--mem2reg",
    "--ipsccp",
    "--ipsccp",
    "--lower-expect",
    "--bdce",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--early-cse",
    "--elim-avail-extern",
    "--jump-threading",
    "--memcpyopt",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-rotate",
          "--globaldce",
          "--memcpyopt",
          "--add-discriminators",
          "--loop-fusion",
          "--called-value-propagation",
          "--indvars",
          "--rewrite-statepoints-for-gc",
          "--coro-cleanup",
          "--instsimplify",
          "--post-inline-ee-instrument",
          "--mldst-motion",
          "--cross-dso-cfi",
          "--rpo-functionattrs",
          "--mergereturn",
          "--canonicalize-aliases",
          "--inject-tli-mappings",
          "--loop-data-prefetch",
          "--loop-versioning-licm",
          "--loop-predication",
          "--loop-load-elim",
          "--loop-deletion",
          "--mergefunc",
          "--loop-unroll",
          "--sink",
          "--simple-loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-rotate",
      "--globaldce",
      "--memcpyopt",
      "--add-discriminators",
      "--loop-fusion",
      "--called-value-propagation",
      "--indvars",
      "--rewrite-statepoints-for-gc",
      "--coro-cleanup",
      "--instsimplify",
      "--post-inline-ee-instrument",
      "--mldst-motion",
      "--cross-dso-cfi",
      "--rpo-functionattrs",
      "--mergereturn",
      "--canonicalize-aliases",
      "--inject-tli-mappings",
      "--loop-data-prefetch",
      "--loop-versioning-licm",
      "--loop-predication",
      "--loop-load-elim",
      "--loop-deletion",
      "--mergefunc",
      "--loop-unroll",
      "--sink",
      "--simple-loop-unswitch"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}