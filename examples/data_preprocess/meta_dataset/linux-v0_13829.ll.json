{
  "program_id": "linux-v0_13829.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 52,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 19,
    "oneSuccessor": 50,
    "twoPred": 26,
    "twoPredOneSuc": 13,
    "twoEach": 8,
    "twoSuccessor": 31,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 90,
    "BeginPhi": 0,
    "BranchCount": 81,
    "returnInt": 24,
    "CriticalCount": 26,
    "NumEdges": 116,
    "const32Bit": 152,
    "const64Bit": 51,
    "numConstZeroes": 89,
    "numConstOnes": 60,
    "UncondBranches": 50,
    "binaryConstArg": 47,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 36,
    "NumAndInst": 21,
    "BlockMid": 10,
    "BlockLow": 80,
    "NumBitCastInst": 4,
    "NumBrInst": 81,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 57,
    "NumICmpInst": 36,
    "NumLShrInst": 8,
    "NumLoadInst": 156,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 66,
    "NumSubInst": 0,
    "NumTruncInst": 20,
    "NumXorInst": 10,
    "NumZExtInst": 48,
    "TotalBlocks": 90,
    "TotalInsts": 625,
    "TotalMemInst": 371,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 269
  },
  "baseline_oz_instcount": 626,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--jump-threading",
    "--newgvn",
    "--dce",
    "--mem2reg",
    "--early-cse",
    "--aggressive-instcombine",
    "--bdce",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--prune-eh",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--load-store-vectorizer",
          "--globalsplit",
          "--ee-instrument",
          "--loop-distribute",
          "--aggressive-instcombine",
          "--constprop",
          "--sccp",
          "--lower-expect",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--load-store-vectorizer",
      "--globalsplit",
      "--ee-instrument",
      "--loop-distribute",
      "--aggressive-instcombine",
      "--constprop",
      "--sccp",
      "--lower-expect",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+5.0%"
  }
}