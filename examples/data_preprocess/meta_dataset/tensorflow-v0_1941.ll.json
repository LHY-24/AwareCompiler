{
  "program_id": "tensorflow-v0_1941.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 5,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 2,
    "oneSuccessor": 5,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 12,
    "BeginPhi": 1,
    "BranchCount": 10,
    "returnInt": 1,
    "CriticalCount": 5,
    "NumEdges": 15,
    "const32Bit": 22,
    "const64Bit": 27,
    "numConstZeroes": 21,
    "numConstOnes": 11,
    "UncondBranches": 5,
    "binaryConstArg": 10,
    "NumAShrInst": 1,
    "NumAddInst": 3,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 13,
    "NumBitCastInst": 2,
    "NumBrInst": 10,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 7,
    "NumLShrInst": 1,
    "NumLoadInst": 2,
    "NumMulInst": 4,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 13,
    "TotalInsts": 82,
    "TotalMemInst": 31,
    "TotalFuncs": 6,
    "ArgsPhi": 2,
    "testUnary": 17
  },
  "baseline_oz_instcount": 82,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--gvn",
    "--correlated-propagation",
    "--lower-expect",
    "--dce",
    "--licm",
    "--aggressive-instcombine",
    "--dce",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--load-store-vectorizer",
    "--sroa",
    "--inline",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--ipsccp",
    "--loop-simplifycfg",
    "--sccp",
    "--loop-deletion",
    "--instcombine",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--dce",
          "--load-store-vectorizer",
          "--consthoist",
          "--instcombine",
          "--globalsplit",
          "--name-anon-globals",
          "--mergeicmps",
          "--pgo-memop-opt",
          "--globaldce",
          "--always-inline",
          "--float2int",
          "--mergereturn",
          "--lower-guard-intrinsic",
          "--partial-inliner",
          "--mem2reg",
          "--early-cse-memssa",
          "--insert-gcov-profiling",
          "--loop-distribute",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--dce",
      "--load-store-vectorizer",
      "--consthoist",
      "--instcombine",
      "--globalsplit",
      "--name-anon-globals",
      "--mergeicmps",
      "--pgo-memop-opt",
      "--globaldce",
      "--always-inline",
      "--float2int",
      "--mergereturn",
      "--lower-guard-intrinsic",
      "--partial-inliner",
      "--mem2reg",
      "--early-cse-memssa",
      "--insert-gcov-profiling",
      "--loop-distribute",
      "--gvn"
    ],
    "performance_vs_Oz": "+2.4%"
  }
}