{
  "program_id": "github-v0_8285.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 11,
    "const32Bit": 16,
    "const64Bit": 4,
    "numConstZeroes": 3,
    "numConstOnes": 12,
    "UncondBranches": 5,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 10,
    "NumBitCastInst": 1,
    "NumBrInst": 7,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 14,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 57,
    "TotalMemInst": 44,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 26
  },
  "baseline_oz_instcount": 58,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--inline",
    "--mldst-motion",
    "--instsimplify",
    "--mem2reg",
    "--newgvn",
    "--load-store-vectorizer",
    "--licm",
    "--lower-constant-intrinsics",
    "--dse",
    "--gvn",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--argpromotion",
          "--sancov",
          "--globalsplit",
          "--slp-vectorizer",
          "--sccp",
          "--loop-sink",
          "--deadargelim",
          "--load-store-vectorizer",
          "--speculative-execution",
          "--callsite-splitting",
          "--lcssa",
          "--inline",
          "--memcpyopt",
          "--loweratomic",
          "--scalarizer",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--argpromotion",
      "--sancov",
      "--globalsplit",
      "--slp-vectorizer",
      "--sccp",
      "--loop-sink",
      "--deadargelim",
      "--load-store-vectorizer",
      "--speculative-execution",
      "--callsite-splitting",
      "--lcssa",
      "--inline",
      "--memcpyopt",
      "--loweratomic",
      "--scalarizer",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}