{
  "program_id": "poj104-v1_48_1409.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 1,
    "oneSuccessor": 29,
    "twoPred": 10,
    "twoPredOneSuc": 1,
    "twoEach": 9,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 49,
    "const32Bit": 51,
    "const64Bit": 48,
    "numConstZeroes": 35,
    "numConstOnes": 32,
    "UncondBranches": 29,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 23,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 38,
    "NumBitCastInst": 14,
    "NumBrInst": 39,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 63,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 30,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 6,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 42,
    "TotalInsts": 272,
    "TotalMemInst": 146,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 115
  },
  "baseline_oz_instcount": 178,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--mergefunc",
    "--flattencfg",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--sroa",
    "--slp-vectorizer",
    "--mldst-motion",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--mergefunc",
    "--flattencfg",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--sroa",
    "--slp-vectorizer",
    "--mldst-motion",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--loop-deletion",
    "--newgvn",
    "--correlated-propagation",
    "--gvn",
    "--die",
    "--mergefunc",
    "--flattencfg",
    "--gvn-hoist",
    "--mem2reg",
    "--inline",
    "--flattencfg",
    "--early-cse",
    "--loop-deletion",
    "--sroa",
    "--lower-expect",
    "--dse",
    "--bdce",
    "--inline",
    "--loop-instsimplify",
    "--early-cse",
    "--loop-deletion",
    "--sroa",
    "--lower-expect",
    "--dse",
    "--bdce",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--instsimplify",
    "--mem2reg",
    "--prune-eh",
    "--elim-avail-extern",
    "--mem2reg",
    "--loop-instsimplify",
    "--adce",
    "--jump-threading",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--mergefunc",
    "--mergefunc",
    "--instcombine",
    "--dse",
    "--inline",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--dce",
    "--mem2reg",
    "--nary-reassociate",
    "--early-cse",
    "--ipsccp",
    "--simplifycfg",
    "--memcpyopt",
    "--mem2reg",
    "--aggressive-instcombine",
    "--reassociate",
    "--prune-eh",
    "--sroa",
    "--memcpyopt",
    "--gvn",
    "--instcombine",
    "--slsr",
    "--indvars",
    "--loop-reroll",
    "--load-store-vectorizer",
    "--bdce",
    "--inline",
    "--loop-instsimplify",
    "--early-cse",
    "--loop-deletion",
    "--sroa",
    "--lower-expect",
    "--instcombine",
    "--newgvn",
    "--mergefunc",
    "--inline",
    "--dce",
    "--simplifycfg",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--loop-unroll",
          "--attributor",
          "--irce",
          "--break-crit-edges",
          "--globalopt",
          "--loop-deletion",
          "--loop-instsimplify",
          "--sink",
          "--div-rem-pairs",
          "--loop-simplifycfg",
          "--aggressive-instcombine",
          "--gvn-hoist",
          "--loop-idiom",
          "--loop-unswitch",
          "--correlated-propagation",
          "--sroa",
          "--early-cse",
          "--coro-split",
          "--ee-instrument",
          "--dce",
          "--called-value-propagation",
          "--rpo-functionattrs",
          "--mergeicmps",
          "--inline",
          "--adce",
          "--bdce",
          "--loop-unroll-and-jam",
          "--float2int",
          "--loop-reroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+18.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--loop-unroll",
      "--attributor",
      "--irce",
      "--break-crit-edges",
      "--globalopt",
      "--loop-deletion",
      "--loop-instsimplify",
      "--sink",
      "--div-rem-pairs",
      "--loop-simplifycfg",
      "--aggressive-instcombine",
      "--gvn-hoist",
      "--loop-idiom",
      "--loop-unswitch",
      "--correlated-propagation",
      "--sroa",
      "--early-cse",
      "--coro-split",
      "--ee-instrument",
      "--dce",
      "--called-value-propagation",
      "--rpo-functionattrs",
      "--mergeicmps",
      "--inline",
      "--adce",
      "--bdce",
      "--loop-unroll-and-jam",
      "--float2int",
      "--loop-reroll"
    ],
    "performance_vs_Oz": "+18.0%"
  }
}