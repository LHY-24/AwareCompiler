{
  "program_id": "linux-v0_10238.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 17,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 6,
    "oneSuccessor": 16,
    "twoPred": 7,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 9,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 2,
    "BranchCount": 25,
    "returnInt": 24,
    "CriticalCount": 4,
    "NumEdges": 34,
    "const32Bit": 240,
    "const64Bit": 15,
    "numConstZeroes": 119,
    "numConstOnes": 38,
    "UncondBranches": 16,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 22,
    "NumAndInst": 1,
    "BlockMid": 8,
    "BlockLow": 24,
    "NumBitCastInst": 0,
    "NumBrInst": 25,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 96,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 156,
    "NumMulInst": 0,
    "NumOrInst": 12,
    "NumPHIInst": 2,
    "NumRetInst": 7,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 38,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 32,
    "TotalInsts": 432,
    "TotalMemInst": 349,
    "TotalFuncs": 12,
    "ArgsPhi": 5,
    "testUnary": 197
  },
  "baseline_oz_instcount": 432,
  "knowledge_base_entry": [
    "--globalopt",
    "--correlated-propagation",
    "--loop-reroll",
    "-loop-reduce",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--simplifycfg",
    "--prune-eh",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--dse",
    "--bdce",
    "--mergefunc",
    "--flattencfg",
    "--sroa",
    "--ipsccp",
    "--simplifycfg",
    "--sroa",
    "--indvars",
    "--instcombine",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--correlated-propagation",
          "--lcssa",
          "--simplifycfg",
          "--reassociate",
          "--loop-versioning-licm",
          "--float2int",
          "--jump-threading",
          "--aggressive-instcombine",
          "--elim-avail-extern",
          "--irce",
          "--deadargelim",
          "--strip",
          "--instnamer",
          "--lower-matrix-intrinsics",
          "--mldst-motion",
          "--guard-widening",
          "--licm",
          "--mergeicmps",
          "--strip-dead-prototypes",
          "--loop-data-prefetch",
          "--gvn",
          "--loop-rotate",
          "--globalsplit",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--correlated-propagation",
      "--lcssa",
      "--simplifycfg",
      "--reassociate",
      "--loop-versioning-licm",
      "--float2int",
      "--jump-threading",
      "--aggressive-instcombine",
      "--elim-avail-extern",
      "--irce",
      "--deadargelim",
      "--strip",
      "--instnamer",
      "--lower-matrix-intrinsics",
      "--mldst-motion",
      "--guard-widening",
      "--licm",
      "--mergeicmps",
      "--strip-dead-prototypes",
      "--loop-data-prefetch",
      "--gvn",
      "--loop-rotate",
      "--globalsplit",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}