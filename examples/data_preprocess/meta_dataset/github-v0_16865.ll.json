{
  "program_id": "github-v0_16865.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 55,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 25,
    "oneSuccessor": 52,
    "twoPred": 31,
    "twoPredOneSuc": 21,
    "twoEach": 9,
    "twoSuccessor": 35,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 85,
    "BeginPhi": 3,
    "BranchCount": 87,
    "returnInt": 0,
    "CriticalCount": 23,
    "NumEdges": 122,
    "const32Bit": 200,
    "const64Bit": 20,
    "numConstZeroes": 73,
    "numConstOnes": 81,
    "UncondBranches": 52,
    "binaryConstArg": 48,
    "NumAShrInst": 0,
    "NumAddInst": 25,
    "NumAllocaInst": 23,
    "NumAndInst": 14,
    "BlockMid": 16,
    "BlockLow": 72,
    "NumBitCastInst": 9,
    "NumBrInst": 87,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 96,
    "NumICmpInst": 35,
    "NumLShrInst": 5,
    "NumLoadInst": 278,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 15,
    "NumStoreInst": 141,
    "NumSubInst": 39,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 42,
    "TotalBlocks": 88,
    "TotalInsts": 833,
    "TotalMemInst": 542,
    "TotalFuncs": 2,
    "ArgsPhi": 6,
    "testUnary": 368
  },
  "baseline_oz_instcount": 834,
  "knowledge_base_entry": [
    "--scalarizer",
    "--early-cse",
    "--newgvn",
    "--newgvn",
    "--inline",
    "--dce",
    "--early-cse",
    "--mldst-motion",
    "--early-cse-memssa",
    "--reassociate",
    "--globalopt",
    "--gvn",
    "--inline",
    "--dce",
    "--load-store-vectorizer",
    "--inline",
    "--adce",
    "--gvn-hoist",
    "--mem2reg",
    "--inline",
    "--dse",
    "--gvn-hoist",
    "--mergefunc",
    "--adce",
    "--newgvn",
    "--dce",
    "--sroa",
    "--lower-expect",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--name-anon-globals",
          "--lowerinvoke",
          "--deadargelim",
          "--separate-const-offset-from-gep",
          "--lcssa",
          "--ipconstprop",
          "--mldst-motion",
          "--lower-widenable-condition",
          "--ee-instrument",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--name-anon-globals",
      "--lowerinvoke",
      "--deadargelim",
      "--separate-const-offset-from-gep",
      "--lcssa",
      "--ipconstprop",
      "--mldst-motion",
      "--lower-widenable-condition",
      "--ee-instrument",
      "--early-cse"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}