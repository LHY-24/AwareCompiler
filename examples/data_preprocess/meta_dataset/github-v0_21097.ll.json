{
  "program_id": "github-v0_21097.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 7,
    "BeginPhi": 2,
    "BranchCount": 8,
    "returnInt": 2,
    "CriticalCount": 6,
    "NumEdges": 13,
    "const32Bit": 13,
    "const64Bit": 3,
    "numConstZeroes": 7,
    "numConstOnes": 3,
    "UncondBranches": 3,
    "binaryConstArg": 8,
    "NumAShrInst": 1,
    "NumAddInst": 10,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 8,
    "NumBitCastInst": 0,
    "NumBrInst": 8,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 5,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 1,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 4,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 59,
    "TotalMemInst": 19,
    "TotalFuncs": 3,
    "ArgsPhi": 6,
    "testUnary": 12
  },
  "baseline_oz_instcount": 58,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--sroa",
    "--dse",
    "--sroa",
    "--reassociate",
    "--jump-threading",
    "--licm",
    "--inline",
    "--sccp",
    "--early-cse",
    "--early-cse-memssa",
    "--loop-fusion",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--coro-early",
          "--loop-unswitch",
          "--loop-interchange",
          "--loop-distribute",
          "--prune-eh",
          "--loop-fusion",
          "--lower-expect",
          "--lower-guard-intrinsic",
          "--early-cse-memssa",
          "--strip-debug-declare",
          "-loop-reduce",
          "--callsite-splitting",
          "--cross-dso-cfi",
          "--mem2reg",
          "--simplifycfg",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--coro-early",
      "--loop-unswitch",
      "--loop-interchange",
      "--loop-distribute",
      "--prune-eh",
      "--loop-fusion",
      "--lower-expect",
      "--lower-guard-intrinsic",
      "--early-cse-memssa",
      "--strip-debug-declare",
      "-loop-reduce",
      "--callsite-splitting",
      "--cross-dso-cfi",
      "--mem2reg",
      "--simplifycfg",
      "--newgvn"
    ],
    "performance_vs_Oz": "+6.9%"
  }
}