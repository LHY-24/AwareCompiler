{
  "program_id": "poj104-v1_30_1524.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 4,
    "oneSuccessor": 6,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 10,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 3,
    "CriticalCount": 11,
    "NumEdges": 26,
    "const32Bit": 42,
    "const64Bit": 9,
    "numConstZeroes": 15,
    "numConstOnes": 16,
    "UncondBranches": 6,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 24,
    "NumBitCastInst": 11,
    "NumBrInst": 16,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 26,
    "TotalInsts": 156,
    "TotalMemInst": 94,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 61
  },
  "baseline_oz_instcount": 51,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--reassociate",
    "--slsr",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--bdce",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--licm",
    "--bdce",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--licm",
    "--mldst-motion",
    "--jump-threading",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--instcombine",
    "--jump-threading",
    "--inline",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--ipsccp",
    "--globalopt",
    "--inline",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--break-crit-edges",
          "--coro-early",
          "--attributor",
          "--jump-threading",
          "--mergeicmps",
          "--instnamer",
          "--coro-cleanup",
          "--scalarizer",
          "--loop-guard-widening",
          "--reassociate",
          "--loop-versioning-licm",
          "--loop-deletion",
          "--licm",
          "--instcombine",
          "--sancov",
          "--mergereturn",
          "--dse",
          "--called-value-propagation",
          "--separate-const-offset-from-gep",
          "--aggressive-instcombine",
          "--loop-unroll-and-jam",
          "--partially-inline-libcalls",
          "--coro-elide",
          "--elim-avail-extern",
          "--globaldce",
          "--infer-address-spaces"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--break-crit-edges",
      "--coro-early",
      "--attributor",
      "--jump-threading",
      "--mergeicmps",
      "--instnamer",
      "--coro-cleanup",
      "--scalarizer",
      "--loop-guard-widening",
      "--reassociate",
      "--loop-versioning-licm",
      "--loop-deletion",
      "--licm",
      "--instcombine",
      "--sancov",
      "--mergereturn",
      "--dse",
      "--called-value-propagation",
      "--separate-const-offset-from-gep",
      "--aggressive-instcombine",
      "--loop-unroll-and-jam",
      "--partially-inline-libcalls",
      "--coro-elide",
      "--elim-avail-extern",
      "--globaldce",
      "--infer-address-spaces"
    ],
    "performance_vs_Oz": "+5.9%"
  }
}