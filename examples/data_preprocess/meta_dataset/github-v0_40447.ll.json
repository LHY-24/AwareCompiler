{
  "program_id": "github-v0_40447.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 37,
    "const64Bit": 28,
    "numConstZeroes": 33,
    "numConstOnes": 21,
    "UncondBranches": 11,
    "binaryConstArg": 17,
    "NumAShrInst": 3,
    "NumAddInst": 6,
    "NumAllocaInst": 12,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 30,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 19,
    "NumSubInst": 3,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 15,
    "TotalBlocks": 21,
    "TotalInsts": 161,
    "TotalMemInst": 85,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 70
  },
  "baseline_oz_instcount": 161,
  "knowledge_base_entry": [
    "--die",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--adce",
    "--newgvn",
    "--sroa",
    "--jump-threading",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--reassociate",
    "--gvn-hoist",
    "--bdce",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--dse",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--mldst-motion",
          "--loop-interchange",
          "--dse",
          "--hotcoldsplit",
          "--barrier",
          "--coro-split",
          "--called-value-propagation",
          "--ee-instrument",
          "--aggressive-instcombine",
          "--lcssa",
          "--die",
          "--infer-address-spaces",
          "--loop-guard-widening",
          "--strip-dead-prototypes",
          "--loop-data-prefetch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--mldst-motion",
      "--loop-interchange",
      "--dse",
      "--hotcoldsplit",
      "--barrier",
      "--coro-split",
      "--called-value-propagation",
      "--ee-instrument",
      "--aggressive-instcombine",
      "--lcssa",
      "--die",
      "--infer-address-spaces",
      "--loop-guard-widening",
      "--strip-dead-prototypes",
      "--loop-data-prefetch"
    ],
    "performance_vs_Oz": "+6.2%"
  }
}