{
  "program_id": "github-v0_18569.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 35,
    "const64Bit": 51,
    "numConstZeroes": 58,
    "numConstOnes": 21,
    "UncondBranches": 13,
    "binaryConstArg": 10,
    "NumAShrInst": 1,
    "NumAddInst": 13,
    "NumAllocaInst": 11,
    "NumAndInst": 3,
    "BlockMid": 7,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 37,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 1,
    "NumTruncInst": 11,
    "NumXorInst": 0,
    "NumZExtInst": 23,
    "TotalBlocks": 24,
    "TotalInsts": 191,
    "TotalMemInst": 105,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 85
  },
  "baseline_oz_instcount": 191,
  "knowledge_base_entry": [
    "--loop-interchange",
    "--early-cse-memssa",
    "--licm",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--inline",
    "--aggressive-instcombine",
    "--flattencfg",
    "--simplifycfg",
    "--slsr",
    "--load-store-vectorizer",
    "--indvars",
    "--loop-fusion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--loop-data-prefetch",
          "--loop-rotate",
          "--dce",
          "--flattencfg",
          "--instnamer",
          "--post-inline-ee-instrument",
          "--lower-guard-intrinsic",
          "--strip-dead-prototypes",
          "--loop-simplifycfg",
          "--cross-dso-cfi",
          "--adce",
          "--aggressive-instcombine",
          "--strip-nondebug",
          "--dse",
          "--die",
          "--loop-vectorize",
          "--gvn",
          "--bdce",
          "--attributor",
          "--lower-widenable-condition",
          "--coro-elide",
          "--argpromotion",
          "--float2int",
          "--separate-const-offset-from-gep",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+14.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--loop-data-prefetch",
      "--loop-rotate",
      "--dce",
      "--flattencfg",
      "--instnamer",
      "--post-inline-ee-instrument",
      "--lower-guard-intrinsic",
      "--strip-dead-prototypes",
      "--loop-simplifycfg",
      "--cross-dso-cfi",
      "--adce",
      "--aggressive-instcombine",
      "--strip-nondebug",
      "--dse",
      "--die",
      "--loop-vectorize",
      "--gvn",
      "--bdce",
      "--attributor",
      "--lower-widenable-condition",
      "--coro-elide",
      "--argpromotion",
      "--float2int",
      "--separate-const-offset-from-gep",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+14.7%"
  }
}