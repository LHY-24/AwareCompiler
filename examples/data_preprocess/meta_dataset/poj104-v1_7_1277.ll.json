{
  "program_id": "poj104-v1_7_1277.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 5,
    "oneSuccessor": 28,
    "twoPred": 13,
    "twoPredOneSuc": 2,
    "twoEach": 7,
    "twoSuccessor": 15,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 63,
    "BeginPhi": 0,
    "BranchCount": 43,
    "returnInt": 18,
    "CriticalCount": 8,
    "NumEdges": 58,
    "const32Bit": 73,
    "const64Bit": 72,
    "numConstZeroes": 39,
    "numConstOnes": 57,
    "UncondBranches": 28,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 41,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 56,
    "NumBitCastInst": 62,
    "NumBrInst": 43,
    "NumCallInst": 74,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 100,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 48,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 63,
    "TotalInsts": 462,
    "TotalMemInst": 296,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 216
  },
  "baseline_oz_instcount": 192,
  "knowledge_base_entry": [
    "--loop-sink",
    "--early-cse-memssa",
    "--reassociate",
    "--ipsccp",
    "--sroa",
    "--early-cse",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--dce",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--jump-threading",
    "--early-cse-memssa",
    "--simplifycfg",
    "--ipsccp",
    "--sroa",
    "--early-cse",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--dce",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--jump-threading",
    "--early-cse-memssa",
    "--simplifycfg",
    "--ipsccp",
    "--early-cse",
    "--ipsccp",
    "--gvn-hoist",
    "--flattencfg",
    "--instcombine",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--dse",
    "--mem2reg",
    "--globalopt",
    "--lower-expect",
    "--sccp",
    "--inline",
    "--flattencfg",
    "--gvn",
    "--mldst-motion",
    "--dse",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--loop-instsimplify",
          "--lower-constant-intrinsics",
          "--slsr",
          "--lowerinvoke",
          "--div-rem-pairs",
          "--infer-address-spaces",
          "--gvn",
          "--sroa",
          "--sccp",
          "--ipconstprop",
          "--inline",
          "--mergefunc",
          "--simplifycfg",
          "--rpo-functionattrs",
          "--loop-load-elim",
          "--attributor",
          "--called-value-propagation",
          "--inject-tli-mappings",
          "--dse",
          "--nary-reassociate",
          "--loop-data-prefetch",
          "--slp-vectorizer",
          "--indvars",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+49.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--loop-instsimplify",
      "--lower-constant-intrinsics",
      "--slsr",
      "--lowerinvoke",
      "--div-rem-pairs",
      "--infer-address-spaces",
      "--gvn",
      "--sroa",
      "--sccp",
      "--ipconstprop",
      "--inline",
      "--mergefunc",
      "--simplifycfg",
      "--rpo-functionattrs",
      "--loop-load-elim",
      "--attributor",
      "--called-value-propagation",
      "--inject-tli-mappings",
      "--dse",
      "--nary-reassociate",
      "--loop-data-prefetch",
      "--slp-vectorizer",
      "--indvars",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+49.5%"
  }
}