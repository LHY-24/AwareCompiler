{
  "program_id": "linux-v0_1392.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 74,
    "onePredOneSuc": 55,
    "onePredTwoSuc": 18,
    "oneSuccessor": 69,
    "twoPred": 22,
    "twoPredOneSuc": 7,
    "twoEach": 9,
    "twoSuccessor": 32,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 135,
    "BeginPhi": 1,
    "BranchCount": 101,
    "returnInt": 35,
    "CriticalCount": 14,
    "NumEdges": 138,
    "const32Bit": 301,
    "const64Bit": 27,
    "numConstZeroes": 112,
    "numConstOnes": 146,
    "UncondBranches": 69,
    "binaryConstArg": 20,
    "NumAShrInst": 1,
    "NumAddInst": 5,
    "NumAllocaInst": 116,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 127,
    "NumBitCastInst": 26,
    "NumBrInst": 101,
    "NumCallInst": 77,
    "NumGetElementPtrInst": 63,
    "NumICmpInst": 33,
    "NumLShrInst": 1,
    "NumLoadInst": 228,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 34,
    "NumSExtInst": 5,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 149,
    "NumSubInst": 2,
    "NumTruncInst": 9,
    "NumXorInst": 6,
    "NumZExtInst": 9,
    "TotalBlocks": 136,
    "TotalInsts": 875,
    "TotalMemInst": 633,
    "TotalFuncs": 57,
    "ArgsPhi": 2,
    "testUnary": 393
  },
  "baseline_oz_instcount": 877,
  "knowledge_base_entry": [
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--elim-avail-extern",
    "--globalopt",
    "--mergefunc",
    "--sroa",
    "--aggressive-instcombine",
    "--loweratomic",
    "--ipsccp",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--guard-widening",
          "--loop-versioning",
          "--argpromotion",
          "--strip-nondebug",
          "--coro-elide",
          "--lowerinvoke",
          "--inject-tli-mappings",
          "--load-store-vectorizer",
          "--mergefunc",
          "--loweratomic",
          "--sroa",
          "--lower-matrix-intrinsics",
          "--speculative-execution",
          "--flattencfg",
          "--coro-early",
          "--simple-loop-unswitch",
          "--jump-threading",
          "--loop-versioning-licm",
          "--slp-vectorizer",
          "--adce",
          "--loop-predication",
          "--sink",
          "--instcombine",
          "--lower-constant-intrinsics",
          "--loop-vectorize",
          "--aggressive-instcombine",
          "--constmerge",
          "--rewrite-statepoints-for-gc",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--guard-widening",
      "--loop-versioning",
      "--argpromotion",
      "--strip-nondebug",
      "--coro-elide",
      "--lowerinvoke",
      "--inject-tli-mappings",
      "--load-store-vectorizer",
      "--mergefunc",
      "--loweratomic",
      "--sroa",
      "--lower-matrix-intrinsics",
      "--speculative-execution",
      "--flattencfg",
      "--coro-early",
      "--simple-loop-unswitch",
      "--jump-threading",
      "--loop-versioning-licm",
      "--slp-vectorizer",
      "--adce",
      "--loop-predication",
      "--sink",
      "--instcombine",
      "--lower-constant-intrinsics",
      "--loop-vectorize",
      "--aggressive-instcombine",
      "--constmerge",
      "--rewrite-statepoints-for-gc",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}