{
  "program_id": "github-v0_6320.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 0,
    "oneSuccessor": 14,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 24,
    "const32Bit": 24,
    "const64Bit": 3,
    "numConstZeroes": 10,
    "numConstOnes": 10,
    "UncondBranches": 14,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 3,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 21,
    "NumBitCastInst": 0,
    "NumBrInst": 19,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 20,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 21,
    "TotalInsts": 82,
    "TotalMemInst": 48,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 26
  },
  "baseline_oz_instcount": 81,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--simplifycfg",
    "--newgvn",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--bdce",
    "--lower-expect",
    "--globalopt",
    "--sccp",
    "--elim-avail-extern",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--float2int",
          "--dce",
          "--strip-dead-prototypes",
          "--bdce",
          "--redundant-dbg-inst-elim",
          "--globalsplit",
          "--infer-address-spaces",
          "--sroa",
          "--lower-widenable-condition",
          "--dse",
          "--constprop",
          "--cross-dso-cfi",
          "--gvn-hoist",
          "--forceattrs",
          "--strip-nondebug",
          "--aggressive-instcombine",
          "--prune-eh",
          "--lower-constant-intrinsics",
          "--add-discriminators",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--float2int",
      "--dce",
      "--strip-dead-prototypes",
      "--bdce",
      "--redundant-dbg-inst-elim",
      "--globalsplit",
      "--infer-address-spaces",
      "--sroa",
      "--lower-widenable-condition",
      "--dse",
      "--constprop",
      "--cross-dso-cfi",
      "--gvn-hoist",
      "--forceattrs",
      "--strip-nondebug",
      "--aggressive-instcombine",
      "--prune-eh",
      "--lower-constant-intrinsics",
      "--add-discriminators",
      "--always-inline"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}