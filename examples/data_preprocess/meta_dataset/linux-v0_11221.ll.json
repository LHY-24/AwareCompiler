{
  "program_id": "linux-v0_11221.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 28,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 6,
    "oneSuccessor": 26,
    "twoPred": 8,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 12,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 2,
    "BranchCount": 38,
    "returnInt": 14,
    "CriticalCount": 4,
    "NumEdges": 50,
    "const32Bit": 84,
    "const64Bit": 24,
    "numConstZeroes": 33,
    "numConstOnes": 71,
    "UncondBranches": 26,
    "binaryConstArg": 37,
    "NumAShrInst": 1,
    "NumAddInst": 3,
    "NumAllocaInst": 49,
    "NumAndInst": 8,
    "BlockMid": 8,
    "BlockLow": 40,
    "NumBitCastInst": 6,
    "NumBrInst": 38,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 20,
    "NumLShrInst": 2,
    "NumLoadInst": 101,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 10,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 74,
    "NumSubInst": 2,
    "NumTruncInst": 9,
    "NumXorInst": 22,
    "NumZExtInst": 20,
    "TotalBlocks": 48,
    "TotalInsts": 434,
    "TotalMemInst": 266,
    "TotalFuncs": 13,
    "ArgsPhi": 4,
    "testUnary": 207
  },
  "baseline_oz_instcount": 434,
  "knowledge_base_entry": [
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--early-cse",
    "--instcombine",
    "--ipsccp",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--loop-idiom",
          "--aggressive-instcombine",
          "--loop-unswitch",
          "--correlated-propagation",
          "--loop-instsimplify",
          "--licm",
          "--loop-unroll-and-jam",
          "--attributor",
          "--gvn-hoist",
          "--strip-nondebug",
          "--simple-loop-unswitch",
          "--loop-guard-widening",
          "--loop-interchange",
          "--load-store-vectorizer",
          "--reassociate",
          "--loop-sink",
          "--sancov",
          "--speculative-execution",
          "--alignment-from-assumptions",
          "--constprop",
          "--constmerge",
          "--loop-data-prefetch",
          "--lower-matrix-intrinsics",
          "--globalsplit",
          "-loop-reduce",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--loop-idiom",
      "--aggressive-instcombine",
      "--loop-unswitch",
      "--correlated-propagation",
      "--loop-instsimplify",
      "--licm",
      "--loop-unroll-and-jam",
      "--attributor",
      "--gvn-hoist",
      "--strip-nondebug",
      "--simple-loop-unswitch",
      "--loop-guard-widening",
      "--loop-interchange",
      "--load-store-vectorizer",
      "--reassociate",
      "--loop-sink",
      "--sancov",
      "--speculative-execution",
      "--alignment-from-assumptions",
      "--constprop",
      "--constmerge",
      "--loop-data-prefetch",
      "--lower-matrix-intrinsics",
      "--globalsplit",
      "-loop-reduce",
      "--always-inline"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}