{
  "program_id": "linux-v0_7244.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 84,
    "onePredOneSuc": 53,
    "onePredTwoSuc": 31,
    "oneSuccessor": 71,
    "twoPred": 20,
    "twoPredOneSuc": 8,
    "twoEach": 6,
    "twoSuccessor": 42,
    "morePreds": 12,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 135,
    "BeginPhi": 1,
    "BranchCount": 113,
    "returnInt": 31,
    "CriticalCount": 35,
    "NumEdges": 168,
    "const32Bit": 333,
    "const64Bit": 62,
    "numConstZeroes": 163,
    "numConstOnes": 150,
    "UncondBranches": 71,
    "binaryConstArg": 48,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 95,
    "NumAndInst": 2,
    "BlockMid": 14,
    "BlockLow": 122,
    "NumBitCastInst": 23,
    "NumBrInst": 113,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 102,
    "NumICmpInst": 52,
    "NumLShrInst": 0,
    "NumLoadInst": 237,
    "NumMulInst": 7,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 40,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 132,
    "NumSubInst": 3,
    "NumTruncInst": 4,
    "NumXorInst": 26,
    "NumZExtInst": 43,
    "TotalBlocks": 136,
    "TotalInsts": 979,
    "TotalMemInst": 621,
    "TotalFuncs": 32,
    "ArgsPhi": 2,
    "testUnary": 447
  },
  "baseline_oz_instcount": 979,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--early-cse",
    "--newgvn",
    "--mem2reg",
    "--ipsccp",
    "--inline",
    "--dce",
    "--aggressive-instcombine",
    "--instcombine",
    "--early-cse",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--prune-eh",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergeicmps",
          "--mem2reg",
          "--loop-instsimplify",
          "--loop-rotate",
          "--globalsplit",
          "--aggressive-instcombine",
          "--callsite-splitting",
          "--adce",
          "--rewrite-statepoints-for-gc",
          "--memcpyopt",
          "--loop-distribute",
          "--coro-split",
          "--elim-avail-extern",
          "--indvars",
          "--loop-predication",
          "--loop-idiom",
          "--loop-versioning-licm",
          "--globalopt",
          "--loop-load-elim",
          "--scalarizer",
          "--libcalls-shrinkwrap",
          "--float2int",
          "--deadargelim",
          "--mergefunc",
          "--lower-guard-intrinsic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergeicmps",
      "--mem2reg",
      "--loop-instsimplify",
      "--loop-rotate",
      "--globalsplit",
      "--aggressive-instcombine",
      "--callsite-splitting",
      "--adce",
      "--rewrite-statepoints-for-gc",
      "--memcpyopt",
      "--loop-distribute",
      "--coro-split",
      "--elim-avail-extern",
      "--indvars",
      "--loop-predication",
      "--loop-idiom",
      "--loop-versioning-licm",
      "--globalopt",
      "--loop-load-elim",
      "--scalarizer",
      "--libcalls-shrinkwrap",
      "--float2int",
      "--deadargelim",
      "--mergefunc",
      "--lower-guard-intrinsic"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}