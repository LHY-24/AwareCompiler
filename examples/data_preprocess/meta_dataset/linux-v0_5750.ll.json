{
  "program_id": "linux-v0_5750.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 68,
    "onePredOneSuc": 55,
    "onePredTwoSuc": 13,
    "oneSuccessor": 65,
    "twoPred": 13,
    "twoPredOneSuc": 8,
    "twoEach": 3,
    "twoSuccessor": 18,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 92,
    "BeginPhi": 1,
    "BranchCount": 83,
    "returnInt": 6,
    "CriticalCount": 10,
    "NumEdges": 114,
    "const32Bit": 263,
    "const64Bit": 23,
    "numConstZeroes": 112,
    "numConstOnes": 80,
    "UncondBranches": 65,
    "binaryConstArg": 11,
    "NumAShrInst": 1,
    "NumAddInst": 6,
    "NumAllocaInst": 53,
    "NumAndInst": 2,
    "BlockMid": 11,
    "BlockLow": 82,
    "NumBitCastInst": 16,
    "NumBrInst": 83,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 86,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 158,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 9,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 78,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 2,
    "NumZExtInst": 11,
    "TotalBlocks": 93,
    "TotalInsts": 565,
    "TotalMemInst": 405,
    "TotalFuncs": 20,
    "ArgsPhi": 2,
    "testUnary": 243
  },
  "baseline_oz_instcount": 562,
  "knowledge_base_entry": [
    "--mergereturn",
    "--simplifycfg",
    "--jump-threading",
    "--adce",
    "--mem2reg",
    "--loop-deletion",
    "--sroa",
    "--memcpyopt",
    "--mem2reg",
    "--ipsccp",
    "--flattencfg",
    "--sroa",
    "--mldst-motion",
    "--jump-threading",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--hotcoldsplit",
          "--float2int",
          "--flattencfg",
          "--callsite-splitting",
          "--lcssa",
          "--coro-early",
          "--indvars",
          "--bdce",
          "--div-rem-pairs",
          "--inline",
          "--name-anon-globals",
          "--libcalls-shrinkwrap",
          "--elim-avail-extern",
          "--aggressive-instcombine",
          "--newgvn",
          "--globalopt",
          "--gvn",
          "--loop-reroll",
          "--loop-versioning-licm",
          "--simplifycfg",
          "--lower-expect",
          "--sink",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--hotcoldsplit",
      "--float2int",
      "--flattencfg",
      "--callsite-splitting",
      "--lcssa",
      "--coro-early",
      "--indvars",
      "--bdce",
      "--div-rem-pairs",
      "--inline",
      "--name-anon-globals",
      "--libcalls-shrinkwrap",
      "--elim-avail-extern",
      "--aggressive-instcombine",
      "--newgvn",
      "--globalopt",
      "--gvn",
      "--loop-reroll",
      "--loop-versioning-licm",
      "--simplifycfg",
      "--lower-expect",
      "--sink",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}