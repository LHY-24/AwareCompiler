{
  "program_id": "linux-v0_11413.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 36,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 10,
    "oneSuccessor": 35,
    "twoPred": 11,
    "twoPredOneSuc": 6,
    "twoEach": 1,
    "twoSuccessor": 14,
    "morePreds": 3,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 4,
    "BranchCount": 49,
    "returnInt": 11,
    "CriticalCount": 9,
    "NumEdges": 69,
    "const32Bit": 142,
    "const64Bit": 11,
    "numConstZeroes": 43,
    "numConstOnes": 75,
    "UncondBranches": 35,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 70,
    "NumAndInst": 1,
    "BlockMid": 9,
    "BlockLow": 54,
    "NumBitCastInst": 13,
    "NumBrInst": 49,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 107,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 4,
    "NumRetInst": 13,
    "NumSExtInst": 2,
    "NumSelectInst": 2,
    "NumShlInst": 2,
    "NumStoreInst": 78,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 63,
    "TotalInsts": 435,
    "TotalMemInst": 311,
    "TotalFuncs": 24,
    "ArgsPhi": 8,
    "testUnary": 208
  },
  "baseline_oz_instcount": 435,
  "knowledge_base_entry": [
    "--sroa",
    "--instsimplify",
    "--lower-expect",
    "--aggressive-instcombine",
    "--globalopt",
    "--newgvn",
    "--correlated-propagation",
    "--bdce",
    "--inline",
    "--memcpyopt",
    "--gvn",
    "--licm",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--instcombine",
    "--mergefunc",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--inline",
          "--dce",
          "--mergereturn",
          "--dse",
          "--barrier",
          "--insert-gcov-profiling",
          "--loop-fusion",
          "--redundant-dbg-inst-elim",
          "--attributor",
          "--cross-dso-cfi",
          "--jump-threading",
          "--loop-unroll",
          "--speculative-execution",
          "--loop-versioning-licm",
          "--elim-avail-extern",
          "--aggressive-instcombine",
          "--loop-unroll-and-jam",
          "--globalopt",
          "--mergefunc",
          "--slsr",
          "--strip",
          "--loop-idiom"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--inline",
      "--dce",
      "--mergereturn",
      "--dse",
      "--barrier",
      "--insert-gcov-profiling",
      "--loop-fusion",
      "--redundant-dbg-inst-elim",
      "--attributor",
      "--cross-dso-cfi",
      "--jump-threading",
      "--loop-unroll",
      "--speculative-execution",
      "--loop-versioning-licm",
      "--elim-avail-extern",
      "--aggressive-instcombine",
      "--loop-unroll-and-jam",
      "--globalopt",
      "--mergefunc",
      "--slsr",
      "--strip",
      "--loop-idiom"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}