{
  "program_id": "github-v0_2108.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 1,
    "oneSuccessor": 17,
    "twoPred": 8,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 34,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 31,
    "const32Bit": 62,
    "const64Bit": 5,
    "numConstZeroes": 16,
    "numConstOnes": 25,
    "UncondBranches": 17,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 19,
    "NumAndInst": 7,
    "BlockMid": 3,
    "BlockLow": 31,
    "NumBitCastInst": 0,
    "NumBrInst": 24,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 7,
    "NumLShrInst": 7,
    "NumLoadInst": 41,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 6,
    "NumZExtInst": 5,
    "TotalBlocks": 34,
    "TotalInsts": 196,
    "TotalMemInst": 119,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 72
  },
  "baseline_oz_instcount": 193,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--slsr",
    "--newgvn",
    "--sccp",
    "--jump-threading",
    "--slsr",
    "--simplifycfg",
    "--mergefunc",
    "--simplifycfg",
    "--memcpyopt",
    "--sroa",
    "--aggressive-instcombine",
    "--newgvn",
    "--ipsccp",
    "--loop-instsimplify",
    "--sroa",
    "--simplifycfg",
    "--die",
    "--licm",
    "--gvn-hoist",
    "--ipsccp",
    "--globaldce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--gvn",
          "--forceattrs",
          "--loop-versioning-licm",
          "--dce",
          "--indvars",
          "--inline",
          "--ipconstprop",
          "--bdce",
          "--loop-distribute",
          "--loweratomic",
          "--dse",
          "--instnamer",
          "--deadargelim",
          "--loop-deletion",
          "--simple-loop-unswitch",
          "--constmerge",
          "--loop-unroll",
          "--aggressive-instcombine",
          "--hotcoldsplit",
          "--rpo-functionattrs",
          "--ipsccp",
          "--redundant-dbg-inst-elim",
          "--separate-const-offset-from-gep",
          "--loop-simplify",
          "--partial-inliner",
          "--die",
          "--coro-elide",
          "--irce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--gvn",
      "--forceattrs",
      "--loop-versioning-licm",
      "--dce",
      "--indvars",
      "--inline",
      "--ipconstprop",
      "--bdce",
      "--loop-distribute",
      "--loweratomic",
      "--dse",
      "--instnamer",
      "--deadargelim",
      "--loop-deletion",
      "--simple-loop-unswitch",
      "--constmerge",
      "--loop-unroll",
      "--aggressive-instcombine",
      "--hotcoldsplit",
      "--rpo-functionattrs",
      "--ipsccp",
      "--redundant-dbg-inst-elim",
      "--separate-const-offset-from-gep",
      "--loop-simplify",
      "--partial-inliner",
      "--die",
      "--coro-elide",
      "--irce"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}