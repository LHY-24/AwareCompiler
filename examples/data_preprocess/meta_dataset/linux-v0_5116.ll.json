{
  "program_id": "linux-v0_5116.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 3,
    "oneSuccessor": 7,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 0,
    "CriticalCount": 5,
    "NumEdges": 21,
    "const32Bit": 158,
    "const64Bit": 4,
    "numConstZeroes": 80,
    "numConstOnes": 30,
    "UncondBranches": 7,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 3,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 11,
    "NumBitCastInst": 21,
    "NumBrInst": 12,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 75,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 82,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 33,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 14,
    "TotalInsts": 242,
    "TotalMemInst": 193,
    "TotalFuncs": 1,
    "ArgsPhi": 0,
    "testUnary": 114
  },
  "baseline_oz_instcount": 242,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse",
    "--instsimplify",
    "--correlated-propagation",
    "--simplifycfg",
    "--nary-reassociate",
    "--indvars",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--instsimplify",
    "--gvn-hoist",
    "--mem2reg",
    "--instcombine",
    "--globalopt",
    "--globaldce",
    "--mergefunc",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--bdce",
          "--loop-data-prefetch",
          "--reassociate",
          "--strip-nondebug",
          "--mergefunc",
          "--loop-idiom",
          "--aggressive-instcombine",
          "--ipconstprop",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--bdce",
      "--loop-data-prefetch",
      "--reassociate",
      "--strip-nondebug",
      "--mergefunc",
      "--loop-idiom",
      "--aggressive-instcombine",
      "--ipconstprop",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}