{
  "program_id": "linux-v0_7216.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 12,
    "oneSuccessor": 45,
    "twoPred": 15,
    "twoPredOneSuc": 10,
    "twoEach": 0,
    "twoSuccessor": 16,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 0,
    "BranchCount": 61,
    "returnInt": 15,
    "CriticalCount": 10,
    "NumEdges": 92,
    "const32Bit": 264,
    "const64Bit": 13,
    "numConstZeroes": 126,
    "numConstOnes": 80,
    "UncondBranches": 45,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 55,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 68,
    "NumBitCastInst": 11,
    "NumBrInst": 61,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 80,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 165,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 8,
    "NumSelectInst": 6,
    "NumShlInst": 2,
    "NumStoreInst": 99,
    "NumSubInst": 0,
    "NumTruncInst": 15,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 76,
    "TotalInsts": 599,
    "TotalMemInst": 439,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 268
  },
  "baseline_oz_instcount": 599,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--jump-threading",
    "--aggressive-instcombine",
    "--adce",
    "--instsimplify",
    "--nary-reassociate",
    "--mem2reg",
    "--gvn-hoist",
    "--dce",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--die",
          "--inline",
          "--newgvn",
          "--mem2reg",
          "--flattencfg",
          "--redundant-dbg-inst-elim",
          "--instnamer",
          "--name-anon-globals",
          "--aggressive-instcombine",
          "--coro-elide",
          "--strip",
          "--reassociate",
          "--mergereturn",
          "--ipsccp",
          "--loop-vectorize",
          "--partially-inline-libcalls",
          "--strip-debug-declare",
          "--lowerinvoke",
          "--jump-threading",
          "--separate-const-offset-from-gep",
          "--loop-fusion",
          "--float2int",
          "--cross-dso-cfi",
          "--alignment-from-assumptions",
          "--loop-instsimplify",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--die",
      "--inline",
      "--newgvn",
      "--mem2reg",
      "--flattencfg",
      "--redundant-dbg-inst-elim",
      "--instnamer",
      "--name-anon-globals",
      "--aggressive-instcombine",
      "--coro-elide",
      "--strip",
      "--reassociate",
      "--mergereturn",
      "--ipsccp",
      "--loop-vectorize",
      "--partially-inline-libcalls",
      "--strip-debug-declare",
      "--lowerinvoke",
      "--jump-threading",
      "--separate-const-offset-from-gep",
      "--loop-fusion",
      "--float2int",
      "--cross-dso-cfi",
      "--alignment-from-assumptions",
      "--loop-instsimplify",
      "--licm"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}