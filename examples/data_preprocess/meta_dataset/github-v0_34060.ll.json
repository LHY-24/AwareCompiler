{
  "program_id": "github-v0_34060.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 56,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 11,
    "oneSuccessor": 55,
    "twoPred": 27,
    "twoPredOneSuc": 6,
    "twoEach": 13,
    "twoSuccessor": 29,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 107,
    "BeginPhi": 0,
    "BranchCount": 84,
    "returnInt": 76,
    "CriticalCount": 9,
    "NumEdges": 113,
    "const32Bit": 182,
    "const64Bit": 41,
    "numConstZeroes": 64,
    "numConstOnes": 130,
    "UncondBranches": 55,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 100,
    "NumAndInst": 2,
    "BlockMid": 20,
    "BlockLow": 87,
    "NumBitCastInst": 9,
    "NumBrInst": 84,
    "NumCallInst": 90,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 27,
    "NumLShrInst": 3,
    "NumLoadInst": 249,
    "NumMulInst": 4,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 18,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 146,
    "NumSubInst": 4,
    "NumTruncInst": 1,
    "NumXorInst": 1,
    "NumZExtInst": 5,
    "TotalBlocks": 107,
    "TotalInsts": 859,
    "TotalMemInst": 622,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 400
  },
  "baseline_oz_instcount": 860,
  "knowledge_base_entry": [
    "--functionattrs",
    "--newgvn",
    "--bdce",
    "--early-cse",
    "--sccp",
    "--inline",
    "--aggressive-instcombine",
    "--flattencfg",
    "--mem2reg",
    "--bdce",
    "--reassociate",
    "--slsr",
    "--newgvn",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--dse",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--bdce",
    "--early-cse",
    "--sccp",
    "--inline",
    "--aggressive-instcombine",
    "--flattencfg",
    "--mem2reg",
    "--bdce",
    "--early-cse",
    "--sccp",
    "--inline",
    "--aggressive-instcombine",
    "--flattencfg",
    "--mem2reg",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--always-inline",
          "--memcpyopt",
          "--mergereturn",
          "--loop-vectorize",
          "--loop-versioning-licm",
          "--redundant-dbg-inst-elim",
          "--callsite-splitting",
          "--post-inline-ee-instrument",
          "--ipconstprop",
          "--float2int",
          "--load-store-vectorizer",
          "--aggressive-instcombine",
          "--bdce",
          "--globalsplit",
          "--strip-debug-declare",
          "--loop-versioning",
          "--loop-unroll",
          "--inline",
          "--pgo-memop-opt",
          "--instsimplify",
          "--loop-sink",
          "--instcombine",
          "--speculative-execution",
          "--loop-simplifycfg",
          "--loop-interchange",
          "--simple-loop-unswitch",
          "--add-discriminators",
          "--simplifycfg",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--always-inline",
      "--memcpyopt",
      "--mergereturn",
      "--loop-vectorize",
      "--loop-versioning-licm",
      "--redundant-dbg-inst-elim",
      "--callsite-splitting",
      "--post-inline-ee-instrument",
      "--ipconstprop",
      "--float2int",
      "--load-store-vectorizer",
      "--aggressive-instcombine",
      "--bdce",
      "--globalsplit",
      "--strip-debug-declare",
      "--loop-versioning",
      "--loop-unroll",
      "--inline",
      "--pgo-memop-opt",
      "--instsimplify",
      "--loop-sink",
      "--instcombine",
      "--speculative-execution",
      "--loop-simplifycfg",
      "--loop-interchange",
      "--simple-loop-unswitch",
      "--add-discriminators",
      "--simplifycfg",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}