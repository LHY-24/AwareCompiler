{
  "program_id": "poj104-v1_89_135.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 2,
    "oneSuccessor": 9,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 35,
    "BeginPhi": 0,
    "BranchCount": 15,
    "returnInt": 12,
    "CriticalCount": 3,
    "NumEdges": 24,
    "const32Bit": 49,
    "const64Bit": 15,
    "numConstZeroes": 16,
    "numConstOnes": 34,
    "UncondBranches": 9,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 27,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 34,
    "NumBitCastInst": 20,
    "NumBrInst": 15,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 16,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 52,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 1,
    "TotalBlocks": 35,
    "TotalInsts": 233,
    "TotalMemInst": 162,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 104
  },
  "baseline_oz_instcount": 72,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--instcombine",
    "--inline",
    "--loop-instsimplify",
    "--early-cse",
    "--aggressive-instcombine",
    "--dce",
    "--mergefunc",
    "--lower-expect",
    "--gvn",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--instcombine",
    "--loop-deletion",
    "--instcombine",
    "--inline",
    "--dce",
    "--load-store-vectorizer",
    "--dce",
    "--ipsccp",
    "--instcombine",
    "--inline",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--gvn-hoist",
    "--slsr",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn",
          "--loop-instsimplify",
          "--mergeicmps",
          "--canonicalize-aliases",
          "--slsr",
          "--lower-guard-intrinsic",
          "--ipsccp",
          "--consthoist",
          "--called-value-propagation",
          "--loop-reroll",
          "--libcalls-shrinkwrap",
          "--always-inline",
          "--separate-const-offset-from-gep",
          "--elim-avail-extern",
          "--barrier",
          "--loop-load-elim",
          "--globalopt",
          "--rpo-functionattrs",
          "--loop-simplify",
          "--nary-reassociate",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn",
      "--loop-instsimplify",
      "--mergeicmps",
      "--canonicalize-aliases",
      "--slsr",
      "--lower-guard-intrinsic",
      "--ipsccp",
      "--consthoist",
      "--called-value-propagation",
      "--loop-reroll",
      "--libcalls-shrinkwrap",
      "--always-inline",
      "--separate-const-offset-from-gep",
      "--elim-avail-extern",
      "--barrier",
      "--loop-load-elim",
      "--globalopt",
      "--rpo-functionattrs",
      "--loop-simplify",
      "--nary-reassociate",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+11.1%"
  }
}