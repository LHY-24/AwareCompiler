{
  "program_id": "linux-v0_9989.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 1,
    "BranchCount": 7,
    "returnInt": 3,
    "CriticalCount": 2,
    "NumEdges": 10,
    "const32Bit": 33,
    "const64Bit": 5,
    "numConstZeroes": 13,
    "numConstOnes": 15,
    "UncondBranches": 4,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 10,
    "NumAndInst": 4,
    "BlockMid": 2,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 7,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 26,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 4,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 11,
    "TotalInsts": 98,
    "TotalMemInst": 64,
    "TotalFuncs": 8,
    "ArgsPhi": 2,
    "testUnary": 45
  },
  "baseline_oz_instcount": 98,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--reassociate",
    "--die",
    "--gvn-hoist",
    "--gvn-hoist",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--reassociate",
    "--slsr",
    "--simplifycfg",
    "--sroa",
    "--jump-threading",
    "--loop-reroll",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--loop-fusion",
          "--ipconstprop",
          "--loop-unroll",
          "--aggressive-instcombine",
          "--instcombine",
          "--loop-load-elim",
          "--globalsplit",
          "--bdce",
          "--loop-simplifycfg",
          "--called-value-propagation",
          "--loop-reroll",
          "--infer-address-spaces",
          "--redundant-dbg-inst-elim",
          "--loop-sink",
          "--newgvn",
          "--loop-unroll-and-jam",
          "--slsr",
          "--sink",
          "--loop-versioning",
          "--separate-const-offset-from-gep"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--loop-fusion",
      "--ipconstprop",
      "--loop-unroll",
      "--aggressive-instcombine",
      "--instcombine",
      "--loop-load-elim",
      "--globalsplit",
      "--bdce",
      "--loop-simplifycfg",
      "--called-value-propagation",
      "--loop-reroll",
      "--infer-address-spaces",
      "--redundant-dbg-inst-elim",
      "--loop-sink",
      "--newgvn",
      "--loop-unroll-and-jam",
      "--slsr",
      "--sink",
      "--loop-versioning",
      "--separate-const-offset-from-gep"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}