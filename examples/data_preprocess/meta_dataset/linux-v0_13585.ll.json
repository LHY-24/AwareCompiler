{
  "program_id": "linux-v0_13585.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 40,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 9,
    "oneSuccessor": 34,
    "twoPred": 8,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 17,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 69,
    "BeginPhi": 3,
    "BranchCount": 51,
    "returnInt": 14,
    "CriticalCount": 0,
    "NumEdges": 68,
    "const32Bit": 263,
    "const64Bit": 8,
    "numConstZeroes": 116,
    "numConstOnes": 95,
    "UncondBranches": 34,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 73,
    "NumAndInst": 1,
    "BlockMid": 10,
    "BlockLow": 62,
    "NumBitCastInst": 16,
    "NumBrInst": 51,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 85,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 174,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 21,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 108,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 72,
    "TotalInsts": 605,
    "TotalMemInst": 475,
    "TotalFuncs": 32,
    "ArgsPhi": 6,
    "testUnary": 282
  },
  "baseline_oz_instcount": 605,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--prune-eh",
    "--instsimplify",
    "--early-cse",
    "--correlated-propagation",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--jump-threading",
          "--tailcallelim",
          "--coro-cleanup",
          "--loop-unroll-and-jam",
          "--inline",
          "--mergeicmps",
          "--called-value-propagation",
          "--canonicalize-aliases",
          "--lowerswitch",
          "--globaldce",
          "--elim-avail-extern",
          "--aggressive-instcombine",
          "--separate-const-offset-from-gep"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--jump-threading",
      "--tailcallelim",
      "--coro-cleanup",
      "--loop-unroll-and-jam",
      "--inline",
      "--mergeicmps",
      "--called-value-propagation",
      "--canonicalize-aliases",
      "--lowerswitch",
      "--globaldce",
      "--elim-avail-extern",
      "--aggressive-instcombine",
      "--separate-const-offset-from-gep"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}