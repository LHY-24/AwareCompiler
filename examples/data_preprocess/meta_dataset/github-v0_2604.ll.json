{
  "program_id": "github-v0_2604.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 9,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 3,
    "oneSuccessor": 9,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 1,
    "BranchCount": 16,
    "returnInt": 1,
    "CriticalCount": 5,
    "NumEdges": 23,
    "const32Bit": 14,
    "const64Bit": 9,
    "numConstZeroes": 7,
    "numConstOnes": 13,
    "UncondBranches": 9,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 16,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 2,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 18,
    "TotalInsts": 100,
    "TotalMemInst": 66,
    "TotalFuncs": 6,
    "ArgsPhi": 2,
    "testUnary": 46
  },
  "baseline_oz_instcount": 101,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--lower-expect",
    "--die",
    "--mem2reg",
    "--early-cse",
    "--newgvn",
    "--slsr",
    "--simplifycfg",
    "--correlated-propagation",
    "--bdce",
    "--load-store-vectorizer",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--aggressive-instcombine",
          "--inline",
          "--coro-elide",
          "--gvn",
          "--early-cse",
          "--loop-vectorize",
          "--inferattrs",
          "--globalsplit",
          "--forceattrs",
          "--mem2reg",
          "--prune-eh",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--aggressive-instcombine",
      "--inline",
      "--coro-elide",
      "--gvn",
      "--early-cse",
      "--loop-vectorize",
      "--inferattrs",
      "--globalsplit",
      "--forceattrs",
      "--mem2reg",
      "--prune-eh",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}