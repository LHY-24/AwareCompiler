{
  "program_id": "github-v0_30127.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 46,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 15,
    "oneSuccessor": 39,
    "twoPred": 16,
    "twoPredOneSuc": 7,
    "twoEach": 8,
    "twoSuccessor": 29,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 0,
    "BranchCount": 68,
    "returnInt": 9,
    "CriticalCount": 14,
    "NumEdges": 97,
    "const32Bit": 223,
    "const64Bit": 44,
    "numConstZeroes": 115,
    "numConstOnes": 69,
    "UncondBranches": 39,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 52,
    "NumAndInst": 6,
    "BlockMid": 14,
    "BlockLow": 63,
    "NumBitCastInst": 10,
    "NumBrInst": 68,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 76,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 172,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 105,
    "NumSubInst": 7,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 17,
    "TotalBlocks": 77,
    "TotalInsts": 613,
    "TotalMemInst": 429,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 277
  },
  "baseline_oz_instcount": 617,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--gvn",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--gvn-hoist",
          "--loop-vectorize",
          "--partial-inliner",
          "--bdce",
          "--lower-constant-intrinsics",
          "--loop-versioning",
          "--partially-inline-libcalls",
          "--dce",
          "--scalarizer",
          "--load-store-vectorizer",
          "--strip",
          "--strip-dead-prototypes",
          "--tailcallelim",
          "--callsite-splitting",
          "--name-anon-globals",
          "--early-cse-memssa",
          "--globaldce",
          "--called-value-propagation",
          "--inject-tli-mappings",
          "--constmerge",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--gvn-hoist",
      "--loop-vectorize",
      "--partial-inliner",
      "--bdce",
      "--lower-constant-intrinsics",
      "--loop-versioning",
      "--partially-inline-libcalls",
      "--dce",
      "--scalarizer",
      "--load-store-vectorizer",
      "--strip",
      "--strip-dead-prototypes",
      "--tailcallelim",
      "--callsite-splitting",
      "--name-anon-globals",
      "--early-cse-memssa",
      "--globaldce",
      "--called-value-propagation",
      "--inject-tli-mappings",
      "--constmerge",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}