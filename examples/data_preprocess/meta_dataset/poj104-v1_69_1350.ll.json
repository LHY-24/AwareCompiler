{
  "program_id": "poj104-v1_69_1350.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 47,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 7,
    "oneSuccessor": 46,
    "twoPred": 17,
    "twoPredOneSuc": 3,
    "twoEach": 9,
    "twoSuccessor": 19,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 84,
    "BeginPhi": 1,
    "BranchCount": 65,
    "returnInt": 16,
    "CriticalCount": 7,
    "NumEdges": 84,
    "const32Bit": 98,
    "const64Bit": 81,
    "numConstZeroes": 51,
    "numConstOnes": 67,
    "UncondBranches": 46,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 47,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 76,
    "NumBitCastInst": 72,
    "NumBrInst": 65,
    "NumCallInst": 80,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 131,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 61,
    "NumSubInst": 7,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 85,
    "TotalInsts": 583,
    "TotalMemInst": 360,
    "TotalFuncs": 33,
    "ArgsPhi": 2,
    "testUnary": 272
  },
  "baseline_oz_instcount": 199,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--ipsccp",
    "--sccp",
    "--adce",
    "--slp-vectorizer",
    "--mem2reg",
    "--loop-deletion",
    "--sccp",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--sccp",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--lower-expect",
    "--licm",
    "--early-cse",
    "--sroa",
    "--gvn-hoist",
    "--prune-eh",
    "--mem2reg",
    "--simplifycfg",
    "--early-cse",
    "--inline",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--reassociate",
    "--lower-expect",
    "--instcombine",
    "--jump-threading",
    "--prune-eh",
    "--early-cse",
    "--mergefunc",
    "--early-cse",
    "--gvn",
    "--newgvn",
    "--slp-vectorizer",
    "--slsr",
    "--load-store-vectorizer",
    "--die",
    "--newgvn",
    "--loop-fusion",
    "--nary-reassociate",
    "--sroa",
    "--mem2reg",
    "--flattencfg",
    "--mem2reg",
    "--instcombine",
    "--globalopt",
    "--early-cse-memssa",
    "--bdce",
    "--lower-constant-intrinsics",
    "--sroa",
    "--gvn-hoist",
    "--prune-eh",
    "--mem2reg",
    "--simplifycfg",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--add-discriminators",
          "--lower-constant-intrinsics",
          "--slp-vectorizer",
          "--post-inline-ee-instrument",
          "--globaldce",
          "--hotcoldsplit",
          "--strip-debug-declare",
          "--inferattrs",
          "--lower-matrix-intrinsics",
          "--loop-versioning",
          "--globalsplit",
          "--constmerge",
          "--mldst-motion",
          "--simplifycfg",
          "--mem2reg",
          "--functionattrs",
          "--libcalls-shrinkwrap",
          "--lowerswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--add-discriminators",
      "--lower-constant-intrinsics",
      "--slp-vectorizer",
      "--post-inline-ee-instrument",
      "--globaldce",
      "--hotcoldsplit",
      "--strip-debug-declare",
      "--inferattrs",
      "--lower-matrix-intrinsics",
      "--loop-versioning",
      "--globalsplit",
      "--constmerge",
      "--mldst-motion",
      "--simplifycfg",
      "--mem2reg",
      "--functionattrs",
      "--libcalls-shrinkwrap",
      "--lowerswitch"
    ],
    "performance_vs_Oz": "+8.0%"
  }
}