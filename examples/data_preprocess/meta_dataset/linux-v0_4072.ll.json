{
  "program_id": "linux-v0_4072.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 32,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 7,
    "oneSuccessor": 29,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 14,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 1,
    "BranchCount": 43,
    "returnInt": 3,
    "CriticalCount": 6,
    "NumEdges": 57,
    "const32Bit": 130,
    "const64Bit": 6,
    "numConstZeroes": 59,
    "numConstOnes": 27,
    "UncondBranches": 29,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 22,
    "NumAndInst": 5,
    "BlockMid": 4,
    "BlockLow": 44,
    "NumBitCastInst": 12,
    "NumBrInst": 43,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 15,
    "NumLShrInst": 2,
    "NumLoadInst": 89,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 5,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 47,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 48,
    "TotalInsts": 321,
    "TotalMemInst": 213,
    "TotalFuncs": 7,
    "ArgsPhi": 2,
    "testUnary": 143
  },
  "baseline_oz_instcount": 321,
  "knowledge_base_entry": [
    "--functionattrs",
    "--newgvn",
    "--aggressive-instcombine",
    "--lower-expect",
    "--sroa",
    "--jump-threading",
    "--die",
    "--gvn",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--globaldce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--sancov",
          "--mergefunc",
          "--aggressive-instcombine",
          "--loop-idiom",
          "--argpromotion",
          "--coro-elide",
          "--die",
          "--lower-guard-intrinsic",
          "--rewrite-statepoints-for-gc",
          "--deadargelim",
          "--tailcallelim",
          "--globalopt",
          "--canonicalize-aliases",
          "--lower-expect",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--sancov",
      "--mergefunc",
      "--aggressive-instcombine",
      "--loop-idiom",
      "--argpromotion",
      "--coro-elide",
      "--die",
      "--lower-guard-intrinsic",
      "--rewrite-statepoints-for-gc",
      "--deadargelim",
      "--tailcallelim",
      "--globalopt",
      "--canonicalize-aliases",
      "--lower-expect",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}