{
  "program_id": "github-v0_8549.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 103,
    "onePredOneSuc": 56,
    "onePredTwoSuc": 47,
    "oneSuccessor": 81,
    "twoPred": 42,
    "twoPredOneSuc": 23,
    "twoEach": 17,
    "twoSuccessor": 74,
    "morePreds": 10,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 164,
    "BeginPhi": 0,
    "BranchCount": 155,
    "returnInt": 15,
    "CriticalCount": 51,
    "NumEdges": 229,
    "const32Bit": 287,
    "const64Bit": 17,
    "numConstZeroes": 97,
    "numConstOnes": 82,
    "UncondBranches": 81,
    "binaryConstArg": 34,
    "NumAShrInst": 0,
    "NumAddInst": 18,
    "NumAllocaInst": 60,
    "NumAndInst": 8,
    "BlockMid": 10,
    "BlockLow": 154,
    "NumBitCastInst": 2,
    "NumBrInst": 155,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 58,
    "NumICmpInst": 74,
    "NumLShrInst": 1,
    "NumLoadInst": 257,
    "NumMulInst": 3,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 21,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 139,
    "NumSubInst": 5,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 164,
    "TotalInsts": 881,
    "TotalMemInst": 569,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 353
  },
  "baseline_oz_instcount": 881,
  "knowledge_base_entry": [
    "--inline",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--gvn",
    "--bdce",
    "--load-store-vectorizer",
    "--dce",
    "--mem2reg",
    "--newgvn",
    "--prune-eh",
    "--jump-threading",
    "--aggressive-instcombine",
    "--bdce",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--mem2reg",
          "--scalarizer",
          "--irce",
          "-loop-reduce",
          "--reassociate",
          "--lower-constant-intrinsics",
          "--aggressive-instcombine",
          "--lowerswitch",
          "--loop-fusion",
          "--loweratomic",
          "--functionattrs",
          "--inject-tli-mappings",
          "--mldst-motion",
          "--loop-simplify",
          "--load-store-vectorizer",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--mem2reg",
      "--scalarizer",
      "--irce",
      "-loop-reduce",
      "--reassociate",
      "--lower-constant-intrinsics",
      "--aggressive-instcombine",
      "--lowerswitch",
      "--loop-fusion",
      "--loweratomic",
      "--functionattrs",
      "--inject-tli-mappings",
      "--mldst-motion",
      "--loop-simplify",
      "--load-store-vectorizer",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}