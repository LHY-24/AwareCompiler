{
  "program_id": "github-v0_47704.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 29,
    "onePred": 110,
    "onePredOneSuc": 76,
    "onePredTwoSuc": 34,
    "oneSuccessor": 103,
    "twoPred": 54,
    "twoPredOneSuc": 26,
    "twoEach": 24,
    "twoSuccessor": 67,
    "morePreds": 6,
    "BB03Phi": 29,
    "BBHiPhi": 0,
    "BBNoPhi": 150,
    "BeginPhi": 29,
    "BranchCount": 170,
    "returnInt": 28,
    "CriticalCount": 28,
    "NumEdges": 237,
    "const32Bit": 207,
    "const64Bit": 55,
    "numConstZeroes": 137,
    "numConstOnes": 79,
    "UncondBranches": 103,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 43,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 178,
    "NumBitCastInst": 36,
    "NumBrInst": 170,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 67,
    "NumLShrInst": 0,
    "NumLoadInst": 222,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 29,
    "NumRetInst": 9,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 81,
    "NumSubInst": 14,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 179,
    "TotalInsts": 834,
    "TotalMemInst": 461,
    "TotalFuncs": 16,
    "ArgsPhi": 58,
    "testUnary": 323
  },
  "baseline_oz_instcount": 836,
  "knowledge_base_entry": [
    "--inferattrs",
    "--early-cse-memssa",
    "--adce",
    "--gvn",
    "--nary-reassociate",
    "--ipsccp",
    "--simplifycfg",
    "--reassociate",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--loop-vectorize",
          "--sroa",
          "--forceattrs",
          "--mergefunc",
          "--loop-unroll-and-jam",
          "--gvn",
          "--lower-widenable-condition",
          "--constmerge",
          "--argpromotion",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--loop-vectorize",
      "--sroa",
      "--forceattrs",
      "--mergefunc",
      "--loop-unroll-and-jam",
      "--gvn",
      "--lower-widenable-condition",
      "--constmerge",
      "--argpromotion",
      "--sancov"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}