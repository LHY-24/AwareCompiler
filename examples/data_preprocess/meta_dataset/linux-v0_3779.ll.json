{
  "program_id": "linux-v0_3779.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 66,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 16,
    "oneSuccessor": 62,
    "twoPred": 35,
    "twoPredOneSuc": 10,
    "twoEach": 22,
    "twoSuccessor": 42,
    "morePreds": 4,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 117,
    "BeginPhi": 2,
    "BranchCount": 104,
    "returnInt": 53,
    "CriticalCount": 26,
    "NumEdges": 150,
    "const32Bit": 261,
    "const64Bit": 28,
    "numConstZeroes": 130,
    "numConstOnes": 82,
    "UncondBranches": 62,
    "binaryConstArg": 33,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 54,
    "NumAndInst": 9,
    "BlockMid": 10,
    "BlockLow": 109,
    "NumBitCastInst": 0,
    "NumBrInst": 104,
    "NumCallInst": 60,
    "NumGetElementPtrInst": 67,
    "NumICmpInst": 46,
    "NumLShrInst": 5,
    "NumLoadInst": 177,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 2,
    "NumRetInst": 14,
    "NumSExtInst": 29,
    "NumSelectInst": 4,
    "NumShlInst": 6,
    "NumStoreInst": 108,
    "NumSubInst": 4,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 119,
    "TotalInsts": 724,
    "TotalMemInst": 466,
    "TotalFuncs": 30,
    "ArgsPhi": 4,
    "testUnary": 276
  },
  "baseline_oz_instcount": 730,
  "knowledge_base_entry": [
    "--gvn",
    "--sccp",
    "--die",
    "--newgvn",
    "--instsimplify",
    "--prune-eh",
    "--gvn",
    "--bdce",
    "--elim-avail-extern",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--lower-widenable-condition",
          "--slp-vectorizer",
          "--guard-widening",
          "--rewrite-statepoints-for-gc",
          "--mergereturn",
          "--lower-constant-intrinsics",
          "--cross-dso-cfi",
          "--partially-inline-libcalls",
          "--sccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--lower-widenable-condition",
      "--slp-vectorizer",
      "--guard-widening",
      "--rewrite-statepoints-for-gc",
      "--mergereturn",
      "--lower-constant-intrinsics",
      "--cross-dso-cfi",
      "--partially-inline-libcalls",
      "--sccp"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}