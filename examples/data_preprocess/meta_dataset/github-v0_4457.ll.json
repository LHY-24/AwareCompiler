{
  "program_id": "github-v0_4457.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 4,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 5,
    "const32Bit": 46,
    "const64Bit": 0,
    "numConstZeroes": 7,
    "numConstOnes": 36,
    "UncondBranches": 3,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 35,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 25,
    "NumBitCastInst": 3,
    "NumBrInst": 4,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 19,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 39,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 25,
    "TotalInsts": 155,
    "TotalMemInst": 118,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 64
  },
  "baseline_oz_instcount": 155,
  "knowledge_base_entry": [
    "--mergefunc",
    "--globaldce",
    "--ipsccp",
    "--licm",
    "--loop-instsimplify",
    "--instcombine",
    "--flattencfg",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--loop-sink",
          "--lower-expect",
          "--instnamer",
          "--mergereturn",
          "--partially-inline-libcalls",
          "--die",
          "--load-store-vectorizer",
          "--barrier",
          "--loop-instsimplify",
          "--mergefunc",
          "--newgvn",
          "--pgo-memop-opt",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+30.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--loop-sink",
      "--lower-expect",
      "--instnamer",
      "--mergereturn",
      "--partially-inline-libcalls",
      "--die",
      "--load-store-vectorizer",
      "--barrier",
      "--loop-instsimplify",
      "--mergefunc",
      "--newgvn",
      "--pgo-memop-opt",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+30.3%"
  }
}