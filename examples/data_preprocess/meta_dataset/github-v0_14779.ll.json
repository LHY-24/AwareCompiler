{
  "program_id": "github-v0_14779.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 9,
    "oneSuccessor": 48,
    "twoPred": 14,
    "twoPredOneSuc": 5,
    "twoEach": 7,
    "twoSuccessor": 20,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 88,
    "BeginPhi": 0,
    "BranchCount": 66,
    "returnInt": 14,
    "CriticalCount": 11,
    "NumEdges": 105,
    "const32Bit": 229,
    "const64Bit": 63,
    "numConstZeroes": 155,
    "numConstOnes": 75,
    "UncondBranches": 48,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 41,
    "NumAndInst": 0,
    "BlockMid": 26,
    "BlockLow": 62,
    "NumBitCastInst": 0,
    "NumBrInst": 66,
    "NumCallInst": 78,
    "NumGetElementPtrInst": 120,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 204,
    "NumMulInst": 12,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 63,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 123,
    "NumSubInst": 9,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 88,
    "TotalInsts": 828,
    "TotalMemInst": 566,
    "TotalFuncs": 48,
    "ArgsPhi": 0,
    "testUnary": 335
  },
  "baseline_oz_instcount": 830,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--jump-threading",
    "--dse",
    "--lower-expect",
    "--loop-simplifycfg",
    "--mem2reg",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--gvn-hoist",
          "--early-cse",
          "--simplifycfg",
          "--loop-rotate",
          "--always-inline",
          "--sccp",
          "--prune-eh",
          "--coro-split",
          "--float2int",
          "--sroa",
          "--simple-loop-unswitch",
          "--bdce",
          "--nary-reassociate",
          "--dce",
          "--loop-reroll",
          "--functionattrs",
          "--coro-early",
          "--sink",
          "--loop-unroll",
          "--loop-sink",
          "--lower-expect"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--gvn-hoist",
      "--early-cse",
      "--simplifycfg",
      "--loop-rotate",
      "--always-inline",
      "--sccp",
      "--prune-eh",
      "--coro-split",
      "--float2int",
      "--sroa",
      "--simple-loop-unswitch",
      "--bdce",
      "--nary-reassociate",
      "--dce",
      "--loop-reroll",
      "--functionattrs",
      "--coro-early",
      "--sink",
      "--loop-unroll",
      "--loop-sink",
      "--lower-expect"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}