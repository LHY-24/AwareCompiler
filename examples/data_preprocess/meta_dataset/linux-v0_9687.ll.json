{
  "program_id": "linux-v0_9687.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 46,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 12,
    "oneSuccessor": 38,
    "twoPred": 12,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 24,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 0,
    "BranchCount": 62,
    "returnInt": 56,
    "CriticalCount": 5,
    "NumEdges": 86,
    "const32Bit": 205,
    "const64Bit": 17,
    "numConstZeroes": 64,
    "numConstOnes": 106,
    "UncondBranches": 38,
    "binaryConstArg": 31,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 70,
    "NumAndInst": 15,
    "BlockMid": 13,
    "BlockLow": 64,
    "NumBitCastInst": 24,
    "NumBrInst": 62,
    "NumCallInst": 60,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 35,
    "NumLShrInst": 10,
    "NumLoadInst": 189,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 9,
    "NumSelectInst": 11,
    "NumShlInst": 0,
    "NumStoreInst": 81,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 77,
    "TotalInsts": 629,
    "TotalMemInst": 421,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 313
  },
  "baseline_oz_instcount": 631,
  "knowledge_base_entry": [
    "--newgvn",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--correlated-propagation",
    "--mergefunc",
    "--inline",
    "--gvn",
    "--flattencfg",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--constmerge",
          "--add-discriminators",
          "--coro-elide",
          "--lowerswitch",
          "--libcalls-shrinkwrap",
          "--partial-inliner",
          "--rpo-functionattrs",
          "--dse",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--constmerge",
      "--add-discriminators",
      "--coro-elide",
      "--lowerswitch",
      "--libcalls-shrinkwrap",
      "--partial-inliner",
      "--rpo-functionattrs",
      "--dse",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}