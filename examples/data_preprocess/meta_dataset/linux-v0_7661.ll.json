{
  "program_id": "linux-v0_7661.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 47,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 11,
    "oneSuccessor": 45,
    "twoPred": 14,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 18,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 1,
    "BranchCount": 63,
    "returnInt": 28,
    "CriticalCount": 7,
    "NumEdges": 86,
    "const32Bit": 293,
    "const64Bit": 24,
    "numConstZeroes": 125,
    "numConstOnes": 131,
    "UncondBranches": 45,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 103,
    "NumAndInst": 5,
    "BlockMid": 14,
    "BlockLow": 81,
    "NumBitCastInst": 33,
    "NumBrInst": 63,
    "NumCallInst": 76,
    "NumGetElementPtrInst": 74,
    "NumICmpInst": 19,
    "NumLShrInst": 2,
    "NumLoadInst": 215,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 31,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 127,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 4,
    "NumZExtInst": 8,
    "TotalBlocks": 95,
    "TotalInsts": 784,
    "TotalMemInst": 595,
    "TotalFuncs": 60,
    "ArgsPhi": 2,
    "testUnary": 371
  },
  "baseline_oz_instcount": 786,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--bdce",
    "--jump-threading",
    "--elim-avail-extern",
    "--instsimplify",
    "--correlated-propagation",
    "--globalopt",
    "--globaldce",
    "--ipsccp",
    "--inline",
    "--mergefunc",
    "--simplifycfg",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--redundant-dbg-inst-elim",
          "--coro-elide",
          "--instnamer",
          "--globaldce",
          "--rpo-functionattrs",
          "--early-cse",
          "--add-discriminators",
          "--float2int",
          "--strip-debug-declare",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--redundant-dbg-inst-elim",
      "--coro-elide",
      "--instnamer",
      "--globaldce",
      "--rpo-functionattrs",
      "--early-cse",
      "--add-discriminators",
      "--float2int",
      "--strip-debug-declare",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}