{
  "program_id": "linux-v0_9791.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 0,
    "onePred": 49,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 18,
    "oneSuccessor": 37,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 1,
    "twoSuccessor": 25,
    "morePreds": 7,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 1,
    "BranchCount": 62,
    "returnInt": 4,
    "CriticalCount": 16,
    "NumEdges": 93,
    "const32Bit": 120,
    "const64Bit": 2,
    "numConstZeroes": 43,
    "numConstOnes": 48,
    "UncondBranches": 37,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 29,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 68,
    "NumBitCastInst": 6,
    "NumBrInst": 62,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 102,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 1,
    "NumRetInst": 10,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 48,
    "NumSubInst": 4,
    "NumTruncInst": 0,
    "NumXorInst": 5,
    "NumZExtInst": 26,
    "TotalBlocks": 73,
    "TotalInsts": 376,
    "TotalMemInst": 215,
    "TotalFuncs": 13,
    "ArgsPhi": 7,
    "testUnary": 166
  },
  "baseline_oz_instcount": 374,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--instcombine",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--sccp",
    "--newgvn",
    "--dce",
    "--ipsccp",
    "--simplifycfg",
    "--globalopt",
    "--mem2reg",
    "--slp-vectorizer",
    "--mldst-motion",
    "--instcombine",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipconstprop",
          "--memcpyopt",
          "--guard-widening",
          "--sroa",
          "--sancov",
          "--sink",
          "--functionattrs",
          "--add-discriminators",
          "--libcalls-shrinkwrap",
          "--tailcallelim",
          "--instnamer",
          "--separate-const-offset-from-gep",
          "--lower-constant-intrinsics",
          "--globalopt",
          "--strip-nondebug",
          "--dse",
          "--constprop",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipconstprop",
      "--memcpyopt",
      "--guard-widening",
      "--sroa",
      "--sancov",
      "--sink",
      "--functionattrs",
      "--add-discriminators",
      "--libcalls-shrinkwrap",
      "--tailcallelim",
      "--instnamer",
      "--separate-const-offset-from-gep",
      "--lower-constant-intrinsics",
      "--globalopt",
      "--strip-nondebug",
      "--dse",
      "--constprop",
      "--always-inline"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}