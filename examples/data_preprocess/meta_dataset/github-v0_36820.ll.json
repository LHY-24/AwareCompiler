{
  "program_id": "github-v0_36820.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 91,
    "onePredOneSuc": 78,
    "onePredTwoSuc": 11,
    "oneSuccessor": 89,
    "twoPred": 42,
    "twoPredOneSuc": 3,
    "twoEach": 33,
    "twoSuccessor": 46,
    "morePreds": 2,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 140,
    "BeginPhi": 5,
    "BranchCount": 135,
    "returnInt": 41,
    "CriticalCount": 12,
    "NumEdges": 181,
    "const32Bit": 223,
    "const64Bit": 24,
    "numConstZeroes": 168,
    "numConstOnes": 93,
    "UncondBranches": 89,
    "binaryConstArg": 37,
    "NumAShrInst": 0,
    "NumAddInst": 24,
    "NumAllocaInst": 57,
    "NumAndInst": 3,
    "BlockMid": 10,
    "BlockLow": 135,
    "NumBitCastInst": 5,
    "NumBrInst": 135,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 100,
    "NumICmpInst": 38,
    "NumLShrInst": 0,
    "NumLoadInst": 216,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 5,
    "NumRetInst": 10,
    "NumSExtInst": 67,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 97,
    "NumSubInst": 9,
    "NumTruncInst": 7,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 145,
    "TotalInsts": 834,
    "TotalMemInst": 521,
    "TotalFuncs": 15,
    "ArgsPhi": 10,
    "testUnary": 354
  },
  "baseline_oz_instcount": 837,
  "knowledge_base_entry": [
    "--mergereturn",
    "--simplifycfg",
    "--mldst-motion",
    "--early-cse-memssa",
    "--inline",
    "--sroa",
    "--jump-threading",
    "--adce",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slp-vectorizer",
          "--gvn",
          "--add-discriminators",
          "--guard-widening",
          "--tailcallelim",
          "--lower-constant-intrinsics",
          "--cross-dso-cfi",
          "--coro-early",
          "--lcssa",
          "--dse",
          "--inferattrs",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slp-vectorizer",
      "--gvn",
      "--add-discriminators",
      "--guard-widening",
      "--tailcallelim",
      "--lower-constant-intrinsics",
      "--cross-dso-cfi",
      "--coro-early",
      "--lcssa",
      "--dse",
      "--inferattrs",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}