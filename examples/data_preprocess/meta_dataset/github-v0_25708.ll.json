{
  "program_id": "github-v0_25708.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 99,
    "onePredOneSuc": 53,
    "onePredTwoSuc": 45,
    "oneSuccessor": 74,
    "twoPred": 31,
    "twoPredOneSuc": 16,
    "twoEach": 14,
    "twoSuccessor": 66,
    "morePreds": 12,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 148,
    "BeginPhi": 0,
    "BranchCount": 140,
    "returnInt": 9,
    "CriticalCount": 44,
    "NumEdges": 212,
    "const32Bit": 270,
    "const64Bit": 27,
    "numConstZeroes": 128,
    "numConstOnes": 96,
    "UncondBranches": 74,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 56,
    "NumAndInst": 4,
    "BlockMid": 9,
    "BlockLow": 139,
    "NumBitCastInst": 5,
    "NumBrInst": 140,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 66,
    "NumLShrInst": 2,
    "NumLoadInst": 194,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 18,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 133,
    "NumSubInst": 12,
    "NumTruncInst": 13,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 148,
    "TotalInsts": 793,
    "TotalMemInst": 484,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 309
  },
  "baseline_oz_instcount": 796,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--mem2reg",
    "--aggressive-instcombine",
    "--jump-threading",
    "--prune-eh",
    "--early-cse-memssa",
    "--globalopt",
    "--globaldce",
    "--aggressive-instcombine",
    "--ipsccp",
    "--sroa",
    "--dce",
    "--inline",
    "--aggressive-instcombine",
    "--loweratomic",
    "--globalopt",
    "--jump-threading",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mldst-motion",
          "--reassociate",
          "--constmerge",
          "--lower-expect",
          "--lower-constant-intrinsics",
          "--argpromotion",
          "--mergefunc",
          "--lower-widenable-condition",
          "--functionattrs",
          "--load-store-vectorizer",
          "--loop-instsimplify",
          "--coro-split",
          "--barrier",
          "--simplifycfg",
          "--loop-predication",
          "--loop-vectorize",
          "--tailcallelim",
          "--mergereturn",
          "--constprop",
          "--deadargelim",
          "--slsr",
          "--post-inline-ee-instrument",
          "--loop-deletion",
          "--partial-inliner",
          "--aggressive-instcombine",
          "--loop-load-elim",
          "--lowerinvoke",
          "--loop-simplify",
          "--lower-guard-intrinsic",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mldst-motion",
      "--reassociate",
      "--constmerge",
      "--lower-expect",
      "--lower-constant-intrinsics",
      "--argpromotion",
      "--mergefunc",
      "--lower-widenable-condition",
      "--functionattrs",
      "--load-store-vectorizer",
      "--loop-instsimplify",
      "--coro-split",
      "--barrier",
      "--simplifycfg",
      "--loop-predication",
      "--loop-vectorize",
      "--tailcallelim",
      "--mergereturn",
      "--constprop",
      "--deadargelim",
      "--slsr",
      "--post-inline-ee-instrument",
      "--loop-deletion",
      "--partial-inliner",
      "--aggressive-instcombine",
      "--loop-load-elim",
      "--lowerinvoke",
      "--loop-simplify",
      "--lower-guard-intrinsic",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}