{
  "program_id": "linux-v0_2405.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 6,
    "oneSuccessor": 30,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 37,
    "returnInt": 12,
    "CriticalCount": 0,
    "NumEdges": 44,
    "const32Bit": 131,
    "const64Bit": 17,
    "numConstZeroes": 50,
    "numConstOnes": 77,
    "UncondBranches": 30,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 62,
    "NumAndInst": 4,
    "BlockMid": 6,
    "BlockLow": 44,
    "NumBitCastInst": 18,
    "NumBrInst": 37,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 90,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 69,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 50,
    "TotalInsts": 394,
    "TotalMemInst": 284,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 197
  },
  "baseline_oz_instcount": 394,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--gvn-hoist",
    "--flattencfg",
    "--globalopt",
    "--mergefunc",
    "-loop-reduce",
    "--slsr",
    "--gvn",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--instcombine",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--aggressive-instcombine",
          "--lower-constant-intrinsics",
          "--partial-inliner",
          "--coro-cleanup",
          "--inferattrs",
          "--separate-const-offset-from-gep",
          "--reassociate",
          "--loop-simplify",
          "--div-rem-pairs",
          "--lower-widenable-condition",
          "--infer-address-spaces",
          "--flattencfg",
          "--bdce",
          "--instnamer",
          "--strip-dead-prototypes",
          "--newgvn",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--aggressive-instcombine",
      "--lower-constant-intrinsics",
      "--partial-inliner",
      "--coro-cleanup",
      "--inferattrs",
      "--separate-const-offset-from-gep",
      "--reassociate",
      "--loop-simplify",
      "--div-rem-pairs",
      "--lower-widenable-condition",
      "--infer-address-spaces",
      "--flattencfg",
      "--bdce",
      "--instnamer",
      "--strip-dead-prototypes",
      "--newgvn",
      "--inline"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}