{
  "program_id": "poj104-v1_82_328.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 5,
    "oneSuccessor": 17,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 10,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 0,
    "BranchCount": 27,
    "returnInt": 3,
    "CriticalCount": 5,
    "NumEdges": 37,
    "const32Bit": 43,
    "const64Bit": 20,
    "numConstZeroes": 13,
    "numConstOnes": 26,
    "UncondBranches": 17,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 22,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 34,
    "NumBitCastInst": 21,
    "NumBrInst": 27,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 47,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 27,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 37,
    "TotalInsts": 223,
    "TotalMemInst": 144,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 96
  },
  "baseline_oz_instcount": 84,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--jump-threading",
    "--globalopt",
    "--gvn",
    "--elim-avail-extern",
    "--die",
    "--gvn-hoist",
    "--prune-eh",
    "--aggressive-instcombine",
    "--sroa",
    "--dse",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--flattencfg",
    "--gvn-hoist",
    "--newgvn",
    "--flattencfg",
    "--load-store-vectorizer",
    "--newgvn",
    "--mem2reg",
    "--memcpyopt",
    "--instcombine",
    "--inline",
    "--gvn-hoist",
    "--mldst-motion",
    "--early-cse-memssa",
    "--licm",
    "--jump-threading",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--insert-gcov-profiling",
          "--loop-unswitch",
          "--alignment-from-assumptions",
          "--coro-elide",
          "--hotcoldsplit",
          "--lower-constant-intrinsics",
          "--die",
          "--elim-avail-extern",
          "--sroa",
          "--lower-widenable-condition",
          "--mergefunc",
          "--early-cse",
          "--lower-expect",
          "--strip-nondebug",
          "--constprop",
          "--cross-dso-cfi",
          "--ipconstprop",
          "--mergeicmps",
          "--jump-threading",
          "--tailcallelim",
          "--rpo-functionattrs",
          "--bdce",
          "--ipsccp",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--insert-gcov-profiling",
      "--loop-unswitch",
      "--alignment-from-assumptions",
      "--coro-elide",
      "--hotcoldsplit",
      "--lower-constant-intrinsics",
      "--die",
      "--elim-avail-extern",
      "--sroa",
      "--lower-widenable-condition",
      "--mergefunc",
      "--early-cse",
      "--lower-expect",
      "--strip-nondebug",
      "--constprop",
      "--cross-dso-cfi",
      "--ipconstprop",
      "--mergeicmps",
      "--jump-threading",
      "--tailcallelim",
      "--rpo-functionattrs",
      "--bdce",
      "--ipsccp",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+6.0%"
  }
}