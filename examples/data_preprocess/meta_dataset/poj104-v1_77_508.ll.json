{
  "program_id": "poj104-v1_77_508.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 3,
    "oneSuccessor": 9,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 15,
    "returnInt": 5,
    "CriticalCount": 2,
    "NumEdges": 21,
    "const32Bit": 27,
    "const64Bit": 10,
    "numConstZeroes": 9,
    "numConstOnes": 20,
    "UncondBranches": 9,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 26,
    "NumBitCastInst": 9,
    "NumBrInst": 15,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 27,
    "TotalInsts": 152,
    "TotalMemInst": 103,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 65
  },
  "baseline_oz_instcount": 54,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--instcombine",
    "--sccp",
    "--mem2reg",
    "--prune-eh",
    "--gvn",
    "--bdce",
    "--die",
    "--loop-simplifycfg",
    "--jump-threading",
    "--aggressive-instcombine",
    "--lower-expect",
    "--elim-avail-extern",
    "--mem2reg",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--flattencfg",
    "--load-store-vectorizer",
    "--inline",
    "--memcpyopt",
    "--simplifycfg",
    "--loop-instsimplify",
    "--sccp",
    "--gvn",
    "--loop-deletion",
    "--elim-avail-extern",
    "--reassociate",
    "--reassociate",
    "--dce",
    "--sroa",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--early-cse",
    "-loop-reduce",
    "--newgvn",
    "--gvn-hoist",
    "--adce",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--jump-threading",
    "--die",
    "--gvn",
    "--globalopt",
    "--dse",
    "--globalopt",
    "--jump-threading",
    "--prune-eh",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--globalsplit",
          "--slsr",
          "-loop-reduce",
          "--inferattrs",
          "--infer-address-spaces",
          "--slp-vectorizer",
          "--coro-cleanup",
          "--scalarizer",
          "--elim-avail-extern",
          "--post-inline-ee-instrument",
          "--partially-inline-libcalls",
          "--speculative-execution",
          "--mem2reg",
          "--loop-rotate",
          "--loweratomic",
          "--deadargelim",
          "--globaldce",
          "--add-discriminators",
          "--partial-inliner",
          "--lowerswitch",
          "--sancov",
          "--loop-simplify",
          "--loop-versioning-licm",
          "--globalopt",
          "--correlated-propagation",
          "--canonicalize-aliases",
          "--loop-reroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--globalsplit",
      "--slsr",
      "-loop-reduce",
      "--inferattrs",
      "--infer-address-spaces",
      "--slp-vectorizer",
      "--coro-cleanup",
      "--scalarizer",
      "--elim-avail-extern",
      "--post-inline-ee-instrument",
      "--partially-inline-libcalls",
      "--speculative-execution",
      "--mem2reg",
      "--loop-rotate",
      "--loweratomic",
      "--deadargelim",
      "--globaldce",
      "--add-discriminators",
      "--partial-inliner",
      "--lowerswitch",
      "--sancov",
      "--loop-simplify",
      "--loop-versioning-licm",
      "--globalopt",
      "--correlated-propagation",
      "--canonicalize-aliases",
      "--loop-reroll"
    ],
    "performance_vs_Oz": "+3.7%"
  }
}