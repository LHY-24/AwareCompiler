{
  "program_id": "linux-v0_11034.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 5,
    "oneSuccessor": 18,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 11,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 34,
    "BeginPhi": 0,
    "BranchCount": 29,
    "returnInt": 7,
    "CriticalCount": 8,
    "NumEdges": 40,
    "const32Bit": 29,
    "const64Bit": 0,
    "numConstZeroes": 14,
    "numConstOnes": 10,
    "UncondBranches": 18,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 34,
    "NumBitCastInst": 0,
    "NumBrInst": 29,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 21,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 34,
    "TotalInsts": 101,
    "TotalMemInst": 52,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 29
  },
  "baseline_oz_instcount": 101,
  "knowledge_base_entry": [
    "--die",
    "--mergefunc",
    "--dse",
    "--sccp",
    "--bdce",
    "--gvn",
    "--globalopt",
    "--sroa",
    "--dse",
    "--globalopt",
    "--early-cse-memssa",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--bdce",
    "--die",
    "--newgvn",
    "--jump-threading",
    "--elim-avail-extern",
    "--instcombine",
    "--sroa",
    "--simplifycfg",
    "--flattencfg",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--flattencfg",
          "--loop-unroll-and-jam",
          "--loop-data-prefetch",
          "--coro-elide",
          "--sancov",
          "--float2int",
          "--globalopt",
          "--strip-nondebug",
          "--newgvn",
          "--load-store-vectorizer",
          "--cross-dso-cfi",
          "--functionattrs",
          "--libcalls-shrinkwrap",
          "--guard-widening",
          "--attributor",
          "--simplifycfg",
          "--ipsccp",
          "--loop-vectorize",
          "--lower-expect",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--flattencfg",
      "--loop-unroll-and-jam",
      "--loop-data-prefetch",
      "--coro-elide",
      "--sancov",
      "--float2int",
      "--globalopt",
      "--strip-nondebug",
      "--newgvn",
      "--load-store-vectorizer",
      "--cross-dso-cfi",
      "--functionattrs",
      "--libcalls-shrinkwrap",
      "--guard-widening",
      "--attributor",
      "--simplifycfg",
      "--ipsccp",
      "--loop-vectorize",
      "--lower-expect",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}