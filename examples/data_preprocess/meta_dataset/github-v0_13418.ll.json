{
  "program_id": "github-v0_13418.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 1,
    "oneSuccessor": 15,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 23,
    "CriticalCount": 2,
    "NumEdges": 31,
    "const32Bit": 59,
    "const64Bit": 0,
    "numConstZeroes": 25,
    "numConstOnes": 29,
    "UncondBranches": 15,
    "binaryConstArg": 8,
    "NumAShrInst": 2,
    "NumAddInst": 1,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 16,
    "NumBitCastInst": 2,
    "NumBrInst": 16,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 103,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 20,
    "TotalInsts": 229,
    "TotalMemInst": 183,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 132
  },
  "baseline_oz_instcount": 229,
  "knowledge_base_entry": [
    "--sroa",
    "--globalopt",
    "--aggressive-instcombine",
    "--gvn",
    "--dse",
    "--gvn",
    "--slp-vectorizer",
    "--die",
    "--ipsccp",
    "--dce",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--dse",
    "--mergefunc",
    "--correlated-propagation",
    "--instcombine",
    "--loop-simplifycfg",
    "--early-cse",
    "--lower-expect",
    "--newgvn",
    "--flattencfg",
    "--licm",
    "--mem2reg",
    "--nary-reassociate",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--scalarizer",
          "--ipconstprop",
          "--jump-threading",
          "--add-discriminators",
          "--ipsccp",
          "--separate-const-offset-from-gep",
          "--functionattrs",
          "--mergefunc",
          "--hotcoldsplit",
          "--redundant-dbg-inst-elim",
          "--elim-avail-extern",
          "--partial-inliner",
          "--forceattrs",
          "--aggressive-instcombine",
          "--loop-simplifycfg",
          "--mergeicmps"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--scalarizer",
      "--ipconstprop",
      "--jump-threading",
      "--add-discriminators",
      "--ipsccp",
      "--separate-const-offset-from-gep",
      "--functionattrs",
      "--mergefunc",
      "--hotcoldsplit",
      "--redundant-dbg-inst-elim",
      "--elim-avail-extern",
      "--partial-inliner",
      "--forceattrs",
      "--aggressive-instcombine",
      "--loop-simplifycfg",
      "--mergeicmps"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}