{
  "program_id": "github-v0_1053.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 10,
    "oneSuccessor": 25,
    "twoPred": 12,
    "twoPredOneSuc": 7,
    "twoEach": 4,
    "twoSuccessor": 16,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 43,
    "BeginPhi": 0,
    "BranchCount": 41,
    "returnInt": 1,
    "CriticalCount": 11,
    "NumEdges": 57,
    "const32Bit": 48,
    "const64Bit": 2,
    "numConstZeroes": 17,
    "numConstOnes": 9,
    "UncondBranches": 25,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 9,
    "NumAndInst": 4,
    "BlockMid": 0,
    "BlockLow": 43,
    "NumBitCastInst": 0,
    "NumBrInst": 41,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 45,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 43,
    "TotalInsts": 157,
    "TotalMemInst": 87,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 56
  },
  "baseline_oz_instcount": 158,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--mergefunc",
    "--early-cse",
    "--sroa",
    "--adce",
    "--dce",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--prune-eh",
          "--globalsplit",
          "--inject-tli-mappings",
          "--barrier",
          "--partially-inline-libcalls",
          "--coro-elide",
          "--lower-matrix-intrinsics",
          "--post-inline-ee-instrument",
          "--speculative-execution",
          "--ipsccp",
          "--called-value-propagation",
          "--mergeicmps",
          "--mergereturn",
          "--constprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--prune-eh",
      "--globalsplit",
      "--inject-tli-mappings",
      "--barrier",
      "--partially-inline-libcalls",
      "--coro-elide",
      "--lower-matrix-intrinsics",
      "--post-inline-ee-instrument",
      "--speculative-execution",
      "--ipsccp",
      "--called-value-propagation",
      "--mergeicmps",
      "--mergereturn",
      "--constprop"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}