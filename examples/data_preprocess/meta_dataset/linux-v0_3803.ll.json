{
  "program_id": "linux-v0_3803.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 46,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 15,
    "oneSuccessor": 42,
    "twoPred": 16,
    "twoPredOneSuc": 9,
    "twoEach": 6,
    "twoSuccessor": 23,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 88,
    "BeginPhi": 1,
    "BranchCount": 65,
    "returnInt": 33,
    "CriticalCount": 17,
    "NumEdges": 88,
    "const32Bit": 284,
    "const64Bit": 34,
    "numConstZeroes": 155,
    "numConstOnes": 107,
    "UncondBranches": 42,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 70,
    "NumAndInst": 5,
    "BlockMid": 12,
    "BlockLow": 77,
    "NumBitCastInst": 18,
    "NumBrInst": 65,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 103,
    "NumICmpInst": 26,
    "NumLShrInst": 3,
    "NumLoadInst": 170,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 24,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 108,
    "NumSubInst": 5,
    "NumTruncInst": 4,
    "NumXorInst": 8,
    "NumZExtInst": 14,
    "TotalBlocks": 89,
    "TotalInsts": 701,
    "TotalMemInst": 505,
    "TotalFuncs": 39,
    "ArgsPhi": 2,
    "testUnary": 288
  },
  "baseline_oz_instcount": 701,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--mergefunc",
    "--slp-vectorizer",
    "--die",
    "--mergefunc",
    "--slp-vectorizer",
    "--die",
    "--early-cse",
    "--elim-avail-extern",
    "--lower-expect",
    "--elim-avail-extern",
    "--sroa",
    "--dce",
    "--simplifycfg",
    "--loop-deletion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-predication",
          "--mergefunc",
          "--lower-matrix-intrinsics",
          "--slsr",
          "--canonicalize-aliases",
          "--deadargelim",
          "--inject-tli-mappings",
          "--globalopt",
          "--strip-debug-declare",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-predication",
      "--mergefunc",
      "--lower-matrix-intrinsics",
      "--slsr",
      "--canonicalize-aliases",
      "--deadargelim",
      "--inject-tli-mappings",
      "--globalopt",
      "--strip-debug-declare",
      "--reassociate"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}