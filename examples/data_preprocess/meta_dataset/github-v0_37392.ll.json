{
  "program_id": "github-v0_37392.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 0,
    "oneSuccessor": 7,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 7,
    "const32Bit": 71,
    "const64Bit": 0,
    "numConstZeroes": 9,
    "numConstOnes": 53,
    "UncondBranches": 7,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 33,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 30,
    "NumBitCastInst": 0,
    "NumBrInst": 7,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 47,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 30,
    "TotalInsts": 208,
    "TotalMemInst": 157,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 69
  },
  "baseline_oz_instcount": 208,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--elim-avail-extern",
    "--newgvn",
    "--reassociate",
    "--early-cse",
    "--die",
    "--reassociate",
    "--bdce",
    "--dse",
    "--sccp",
    "--licm",
    "--early-cse",
    "-loop-reduce",
    "--early-cse-memssa",
    "--dse",
    "--adce",
    "--ipsccp",
    "--loop-instsimplify",
    "--mergefunc",
    "--dce",
    "--aggressive-instcombine",
    "--flattencfg",
    "--mergefunc",
    "--sroa",
    "--loop-rotate",
    "--inline",
    "--adce",
    "--mergefunc",
    "--adce",
    "--correlated-propagation",
    "--gvn-hoist",
    "--prune-eh",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--lowerswitch",
          "--adce",
          "--loop-reroll",
          "--always-inline",
          "--partially-inline-libcalls",
          "--ee-instrument",
          "--loop-deletion",
          "--loop-simplify",
          "--partial-inliner",
          "--add-discriminators",
          "--loop-load-elim",
          "--rewrite-statepoints-for-gc",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+22.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--lowerswitch",
      "--adce",
      "--loop-reroll",
      "--always-inline",
      "--partially-inline-libcalls",
      "--ee-instrument",
      "--loop-deletion",
      "--loop-simplify",
      "--partial-inliner",
      "--add-discriminators",
      "--loop-load-elim",
      "--rewrite-statepoints-for-gc",
      "--sancov"
    ],
    "performance_vs_Oz": "+22.6%"
  }
}