{
  "program_id": "github-v0_31201.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 4,
    "oneSuccessor": 17,
    "twoPred": 9,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 32,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 4,
    "CriticalCount": 4,
    "NumEdges": 35,
    "const32Bit": 45,
    "const64Bit": 0,
    "numConstZeroes": 12,
    "numConstOnes": 25,
    "UncondBranches": 17,
    "binaryConstArg": 12,
    "NumAShrInst": 2,
    "NumAddInst": 5,
    "NumAllocaInst": 17,
    "NumAndInst": 7,
    "BlockMid": 3,
    "BlockLow": 29,
    "NumBitCastInst": 0,
    "NumBrInst": 26,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 50,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 31,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 32,
    "TotalInsts": 184,
    "TotalMemInst": 109,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 78
  },
  "baseline_oz_instcount": 185,
  "knowledge_base_entry": [
    "--functionattrs",
    "--gvn-hoist",
    "--instcombine",
    "--load-store-vectorizer",
    "--lower-expect",
    "--nary-reassociate",
    "--simplifycfg",
    "--globalopt",
    "--aggressive-instcombine",
    "--inline",
    "--sccp",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--alignment-from-assumptions",
          "--libcalls-shrinkwrap",
          "--infer-address-spaces",
          "--float2int",
          "--mergefunc",
          "--argpromotion",
          "--dce",
          "--callsite-splitting",
          "--aggressive-instcombine",
          "--mergereturn",
          "--consthoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--alignment-from-assumptions",
      "--libcalls-shrinkwrap",
      "--infer-address-spaces",
      "--float2int",
      "--mergefunc",
      "--argpromotion",
      "--dce",
      "--callsite-splitting",
      "--aggressive-instcombine",
      "--mergereturn",
      "--consthoist"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}