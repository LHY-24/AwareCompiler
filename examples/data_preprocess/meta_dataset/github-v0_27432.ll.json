{
  "program_id": "github-v0_27432.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 0,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 16,
    "const32Bit": 49,
    "const64Bit": 27,
    "numConstZeroes": 14,
    "numConstOnes": 22,
    "UncondBranches": 8,
    "binaryConstArg": 27,
    "NumAShrInst": 5,
    "NumAddInst": 8,
    "NumAllocaInst": 14,
    "NumAndInst": 3,
    "BlockMid": 2,
    "BlockLow": 14,
    "NumBitCastInst": 0,
    "NumBrInst": 12,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 69,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 34,
    "NumSubInst": 4,
    "NumTruncInst": 15,
    "NumXorInst": 0,
    "NumZExtInst": 20,
    "TotalBlocks": 16,
    "TotalInsts": 245,
    "TotalMemInst": 153,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 123
  },
  "baseline_oz_instcount": 245,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--early-cse",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--early-cse",
    "--slp-vectorizer",
    "--instsimplify",
    "--instcombine",
    "--dse",
    "--lower-expect",
    "--prune-eh",
    "--licm",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--inline",
    "--mldst-motion",
    "--licm",
    "--mem2reg",
    "--gvn",
    "--dse",
    "--jump-threading",
    "--loop-deletion",
    "--newgvn",
    "--simplifycfg",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--early-cse",
    "--slp-vectorizer",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--loop-data-prefetch",
          "--speculative-execution",
          "--lowerswitch",
          "--cross-dso-cfi",
          "--licm",
          "--scalarizer",
          "--mldst-motion",
          "--instcombine",
          "--aggressive-instcombine",
          "--loop-idiom",
          "--coro-split",
          "--deadargelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--loop-data-prefetch",
      "--speculative-execution",
      "--lowerswitch",
      "--cross-dso-cfi",
      "--licm",
      "--scalarizer",
      "--mldst-motion",
      "--instcombine",
      "--aggressive-instcombine",
      "--loop-idiom",
      "--coro-split",
      "--deadargelim"
    ],
    "performance_vs_Oz": "+7.3%"
  }
}