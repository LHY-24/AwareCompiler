{
  "program_id": "linux-v0_4020.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 68,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 21,
    "oneSuccessor": 65,
    "twoPred": 21,
    "twoPredOneSuc": 14,
    "twoEach": 3,
    "twoSuccessor": 27,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 118,
    "BeginPhi": 1,
    "BranchCount": 92,
    "returnInt": 10,
    "CriticalCount": 20,
    "NumEdges": 124,
    "const32Bit": 339,
    "const64Bit": 22,
    "numConstZeroes": 160,
    "numConstOnes": 127,
    "UncondBranches": 65,
    "binaryConstArg": 46,
    "NumAShrInst": 2,
    "NumAddInst": 4,
    "NumAllocaInst": 87,
    "NumAndInst": 20,
    "BlockMid": 14,
    "BlockLow": 105,
    "NumBitCastInst": 24,
    "NumBrInst": 92,
    "NumCallInst": 61,
    "NumGetElementPtrInst": 91,
    "NumICmpInst": 31,
    "NumLShrInst": 7,
    "NumLoadInst": 209,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 26,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 110,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 14,
    "NumZExtInst": 23,
    "TotalBlocks": 119,
    "TotalInsts": 825,
    "TotalMemInst": 558,
    "TotalFuncs": 38,
    "ArgsPhi": 2,
    "testUnary": 361
  },
  "baseline_oz_instcount": 803,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--jump-threading",
    "--globalopt",
    "--globaldce",
    "--aggressive-instcombine",
    "--prune-eh",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--loop-reroll",
          "--inline",
          "--gvn-hoist",
          "--barrier",
          "--pgo-memop-opt",
          "--ipsccp",
          "--strip-debug-declare",
          "--lower-constant-intrinsics",
          "--loop-rotate",
          "--sroa",
          "--coro-cleanup",
          "--called-value-propagation",
          "--loop-distribute",
          "--globaldce",
          "--ipconstprop",
          "--dce",
          "--mergereturn",
          "--coro-split",
          "--instsimplify",
          "--gvn",
          "--infer-address-spaces",
          "--hotcoldsplit",
          "--correlated-propagation",
          "--globalopt",
          "--sccp",
          "--aggressive-instcombine",
          "--lower-guard-intrinsic",
          "--loop-interchange"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--loop-reroll",
      "--inline",
      "--gvn-hoist",
      "--barrier",
      "--pgo-memop-opt",
      "--ipsccp",
      "--strip-debug-declare",
      "--lower-constant-intrinsics",
      "--loop-rotate",
      "--sroa",
      "--coro-cleanup",
      "--called-value-propagation",
      "--loop-distribute",
      "--globaldce",
      "--ipconstprop",
      "--dce",
      "--mergereturn",
      "--coro-split",
      "--instsimplify",
      "--gvn",
      "--infer-address-spaces",
      "--hotcoldsplit",
      "--correlated-propagation",
      "--globalopt",
      "--sccp",
      "--aggressive-instcombine",
      "--lower-guard-intrinsic",
      "--loop-interchange"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}