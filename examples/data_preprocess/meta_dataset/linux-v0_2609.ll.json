{
  "program_id": "linux-v0_2609.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 6,
    "oneSuccessor": 15,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 13,
    "CriticalCount": 7,
    "NumEdges": 41,
    "const32Bit": 102,
    "const64Bit": 22,
    "numConstZeroes": 44,
    "numConstOnes": 36,
    "UncondBranches": 15,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 26,
    "NumAndInst": 8,
    "BlockMid": 5,
    "BlockLow": 34,
    "NumBitCastInst": 9,
    "NumBrInst": 26,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 60,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 41,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 2,
    "NumZExtInst": 13,
    "TotalBlocks": 39,
    "TotalInsts": 282,
    "TotalMemInst": 181,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 120
  },
  "baseline_oz_instcount": 282,
  "knowledge_base_entry": [
    "--jump-threading",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--memcpyopt",
    "--elim-avail-extern",
    "--globalopt",
    "--flattencfg",
    "--sroa",
    "--inline",
    "--sccp",
    "--simplifycfg",
    "--dse",
    "--ipsccp",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--memcpyopt",
    "--instsimplify",
    "--bdce",
    "--mergefunc",
    "--instcombine",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--redundant-dbg-inst-elim",
          "--memcpyopt",
          "--coro-early",
          "--loop-versioning-licm",
          "--guard-widening",
          "--instsimplify",
          "--loweratomic",
          "--partial-inliner",
          "--attributor",
          "--aggressive-instcombine",
          "--loop-unroll",
          "--pgo-memop-opt",
          "--loop-sink",
          "--newgvn",
          "--slp-vectorizer",
          "--consthoist",
          "--mldst-motion",
          "--loop-unroll-and-jam",
          "--lower-guard-intrinsic",
          "--instcombine",
          "--canonicalize-aliases",
          "--globaldce",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--redundant-dbg-inst-elim",
      "--memcpyopt",
      "--coro-early",
      "--loop-versioning-licm",
      "--guard-widening",
      "--instsimplify",
      "--loweratomic",
      "--partial-inliner",
      "--attributor",
      "--aggressive-instcombine",
      "--loop-unroll",
      "--pgo-memop-opt",
      "--loop-sink",
      "--newgvn",
      "--slp-vectorizer",
      "--consthoist",
      "--mldst-motion",
      "--loop-unroll-and-jam",
      "--lower-guard-intrinsic",
      "--instcombine",
      "--canonicalize-aliases",
      "--globaldce",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+4.3%"
  }
}