{
  "program_id": "linux-v0_5655.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 39,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 13,
    "oneSuccessor": 32,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 17,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 63,
    "BeginPhi": 0,
    "BranchCount": 49,
    "returnInt": 8,
    "CriticalCount": 6,
    "NumEdges": 66,
    "const32Bit": 157,
    "const64Bit": 14,
    "numConstZeroes": 56,
    "numConstOnes": 71,
    "UncondBranches": 32,
    "binaryConstArg": 23,
    "NumAShrInst": 2,
    "NumAddInst": 5,
    "NumAllocaInst": 53,
    "NumAndInst": 8,
    "BlockMid": 10,
    "BlockLow": 53,
    "NumBitCastInst": 11,
    "NumBrInst": 49,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 22,
    "NumLShrInst": 2,
    "NumLoadInst": 113,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 62,
    "NumSubInst": 2,
    "NumTruncInst": 6,
    "NumXorInst": 3,
    "NumZExtInst": 6,
    "TotalBlocks": 63,
    "TotalInsts": 442,
    "TotalMemInst": 299,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 195
  },
  "baseline_oz_instcount": 442,
  "knowledge_base_entry": [
    "--jump-threading",
    "--reassociate",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--inline",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--loop-instsimplify",
          "--strip-dead-prototypes",
          "--sancov",
          "--mem2reg",
          "--load-store-vectorizer",
          "--argpromotion",
          "--adce",
          "--ipconstprop",
          "--mergereturn",
          "--functionattrs",
          "--consthoist",
          "--coro-elide",
          "--flattencfg",
          "--jump-threading",
          "--tailcallelim",
          "--speculative-execution",
          "--loop-predication",
          "--loop-simplifycfg",
          "--mergefunc",
          "--die",
          "--loop-reroll",
          "--loop-versioning-licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--loop-instsimplify",
      "--strip-dead-prototypes",
      "--sancov",
      "--mem2reg",
      "--load-store-vectorizer",
      "--argpromotion",
      "--adce",
      "--ipconstprop",
      "--mergereturn",
      "--functionattrs",
      "--consthoist",
      "--coro-elide",
      "--flattencfg",
      "--jump-threading",
      "--tailcallelim",
      "--speculative-execution",
      "--loop-predication",
      "--loop-simplifycfg",
      "--mergefunc",
      "--die",
      "--loop-reroll",
      "--loop-versioning-licm"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}