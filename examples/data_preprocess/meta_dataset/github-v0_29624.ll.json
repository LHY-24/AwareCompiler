{
  "program_id": "github-v0_29624.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 32,
    "const64Bit": 31,
    "numConstZeroes": 34,
    "numConstOnes": 22,
    "UncondBranches": 11,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 4,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 37,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 21,
    "TotalInsts": 155,
    "TotalMemInst": 102,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 68
  },
  "baseline_oz_instcount": 155,
  "knowledge_base_entry": [
    "--instcombine",
    "--flattencfg",
    "--globalopt",
    "--loop-instsimplify",
    "--dce",
    "--jump-threading",
    "--aggressive-instcombine",
    "--mergefunc",
    "--die",
    "--loop-simplifycfg",
    "--slsr",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--libcalls-shrinkwrap",
          "--gvn",
          "--name-anon-globals",
          "--insert-gcov-profiling",
          "--pgo-memop-opt",
          "--loop-guard-widening",
          "--dce",
          "--loop-versioning-licm",
          "--reg2mem",
          "--adce",
          "--float2int",
          "--aggressive-instcombine",
          "--lowerinvoke",
          "--instsimplify",
          "--lowerswitch",
          "--memcpyopt",
          "--ipconstprop",
          "--slsr",
          "--loop-idiom"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--libcalls-shrinkwrap",
      "--gvn",
      "--name-anon-globals",
      "--insert-gcov-profiling",
      "--pgo-memop-opt",
      "--loop-guard-widening",
      "--dce",
      "--loop-versioning-licm",
      "--reg2mem",
      "--adce",
      "--float2int",
      "--aggressive-instcombine",
      "--lowerinvoke",
      "--instsimplify",
      "--lowerswitch",
      "--memcpyopt",
      "--ipconstprop",
      "--slsr",
      "--loop-idiom"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}