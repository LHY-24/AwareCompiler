{
  "program_id": "github-v0_34815.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 2,
    "oneSuccessor": 19,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 1,
    "CriticalCount": 3,
    "NumEdges": 37,
    "const32Bit": 65,
    "const64Bit": 9,
    "numConstZeroes": 36,
    "numConstOnes": 32,
    "UncondBranches": 19,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 17,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 26,
    "NumBitCastInst": 2,
    "NumBrInst": 28,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 62,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 40,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 31,
    "TotalInsts": 211,
    "TotalMemInst": 149,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 91
  },
  "baseline_oz_instcount": 212,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--gvn",
    "--instsimplify",
    "--early-cse",
    "--mem2reg",
    "--early-cse-memssa",
    "--sroa",
    "--instcombine",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--slp-vectorizer",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse-memssa",
          "--tailcallelim",
          "--instnamer",
          "--strip-nondebug",
          "--lower-expect",
          "--called-value-propagation",
          "--lcssa",
          "--barrier",
          "--pgo-memop-opt",
          "--post-inline-ee-instrument",
          "--canonicalize-aliases",
          "--flattencfg",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse-memssa",
      "--tailcallelim",
      "--instnamer",
      "--strip-nondebug",
      "--lower-expect",
      "--called-value-propagation",
      "--lcssa",
      "--barrier",
      "--pgo-memop-opt",
      "--post-inline-ee-instrument",
      "--canonicalize-aliases",
      "--flattencfg",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}