{
  "program_id": "linux-v0_892.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 35,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 6,
    "oneSuccessor": 32,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 12,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 68,
    "BeginPhi": 1,
    "BranchCount": 44,
    "returnInt": 14,
    "CriticalCount": 2,
    "NumEdges": 56,
    "const32Bit": 168,
    "const64Bit": 34,
    "numConstZeroes": 67,
    "numConstOnes": 99,
    "UncondBranches": 32,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 87,
    "NumAndInst": 6,
    "BlockMid": 9,
    "BlockLow": 60,
    "NumBitCastInst": 13,
    "NumBrInst": 44,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 42,
    "NumICmpInst": 14,
    "NumLShrInst": 1,
    "NumLoadInst": 152,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 25,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 104,
    "NumSubInst": 2,
    "NumTruncInst": 13,
    "NumXorInst": 4,
    "NumZExtInst": 6,
    "TotalBlocks": 69,
    "TotalInsts": 595,
    "TotalMemInst": 441,
    "TotalFuncs": 34,
    "ArgsPhi": 2,
    "testUnary": 288
  },
  "baseline_oz_instcount": 592,
  "knowledge_base_entry": [
    "--inline",
    "--flattencfg",
    "--early-cse",
    "--ipsccp",
    "--loop-deletion",
    "--sroa",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--globalopt",
    "--mergefunc",
    "--jump-threading",
    "--nary-reassociate",
    "--mem2reg",
    "--mergefunc",
    "--elim-avail-extern",
    "--memcpyopt",
    "--early-cse",
    "--ipsccp",
    "--loop-deletion",
    "--sccp",
    "--simplifycfg",
    "--slsr",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--dse",
          "--post-inline-ee-instrument",
          "--mergefunc",
          "--simple-loop-unswitch",
          "--ipsccp",
          "--coro-cleanup",
          "--mem2reg",
          "--loop-simplify",
          "--deadargelim",
          "--insert-gcov-profiling",
          "--strip",
          "--die",
          "--instnamer",
          "--instsimplify",
          "--irce",
          "--cross-dso-cfi",
          "--always-inline",
          "--inject-tli-mappings",
          "--prune-eh",
          "--early-cse",
          "--consthoist",
          "--loop-unroll-and-jam",
          "--lower-matrix-intrinsics",
          "--jump-threading",
          "--loop-vectorize",
          "--loop-rotate",
          "--loop-unswitch",
          "--loop-load-elim",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--dse",
      "--post-inline-ee-instrument",
      "--mergefunc",
      "--simple-loop-unswitch",
      "--ipsccp",
      "--coro-cleanup",
      "--mem2reg",
      "--loop-simplify",
      "--deadargelim",
      "--insert-gcov-profiling",
      "--strip",
      "--die",
      "--instnamer",
      "--instsimplify",
      "--irce",
      "--cross-dso-cfi",
      "--always-inline",
      "--inject-tli-mappings",
      "--prune-eh",
      "--early-cse",
      "--consthoist",
      "--loop-unroll-and-jam",
      "--lower-matrix-intrinsics",
      "--jump-threading",
      "--loop-vectorize",
      "--loop-rotate",
      "--loop-unswitch",
      "--loop-load-elim",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}