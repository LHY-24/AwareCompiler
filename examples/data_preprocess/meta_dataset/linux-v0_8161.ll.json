{
  "program_id": "linux-v0_8161.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 9,
    "oneSuccessor": 43,
    "twoPred": 15,
    "twoPredOneSuc": 6,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 90,
    "BeginPhi": 0,
    "BranchCount": 61,
    "returnInt": 19,
    "CriticalCount": 8,
    "NumEdges": 84,
    "const32Bit": 253,
    "const64Bit": 21,
    "numConstZeroes": 97,
    "numConstOnes": 128,
    "UncondBranches": 43,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 114,
    "NumAndInst": 5,
    "BlockMid": 13,
    "BlockLow": 77,
    "NumBitCastInst": 28,
    "NumBrInst": 61,
    "NumCallInst": 64,
    "NumGetElementPtrInst": 64,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 201,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 28,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 141,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 2,
    "TotalBlocks": 90,
    "TotalInsts": 742,
    "TotalMemInst": 584,
    "TotalFuncs": 58,
    "ArgsPhi": 0,
    "testUnary": 352
  },
  "baseline_oz_instcount": 744,
  "knowledge_base_entry": [
    "--instsimplify",
    "--mem2reg",
    "--dse",
    "--mergefunc",
    "--memcpyopt",
    "--simplifycfg",
    "--instsimplify",
    "--globalopt",
    "--aggressive-instcombine",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--float2int",
          "--dse",
          "--tailcallelim",
          "--post-inline-ee-instrument",
          "--div-rem-pairs",
          "--lowerinvoke",
          "--loop-instsimplify",
          "--nary-reassociate",
          "--argpromotion",
          "--instcombine",
          "--adce",
          "--loop-vectorize",
          "--sink",
          "--loop-load-elim",
          "--loop-distribute",
          "--mergefunc",
          "--inline",
          "--loop-versioning",
          "--early-cse",
          "--deadargelim",
          "--insert-gcov-profiling",
          "--indvars",
          "--alignment-from-assumptions",
          "--loop-unroll-and-jam",
          "--mergeicmps"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--float2int",
      "--dse",
      "--tailcallelim",
      "--post-inline-ee-instrument",
      "--div-rem-pairs",
      "--lowerinvoke",
      "--loop-instsimplify",
      "--nary-reassociate",
      "--argpromotion",
      "--instcombine",
      "--adce",
      "--loop-vectorize",
      "--sink",
      "--loop-load-elim",
      "--loop-distribute",
      "--mergefunc",
      "--inline",
      "--loop-versioning",
      "--early-cse",
      "--deadargelim",
      "--insert-gcov-profiling",
      "--indvars",
      "--alignment-from-assumptions",
      "--loop-unroll-and-jam",
      "--mergeicmps"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}