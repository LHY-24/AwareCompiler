{
  "program_id": "github-v0_572.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 2,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 72,
    "const64Bit": 0,
    "numConstZeroes": 48,
    "numConstOnes": 24,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 0,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 50,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 2,
    "TotalInsts": 164,
    "TotalMemInst": 138,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 82
  },
  "baseline_oz_instcount": 164,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--slp-vectorizer",
    "--early-cse",
    "--instcombine",
    "--loop-reroll",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--bdce",
    "--reassociate",
    "--ipsccp",
    "--dse",
    "--jump-threading",
    "--globalopt",
    "--loop-deletion",
    "--gvn",
    "--licm",
    "--sccp",
    "--early-cse-memssa",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--deadargelim",
          "--loop-deletion",
          "--always-inline",
          "--simplifycfg",
          "--break-crit-edges",
          "--newgvn",
          "--inferattrs",
          "--float2int",
          "--slp-vectorizer",
          "--alignment-from-assumptions",
          "--mergefunc",
          "--gvn-hoist",
          "--irce",
          "--barrier",
          "--lowerswitch",
          "--ipconstprop",
          "--load-store-vectorizer",
          "--gvn",
          "--separate-const-offset-from-gep",
          "--pgo-memop-opt",
          "--slsr",
          "--constprop",
          "--early-cse",
          "--instcombine",
          "--inject-tli-mappings",
          "--scalarizer",
          "--coro-cleanup",
          "--sancov",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+48.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--deadargelim",
      "--loop-deletion",
      "--always-inline",
      "--simplifycfg",
      "--break-crit-edges",
      "--newgvn",
      "--inferattrs",
      "--float2int",
      "--slp-vectorizer",
      "--alignment-from-assumptions",
      "--mergefunc",
      "--gvn-hoist",
      "--irce",
      "--barrier",
      "--lowerswitch",
      "--ipconstprop",
      "--load-store-vectorizer",
      "--gvn",
      "--separate-const-offset-from-gep",
      "--pgo-memop-opt",
      "--slsr",
      "--constprop",
      "--early-cse",
      "--instcombine",
      "--inject-tli-mappings",
      "--scalarizer",
      "--coro-cleanup",
      "--sancov",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+48.8%"
  }
}