{
  "program_id": "linux-v0_1561.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 10,
    "oneSuccessor": 42,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 11,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 69,
    "BeginPhi": 0,
    "BranchCount": 53,
    "returnInt": 25,
    "CriticalCount": 1,
    "NumEdges": 64,
    "const32Bit": 229,
    "const64Bit": 31,
    "numConstZeroes": 61,
    "numConstOnes": 135,
    "UncondBranches": 42,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 120,
    "NumAndInst": 8,
    "BlockMid": 21,
    "BlockLow": 48,
    "NumBitCastInst": 29,
    "NumBrInst": 53,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 158,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 140,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 3,
    "NumZExtInst": 10,
    "TotalBlocks": 69,
    "TotalInsts": 681,
    "TotalMemInst": 504,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 352
  },
  "baseline_oz_instcount": 683,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--jump-threading",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--dse",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--bdce",
    "--mergefunc",
    "--aggressive-instcombine",
    "--licm",
    "--slp-vectorizer",
    "--dce",
    "--ipsccp",
    "--correlated-propagation",
    "--reassociate",
    "-loop-reduce",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--lcssa",
          "--licm",
          "--lower-constant-intrinsics",
          "--separate-const-offset-from-gep",
          "--indvars",
          "--canonicalize-aliases",
          "--coro-elide",
          "--globalopt",
          "--partially-inline-libcalls",
          "--rewrite-statepoints-for-gc",
          "--early-cse-memssa",
          "--div-rem-pairs",
          "--instnamer",
          "--always-inline",
          "--loop-versioning",
          "--aggressive-instcombine",
          "--ee-instrument",
          "--coro-split",
          "--ipsccp",
          "--lower-expect",
          "--elim-avail-extern",
          "-loop-reduce",
          "--loop-distribute",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--lcssa",
      "--licm",
      "--lower-constant-intrinsics",
      "--separate-const-offset-from-gep",
      "--indvars",
      "--canonicalize-aliases",
      "--coro-elide",
      "--globalopt",
      "--partially-inline-libcalls",
      "--rewrite-statepoints-for-gc",
      "--early-cse-memssa",
      "--div-rem-pairs",
      "--instnamer",
      "--always-inline",
      "--loop-versioning",
      "--aggressive-instcombine",
      "--ee-instrument",
      "--coro-split",
      "--ipsccp",
      "--lower-expect",
      "--elim-avail-extern",
      "-loop-reduce",
      "--loop-distribute",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}