{
  "program_id": "linux-v0_7632.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 28,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 10,
    "oneSuccessor": 23,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 17,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 65,
    "BeginPhi": 3,
    "BranchCount": 40,
    "returnInt": 16,
    "CriticalCount": 11,
    "NumEdges": 57,
    "const32Bit": 240,
    "const64Bit": 21,
    "numConstZeroes": 109,
    "numConstOnes": 96,
    "UncondBranches": 23,
    "binaryConstArg": 20,
    "NumAShrInst": 3,
    "NumAddInst": 1,
    "NumAllocaInst": 70,
    "NumAndInst": 7,
    "BlockMid": 8,
    "BlockLow": 60,
    "NumBitCastInst": 17,
    "NumBrInst": 40,
    "NumCallInst": 61,
    "NumGetElementPtrInst": 67,
    "NumICmpInst": 17,
    "NumLShrInst": 1,
    "NumLoadInst": 169,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 3,
    "NumRetInst": 28,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 87,
    "NumSubInst": 2,
    "NumTruncInst": 7,
    "NumXorInst": 6,
    "NumZExtInst": 15,
    "TotalBlocks": 68,
    "TotalInsts": 611,
    "TotalMemInst": 454,
    "TotalFuncs": 48,
    "ArgsPhi": 7,
    "testUnary": 285
  },
  "baseline_oz_instcount": 612,
  "knowledge_base_entry": [
    "--instcombine",
    "--inline",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--die",
    "--mergefunc",
    "--dce",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--loop-deletion",
          "--rpo-functionattrs",
          "--slsr",
          "--reassociate",
          "--instsimplify",
          "--globaldce",
          "--correlated-propagation",
          "--lower-expect",
          "--loop-distribute",
          "--inline",
          "--libcalls-shrinkwrap",
          "--loop-unswitch",
          "--consthoist",
          "--instnamer",
          "--redundant-dbg-inst-elim",
          "--coro-early",
          "--infer-address-spaces",
          "--prune-eh",
          "--simplifycfg",
          "--aggressive-instcombine",
          "--sink",
          "--mergereturn",
          "--argpromotion",
          "--coro-cleanup",
          "--lower-constant-intrinsics",
          "--mergefunc",
          "--loop-interchange"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--loop-deletion",
      "--rpo-functionattrs",
      "--slsr",
      "--reassociate",
      "--instsimplify",
      "--globaldce",
      "--correlated-propagation",
      "--lower-expect",
      "--loop-distribute",
      "--inline",
      "--libcalls-shrinkwrap",
      "--loop-unswitch",
      "--consthoist",
      "--instnamer",
      "--redundant-dbg-inst-elim",
      "--coro-early",
      "--infer-address-spaces",
      "--prune-eh",
      "--simplifycfg",
      "--aggressive-instcombine",
      "--sink",
      "--mergereturn",
      "--argpromotion",
      "--coro-cleanup",
      "--lower-constant-intrinsics",
      "--mergefunc",
      "--loop-interchange"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}