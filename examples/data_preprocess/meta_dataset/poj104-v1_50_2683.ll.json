{
  "program_id": "poj104-v1_50_2683.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 25,
    "oneSuccessor": 24,
    "twoPred": 13,
    "twoPredOneSuc": 3,
    "twoEach": 9,
    "twoSuccessor": 35,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 63,
    "BeginPhi": 0,
    "BranchCount": 59,
    "returnInt": 8,
    "CriticalCount": 35,
    "NumEdges": 94,
    "const32Bit": 61,
    "const64Bit": 26,
    "numConstZeroes": 16,
    "numConstOnes": 26,
    "UncondBranches": 24,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 61,
    "NumBitCastInst": 10,
    "NumBrInst": 59,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 35,
    "NumLShrInst": 0,
    "NumLoadInst": 63,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 63,
    "TotalInsts": 257,
    "TotalMemInst": 126,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 93
  },
  "baseline_oz_instcount": 160,
  "knowledge_base_entry": [
    "--break-crit-edges",
    "--jump-threading",
    "--loop-deletion",
    "--newgvn",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--memcpyopt",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--simplifycfg",
    "--loop-rotate",
    "--dse",
    "--globalopt",
    "--jump-threading",
    "--globalopt",
    "--loop-simplifycfg",
    "--mem2reg",
    "--dce",
    "--simplifycfg",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--sroa",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--gvn-hoist",
    "--slsr",
    "--newgvn",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--mldst-motion",
    "--mem2reg",
    "--memcpyopt",
    "--newgvn",
    "--loop-deletion",
    "--instcombine",
    "--simplifycfg",
    "--bdce",
    "--early-cse",
    "--indvars",
    "--load-store-vectorizer",
    "--bdce",
    "--reassociate",
    "--gvn-hoist",
    "--mldst-motion",
    "--early-cse",
    "--loop-reroll",
    "--early-cse-memssa",
    "--memcpyopt",
    "--sroa",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--elim-avail-extern",
    "--adce",
    "--sccp",
    "--early-cse-memssa",
    "--loop-deletion",
    "--gvn-hoist",
    "--loop-reroll",
    "--indvars",
    "--gvn",
    "--mldst-motion",
    "--jump-threading",
    "--sccp",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--early-cse",
    "--reassociate",
    "--jump-threading",
    "--sccp",
    "--lower-constant-intrinsics",
    "--sroa",
    "--instcombine",
    "--gvn",
    "--gvn",
    "--lower-constant-intrinsics",
    "--adce",
    "--inline",
    "--reassociate",
    "--licm",
    "--die",
    "--gvn",
    "--jump-threading",
    "--loop-deletion",
    "--early-cse-memssa",
    "--early-cse",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--simplifycfg",
    "--bdce",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--lower-matrix-intrinsics",
          "--redundant-dbg-inst-elim",
          "--mem2reg",
          "--lowerinvoke",
          "--loop-reroll",
          "--loop-unroll-and-jam",
          "--instsimplify",
          "--memcpyopt",
          "--mergefunc",
          "--ee-instrument",
          "--simplifycfg",
          "--loop-data-prefetch",
          "--argpromotion",
          "--globalsplit",
          "--reassociate",
          "--consthoist",
          "--lower-expect",
          "--slsr",
          "--instnamer",
          "--gvn-hoist",
          "--add-discriminators",
          "--coro-early",
          "--constmerge",
          "--inject-tli-mappings",
          "--libcalls-shrinkwrap"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+25.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--lower-matrix-intrinsics",
      "--redundant-dbg-inst-elim",
      "--mem2reg",
      "--lowerinvoke",
      "--loop-reroll",
      "--loop-unroll-and-jam",
      "--instsimplify",
      "--memcpyopt",
      "--mergefunc",
      "--ee-instrument",
      "--simplifycfg",
      "--loop-data-prefetch",
      "--argpromotion",
      "--globalsplit",
      "--reassociate",
      "--consthoist",
      "--lower-expect",
      "--slsr",
      "--instnamer",
      "--gvn-hoist",
      "--add-discriminators",
      "--coro-early",
      "--constmerge",
      "--inject-tli-mappings",
      "--libcalls-shrinkwrap"
    ],
    "performance_vs_Oz": "+25.0%"
  }
}