{
  "program_id": "linux-v0_10618.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 47,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 16,
    "oneSuccessor": 35,
    "twoPred": 5,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 19,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 0,
    "BranchCount": 54,
    "returnInt": 16,
    "CriticalCount": 2,
    "NumEdges": 78,
    "const32Bit": 246,
    "const64Bit": 6,
    "numConstZeroes": 128,
    "numConstOnes": 71,
    "UncondBranches": 35,
    "binaryConstArg": 4,
    "NumAShrInst": 2,
    "NumAddInst": 1,
    "NumAllocaInst": 47,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 62,
    "NumBitCastInst": 24,
    "NumBrInst": 54,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 82,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 179,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 76,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 71,
    "TotalInsts": 559,
    "TotalMemInst": 432,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 259
  },
  "baseline_oz_instcount": 559,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--ipsccp",
    "--gvn-hoist",
    "--loop-rotate",
    "--inline",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--licm",
    "--sroa",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--prune-eh",
          "--partial-inliner",
          "--nary-reassociate",
          "-loop-reduce",
          "--coro-split",
          "--slp-vectorizer",
          "--reassociate",
          "--coro-cleanup",
          "--loop-fusion",
          "--sink",
          "--strip-dead-prototypes",
          "--loop-vectorize",
          "--bdce",
          "--loop-rotate",
          "--rewrite-statepoints-for-gc",
          "--loop-versioning",
          "--loweratomic",
          "--tailcallelim",
          "--speculative-execution",
          "--jump-threading",
          "--lower-widenable-condition",
          "--flattencfg",
          "--loop-interchange",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--prune-eh",
      "--partial-inliner",
      "--nary-reassociate",
      "-loop-reduce",
      "--coro-split",
      "--slp-vectorizer",
      "--reassociate",
      "--coro-cleanup",
      "--loop-fusion",
      "--sink",
      "--strip-dead-prototypes",
      "--loop-vectorize",
      "--bdce",
      "--loop-rotate",
      "--rewrite-statepoints-for-gc",
      "--loop-versioning",
      "--loweratomic",
      "--tailcallelim",
      "--speculative-execution",
      "--jump-threading",
      "--lower-widenable-condition",
      "--flattencfg",
      "--loop-interchange",
      "--constmerge"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}