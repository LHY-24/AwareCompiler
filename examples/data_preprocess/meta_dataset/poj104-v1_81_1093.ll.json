{
  "program_id": "poj104-v1_81_1093.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 5,
    "oneSuccessor": 21,
    "twoPred": 8,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 0,
    "BranchCount": 32,
    "returnInt": 8,
    "CriticalCount": 4,
    "NumEdges": 43,
    "const32Bit": 39,
    "const64Bit": 28,
    "numConstZeroes": 25,
    "numConstOnes": 20,
    "UncondBranches": 21,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 34,
    "NumBitCastInst": 14,
    "NumBrInst": 32,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 37,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 36,
    "TotalInsts": 188,
    "TotalMemInst": 108,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 77
  },
  "baseline_oz_instcount": 101,
  "knowledge_base_entry": [
    "--early-cse",
    "--newgvn",
    "--instcombine",
    "--reassociate",
    "--dce",
    "--newgvn",
    "--indvars",
    "--early-cse-memssa",
    "--flattencfg",
    "--early-cse-memssa",
    "--gvn",
    "--loop-rotate",
    "--instcombine",
    "--elim-avail-extern",
    "--ipsccp",
    "--mem2reg",
    "--dce",
    "--early-cse-memssa",
    "--mem2reg",
    "--instsimplify",
    "--load-store-vectorizer",
    "--instsimplify",
    "--jump-threading",
    "--simplifycfg",
    "--globalopt",
    "--instcombine",
    "--bdce",
    "--ipsccp",
    "--sccp",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inject-tli-mappings",
          "--tailcallelim",
          "--elim-avail-extern",
          "--sccp",
          "--loop-instsimplify",
          "--lcssa",
          "--dce",
          "--lower-constant-intrinsics",
          "--gvn",
          "--newgvn",
          "--coro-cleanup",
          "--lower-guard-intrinsic",
          "--loop-load-elim",
          "--loop-rotate",
          "--partially-inline-libcalls",
          "--instcombine",
          "--instnamer",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+24.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inject-tli-mappings",
      "--tailcallelim",
      "--elim-avail-extern",
      "--sccp",
      "--loop-instsimplify",
      "--lcssa",
      "--dce",
      "--lower-constant-intrinsics",
      "--gvn",
      "--newgvn",
      "--coro-cleanup",
      "--lower-guard-intrinsic",
      "--loop-load-elim",
      "--loop-rotate",
      "--partially-inline-libcalls",
      "--instcombine",
      "--instnamer",
      "--float2int"
    ],
    "performance_vs_Oz": "+24.8%"
  }
}