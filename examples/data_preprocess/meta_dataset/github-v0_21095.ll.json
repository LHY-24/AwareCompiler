{
  "program_id": "github-v0_21095.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 7,
    "BeginPhi": 2,
    "BranchCount": 8,
    "returnInt": 2,
    "CriticalCount": 6,
    "NumEdges": 13,
    "const32Bit": 6,
    "const64Bit": 0,
    "numConstZeroes": 3,
    "numConstOnes": 1,
    "UncondBranches": 3,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 0,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 8,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 6,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 1,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 1,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 44,
    "TotalMemInst": 15,
    "TotalFuncs": 3,
    "ArgsPhi": 4,
    "testUnary": 12
  },
  "baseline_oz_instcount": 48,
  "knowledge_base_entry": [
    "--adce",
    "--simplifycfg",
    "--inline",
    "--slp-vectorizer",
    "--early-cse",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instcombine",
          "--globaldce",
          "--post-inline-ee-instrument",
          "--mergeicmps",
          "--add-discriminators",
          "--loop-versioning",
          "--early-cse",
          "--mldst-motion",
          "--memcpyopt",
          "--consthoist",
          "--elim-avail-extern",
          "--attributor",
          "--sancov",
          "--lcssa",
          "--simplifycfg",
          "--flattencfg",
          "--coro-cleanup",
          "--inject-tli-mappings",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+10.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instcombine",
      "--globaldce",
      "--post-inline-ee-instrument",
      "--mergeicmps",
      "--add-discriminators",
      "--loop-versioning",
      "--early-cse",
      "--mldst-motion",
      "--memcpyopt",
      "--consthoist",
      "--elim-avail-extern",
      "--attributor",
      "--sancov",
      "--lcssa",
      "--simplifycfg",
      "--flattencfg",
      "--coro-cleanup",
      "--inject-tli-mappings",
      "--strip"
    ],
    "performance_vs_Oz": "+10.4%"
  }
}