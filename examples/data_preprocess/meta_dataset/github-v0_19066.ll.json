{
  "program_id": "github-v0_19066.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 36,
    "const64Bit": 51,
    "numConstZeroes": 47,
    "numConstOnes": 25,
    "UncondBranches": 13,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 16,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 48,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 27,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 13,
    "TotalBlocks": 24,
    "TotalInsts": 212,
    "TotalMemInst": 141,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 97
  },
  "baseline_oz_instcount": 212,
  "knowledge_base_entry": [
    "--flattencfg",
    "--aggressive-instcombine",
    "--instsimplify",
    "--die",
    "--gvn-hoist",
    "--newgvn",
    "--prune-eh",
    "--elim-avail-extern",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--canonicalize-aliases",
          "--mem2reg",
          "--simplifycfg",
          "--loop-distribute",
          "--separate-const-offset-from-gep",
          "--loop-interchange",
          "--gvn",
          "--early-cse-memssa",
          "--add-discriminators",
          "--indvars",
          "--newgvn",
          "--bdce",
          "--loop-versioning",
          "--jump-threading",
          "--reassociate",
          "--forceattrs",
          "--strip-nondebug",
          "--dse",
          "--instcombine",
          "--loop-unswitch",
          "--aggressive-instcombine",
          "--lcssa",
          "--insert-gcov-profiling",
          "--instnamer",
          "--loop-unroll",
          "--licm",
          "--loop-reroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--canonicalize-aliases",
      "--mem2reg",
      "--simplifycfg",
      "--loop-distribute",
      "--separate-const-offset-from-gep",
      "--loop-interchange",
      "--gvn",
      "--early-cse-memssa",
      "--add-discriminators",
      "--indvars",
      "--newgvn",
      "--bdce",
      "--loop-versioning",
      "--jump-threading",
      "--reassociate",
      "--forceattrs",
      "--strip-nondebug",
      "--dse",
      "--instcombine",
      "--loop-unswitch",
      "--aggressive-instcombine",
      "--lcssa",
      "--insert-gcov-profiling",
      "--instnamer",
      "--loop-unroll",
      "--licm",
      "--loop-reroll"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}