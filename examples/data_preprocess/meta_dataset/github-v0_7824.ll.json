{
  "program_id": "github-v0_7824.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 22,
    "const32Bit": 36,
    "const64Bit": 34,
    "numConstZeroes": 37,
    "numConstOnes": 25,
    "UncondBranches": 10,
    "binaryConstArg": 12,
    "NumAShrInst": 2,
    "NumAddInst": 3,
    "NumAllocaInst": 12,
    "NumAndInst": 4,
    "BlockMid": 4,
    "BlockLow": 16,
    "NumBitCastInst": 4,
    "NumBrInst": 16,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 17,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 20,
    "TotalInsts": 143,
    "TotalMemInst": 83,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 58
  },
  "baseline_oz_instcount": 143,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--gvn",
    "--slsr",
    "--load-store-vectorizer",
    "--die",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--bdce",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--bdce",
          "--aggressive-instcombine",
          "--post-inline-ee-instrument",
          "--constmerge",
          "--loop-vectorize",
          "--rpo-functionattrs",
          "--coro-cleanup",
          "--loop-predication",
          "--reassociate",
          "--loop-unroll-and-jam",
          "--constprop",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--bdce",
      "--aggressive-instcombine",
      "--post-inline-ee-instrument",
      "--constmerge",
      "--loop-vectorize",
      "--rpo-functionattrs",
      "--coro-cleanup",
      "--loop-predication",
      "--reassociate",
      "--loop-unroll-and-jam",
      "--constprop",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+2.8%"
  }
}