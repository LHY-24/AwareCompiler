{
  "program_id": "linux-v0_12666.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 1,
    "oneSuccessor": 31,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 8,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 8,
    "CriticalCount": 3,
    "NumEdges": 62,
    "const32Bit": 194,
    "const64Bit": 2,
    "numConstZeroes": 94,
    "numConstOnes": 65,
    "UncondBranches": 31,
    "binaryConstArg": 6,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 51,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 59,
    "NumBitCastInst": 27,
    "NumBrInst": 39,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 56,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 136,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 73,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 64,
    "TotalInsts": 476,
    "TotalMemInst": 361,
    "TotalFuncs": 39,
    "ArgsPhi": 0,
    "testUnary": 224
  },
  "baseline_oz_instcount": 475,
  "knowledge_base_entry": [
    "--prune-eh",
    "--early-cse",
    "--loop-simplifycfg",
    "--ipsccp",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--inline",
    "--mldst-motion",
    "--mem2reg",
    "--loop-instsimplify",
    "--mergefunc",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--sroa",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--indvars",
          "--dce",
          "--mergereturn",
          "--lower-constant-intrinsics",
          "--aggressive-instcombine",
          "--loop-unswitch",
          "--loop-fusion",
          "--speculative-execution",
          "--mergeicmps",
          "--early-cse",
          "--ipconstprop",
          "--inject-tli-mappings",
          "--lowerinvoke",
          "--coro-early",
          "--tailcallelim",
          "--coro-elide",
          "--lower-guard-intrinsic",
          "--loop-vectorize",
          "--strip",
          "--div-rem-pairs",
          "--irce",
          "--ipsccp",
          "--nary-reassociate",
          "--insert-gcov-profiling",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--indvars",
      "--dce",
      "--mergereturn",
      "--lower-constant-intrinsics",
      "--aggressive-instcombine",
      "--loop-unswitch",
      "--loop-fusion",
      "--speculative-execution",
      "--mergeicmps",
      "--early-cse",
      "--ipconstprop",
      "--inject-tli-mappings",
      "--lowerinvoke",
      "--coro-early",
      "--tailcallelim",
      "--coro-elide",
      "--lower-guard-intrinsic",
      "--loop-vectorize",
      "--strip",
      "--div-rem-pairs",
      "--irce",
      "--ipsccp",
      "--nary-reassociate",
      "--insert-gcov-profiling",
      "--newgvn"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}