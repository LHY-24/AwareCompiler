{
  "program_id": "github-v0_30155.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 55,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 16,
    "oneSuccessor": 46,
    "twoPred": 23,
    "twoPredOneSuc": 6,
    "twoEach": 9,
    "twoSuccessor": 36,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 98,
    "BeginPhi": 0,
    "BranchCount": 82,
    "returnInt": 15,
    "CriticalCount": 17,
    "NumEdges": 118,
    "const32Bit": 290,
    "const64Bit": 22,
    "numConstZeroes": 141,
    "numConstOnes": 98,
    "UncondBranches": 46,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 66,
    "NumAndInst": 4,
    "BlockMid": 20,
    "BlockLow": 78,
    "NumBitCastInst": 23,
    "NumBrInst": 82,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 101,
    "NumICmpInst": 36,
    "NumLShrInst": 0,
    "NumLoadInst": 240,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 115,
    "NumSubInst": 11,
    "NumTruncInst": 3,
    "NumXorInst": 3,
    "NumZExtInst": 9,
    "TotalBlocks": 98,
    "TotalInsts": 769,
    "TotalMemInst": 562,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 352
  },
  "baseline_oz_instcount": 769,
  "knowledge_base_entry": [
    "--early-cse",
    "--instcombine",
    "--loop-reroll",
    "--instsimplify",
    "--adce",
    "--gvn",
    "--early-cse",
    "--adce",
    "--aggressive-instcombine",
    "--inline",
    "--mem2reg",
    "--gvn",
    "--mem2reg",
    "--nary-reassociate",
    "-loop-reduce",
    "--nary-reassociate",
    "--newgvn",
    "--loop-rotate",
    "--dse",
    "--dse",
    "--slp-vectorizer",
    "--mergefunc",
    "--licm",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--jump-threading",
    "--die",
    "--lower-expect",
    "--instsimplify",
    "--dce",
    "--sroa",
    "--gvn",
    "--early-cse",
    "--adce",
    "--aggressive-instcombine",
    "--inline",
    "--dce",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--die",
    "--elim-avail-extern",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergereturn",
          "--adce",
          "--separate-const-offset-from-gep",
          "--mldst-motion",
          "--loop-deletion",
          "--add-discriminators",
          "--globaldce",
          "--globalopt",
          "-loop-reduce",
          "--guard-widening",
          "--coro-cleanup",
          "--aggressive-instcombine",
          "--sccp",
          "--redundant-dbg-inst-elim",
          "--loop-simplifycfg",
          "--lowerinvoke",
          "--instsimplify",
          "--loop-fusion",
          "--loop-unroll",
          "--always-inline",
          "--correlated-propagation",
          "--loop-unroll-and-jam",
          "--forceattrs",
          "--strip-dead-prototypes",
          "--mergefunc",
          "--sroa",
          "--loop-load-elim",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergereturn",
      "--adce",
      "--separate-const-offset-from-gep",
      "--mldst-motion",
      "--loop-deletion",
      "--add-discriminators",
      "--globaldce",
      "--globalopt",
      "-loop-reduce",
      "--guard-widening",
      "--coro-cleanup",
      "--aggressive-instcombine",
      "--sccp",
      "--redundant-dbg-inst-elim",
      "--loop-simplifycfg",
      "--lowerinvoke",
      "--instsimplify",
      "--loop-fusion",
      "--loop-unroll",
      "--always-inline",
      "--correlated-propagation",
      "--loop-unroll-and-jam",
      "--forceattrs",
      "--strip-dead-prototypes",
      "--mergefunc",
      "--sroa",
      "--loop-load-elim",
      "--bdce"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}