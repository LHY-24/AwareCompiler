{
  "program_id": "linux-v0_587.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 100,
    "onePredOneSuc": 81,
    "onePredTwoSuc": 13,
    "oneSuccessor": 99,
    "twoPred": 18,
    "twoPredOneSuc": 11,
    "twoEach": 5,
    "twoSuccessor": 20,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 140,
    "BeginPhi": 0,
    "BranchCount": 119,
    "returnInt": 11,
    "CriticalCount": 15,
    "NumEdges": 159,
    "const32Bit": 237,
    "const64Bit": 15,
    "numConstZeroes": 116,
    "numConstOnes": 115,
    "UncondBranches": 99,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 72,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 131,
    "NumBitCastInst": 53,
    "NumBrInst": 119,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 195,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 98,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 18,
    "NumZExtInst": 9,
    "TotalBlocks": 140,
    "TotalInsts": 733,
    "TotalMemInst": 478,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 339
  },
  "baseline_oz_instcount": 727,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--inline",
    "--ipsccp",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--loop-data-prefetch",
          "--gvn-hoist",
          "--aggressive-instcombine",
          "--libcalls-shrinkwrap",
          "--lower-matrix-intrinsics",
          "--ipsccp",
          "--coro-elide",
          "--globaldce",
          "--lower-expect",
          "--mergeicmps",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--loop-data-prefetch",
      "--gvn-hoist",
      "--aggressive-instcombine",
      "--libcalls-shrinkwrap",
      "--lower-matrix-intrinsics",
      "--ipsccp",
      "--coro-elide",
      "--globaldce",
      "--lower-expect",
      "--mergeicmps",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}