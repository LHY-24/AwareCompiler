{
  "program_id": "linux-v0_7750.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 7,
    "oneSuccessor": 14,
    "twoPred": 5,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 12,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 25,
    "returnInt": 5,
    "CriticalCount": 6,
    "NumEdges": 38,
    "const32Bit": 139,
    "const64Bit": 31,
    "numConstZeroes": 77,
    "numConstOnes": 33,
    "UncondBranches": 14,
    "binaryConstArg": 14,
    "NumAShrInst": 1,
    "NumAddInst": 4,
    "NumAllocaInst": 21,
    "NumAndInst": 7,
    "BlockMid": 5,
    "BlockLow": 24,
    "NumBitCastInst": 5,
    "NumBrInst": 25,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 73,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 53,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 29,
    "TotalInsts": 295,
    "TotalMemInst": 217,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 112
  },
  "baseline_oz_instcount": 296,
  "knowledge_base_entry": [
    "--loop-predication",
    "--instcombine",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--loop-deletion",
    "--mem2reg",
    "--flattencfg",
    "--early-cse",
    "--dce",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--nary-reassociate",
          "--loop-data-prefetch",
          "--argpromotion",
          "--sink",
          "--indvars",
          "--prune-eh",
          "--loop-sink",
          "--die",
          "--ipconstprop",
          "--deadargelim",
          "--mergereturn",
          "--strip-debug-declare",
          "--div-rem-pairs",
          "--lower-constant-intrinsics",
          "--loop-vectorize",
          "--lowerinvoke",
          "--loop-rotate",
          "--strip",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--nary-reassociate",
      "--loop-data-prefetch",
      "--argpromotion",
      "--sink",
      "--indvars",
      "--prune-eh",
      "--loop-sink",
      "--die",
      "--ipconstprop",
      "--deadargelim",
      "--mergereturn",
      "--strip-debug-declare",
      "--div-rem-pairs",
      "--lower-constant-intrinsics",
      "--loop-vectorize",
      "--lowerinvoke",
      "--loop-rotate",
      "--strip",
      "--float2int"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}