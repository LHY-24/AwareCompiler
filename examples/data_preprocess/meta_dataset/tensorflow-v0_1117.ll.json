{
  "program_id": "tensorflow-v0_1117.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 2,
    "oneSuccessor": 4,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 12,
    "const32Bit": 16,
    "const64Bit": 8,
    "numConstZeroes": 16,
    "numConstOnes": 6,
    "UncondBranches": 4,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 10,
    "NumBitCastInst": 2,
    "NumBrInst": 8,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 6,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 4,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 38,
    "TotalMemInst": 20,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 8
  },
  "baseline_oz_instcount": 38,
  "knowledge_base_entry": [
    "--adce",
    "--jump-threading",
    "--adce",
    "--mergefunc",
    "--licm",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--sroa",
    "--loop-instsimplify",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--post-inline-ee-instrument",
          "--bdce",
          "--loop-vectorize",
          "--loop-unroll-and-jam",
          "--constprop",
          "--loop-deletion",
          "--loop-versioning-licm",
          "--prune-eh",
          "--loop-idiom",
          "--slsr",
          "--hotcoldsplit",
          "--loop-instsimplify",
          "--flattencfg",
          "--lower-guard-intrinsic",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+44.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--post-inline-ee-instrument",
      "--bdce",
      "--loop-vectorize",
      "--loop-unroll-and-jam",
      "--constprop",
      "--loop-deletion",
      "--loop-versioning-licm",
      "--prune-eh",
      "--loop-idiom",
      "--slsr",
      "--hotcoldsplit",
      "--loop-instsimplify",
      "--flattencfg",
      "--lower-guard-intrinsic",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+44.7%"
  }
}