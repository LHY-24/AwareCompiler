{
  "program_id": "linux-v0_991.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 0,
    "oneSuccessor": 10,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 1,
    "CriticalCount": 0,
    "NumEdges": 20,
    "const32Bit": 61,
    "const64Bit": 0,
    "numConstZeroes": 25,
    "numConstOnes": 25,
    "UncondBranches": 10,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 17,
    "NumBitCastInst": 6,
    "NumBrInst": 10,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 47,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 19,
    "TotalBlocks": 19,
    "TotalInsts": 160,
    "TotalMemInst": 107,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 86
  },
  "baseline_oz_instcount": 160,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--globalopt",
    "--sroa",
    "--sccp",
    "--bdce",
    "--reassociate",
    "--bdce",
    "--mergefunc",
    "--flattencfg",
    "--ipsccp",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--nary-reassociate",
          "--alignment-from-assumptions",
          "--bdce",
          "--pgo-memop-opt",
          "--loop-fusion",
          "--globaldce",
          "--loop-simplify",
          "--mergereturn",
          "--coro-split",
          "--loop-versioning",
          "--loop-unswitch",
          "--cross-dso-cfi",
          "--load-store-vectorizer",
          "--loop-predication",
          "--lower-widenable-condition",
          "--loop-reroll",
          "--mergefunc",
          "--jump-threading",
          "--loop-vectorize",
          "--break-crit-edges"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--nary-reassociate",
      "--alignment-from-assumptions",
      "--bdce",
      "--pgo-memop-opt",
      "--loop-fusion",
      "--globaldce",
      "--loop-simplify",
      "--mergereturn",
      "--coro-split",
      "--loop-versioning",
      "--loop-unswitch",
      "--cross-dso-cfi",
      "--load-store-vectorizer",
      "--loop-predication",
      "--lower-widenable-condition",
      "--loop-reroll",
      "--mergefunc",
      "--jump-threading",
      "--loop-vectorize",
      "--break-crit-edges"
    ],
    "performance_vs_Oz": "+3.8%"
  }
}