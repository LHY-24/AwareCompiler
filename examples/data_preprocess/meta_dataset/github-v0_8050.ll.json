{
  "program_id": "github-v0_8050.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 30,
    "const64Bit": 35,
    "numConstZeroes": 37,
    "numConstOnes": 22,
    "UncondBranches": 13,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 39,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 2,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 24,
    "TotalBlocks": 24,
    "TotalInsts": 182,
    "TotalMemInst": 102,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 87
  },
  "baseline_oz_instcount": 182,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--instcombine",
    "--loop-deletion",
    "--newgvn",
    "-loop-reduce",
    "--gvn",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--flattencfg",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--gvn",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--aggressive-instcombine",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--sccp",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--loop-instsimplify",
    "--dse",
    "--nary-reassociate",
    "--instsimplify",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--newgvn",
    "--loop-deletion",
    "--sroa",
    "--dce",
    "--dse",
    "--aggressive-instcombine",
    "--flattencfg",
    "--load-store-vectorizer",
    "--jump-threading",
    "--loop-rotate",
    "--lower-expect",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--strip",
          "--break-crit-edges",
          "--cross-dso-cfi",
          "--bdce",
          "--die",
          "--inferattrs",
          "--post-inline-ee-instrument",
          "--lowerswitch",
          "--instcombine",
          "--dce",
          "--mergereturn",
          "--loop-unroll",
          "--loop-versioning-licm",
          "-loop-reduce",
          "--constprop",
          "--partially-inline-libcalls",
          "--loweratomic",
          "--deadargelim",
          "--jump-threading",
          "--tailcallelim",
          "--float2int",
          "--reg2mem",
          "--mergeicmps",
          "--ipsccp",
          "--aggressive-instcombine",
          "--redundant-dbg-inst-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--strip",
      "--break-crit-edges",
      "--cross-dso-cfi",
      "--bdce",
      "--die",
      "--inferattrs",
      "--post-inline-ee-instrument",
      "--lowerswitch",
      "--instcombine",
      "--dce",
      "--mergereturn",
      "--loop-unroll",
      "--loop-versioning-licm",
      "-loop-reduce",
      "--constprop",
      "--partially-inline-libcalls",
      "--loweratomic",
      "--deadargelim",
      "--jump-threading",
      "--tailcallelim",
      "--float2int",
      "--reg2mem",
      "--mergeicmps",
      "--ipsccp",
      "--aggressive-instcombine",
      "--redundant-dbg-inst-elim"
    ],
    "performance_vs_Oz": "+9.9%"
  }
}