{
  "program_id": "linux-v0_722.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 52,
    "onePredOneSuc": 44,
    "onePredTwoSuc": 7,
    "oneSuccessor": 52,
    "twoPred": 11,
    "twoPredOneSuc": 7,
    "twoEach": 4,
    "twoSuccessor": 12,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 68,
    "BeginPhi": 0,
    "BranchCount": 64,
    "returnInt": 32,
    "CriticalCount": 10,
    "NumEdges": 91,
    "const32Bit": 94,
    "const64Bit": 1,
    "numConstZeroes": 40,
    "numConstOnes": 13,
    "UncondBranches": 52,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 65,
    "NumBitCastInst": 3,
    "NumBrInst": 64,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 74,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 68,
    "TotalInsts": 252,
    "TotalMemInst": 169,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 83
  },
  "baseline_oz_instcount": 252,
  "knowledge_base_entry": [
    "--dce",
    "--sroa",
    "--adce",
    "--slp-vectorizer",
    "--mem2reg",
    "--globalopt",
    "--sccp",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--reassociate",
    "--instcombine",
    "--lower-expect",
    "--bdce",
    "--lower-expect",
    "--globalopt",
    "--ipsccp",
    "--sccp",
    "--simplifycfg",
    "--sccp",
    "--mem2reg",
    "--reassociate",
    "--slsr",
    "--gvn-hoist",
    "--instcombine",
    "--aggressive-instcombine",
    "--globalopt",
    "--instsimplify",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-interchange",
          "--loop-distribute",
          "--prune-eh",
          "--strip-debug-declare",
          "--globaldce",
          "--loop-rotate",
          "--constmerge",
          "--mergereturn",
          "--float2int",
          "--globalopt",
          "--lower-constant-intrinsics",
          "--cross-dso-cfi",
          "--indvars",
          "--early-cse",
          "--lower-matrix-intrinsics",
          "--functionattrs",
          "--loop-predication",
          "--consthoist",
          "--mergeicmps",
          "--sancov",
          "--mergefunc",
          "--coro-split",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-interchange",
      "--loop-distribute",
      "--prune-eh",
      "--strip-debug-declare",
      "--globaldce",
      "--loop-rotate",
      "--constmerge",
      "--mergereturn",
      "--float2int",
      "--globalopt",
      "--lower-constant-intrinsics",
      "--cross-dso-cfi",
      "--indvars",
      "--early-cse",
      "--lower-matrix-intrinsics",
      "--functionattrs",
      "--loop-predication",
      "--consthoist",
      "--mergeicmps",
      "--sancov",
      "--mergefunc",
      "--coro-split",
      "--adce"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}