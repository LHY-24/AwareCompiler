{
  "program_id": "linux-v0_13456.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 7,
    "oneSuccessor": 15,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 10,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 32,
    "BeginPhi": 0,
    "BranchCount": 25,
    "returnInt": 17,
    "CriticalCount": 6,
    "NumEdges": 35,
    "const32Bit": 87,
    "const64Bit": 9,
    "numConstZeroes": 25,
    "numConstOnes": 34,
    "UncondBranches": 15,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 25,
    "NumAndInst": 6,
    "BlockMid": 3,
    "BlockLow": 29,
    "NumBitCastInst": 2,
    "NumBrInst": 25,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 67,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 39,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 32,
    "TotalInsts": 259,
    "TotalMemInst": 186,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 103
  },
  "baseline_oz_instcount": 259,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--newgvn",
    "--aggressive-instcombine",
    "--early-cse",
    "--slsr",
    "--jump-threading",
    "--dse",
    "--mldst-motion",
    "--gvn",
    "--globalopt",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--loop-versioning-licm",
          "-loop-reduce",
          "--loop-unroll",
          "--post-inline-ee-instrument",
          "--nary-reassociate",
          "--lowerswitch",
          "--hotcoldsplit",
          "--loop-simplifycfg",
          "--loop-data-prefetch",
          "--correlated-propagation",
          "--elim-avail-extern",
          "--alignment-from-assumptions",
          "--rpo-functionattrs",
          "--irce",
          "--newgvn",
          "--loop-reroll",
          "--lower-guard-intrinsic",
          "--always-inline",
          "--slsr",
          "--simple-loop-unswitch",
          "--aggressive-instcombine",
          "--gvn",
          "--argpromotion",
          "--lower-matrix-intrinsics",
          "--guard-widening",
          "--functionattrs",
          "--adce",
          "--loop-versioning",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--loop-versioning-licm",
      "-loop-reduce",
      "--loop-unroll",
      "--post-inline-ee-instrument",
      "--nary-reassociate",
      "--lowerswitch",
      "--hotcoldsplit",
      "--loop-simplifycfg",
      "--loop-data-prefetch",
      "--correlated-propagation",
      "--elim-avail-extern",
      "--alignment-from-assumptions",
      "--rpo-functionattrs",
      "--irce",
      "--newgvn",
      "--loop-reroll",
      "--lower-guard-intrinsic",
      "--always-inline",
      "--slsr",
      "--simple-loop-unswitch",
      "--aggressive-instcombine",
      "--gvn",
      "--argpromotion",
      "--lower-matrix-intrinsics",
      "--guard-widening",
      "--functionattrs",
      "--adce",
      "--loop-versioning",
      "--sancov"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}