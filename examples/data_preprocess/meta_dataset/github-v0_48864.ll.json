{
  "program_id": "github-v0_48864.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 25,
    "const32Bit": 31,
    "const64Bit": 26,
    "numConstZeroes": 29,
    "numConstOnes": 20,
    "UncondBranches": 11,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 18,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 31,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 22,
    "TotalInsts": 135,
    "TotalMemInst": 84,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 55
  },
  "baseline_oz_instcount": 135,
  "knowledge_base_entry": [
    "--scalarizer",
    "--early-cse-memssa",
    "--instsimplify",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--dse",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--loop-unroll",
          "--sroa",
          "--irce",
          "--globalsplit",
          "--canonicalize-aliases",
          "--loop-versioning",
          "--lower-expect",
          "--early-cse",
          "--sancov",
          "--aggressive-instcombine",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--loop-unroll",
      "--sroa",
      "--irce",
      "--globalsplit",
      "--canonicalize-aliases",
      "--loop-versioning",
      "--lower-expect",
      "--early-cse",
      "--sancov",
      "--aggressive-instcombine",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+3.0%"
  }
}