{
  "program_id": "github-v0_49899.ll",
  "autophase_features": {
    "BBNumArgsHi": 6,
    "BBNumArgsLo": 13,
    "onePred": 34,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 14,
    "oneSuccessor": 24,
    "twoPred": 24,
    "twoPredOneSuc": 4,
    "twoEach": 17,
    "twoSuccessor": 38,
    "morePreds": 4,
    "BB03Phi": 19,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 19,
    "BranchCount": 62,
    "returnInt": 36,
    "CriticalCount": 42,
    "NumEdges": 100,
    "const32Bit": 99,
    "const64Bit": 12,
    "numConstZeroes": 48,
    "numConstOnes": 33,
    "UncondBranches": 24,
    "binaryConstArg": 40,
    "NumAShrInst": 6,
    "NumAddInst": 33,
    "NumAllocaInst": 0,
    "NumAndInst": 6,
    "BlockMid": 14,
    "BlockLow": 55,
    "NumBitCastInst": 2,
    "NumBrInst": 62,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 36,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 57,
    "NumOrInst": 6,
    "NumPHIInst": 38,
    "NumRetInst": 7,
    "NumSExtInst": 30,
    "NumSelectInst": 9,
    "NumShlInst": 6,
    "NumStoreInst": 19,
    "NumSubInst": 13,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 69,
    "TotalInsts": 531,
    "TotalMemInst": 157,
    "TotalFuncs": 11,
    "ArgsPhi": 76,
    "testUnary": 97
  },
  "baseline_oz_instcount": 530,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--sroa",
    "--lower-expect",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--slsr",
    "--nary-reassociate",
    "--slsr",
    "--gvn",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--jump-threading",
    "--instsimplify",
    "--gvn-hoist",
    "--bdce",
    "--simplifycfg",
    "--mem2reg",
    "--lower-expect",
    "--sccp",
    "--instsimplify",
    "--loop-rotate",
    "--gvn",
    "--inline",
    "--sroa",
    "--prune-eh",
    "--instsimplify",
    "--adce",
    "--bdce",
    "--die",
    "--correlated-propagation",
    "--sroa",
    "--licm",
    "--early-cse-memssa",
    "--bdce",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--inline",
    "--licm",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--die",
    "--licm",
    "--ipsccp",
    "--aggressive-instcombine",
    "--instsimplify",
    "--gvn-hoist",
    "--instsimplify",
    "--jump-threading",
    "--loop-reroll",
    "--early-cse-memssa",
    "--early-cse",
    "--instsimplify",
    "--elim-avail-extern",
    "--loop-deletion",
    "--instcombine",
    "--elim-avail-extern",
    "--mergefunc",
    "--dce",
    "--mergefunc",
    "--bdce",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--simplifycfg",
    "--slsr",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--loop-deletion",
          "--lcssa",
          "--strip-nondebug",
          "--aggressive-instcombine",
          "--add-discriminators",
          "--mldst-motion",
          "--lower-widenable-condition",
          "--strip-dead-prototypes",
          "--correlated-propagation",
          "--mergereturn",
          "--loop-vectorize",
          "--strip",
          "--constmerge",
          "--loop-sink",
          "--newgvn",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--loop-deletion",
      "--lcssa",
      "--strip-nondebug",
      "--aggressive-instcombine",
      "--add-discriminators",
      "--mldst-motion",
      "--lower-widenable-condition",
      "--strip-dead-prototypes",
      "--correlated-propagation",
      "--mergereturn",
      "--loop-vectorize",
      "--strip",
      "--constmerge",
      "--loop-sink",
      "--newgvn",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}