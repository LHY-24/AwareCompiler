{
  "program_id": "linux-v0_12123.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 49,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 19,
    "oneSuccessor": 37,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 22,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 0,
    "BranchCount": 59,
    "returnInt": 12,
    "CriticalCount": 9,
    "NumEdges": 93,
    "const32Bit": 158,
    "const64Bit": 21,
    "numConstZeroes": 54,
    "numConstOnes": 55,
    "UncondBranches": 37,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 48,
    "NumAndInst": 13,
    "BlockMid": 9,
    "BlockLow": 63,
    "NumBitCastInst": 9,
    "NumBrInst": 59,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 129,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 87,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 1,
    "NumZExtInst": 8,
    "TotalBlocks": 72,
    "TotalInsts": 519,
    "TotalMemInst": 353,
    "TotalFuncs": 26,
    "ArgsPhi": 0,
    "testUnary": 238
  },
  "baseline_oz_instcount": 519,
  "knowledge_base_entry": [
    "--newgvn",
    "--elim-avail-extern",
    "--mldst-motion",
    "--sroa",
    "--newgvn",
    "--ipsccp",
    "--sccp",
    "--early-cse",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--ipsccp",
    "--instcombine",
    "--instsimplify",
    "--die",
    "--newgvn",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--jump-threading",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--barrier",
          "--gvn",
          "--irce",
          "--aggressive-instcombine",
          "--alignment-from-assumptions",
          "--simplifycfg",
          "--prune-eh",
          "--loop-simplifycfg",
          "--deadargelim",
          "--loop-deletion",
          "--dse",
          "--mergefunc",
          "--loop-load-elim",
          "--jump-threading",
          "--newgvn",
          "--coro-elide",
          "--slsr",
          "--hotcoldsplit",
          "--strip-dead-prototypes",
          "--loop-reroll",
          "--lower-widenable-condition",
          "--strip-debug-declare",
          "--redundant-dbg-inst-elim",
          "--sink",
          "--memcpyopt",
          "--loop-data-prefetch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--barrier",
      "--gvn",
      "--irce",
      "--aggressive-instcombine",
      "--alignment-from-assumptions",
      "--simplifycfg",
      "--prune-eh",
      "--loop-simplifycfg",
      "--deadargelim",
      "--loop-deletion",
      "--dse",
      "--mergefunc",
      "--loop-load-elim",
      "--jump-threading",
      "--newgvn",
      "--coro-elide",
      "--slsr",
      "--hotcoldsplit",
      "--strip-dead-prototypes",
      "--loop-reroll",
      "--lower-widenable-condition",
      "--strip-debug-declare",
      "--redundant-dbg-inst-elim",
      "--sink",
      "--memcpyopt",
      "--loop-data-prefetch"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}