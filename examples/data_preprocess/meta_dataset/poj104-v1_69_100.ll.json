{
  "program_id": "poj104-v1_69_100.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 43,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 7,
    "oneSuccessor": 39,
    "twoPred": 14,
    "twoPredOneSuc": 4,
    "twoEach": 7,
    "twoSuccessor": 19,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 82,
    "BeginPhi": 1,
    "BranchCount": 58,
    "returnInt": 24,
    "CriticalCount": 8,
    "NumEdges": 77,
    "const32Bit": 101,
    "const64Bit": 73,
    "numConstZeroes": 49,
    "numConstOnes": 65,
    "UncondBranches": 39,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 48,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 75,
    "NumBitCastInst": 63,
    "NumBrInst": 58,
    "NumCallInst": 87,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 121,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 24,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 67,
    "NumSubInst": 5,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 83,
    "TotalInsts": 576,
    "TotalMemInst": 363,
    "TotalFuncs": 42,
    "ArgsPhi": 2,
    "testUnary": 257
  },
  "baseline_oz_instcount": 199,
  "knowledge_base_entry": [
    "--inferattrs",
    "--instcombine",
    "--early-cse",
    "--newgvn",
    "--indvars",
    "--nary-reassociate",
    "--slsr",
    "--early-cse",
    "--adce",
    "--lower-constant-intrinsics",
    "--dce",
    "--die",
    "--loop-instsimplify",
    "--newgvn",
    "--mldst-motion",
    "--elim-avail-extern",
    "--dse",
    "--dse",
    "--correlated-propagation",
    "--lower-expect",
    "--nary-reassociate",
    "--mem2reg",
    "--flattencfg",
    "--ipsccp",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--bdce",
    "--sccp",
    "--die",
    "--gvn",
    "--simplifycfg",
    "--dse",
    "--elim-avail-extern",
    "--inline",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--slsr",
    "--early-cse",
    "--newgvn",
    "--indvars",
    "--nary-reassociate",
    "--slsr",
    "--early-cse",
    "--adce",
    "--lower-constant-intrinsics",
    "--dce",
    "--die",
    "--die",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--gvn",
    "--dce",
    "--slp-vectorizer",
    "--dce",
    "--gvn-hoist",
    "--die",
    "--elim-avail-extern",
    "--mem2reg",
    "--loop-instsimplify",
    "--gvn",
    "--flattencfg",
    "--mergefunc",
    "--instsimplify",
    "--early-cse",
    "--flattencfg",
    "--instcombine",
    "--loop-deletion",
    "--elim-avail-extern",
    "--bdce",
    "--sroa",
    "--newgvn",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--loop-fusion",
    "--jump-threading",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--memcpyopt",
    "--early-cse-memssa",
    "--mem2reg",
    "--simplifycfg",
    "--dse",
    "--ipsccp",
    "--gvn-hoist",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--bdce",
    "--sccp",
    "--die",
    "--gvn",
    "--simplifycfg",
    "--dse",
    "--elim-avail-extern",
    "--inline",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--slsr",
    "--early-cse",
    "--adce",
    "--lower-constant-intrinsics",
    "--dce",
    "--die",
    "--jump-threading",
    "--globalopt",
    "--aggressive-instcombine",
    "--mergefunc",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--early-cse",
          "--globalopt",
          "--post-inline-ee-instrument",
          "--partial-inliner",
          "--partially-inline-libcalls",
          "--globalsplit",
          "--loop-vectorize",
          "--nary-reassociate",
          "--strip-debug-declare",
          "--early-cse-memssa",
          "--inject-tli-mappings",
          "--called-value-propagation",
          "--loop-instsimplify",
          "--lowerinvoke",
          "--barrier",
          "--coro-split",
          "--lower-constant-intrinsics",
          "-loop-reduce",
          "--jump-threading",
          "--separate-const-offset-from-gep",
          "--loop-predication",
          "--correlated-propagation",
          "--globaldce",
          "--callsite-splitting",
          "--sroa",
          "--hotcoldsplit",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+12.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--early-cse",
      "--globalopt",
      "--post-inline-ee-instrument",
      "--partial-inliner",
      "--partially-inline-libcalls",
      "--globalsplit",
      "--loop-vectorize",
      "--nary-reassociate",
      "--strip-debug-declare",
      "--early-cse-memssa",
      "--inject-tli-mappings",
      "--called-value-propagation",
      "--loop-instsimplify",
      "--lowerinvoke",
      "--barrier",
      "--coro-split",
      "--lower-constant-intrinsics",
      "-loop-reduce",
      "--jump-threading",
      "--separate-const-offset-from-gep",
      "--loop-predication",
      "--correlated-propagation",
      "--globaldce",
      "--callsite-splitting",
      "--sroa",
      "--hotcoldsplit",
      "--die"
    ],
    "performance_vs_Oz": "+12.1%"
  }
}