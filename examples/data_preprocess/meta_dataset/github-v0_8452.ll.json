{
  "program_id": "github-v0_8452.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 5,
    "oneSuccessor": 13,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 12,
    "CriticalCount": 2,
    "NumEdges": 29,
    "const32Bit": 43,
    "const64Bit": 9,
    "numConstZeroes": 32,
    "numConstOnes": 8,
    "UncondBranches": 13,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 21,
    "NumBitCastInst": 0,
    "NumBrInst": 21,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 16,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 22,
    "TotalInsts": 110,
    "TotalMemInst": 66,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 34
  },
  "baseline_oz_instcount": 110,
  "knowledge_base_entry": [
    "--jump-threading",
    "--dse",
    "--globalopt",
    "--reassociate",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--jump-threading",
    "--lower-expect",
    "--early-cse",
    "--gvn-hoist",
    "--early-cse",
    "--die",
    "--newgvn",
    "--globalopt",
    "--reassociate",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--slsr",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--loop-simplifycfg",
          "--lowerinvoke",
          "--gvn",
          "--constprop",
          "--reassociate",
          "--strip",
          "--pgo-memop-opt",
          "--elim-avail-extern",
          "--speculative-execution",
          "--dce",
          "--lower-guard-intrinsic",
          "--loop-distribute",
          "--rewrite-statepoints-for-gc",
          "--loop-data-prefetch",
          "--simple-loop-unswitch",
          "--lower-matrix-intrinsics",
          "--slp-vectorizer",
          "--canonicalize-aliases",
          "--dse",
          "--nary-reassociate",
          "--argpromotion",
          "--aggressive-instcombine",
          "--prune-eh",
          "--redundant-dbg-inst-elim",
          "--strip-dead-prototypes",
          "--loop-interchange",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--loop-simplifycfg",
      "--lowerinvoke",
      "--gvn",
      "--constprop",
      "--reassociate",
      "--strip",
      "--pgo-memop-opt",
      "--elim-avail-extern",
      "--speculative-execution",
      "--dce",
      "--lower-guard-intrinsic",
      "--loop-distribute",
      "--rewrite-statepoints-for-gc",
      "--loop-data-prefetch",
      "--simple-loop-unswitch",
      "--lower-matrix-intrinsics",
      "--slp-vectorizer",
      "--canonicalize-aliases",
      "--dse",
      "--nary-reassociate",
      "--argpromotion",
      "--aggressive-instcombine",
      "--prune-eh",
      "--redundant-dbg-inst-elim",
      "--strip-dead-prototypes",
      "--loop-interchange",
      "--indvars"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}