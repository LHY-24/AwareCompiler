{
  "program_id": "opencv-v0_117.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 3,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 22,
    "const64Bit": 30,
    "numConstZeroes": 14,
    "numConstOnes": 6,
    "UncondBranches": 0,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 2,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 1,
    "NumBitCastInst": 2,
    "NumBrInst": 0,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 0,
    "NumLShrInst": 6,
    "NumLoadInst": 16,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 8,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 3,
    "TotalInsts": 95,
    "TotalMemInst": 56,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 36
  },
  "baseline_oz_instcount": 95,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--loop-reroll",
    "--gvn-hoist",
    "--instsimplify",
    "--slp-vectorizer",
    "--lower-expect",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--jump-threading",
    "--flattencfg",
    "--jump-threading",
    "--mldst-motion",
    "--instsimplify",
    "--instcombine",
    "--mldst-motion",
    "--early-cse",
    "--gvn",
    "--correlated-propagation",
    "--ipsccp",
    "--bdce",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--bdce",
          "--lower-matrix-intrinsics",
          "--ipconstprop",
          "--loweratomic",
          "--slp-vectorizer",
          "--instnamer",
          "--loop-unswitch",
          "--reassociate",
          "--globalopt",
          "--rewrite-statepoints-for-gc",
          "--early-cse-memssa",
          "--loop-unroll",
          "--float2int",
          "--loop-simplify",
          "--dse",
          "--attributor",
          "--lower-widenable-condition",
          "--mergefunc",
          "--ee-instrument",
          "--slsr",
          "--loop-versioning-licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--bdce",
      "--lower-matrix-intrinsics",
      "--ipconstprop",
      "--loweratomic",
      "--slp-vectorizer",
      "--instnamer",
      "--loop-unswitch",
      "--reassociate",
      "--globalopt",
      "--rewrite-statepoints-for-gc",
      "--early-cse-memssa",
      "--loop-unroll",
      "--float2int",
      "--loop-simplify",
      "--dse",
      "--attributor",
      "--lower-widenable-condition",
      "--mergefunc",
      "--ee-instrument",
      "--slsr",
      "--loop-versioning-licm"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}