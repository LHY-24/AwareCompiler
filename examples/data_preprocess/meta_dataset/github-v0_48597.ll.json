{
  "program_id": "github-v0_48597.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 49,
    "const64Bit": 59,
    "numConstZeroes": 62,
    "numConstOnes": 22,
    "UncondBranches": 15,
    "binaryConstArg": 29,
    "NumAShrInst": 4,
    "NumAddInst": 6,
    "NumAllocaInst": 12,
    "NumAndInst": 9,
    "BlockMid": 7,
    "BlockLow": 20,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 56,
    "NumMulInst": 0,
    "NumOrInst": 11,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 9,
    "NumStoreInst": 23,
    "NumSubInst": 3,
    "NumTruncInst": 13,
    "NumXorInst": 0,
    "NumZExtInst": 40,
    "TotalBlocks": 27,
    "TotalInsts": 269,
    "TotalMemInst": 134,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 126
  },
  "baseline_oz_instcount": 269,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--loop-reroll",
    "--loop-fusion",
    "--instcombine",
    "--mem2reg",
    "--loop-simplifycfg",
    "--instcombine",
    "--load-store-vectorizer",
    "--die",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--mergefunc",
    "-loop-reduce",
    "--nary-reassociate",
    "--dse",
    "--simplifycfg",
    "--slp-vectorizer",
    "--reassociate",
    "--instsimplify",
    "--die",
    "--dse",
    "--sroa",
    "--globalopt",
    "--sroa",
    "--jump-threading",
    "--gvn-hoist",
    "--sroa",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--ipsccp",
    "--instcombine",
    "--aggressive-instcombine",
    "--mergefunc",
    "--instsimplify",
    "--instcombine",
    "--correlated-propagation",
    "--gvn",
    "--loop-reroll",
    "--loop-fusion",
    "--instcombine",
    "--mem2reg",
    "--loop-simplifycfg",
    "--instcombine",
    "--load-store-vectorizer",
    "--die",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--mergefunc",
    "-loop-reduce",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--load-store-vectorizer",
          "--partially-inline-libcalls",
          "--functionattrs",
          "--loop-data-prefetch",
          "--lowerswitch",
          "--loop-versioning",
          "--mem2reg",
          "--instnamer",
          "--aggressive-instcombine",
          "--strip-debug-declare",
          "--mergereturn",
          "--lower-widenable-condition",
          "--break-crit-edges",
          "--inject-tli-mappings",
          "--mergefunc",
          "--jump-threading",
          "--canonicalize-aliases",
          "--loop-deletion",
          "--ee-instrument",
          "--loweratomic",
          "--loop-vectorize",
          "--reg2mem",
          "--gvn",
          "--div-rem-pairs",
          "--loop-instsimplify",
          "--sroa",
          "--barrier",
          "--memcpyopt",
          "--strip-dead-prototypes"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--load-store-vectorizer",
      "--partially-inline-libcalls",
      "--functionattrs",
      "--loop-data-prefetch",
      "--lowerswitch",
      "--loop-versioning",
      "--mem2reg",
      "--instnamer",
      "--aggressive-instcombine",
      "--strip-debug-declare",
      "--mergereturn",
      "--lower-widenable-condition",
      "--break-crit-edges",
      "--inject-tli-mappings",
      "--mergefunc",
      "--jump-threading",
      "--canonicalize-aliases",
      "--loop-deletion",
      "--ee-instrument",
      "--loweratomic",
      "--loop-vectorize",
      "--reg2mem",
      "--gvn",
      "--div-rem-pairs",
      "--loop-instsimplify",
      "--sroa",
      "--barrier",
      "--memcpyopt",
      "--strip-dead-prototypes"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}