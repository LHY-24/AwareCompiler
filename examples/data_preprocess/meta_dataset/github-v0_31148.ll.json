{
  "program_id": "github-v0_31148.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 0,
    "oneSuccessor": 13,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 65,
    "const64Bit": 4,
    "numConstZeroes": 27,
    "numConstOnes": 20,
    "UncondBranches": 13,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 17,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 21,
    "NumBitCastInst": 0,
    "NumBrInst": 18,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 31,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 11,
    "TotalBlocks": 23,
    "TotalInsts": 139,
    "TotalMemInst": 93,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 61
  },
  "baseline_oz_instcount": 137,
  "knowledge_base_entry": [
    "--loop-fusion",
    "--newgvn",
    "--dse",
    "--aggressive-instcombine",
    "--flattencfg",
    "--ipsccp",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip",
          "--tailcallelim",
          "--loop-rotate",
          "--loop-unswitch",
          "--alignment-from-assumptions",
          "--loop-reroll",
          "--die",
          "--attributor",
          "--prune-eh",
          "--lower-widenable-condition",
          "--coro-split",
          "--reg2mem",
          "--aggressive-instcombine",
          "--ee-instrument",
          "--mergefunc",
          "--argpromotion",
          "--mergereturn",
          "--hotcoldsplit",
          "--loop-fusion",
          "--bdce",
          "--libcalls-shrinkwrap",
          "--strip-nondebug",
          "--globalopt",
          "--adce",
          "--strip-dead-prototypes",
          "--loop-predication",
          "--flattencfg",
          "--callsite-splitting"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip",
      "--tailcallelim",
      "--loop-rotate",
      "--loop-unswitch",
      "--alignment-from-assumptions",
      "--loop-reroll",
      "--die",
      "--attributor",
      "--prune-eh",
      "--lower-widenable-condition",
      "--coro-split",
      "--reg2mem",
      "--aggressive-instcombine",
      "--ee-instrument",
      "--mergefunc",
      "--argpromotion",
      "--mergereturn",
      "--hotcoldsplit",
      "--loop-fusion",
      "--bdce",
      "--libcalls-shrinkwrap",
      "--strip-nondebug",
      "--globalopt",
      "--adce",
      "--strip-dead-prototypes",
      "--loop-predication",
      "--flattencfg",
      "--callsite-splitting"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}