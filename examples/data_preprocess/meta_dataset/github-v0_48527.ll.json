{
  "program_id": "github-v0_48527.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 37,
    "const64Bit": 31,
    "numConstZeroes": 38,
    "numConstOnes": 20,
    "UncondBranches": 15,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 12,
    "NumAndInst": 3,
    "BlockMid": 7,
    "BlockLow": 20,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 19,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 29,
    "TotalBlocks": 27,
    "TotalInsts": 198,
    "TotalMemInst": 106,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 95
  },
  "baseline_oz_instcount": 198,
  "knowledge_base_entry": [
    "--mergefunc",
    "--sroa",
    "--aggressive-instcombine",
    "--inline",
    "--bdce",
    "--loop-instsimplify",
    "--simplifycfg",
    "--flattencfg",
    "--elim-avail-extern",
    "--globalopt",
    "--instsimplify",
    "--jump-threading",
    "--mem2reg",
    "--licm",
    "--mem2reg",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--early-cse",
    "--ipsccp",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--loop-fusion",
          "--loop-simplifycfg",
          "--mldst-motion",
          "--lower-matrix-intrinsics",
          "--loop-reroll",
          "--lower-guard-intrinsic",
          "--lower-expect",
          "--reg2mem",
          "--rewrite-statepoints-for-gc",
          "--loop-simplify",
          "--redundant-dbg-inst-elim",
          "--inferattrs",
          "--loop-instsimplify",
          "--loop-unroll",
          "--sink",
          "--loweratomic",
          "--hotcoldsplit",
          "--loop-unswitch",
          "--constprop",
          "--instnamer",
          "--adce",
          "--ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--loop-fusion",
      "--loop-simplifycfg",
      "--mldst-motion",
      "--lower-matrix-intrinsics",
      "--loop-reroll",
      "--lower-guard-intrinsic",
      "--lower-expect",
      "--reg2mem",
      "--rewrite-statepoints-for-gc",
      "--loop-simplify",
      "--redundant-dbg-inst-elim",
      "--inferattrs",
      "--loop-instsimplify",
      "--loop-unroll",
      "--sink",
      "--loweratomic",
      "--hotcoldsplit",
      "--loop-unswitch",
      "--constprop",
      "--instnamer",
      "--adce",
      "--ee-instrument"
    ],
    "performance_vs_Oz": "+3.5%"
  }
}