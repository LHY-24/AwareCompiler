{
  "program_id": "linux-v0_7148.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 7,
    "oneSuccessor": 22,
    "twoPred": 12,
    "twoPredOneSuc": 5,
    "twoEach": 6,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 0,
    "BranchCount": 36,
    "returnInt": 2,
    "CriticalCount": 5,
    "NumEdges": 50,
    "const32Bit": 143,
    "const64Bit": 15,
    "numConstZeroes": 65,
    "numConstOnes": 43,
    "UncondBranches": 22,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 31,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 36,
    "NumBitCastInst": 2,
    "NumBrInst": 36,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 135,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 55,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 41,
    "TotalInsts": 382,
    "TotalMemInst": 307,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 181
  },
  "baseline_oz_instcount": 382,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--early-cse",
    "--die",
    "--lower-expect",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--gvn",
    "--dce",
    "--simplifycfg",
    "--memcpyopt",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--loop-rotate",
          "--strip-debug-declare",
          "--reassociate",
          "--name-anon-globals",
          "--sink",
          "--globaldce",
          "--coro-split",
          "-loop-reduce",
          "--loop-unswitch",
          "--aggressive-instcombine",
          "--lower-matrix-intrinsics",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--loop-rotate",
      "--strip-debug-declare",
      "--reassociate",
      "--name-anon-globals",
      "--sink",
      "--globaldce",
      "--coro-split",
      "-loop-reduce",
      "--loop-unswitch",
      "--aggressive-instcombine",
      "--lower-matrix-intrinsics",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}