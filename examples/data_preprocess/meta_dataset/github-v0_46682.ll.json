{
  "program_id": "github-v0_46682.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 82,
    "onePredOneSuc": 55,
    "onePredTwoSuc": 26,
    "oneSuccessor": 73,
    "twoPred": 39,
    "twoPredOneSuc": 13,
    "twoEach": 19,
    "twoSuccessor": 54,
    "morePreds": 6,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 139,
    "BeginPhi": 3,
    "BranchCount": 127,
    "returnInt": 13,
    "CriticalCount": 30,
    "NumEdges": 181,
    "const32Bit": 164,
    "const64Bit": 40,
    "numConstZeroes": 45,
    "numConstOnes": 110,
    "UncondBranches": 73,
    "binaryConstArg": 60,
    "NumAShrInst": 0,
    "NumAddInst": 24,
    "NumAllocaInst": 73,
    "NumAndInst": 14,
    "BlockMid": 10,
    "BlockLow": 132,
    "NumBitCastInst": 2,
    "NumBrInst": 127,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 53,
    "NumLShrInst": 2,
    "NumLoadInst": 223,
    "NumMulInst": 5,
    "NumOrInst": 8,
    "NumPHIInst": 3,
    "NumRetInst": 15,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 12,
    "NumStoreInst": 139,
    "NumSubInst": 14,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 30,
    "TotalBlocks": 142,
    "TotalInsts": 804,
    "TotalMemInst": 479,
    "TotalFuncs": 23,
    "ArgsPhi": 6,
    "testUnary": 344
  },
  "baseline_oz_instcount": 807,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--jump-threading",
    "--adce",
    "--die",
    "--early-cse-memssa",
    "--gvn",
    "--nary-reassociate",
    "--lower-expect",
    "--globalopt",
    "--newgvn",
    "--correlated-propagation",
    "--simplifycfg",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--lower-guard-intrinsic",
          "--mergereturn",
          "--loop-data-prefetch",
          "--coro-elide",
          "--correlated-propagation",
          "--called-value-propagation",
          "--coro-early",
          "--alignment-from-assumptions",
          "--lowerinvoke",
          "--ipconstprop",
          "--adce",
          "--slsr",
          "--sccp",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--lower-guard-intrinsic",
      "--mergereturn",
      "--loop-data-prefetch",
      "--coro-elide",
      "--correlated-propagation",
      "--called-value-propagation",
      "--coro-early",
      "--alignment-from-assumptions",
      "--lowerinvoke",
      "--ipconstprop",
      "--adce",
      "--slsr",
      "--sccp",
      "--bdce"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}