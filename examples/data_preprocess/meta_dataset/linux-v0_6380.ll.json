{
  "program_id": "linux-v0_6380.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 44,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 11,
    "oneSuccessor": 43,
    "twoPred": 28,
    "twoPredOneSuc": 9,
    "twoEach": 18,
    "twoSuccessor": 30,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 0,
    "BranchCount": 73,
    "returnInt": 5,
    "CriticalCount": 16,
    "NumEdges": 103,
    "const32Bit": 116,
    "const64Bit": 1,
    "numConstZeroes": 61,
    "numConstOnes": 22,
    "UncondBranches": 43,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 16,
    "NumAndInst": 14,
    "BlockMid": 2,
    "BlockLow": 74,
    "NumBitCastInst": 1,
    "NumBrInst": 73,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 72,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 19,
    "TotalBlocks": 76,
    "TotalInsts": 295,
    "TotalMemInst": 156,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 110
  },
  "baseline_oz_instcount": 287,
  "knowledge_base_entry": [
    "--ipsccp",
    "--sccp",
    "--gvn",
    "--bdce",
    "--die",
    "--ipsccp",
    "--instsimplify",
    "--sccp",
    "--gvn",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--dce",
    "--jump-threading",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-reroll",
          "--load-store-vectorizer",
          "--irce",
          "--coro-elide",
          "--slp-vectorizer",
          "--globaldce",
          "--loop-instsimplify",
          "--reassociate",
          "--memcpyopt",
          "--ipsccp",
          "--attributor",
          "--lower-guard-intrinsic",
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--newgvn",
          "--loop-data-prefetch",
          "--loop-rotate",
          "--hotcoldsplit",
          "--prune-eh",
          "--gvn",
          "--simplifycfg",
          "--coro-split",
          "--loop-deletion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-reroll",
      "--load-store-vectorizer",
      "--irce",
      "--coro-elide",
      "--slp-vectorizer",
      "--globaldce",
      "--loop-instsimplify",
      "--reassociate",
      "--memcpyopt",
      "--ipsccp",
      "--attributor",
      "--lower-guard-intrinsic",
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--newgvn",
      "--loop-data-prefetch",
      "--loop-rotate",
      "--hotcoldsplit",
      "--prune-eh",
      "--gvn",
      "--simplifycfg",
      "--coro-split",
      "--loop-deletion"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}