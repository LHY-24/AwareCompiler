{
  "program_id": "linux-v0_10783.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 34,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 13,
    "oneSuccessor": 29,
    "twoPred": 17,
    "twoPredOneSuc": 8,
    "twoEach": 3,
    "twoSuccessor": 25,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 86,
    "BeginPhi": 1,
    "BranchCount": 54,
    "returnInt": 25,
    "CriticalCount": 19,
    "NumEdges": 79,
    "const32Bit": 271,
    "const64Bit": 28,
    "numConstZeroes": 96,
    "numConstOnes": 143,
    "UncondBranches": 29,
    "binaryConstArg": 27,
    "NumAShrInst": 2,
    "NumAddInst": 1,
    "NumAllocaInst": 112,
    "NumAndInst": 12,
    "BlockMid": 14,
    "BlockLow": 73,
    "NumBitCastInst": 12,
    "NumBrInst": 54,
    "NumCallInst": 61,
    "NumGetElementPtrInst": 56,
    "NumICmpInst": 19,
    "NumLShrInst": 1,
    "NumLoadInst": 209,
    "NumMulInst": 4,
    "NumOrInst": 5,
    "NumPHIInst": 1,
    "NumRetInst": 33,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 139,
    "NumSubInst": 0,
    "NumTruncInst": 17,
    "NumXorInst": 3,
    "NumZExtInst": 13,
    "TotalBlocks": 87,
    "TotalInsts": 778,
    "TotalMemInst": 577,
    "TotalFuncs": 48,
    "ArgsPhi": 2,
    "testUnary": 373
  },
  "baseline_oz_instcount": 759,
  "knowledge_base_entry": [
    "--newgvn",
    "--adce",
    "--aggressive-instcombine",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--die",
    "--die",
    "--aggressive-instcombine",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--bdce",
    "--mergefunc",
    "--mergefunc",
    "--newgvn",
    "--sroa",
    "--inline",
    "--ipsccp",
    "--jump-threading",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--instsimplify",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unswitch",
          "--loop-unroll-and-jam",
          "--bdce",
          "--loop-instsimplify",
          "--rpo-functionattrs",
          "--prune-eh",
          "--globalopt",
          "--elim-avail-extern",
          "--lowerinvoke",
          "--load-store-vectorizer",
          "--slsr",
          "--dce",
          "--lower-matrix-intrinsics",
          "--sccp",
          "--lcssa",
          "--inline",
          "--aggressive-instcombine",
          "--scalarizer",
          "--loweratomic",
          "--early-cse-memssa",
          "--coro-cleanup",
          "--loop-data-prefetch",
          "--alignment-from-assumptions",
          "--sroa",
          "--sancov",
          "--called-value-propagation",
          "--gvn",
          "--simple-loop-unswitch",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unswitch",
      "--loop-unroll-and-jam",
      "--bdce",
      "--loop-instsimplify",
      "--rpo-functionattrs",
      "--prune-eh",
      "--globalopt",
      "--elim-avail-extern",
      "--lowerinvoke",
      "--load-store-vectorizer",
      "--slsr",
      "--dce",
      "--lower-matrix-intrinsics",
      "--sccp",
      "--lcssa",
      "--inline",
      "--aggressive-instcombine",
      "--scalarizer",
      "--loweratomic",
      "--early-cse-memssa",
      "--coro-cleanup",
      "--loop-data-prefetch",
      "--alignment-from-assumptions",
      "--sroa",
      "--sancov",
      "--called-value-propagation",
      "--gvn",
      "--simple-loop-unswitch",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}