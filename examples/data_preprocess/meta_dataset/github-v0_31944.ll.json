{
  "program_id": "github-v0_31944.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 1,
    "oneSuccessor": 1,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 5,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 7,
    "CriticalCount": 2,
    "NumEdges": 5,
    "const32Bit": 20,
    "const64Bit": 0,
    "numConstZeroes": 5,
    "numConstOnes": 7,
    "UncondBranches": 1,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 3,
    "NumBitCastInst": 0,
    "NumBrInst": 3,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 1,
    "NumMulInst": 1,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 4,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 5,
    "TotalInsts": 56,
    "TotalMemInst": 21,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 13
  },
  "baseline_oz_instcount": 56,
  "knowledge_base_entry": [
    "--prune-eh",
    "--simplifycfg",
    "--nary-reassociate",
    "-loop-reduce",
    "--slp-vectorizer",
    "--jump-threading",
    "--loop-instsimplify",
    "--die",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--newgvn",
    "--bdce",
    "--reassociate",
    "--mergefunc",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--gvn",
    "--ipsccp",
    "--correlated-propagation",
    "--instcombine",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--instsimplify",
          "--loweratomic",
          "--mergeicmps",
          "--gvn-hoist",
          "--loop-simplifycfg",
          "--instnamer",
          "--canonicalize-aliases",
          "--attributor",
          "--constprop",
          "--rewrite-statepoints-for-gc",
          "--coro-split",
          "--callsite-splitting",
          "--insert-gcov-profiling",
          "--partially-inline-libcalls",
          "--partial-inliner",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--instsimplify",
      "--loweratomic",
      "--mergeicmps",
      "--gvn-hoist",
      "--loop-simplifycfg",
      "--instnamer",
      "--canonicalize-aliases",
      "--attributor",
      "--constprop",
      "--rewrite-statepoints-for-gc",
      "--coro-split",
      "--callsite-splitting",
      "--insert-gcov-profiling",
      "--partially-inline-libcalls",
      "--partial-inliner",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+7.1%"
  }
}