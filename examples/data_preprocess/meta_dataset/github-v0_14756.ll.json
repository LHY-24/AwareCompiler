{
  "program_id": "github-v0_14756.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 19,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 4,
    "oneSuccessor": 19,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 28,
    "BeginPhi": 2,
    "BranchCount": 29,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 39,
    "const32Bit": 32,
    "const64Bit": 0,
    "numConstZeroes": 10,
    "numConstOnes": 10,
    "UncondBranches": 19,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 6,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 29,
    "NumBitCastInst": 0,
    "NumBrInst": 29,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 11,
    "NumLShrInst": 4,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 20,
    "NumSubInst": 5,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 30,
    "TotalInsts": 130,
    "TotalMemInst": 61,
    "TotalFuncs": 1,
    "ArgsPhi": 4,
    "testUnary": 47
  },
  "baseline_oz_instcount": 130,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--bdce",
    "--simplifycfg",
    "--early-cse",
    "--dce",
    "--newgvn",
    "--mergefunc",
    "--ipsccp",
    "--loop-instsimplify",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--aggressive-instcombine",
          "--mergereturn",
          "--instcombine",
          "--slp-vectorizer",
          "--correlated-propagation",
          "--speculative-execution",
          "--lower-constant-intrinsics",
          "--loop-guard-widening",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--aggressive-instcombine",
      "--mergereturn",
      "--instcombine",
      "--slp-vectorizer",
      "--correlated-propagation",
      "--speculative-execution",
      "--lower-constant-intrinsics",
      "--loop-guard-widening",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}