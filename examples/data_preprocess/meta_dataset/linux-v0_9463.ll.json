{
  "program_id": "linux-v0_9463.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 63,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 19,
    "oneSuccessor": 46,
    "twoPred": 12,
    "twoPredOneSuc": 2,
    "twoEach": 7,
    "twoSuccessor": 36,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 103,
    "BeginPhi": 0,
    "BranchCount": 82,
    "returnInt": 41,
    "CriticalCount": 11,
    "NumEdges": 118,
    "const32Bit": 179,
    "const64Bit": 18,
    "numConstZeroes": 63,
    "numConstOnes": 76,
    "UncondBranches": 46,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 69,
    "NumAndInst": 11,
    "BlockMid": 12,
    "BlockLow": 91,
    "NumBitCastInst": 7,
    "NumBrInst": 82,
    "NumCallInst": 84,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 28,
    "NumLShrInst": 0,
    "NumLoadInst": 214,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 117,
    "NumSubInst": 0,
    "NumTruncInst": 22,
    "NumXorInst": 2,
    "NumZExtInst": 16,
    "TotalBlocks": 103,
    "TotalInsts": 711,
    "TotalMemInst": 508,
    "TotalFuncs": 41,
    "ArgsPhi": 0,
    "testUnary": 333
  },
  "baseline_oz_instcount": 710,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--loop-rotate",
    "--jump-threading",
    "--globalopt",
    "--globaldce",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--licm",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--ipsccp",
    "--loweratomic",
    "--early-cse-memssa",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--loop-versioning",
          "--globalsplit",
          "--flattencfg",
          "--tailcallelim",
          "--mldst-motion",
          "--coro-cleanup",
          "--gvn",
          "--loop-simplify",
          "--aggressive-instcombine",
          "--lower-guard-intrinsic",
          "--guard-widening",
          "--loop-rotate",
          "--gvn-hoist",
          "--callsite-splitting",
          "--separate-const-offset-from-gep",
          "--loop-sink",
          "--loop-idiom",
          "--sroa",
          "--mergeicmps",
          "--early-cse-memssa",
          "--loweratomic",
          "--div-rem-pairs",
          "--loop-interchange",
          "--sccp",
          "--dce",
          "--loop-unroll",
          "--loop-simplifycfg",
          "--loop-distribute",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--loop-versioning",
      "--globalsplit",
      "--flattencfg",
      "--tailcallelim",
      "--mldst-motion",
      "--coro-cleanup",
      "--gvn",
      "--loop-simplify",
      "--aggressive-instcombine",
      "--lower-guard-intrinsic",
      "--guard-widening",
      "--loop-rotate",
      "--gvn-hoist",
      "--callsite-splitting",
      "--separate-const-offset-from-gep",
      "--loop-sink",
      "--loop-idiom",
      "--sroa",
      "--mergeicmps",
      "--early-cse-memssa",
      "--loweratomic",
      "--div-rem-pairs",
      "--loop-interchange",
      "--sccp",
      "--dce",
      "--loop-unroll",
      "--loop-simplifycfg",
      "--loop-distribute",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}