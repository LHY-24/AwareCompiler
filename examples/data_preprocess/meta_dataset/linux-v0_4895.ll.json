{
  "program_id": "linux-v0_4895.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 40,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 10,
    "oneSuccessor": 35,
    "twoPred": 15,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 23,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 68,
    "BeginPhi": 3,
    "BranchCount": 58,
    "returnInt": 17,
    "CriticalCount": 15,
    "NumEdges": 81,
    "const32Bit": 164,
    "const64Bit": 13,
    "numConstZeroes": 62,
    "numConstOnes": 80,
    "UncondBranches": 35,
    "binaryConstArg": 18,
    "NumAShrInst": 1,
    "NumAddInst": 9,
    "NumAllocaInst": 61,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 62,
    "NumBitCastInst": 8,
    "NumBrInst": 58,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 164,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 13,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 97,
    "NumSubInst": 7,
    "NumTruncInst": 7,
    "NumXorInst": 1,
    "NumZExtInst": 13,
    "TotalBlocks": 71,
    "TotalInsts": 572,
    "TotalMemInst": 406,
    "TotalFuncs": 31,
    "ArgsPhi": 6,
    "testUnary": 262
  },
  "baseline_oz_instcount": 573,
  "knowledge_base_entry": [
    "--sccp",
    "--bdce",
    "--gvn-hoist",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--globalopt",
    "--mergefunc",
    "--die",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--ipsccp",
    "--elim-avail-extern",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--hotcoldsplit",
          "--ipsccp",
          "--always-inline",
          "--loweratomic",
          "--lowerinvoke",
          "--adce",
          "--prune-eh",
          "--lower-matrix-intrinsics",
          "--constmerge",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--hotcoldsplit",
      "--ipsccp",
      "--always-inline",
      "--loweratomic",
      "--lowerinvoke",
      "--adce",
      "--prune-eh",
      "--lower-matrix-intrinsics",
      "--constmerge",
      "--bdce"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}