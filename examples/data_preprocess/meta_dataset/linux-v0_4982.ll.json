{
  "program_id": "linux-v0_4982.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 80,
    "onePredOneSuc": 55,
    "onePredTwoSuc": 23,
    "oneSuccessor": 72,
    "twoPred": 21,
    "twoPredOneSuc": 13,
    "twoEach": 5,
    "twoSuccessor": 33,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 115,
    "BeginPhi": 0,
    "BranchCount": 105,
    "returnInt": 29,
    "CriticalCount": 28,
    "NumEdges": 172,
    "const32Bit": 230,
    "const64Bit": 23,
    "numConstZeroes": 99,
    "numConstOnes": 62,
    "UncondBranches": 72,
    "binaryConstArg": 39,
    "NumAShrInst": 1,
    "NumAddInst": 7,
    "NumAllocaInst": 50,
    "NumAndInst": 28,
    "BlockMid": 12,
    "BlockLow": 103,
    "NumBitCastInst": 1,
    "NumBrInst": 105,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 46,
    "NumICmpInst": 35,
    "NumLShrInst": 5,
    "NumLoadInst": 209,
    "NumMulInst": 2,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 153,
    "NumSubInst": 10,
    "NumTruncInst": 12,
    "NumXorInst": 4,
    "NumZExtInst": 62,
    "TotalBlocks": 115,
    "TotalInsts": 794,
    "TotalMemInst": 495,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 340
  },
  "baseline_oz_instcount": 794,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--dce",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--loop-fusion",
    "--gvn-hoist",
    "--flattencfg",
    "--newgvn",
    "--die",
    "--mergefunc",
    "--ipsccp",
    "--aggressive-instcombine",
    "--mergefunc",
    "--early-cse",
    "--gvn-hoist",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "-loop-reduce",
          "--aggressive-instcombine",
          "--load-store-vectorizer",
          "--partial-inliner",
          "--loop-unroll-and-jam",
          "--slsr",
          "--mergefunc",
          "--loop-load-elim",
          "--inline",
          "--simple-loop-unswitch",
          "--partially-inline-libcalls",
          "--loop-unroll",
          "--loop-rotate",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "-loop-reduce",
      "--aggressive-instcombine",
      "--load-store-vectorizer",
      "--partial-inliner",
      "--loop-unroll-and-jam",
      "--slsr",
      "--mergefunc",
      "--loop-load-elim",
      "--inline",
      "--simple-loop-unswitch",
      "--partially-inline-libcalls",
      "--loop-unroll",
      "--loop-rotate",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}