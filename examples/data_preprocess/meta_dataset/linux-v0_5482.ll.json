{
  "program_id": "linux-v0_5482.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 11,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 15,
    "returnInt": 21,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 126,
    "const64Bit": 39,
    "numConstZeroes": 76,
    "numConstOnes": 48,
    "UncondBranches": 11,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 30,
    "NumAndInst": 1,
    "BlockMid": 4,
    "BlockLow": 22,
    "NumBitCastInst": 7,
    "NumBrInst": 15,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 61,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 70,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 58,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 2,
    "NumZExtInst": 9,
    "TotalBlocks": 26,
    "TotalInsts": 313,
    "TotalMemInst": 247,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 129
  },
  "baseline_oz_instcount": 313,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--die",
    "--ipsccp",
    "--adce",
    "--lower-expect",
    "--gvn",
    "--mldst-motion",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--reassociate",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unswitch",
          "--loop-simplifycfg",
          "--globalsplit",
          "--alignment-from-assumptions",
          "--strip",
          "--globaldce",
          "--inferattrs",
          "--redundant-dbg-inst-elim",
          "--indvars",
          "--guard-widening",
          "--insert-gcov-profiling",
          "--loop-data-prefetch",
          "--hotcoldsplit",
          "--consthoist",
          "--tailcallelim",
          "--mem2reg",
          "--libcalls-shrinkwrap",
          "--aggressive-instcombine",
          "--loop-unroll-and-jam",
          "--mergereturn",
          "--rewrite-statepoints-for-gc",
          "--instsimplify",
          "--load-store-vectorizer",
          "--ee-instrument",
          "--canonicalize-aliases",
          "--instcombine",
          "--deadargelim",
          "--prune-eh",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unswitch",
      "--loop-simplifycfg",
      "--globalsplit",
      "--alignment-from-assumptions",
      "--strip",
      "--globaldce",
      "--inferattrs",
      "--redundant-dbg-inst-elim",
      "--indvars",
      "--guard-widening",
      "--insert-gcov-profiling",
      "--loop-data-prefetch",
      "--hotcoldsplit",
      "--consthoist",
      "--tailcallelim",
      "--mem2reg",
      "--libcalls-shrinkwrap",
      "--aggressive-instcombine",
      "--loop-unroll-and-jam",
      "--mergereturn",
      "--rewrite-statepoints-for-gc",
      "--instsimplify",
      "--load-store-vectorizer",
      "--ee-instrument",
      "--canonicalize-aliases",
      "--instcombine",
      "--deadargelim",
      "--prune-eh",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+4.5%"
  }
}