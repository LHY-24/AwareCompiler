{
  "program_id": "poj104-v1_69_1331.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 35,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 7,
    "oneSuccessor": 32,
    "twoPred": 17,
    "twoPredOneSuc": 6,
    "twoEach": 8,
    "twoSuccessor": 20,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 1,
    "BranchCount": 52,
    "returnInt": 18,
    "CriticalCount": 12,
    "NumEdges": 72,
    "const32Bit": 101,
    "const64Bit": 79,
    "numConstZeroes": 48,
    "numConstOnes": 68,
    "UncondBranches": 32,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 51,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 69,
    "NumBitCastInst": 72,
    "NumBrInst": 52,
    "NumCallInst": 86,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 124,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 24,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 67,
    "NumSubInst": 7,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 77,
    "TotalInsts": 573,
    "TotalMemInst": 365,
    "TotalFuncs": 40,
    "ArgsPhi": 2,
    "testUnary": 266
  },
  "baseline_oz_instcount": 181,
  "knowledge_base_entry": [
    "--flattencfg",
    "--elim-avail-extern",
    "--mergefunc",
    "--simplifycfg",
    "--instcombine",
    "--mem2reg",
    "--bdce",
    "--elim-avail-extern",
    "--flattencfg",
    "--mergefunc",
    "--flattencfg",
    "--jump-threading",
    "--simplifycfg",
    "--mem2reg",
    "--mldst-motion",
    "--inline",
    "--dse",
    "--ipsccp",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--licm",
    "--dse",
    "--lower-expect",
    "--ipsccp",
    "--instcombine",
    "--memcpyopt",
    "--newgvn",
    "--elim-avail-extern",
    "--sroa",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--newgvn",
    "--licm",
    "--dce",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse-memssa",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--inline",
    "--dse",
    "--gvn",
    "--dce",
    "--ipsccp",
    "--gvn",
    "--dse",
    "--gvn-hoist",
    "--globalopt",
    "--lower-expect",
    "--simplifycfg",
    "--instcombine",
    "--mem2reg",
    "--licm",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--newgvn",
    "--simplifycfg",
    "--ipsccp",
    "--inline",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--licm",
    "--newgvn",
    "--loop-fusion",
    "--early-cse",
    "--die",
    "--mergefunc",
    "--instcombine",
    "--reassociate",
    "--slp-vectorizer",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--dse",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--gvn",
    "--mergefunc",
    "--mergefunc",
    "--lower-expect",
    "--globalopt",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--loop-unroll-and-jam",
          "--sroa",
          "--slp-vectorizer",
          "--called-value-propagation",
          "--coro-split",
          "--loop-unroll",
          "--mergereturn",
          "--loop-predication",
          "--lower-constant-intrinsics",
          "--newgvn",
          "--hotcoldsplit",
          "--loop-rotate",
          "--instcombine",
          "--licm",
          "--inline",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+17.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--loop-unroll-and-jam",
      "--sroa",
      "--slp-vectorizer",
      "--called-value-propagation",
      "--coro-split",
      "--loop-unroll",
      "--mergereturn",
      "--loop-predication",
      "--lower-constant-intrinsics",
      "--newgvn",
      "--hotcoldsplit",
      "--loop-rotate",
      "--instcombine",
      "--licm",
      "--inline",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+17.7%"
  }
}