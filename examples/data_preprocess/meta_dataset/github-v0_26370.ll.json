{
  "program_id": "github-v0_26370.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 0,
    "oneSuccessor": 9,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 13,
    "const32Bit": 64,
    "const64Bit": 2,
    "numConstZeroes": 11,
    "numConstOnes": 51,
    "UncondBranches": 9,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 34,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 33,
    "NumBitCastInst": 0,
    "NumBrInst": 11,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 45,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 33,
    "TotalInsts": 198,
    "TotalMemInst": 143,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 70
  },
  "baseline_oz_instcount": 198,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--elim-avail-extern",
    "--instsimplify",
    "--adce",
    "--elim-avail-extern",
    "--prune-eh",
    "--elim-avail-extern",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--loop-deletion",
          "--newgvn",
          "--lower-guard-intrinsic",
          "--hotcoldsplit",
          "--instcombine",
          "--loop-unroll-and-jam",
          "--nary-reassociate",
          "--name-anon-globals",
          "--lowerinvoke",
          "--simple-loop-unswitch",
          "--instnamer",
          "--mergefunc",
          "--mem2reg",
          "-loop-reduce",
          "--pgo-memop-opt",
          "--loop-interchange"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+23.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--loop-deletion",
      "--newgvn",
      "--lower-guard-intrinsic",
      "--hotcoldsplit",
      "--instcombine",
      "--loop-unroll-and-jam",
      "--nary-reassociate",
      "--name-anon-globals",
      "--lowerinvoke",
      "--simple-loop-unswitch",
      "--instnamer",
      "--mergefunc",
      "--mem2reg",
      "-loop-reduce",
      "--pgo-memop-opt",
      "--loop-interchange"
    ],
    "performance_vs_Oz": "+23.7%"
  }
}