{
  "program_id": "github-v0_31524.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 2,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 4,
    "BranchCount": 9,
    "returnInt": 1,
    "CriticalCount": 8,
    "NumEdges": 15,
    "const32Bit": 14,
    "const64Bit": 0,
    "numConstZeroes": 8,
    "numConstOnes": 4,
    "UncondBranches": 3,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 1,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 9,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 6,
    "NumMulInst": 4,
    "NumOrInst": 1,
    "NumPHIInst": 8,
    "NumRetInst": 1,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 1,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 69,
    "TotalMemInst": 18,
    "TotalFuncs": 3,
    "ArgsPhi": 17,
    "testUnary": 14
  },
  "baseline_oz_instcount": 69,
  "knowledge_base_entry": [
    "--flattencfg",
    "--aggressive-instcombine",
    "--ipsccp",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--indvars",
    "--correlated-propagation",
    "--nary-reassociate",
    "--licm",
    "--loop-instsimplify",
    "--early-cse",
    "--early-cse",
    "-loop-reduce",
    "--instcombine",
    "--adce",
    "--gvn-hoist",
    "--instsimplify",
    "--die",
    "--aggressive-instcombine",
    "--jump-threading",
    "--inline",
    "--elim-avail-extern",
    "--ipsccp",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--early-cse",
    "--dse",
    "--nary-reassociate",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--strip-debug-declare",
          "--globaldce",
          "--tailcallelim",
          "--elim-avail-extern",
          "--ipsccp",
          "--simplifycfg",
          "--deadargelim",
          "--coro-elide",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--strip-debug-declare",
      "--globaldce",
      "--tailcallelim",
      "--elim-avail-extern",
      "--ipsccp",
      "--simplifycfg",
      "--deadargelim",
      "--coro-elide",
      "--bdce"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}