{
  "program_id": "linux-v0_13532.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 32,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 9,
    "oneSuccessor": 27,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 19,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 57,
    "BeginPhi": 2,
    "BranchCount": 46,
    "returnInt": 26,
    "CriticalCount": 8,
    "NumEdges": 65,
    "const32Bit": 188,
    "const64Bit": 60,
    "numConstZeroes": 121,
    "numConstOnes": 56,
    "UncondBranches": 27,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 38,
    "NumAndInst": 13,
    "BlockMid": 9,
    "BlockLow": 50,
    "NumBitCastInst": 8,
    "NumBrInst": 46,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 75,
    "NumICmpInst": 23,
    "NumLShrInst": 0,
    "NumLoadInst": 119,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 2,
    "NumRetInst": 13,
    "NumSExtInst": 2,
    "NumSelectInst": 3,
    "NumShlInst": 0,
    "NumStoreInst": 75,
    "NumSubInst": 2,
    "NumTruncInst": 18,
    "NumXorInst": 2,
    "NumZExtInst": 21,
    "TotalBlocks": 59,
    "TotalInsts": 521,
    "TotalMemInst": 350,
    "TotalFuncs": 25,
    "ArgsPhi": 4,
    "testUnary": 210
  },
  "baseline_oz_instcount": 521,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--bdce",
    "--aggressive-instcombine",
    "--licm",
    "--loop-rotate",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--licm",
    "--mldst-motion",
    "--gvn",
    "--jump-threading",
    "--nary-reassociate",
    "--loop-fusion",
    "--early-cse-memssa",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--name-anon-globals",
          "--loop-data-prefetch",
          "--bdce",
          "--gvn-hoist",
          "--slsr",
          "--ipconstprop",
          "--loop-reroll",
          "--float2int",
          "--load-store-vectorizer",
          "--reassociate",
          "--libcalls-shrinkwrap",
          "--loop-versioning",
          "--loop-simplifycfg",
          "--aggressive-instcombine",
          "--lower-widenable-condition",
          "--dse",
          "--instsimplify",
          "--lcssa",
          "--prune-eh",
          "--loop-rotate",
          "--loop-simplify",
          "--loop-versioning-licm",
          "--loop-load-elim",
          "--lowerinvoke",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--name-anon-globals",
      "--loop-data-prefetch",
      "--bdce",
      "--gvn-hoist",
      "--slsr",
      "--ipconstprop",
      "--loop-reroll",
      "--float2int",
      "--load-store-vectorizer",
      "--reassociate",
      "--libcalls-shrinkwrap",
      "--loop-versioning",
      "--loop-simplifycfg",
      "--aggressive-instcombine",
      "--lower-widenable-condition",
      "--dse",
      "--instsimplify",
      "--lcssa",
      "--prune-eh",
      "--loop-rotate",
      "--loop-simplify",
      "--loop-versioning-licm",
      "--loop-load-elim",
      "--lowerinvoke",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+4.6%"
  }
}