{
  "program_id": "linux-v0_13560.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 24,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 4,
    "oneSuccessor": 23,
    "twoPred": 9,
    "twoPredOneSuc": 1,
    "twoEach": 6,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 34,
    "BeginPhi": 6,
    "BranchCount": 34,
    "returnInt": 10,
    "CriticalCount": 2,
    "NumEdges": 45,
    "const32Bit": 109,
    "const64Bit": 6,
    "numConstZeroes": 37,
    "numConstOnes": 51,
    "UncondBranches": 23,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 40,
    "NumAndInst": 1,
    "BlockMid": 8,
    "BlockLow": 32,
    "NumBitCastInst": 7,
    "NumBrInst": 34,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 30,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 90,
    "NumMulInst": 1,
    "NumOrInst": 3,
    "NumPHIInst": 6,
    "NumRetInst": 6,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 44,
    "NumSubInst": 3,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 35,
    "TotalBlocks": 40,
    "TotalInsts": 339,
    "TotalMemInst": 218,
    "TotalFuncs": 29,
    "ArgsPhi": 12,
    "testUnary": 181
  },
  "baseline_oz_instcount": 339,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--gvn",
    "--inline",
    "--slp-vectorizer",
    "--newgvn",
    "--reassociate",
    "--sccp",
    "--simplifycfg",
    "--adce",
    "--instsimplify",
    "--load-store-vectorizer",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-split",
          "--aggressive-instcombine",
          "--inline",
          "--flattencfg",
          "--loop-data-prefetch",
          "--instcombine",
          "--memcpyopt",
          "--scalarizer",
          "--loop-sink",
          "--elim-avail-extern",
          "--always-inline",
          "--gvn",
          "--canonicalize-aliases",
          "--sccp",
          "--loop-unswitch",
          "--lower-expect",
          "--nary-reassociate",
          "--sroa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-split",
      "--aggressive-instcombine",
      "--inline",
      "--flattencfg",
      "--loop-data-prefetch",
      "--instcombine",
      "--memcpyopt",
      "--scalarizer",
      "--loop-sink",
      "--elim-avail-extern",
      "--always-inline",
      "--gvn",
      "--canonicalize-aliases",
      "--sccp",
      "--loop-unswitch",
      "--lower-expect",
      "--nary-reassociate",
      "--sroa"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}