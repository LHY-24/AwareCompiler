{
  "program_id": "linux-v0_10852.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 52,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 14,
    "oneSuccessor": 48,
    "twoPred": 15,
    "twoPredOneSuc": 6,
    "twoEach": 3,
    "twoSuccessor": 25,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 92,
    "BeginPhi": 0,
    "BranchCount": 73,
    "returnInt": 7,
    "CriticalCount": 24,
    "NumEdges": 108,
    "const32Bit": 288,
    "const64Bit": 15,
    "numConstZeroes": 140,
    "numConstOnes": 79,
    "UncondBranches": 48,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 59,
    "NumAndInst": 6,
    "BlockMid": 12,
    "BlockLow": 80,
    "NumBitCastInst": 25,
    "NumBrInst": 73,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 97,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 183,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 87,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 20,
    "TotalBlocks": 92,
    "TotalInsts": 642,
    "TotalMemInst": 465,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 292
  },
  "baseline_oz_instcount": 642,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--sroa",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--globalopt",
    "--reassociate",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--lower-constant-intrinsics",
          "--dse",
          "--loop-simplifycfg",
          "--strip-dead-prototypes",
          "--speculative-execution",
          "--aggressive-instcombine",
          "--irce",
          "--load-store-vectorizer",
          "--bdce",
          "--mergeicmps",
          "--loop-versioning",
          "--attributor",
          "--argpromotion",
          "--constmerge",
          "--inline",
          "--lower-expect",
          "--lower-guard-intrinsic",
          "--pgo-memop-opt",
          "--reassociate",
          "--constprop",
          "--name-anon-globals",
          "--loop-unswitch",
          "--lcssa",
          "--always-inline",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--lower-constant-intrinsics",
      "--dse",
      "--loop-simplifycfg",
      "--strip-dead-prototypes",
      "--speculative-execution",
      "--aggressive-instcombine",
      "--irce",
      "--load-store-vectorizer",
      "--bdce",
      "--mergeicmps",
      "--loop-versioning",
      "--attributor",
      "--argpromotion",
      "--constmerge",
      "--inline",
      "--lower-expect",
      "--lower-guard-intrinsic",
      "--pgo-memop-opt",
      "--reassociate",
      "--constprop",
      "--name-anon-globals",
      "--loop-unswitch",
      "--lcssa",
      "--always-inline",
      "--barrier"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}