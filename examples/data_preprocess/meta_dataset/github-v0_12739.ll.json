{
  "program_id": "github-v0_12739.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 26,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 2,
    "oneSuccessor": 26,
    "twoPred": 11,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 4,
    "BranchCount": 37,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 51,
    "const32Bit": 90,
    "const64Bit": 4,
    "numConstZeroes": 14,
    "numConstOnes": 28,
    "UncondBranches": 26,
    "binaryConstArg": 49,
    "NumAShrInst": 3,
    "NumAddInst": 8,
    "NumAllocaInst": 22,
    "NumAndInst": 13,
    "BlockMid": 3,
    "BlockLow": 42,
    "NumBitCastInst": 0,
    "NumBrInst": 37,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 11,
    "NumLShrInst": 2,
    "NumLoadInst": 67,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 4,
    "NumRetInst": 7,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 43,
    "NumSubInst": 9,
    "NumTruncInst": 14,
    "NumXorInst": 14,
    "NumZExtInst": 24,
    "TotalBlocks": 45,
    "TotalInsts": 300,
    "TotalMemInst": 139,
    "TotalFuncs": 7,
    "ArgsPhi": 8,
    "testUnary": 132
  },
  "baseline_oz_instcount": 300,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--lower-expect",
    "--dce",
    "--gvn",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--jump-threading",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--globaldce",
          "--infer-address-spaces",
          "--lower-constant-intrinsics",
          "--irce",
          "--break-crit-edges",
          "--simple-loop-unswitch",
          "--reassociate",
          "-loop-reduce",
          "--lcssa",
          "--strip",
          "--loop-sink",
          "--insert-gcov-profiling",
          "--loop-fusion",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--forceattrs",
          "--instsimplify",
          "--indvars",
          "--simplifycfg",
          "--slsr",
          "--reg2mem",
          "--argpromotion",
          "--loop-predication",
          "--sccp",
          "--early-cse-memssa",
          "--inline",
          "--loop-data-prefetch",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--globaldce",
      "--infer-address-spaces",
      "--lower-constant-intrinsics",
      "--irce",
      "--break-crit-edges",
      "--simple-loop-unswitch",
      "--reassociate",
      "-loop-reduce",
      "--lcssa",
      "--strip",
      "--loop-sink",
      "--insert-gcov-profiling",
      "--loop-fusion",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--forceattrs",
      "--instsimplify",
      "--indvars",
      "--simplifycfg",
      "--slsr",
      "--reg2mem",
      "--argpromotion",
      "--loop-predication",
      "--sccp",
      "--early-cse-memssa",
      "--inline",
      "--loop-data-prefetch",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}