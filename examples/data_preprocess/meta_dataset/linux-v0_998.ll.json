{
  "program_id": "linux-v0_998.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 55,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 4,
    "oneSuccessor": 56,
    "twoPred": 12,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 13,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 3,
    "BranchCount": 69,
    "returnInt": 2,
    "CriticalCount": 9,
    "NumEdges": 92,
    "const32Bit": 168,
    "const64Bit": 24,
    "numConstZeroes": 88,
    "numConstOnes": 77,
    "UncondBranches": 56,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 47,
    "NumAndInst": 2,
    "BlockMid": 7,
    "BlockLow": 73,
    "NumBitCastInst": 47,
    "NumBrInst": 69,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 103,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 3,
    "NumRetInst": 9,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 59,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 13,
    "NumZExtInst": 6,
    "TotalBlocks": 80,
    "TotalInsts": 471,
    "TotalMemInst": 291,
    "TotalFuncs": 14,
    "ArgsPhi": 6,
    "testUnary": 212
  },
  "baseline_oz_instcount": 456,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--globalopt",
    "--early-cse",
    "--licm",
    "--ipsccp",
    "--early-cse-memssa",
    "--lower-expect",
    "--dce",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--reassociate",
          "--loop-unroll",
          "--cross-dso-cfi",
          "--partially-inline-libcalls",
          "--globaldce",
          "--prune-eh",
          "--lcssa",
          "--coro-early",
          "--coro-cleanup",
          "--loop-predication",
          "--constmerge",
          "--callsite-splitting",
          "--mergefunc",
          "--loop-unroll-and-jam",
          "--scalarizer",
          "--constprop",
          "--redundant-dbg-inst-elim",
          "--strip-nondebug",
          "--add-discriminators",
          "--instcombine",
          "--irce",
          "--load-store-vectorizer",
          "--argpromotion",
          "--gvn-hoist",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--reassociate",
      "--loop-unroll",
      "--cross-dso-cfi",
      "--partially-inline-libcalls",
      "--globaldce",
      "--prune-eh",
      "--lcssa",
      "--coro-early",
      "--coro-cleanup",
      "--loop-predication",
      "--constmerge",
      "--callsite-splitting",
      "--mergefunc",
      "--loop-unroll-and-jam",
      "--scalarizer",
      "--constprop",
      "--redundant-dbg-inst-elim",
      "--strip-nondebug",
      "--add-discriminators",
      "--instcombine",
      "--irce",
      "--load-store-vectorizer",
      "--argpromotion",
      "--gvn-hoist",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}