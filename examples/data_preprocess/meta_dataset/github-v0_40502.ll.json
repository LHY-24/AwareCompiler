{
  "program_id": "github-v0_40502.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 43,
    "const64Bit": 41,
    "numConstZeroes": 45,
    "numConstOnes": 26,
    "UncondBranches": 11,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 12,
    "NumAndInst": 5,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 4,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 6,
    "NumLShrInst": 7,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 3,
    "TotalBlocks": 21,
    "TotalInsts": 155,
    "TotalMemInst": 93,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 55
  },
  "baseline_oz_instcount": 155,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--jump-threading",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-rotate",
          "--nary-reassociate",
          "--pgo-memop-opt",
          "--consthoist",
          "--irce",
          "--lower-guard-intrinsic",
          "--name-anon-globals",
          "--loop-distribute",
          "--gvn",
          "--add-discriminators",
          "--reassociate",
          "--load-store-vectorizer",
          "--lowerinvoke",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-rotate",
      "--nary-reassociate",
      "--pgo-memop-opt",
      "--consthoist",
      "--irce",
      "--lower-guard-intrinsic",
      "--name-anon-globals",
      "--loop-distribute",
      "--gvn",
      "--add-discriminators",
      "--reassociate",
      "--load-store-vectorizer",
      "--lowerinvoke",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+3.9%"
  }
}