{
  "program_id": "poj104-v1_59_205.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 8,
    "oneSuccessor": 27,
    "twoPred": 8,
    "twoPredOneSuc": 1,
    "twoEach": 7,
    "twoSuccessor": 18,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 0,
    "BranchCount": 45,
    "returnInt": 1,
    "CriticalCount": 11,
    "NumEdges": 63,
    "const32Bit": 60,
    "const64Bit": 51,
    "numConstZeroes": 48,
    "numConstOnes": 42,
    "UncondBranches": 27,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 20,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 41,
    "NumBitCastInst": 17,
    "NumBrInst": 45,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 75,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 40,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 30,
    "NumSubInst": 8,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 48,
    "TotalInsts": 323,
    "TotalMemInst": 172,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 141
  },
  "baseline_oz_instcount": 144,
  "knowledge_base_entry": [
    "--inferattrs",
    "--gvn",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--loop-reroll",
    "--newgvn",
    "--instcombine",
    "--sccp",
    "--newgvn",
    "--simplifycfg",
    "--mldst-motion",
    "--sroa",
    "--mergefunc",
    "--sroa",
    "--loop-deletion",
    "--newgvn",
    "--sccp",
    "--instcombine",
    "--gvn",
    "--slp-vectorizer",
    "--reassociate",
    "--sroa",
    "--bdce",
    "--loop-simplifycfg",
    "--early-cse-memssa",
    "--early-cse",
    "--memcpyopt",
    "--instcombine",
    "--memcpyopt",
    "--sroa",
    "--reassociate",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--early-cse-memssa",
    "--dce",
    "--early-cse",
    "--instsimplify",
    "--early-cse",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--dse",
    "--early-cse",
    "--flattencfg",
    "--jump-threading",
    "--adce",
    "--dce",
    "--jump-threading",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--newgvn",
    "--licm",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--adce",
    "--ipsccp",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--simplifycfg",
    "--gvn-hoist",
    "--loop-deletion",
    "--newgvn",
    "--sccp",
    "--instcombine",
    "--gvn",
    "--slp-vectorizer",
    "--reassociate",
    "--sroa",
    "--bdce",
    "--loop-simplifycfg",
    "--early-cse-memssa",
    "--early-cse",
    "--memcpyopt",
    "--instcombine",
    "--memcpyopt",
    "--sroa",
    "--reassociate",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--bdce",
    "--jump-threading",
    "--loop-deletion",
    "--early-cse",
    "--instsimplify",
    "--reassociate",
    "--slsr",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--gvn",
    "--die",
    "--lower-expect",
    "--die",
    "--sroa",
    "--memcpyopt",
    "--jump-threading",
    "--globalopt",
    "--reassociate",
    "--slp-vectorizer",
    "--inline",
    "--mldst-motion",
    "--sroa",
    "--mergefunc",
    "--sroa",
    "--loop-deletion",
    "--newgvn",
    "--sccp",
    "--instcombine",
    "--gvn",
    "--slp-vectorizer",
    "--reassociate",
    "--slsr",
    "--early-cse",
    "--reassociate",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--mergefunc",
    "--correlated-propagation",
    "--gvn",
    "--instcombine",
    "--bdce",
    "--gvn-hoist",
    "--correlated-propagation",
    "--simplifycfg",
    "--slsr",
    "--simplifycfg",
    "--slp-vectorizer",
    "--die",
    "--ipsccp",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-matrix-intrinsics",
          "--partially-inline-libcalls",
          "--redundant-dbg-inst-elim",
          "--instcombine",
          "--load-store-vectorizer",
          "--attributor",
          "--jump-threading",
          "--called-value-propagation",
          "--gvn-hoist",
          "--loop-unroll",
          "--name-anon-globals",
          "--lowerinvoke",
          "--guard-widening",
          "--globalsplit",
          "--tailcallelim",
          "--gvn",
          "--inferattrs",
          "--globaldce",
          "--dse",
          "--prune-eh",
          "--simple-loop-unswitch",
          "--partial-inliner",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-matrix-intrinsics",
      "--partially-inline-libcalls",
      "--redundant-dbg-inst-elim",
      "--instcombine",
      "--load-store-vectorizer",
      "--attributor",
      "--jump-threading",
      "--called-value-propagation",
      "--gvn-hoist",
      "--loop-unroll",
      "--name-anon-globals",
      "--lowerinvoke",
      "--guard-widening",
      "--globalsplit",
      "--tailcallelim",
      "--gvn",
      "--inferattrs",
      "--globaldce",
      "--dse",
      "--prune-eh",
      "--simple-loop-unswitch",
      "--partial-inliner",
      "--newgvn"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}