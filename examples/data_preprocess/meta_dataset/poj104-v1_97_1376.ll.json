{
  "program_id": "poj104-v1_97_1376.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 3,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 17,
    "const64Bit": 2,
    "numConstZeroes": 2,
    "numConstOnes": 2,
    "UncondBranches": 0,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 2,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 2,
    "NumBitCastInst": 2,
    "NumBrInst": 0,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 7,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 1,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 3,
    "TotalInsts": 36,
    "TotalMemInst": 17,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 11
  },
  "baseline_oz_instcount": 23,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--instcombine",
    "--loop-deletion",
    "--newgvn",
    "--sccp",
    "--inline",
    "--instcombine",
    "--gvn-hoist",
    "--slsr",
    "--newgvn",
    "--aggressive-instcombine",
    "--sroa",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--inline",
    "--newgvn",
    "--loop-fusion",
    "--jump-threading",
    "--aggressive-instcombine",
    "--sroa",
    "--early-cse",
    "--aggressive-instcombine",
    "--dse",
    "--loop-simplifycfg",
    "--globalopt",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--partially-inline-libcalls",
          "-loop-reduce",
          "--ipsccp",
          "--infer-address-spaces",
          "--name-anon-globals",
          "--break-crit-edges",
          "--loop-distribute",
          "--called-value-propagation",
          "--mldst-motion",
          "--inline",
          "--rewrite-statepoints-for-gc",
          "--sancov",
          "--bdce",
          "--load-store-vectorizer",
          "--inferattrs",
          "--instnamer",
          "--gvn",
          "--lower-expect",
          "--mem2reg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--partially-inline-libcalls",
      "-loop-reduce",
      "--ipsccp",
      "--infer-address-spaces",
      "--name-anon-globals",
      "--break-crit-edges",
      "--loop-distribute",
      "--called-value-propagation",
      "--mldst-motion",
      "--inline",
      "--rewrite-statepoints-for-gc",
      "--sancov",
      "--bdce",
      "--load-store-vectorizer",
      "--inferattrs",
      "--instnamer",
      "--gvn",
      "--lower-expect",
      "--mem2reg"
    ],
    "performance_vs_Oz": "+4.3%"
  }
}