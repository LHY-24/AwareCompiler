{
  "program_id": "tensorflow-v0_370.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 8,
    "onePred": 30,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 10,
    "oneSuccessor": 20,
    "twoPred": 16,
    "twoPredOneSuc": 2,
    "twoEach": 12,
    "twoSuccessor": 25,
    "morePreds": 1,
    "BB03Phi": 10,
    "BBHiPhi": 1,
    "BBNoPhi": 44,
    "BeginPhi": 11,
    "BranchCount": 45,
    "returnInt": 8,
    "CriticalCount": 20,
    "NumEdges": 70,
    "const32Bit": 37,
    "const64Bit": 32,
    "numConstZeroes": 44,
    "numConstOnes": 24,
    "UncondBranches": 20,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 54,
    "NumBitCastInst": 5,
    "NumBrInst": 45,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 19,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 17,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 17,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 55,
    "TotalInsts": 210,
    "TotalMemInst": 90,
    "TotalFuncs": 19,
    "ArgsPhi": 40,
    "testUnary": 32
  },
  "baseline_oz_instcount": 199,
  "knowledge_base_entry": [
    "--mergereturn",
    "--jump-threading",
    "--mergefunc",
    "--sroa",
    "--inline",
    "--sccp",
    "--inline",
    "--early-cse-memssa",
    "--simplifycfg",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--sroa",
    "--instsimplify",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globaldce",
          "--mldst-motion",
          "--barrier",
          "--gvn-hoist",
          "--mergefunc",
          "--simplifycfg",
          "--deadargelim",
          "--coro-elide",
          "--slsr",
          "--instnamer",
          "--coro-early",
          "--div-rem-pairs",
          "--instcombine",
          "--constprop",
          "--coro-cleanup",
          "--gvn",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globaldce",
      "--mldst-motion",
      "--barrier",
      "--gvn-hoist",
      "--mergefunc",
      "--simplifycfg",
      "--deadargelim",
      "--coro-elide",
      "--slsr",
      "--instnamer",
      "--coro-early",
      "--div-rem-pairs",
      "--instcombine",
      "--constprop",
      "--coro-cleanup",
      "--gvn",
      "--constmerge"
    ],
    "performance_vs_Oz": "+4.0%"
  }
}