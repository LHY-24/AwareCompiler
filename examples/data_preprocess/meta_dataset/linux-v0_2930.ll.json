{
  "program_id": "linux-v0_2930.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 39,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 8,
    "oneSuccessor": 37,
    "twoPred": 9,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 13,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 62,
    "BeginPhi": 1,
    "BranchCount": 50,
    "returnInt": 11,
    "CriticalCount": 5,
    "NumEdges": 68,
    "const32Bit": 198,
    "const64Bit": 18,
    "numConstZeroes": 99,
    "numConstOnes": 74,
    "UncondBranches": 37,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 54,
    "NumAndInst": 1,
    "BlockMid": 10,
    "BlockLow": 53,
    "NumBitCastInst": 18,
    "NumBrInst": 50,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 73,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 141,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 12,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 72,
    "NumSubInst": 6,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 63,
    "TotalInsts": 493,
    "TotalMemInst": 370,
    "TotalFuncs": 24,
    "ArgsPhi": 2,
    "testUnary": 231
  },
  "baseline_oz_instcount": 493,
  "knowledge_base_entry": [
    "--early-cse",
    "--inline",
    "--elim-avail-extern",
    "--lower-expect",
    "--ipsccp",
    "--flattencfg",
    "--mergefunc",
    "--mergefunc",
    "--reassociate",
    "--adce",
    "--lower-expect",
    "--prune-eh",
    "--instcombine",
    "--globalopt",
    "--aggressive-instcombine",
    "--dse",
    "--sroa",
    "--gvn-hoist",
    "--mldst-motion",
    "--instsimplify",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--slsr",
    "--simplifycfg",
    "-loop-reduce",
    "--instcombine",
    "--mergefunc",
    "--adce",
    "--lower-expect",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-deletion",
          "--dse",
          "--mergefunc",
          "--loop-unroll-and-jam",
          "--aggressive-instcombine",
          "--sink",
          "--coro-early",
          "--globalopt",
          "--newgvn",
          "--loop-idiom",
          "--lower-matrix-intrinsics",
          "--lower-constant-intrinsics",
          "--loop-fusion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-deletion",
      "--dse",
      "--mergefunc",
      "--loop-unroll-and-jam",
      "--aggressive-instcombine",
      "--sink",
      "--coro-early",
      "--globalopt",
      "--newgvn",
      "--loop-idiom",
      "--lower-matrix-intrinsics",
      "--lower-constant-intrinsics",
      "--loop-fusion"
    ],
    "performance_vs_Oz": "+3.0%"
  }
}