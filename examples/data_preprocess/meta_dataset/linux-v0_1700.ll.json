{
  "program_id": "linux-v0_1700.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 18,
    "oneSuccessor": 38,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 23,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 73,
    "BeginPhi": 0,
    "BranchCount": 61,
    "returnInt": 26,
    "CriticalCount": 3,
    "NumEdges": 84,
    "const32Bit": 169,
    "const64Bit": 17,
    "numConstZeroes": 44,
    "numConstOnes": 85,
    "UncondBranches": 38,
    "binaryConstArg": 42,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 71,
    "NumAndInst": 9,
    "BlockMid": 12,
    "BlockLow": 61,
    "NumBitCastInst": 4,
    "NumBrInst": 61,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 27,
    "NumLShrInst": 3,
    "NumLoadInst": 134,
    "NumMulInst": 8,
    "NumOrInst": 8,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 99,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 6,
    "NumZExtInst": 12,
    "TotalBlocks": 73,
    "TotalInsts": 522,
    "TotalMemInst": 351,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 228
  },
  "baseline_oz_instcount": 522,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--inline",
    "--sccp",
    "--instsimplify",
    "--prune-eh",
    "--sroa",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--elim-avail-extern",
    "--reassociate",
    "--jump-threading",
    "-loop-reduce",
    "--slp-vectorizer",
    "--bdce",
    "--slp-vectorizer",
    "--adce",
    "--loop-instsimplify",
    "--newgvn",
    "--globalopt",
    "--correlated-propagation",
    "--globalopt",
    "--loop-simplifycfg",
    "--bdce",
    "--aggressive-instcombine",
    "--bdce",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inject-tli-mappings",
          "--prune-eh",
          "--canonicalize-aliases",
          "--redundant-dbg-inst-elim",
          "--flattencfg",
          "--reassociate",
          "--always-inline",
          "--loop-load-elim",
          "--adce",
          "--callsite-splitting",
          "--loop-unswitch",
          "--loop-data-prefetch",
          "--constmerge",
          "--barrier",
          "--post-inline-ee-instrument",
          "--loop-unroll",
          "--aggressive-instcombine",
          "--loop-unroll-and-jam",
          "--consthoist",
          "--called-value-propagation",
          "--deadargelim",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inject-tli-mappings",
      "--prune-eh",
      "--canonicalize-aliases",
      "--redundant-dbg-inst-elim",
      "--flattencfg",
      "--reassociate",
      "--always-inline",
      "--loop-load-elim",
      "--adce",
      "--callsite-splitting",
      "--loop-unswitch",
      "--loop-data-prefetch",
      "--constmerge",
      "--barrier",
      "--post-inline-ee-instrument",
      "--loop-unroll",
      "--aggressive-instcombine",
      "--loop-unroll-and-jam",
      "--consthoist",
      "--called-value-propagation",
      "--deadargelim",
      "--globalopt"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}