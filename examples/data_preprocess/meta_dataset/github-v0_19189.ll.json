{
  "program_id": "github-v0_19189.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 4,
    "oneSuccessor": 23,
    "twoPred": 13,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 13,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 0,
    "BranchCount": 36,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 49,
    "const32Bit": 188,
    "const64Bit": 15,
    "numConstZeroes": 73,
    "numConstOnes": 82,
    "UncondBranches": 23,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 79,
    "NumAndInst": 0,
    "BlockMid": 10,
    "BlockLow": 49,
    "NumBitCastInst": 18,
    "NumBrInst": 36,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 144,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 98,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 59,
    "TotalInsts": 490,
    "TotalMemInst": 388,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 246
  },
  "baseline_oz_instcount": 490,
  "knowledge_base_entry": [
    "--dce",
    "--aggressive-instcombine",
    "--mergefunc",
    "--newgvn",
    "--newgvn",
    "--correlated-propagation",
    "--jump-threading",
    "--inline",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--bdce",
    "--sroa",
    "--instcombine",
    "--lower-expect",
    "--loop-rotate",
    "--early-cse-memssa",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--mergereturn",
          "--rpo-functionattrs",
          "--loop-data-prefetch",
          "--post-inline-ee-instrument",
          "--correlated-propagation",
          "--globalopt",
          "--loop-vectorize",
          "--sink",
          "--constprop",
          "--mergefunc",
          "--loop-versioning",
          "--ee-instrument",
          "--die",
          "--memcpyopt",
          "--strip-nondebug",
          "--aggressive-instcombine",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--mergereturn",
      "--rpo-functionattrs",
      "--loop-data-prefetch",
      "--post-inline-ee-instrument",
      "--correlated-propagation",
      "--globalopt",
      "--loop-vectorize",
      "--sink",
      "--constprop",
      "--mergefunc",
      "--loop-versioning",
      "--ee-instrument",
      "--die",
      "--memcpyopt",
      "--strip-nondebug",
      "--aggressive-instcombine",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}