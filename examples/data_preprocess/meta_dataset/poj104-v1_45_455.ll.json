{
  "program_id": "poj104-v1_45_455.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 15,
    "returnInt": 4,
    "CriticalCount": 3,
    "NumEdges": 20,
    "const32Bit": 18,
    "const64Bit": 18,
    "numConstZeroes": 11,
    "numConstOnes": 11,
    "UncondBranches": 10,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 16,
    "NumBitCastInst": 14,
    "NumBrInst": 15,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 26,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 18,
    "TotalInsts": 122,
    "TotalMemInst": 71,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 59
  },
  "baseline_oz_instcount": 50,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--dse",
    "--adce",
    "--mem2reg",
    "--memcpyopt",
    "--loop-reroll",
    "--mergefunc",
    "--dse",
    "--adce",
    "--mem2reg",
    "--bdce",
    "--instcombine",
    "--mldst-motion",
    "--instcombine",
    "--instsimplify",
    "--licm",
    "--mldst-motion",
    "--instcombine",
    "--licm",
    "--jump-threading",
    "--sroa",
    "--inline",
    "--loop-simplifycfg",
    "--instcombine",
    "--aggressive-instcombine",
    "--prune-eh",
    "--inline",
    "--dse",
    "--load-store-vectorizer",
    "--licm",
    "--sroa",
    "--sccp",
    "--inline",
    "--reassociate",
    "--newgvn",
    "--dse",
    "--early-cse-memssa",
    "--instcombine",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--dse",
    "--lower-expect",
    "--sccp",
    "--mem2reg",
    "--memcpyopt",
    "--loop-reroll",
    "--mergefunc",
    "--licm",
    "--sccp",
    "--instsimplify",
    "--mergefunc",
    "--mergefunc",
    "--dce",
    "--loop-simplifycfg",
    "--lower-expect",
    "--sccp",
    "--instcombine",
    "--load-store-vectorizer",
    "--inline",
    "--ipsccp",
    "--elim-avail-extern",
    "--sccp",
    "--instcombine",
    "--inline",
    "--simplifycfg",
    "--loop-deletion",
    "--instcombine",
    "--early-cse",
    "--instsimplify",
    "--simplifycfg",
    "--mergefunc",
    "--simplifycfg",
    "--nary-reassociate",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--mem2reg",
          "--instnamer",
          "--hotcoldsplit",
          "--loweratomic",
          "--inject-tli-mappings",
          "--partially-inline-libcalls",
          "--lower-matrix-intrinsics",
          "--constmerge",
          "--lower-guard-intrinsic",
          "--loop-load-elim",
          "--instcombine",
          "--alignment-from-assumptions",
          "--loop-simplifycfg",
          "--loop-fusion",
          "--inline",
          "--rpo-functionattrs",
          "--loop-reroll",
          "--simplifycfg",
          "--loop-data-prefetch",
          "--newgvn",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--mem2reg",
      "--instnamer",
      "--hotcoldsplit",
      "--loweratomic",
      "--inject-tli-mappings",
      "--partially-inline-libcalls",
      "--lower-matrix-intrinsics",
      "--constmerge",
      "--lower-guard-intrinsic",
      "--loop-load-elim",
      "--instcombine",
      "--alignment-from-assumptions",
      "--loop-simplifycfg",
      "--loop-fusion",
      "--inline",
      "--rpo-functionattrs",
      "--loop-reroll",
      "--simplifycfg",
      "--loop-data-prefetch",
      "--newgvn",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}