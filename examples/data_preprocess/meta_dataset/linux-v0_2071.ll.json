{
  "program_id": "linux-v0_2071.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 33,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 9,
    "oneSuccessor": 30,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 0,
    "BranchCount": 44,
    "returnInt": 16,
    "CriticalCount": 4,
    "NumEdges": 58,
    "const32Bit": 174,
    "const64Bit": 10,
    "numConstZeroes": 66,
    "numConstOnes": 81,
    "UncondBranches": 30,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 66,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 59,
    "NumBitCastInst": 9,
    "NumBrInst": 44,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 113,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 82,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 64,
    "TotalInsts": 431,
    "TotalMemInst": 336,
    "TotalFuncs": 39,
    "ArgsPhi": 0,
    "testUnary": 194
  },
  "baseline_oz_instcount": 419,
  "knowledge_base_entry": [
    "--reassociate",
    "--ipsccp",
    "--globaldce",
    "--ipsccp",
    "--dce",
    "--aggressive-instcombine",
    "--lower-expect",
    "--sccp",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-cleanup",
          "--load-store-vectorizer",
          "--strip",
          "--aggressive-instcombine",
          "--memcpyopt",
          "--strip-nondebug",
          "--float2int",
          "--instcombine",
          "--ipsccp",
          "--lower-matrix-intrinsics",
          "--coro-elide",
          "--bdce",
          "--separate-const-offset-from-gep",
          "--name-anon-globals",
          "--redundant-dbg-inst-elim",
          "--inline",
          "--inject-tli-mappings",
          "--simplifycfg",
          "--dse",
          "--strip-debug-declare",
          "--hotcoldsplit",
          "--loop-guard-widening",
          "--instnamer",
          "--loop-data-prefetch",
          "--rewrite-statepoints-for-gc",
          "--inferattrs",
          "--mem2reg",
          "--sccp",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-cleanup",
      "--load-store-vectorizer",
      "--strip",
      "--aggressive-instcombine",
      "--memcpyopt",
      "--strip-nondebug",
      "--float2int",
      "--instcombine",
      "--ipsccp",
      "--lower-matrix-intrinsics",
      "--coro-elide",
      "--bdce",
      "--separate-const-offset-from-gep",
      "--name-anon-globals",
      "--redundant-dbg-inst-elim",
      "--inline",
      "--inject-tli-mappings",
      "--simplifycfg",
      "--dse",
      "--strip-debug-declare",
      "--hotcoldsplit",
      "--loop-guard-widening",
      "--instnamer",
      "--loop-data-prefetch",
      "--rewrite-statepoints-for-gc",
      "--inferattrs",
      "--mem2reg",
      "--sccp",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}