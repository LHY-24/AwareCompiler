{
  "program_id": "poj104-v1_3_1522.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 5,
    "CriticalCount": 3,
    "NumEdges": 27,
    "const32Bit": 20,
    "const64Bit": 19,
    "numConstZeroes": 12,
    "numConstOnes": 14,
    "UncondBranches": 13,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 21,
    "NumBitCastInst": 12,
    "NumBrInst": 20,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 23,
    "TotalInsts": 131,
    "TotalMemInst": 72,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 55
  },
  "baseline_oz_instcount": 89,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--jump-threading",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--mergefunc",
    "--globaldce",
    "--mergefunc",
    "--correlated-propagation",
    "--loop-reroll",
    "--loop-fusion",
    "--load-store-vectorizer",
    "--reassociate",
    "--die",
    "--inline",
    "--gvn-hoist",
    "--correlated-propagation",
    "--dse",
    "--bdce",
    "--elim-avail-extern",
    "--prune-eh",
    "--simplifycfg",
    "--nary-reassociate",
    "--dse",
    "--instsimplify",
    "--early-cse",
    "--sroa",
    "--elim-avail-extern",
    "--gvn",
    "--lower-constant-intrinsics",
    "--die",
    "--loop-instsimplify",
    "--sccp",
    "--mem2reg",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--mergefunc",
    "--correlated-propagation",
    "--simplifycfg",
    "--early-cse",
    "--flattencfg",
    "--newgvn",
    "--elim-avail-extern",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--instnamer",
          "--reg2mem",
          "--mergereturn",
          "--loop-distribute",
          "--mergeicmps",
          "--mem2reg",
          "--early-cse",
          "--loop-rotate",
          "--libcalls-shrinkwrap",
          "--infer-address-spaces",
          "--guard-widening",
          "--adce",
          "--partial-inliner",
          "--slsr",
          "--break-crit-edges",
          "--loop-idiom",
          "--name-anon-globals",
          "--newgvn",
          "--sroa",
          "--gvn-hoist",
          "--callsite-splitting",
          "--aggressive-instcombine",
          "--simple-loop-unswitch",
          "--coro-cleanup",
          "--simplifycfg",
          "--add-discriminators"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--instnamer",
      "--reg2mem",
      "--mergereturn",
      "--loop-distribute",
      "--mergeicmps",
      "--mem2reg",
      "--early-cse",
      "--loop-rotate",
      "--libcalls-shrinkwrap",
      "--infer-address-spaces",
      "--guard-widening",
      "--adce",
      "--partial-inliner",
      "--slsr",
      "--break-crit-edges",
      "--loop-idiom",
      "--name-anon-globals",
      "--newgvn",
      "--sroa",
      "--gvn-hoist",
      "--callsite-splitting",
      "--aggressive-instcombine",
      "--simple-loop-unswitch",
      "--coro-cleanup",
      "--simplifycfg",
      "--add-discriminators"
    ],
    "performance_vs_Oz": "+3.4%"
  }
}