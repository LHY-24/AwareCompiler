{
  "program_id": "linux-v0_13384.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 63,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 31,
    "oneSuccessor": 53,
    "twoPred": 14,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 40,
    "morePreds": 19,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 107,
    "BeginPhi": 0,
    "BranchCount": 93,
    "returnInt": 9,
    "CriticalCount": 55,
    "NumEdges": 167,
    "const32Bit": 194,
    "const64Bit": 1,
    "numConstZeroes": 38,
    "numConstOnes": 72,
    "UncondBranches": 53,
    "binaryConstArg": 26,
    "NumAShrInst": 1,
    "NumAddInst": 9,
    "NumAllocaInst": 34,
    "NumAndInst": 7,
    "BlockMid": 5,
    "BlockLow": 102,
    "NumBitCastInst": 0,
    "NumBrInst": 93,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 40,
    "NumLShrInst": 4,
    "NumLoadInst": 118,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 66,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 1,
    "NumZExtInst": 16,
    "TotalBlocks": 107,
    "TotalInsts": 485,
    "TotalMemInst": 274,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 185
  },
  "baseline_oz_instcount": 485,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--prune-eh",
    "--elim-avail-extern",
    "--adce",
    "--sroa",
    "--loop-simplifycfg",
    "--dce",
    "--ipsccp",
    "--nary-reassociate",
    "--loop-fusion",
    "--simplifycfg",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--hotcoldsplit",
          "--correlated-propagation",
          "--slp-vectorizer",
          "--lower-matrix-intrinsics",
          "--flattencfg",
          "--aggressive-instcombine",
          "--bdce",
          "--simplifycfg",
          "--loop-instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--hotcoldsplit",
      "--correlated-propagation",
      "--slp-vectorizer",
      "--lower-matrix-intrinsics",
      "--flattencfg",
      "--aggressive-instcombine",
      "--bdce",
      "--simplifycfg",
      "--loop-instsimplify"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}