{
  "program_id": "linux-v0_1685.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 51,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 14,
    "oneSuccessor": 42,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 18,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 82,
    "BeginPhi": 0,
    "BranchCount": 60,
    "returnInt": 24,
    "CriticalCount": 2,
    "NumEdges": 87,
    "const32Bit": 276,
    "const64Bit": 19,
    "numConstZeroes": 119,
    "numConstOnes": 95,
    "UncondBranches": 42,
    "binaryConstArg": 10,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 77,
    "NumAndInst": 7,
    "BlockMid": 13,
    "BlockLow": 69,
    "NumBitCastInst": 26,
    "NumBrInst": 60,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 170,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 119,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 13,
    "TotalBlocks": 82,
    "TotalInsts": 646,
    "TotalMemInst": 484,
    "TotalFuncs": 39,
    "ArgsPhi": 0,
    "testUnary": 296
  },
  "baseline_oz_instcount": 646,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--early-cse",
    "--mldst-motion",
    "--instsimplify",
    "--mem2reg",
    "--elim-avail-extern",
    "--flattencfg",
    "--licm",
    "--mldst-motion",
    "--instsimplify",
    "--mem2reg",
    "--elim-avail-extern",
    "--memcpyopt",
    "--mergefunc",
    "--mergefunc",
    "--aggressive-instcombine",
    "--die",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-matrix-intrinsics",
          "--elim-avail-extern",
          "--mergereturn",
          "--loop-distribute",
          "--loop-guard-widening",
          "--strip-nondebug",
          "--barrier",
          "--libcalls-shrinkwrap",
          "--aggressive-instcombine",
          "--simplifycfg",
          "--globaldce",
          "--loop-reroll",
          "--speculative-execution",
          "--early-cse",
          "--coro-split",
          "--name-anon-globals",
          "--sink",
          "--jump-threading",
          "--loop-idiom",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-matrix-intrinsics",
      "--elim-avail-extern",
      "--mergereturn",
      "--loop-distribute",
      "--loop-guard-widening",
      "--strip-nondebug",
      "--barrier",
      "--libcalls-shrinkwrap",
      "--aggressive-instcombine",
      "--simplifycfg",
      "--globaldce",
      "--loop-reroll",
      "--speculative-execution",
      "--early-cse",
      "--coro-split",
      "--name-anon-globals",
      "--sink",
      "--jump-threading",
      "--loop-idiom",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}