{
  "program_id": "github-v0_6010.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 3,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 34,
    "const64Bit": 52,
    "numConstZeroes": 35,
    "numConstOnes": 23,
    "UncondBranches": 0,
    "binaryConstArg": 20,
    "NumAShrInst": 4,
    "NumAddInst": 16,
    "NumAllocaInst": 9,
    "NumAndInst": 14,
    "BlockMid": 2,
    "BlockLow": 1,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 4,
    "NumLShrInst": 1,
    "NumLoadInst": 43,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 26,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 3,
    "TotalInsts": 173,
    "TotalMemInst": 103,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 73
  },
  "baseline_oz_instcount": 160,
  "knowledge_base_entry": [
    "--globalopt",
    "--sroa",
    "--elim-avail-extern",
    "--inline",
    "--loop-instsimplify",
    "--newgvn",
    "--licm",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--newgvn",
    "--aggressive-instcombine",
    "--loweratomic",
    "--globalopt",
    "--inline",
    "--gvn",
    "--mem2reg",
    "--nary-reassociate",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--globalopt",
          "--ipsccp",
          "--loop-rotate",
          "--licm",
          "--inline",
          "--barrier",
          "--loop-unroll",
          "--speculative-execution",
          "--aggressive-instcombine",
          "--newgvn",
          "--ipconstprop",
          "--loop-reroll",
          "--lower-matrix-intrinsics",
          "--loop-simplify",
          "--loop-distribute",
          "--forceattrs",
          "--inject-tli-mappings",
          "--coro-cleanup",
          "-loop-reduce",
          "--gvn-hoist",
          "--coro-early",
          "--bdce",
          "--reg2mem",
          "--loop-sink",
          "--tailcallelim",
          "--rewrite-statepoints-for-gc",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--globalopt",
      "--ipsccp",
      "--loop-rotate",
      "--licm",
      "--inline",
      "--barrier",
      "--loop-unroll",
      "--speculative-execution",
      "--aggressive-instcombine",
      "--newgvn",
      "--ipconstprop",
      "--loop-reroll",
      "--lower-matrix-intrinsics",
      "--loop-simplify",
      "--loop-distribute",
      "--forceattrs",
      "--inject-tli-mappings",
      "--coro-cleanup",
      "-loop-reduce",
      "--gvn-hoist",
      "--coro-early",
      "--bdce",
      "--reg2mem",
      "--loop-sink",
      "--tailcallelim",
      "--rewrite-statepoints-for-gc",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+5.6%"
  }
}