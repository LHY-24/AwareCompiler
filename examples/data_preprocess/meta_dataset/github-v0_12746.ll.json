{
  "program_id": "github-v0_12746.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 9,
    "oneSuccessor": 14,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 14,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 0,
    "CriticalCount": 9,
    "NumEdges": 42,
    "const32Bit": 72,
    "const64Bit": 1,
    "numConstZeroes": 32,
    "numConstOnes": 23,
    "UncondBranches": 14,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 29,
    "NumBitCastInst": 0,
    "NumBrInst": 28,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 30,
    "TotalInsts": 143,
    "TotalMemInst": 98,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 40
  },
  "baseline_oz_instcount": 144,
  "knowledge_base_entry": [
    "--prune-eh",
    "--elim-avail-extern",
    "--gvn",
    "--sccp",
    "--simplifycfg",
    "--correlated-propagation",
    "--sroa",
    "--nary-reassociate",
    "--newgvn",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--mergereturn",
          "--elim-avail-extern",
          "--bdce",
          "--insert-gcov-profiling",
          "--redundant-dbg-inst-elim",
          "--globaldce",
          "--simplifycfg",
          "--inferattrs",
          "--mergeicmps",
          "--pgo-memop-opt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--mergereturn",
      "--elim-avail-extern",
      "--bdce",
      "--insert-gcov-profiling",
      "--redundant-dbg-inst-elim",
      "--globaldce",
      "--simplifycfg",
      "--inferattrs",
      "--mergeicmps",
      "--pgo-memop-opt"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}