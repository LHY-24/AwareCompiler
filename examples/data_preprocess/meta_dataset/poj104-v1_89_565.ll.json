{
  "program_id": "poj104-v1_89_565.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 17,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 2,
    "oneSuccessor": 15,
    "twoPred": 8,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 38,
    "BeginPhi": 1,
    "BranchCount": 24,
    "returnInt": 7,
    "CriticalCount": 3,
    "NumEdges": 33,
    "const32Bit": 50,
    "const64Bit": 12,
    "numConstZeroes": 17,
    "numConstOnes": 32,
    "UncondBranches": 15,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 26,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 37,
    "NumBitCastInst": 18,
    "NumBrInst": 24,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 55,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 14,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 39,
    "TotalInsts": 244,
    "TotalMemInst": 167,
    "TotalFuncs": 30,
    "ArgsPhi": 2,
    "testUnary": 104
  },
  "baseline_oz_instcount": 93,
  "knowledge_base_entry": [
    "--sccp",
    "--sroa",
    "--sccp",
    "--adce",
    "--mem2reg",
    "--lower-expect",
    "--load-store-vectorizer",
    "--indvars",
    "--instcombine",
    "--correlated-propagation",
    "--early-cse",
    "--loop-reroll",
    "--simplifycfg",
    "--sroa",
    "--prune-eh",
    "--instcombine",
    "--licm",
    "--prune-eh",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--slp-vectorizer",
    "--licm",
    "--bdce",
    "--mergefunc",
    "--simplifycfg",
    "--gvn-hoist",
    "--mldst-motion",
    "--elim-avail-extern",
    "--instsimplify",
    "--mldst-motion",
    "--inline",
    "--dse",
    "--newgvn",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--reg2mem",
          "--loop-guard-widening",
          "--lowerswitch",
          "--loop-simplifycfg",
          "--load-store-vectorizer",
          "--canonicalize-aliases",
          "--indvars",
          "--mldst-motion",
          "--lcssa",
          "--slp-vectorizer",
          "--lower-widenable-condition",
          "--loop-sink",
          "--inferattrs",
          "--simple-loop-unswitch",
          "--newgvn",
          "--loop-idiom",
          "--scalarizer",
          "--lower-guard-intrinsic",
          "--instcombine",
          "--elim-avail-extern",
          "--sccp",
          "--barrier",
          "--strip",
          "--loop-vectorize",
          "--globalopt",
          "--irce",
          "--loop-predication",
          "--licm",
          "--rewrite-statepoints-for-gc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--reg2mem",
      "--loop-guard-widening",
      "--lowerswitch",
      "--loop-simplifycfg",
      "--load-store-vectorizer",
      "--canonicalize-aliases",
      "--indvars",
      "--mldst-motion",
      "--lcssa",
      "--slp-vectorizer",
      "--lower-widenable-condition",
      "--loop-sink",
      "--inferattrs",
      "--simple-loop-unswitch",
      "--newgvn",
      "--loop-idiom",
      "--scalarizer",
      "--lower-guard-intrinsic",
      "--instcombine",
      "--elim-avail-extern",
      "--sccp",
      "--barrier",
      "--strip",
      "--loop-vectorize",
      "--globalopt",
      "--irce",
      "--loop-predication",
      "--licm",
      "--rewrite-statepoints-for-gc"
    ],
    "performance_vs_Oz": "+6.5%"
  }
}