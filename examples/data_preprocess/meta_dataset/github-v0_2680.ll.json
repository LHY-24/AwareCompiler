{
  "program_id": "github-v0_2680.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 48,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 16,
    "oneSuccessor": 40,
    "twoPred": 20,
    "twoPredOneSuc": 8,
    "twoEach": 12,
    "twoSuccessor": 32,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 0,
    "BranchCount": 72,
    "returnInt": 44,
    "CriticalCount": 16,
    "NumEdges": 104,
    "const32Bit": 86,
    "const64Bit": 22,
    "numConstZeroes": 62,
    "numConstOnes": 30,
    "UncondBranches": 40,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 26,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 76,
    "NumBitCastInst": 0,
    "NumBrInst": 72,
    "NumCallInst": 74,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 32,
    "NumLShrInst": 0,
    "NumLoadInst": 78,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 60,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 4,
    "NumZExtInst": 0,
    "TotalBlocks": 76,
    "TotalInsts": 364,
    "TotalMemInst": 252,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 104
  },
  "baseline_oz_instcount": 368,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--slp-vectorizer",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--globalsplit",
          "--inferattrs",
          "--slsr",
          "--attributor",
          "--mergeicmps",
          "--early-cse",
          "--lower-widenable-condition",
          "--libcalls-shrinkwrap",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--globalsplit",
      "--inferattrs",
      "--slsr",
      "--attributor",
      "--mergeicmps",
      "--early-cse",
      "--lower-widenable-condition",
      "--libcalls-shrinkwrap",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}