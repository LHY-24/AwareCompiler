{
  "program_id": "linux-v0_1557.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 37,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 7,
    "oneSuccessor": 37,
    "twoPred": 17,
    "twoPredOneSuc": 7,
    "twoEach": 6,
    "twoSuccessor": 17,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 1,
    "BranchCount": 54,
    "returnInt": 4,
    "CriticalCount": 7,
    "NumEdges": 71,
    "const32Bit": 169,
    "const64Bit": 7,
    "numConstZeroes": 84,
    "numConstOnes": 59,
    "UncondBranches": 37,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 39,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 54,
    "NumBitCastInst": 7,
    "NumBrInst": 54,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 57,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 164,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 11,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 76,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 3,
    "NumZExtInst": 1,
    "TotalBlocks": 65,
    "TotalInsts": 487,
    "TotalMemInst": 381,
    "TotalFuncs": 20,
    "ArgsPhi": 2,
    "testUnary": 218
  },
  "baseline_oz_instcount": 484,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--inline",
    "--sccp",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--lower-expect",
    "--dce",
    "--ipsccp",
    "--loop-instsimplify",
    "--licm",
    "--sroa",
    "--nary-reassociate",
    "--correlated-propagation",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-predication",
          "--newgvn",
          "--mergefunc",
          "--strip",
          "--jump-threading",
          "--constprop",
          "--loop-unroll",
          "--infer-address-spaces",
          "--ipconstprop",
          "--loop-load-elim",
          "--early-cse",
          "--adce",
          "--globalopt",
          "--called-value-propagation",
          "--lower-constant-intrinsics",
          "--loop-simplify",
          "--cross-dso-cfi",
          "--mldst-motion",
          "--loop-vectorize",
          "--barrier",
          "--globaldce",
          "--loweratomic",
          "--loop-distribute",
          "--rpo-functionattrs",
          "--strip-nondebug",
          "--elim-avail-extern",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-predication",
      "--newgvn",
      "--mergefunc",
      "--strip",
      "--jump-threading",
      "--constprop",
      "--loop-unroll",
      "--infer-address-spaces",
      "--ipconstprop",
      "--loop-load-elim",
      "--early-cse",
      "--adce",
      "--globalopt",
      "--called-value-propagation",
      "--lower-constant-intrinsics",
      "--loop-simplify",
      "--cross-dso-cfi",
      "--mldst-motion",
      "--loop-vectorize",
      "--barrier",
      "--globaldce",
      "--loweratomic",
      "--loop-distribute",
      "--rpo-functionattrs",
      "--strip-nondebug",
      "--elim-avail-extern",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}