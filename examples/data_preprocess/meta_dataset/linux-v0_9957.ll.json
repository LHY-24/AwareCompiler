{
  "program_id": "linux-v0_9957.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 6,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 44,
    "const64Bit": 0,
    "numConstZeroes": 20,
    "numConstOnes": 24,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 24,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 4,
    "NumBitCastInst": 8,
    "NumBrInst": 0,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 28,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 9,
    "TotalInsts": 118,
    "TotalMemInst": 99,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 62
  },
  "baseline_oz_instcount": 118,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--inline",
    "--globalopt",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--dce",
    "--elim-avail-extern",
    "--mergefunc",
    "--jump-threading",
    "--aggressive-instcombine",
    "--bdce",
    "--early-cse-memssa",
    "--indvars",
    "--loop-reroll",
    "--loop-fusion",
    "--gvn",
    "--loop-reroll",
    "--loop-fusion",
    "--early-cse",
    "--newgvn",
    "--memcpyopt",
    "--mem2reg",
    "--bdce",
    "--dse",
    "--mldst-motion",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--slsr",
          "--lowerinvoke",
          "--coro-early",
          "--strip",
          "--loop-interchange",
          "--callsite-splitting",
          "--sroa",
          "--licm",
          "--correlated-propagation",
          "--instnamer",
          "--coro-cleanup",
          "--deadargelim",
          "--loop-deletion",
          "--elim-avail-extern",
          "--constprop",
          "--loop-distribute",
          "--attributor",
          "--mergereturn",
          "--guard-widening",
          "--strip-dead-prototypes",
          "--argpromotion",
          "--early-cse",
          "--lowerswitch",
          "--mergefunc",
          "--nary-reassociate",
          "--dce",
          "--loweratomic",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+15.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--slsr",
      "--lowerinvoke",
      "--coro-early",
      "--strip",
      "--loop-interchange",
      "--callsite-splitting",
      "--sroa",
      "--licm",
      "--correlated-propagation",
      "--instnamer",
      "--coro-cleanup",
      "--deadargelim",
      "--loop-deletion",
      "--elim-avail-extern",
      "--constprop",
      "--loop-distribute",
      "--attributor",
      "--mergereturn",
      "--guard-widening",
      "--strip-dead-prototypes",
      "--argpromotion",
      "--early-cse",
      "--lowerswitch",
      "--mergefunc",
      "--nary-reassociate",
      "--dce",
      "--loweratomic",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+15.3%"
  }
}