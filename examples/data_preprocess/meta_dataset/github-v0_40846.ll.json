{
  "program_id": "github-v0_40846.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 37,
    "const64Bit": 40,
    "numConstZeroes": 43,
    "numConstOnes": 25,
    "UncondBranches": 11,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 14,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 8,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 38,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 7,
    "TotalBlocks": 21,
    "TotalInsts": 171,
    "TotalMemInst": 113,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 72
  },
  "baseline_oz_instcount": 171,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--lower-expect",
    "--bdce",
    "--early-cse-memssa",
    "--loop-rotate",
    "--lower-expect",
    "--ipsccp",
    "--loop-deletion",
    "--gvn-hoist",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--called-value-propagation",
          "--strip",
          "--insert-gcov-profiling",
          "--globaldce",
          "--loop-versioning-licm",
          "--aggressive-instcombine",
          "--reg2mem",
          "--canonicalize-aliases",
          "--lower-guard-intrinsic",
          "--loop-instsimplify",
          "--loop-sink",
          "--inferattrs",
          "--loop-fusion",
          "--slsr",
          "--strip-nondebug",
          "--inline",
          "--guard-widening",
          "--loop-idiom",
          "--mldst-motion",
          "--dce",
          "--memcpyopt",
          "--partially-inline-libcalls",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--called-value-propagation",
      "--strip",
      "--insert-gcov-profiling",
      "--globaldce",
      "--loop-versioning-licm",
      "--aggressive-instcombine",
      "--reg2mem",
      "--canonicalize-aliases",
      "--lower-guard-intrinsic",
      "--loop-instsimplify",
      "--loop-sink",
      "--inferattrs",
      "--loop-fusion",
      "--slsr",
      "--strip-nondebug",
      "--inline",
      "--guard-widening",
      "--loop-idiom",
      "--mldst-motion",
      "--dce",
      "--memcpyopt",
      "--partially-inline-libcalls",
      "--reassociate"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}