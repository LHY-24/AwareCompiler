{
  "program_id": "linux-v0_5582.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 43,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 11,
    "oneSuccessor": 36,
    "twoPred": 9,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 20,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 0,
    "BranchCount": 56,
    "returnInt": 34,
    "CriticalCount": 9,
    "NumEdges": 79,
    "const32Bit": 243,
    "const64Bit": 21,
    "numConstZeroes": 93,
    "numConstOnes": 133,
    "UncondBranches": 36,
    "binaryConstArg": 54,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 96,
    "NumAndInst": 17,
    "BlockMid": 16,
    "BlockLow": 65,
    "NumBitCastInst": 17,
    "NumBrInst": 56,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 46,
    "NumICmpInst": 29,
    "NumLShrInst": 3,
    "NumLoadInst": 210,
    "NumMulInst": 3,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 24,
    "NumSExtInst": 19,
    "NumSelectInst": 3,
    "NumShlInst": 10,
    "NumStoreInst": 123,
    "NumSubInst": 10,
    "NumTruncInst": 32,
    "NumXorInst": 13,
    "NumZExtInst": 34,
    "TotalBlocks": 81,
    "TotalInsts": 819,
    "TotalMemInst": 538,
    "TotalFuncs": 40,
    "ArgsPhi": 0,
    "testUnary": 412
  },
  "baseline_oz_instcount": 819,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--early-cse",
    "--correlated-propagation",
    "--bdce",
    "--slp-vectorizer",
    "--early-cse",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--mergefunc",
    "--adce",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--dce",
    "--mergefunc",
    "--ipsccp",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--slsr",
          "--instcombine",
          "--post-inline-ee-instrument",
          "--loop-fusion",
          "--aggressive-instcombine",
          "--gvn",
          "--loop-predication",
          "--argpromotion",
          "--mldst-motion",
          "--mergefunc",
          "--correlated-propagation",
          "--loop-simplifycfg",
          "--loop-versioning-licm",
          "--guard-widening",
          "--adce",
          "--strip-nondebug",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--slsr",
      "--instcombine",
      "--post-inline-ee-instrument",
      "--loop-fusion",
      "--aggressive-instcombine",
      "--gvn",
      "--loop-predication",
      "--argpromotion",
      "--mldst-motion",
      "--mergefunc",
      "--correlated-propagation",
      "--loop-simplifycfg",
      "--loop-versioning-licm",
      "--guard-widening",
      "--adce",
      "--strip-nondebug",
      "--always-inline"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}