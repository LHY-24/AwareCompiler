{
  "program_id": "github-v0_48872.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 38,
    "const64Bit": 30,
    "numConstZeroes": 33,
    "numConstOnes": 23,
    "UncondBranches": 11,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 4,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 6,
    "NumLShrInst": 2,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 9,
    "TotalBlocks": 21,
    "TotalInsts": 160,
    "TotalMemInst": 100,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 68
  },
  "baseline_oz_instcount": 160,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--adce",
    "--sroa",
    "--bdce",
    "--lower-expect",
    "--gvn",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--instcombine",
    "--prune-eh",
    "--inline",
    "--gvn-hoist",
    "--mem2reg",
    "--jump-threading",
    "--gvn-hoist",
    "--nary-reassociate",
    "--licm",
    "--adce",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--ipsccp",
          "--scalarizer",
          "--partially-inline-libcalls",
          "--sancov",
          "--add-discriminators",
          "--mldst-motion",
          "--loop-data-prefetch",
          "--barrier",
          "--mergeicmps",
          "--loop-unroll",
          "--memcpyopt",
          "--flattencfg",
          "--loweratomic",
          "--inject-tli-mappings",
          "--infer-address-spaces",
          "--canonicalize-aliases",
          "--aggressive-instcombine",
          "--functionattrs",
          "--correlated-propagation",
          "--lower-expect",
          "--loop-deletion",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--ipsccp",
      "--scalarizer",
      "--partially-inline-libcalls",
      "--sancov",
      "--add-discriminators",
      "--mldst-motion",
      "--loop-data-prefetch",
      "--barrier",
      "--mergeicmps",
      "--loop-unroll",
      "--memcpyopt",
      "--flattencfg",
      "--loweratomic",
      "--inject-tli-mappings",
      "--infer-address-spaces",
      "--canonicalize-aliases",
      "--aggressive-instcombine",
      "--functionattrs",
      "--correlated-propagation",
      "--lower-expect",
      "--loop-deletion",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}