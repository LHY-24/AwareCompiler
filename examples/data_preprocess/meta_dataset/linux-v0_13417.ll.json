{
  "program_id": "linux-v0_13417.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 33,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 4,
    "oneSuccessor": 33,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 55,
    "BeginPhi": 0,
    "BranchCount": 43,
    "returnInt": 6,
    "CriticalCount": 3,
    "NumEdges": 63,
    "const32Bit": 119,
    "const64Bit": 2,
    "numConstZeroes": 51,
    "numConstOnes": 52,
    "UncondBranches": 33,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 41,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 51,
    "NumBitCastInst": 24,
    "NumBrInst": 43,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 114,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 64,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 55,
    "TotalInsts": 361,
    "TotalMemInst": 272,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 181
  },
  "baseline_oz_instcount": 360,
  "knowledge_base_entry": [
    "--loop-deletion",
    "--elim-avail-extern",
    "--loop-deletion",
    "--jump-threading",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--gvn",
    "--lower-expect",
    "--correlated-propagation",
    "--sroa",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--licm",
          "--ipsccp",
          "--always-inline",
          "--lcssa",
          "--separate-const-offset-from-gep",
          "--loop-idiom",
          "--canonicalize-aliases",
          "--loop-unroll-and-jam",
          "--add-discriminators",
          "--sroa",
          "--flattencfg",
          "--jump-threading",
          "--strip-nondebug",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--licm",
      "--ipsccp",
      "--always-inline",
      "--lcssa",
      "--separate-const-offset-from-gep",
      "--loop-idiom",
      "--canonicalize-aliases",
      "--loop-unroll-and-jam",
      "--add-discriminators",
      "--sroa",
      "--flattencfg",
      "--jump-threading",
      "--strip-nondebug",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}