{
  "program_id": "github-v0_49912.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 3,
    "onePred": 3,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 5,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 4,
    "BeginPhi": 6,
    "BranchCount": 9,
    "returnInt": 3,
    "CriticalCount": 9,
    "NumEdges": 15,
    "const32Bit": 21,
    "const64Bit": 4,
    "numConstZeroes": 9,
    "numConstOnes": 4,
    "UncondBranches": 3,
    "binaryConstArg": 14,
    "NumAShrInst": 2,
    "NumAddInst": 14,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 9,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 5,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 13,
    "NumRetInst": 1,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 1,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 81,
    "TotalMemInst": 15,
    "TotalFuncs": 3,
    "ArgsPhi": 26,
    "testUnary": 12
  },
  "baseline_oz_instcount": 81,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--loop-rotate",
    "--early-cse-memssa",
    "--lower-expect",
    "--adce",
    "--slp-vectorizer",
    "--mem2reg",
    "--adce",
    "--gvn",
    "--globalopt",
    "--gvn",
    "--ipsccp",
    "--elim-avail-extern",
    "--mem2reg",
    "--mldst-motion",
    "--elim-avail-extern",
    "--mem2reg",
    "--simplifycfg",
    "--licm",
    "--lower-expect",
    "--instcombine",
    "--loop-simplifycfg",
    "--instsimplify",
    "--dse",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--licm",
    "--reassociate",
    "--inline",
    "--gvn",
    "--ipsccp",
    "--early-cse",
    "--lower-expect",
    "--adce",
    "--slp-vectorizer",
    "--mem2reg",
    "--adce",
    "--gvn",
    "--globalopt",
    "--gvn",
    "--ipsccp",
    "--elim-avail-extern",
    "--mem2reg",
    "--mldst-motion",
    "--elim-avail-extern",
    "--mem2reg",
    "--simplifycfg",
    "--slp-vectorizer",
    "--mem2reg",
    "--adce",
    "--gvn",
    "--globalopt",
    "--gvn",
    "--ipsccp",
    "--elim-avail-extern",
    "--mem2reg",
    "--mldst-motion",
    "--simplifycfg",
    "--mem2reg",
    "--adce",
    "--gvn",
    "--globalopt",
    "--gvn",
    "--ipsccp",
    "--elim-avail-extern",
    "--mem2reg",
    "--mldst-motion",
    "--elim-avail-extern",
    "--mem2reg",
    "--simplifycfg",
    "--lower-expect",
    "--die",
    "--gvn",
    "--globalopt",
    "--gvn",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--simplifycfg",
          "--ipsccp",
          "--correlated-propagation",
          "--inferattrs",
          "--lower-matrix-intrinsics",
          "--float2int",
          "--libcalls-shrinkwrap",
          "--partial-inliner",
          "--globalopt",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--simplifycfg",
      "--ipsccp",
      "--correlated-propagation",
      "--inferattrs",
      "--lower-matrix-intrinsics",
      "--float2int",
      "--libcalls-shrinkwrap",
      "--partial-inliner",
      "--globalopt",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}