{
  "program_id": "github-v0_14243.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 2,
    "CriticalCount": 2,
    "NumEdges": 25,
    "const32Bit": 79,
    "const64Bit": 0,
    "numConstZeroes": 44,
    "numConstOnes": 27,
    "UncondBranches": 11,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 18,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 39,
    "NumBitCastInst": 0,
    "NumBrInst": 18,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 39,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 39,
    "TotalInsts": 161,
    "TotalMemInst": 115,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 53
  },
  "baseline_oz_instcount": 161,
  "knowledge_base_entry": [
    "--newgvn",
    "--mergefunc",
    "--memcpyopt",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--loop-reroll",
          "--mergefunc",
          "--barrier",
          "--functionattrs",
          "--sink",
          "--dce",
          "--loop-versioning",
          "--bdce",
          "--sancov",
          "--inline",
          "--reassociate",
          "--gvn",
          "--infer-address-spaces",
          "--mergeicmps",
          "--lower-widenable-condition",
          "--inject-tli-mappings",
          "--loop-predication",
          "--load-store-vectorizer",
          "--consthoist",
          "--sroa",
          "--correlated-propagation",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--loop-reroll",
      "--mergefunc",
      "--barrier",
      "--functionattrs",
      "--sink",
      "--dce",
      "--loop-versioning",
      "--bdce",
      "--sancov",
      "--inline",
      "--reassociate",
      "--gvn",
      "--infer-address-spaces",
      "--mergeicmps",
      "--lower-widenable-condition",
      "--inject-tli-mappings",
      "--loop-predication",
      "--load-store-vectorizer",
      "--consthoist",
      "--sroa",
      "--correlated-propagation",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}