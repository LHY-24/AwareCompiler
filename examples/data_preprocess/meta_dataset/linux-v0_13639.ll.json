{
  "program_id": "linux-v0_13639.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 21,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 5,
    "oneSuccessor": 21,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 1,
    "BranchCount": 28,
    "returnInt": 8,
    "CriticalCount": 3,
    "NumEdges": 35,
    "const32Bit": 103,
    "const64Bit": 2,
    "numConstZeroes": 42,
    "numConstOnes": 47,
    "UncondBranches": 21,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 41,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 32,
    "NumBitCastInst": 3,
    "NumBrInst": 28,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 60,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 10,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 41,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 38,
    "TotalInsts": 237,
    "TotalMemInst": 185,
    "TotalFuncs": 22,
    "ArgsPhi": 2,
    "testUnary": 106
  },
  "baseline_oz_instcount": 238,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--ipsccp",
    "--early-cse-memssa",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--prune-eh",
    "--aggressive-instcombine",
    "--flattencfg",
    "--elim-avail-extern",
    "--instsimplify",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-interchange",
          "--adce",
          "--sink",
          "--simple-loop-unswitch",
          "--die",
          "--alignment-from-assumptions",
          "--loop-rotate",
          "--loop-simplifycfg",
          "--gvn",
          "--div-rem-pairs",
          "--lower-widenable-condition",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-interchange",
      "--adce",
      "--sink",
      "--simple-loop-unswitch",
      "--die",
      "--alignment-from-assumptions",
      "--loop-rotate",
      "--loop-simplifycfg",
      "--gvn",
      "--div-rem-pairs",
      "--lower-widenable-condition",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}