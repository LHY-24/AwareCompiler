{
  "program_id": "linux-v0_12073.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 94,
    "onePredOneSuc": 69,
    "onePredTwoSuc": 17,
    "oneSuccessor": 90,
    "twoPred": 28,
    "twoPredOneSuc": 9,
    "twoEach": 13,
    "twoSuccessor": 35,
    "morePreds": 5,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 150,
    "BeginPhi": 4,
    "BranchCount": 125,
    "returnInt": 18,
    "CriticalCount": 24,
    "NumEdges": 169,
    "const32Bit": 231,
    "const64Bit": 13,
    "numConstZeroes": 98,
    "numConstOnes": 130,
    "UncondBranches": 90,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 89,
    "NumAndInst": 3,
    "BlockMid": 10,
    "BlockLow": 144,
    "NumBitCastInst": 14,
    "NumBrInst": 125,
    "NumCallInst": 72,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 42,
    "NumLShrInst": 0,
    "NumLoadInst": 220,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 27,
    "NumSExtInst": 16,
    "NumSelectInst": 3,
    "NumShlInst": 0,
    "NumStoreInst": 123,
    "NumSubInst": 2,
    "NumTruncInst": 11,
    "NumXorInst": 22,
    "NumZExtInst": 20,
    "TotalBlocks": 154,
    "TotalInsts": 852,
    "TotalMemInst": 547,
    "TotalFuncs": 47,
    "ArgsPhi": 8,
    "testUnary": 378
  },
  "baseline_oz_instcount": 853,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--globalopt",
    "--reassociate",
    "--sroa",
    "--aggressive-instcombine",
    "--sroa",
    "--nary-reassociate",
    "--correlated-propagation",
    "--dse",
    "--correlated-propagation",
    "--instcombine",
    "--globalopt",
    "--flattencfg",
    "--early-cse-memssa",
    "--sccp",
    "--lower-expect",
    "--elim-avail-extern",
    "--mem2reg",
    "--newgvn",
    "--simplifycfg",
    "--instsimplify",
    "--elim-avail-extern",
    "--mergefunc",
    "--aggressive-instcombine",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--reassociate",
          "--ipconstprop",
          "--partial-inliner",
          "--newgvn",
          "--globalopt",
          "--instcombine",
          "--correlated-propagation",
          "--aggressive-instcombine",
          "--mem2reg",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--reassociate",
      "--ipconstprop",
      "--partial-inliner",
      "--newgvn",
      "--globalopt",
      "--instcombine",
      "--correlated-propagation",
      "--aggressive-instcombine",
      "--mem2reg",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}