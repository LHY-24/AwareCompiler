{
  "program_id": "linux-v0_8781.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 39,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 13,
    "oneSuccessor": 33,
    "twoPred": 11,
    "twoPredOneSuc": 6,
    "twoEach": 3,
    "twoSuccessor": 20,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 70,
    "BeginPhi": 0,
    "BranchCount": 53,
    "returnInt": 16,
    "CriticalCount": 3,
    "NumEdges": 73,
    "const32Bit": 244,
    "const64Bit": 37,
    "numConstZeroes": 127,
    "numConstOnes": 69,
    "UncondBranches": 33,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 49,
    "NumAndInst": 1,
    "BlockMid": 12,
    "BlockLow": 58,
    "NumBitCastInst": 12,
    "NumBrInst": 53,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 90,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 177,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 96,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 70,
    "TotalInsts": 584,
    "TotalMemInst": 458,
    "TotalFuncs": 37,
    "ArgsPhi": 0,
    "testUnary": 251
  },
  "baseline_oz_instcount": 584,
  "knowledge_base_entry": [
    "--dse",
    "--aggressive-instcombine",
    "--ipsccp",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--jump-threading",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--mem2reg",
          "--loop-data-prefetch",
          "--slsr",
          "--barrier",
          "--globalsplit",
          "--instsimplify",
          "--die",
          "--globalopt",
          "--aggressive-instcombine",
          "--partially-inline-libcalls",
          "--constmerge",
          "--loop-versioning",
          "--ee-instrument",
          "--correlated-propagation",
          "--inject-tli-mappings",
          "--loop-interchange",
          "--loop-sink",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--mem2reg",
      "--loop-data-prefetch",
      "--slsr",
      "--barrier",
      "--globalsplit",
      "--instsimplify",
      "--die",
      "--globalopt",
      "--aggressive-instcombine",
      "--partially-inline-libcalls",
      "--constmerge",
      "--loop-versioning",
      "--ee-instrument",
      "--correlated-propagation",
      "--inject-tli-mappings",
      "--loop-interchange",
      "--loop-sink",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}