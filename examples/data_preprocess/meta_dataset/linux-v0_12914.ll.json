{
  "program_id": "linux-v0_12914.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 13,
    "oneSuccessor": 42,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 23,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 91,
    "BeginPhi": 0,
    "BranchCount": 64,
    "returnInt": 22,
    "CriticalCount": 6,
    "NumEdges": 91,
    "const32Bit": 267,
    "const64Bit": 42,
    "numConstZeroes": 123,
    "numConstOnes": 123,
    "UncondBranches": 42,
    "binaryConstArg": 11,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 89,
    "NumAndInst": 2,
    "BlockMid": 15,
    "BlockLow": 76,
    "NumBitCastInst": 20,
    "NumBrInst": 64,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 86,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 180,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 130,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 13,
    "TotalBlocks": 91,
    "TotalInsts": 722,
    "TotalMemInst": 536,
    "TotalFuncs": 45,
    "ArgsPhi": 0,
    "testUnary": 328
  },
  "baseline_oz_instcount": 723,
  "knowledge_base_entry": [
    "--prune-eh",
    "--aggressive-instcombine",
    "--inline",
    "--jump-threading",
    "--instcombine",
    "--simplifycfg",
    "--mem2reg",
    "--mergefunc",
    "--ipsccp",
    "--sccp",
    "--instsimplify",
    "--bdce",
    "--aggressive-instcombine",
    "--inline",
    "--jump-threading",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--licm",
          "--correlated-propagation",
          "--loop-versioning",
          "--infer-address-spaces",
          "--nary-reassociate",
          "--loop-deletion",
          "--scalarizer",
          "--aggressive-instcombine",
          "--sccp",
          "--loop-versioning-licm",
          "--early-cse",
          "--sroa",
          "--simplifycfg",
          "--deadargelim",
          "--lower-guard-intrinsic",
          "--sink",
          "--forceattrs",
          "--consthoist",
          "--partial-inliner",
          "--bdce",
          "--early-cse-memssa",
          "--strip",
          "--loop-simplify",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--licm",
      "--correlated-propagation",
      "--loop-versioning",
      "--infer-address-spaces",
      "--nary-reassociate",
      "--loop-deletion",
      "--scalarizer",
      "--aggressive-instcombine",
      "--sccp",
      "--loop-versioning-licm",
      "--early-cse",
      "--sroa",
      "--simplifycfg",
      "--deadargelim",
      "--lower-guard-intrinsic",
      "--sink",
      "--forceattrs",
      "--consthoist",
      "--partial-inliner",
      "--bdce",
      "--early-cse-memssa",
      "--strip",
      "--loop-simplify",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}