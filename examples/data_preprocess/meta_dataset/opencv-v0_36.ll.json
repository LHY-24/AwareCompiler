{
  "program_id": "opencv-v0_36.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 34,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 6,
    "oneSuccessor": 9,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 14,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 75,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 46,
    "const32Bit": 239,
    "const64Bit": 69,
    "numConstZeroes": 122,
    "numConstOnes": 19,
    "UncondBranches": 9,
    "binaryConstArg": 148,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 0,
    "NumAndInst": 59,
    "BlockMid": 2,
    "BlockLow": 73,
    "NumBitCastInst": 11,
    "NumBrInst": 23,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 59,
    "NumICmpInst": 25,
    "NumLShrInst": 10,
    "NumLoadInst": 32,
    "NumMulInst": 4,
    "NumOrInst": 53,
    "NumPHIInst": 0,
    "NumRetInst": 39,
    "NumSExtInst": 0,
    "NumSelectInst": 5,
    "NumShlInst": 44,
    "NumStoreInst": 42,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 1,
    "NumZExtInst": 12,
    "TotalBlocks": 75,
    "TotalInsts": 504,
    "TotalMemInst": 168,
    "TotalFuncs": 44,
    "ArgsPhi": 0,
    "testUnary": 60
  },
  "baseline_oz_instcount": 506,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--licm",
    "--mem2reg",
    "--globalopt",
    "--early-cse-memssa",
    "--sroa",
    "--inline",
    "--reassociate",
    "--reassociate",
    "--inline",
    "--load-store-vectorizer",
    "--inline",
    "--gvn-hoist",
    "--ipsccp",
    "--instcombine",
    "--nary-reassociate",
    "--gvn",
    "--mem2reg",
    "--slp-vectorizer",
    "--inline",
    "--adce",
    "--aggressive-instcombine",
    "--jump-threading",
    "--aggressive-instcombine",
    "--newgvn",
    "--bdce",
    "--aggressive-instcombine",
    "--bdce",
    "--instcombine",
    "--nary-reassociate",
    "--gvn",
    "--instcombine",
    "--ipsccp",
    "--licm",
    "--reassociate",
    "-loop-reduce",
    "--slsr",
    "--instcombine",
    "--dse",
    "--load-store-vectorizer",
    "--mergefunc",
    "--loop-simplifycfg",
    "--licm",
    "--jump-threading",
    "-loop-reduce",
    "--nary-reassociate",
    "--gvn-hoist",
    "--gvn",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--partially-inline-libcalls",
          "--canonicalize-aliases",
          "--constmerge",
          "--strip-debug-declare",
          "--globalsplit",
          "--gvn-hoist",
          "--die",
          "--loop-idiom",
          "--lower-matrix-intrinsics",
          "--loop-unroll",
          "--mergefunc",
          "--guard-widening",
          "--globalopt",
          "--consthoist",
          "--constprop",
          "--infer-address-spaces",
          "--argpromotion",
          "--speculative-execution",
          "--flattencfg",
          "--cross-dso-cfi",
          "--gvn",
          "--lowerswitch",
          "--strip",
          "--instcombine",
          "--mergeicmps",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--partially-inline-libcalls",
      "--canonicalize-aliases",
      "--constmerge",
      "--strip-debug-declare",
      "--globalsplit",
      "--gvn-hoist",
      "--die",
      "--loop-idiom",
      "--lower-matrix-intrinsics",
      "--loop-unroll",
      "--mergefunc",
      "--guard-widening",
      "--globalopt",
      "--consthoist",
      "--constprop",
      "--infer-address-spaces",
      "--argpromotion",
      "--speculative-execution",
      "--flattencfg",
      "--cross-dso-cfi",
      "--gvn",
      "--lowerswitch",
      "--strip",
      "--instcombine",
      "--mergeicmps",
      "--always-inline"
    ],
    "performance_vs_Oz": "+8.7%"
  }
}