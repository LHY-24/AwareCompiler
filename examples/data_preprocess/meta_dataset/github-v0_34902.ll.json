{
  "program_id": "github-v0_34902.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 2,
    "oneSuccessor": 24,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 7,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 11,
    "CriticalCount": 3,
    "NumEdges": 44,
    "const32Bit": 361,
    "const64Bit": 36,
    "numConstZeroes": 277,
    "numConstOnes": 86,
    "UncondBranches": 24,
    "binaryConstArg": 24,
    "NumAShrInst": 3,
    "NumAddInst": 8,
    "NumAllocaInst": 71,
    "NumAndInst": 7,
    "BlockMid": 14,
    "BlockLow": 33,
    "NumBitCastInst": 21,
    "NumBrInst": 34,
    "NumCallInst": 64,
    "NumGetElementPtrInst": 137,
    "NumICmpInst": 10,
    "NumLShrInst": 1,
    "NumLoadInst": 113,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 84,
    "NumSubInst": 4,
    "NumTruncInst": 4,
    "NumXorInst": 5,
    "NumZExtInst": 6,
    "TotalBlocks": 47,
    "TotalInsts": 597,
    "TotalMemInst": 469,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 224
  },
  "baseline_oz_instcount": 595,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--ipsccp",
    "--jump-threading",
    "--dce",
    "--dse",
    "--dse",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--inline",
    "--aggressive-instcombine",
    "--early-cse",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--strip-debug-declare",
          "--rewrite-statepoints-for-gc",
          "--load-store-vectorizer",
          "--strip-dead-prototypes",
          "--add-discriminators",
          "--rpo-functionattrs",
          "--early-cse-memssa",
          "--loop-deletion",
          "--inferattrs",
          "--float2int",
          "--separate-const-offset-from-gep",
          "--mem2reg",
          "--mergereturn",
          "--barrier",
          "--ipsccp",
          "--gvn",
          "--loop-fusion",
          "--inline",
          "--lcssa",
          "--sancov",
          "--sink",
          "--constmerge",
          "--lower-matrix-intrinsics",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--strip-debug-declare",
      "--rewrite-statepoints-for-gc",
      "--load-store-vectorizer",
      "--strip-dead-prototypes",
      "--add-discriminators",
      "--rpo-functionattrs",
      "--early-cse-memssa",
      "--loop-deletion",
      "--inferattrs",
      "--float2int",
      "--separate-const-offset-from-gep",
      "--mem2reg",
      "--mergereturn",
      "--barrier",
      "--ipsccp",
      "--gvn",
      "--loop-fusion",
      "--inline",
      "--lcssa",
      "--sancov",
      "--sink",
      "--constmerge",
      "--lower-matrix-intrinsics",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}