{
  "program_id": "linux-v0_10914.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 66,
    "onePredOneSuc": 50,
    "onePredTwoSuc": 12,
    "oneSuccessor": 63,
    "twoPred": 17,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 23,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 111,
    "BeginPhi": 1,
    "BranchCount": 86,
    "returnInt": 29,
    "CriticalCount": 11,
    "NumEdges": 114,
    "const32Bit": 399,
    "const64Bit": 18,
    "numConstZeroes": 190,
    "numConstOnes": 153,
    "UncondBranches": 63,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 121,
    "NumAndInst": 0,
    "BlockMid": 18,
    "BlockLow": 94,
    "NumBitCastInst": 28,
    "NumBrInst": 86,
    "NumCallInst": 74,
    "NumGetElementPtrInst": 127,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 271,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 25,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 142,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 11,
    "NumZExtInst": 9,
    "TotalBlocks": 112,
    "TotalInsts": 939,
    "TotalMemInst": 735,
    "TotalFuncs": 56,
    "ArgsPhi": 2,
    "testUnary": 444
  },
  "baseline_oz_instcount": 939,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--newgvn",
    "--loop-fusion",
    "--newgvn",
    "--sroa",
    "--elim-avail-extern",
    "--sccp",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--strip-dead-prototypes",
          "--mergeicmps",
          "--post-inline-ee-instrument",
          "--speculative-execution",
          "--mergefunc",
          "--licm",
          "--loop-simplify",
          "--attributor",
          "--callsite-splitting",
          "--consthoist",
          "--lower-widenable-condition",
          "--instsimplify",
          "--guard-widening",
          "--gvn-hoist",
          "--called-value-propagation",
          "--ipsccp",
          "--sink",
          "--add-discriminators",
          "--inferattrs",
          "--float2int",
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--strip-dead-prototypes",
      "--mergeicmps",
      "--post-inline-ee-instrument",
      "--speculative-execution",
      "--mergefunc",
      "--licm",
      "--loop-simplify",
      "--attributor",
      "--callsite-splitting",
      "--consthoist",
      "--lower-widenable-condition",
      "--instsimplify",
      "--guard-widening",
      "--gvn-hoist",
      "--called-value-propagation",
      "--ipsccp",
      "--sink",
      "--add-discriminators",
      "--inferattrs",
      "--float2int",
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}