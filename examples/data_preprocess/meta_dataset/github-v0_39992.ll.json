{
  "program_id": "github-v0_39992.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 7,
    "oneSuccessor": 18,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 6,
    "twoSuccessor": 13,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 32,
    "BeginPhi": 0,
    "BranchCount": 31,
    "returnInt": 0,
    "CriticalCount": 5,
    "NumEdges": 44,
    "const32Bit": 34,
    "const64Bit": 19,
    "numConstZeroes": 10,
    "numConstOnes": 29,
    "UncondBranches": 18,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 14,
    "NumAndInst": 4,
    "BlockMid": 3,
    "BlockLow": 29,
    "NumBitCastInst": 0,
    "NumBrInst": 31,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 13,
    "NumLShrInst": 3,
    "NumLoadInst": 64,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 36,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 32,
    "TotalInsts": 217,
    "TotalMemInst": 127,
    "TotalFuncs": 1,
    "ArgsPhi": 0,
    "testUnary": 98
  },
  "baseline_oz_instcount": 217,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--licm",
    "--aggressive-instcombine",
    "--mem2reg",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--sroa",
    "--mem2reg",
    "--instcombine",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--redundant-dbg-inst-elim",
          "--loop-simplify",
          "--strip-nondebug",
          "--partial-inliner",
          "--infer-address-spaces",
          "--loweratomic",
          "--aggressive-instcombine",
          "--irce",
          "--forceattrs",
          "--functionattrs",
          "--loop-distribute",
          "--speculative-execution",
          "--rpo-functionattrs",
          "--inferattrs",
          "--lower-guard-intrinsic",
          "--instnamer",
          "--sroa",
          "--loop-versioning-licm",
          "--insert-gcov-profiling",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--redundant-dbg-inst-elim",
      "--loop-simplify",
      "--strip-nondebug",
      "--partial-inliner",
      "--infer-address-spaces",
      "--loweratomic",
      "--aggressive-instcombine",
      "--irce",
      "--forceattrs",
      "--functionattrs",
      "--loop-distribute",
      "--speculative-execution",
      "--rpo-functionattrs",
      "--inferattrs",
      "--lower-guard-intrinsic",
      "--instnamer",
      "--sroa",
      "--loop-versioning-licm",
      "--insert-gcov-profiling",
      "--bdce"
    ],
    "performance_vs_Oz": "+3.7%"
  }
}