{
  "program_id": "poj104-v1_97_3534.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 0,
    "oneSuccessor": 14,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 6,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 32,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 30,
    "const32Bit": 51,
    "const64Bit": 19,
    "numConstZeroes": 13,
    "numConstOnes": 27,
    "UncondBranches": 14,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 19,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 29,
    "NumBitCastInst": 21,
    "NumBrInst": 22,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 30,
    "NumSubInst": 6,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 32,
    "TotalInsts": 215,
    "TotalMemInst": 141,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 85
  },
  "baseline_oz_instcount": 120,
  "knowledge_base_entry": [
    "--die",
    "--elim-avail-extern",
    "--simplifycfg",
    "--flattencfg",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--sroa",
    "--instsimplify",
    "--simplifycfg",
    "--sccp",
    "--inline",
    "--instcombine",
    "--dce",
    "--mergefunc",
    "--bdce",
    "--early-cse-memssa",
    "--slsr",
    "--early-cse",
    "--loop-fusion",
    "--simplifycfg",
    "--reassociate",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--guard-widening",
          "--constmerge",
          "--consthoist",
          "--elim-avail-extern",
          "--argpromotion",
          "--deadargelim",
          "--early-cse-memssa",
          "--insert-gcov-profiling",
          "--slp-vectorizer",
          "--scalarizer",
          "--loop-idiom",
          "--always-inline",
          "--lower-guard-intrinsic",
          "--loop-deletion",
          "--speculative-execution",
          "--rewrite-statepoints-for-gc",
          "--strip-dead-prototypes",
          "--loop-load-elim",
          "--alignment-from-assumptions",
          "--sancov",
          "--strip",
          "--reassociate",
          "--sroa",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+17.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--guard-widening",
      "--constmerge",
      "--consthoist",
      "--elim-avail-extern",
      "--argpromotion",
      "--deadargelim",
      "--early-cse-memssa",
      "--insert-gcov-profiling",
      "--slp-vectorizer",
      "--scalarizer",
      "--loop-idiom",
      "--always-inline",
      "--lower-guard-intrinsic",
      "--loop-deletion",
      "--speculative-execution",
      "--rewrite-statepoints-for-gc",
      "--strip-dead-prototypes",
      "--loop-load-elim",
      "--alignment-from-assumptions",
      "--sancov",
      "--strip",
      "--reassociate",
      "--sroa",
      "--float2int"
    ],
    "performance_vs_Oz": "+17.5%"
  }
}