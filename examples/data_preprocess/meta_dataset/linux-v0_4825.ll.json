{
  "program_id": "linux-v0_4825.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 6,
    "oneSuccessor": 21,
    "twoPred": 10,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 77,
    "CriticalCount": 5,
    "NumEdges": 45,
    "const32Bit": 284,
    "const64Bit": 9,
    "numConstZeroes": 132,
    "numConstOnes": 34,
    "UncondBranches": 21,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 24,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 38,
    "NumBitCastInst": 55,
    "NumBrInst": 33,
    "NumCallInst": 85,
    "NumGetElementPtrInst": 108,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 139,
    "NumMulInst": 1,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 29,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 49,
    "TotalBlocks": 47,
    "TotalInsts": 568,
    "TotalMemInst": 385,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 268
  },
  "baseline_oz_instcount": 567,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--lower-expect",
    "--dse",
    "--licm",
    "--elim-avail-extern",
    "--dce",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--reassociate",
    "--early-cse-memssa",
    "--globalopt",
    "--ipsccp",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--loop-reroll",
    "--early-cse-memssa",
    "--dse",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--die",
    "--ipsccp",
    "--licm",
    "--early-cse-memssa",
    "--prune-eh",
    "--lower-expect",
    "--mergefunc",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--prune-eh",
    "--newgvn",
    "--bdce",
    "--lower-constant-intrinsics",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--die",
    "--ipsccp",
    "--licm",
    "--jump-threading",
    "--early-cse-memssa",
    "--mergefunc",
    "--globaldce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-matrix-intrinsics",
          "--loop-distribute",
          "--mergefunc",
          "--strip-dead-prototypes",
          "--dse",
          "--ipsccp",
          "--loop-interchange",
          "--sccp",
          "--globalopt",
          "--mergereturn",
          "--loop-unroll",
          "--barrier",
          "--guard-widening",
          "--dce",
          "--canonicalize-aliases",
          "--aggressive-instcombine",
          "-loop-reduce",
          "--loop-rotate",
          "--loop-unroll-and-jam",
          "--loop-simplify",
          "--loop-simplifycfg",
          "--loop-instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-matrix-intrinsics",
      "--loop-distribute",
      "--mergefunc",
      "--strip-dead-prototypes",
      "--dse",
      "--ipsccp",
      "--loop-interchange",
      "--sccp",
      "--globalopt",
      "--mergereturn",
      "--loop-unroll",
      "--barrier",
      "--guard-widening",
      "--dce",
      "--canonicalize-aliases",
      "--aggressive-instcombine",
      "-loop-reduce",
      "--loop-rotate",
      "--loop-unroll-and-jam",
      "--loop-simplify",
      "--loop-simplifycfg",
      "--loop-instsimplify"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}