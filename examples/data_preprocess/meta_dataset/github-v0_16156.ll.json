{
  "program_id": "github-v0_16156.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 12,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 4,
    "const32Bit": 42,
    "const64Bit": 6,
    "numConstZeroes": 28,
    "numConstOnes": 20,
    "UncondBranches": 2,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 9,
    "NumBitCastInst": 2,
    "NumBrInst": 3,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 12,
    "TotalInsts": 117,
    "TotalMemInst": 100,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 54
  },
  "baseline_oz_instcount": 117,
  "knowledge_base_entry": [
    "--reg2mem",
    "--gvn-hoist",
    "--simplifycfg",
    "--lower-expect",
    "--ipsccp",
    "--globaldce",
    "--mergefunc",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--slsr",
    "--instcombine",
    "--mergefunc",
    "--globaldce",
    "--mergefunc",
    "--mem2reg",
    "--early-cse-memssa",
    "--simplifycfg",
    "--slsr",
    "--instcombine",
    "--aggressive-instcombine",
    "--jump-threading",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--pgo-memop-opt",
          "--break-crit-edges",
          "--div-rem-pairs",
          "--elim-avail-extern",
          "--sroa",
          "--dse",
          "--licm",
          "--constprop",
          "--post-inline-ee-instrument",
          "--loop-fusion",
          "--mergefunc",
          "--loop-idiom",
          "--inline",
          "--coro-cleanup",
          "--sink",
          "--forceattrs",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--pgo-memop-opt",
      "--break-crit-edges",
      "--div-rem-pairs",
      "--elim-avail-extern",
      "--sroa",
      "--dse",
      "--licm",
      "--constprop",
      "--post-inline-ee-instrument",
      "--loop-fusion",
      "--mergefunc",
      "--loop-idiom",
      "--inline",
      "--coro-cleanup",
      "--sink",
      "--forceattrs",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+4.3%"
  }
}