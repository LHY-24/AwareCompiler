{
  "program_id": "linux-v0_6354.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 22,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 5,
    "oneSuccessor": 20,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 1,
    "BranchCount": 33,
    "returnInt": 5,
    "CriticalCount": 4,
    "NumEdges": 46,
    "const32Bit": 159,
    "const64Bit": 8,
    "numConstZeroes": 83,
    "numConstOnes": 30,
    "UncondBranches": 20,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 26,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 35,
    "NumBitCastInst": 5,
    "NumBrInst": 33,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 57,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 87,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 10,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 41,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 43,
    "TotalInsts": 292,
    "TotalMemInst": 222,
    "TotalFuncs": 18,
    "ArgsPhi": 2,
    "testUnary": 123
  },
  "baseline_oz_instcount": 292,
  "knowledge_base_entry": [
    "--mergefunc",
    "--bdce",
    "--aggressive-instcombine",
    "--lower-expect",
    "--simplifycfg",
    "--inline",
    "--loop-rotate",
    "--instsimplify",
    "--licm",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--gvn",
    "--slp-vectorizer",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--flattencfg",
          "--adce",
          "--loop-versioning-licm",
          "--rewrite-statepoints-for-gc",
          "--alignment-from-assumptions",
          "--simple-loop-unswitch",
          "--partially-inline-libcalls",
          "--inferattrs",
          "--loop-instsimplify",
          "--loop-simplifycfg",
          "--mergefunc",
          "--strip-dead-prototypes",
          "--loop-unroll-and-jam",
          "--inject-tli-mappings",
          "--forceattrs",
          "--mem2reg",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--flattencfg",
      "--adce",
      "--loop-versioning-licm",
      "--rewrite-statepoints-for-gc",
      "--alignment-from-assumptions",
      "--simple-loop-unswitch",
      "--partially-inline-libcalls",
      "--inferattrs",
      "--loop-instsimplify",
      "--loop-simplifycfg",
      "--mergefunc",
      "--strip-dead-prototypes",
      "--loop-unroll-and-jam",
      "--inject-tli-mappings",
      "--forceattrs",
      "--mem2reg",
      "--bdce"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}