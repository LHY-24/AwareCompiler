{
  "program_id": "github-v0_23718.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 35,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 7,
    "oneSuccessor": 17,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 16,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 12,
    "CriticalCount": 2,
    "NumEdges": 49,
    "const32Bit": 50,
    "const64Bit": 4,
    "numConstZeroes": 15,
    "numConstOnes": 24,
    "UncondBranches": 17,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 17,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 45,
    "NumBitCastInst": 2,
    "NumBrInst": 33,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 66,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 35,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 47,
    "TotalInsts": 243,
    "TotalMemInst": 166,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 91
  },
  "baseline_oz_instcount": 246,
  "knowledge_base_entry": [
    "--instcombine",
    "--lower-constant-intrinsics",
    "--sccp",
    "--loop-simplifycfg",
    "--dce",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--slsr",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--loop-unswitch",
          "--lowerswitch",
          "--early-cse",
          "--loop-fusion",
          "--loop-sink",
          "--redundant-dbg-inst-elim",
          "--sccp",
          "--sancov",
          "--loop-predication",
          "--memcpyopt",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--loop-unswitch",
      "--lowerswitch",
      "--early-cse",
      "--loop-fusion",
      "--loop-sink",
      "--redundant-dbg-inst-elim",
      "--sccp",
      "--sancov",
      "--loop-predication",
      "--memcpyopt",
      "--licm"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}