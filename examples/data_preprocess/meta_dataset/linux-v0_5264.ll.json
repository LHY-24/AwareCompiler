{
  "program_id": "linux-v0_5264.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 0,
    "oneSuccessor": 13,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 24,
    "const32Bit": 378,
    "const64Bit": 0,
    "numConstZeroes": 115,
    "numConstOnes": 58,
    "UncondBranches": 13,
    "binaryConstArg": 141,
    "NumAShrInst": 29,
    "NumAddInst": 3,
    "NumAllocaInst": 24,
    "NumAndInst": 69,
    "BlockMid": 8,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 13,
    "NumCallInst": 61,
    "NumGetElementPtrInst": 102,
    "NumICmpInst": 0,
    "NumLShrInst": 12,
    "NumLoadInst": 139,
    "NumMulInst": 0,
    "NumOrInst": 22,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 55,
    "NumSubInst": 22,
    "NumTruncInst": 71,
    "NumXorInst": 1,
    "NumZExtInst": 91,
    "TotalBlocks": 27,
    "TotalInsts": 735,
    "TotalMemInst": 381,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 325
  },
  "baseline_oz_instcount": 735,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--instcombine",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--flattencfg",
    "--early-cse",
    "--instsimplify",
    "--globalopt",
    "--flattencfg",
    "--loop-simplifycfg",
    "--die",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--early-cse",
          "--strip-nondebug",
          "--deadargelim",
          "--loop-predication",
          "--loop-unswitch",
          "--early-cse-memssa",
          "--inferattrs",
          "--canonicalize-aliases",
          "--lower-guard-intrinsic",
          "--float2int",
          "--coro-early",
          "--argpromotion",
          "--aggressive-instcombine",
          "--loop-rotate",
          "--mergeicmps",
          "--gvn",
          "--loop-reroll",
          "--loop-guard-widening",
          "--dce",
          "--scalarizer",
          "--loop-versioning",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--early-cse",
      "--strip-nondebug",
      "--deadargelim",
      "--loop-predication",
      "--loop-unswitch",
      "--early-cse-memssa",
      "--inferattrs",
      "--canonicalize-aliases",
      "--lower-guard-intrinsic",
      "--float2int",
      "--coro-early",
      "--argpromotion",
      "--aggressive-instcombine",
      "--loop-rotate",
      "--mergeicmps",
      "--gvn",
      "--loop-reroll",
      "--loop-guard-widening",
      "--dce",
      "--scalarizer",
      "--loop-versioning",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+8.6%"
  }
}