{
  "program_id": "opencv-v0_39.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 1,
    "onePred": 19,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 5,
    "oneSuccessor": 16,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 2,
    "BBNoPhi": 30,
    "BeginPhi": 3,
    "BranchCount": 27,
    "returnInt": 1,
    "CriticalCount": 7,
    "NumEdges": 42,
    "const32Bit": 94,
    "const64Bit": 79,
    "numConstZeroes": 99,
    "numConstOnes": 25,
    "UncondBranches": 16,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 1,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 28,
    "NumBitCastInst": 19,
    "NumBrInst": 27,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 80,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 9,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 3,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 5,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 33,
    "TotalInsts": 302,
    "TotalMemInst": 204,
    "TotalFuncs": 9,
    "ArgsPhi": 18,
    "testUnary": 107
  },
  "baseline_oz_instcount": 302,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--bdce",
    "--mem2reg",
    "--globalopt",
    "--jump-threading",
    "--correlated-propagation",
    "--nary-reassociate",
    "--early-cse",
    "--sccp",
    "--loop-instsimplify",
    "--instcombine",
    "--aggressive-instcombine",
    "--bdce",
    "--gvn-hoist",
    "--loop-rotate",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--strip-nondebug",
          "--partially-inline-libcalls",
          "--lcssa",
          "--coro-elide",
          "--gvn-hoist",
          "--loop-distribute",
          "--indvars",
          "--loop-vectorize",
          "--mldst-motion",
          "--loop-sink",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--strip-nondebug",
      "--partially-inline-libcalls",
      "--lcssa",
      "--coro-elide",
      "--gvn-hoist",
      "--loop-distribute",
      "--indvars",
      "--loop-vectorize",
      "--mldst-motion",
      "--loop-sink",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}