{
  "program_id": "github-v0_2463.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 72,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 18,
    "oneSuccessor": 65,
    "twoPred": 35,
    "twoPredOneSuc": 10,
    "twoEach": 13,
    "twoSuccessor": 47,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 138,
    "BeginPhi": 1,
    "BranchCount": 112,
    "returnInt": 9,
    "CriticalCount": 24,
    "NumEdges": 159,
    "const32Bit": 404,
    "const64Bit": 34,
    "numConstZeroes": 204,
    "numConstOnes": 116,
    "UncondBranches": 65,
    "binaryConstArg": 43,
    "NumAShrInst": 4,
    "NumAddInst": 23,
    "NumAllocaInst": 62,
    "NumAndInst": 4,
    "BlockMid": 21,
    "BlockLow": 118,
    "NumBitCastInst": 10,
    "NumBrInst": 112,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 137,
    "NumICmpInst": 49,
    "NumLShrInst": 5,
    "NumLoadInst": 335,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 19,
    "NumSExtInst": 5,
    "NumSelectInst": 1,
    "NumShlInst": 7,
    "NumStoreInst": 134,
    "NumSubInst": 15,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 139,
    "TotalInsts": 993,
    "TotalMemInst": 707,
    "TotalFuncs": 24,
    "ArgsPhi": 2,
    "testUnary": 431
  },
  "baseline_oz_instcount": 985,
  "knowledge_base_entry": [
    "--ipsccp",
    "--adce",
    "--instsimplify",
    "--gvn-hoist",
    "--die",
    "--inline",
    "--loop-simplifycfg",
    "--licm",
    "--newgvn",
    "--early-cse",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partial-inliner",
          "--loop-versioning",
          "--pgo-memop-opt",
          "--bdce",
          "--globalopt",
          "--coro-early",
          "--lowerinvoke",
          "--loop-sink",
          "--lower-matrix-intrinsics",
          "--mldst-motion",
          "--nary-reassociate",
          "--mergefunc",
          "--loop-simplifycfg",
          "--load-store-vectorizer",
          "--simple-loop-unswitch",
          "--name-anon-globals",
          "--loop-rotate",
          "--elim-avail-extern",
          "--strip-nondebug",
          "--adce",
          "--dce",
          "--alignment-from-assumptions",
          "--inline",
          "--cross-dso-cfi",
          "--gvn",
          "--hotcoldsplit",
          "--div-rem-pairs",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partial-inliner",
      "--loop-versioning",
      "--pgo-memop-opt",
      "--bdce",
      "--globalopt",
      "--coro-early",
      "--lowerinvoke",
      "--loop-sink",
      "--lower-matrix-intrinsics",
      "--mldst-motion",
      "--nary-reassociate",
      "--mergefunc",
      "--loop-simplifycfg",
      "--load-store-vectorizer",
      "--simple-loop-unswitch",
      "--name-anon-globals",
      "--loop-rotate",
      "--elim-avail-extern",
      "--strip-nondebug",
      "--adce",
      "--dce",
      "--alignment-from-assumptions",
      "--inline",
      "--cross-dso-cfi",
      "--gvn",
      "--hotcoldsplit",
      "--div-rem-pairs",
      "--instcombine"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}