{
  "program_id": "linux-v0_521.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 33,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 9,
    "oneSuccessor": 28,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 55,
    "BeginPhi": 0,
    "BranchCount": 46,
    "returnInt": 6,
    "CriticalCount": 6,
    "NumEdges": 64,
    "const32Bit": 226,
    "const64Bit": 16,
    "numConstZeroes": 132,
    "numConstOnes": 64,
    "UncondBranches": 28,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 45,
    "NumAndInst": 2,
    "BlockMid": 17,
    "BlockLow": 38,
    "NumBitCastInst": 40,
    "NumBrInst": 46,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 89,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 206,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 53,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 55,
    "TotalInsts": 590,
    "TotalMemInst": 441,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 309
  },
  "baseline_oz_instcount": 590,
  "knowledge_base_entry": [
    "--mem2reg",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--bdce",
    "--die",
    "--mem2reg",
    "--loop-rotate",
    "--inline",
    "--nary-reassociate",
    "--mem2reg",
    "--gvn-hoist",
    "--instsimplify",
    "--instcombine",
    "--loop-deletion",
    "--jump-threading",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--licm",
    "--memcpyopt",
    "--instcombine",
    "--loop-instsimplify",
    "--instcombine",
    "--licm",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--early-cse",
    "--globalopt",
    "--aggressive-instcombine",
    "--instsimplify",
    "--loop-simplifycfg",
    "--flattencfg",
    "--gvn",
    "--dse",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--bdce",
    "--die",
    "--mem2reg",
    "--loop-rotate",
    "--inline",
    "--nary-reassociate",
    "--mem2reg",
    "--gvn-hoist",
    "--instsimplify",
    "--instcombine",
    "--inline",
    "--reassociate",
    "--slp-vectorizer",
    "--slsr",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--functionattrs",
          "--constmerge",
          "--adce",
          "--cross-dso-cfi",
          "--inject-tli-mappings",
          "--always-inline",
          "--argpromotion",
          "--aggressive-instcombine",
          "--slsr",
          "--memcpyopt",
          "--strip-nondebug",
          "--die",
          "--coro-elide"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--functionattrs",
      "--constmerge",
      "--adce",
      "--cross-dso-cfi",
      "--inject-tli-mappings",
      "--always-inline",
      "--argpromotion",
      "--aggressive-instcombine",
      "--slsr",
      "--memcpyopt",
      "--strip-nondebug",
      "--die",
      "--coro-elide"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}