{
  "program_id": "github-v0_18733.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 38,
    "const64Bit": 81,
    "numConstZeroes": 73,
    "numConstOnes": 36,
    "UncondBranches": 15,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 18,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 20,
    "NumBitCastInst": 28,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 71,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 75,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 28,
    "TotalBlocks": 27,
    "TotalInsts": 313,
    "TotalMemInst": 208,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 155
  },
  "baseline_oz_instcount": 313,
  "knowledge_base_entry": [
    "--irce",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplify",
          "--sink",
          "--loop-simplifycfg",
          "--inline",
          "--aggressive-instcombine",
          "--mergereturn",
          "--sroa",
          "--scalarizer",
          "--strip-debug-declare",
          "--early-cse",
          "--reg2mem",
          "--newgvn",
          "--reassociate",
          "--globalsplit",
          "--loop-data-prefetch",
          "--early-cse-memssa",
          "--adce",
          "--dce",
          "--always-inline",
          "--flattencfg",
          "--ipconstprop",
          "--loop-unroll-and-jam",
          "--nary-reassociate",
          "--loop-reroll",
          "--called-value-propagation",
          "--instcombine",
          "--name-anon-globals",
          "--load-store-vectorizer",
          "--deadargelim",
          "--pgo-memop-opt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplify",
      "--sink",
      "--loop-simplifycfg",
      "--inline",
      "--aggressive-instcombine",
      "--mergereturn",
      "--sroa",
      "--scalarizer",
      "--strip-debug-declare",
      "--early-cse",
      "--reg2mem",
      "--newgvn",
      "--reassociate",
      "--globalsplit",
      "--loop-data-prefetch",
      "--early-cse-memssa",
      "--adce",
      "--dce",
      "--always-inline",
      "--flattencfg",
      "--ipconstprop",
      "--loop-unroll-and-jam",
      "--nary-reassociate",
      "--loop-reroll",
      "--called-value-propagation",
      "--instcombine",
      "--name-anon-globals",
      "--load-store-vectorizer",
      "--deadargelim",
      "--pgo-memop-opt"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}