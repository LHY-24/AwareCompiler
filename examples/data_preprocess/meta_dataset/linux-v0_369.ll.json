{
  "program_id": "linux-v0_369.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 14,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 2,
    "oneSuccessor": 14,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 1,
    "BranchCount": 24,
    "returnInt": 1,
    "CriticalCount": 6,
    "NumEdges": 34,
    "const32Bit": 37,
    "const64Bit": 0,
    "numConstZeroes": 8,
    "numConstOnes": 11,
    "UncondBranches": 14,
    "binaryConstArg": 13,
    "NumAShrInst": 3,
    "NumAddInst": 3,
    "NumAllocaInst": 6,
    "NumAndInst": 2,
    "BlockMid": 1,
    "BlockLow": 25,
    "NumBitCastInst": 0,
    "NumBrInst": 24,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 10,
    "NumLShrInst": 1,
    "NumLoadInst": 31,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 16,
    "NumSubInst": 3,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 19,
    "TotalBlocks": 26,
    "TotalInsts": 141,
    "TotalMemInst": 58,
    "TotalFuncs": 3,
    "ArgsPhi": 2,
    "testUnary": 64
  },
  "baseline_oz_instcount": 141,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--flattencfg",
    "--loop-simplifycfg",
    "--dce",
    "--aggressive-instcombine",
    "--early-cse",
    "--reassociate",
    "--licm",
    "--nary-reassociate",
    "--instcombine",
    "--instsimplify",
    "--reassociate",
    "--dse",
    "--dce",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "-loop-reduce",
          "--loop-reroll",
          "--loop-idiom",
          "--inject-tli-mappings",
          "--loop-interchange",
          "--mergeicmps",
          "--name-anon-globals",
          "--adce",
          "--irce",
          "--early-cse-memssa",
          "--rewrite-statepoints-for-gc",
          "--loop-versioning-licm",
          "--partially-inline-libcalls",
          "--elim-avail-extern",
          "--flattencfg",
          "--ee-instrument",
          "--barrier",
          "--sink",
          "--slp-vectorizer",
          "--simplifycfg",
          "--div-rem-pairs",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "-loop-reduce",
      "--loop-reroll",
      "--loop-idiom",
      "--inject-tli-mappings",
      "--loop-interchange",
      "--mergeicmps",
      "--name-anon-globals",
      "--adce",
      "--irce",
      "--early-cse-memssa",
      "--rewrite-statepoints-for-gc",
      "--loop-versioning-licm",
      "--partially-inline-libcalls",
      "--elim-avail-extern",
      "--flattencfg",
      "--ee-instrument",
      "--barrier",
      "--sink",
      "--slp-vectorizer",
      "--simplifycfg",
      "--div-rem-pairs",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}