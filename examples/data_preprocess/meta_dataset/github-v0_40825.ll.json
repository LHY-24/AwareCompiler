{
  "program_id": "github-v0_40825.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 34,
    "const64Bit": 27,
    "numConstZeroes": 29,
    "numConstOnes": 23,
    "UncondBranches": 11,
    "binaryConstArg": 14,
    "NumAShrInst": 4,
    "NumAddInst": 5,
    "NumAllocaInst": 12,
    "NumAndInst": 4,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 40,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 1,
    "NumZExtInst": 23,
    "TotalBlocks": 21,
    "TotalInsts": 183,
    "TotalMemInst": 100,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 90
  },
  "baseline_oz_instcount": 183,
  "knowledge_base_entry": [
    "--loop-versioning-licm",
    "--newgvn",
    "--loop-simplifycfg",
    "--instsimplify",
    "--instcombine",
    "--aggressive-instcombine",
    "--flattencfg",
    "--globalopt",
    "--lower-expect",
    "--dce",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--load-store-vectorizer",
    "--adce",
    "--instsimplify",
    "--loop-reroll",
    "--correlated-propagation",
    "--early-cse",
    "--instsimplify",
    "--dse",
    "--bdce",
    "--reassociate",
    "--die",
    "--lower-expect",
    "--instcombine",
    "--aggressive-instcombine",
    "--flattencfg",
    "--globalopt",
    "--lower-expect",
    "--dce",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--load-store-vectorizer",
    "--adce",
    "--instsimplify",
    "--loop-reroll",
    "--slp-vectorizer",
    "--jump-threading",
    "-loop-reduce",
    "--newgvn",
    "--mergefunc",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loweratomic",
          "--elim-avail-extern",
          "--float2int",
          "--sancov",
          "--callsite-splitting",
          "--loop-vectorize",
          "--bdce",
          "--aggressive-instcombine",
          "--loop-distribute",
          "--pgo-memop-opt",
          "--loop-deletion",
          "--strip-nondebug",
          "--attributor",
          "--globalsplit",
          "--inline",
          "--lowerswitch",
          "--loop-versioning-licm",
          "--sink",
          "--sroa",
          "--dce",
          "--early-cse-memssa",
          "--correlated-propagation",
          "--called-value-propagation",
          "--loop-unroll-and-jam",
          "--loop-idiom",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loweratomic",
      "--elim-avail-extern",
      "--float2int",
      "--sancov",
      "--callsite-splitting",
      "--loop-vectorize",
      "--bdce",
      "--aggressive-instcombine",
      "--loop-distribute",
      "--pgo-memop-opt",
      "--loop-deletion",
      "--strip-nondebug",
      "--attributor",
      "--globalsplit",
      "--inline",
      "--lowerswitch",
      "--loop-versioning-licm",
      "--sink",
      "--sroa",
      "--dce",
      "--early-cse-memssa",
      "--correlated-propagation",
      "--called-value-propagation",
      "--loop-unroll-and-jam",
      "--loop-idiom",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+6.6%"
  }
}