{
  "program_id": "linux-v0_12439.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 15,
    "CriticalCount": 0,
    "NumEdges": 9,
    "const32Bit": 23,
    "const64Bit": 2,
    "numConstZeroes": 10,
    "numConstOnes": 13,
    "UncondBranches": 5,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 15,
    "NumBitCastInst": 2,
    "NumBrInst": 7,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 16,
    "TotalInsts": 99,
    "TotalMemInst": 72,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 38
  },
  "baseline_oz_instcount": 79,
  "knowledge_base_entry": [
    "--loop-rotate",
    "--early-cse-memssa",
    "--licm",
    "--globalopt",
    "--inline",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--licm",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--sroa",
    "--indvars",
    "--newgvn",
    "--jump-threading",
    "--aggressive-instcombine",
    "--mem2reg",
    "--bdce",
    "--early-cse",
    "--reassociate",
    "--prune-eh",
    "--early-cse-memssa",
    "--gvn",
    "--early-cse",
    "--newgvn",
    "--adce",
    "--lower-expect",
    "--correlated-propagation",
    "--dce",
    "--correlated-propagation",
    "--jump-threading",
    "-loop-reduce",
    "--newgvn",
    "--ipsccp",
    "--early-cse",
    "--lower-expect",
    "--loop-instsimplify",
    "--die",
    "--licm",
    "--mergefunc",
    "--loop-instsimplify",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--reg2mem",
          "--early-cse",
          "--partially-inline-libcalls",
          "--gvn-hoist",
          "--mergeicmps",
          "--loop-unroll",
          "--attributor",
          "--consthoist",
          "--licm",
          "--gvn",
          "--globalopt",
          "--callsite-splitting",
          "--lowerinvoke",
          "--instsimplify",
          "--loop-simplify",
          "--strip",
          "--ipsccp",
          "--loop-distribute",
          "--inline",
          "--mergefunc",
          "--loop-fusion",
          "--deadargelim",
          "--mem2reg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--reg2mem",
      "--early-cse",
      "--partially-inline-libcalls",
      "--gvn-hoist",
      "--mergeicmps",
      "--loop-unroll",
      "--attributor",
      "--consthoist",
      "--licm",
      "--gvn",
      "--globalopt",
      "--callsite-splitting",
      "--lowerinvoke",
      "--instsimplify",
      "--loop-simplify",
      "--strip",
      "--ipsccp",
      "--loop-distribute",
      "--inline",
      "--mergefunc",
      "--loop-fusion",
      "--deadargelim",
      "--mem2reg"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}