{
  "program_id": "linux-v0_12241.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 59,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 9,
    "oneSuccessor": 58,
    "twoPred": 16,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 18,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 108,
    "BeginPhi": 0,
    "BranchCount": 76,
    "returnInt": 27,
    "CriticalCount": 13,
    "NumEdges": 126,
    "const32Bit": 312,
    "const64Bit": 29,
    "numConstZeroes": 142,
    "numConstOnes": 98,
    "UncondBranches": 58,
    "binaryConstArg": 29,
    "NumAShrInst": 1,
    "NumAddInst": 3,
    "NumAllocaInst": 75,
    "NumAndInst": 7,
    "BlockMid": 11,
    "BlockLow": 97,
    "NumBitCastInst": 11,
    "NumBrInst": 76,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 190,
    "NumMulInst": 2,
    "NumOrInst": 10,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 125,
    "NumSubInst": 2,
    "NumTruncInst": 9,
    "NumXorInst": 2,
    "NumZExtInst": 18,
    "TotalBlocks": 108,
    "TotalInsts": 726,
    "TotalMemInst": 511,
    "TotalFuncs": 47,
    "ArgsPhi": 0,
    "testUnary": 321
  },
  "baseline_oz_instcount": 727,
  "knowledge_base_entry": [
    "--inferattrs",
    "--early-cse-memssa",
    "--flattencfg",
    "--globalopt",
    "--mem2reg",
    "--aggressive-instcombine",
    "--lower-expect",
    "--early-cse",
    "--load-store-vectorizer",
    "--jump-threading",
    "--early-cse",
    "--globalopt",
    "--instsimplify",
    "--bdce",
    "--lower-expect",
    "--elim-avail-extern",
    "--globalopt",
    "--loweratomic"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--sink",
          "--globalopt",
          "--reassociate",
          "--strip-nondebug",
          "--loop-vectorize",
          "--coro-cleanup",
          "--loop-rotate",
          "--aggressive-instcombine",
          "--div-rem-pairs",
          "--loop-simplify",
          "--lower-constant-intrinsics",
          "--strip",
          "--sroa",
          "--slsr"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--sink",
      "--globalopt",
      "--reassociate",
      "--strip-nondebug",
      "--loop-vectorize",
      "--coro-cleanup",
      "--loop-rotate",
      "--aggressive-instcombine",
      "--div-rem-pairs",
      "--loop-simplify",
      "--lower-constant-intrinsics",
      "--strip",
      "--sroa",
      "--slsr"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}