{
  "program_id": "github-v0_7842.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 4,
    "oneSuccessor": 14,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 30,
    "const32Bit": 33,
    "const64Bit": 46,
    "numConstZeroes": 43,
    "numConstOnes": 26,
    "UncondBranches": 14,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 21,
    "NumBitCastInst": 8,
    "NumBrInst": 22,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 39,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 26,
    "TotalInsts": 179,
    "TotalMemInst": 114,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 75
  },
  "baseline_oz_instcount": 179,
  "knowledge_base_entry": [
    "--irce",
    "--instcombine",
    "--loop-deletion",
    "--gvn",
    "--elim-avail-extern",
    "--die",
    "--aggressive-instcombine",
    "--newgvn",
    "--bdce",
    "--correlated-propagation",
    "--gvn",
    "--reassociate",
    "--jump-threading",
    "--flattencfg",
    "--mem2reg",
    "--prune-eh",
    "--instcombine",
    "--licm",
    "--early-cse",
    "--correlated-propagation",
    "--bdce",
    "--simplifycfg",
    "--mem2reg",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll",
          "--loop-interchange",
          "--name-anon-globals",
          "--loop-idiom",
          "--loop-unroll-and-jam",
          "--rpo-functionattrs",
          "--lower-expect",
          "--barrier",
          "--div-rem-pairs",
          "--alignment-from-assumptions",
          "--loop-reroll",
          "--speculative-execution",
          "--aggressive-instcombine",
          "--loop-deletion",
          "--slp-vectorizer",
          "--deadargelim",
          "--globaldce",
          "--globalsplit",
          "--mem2reg",
          "--loop-unswitch",
          "--loop-guard-widening",
          "--loop-versioning",
          "--dse",
          "--ipconstprop",
          "--instnamer",
          "--coro-split",
          "--loweratomic",
          "--early-cse-memssa",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll",
      "--loop-interchange",
      "--name-anon-globals",
      "--loop-idiom",
      "--loop-unroll-and-jam",
      "--rpo-functionattrs",
      "--lower-expect",
      "--barrier",
      "--div-rem-pairs",
      "--alignment-from-assumptions",
      "--loop-reroll",
      "--speculative-execution",
      "--aggressive-instcombine",
      "--loop-deletion",
      "--slp-vectorizer",
      "--deadargelim",
      "--globaldce",
      "--globalsplit",
      "--mem2reg",
      "--loop-unswitch",
      "--loop-guard-widening",
      "--loop-versioning",
      "--dse",
      "--ipconstprop",
      "--instnamer",
      "--coro-split",
      "--loweratomic",
      "--early-cse-memssa",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}