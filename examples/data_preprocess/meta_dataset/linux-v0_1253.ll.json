{
  "program_id": "linux-v0_1253.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 14,
    "oneSuccessor": 44,
    "twoPred": 6,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 19,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 79,
    "BeginPhi": 0,
    "BranchCount": 63,
    "returnInt": 19,
    "CriticalCount": 5,
    "NumEdges": 82,
    "const32Bit": 241,
    "const64Bit": 15,
    "numConstZeroes": 114,
    "numConstOnes": 65,
    "UncondBranches": 44,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 54,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 73,
    "NumBitCastInst": 19,
    "NumBrInst": 63,
    "NumCallInst": 47,
    "NumGetElementPtrInst": 84,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 167,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 81,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 4,
    "NumZExtInst": 3,
    "TotalBlocks": 79,
    "TotalInsts": 580,
    "TotalMemInst": 433,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 260
  },
  "baseline_oz_instcount": 577,
  "knowledge_base_entry": [
    "--ipsccp",
    "--loweratomic",
    "--instcombine",
    "--instsimplify",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--ipsccp",
    "--mem2reg",
    "--aggressive-instcombine",
    "--die",
    "--gvn",
    "--mergefunc",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--prune-eh",
    "--simplifycfg",
    "--mldst-motion",
    "--instsimplify",
    "--nary-reassociate",
    "--sroa",
    "--dce",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-instsimplify",
          "--loop-predication",
          "--mergereturn",
          "--constprop",
          "--mem2reg",
          "--loop-rotate",
          "--die",
          "--alignment-from-assumptions",
          "--consthoist",
          "--globalopt",
          "--correlated-propagation",
          "--hotcoldsplit",
          "--coro-early",
          "--mldst-motion",
          "--strip-debug-declare",
          "--separate-const-offset-from-gep",
          "--licm",
          "--globaldce",
          "--forceattrs",
          "--coro-elide",
          "--lower-expect",
          "--rewrite-statepoints-for-gc",
          "--adce",
          "--simple-loop-unswitch",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-instsimplify",
      "--loop-predication",
      "--mergereturn",
      "--constprop",
      "--mem2reg",
      "--loop-rotate",
      "--die",
      "--alignment-from-assumptions",
      "--consthoist",
      "--globalopt",
      "--correlated-propagation",
      "--hotcoldsplit",
      "--coro-early",
      "--mldst-motion",
      "--strip-debug-declare",
      "--separate-const-offset-from-gep",
      "--licm",
      "--globaldce",
      "--forceattrs",
      "--coro-elide",
      "--lower-expect",
      "--rewrite-statepoints-for-gc",
      "--adce",
      "--simple-loop-unswitch",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}