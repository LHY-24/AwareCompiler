{
  "program_id": "github-v0_40487.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 36,
    "const64Bit": 26,
    "numConstZeroes": 27,
    "numConstOnes": 24,
    "UncondBranches": 13,
    "binaryConstArg": 15,
    "NumAShrInst": 2,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 3,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 31,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 1,
    "NumZExtInst": 17,
    "TotalBlocks": 24,
    "TotalInsts": 167,
    "TotalMemInst": 85,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 77
  },
  "baseline_oz_instcount": 167,
  "knowledge_base_entry": [
    "--loweratomic",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--mem2reg",
    "--mergefunc",
    "--inline",
    "--dse",
    "--adce",
    "--aggressive-instcombine",
    "--mem2reg",
    "--loop-simplifycfg",
    "--prune-eh",
    "--jump-threading",
    "-loop-reduce",
    "--indvars",
    "--loop-fusion",
    "--gvn",
    "--sroa",
    "--loop-reroll",
    "--instcombine",
    "--reassociate",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--loop-unswitch",
          "--globaldce",
          "--reassociate",
          "--called-value-propagation",
          "--coro-early",
          "--loop-load-elim",
          "--aggressive-instcombine",
          "--cross-dso-cfi",
          "--strip-debug-declare",
          "--irce",
          "--loop-instsimplify",
          "--div-rem-pairs",
          "--instnamer",
          "--tailcallelim",
          "--break-crit-edges",
          "--loop-deletion",
          "--early-cse",
          "--instsimplify",
          "--add-discriminators"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--loop-unswitch",
      "--globaldce",
      "--reassociate",
      "--called-value-propagation",
      "--coro-early",
      "--loop-load-elim",
      "--aggressive-instcombine",
      "--cross-dso-cfi",
      "--strip-debug-declare",
      "--irce",
      "--loop-instsimplify",
      "--div-rem-pairs",
      "--instnamer",
      "--tailcallelim",
      "--break-crit-edges",
      "--loop-deletion",
      "--early-cse",
      "--instsimplify",
      "--add-discriminators"
    ],
    "performance_vs_Oz": "+8.4%"
  }
}