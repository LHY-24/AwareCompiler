{
  "program_id": "github-v0_3494.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 54,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 14,
    "oneSuccessor": 47,
    "twoPred": 18,
    "twoPredOneSuc": 5,
    "twoEach": 9,
    "twoSuccessor": 30,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 88,
    "BeginPhi": 0,
    "BranchCount": 77,
    "returnInt": 10,
    "CriticalCount": 10,
    "NumEdges": 107,
    "const32Bit": 315,
    "const64Bit": 4,
    "numConstZeroes": 161,
    "numConstOnes": 67,
    "UncondBranches": 47,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 35,
    "NumAndInst": 18,
    "BlockMid": 11,
    "BlockLow": 77,
    "NumBitCastInst": 9,
    "NumBrInst": 77,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 122,
    "NumICmpInst": 34,
    "NumLShrInst": 3,
    "NumLoadInst": 283,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 4,
    "NumShlInst": 2,
    "NumStoreInst": 112,
    "NumSubInst": 5,
    "NumTruncInst": 1,
    "NumXorInst": 1,
    "NumZExtInst": 15,
    "TotalBlocks": 88,
    "TotalInsts": 766,
    "TotalMemInst": 574,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 343
  },
  "baseline_oz_instcount": 764,
  "knowledge_base_entry": [
    "--sroa",
    "--lower-constant-intrinsics",
    "--gvn",
    "--gvn-hoist",
    "--mergefunc",
    "--ipsccp",
    "--newgvn",
    "--prune-eh",
    "--gvn",
    "--mldst-motion",
    "--gvn",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partial-inliner",
          "--jump-threading",
          "--inline",
          "--strip",
          "--elim-avail-extern",
          "--constprop",
          "--strip-debug-declare",
          "--tailcallelim",
          "--coro-early",
          "--forceattrs",
          "--coro-cleanup",
          "--post-inline-ee-instrument",
          "--slp-vectorizer",
          "--ipsccp",
          "--separate-const-offset-from-gep",
          "--lower-guard-intrinsic",
          "--hotcoldsplit",
          "--constmerge",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partial-inliner",
      "--jump-threading",
      "--inline",
      "--strip",
      "--elim-avail-extern",
      "--constprop",
      "--strip-debug-declare",
      "--tailcallelim",
      "--coro-early",
      "--forceattrs",
      "--coro-cleanup",
      "--post-inline-ee-instrument",
      "--slp-vectorizer",
      "--ipsccp",
      "--separate-const-offset-from-gep",
      "--lower-guard-intrinsic",
      "--hotcoldsplit",
      "--constmerge",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}