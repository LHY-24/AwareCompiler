{
  "program_id": "linux-v0_9649.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 77,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 24,
    "oneSuccessor": 72,
    "twoPred": 33,
    "twoPredOneSuc": 15,
    "twoEach": 9,
    "twoSuccessor": 46,
    "morePreds": 12,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 145,
    "BeginPhi": 2,
    "BranchCount": 117,
    "returnInt": 32,
    "CriticalCount": 48,
    "NumEdges": 187,
    "const32Bit": 358,
    "const64Bit": 9,
    "numConstZeroes": 158,
    "numConstOnes": 78,
    "UncondBranches": 72,
    "binaryConstArg": 64,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 58,
    "NumAndInst": 34,
    "BlockMid": 8,
    "BlockLow": 139,
    "NumBitCastInst": 13,
    "NumBrInst": 117,
    "NumCallInst": 75,
    "NumGetElementPtrInst": 101,
    "NumICmpInst": 45,
    "NumLShrInst": 12,
    "NumLoadInst": 232,
    "NumMulInst": 1,
    "NumOrInst": 11,
    "NumPHIInst": 2,
    "NumRetInst": 25,
    "NumSExtInst": 2,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 88,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 6,
    "NumZExtInst": 32,
    "TotalBlocks": 147,
    "TotalInsts": 865,
    "TotalMemInst": 554,
    "TotalFuncs": 50,
    "ArgsPhi": 4,
    "testUnary": 340
  },
  "baseline_oz_instcount": 856,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--inline",
    "--mergefunc",
    "--bdce",
    "--licm",
    "--load-store-vectorizer",
    "--instcombine",
    "--mergefunc",
    "--gvn",
    "--dce",
    "--inline",
    "--sccp",
    "--instsimplify",
    "--simplifycfg",
    "--licm",
    "--inline",
    "--flattencfg",
    "--instcombine",
    "--load-store-vectorizer",
    "--newgvn",
    "--ipsccp",
    "--gvn-hoist",
    "--mem2reg",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--dce",
    "--loop-instsimplify",
    "--ipsccp",
    "--adce",
    "--simplifycfg",
    "--die",
    "--elim-avail-extern",
    "--inline",
    "--loop-simplifycfg",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--coro-early",
          "--forceattrs",
          "--post-inline-ee-instrument",
          "--loop-simplifycfg",
          "--attributor",
          "--jump-threading",
          "--loop-simplify",
          "--float2int",
          "--deadargelim",
          "--constmerge",
          "--ipsccp",
          "--loop-unswitch",
          "--adce",
          "--loop-sink",
          "--partial-inliner",
          "--functionattrs",
          "--aggressive-instcombine",
          "--instsimplify",
          "--rewrite-statepoints-for-gc",
          "--coro-cleanup",
          "--always-inline",
          "--licm",
          "--inferattrs",
          "--cross-dso-cfi"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--coro-early",
      "--forceattrs",
      "--post-inline-ee-instrument",
      "--loop-simplifycfg",
      "--attributor",
      "--jump-threading",
      "--loop-simplify",
      "--float2int",
      "--deadargelim",
      "--constmerge",
      "--ipsccp",
      "--loop-unswitch",
      "--adce",
      "--loop-sink",
      "--partial-inliner",
      "--functionattrs",
      "--aggressive-instcombine",
      "--instsimplify",
      "--rewrite-statepoints-for-gc",
      "--coro-cleanup",
      "--always-inline",
      "--licm",
      "--inferattrs",
      "--cross-dso-cfi"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}