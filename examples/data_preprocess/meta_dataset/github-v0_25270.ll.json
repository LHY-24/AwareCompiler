{
  "program_id": "github-v0_25270.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 4,
    "oneSuccessor": 10,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 8,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 0,
    "CriticalCount": 7,
    "NumEdges": 26,
    "const32Bit": 15,
    "const64Bit": 1,
    "numConstZeroes": 2,
    "numConstOnes": 6,
    "UncondBranches": 10,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 18,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 22,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 11,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 19,
    "TotalInsts": 74,
    "TotalMemInst": 39,
    "TotalFuncs": 1,
    "ArgsPhi": 0,
    "testUnary": 30
  },
  "baseline_oz_instcount": 75,
  "knowledge_base_entry": [
    "--mergereturn",
    "--jump-threading",
    "--gvn",
    "--instcombine",
    "--lower-expect",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--flattencfg",
          "--constmerge",
          "--loweratomic",
          "--inferattrs",
          "--partially-inline-libcalls",
          "--inline",
          "--early-cse-memssa",
          "--simplifycfg",
          "--barrier",
          "--callsite-splitting",
          "--mergefunc",
          "--loop-data-prefetch",
          "--lower-expect",
          "--loop-unroll-and-jam",
          "--sancov",
          "--forceattrs",
          "--coro-elide",
          "--prune-eh",
          "--functionattrs",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--flattencfg",
      "--constmerge",
      "--loweratomic",
      "--inferattrs",
      "--partially-inline-libcalls",
      "--inline",
      "--early-cse-memssa",
      "--simplifycfg",
      "--barrier",
      "--callsite-splitting",
      "--mergefunc",
      "--loop-data-prefetch",
      "--lower-expect",
      "--loop-unroll-and-jam",
      "--sancov",
      "--forceattrs",
      "--coro-elide",
      "--prune-eh",
      "--functionattrs",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}