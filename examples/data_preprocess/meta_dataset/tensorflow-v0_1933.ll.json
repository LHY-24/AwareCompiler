{
  "program_id": "tensorflow-v0_1933.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 35,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 15,
    "oneSuccessor": 10,
    "twoPred": 11,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 28,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 61,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 5,
    "CriticalCount": 21,
    "NumEdges": 66,
    "const32Bit": 110,
    "const64Bit": 90,
    "numConstZeroes": 111,
    "numConstOnes": 36,
    "UncondBranches": 10,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 9,
    "NumAndInst": 2,
    "BlockMid": 2,
    "BlockLow": 59,
    "NumBitCastInst": 15,
    "NumBrInst": 23,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 67,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 50,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 61,
    "TotalInsts": 308,
    "TotalMemInst": 214,
    "TotalFuncs": 37,
    "ArgsPhi": 0,
    "testUnary": 82
  },
  "baseline_oz_instcount": 308,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--elim-avail-extern",
    "--inline",
    "--die",
    "--gvn",
    "--loop-simplifycfg",
    "--sccp",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--instsimplify",
    "--simplifycfg",
    "--mldst-motion",
    "--mem2reg",
    "--licm",
    "--globalopt",
    "--mergefunc",
    "--simplifycfg",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--reassociate",
    "--loop-simplifycfg",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-deletion",
          "--sccp",
          "--partial-inliner",
          "--loop-predication",
          "--lowerinvoke",
          "--inferattrs",
          "--globaldce",
          "--coro-elide",
          "--simplifycfg",
          "--hotcoldsplit",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-deletion",
      "--sccp",
      "--partial-inliner",
      "--loop-predication",
      "--lowerinvoke",
      "--inferattrs",
      "--globaldce",
      "--coro-elide",
      "--simplifycfg",
      "--hotcoldsplit",
      "--always-inline"
    ],
    "performance_vs_Oz": "+9.7%"
  }
}