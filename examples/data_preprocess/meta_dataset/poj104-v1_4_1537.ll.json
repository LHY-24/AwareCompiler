{
  "program_id": "poj104-v1_4_1537.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 2,
    "oneSuccessor": 17,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 31,
    "const32Bit": 20,
    "const64Bit": 16,
    "numConstZeroes": 9,
    "numConstOnes": 12,
    "UncondBranches": 17,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 26,
    "NumBitCastInst": 13,
    "NumBrInst": 24,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 30,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 27,
    "TotalInsts": 134,
    "TotalMemInst": 74,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 55
  },
  "baseline_oz_instcount": 80,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--jump-threading",
    "--simplifycfg",
    "--early-cse-memssa",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--mem2reg",
    "--newgvn",
    "--dse",
    "--inline",
    "--instsimplify",
    "--correlated-propagation",
    "--dce",
    "--simplifycfg",
    "--instcombine",
    "--lower-expect",
    "--dse",
    "--inline",
    "--mergefunc",
    "--sroa",
    "--instsimplify",
    "--nary-reassociate",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--dse",
    "--lower-expect",
    "--bdce",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--coro-split",
          "--rpo-functionattrs",
          "--loop-idiom",
          "--infer-address-spaces",
          "--newgvn",
          "--loop-versioning-licm",
          "--jump-threading",
          "--die",
          "--slsr",
          "--loop-deletion",
          "--callsite-splitting",
          "--indvars",
          "--mergefunc",
          "--attributor",
          "--ipsccp",
          "--reassociate",
          "--inline",
          "--called-value-propagation",
          "--flattencfg",
          "--post-inline-ee-instrument",
          "--mem2reg",
          "--loop-sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--coro-split",
      "--rpo-functionattrs",
      "--loop-idiom",
      "--infer-address-spaces",
      "--newgvn",
      "--loop-versioning-licm",
      "--jump-threading",
      "--die",
      "--slsr",
      "--loop-deletion",
      "--callsite-splitting",
      "--indvars",
      "--mergefunc",
      "--attributor",
      "--ipsccp",
      "--reassociate",
      "--inline",
      "--called-value-propagation",
      "--flattencfg",
      "--post-inline-ee-instrument",
      "--mem2reg",
      "--loop-sink"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}