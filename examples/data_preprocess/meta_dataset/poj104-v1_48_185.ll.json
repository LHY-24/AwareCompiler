{
  "program_id": "poj104-v1_48_185.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 36,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 2,
    "oneSuccessor": 34,
    "twoPred": 13,
    "twoPredOneSuc": 2,
    "twoEach": 9,
    "twoSuccessor": 14,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 63,
    "BeginPhi": 0,
    "BranchCount": 48,
    "returnInt": 7,
    "CriticalCount": 1,
    "NumEdges": 62,
    "const32Bit": 97,
    "const64Bit": 81,
    "numConstZeroes": 74,
    "numConstOnes": 65,
    "UncondBranches": 34,
    "binaryConstArg": 32,
    "NumAShrInst": 0,
    "NumAddInst": 24,
    "NumAllocaInst": 28,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 57,
    "NumBitCastInst": 28,
    "NumBrInst": 48,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 61,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 111,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 43,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 48,
    "NumSubInst": 15,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 63,
    "TotalInsts": 481,
    "TotalMemInst": 291,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 211
  },
  "baseline_oz_instcount": 218,
  "knowledge_base_entry": [
    "--lower-expect",
    "--elim-avail-extern",
    "--instcombine",
    "--mem2reg",
    "--newgvn",
    "--load-store-vectorizer",
    "--indvars",
    "--simplifycfg",
    "--lower-expect",
    "--newgvn",
    "--sroa",
    "--dse",
    "--globalopt",
    "--sccp",
    "--lower-expect",
    "--gvn",
    "--loop-rotate",
    "--elim-avail-extern",
    "--mergefunc",
    "--load-store-vectorizer",
    "--adce",
    "--bdce",
    "--inline",
    "--simplifycfg",
    "--sroa",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--sroa",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--inline",
          "--strip-dead-prototypes",
          "--jump-threading",
          "--early-cse-memssa",
          "--barrier",
          "--loop-guard-widening",
          "--elim-avail-extern",
          "--insert-gcov-profiling",
          "--coro-elide",
          "--loop-versioning",
          "--called-value-propagation",
          "--correlated-propagation",
          "--dse",
          "--instcombine",
          "--indvars",
          "--adce",
          "--globaldce",
          "--speculative-execution",
          "--pgo-memop-opt",
          "--mergereturn",
          "--attributor",
          "--rpo-functionattrs",
          "--div-rem-pairs",
          "--globalsplit",
          "--ipsccp",
          "--inferattrs",
          "--irce",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+17.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--inline",
      "--strip-dead-prototypes",
      "--jump-threading",
      "--early-cse-memssa",
      "--barrier",
      "--loop-guard-widening",
      "--elim-avail-extern",
      "--insert-gcov-profiling",
      "--coro-elide",
      "--loop-versioning",
      "--called-value-propagation",
      "--correlated-propagation",
      "--dse",
      "--instcombine",
      "--indvars",
      "--adce",
      "--globaldce",
      "--speculative-execution",
      "--pgo-memop-opt",
      "--mergereturn",
      "--attributor",
      "--rpo-functionattrs",
      "--div-rem-pairs",
      "--globalsplit",
      "--ipsccp",
      "--inferattrs",
      "--irce",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+17.9%"
  }
}