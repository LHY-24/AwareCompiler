{
  "program_id": "linux-v0_1063.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 26,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 6,
    "oneSuccessor": 22,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 12,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 1,
    "BranchCount": 34,
    "returnInt": 13,
    "CriticalCount": 2,
    "NumEdges": 46,
    "const32Bit": 80,
    "const64Bit": 18,
    "numConstZeroes": 38,
    "numConstOnes": 38,
    "UncondBranches": 22,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 29,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 35,
    "NumBitCastInst": 2,
    "NumBrInst": 34,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 75,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 1,
    "NumRetInst": 6,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 40,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 40,
    "TotalInsts": 269,
    "TotalMemInst": 190,
    "TotalFuncs": 17,
    "ArgsPhi": 2,
    "testUnary": 116
  },
  "baseline_oz_instcount": 271,
  "knowledge_base_entry": [
    "--sroa",
    "--correlated-propagation",
    "--die",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--lower-expect",
    "--gvn",
    "--sccp",
    "--bdce",
    "--gvn",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--lowerinvoke",
          "--strip-dead-prototypes",
          "--always-inline",
          "--strip-debug-declare",
          "--loop-versioning",
          "--lower-guard-intrinsic",
          "--slsr",
          "--flattencfg",
          "--strip-nondebug",
          "--memcpyopt",
          "--coro-split",
          "--mem2reg",
          "--mergereturn",
          "--lowerswitch",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--lowerinvoke",
      "--strip-dead-prototypes",
      "--always-inline",
      "--strip-debug-declare",
      "--loop-versioning",
      "--lower-guard-intrinsic",
      "--slsr",
      "--flattencfg",
      "--strip-nondebug",
      "--memcpyopt",
      "--coro-split",
      "--mem2reg",
      "--mergereturn",
      "--lowerswitch",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}