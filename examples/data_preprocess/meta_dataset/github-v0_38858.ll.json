{
  "program_id": "github-v0_38858.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 33,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 9,
    "oneSuccessor": 33,
    "twoPred": 21,
    "twoPredOneSuc": 9,
    "twoEach": 11,
    "twoSuccessor": 21,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 0,
    "BranchCount": 54,
    "returnInt": 0,
    "CriticalCount": 10,
    "NumEdges": 75,
    "const32Bit": 201,
    "const64Bit": 19,
    "numConstZeroes": 77,
    "numConstOnes": 100,
    "UncondBranches": 33,
    "binaryConstArg": 24,
    "NumAShrInst": 4,
    "NumAddInst": 17,
    "NumAllocaInst": 66,
    "NumAndInst": 3,
    "BlockMid": 10,
    "BlockLow": 49,
    "NumBitCastInst": 10,
    "NumBrInst": 54,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 18,
    "NumLShrInst": 5,
    "NumLoadInst": 238,
    "NumMulInst": 4,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 127,
    "NumSubInst": 16,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 59,
    "TotalInsts": 692,
    "TotalMemInst": 501,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 345
  },
  "baseline_oz_instcount": 693,
  "knowledge_base_entry": [
    "--mergefunc",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--ipsccp",
    "--reassociate",
    "--slsr",
    "--early-cse",
    "--bdce",
    "--sroa",
    "--simplifycfg",
    "--slsr",
    "--early-cse",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--constmerge",
          "--loop-data-prefetch",
          "--attributor",
          "--newgvn",
          "--callsite-splitting",
          "--sroa",
          "--mergefunc",
          "--sccp",
          "--lower-constant-intrinsics",
          "--jump-threading",
          "--lower-expect",
          "--strip-dead-prototypes",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--constmerge",
      "--loop-data-prefetch",
      "--attributor",
      "--newgvn",
      "--callsite-splitting",
      "--sroa",
      "--mergefunc",
      "--sccp",
      "--lower-constant-intrinsics",
      "--jump-threading",
      "--lower-expect",
      "--strip-dead-prototypes",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}