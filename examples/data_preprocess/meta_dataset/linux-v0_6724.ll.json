{
  "program_id": "linux-v0_6724.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 1,
    "oneSuccessor": 7,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 19,
    "CriticalCount": 0,
    "NumEdges": 13,
    "const32Bit": 54,
    "const64Bit": 5,
    "numConstZeroes": 29,
    "numConstOnes": 16,
    "UncondBranches": 7,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 10,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 20,
    "TotalInsts": 129,
    "TotalMemInst": 95,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 36
  },
  "baseline_oz_instcount": 108,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--globalopt",
    "--dse",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--prune-eh",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--reassociate",
    "--dse",
    "--licm",
    "--ipsccp",
    "--ipsccp",
    "--instsimplify",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--loop-load-elim",
          "--strip",
          "--div-rem-pairs",
          "--bdce",
          "--loop-predication",
          "--lower-guard-intrinsic",
          "--loop-versioning",
          "--loweratomic",
          "--lower-constant-intrinsics",
          "--memcpyopt",
          "--partially-inline-libcalls",
          "--globalopt",
          "--early-cse",
          "--strip-nondebug",
          "--prune-eh",
          "--loop-deletion",
          "--ipsccp",
          "--loop-simplifycfg",
          "--cross-dso-cfi",
          "--sink",
          "--indvars",
          "--mldst-motion",
          "--loop-data-prefetch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--loop-load-elim",
      "--strip",
      "--div-rem-pairs",
      "--bdce",
      "--loop-predication",
      "--lower-guard-intrinsic",
      "--loop-versioning",
      "--loweratomic",
      "--lower-constant-intrinsics",
      "--memcpyopt",
      "--partially-inline-libcalls",
      "--globalopt",
      "--early-cse",
      "--strip-nondebug",
      "--prune-eh",
      "--loop-deletion",
      "--ipsccp",
      "--loop-simplifycfg",
      "--cross-dso-cfi",
      "--sink",
      "--indvars",
      "--mldst-motion",
      "--loop-data-prefetch"
    ],
    "performance_vs_Oz": "+4.6%"
  }
}