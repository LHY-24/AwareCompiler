{
  "program_id": "linux-v0_97.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 16,
    "onePred": 108,
    "onePredOneSuc": 88,
    "onePredTwoSuc": 18,
    "oneSuccessor": 109,
    "twoPred": 51,
    "twoPredOneSuc": 16,
    "twoEach": 31,
    "twoSuccessor": 60,
    "morePreds": 11,
    "BB03Phi": 16,
    "BBHiPhi": 0,
    "BBNoPhi": 161,
    "BeginPhi": 16,
    "BranchCount": 169,
    "returnInt": 29,
    "CriticalCount": 52,
    "NumEdges": 262,
    "const32Bit": 232,
    "const64Bit": 8,
    "numConstZeroes": 67,
    "numConstOnes": 90,
    "UncondBranches": 109,
    "binaryConstArg": 42,
    "NumAShrInst": 0,
    "NumAddInst": 22,
    "NumAllocaInst": 49,
    "NumAndInst": 3,
    "BlockMid": 13,
    "BlockLow": 164,
    "NumBitCastInst": 0,
    "NumBrInst": 169,
    "NumCallInst": 65,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 59,
    "NumLShrInst": 0,
    "NumLoadInst": 320,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 16,
    "NumRetInst": 7,
    "NumSExtInst": 21,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 115,
    "NumSubInst": 18,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 177,
    "TotalInsts": 906,
    "TotalMemInst": 575,
    "TotalFuncs": 29,
    "ArgsPhi": 32,
    "testUnary": 399
  },
  "baseline_oz_instcount": 917,
  "knowledge_base_entry": [
    "--dse",
    "--adce",
    "--early-cse",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--mem2reg",
          "--loop-versioning",
          "--sink",
          "--load-store-vectorizer",
          "--lower-expect",
          "--sancov",
          "--instcombine",
          "--early-cse",
          "--cross-dso-cfi",
          "--called-value-propagation",
          "--deadargelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--mem2reg",
      "--loop-versioning",
      "--sink",
      "--load-store-vectorizer",
      "--lower-expect",
      "--sancov",
      "--instcombine",
      "--early-cse",
      "--cross-dso-cfi",
      "--called-value-propagation",
      "--deadargelim"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}