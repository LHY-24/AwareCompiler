{
  "program_id": "github-v0_2462.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 49,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 6,
    "oneSuccessor": 49,
    "twoPred": 23,
    "twoPredOneSuc": 4,
    "twoEach": 14,
    "twoSuccessor": 23,
    "morePreds": 0,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 5,
    "BranchCount": 72,
    "returnInt": 22,
    "CriticalCount": 5,
    "NumEdges": 95,
    "const32Bit": 212,
    "const64Bit": 39,
    "numConstZeroes": 127,
    "numConstOnes": 64,
    "UncondBranches": 49,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 39,
    "NumAndInst": 0,
    "BlockMid": 14,
    "BlockLow": 68,
    "NumBitCastInst": 1,
    "NumBrInst": 72,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 29,
    "NumLShrInst": 3,
    "NumLoadInst": 182,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 5,
    "NumRetInst": 9,
    "NumSExtInst": 28,
    "NumSelectInst": 3,
    "NumShlInst": 3,
    "NumStoreInst": 72,
    "NumSubInst": 5,
    "NumTruncInst": 12,
    "NumXorInst": 4,
    "NumZExtInst": 20,
    "TotalBlocks": 82,
    "TotalInsts": 623,
    "TotalMemInst": 411,
    "TotalFuncs": 16,
    "ArgsPhi": 10,
    "testUnary": 282
  },
  "baseline_oz_instcount": 622,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--slp-vectorizer",
    "--licm",
    "--prune-eh",
    "--sroa",
    "--aggressive-instcombine",
    "--newgvn",
    "--sccp",
    "--bdce",
    "--aggressive-instcombine",
    "--newgvn",
    "--memcpyopt",
    "--newgvn",
    "--sroa",
    "--nary-reassociate",
    "--newgvn",
    "--mldst-motion",
    "--dse",
    "--bdce",
    "--gvn-hoist",
    "--jump-threading",
    "--flattencfg",
    "--globalopt",
    "--loweratomic",
    "--early-cse-memssa",
    "--dce",
    "--jump-threading",
    "--prune-eh",
    "--licm",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-predication",
          "--sancov",
          "--float2int",
          "--tailcallelim",
          "--loop-versioning",
          "--inject-tli-mappings",
          "--loop-unroll-and-jam",
          "--speculative-execution",
          "--strip",
          "--deadargelim",
          "--partial-inliner",
          "--redundant-dbg-inst-elim",
          "--die",
          "--mem2reg",
          "--early-cse",
          "--aggressive-instcombine",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-predication",
      "--sancov",
      "--float2int",
      "--tailcallelim",
      "--loop-versioning",
      "--inject-tli-mappings",
      "--loop-unroll-and-jam",
      "--speculative-execution",
      "--strip",
      "--deadargelim",
      "--partial-inliner",
      "--redundant-dbg-inst-elim",
      "--die",
      "--mem2reg",
      "--early-cse",
      "--aggressive-instcombine",
      "--globalopt"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}