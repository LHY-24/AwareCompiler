{
  "program_id": "github-v0_40795.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 49,
    "const64Bit": 37,
    "numConstZeroes": 39,
    "numConstOnes": 27,
    "UncondBranches": 11,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 12,
    "NumAndInst": 7,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 6,
    "NumLShrInst": 7,
    "NumLoadInst": 40,
    "NumMulInst": 1,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 18,
    "NumSubInst": 2,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 21,
    "TotalInsts": 184,
    "TotalMemInst": 100,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 72
  },
  "baseline_oz_instcount": 184,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--globalopt",
    "--instsimplify",
    "--mem2reg",
    "--gvn",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--break-crit-edges",
          "--nary-reassociate",
          "--aggressive-instcombine",
          "--lower-matrix-intrinsics",
          "--scalarizer",
          "--loop-reroll",
          "--loop-guard-widening",
          "--instnamer",
          "--lowerswitch",
          "--mergefunc",
          "--loop-versioning",
          "--gvn",
          "--rpo-functionattrs",
          "--loop-unroll",
          "--guard-widening",
          "--loop-instsimplify",
          "--float2int",
          "--instsimplify",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--break-crit-edges",
      "--nary-reassociate",
      "--aggressive-instcombine",
      "--lower-matrix-intrinsics",
      "--scalarizer",
      "--loop-reroll",
      "--loop-guard-widening",
      "--instnamer",
      "--lowerswitch",
      "--mergefunc",
      "--loop-versioning",
      "--gvn",
      "--rpo-functionattrs",
      "--loop-unroll",
      "--guard-widening",
      "--loop-instsimplify",
      "--float2int",
      "--instsimplify",
      "--constmerge"
    ],
    "performance_vs_Oz": "+5.4%"
  }
}