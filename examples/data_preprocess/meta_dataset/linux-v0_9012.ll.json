{
  "program_id": "linux-v0_9012.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 16,
    "oneSuccessor": 34,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 26,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 0,
    "BranchCount": 60,
    "returnInt": 8,
    "CriticalCount": 12,
    "NumEdges": 86,
    "const32Bit": 289,
    "const64Bit": 34,
    "numConstZeroes": 131,
    "numConstOnes": 106,
    "UncondBranches": 34,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 69,
    "NumAndInst": 3,
    "BlockMid": 13,
    "BlockLow": 63,
    "NumBitCastInst": 14,
    "NumBrInst": 60,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 99,
    "NumICmpInst": 31,
    "NumLShrInst": 1,
    "NumLoadInst": 203,
    "NumMulInst": 3,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 100,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 8,
    "NumZExtInst": 7,
    "TotalBlocks": 76,
    "TotalInsts": 686,
    "TotalMemInst": 520,
    "TotalFuncs": 37,
    "ArgsPhi": 0,
    "testUnary": 307
  },
  "baseline_oz_instcount": 686,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--reassociate",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--die",
    "--simplifycfg",
    "--early-cse",
    "--gvn",
    "--lower-constant-intrinsics",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--slsr",
          "--gvn-hoist",
          "--ipsccp",
          "--hotcoldsplit",
          "--strip-dead-prototypes",
          "--partially-inline-libcalls",
          "--die",
          "--insert-gcov-profiling",
          "--loop-versioning",
          "--sancov",
          "--slp-vectorizer",
          "--sroa",
          "--reassociate",
          "--partial-inliner",
          "--strip-debug-declare",
          "--correlated-propagation",
          "--loop-versioning-licm",
          "--lower-constant-intrinsics",
          "--mergeicmps",
          "--loop-rotate",
          "--aggressive-instcombine",
          "--load-store-vectorizer",
          "--div-rem-pairs",
          "--simplifycfg",
          "--loop-interchange"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--slsr",
      "--gvn-hoist",
      "--ipsccp",
      "--hotcoldsplit",
      "--strip-dead-prototypes",
      "--partially-inline-libcalls",
      "--die",
      "--insert-gcov-profiling",
      "--loop-versioning",
      "--sancov",
      "--slp-vectorizer",
      "--sroa",
      "--reassociate",
      "--partial-inliner",
      "--strip-debug-declare",
      "--correlated-propagation",
      "--loop-versioning-licm",
      "--lower-constant-intrinsics",
      "--mergeicmps",
      "--loop-rotate",
      "--aggressive-instcombine",
      "--load-store-vectorizer",
      "--div-rem-pairs",
      "--simplifycfg",
      "--loop-interchange"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}