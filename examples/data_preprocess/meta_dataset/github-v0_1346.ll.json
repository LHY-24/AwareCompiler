{
  "program_id": "github-v0_1346.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 2,
    "oneSuccessor": 15,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 5,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 24,
    "const64Bit": 0,
    "numConstZeroes": 8,
    "numConstOnes": 13,
    "UncondBranches": 15,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 22,
    "NumBitCastInst": 0,
    "NumBrInst": 21,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 19,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 15,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 22,
    "TotalInsts": 87,
    "TotalMemInst": 46,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 31
  },
  "baseline_oz_instcount": 87,
  "knowledge_base_entry": [
    "--break-crit-edges",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--dse",
    "--early-cse-memssa",
    "--gvn",
    "--loop-instsimplify",
    "--inline",
    "--flattencfg",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--licm",
    "--bdce",
    "--instcombine",
    "--dce",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-matrix-intrinsics",
          "--forceattrs",
          "--early-cse",
          "--memcpyopt",
          "--rpo-functionattrs",
          "--sccp",
          "--scalarizer",
          "--aggressive-instcombine",
          "--loop-simplify",
          "--lcssa",
          "--barrier",
          "--instnamer",
          "--redundant-dbg-inst-elim",
          "--coro-elide",
          "--licm",
          "--alignment-from-assumptions",
          "--strip-debug-declare",
          "--loop-load-elim",
          "--dce",
          "--loop-vectorize",
          "--callsite-splitting",
          "--die",
          "--early-cse-memssa",
          "--reg2mem",
          "--name-anon-globals",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-matrix-intrinsics",
      "--forceattrs",
      "--early-cse",
      "--memcpyopt",
      "--rpo-functionattrs",
      "--sccp",
      "--scalarizer",
      "--aggressive-instcombine",
      "--loop-simplify",
      "--lcssa",
      "--barrier",
      "--instnamer",
      "--redundant-dbg-inst-elim",
      "--coro-elide",
      "--licm",
      "--alignment-from-assumptions",
      "--strip-debug-declare",
      "--loop-load-elim",
      "--dce",
      "--loop-vectorize",
      "--callsite-splitting",
      "--die",
      "--early-cse-memssa",
      "--reg2mem",
      "--name-anon-globals",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+4.6%"
  }
}