{
  "program_id": "linux-v0_1806.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 32,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 8,
    "oneSuccessor": 30,
    "twoPred": 11,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 15,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 49,
    "BeginPhi": 3,
    "BranchCount": 45,
    "returnInt": 10,
    "CriticalCount": 8,
    "NumEdges": 60,
    "const32Bit": 92,
    "const64Bit": 12,
    "numConstZeroes": 40,
    "numConstOnes": 85,
    "UncondBranches": 30,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 53,
    "NumAndInst": 0,
    "BlockMid": 10,
    "BlockLow": 42,
    "NumBitCastInst": 0,
    "NumBrInst": 45,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 23,
    "NumLShrInst": 0,
    "NumLoadInst": 100,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 7,
    "NumSExtInst": 20,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 74,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 26,
    "NumZExtInst": 16,
    "TotalBlocks": 52,
    "TotalInsts": 413,
    "TotalMemInst": 258,
    "TotalFuncs": 18,
    "ArgsPhi": 6,
    "testUnary": 202
  },
  "baseline_oz_instcount": 413,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--elim-avail-extern",
    "--flattencfg",
    "--aggressive-instcombine",
    "--flattencfg",
    "--jump-threading",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--libcalls-shrinkwrap",
          "--cross-dso-cfi",
          "--slsr",
          "--simple-loop-unswitch",
          "--argpromotion",
          "--loop-simplify",
          "--globaldce",
          "--lower-constant-intrinsics",
          "--infer-address-spaces",
          "--hotcoldsplit",
          "--sroa",
          "--lower-guard-intrinsic",
          "--callsite-splitting",
          "--insert-gcov-profiling",
          "--loop-instsimplify",
          "--coro-early",
          "--loop-load-elim",
          "--irce",
          "--aggressive-instcombine",
          "--jump-threading",
          "--coro-cleanup",
          "--loop-sink",
          "--mergefunc",
          "--partial-inliner",
          "--separate-const-offset-from-gep"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--libcalls-shrinkwrap",
      "--cross-dso-cfi",
      "--slsr",
      "--simple-loop-unswitch",
      "--argpromotion",
      "--loop-simplify",
      "--globaldce",
      "--lower-constant-intrinsics",
      "--infer-address-spaces",
      "--hotcoldsplit",
      "--sroa",
      "--lower-guard-intrinsic",
      "--callsite-splitting",
      "--insert-gcov-profiling",
      "--loop-instsimplify",
      "--coro-early",
      "--loop-load-elim",
      "--irce",
      "--aggressive-instcombine",
      "--jump-threading",
      "--coro-cleanup",
      "--loop-sink",
      "--mergefunc",
      "--partial-inliner",
      "--separate-const-offset-from-gep"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}