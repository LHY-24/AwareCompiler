{
  "program_id": "github-v0_13809.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 2,
    "oneSuccessor": 2,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 6,
    "returnInt": 5,
    "CriticalCount": 4,
    "NumEdges": 10,
    "const32Bit": 12,
    "const64Bit": 0,
    "numConstZeroes": 1,
    "numConstOnes": 5,
    "UncondBranches": 2,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 8,
    "NumBitCastInst": 0,
    "NumBrInst": 6,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 6,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 53,
    "TotalMemInst": 28,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 27
  },
  "baseline_oz_instcount": 53,
  "knowledge_base_entry": [
    "--reassociate",
    "--dce",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--simplifycfg",
    "--flattencfg",
    "--inline",
    "--die",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--separate-const-offset-from-gep",
          "--aggressive-instcombine",
          "--lower-widenable-condition",
          "--lowerswitch",
          "--ee-instrument",
          "--simple-loop-unswitch",
          "--elim-avail-extern",
          "--partially-inline-libcalls",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--separate-const-offset-from-gep",
      "--aggressive-instcombine",
      "--lower-widenable-condition",
      "--lowerswitch",
      "--ee-instrument",
      "--simple-loop-unswitch",
      "--elim-avail-extern",
      "--partially-inline-libcalls",
      "--die"
    ],
    "performance_vs_Oz": "+7.5%"
  }
}