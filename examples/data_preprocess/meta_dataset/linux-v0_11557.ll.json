{
  "program_id": "linux-v0_11557.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 31,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 12,
    "oneSuccessor": 22,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 18,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 1,
    "BranchCount": 40,
    "returnInt": 31,
    "CriticalCount": 5,
    "NumEdges": 58,
    "const32Bit": 204,
    "const64Bit": 32,
    "numConstZeroes": 93,
    "numConstOnes": 75,
    "UncondBranches": 22,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 57,
    "NumAndInst": 3,
    "BlockMid": 6,
    "BlockLow": 55,
    "NumBitCastInst": 17,
    "NumBrInst": 40,
    "NumCallInst": 73,
    "NumGetElementPtrInst": 74,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 178,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 1,
    "NumRetInst": 21,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 93,
    "NumSubInst": 1,
    "NumTruncInst": 13,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 61,
    "TotalInsts": 616,
    "TotalMemInst": 475,
    "TotalFuncs": 40,
    "ArgsPhi": 3,
    "testUnary": 282
  },
  "baseline_oz_instcount": 616,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--ipsccp",
    "--loop-deletion",
    "--mem2reg",
    "--memcpyopt",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--jump-threading",
    "--sroa",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--sroa",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--lower-expect",
    "--correlated-propagation",
    "--gvn",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--reassociate",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--loop-fusion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simple-loop-unswitch",
          "--constmerge",
          "--lower-expect",
          "--correlated-propagation",
          "--loop-fusion",
          "--inferattrs",
          "--lower-guard-intrinsic",
          "--gvn",
          "--loop-sink",
          "--hotcoldsplit",
          "--newgvn",
          "--barrier",
          "--lowerswitch",
          "--nary-reassociate",
          "--globaldce",
          "--loop-versioning-licm",
          "--float2int",
          "--dce",
          "--deadargelim",
          "--mergereturn",
          "--aggressive-instcombine",
          "--loop-vectorize",
          "--loop-simplifycfg",
          "--loop-deletion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simple-loop-unswitch",
      "--constmerge",
      "--lower-expect",
      "--correlated-propagation",
      "--loop-fusion",
      "--inferattrs",
      "--lower-guard-intrinsic",
      "--gvn",
      "--loop-sink",
      "--hotcoldsplit",
      "--newgvn",
      "--barrier",
      "--lowerswitch",
      "--nary-reassociate",
      "--globaldce",
      "--loop-versioning-licm",
      "--float2int",
      "--dce",
      "--deadargelim",
      "--mergereturn",
      "--aggressive-instcombine",
      "--loop-vectorize",
      "--loop-simplifycfg",
      "--loop-deletion"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}