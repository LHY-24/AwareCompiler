{
  "program_id": "linux-v0_11537.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 8,
    "oneSuccessor": 10,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 10,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 9,
    "CriticalCount": 3,
    "NumEdges": 30,
    "const32Bit": 100,
    "const64Bit": 8,
    "numConstZeroes": 37,
    "numConstOnes": 42,
    "UncondBranches": 10,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 29,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 28,
    "NumBitCastInst": 8,
    "NumBrInst": 20,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 66,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 48,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 31,
    "TotalInsts": 258,
    "TotalMemInst": 190,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 114
  },
  "baseline_oz_instcount": 258,
  "knowledge_base_entry": [
    "--newgvn",
    "--licm",
    "--bdce",
    "--aggressive-instcombine",
    "--prune-eh",
    "--early-cse-memssa",
    "--gvn",
    "--bdce",
    "--sccp",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--die",
          "--early-cse-memssa",
          "--consthoist",
          "--strip-dead-prototypes",
          "--aggressive-instcombine",
          "--float2int",
          "--canonicalize-aliases",
          "--loop-predication",
          "--loop-distribute",
          "--inline",
          "--loop-versioning-licm",
          "--partial-inliner",
          "--coro-split",
          "--barrier",
          "--loweratomic",
          "--infer-address-spaces",
          "--mergefunc",
          "--post-inline-ee-instrument",
          "--speculative-execution",
          "--globalsplit",
          "--loop-rotate",
          "--loop-idiom",
          "--sancov",
          "--nary-reassociate",
          "--loop-unroll-and-jam",
          "--jump-threading",
          "--gvn-hoist",
          "--loop-versioning",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--die",
      "--early-cse-memssa",
      "--consthoist",
      "--strip-dead-prototypes",
      "--aggressive-instcombine",
      "--float2int",
      "--canonicalize-aliases",
      "--loop-predication",
      "--loop-distribute",
      "--inline",
      "--loop-versioning-licm",
      "--partial-inliner",
      "--coro-split",
      "--barrier",
      "--loweratomic",
      "--infer-address-spaces",
      "--mergefunc",
      "--post-inline-ee-instrument",
      "--speculative-execution",
      "--globalsplit",
      "--loop-rotate",
      "--loop-idiom",
      "--sancov",
      "--nary-reassociate",
      "--loop-unroll-and-jam",
      "--jump-threading",
      "--gvn-hoist",
      "--loop-versioning",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}