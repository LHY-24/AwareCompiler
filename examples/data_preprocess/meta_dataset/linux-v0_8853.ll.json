{
  "program_id": "linux-v0_8853.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 4,
    "oneSuccessor": 19,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 6,
    "CriticalCount": 4,
    "NumEdges": 43,
    "const32Bit": 111,
    "const64Bit": 0,
    "numConstZeroes": 28,
    "numConstOnes": 60,
    "UncondBranches": 19,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 58,
    "NumAndInst": 3,
    "BlockMid": 10,
    "BlockLow": 29,
    "NumBitCastInst": 23,
    "NumBrInst": 26,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 6,
    "NumLShrInst": 1,
    "NumLoadInst": 105,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 66,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 4,
    "TotalBlocks": 39,
    "TotalInsts": 355,
    "TotalMemInst": 268,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 196
  },
  "baseline_oz_instcount": 355,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--early-cse",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--gvn-hoist",
    "--inline",
    "--elim-avail-extern",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--correlated-propagation",
          "--coro-early",
          "--loop-load-elim",
          "--ee-instrument",
          "--inline",
          "--instcombine",
          "--barrier",
          "--gvn",
          "--loop-data-prefetch",
          "--jump-threading",
          "--newgvn",
          "--loop-unroll",
          "--coro-elide",
          "--aggressive-instcombine",
          "--lower-constant-intrinsics",
          "--loop-rotate",
          "--loop-deletion",
          "--alignment-from-assumptions",
          "--globalsplit",
          "--instsimplify",
          "--separate-const-offset-from-gep",
          "--loop-versioning",
          "--mergeicmps",
          "--insert-gcov-profiling",
          "--die",
          "--tailcallelim",
          "--loop-predication",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--correlated-propagation",
      "--coro-early",
      "--loop-load-elim",
      "--ee-instrument",
      "--inline",
      "--instcombine",
      "--barrier",
      "--gvn",
      "--loop-data-prefetch",
      "--jump-threading",
      "--newgvn",
      "--loop-unroll",
      "--coro-elide",
      "--aggressive-instcombine",
      "--lower-constant-intrinsics",
      "--loop-rotate",
      "--loop-deletion",
      "--alignment-from-assumptions",
      "--globalsplit",
      "--instsimplify",
      "--separate-const-offset-from-gep",
      "--loop-versioning",
      "--mergeicmps",
      "--insert-gcov-profiling",
      "--die",
      "--tailcallelim",
      "--loop-predication",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}