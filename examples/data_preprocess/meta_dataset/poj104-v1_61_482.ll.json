{
  "program_id": "poj104-v1_61_482.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 0,
    "oneSuccessor": 10,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 18,
    "const32Bit": 34,
    "const64Bit": 23,
    "numConstZeroes": 16,
    "numConstOnes": 23,
    "UncondBranches": 10,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 21,
    "NumBitCastInst": 15,
    "NumBrInst": 14,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 24,
    "TotalInsts": 162,
    "TotalMemInst": 109,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 68
  },
  "baseline_oz_instcount": 60,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--instcombine",
    "--mldst-motion",
    "--gvn",
    "--slp-vectorizer",
    "--instcombine",
    "--elim-avail-extern",
    "--dce",
    "--lower-constant-intrinsics",
    "--dce",
    "--loop-instsimplify",
    "--sroa",
    "--indvars",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--loweratomic",
    "--globalopt",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--nary-reassociate",
    "--dse",
    "--inline",
    "--dce",
    "--newgvn",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--instcombine",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--loop-load-elim",
          "--lower-widenable-condition",
          "--constmerge",
          "--mergereturn",
          "--redundant-dbg-inst-elim",
          "--bdce",
          "--deadargelim",
          "--loweratomic",
          "--early-cse-memssa",
          "--elim-avail-extern",
          "--reassociate",
          "--sroa",
          "--gvn",
          "--inline",
          "--partially-inline-libcalls",
          "--infer-address-spaces",
          "--strip-dead-prototypes",
          "--called-value-propagation",
          "--strip-nondebug",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--loop-load-elim",
      "--lower-widenable-condition",
      "--constmerge",
      "--mergereturn",
      "--redundant-dbg-inst-elim",
      "--bdce",
      "--deadargelim",
      "--loweratomic",
      "--early-cse-memssa",
      "--elim-avail-extern",
      "--reassociate",
      "--sroa",
      "--gvn",
      "--inline",
      "--partially-inline-libcalls",
      "--infer-address-spaces",
      "--strip-dead-prototypes",
      "--called-value-propagation",
      "--strip-nondebug",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+8.3%"
  }
}