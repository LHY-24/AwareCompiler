{
  "program_id": "linux-v0_3634.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 69,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 10,
    "oneSuccessor": 68,
    "twoPred": 19,
    "twoPredOneSuc": 6,
    "twoEach": 4,
    "twoSuccessor": 21,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 117,
    "BeginPhi": 0,
    "BranchCount": 89,
    "returnInt": 10,
    "CriticalCount": 11,
    "NumEdges": 129,
    "const32Bit": 212,
    "const64Bit": 15,
    "numConstZeroes": 95,
    "numConstOnes": 106,
    "UncondBranches": 68,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 86,
    "NumAndInst": 1,
    "BlockMid": 9,
    "BlockLow": 108,
    "NumBitCastInst": 52,
    "NumBrInst": 89,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 57,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 194,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 24,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 119,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 117,
    "TotalInsts": 705,
    "TotalMemInst": 505,
    "TotalFuncs": 45,
    "ArgsPhi": 0,
    "testUnary": 341
  },
  "baseline_oz_instcount": 705,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--newgvn",
    "--ipsccp",
    "--adce",
    "--early-cse-memssa",
    "--dse",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--adce",
    "--early-cse-memssa",
    "--dse",
    "--lower-expect",
    "--instsimplify",
    "--prune-eh",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mem2reg",
          "--deadargelim",
          "--lcssa",
          "--pgo-memop-opt",
          "--partially-inline-libcalls",
          "--constmerge",
          "--correlated-propagation",
          "--ipsccp",
          "--argpromotion",
          "--strip-dead-prototypes",
          "--canonicalize-aliases",
          "--cross-dso-cfi",
          "--nary-reassociate",
          "--partial-inliner",
          "--slp-vectorizer",
          "--lower-widenable-condition",
          "--bdce",
          "--float2int",
          "--loweratomic",
          "--coro-cleanup"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mem2reg",
      "--deadargelim",
      "--lcssa",
      "--pgo-memop-opt",
      "--partially-inline-libcalls",
      "--constmerge",
      "--correlated-propagation",
      "--ipsccp",
      "--argpromotion",
      "--strip-dead-prototypes",
      "--canonicalize-aliases",
      "--cross-dso-cfi",
      "--nary-reassociate",
      "--partial-inliner",
      "--slp-vectorizer",
      "--lower-widenable-condition",
      "--bdce",
      "--float2int",
      "--loweratomic",
      "--coro-cleanup"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}