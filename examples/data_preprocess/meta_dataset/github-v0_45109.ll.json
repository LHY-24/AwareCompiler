{
  "program_id": "github-v0_45109.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 6,
    "oneSuccessor": 45,
    "twoPred": 20,
    "twoPredOneSuc": 6,
    "twoEach": 12,
    "twoSuccessor": 20,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 75,
    "BeginPhi": 0,
    "BranchCount": 65,
    "returnInt": 9,
    "CriticalCount": 7,
    "NumEdges": 85,
    "const32Bit": 94,
    "const64Bit": 13,
    "numConstZeroes": 38,
    "numConstOnes": 39,
    "UncondBranches": 45,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 24,
    "NumAndInst": 7,
    "BlockMid": 4,
    "BlockLow": 71,
    "NumBitCastInst": 0,
    "NumBrInst": 65,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 20,
    "NumLShrInst": 7,
    "NumLoadInst": 98,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 48,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 6,
    "NumZExtInst": 6,
    "TotalBlocks": 75,
    "TotalInsts": 367,
    "TotalMemInst": 216,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 146
  },
  "baseline_oz_instcount": 357,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--jump-threading",
    "--slsr",
    "--jump-threading",
    "--instsimplify",
    "--dse",
    "--instcombine",
    "--slp-vectorizer",
    "--mem2reg",
    "--memcpyopt",
    "--instsimplify",
    "--loop-simplifycfg",
    "--lower-expect",
    "--sroa",
    "--globalopt",
    "--early-cse",
    "--loop-fusion",
    "--instcombine",
    "--dce",
    "--aggressive-instcombine",
    "--ipsccp",
    "--bdce",
    "--elim-avail-extern",
    "--die",
    "--mem2reg",
    "--globalopt",
    "--newgvn",
    "--loop-fusion",
    "--jump-threading",
    "--ipsccp",
    "--gvn-hoist",
    "--adce",
    "--sroa",
    "--adce",
    "--instcombine",
    "--aggressive-instcombine",
    "--instsimplify",
    "--dse",
    "--instcombine",
    "--aggressive-instcombine",
    "--instsimplify",
    "--lower-expect",
    "--gvn",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--dse",
          "--cross-dso-cfi",
          "--loweratomic",
          "--irce",
          "--ipconstprop",
          "--always-inline",
          "--scalarizer",
          "--globalopt",
          "--loop-unroll-and-jam",
          "--loop-deletion",
          "--memcpyopt",
          "--pgo-memop-opt",
          "--loop-reroll",
          "--inline",
          "--ipsccp",
          "--loop-simplify",
          "--globaldce",
          "--alignment-from-assumptions",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--dse",
      "--cross-dso-cfi",
      "--loweratomic",
      "--irce",
      "--ipconstprop",
      "--always-inline",
      "--scalarizer",
      "--globalopt",
      "--loop-unroll-and-jam",
      "--loop-deletion",
      "--memcpyopt",
      "--pgo-memop-opt",
      "--loop-reroll",
      "--inline",
      "--ipsccp",
      "--loop-simplify",
      "--globaldce",
      "--alignment-from-assumptions",
      "--adce"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}