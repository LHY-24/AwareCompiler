{
  "program_id": "tensorflow-v0_141.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 7,
    "onePred": 24,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 10,
    "oneSuccessor": 17,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 23,
    "morePreds": 5,
    "BB03Phi": 7,
    "BBHiPhi": 0,
    "BBNoPhi": 73,
    "BeginPhi": 7,
    "BranchCount": 38,
    "returnInt": 0,
    "CriticalCount": 22,
    "NumEdges": 63,
    "const32Bit": 80,
    "const64Bit": 90,
    "numConstZeroes": 103,
    "numConstOnes": 30,
    "UncondBranches": 17,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 2,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 79,
    "NumBitCastInst": 16,
    "NumBrInst": 38,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 73,
    "NumICmpInst": 26,
    "NumLShrInst": 4,
    "NumLoadInst": 55,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 7,
    "NumRetInst": 39,
    "NumSExtInst": 0,
    "NumSelectInst": 5,
    "NumShlInst": 0,
    "NumStoreInst": 45,
    "NumSubInst": 7,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 80,
    "TotalInsts": 375,
    "TotalMemInst": 217,
    "TotalFuncs": 51,
    "ArgsPhi": 16,
    "testUnary": 76
  },
  "baseline_oz_instcount": 378,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--simplifycfg",
    "--adce",
    "--newgvn",
    "--mldst-motion",
    "--simplifycfg",
    "--ipsccp",
    "--flattencfg",
    "--licm",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--dse",
    "--instcombine",
    "--mldst-motion",
    "--inline",
    "--slp-vectorizer",
    "--simplifycfg",
    "--adce",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--simplifycfg",
    "--ipsccp",
    "--flattencfg",
    "--licm",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--dse",
    "--instcombine",
    "--mldst-motion",
    "--inline",
    "--slp-vectorizer",
    "--bdce",
    "--loop-simplifycfg",
    "--adce",
    "--newgvn",
    "--sroa",
    "--ipsccp",
    "--gvn",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--simplifycfg",
    "--ipsccp",
    "--flattencfg",
    "--licm",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--dse",
    "--instcombine",
    "--mldst-motion",
    "--inline",
    "--slp-vectorizer",
    "--bdce",
    "--loop-simplifycfg",
    "--adce",
    "--loop-simplifycfg",
    "--inline",
    "--early-cse-memssa",
    "--mem2reg",
    "--early-cse",
    "--licm",
    "--lower-constant-intrinsics",
    "--adce",
    "--lower-expect",
    "--prune-eh",
    "--reassociate",
    "--mergefunc",
    "--bdce",
    "--sroa",
    "--instsimplify",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--dce",
    "--reassociate",
    "--newgvn",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergereturn",
          "--dce",
          "--coro-elide",
          "--tailcallelim",
          "--lowerinvoke",
          "--inferattrs",
          "--float2int",
          "--loop-instsimplify",
          "--loop-deletion",
          "--consthoist",
          "--simple-loop-unswitch",
          "--canonicalize-aliases",
          "--loop-unswitch",
          "--strip-dead-prototypes",
          "--separate-const-offset-from-gep",
          "--coro-cleanup",
          "--instnamer",
          "--slp-vectorizer",
          "--deadargelim",
          "--jump-threading",
          "--simplifycfg",
          "--dse",
          "--barrier",
          "--sink",
          "--mergefunc",
          "--reassociate",
          "--coro-split",
          "--scalarizer",
          "--loop-unroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+14.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergereturn",
      "--dce",
      "--coro-elide",
      "--tailcallelim",
      "--lowerinvoke",
      "--inferattrs",
      "--float2int",
      "--loop-instsimplify",
      "--loop-deletion",
      "--consthoist",
      "--simple-loop-unswitch",
      "--canonicalize-aliases",
      "--loop-unswitch",
      "--strip-dead-prototypes",
      "--separate-const-offset-from-gep",
      "--coro-cleanup",
      "--instnamer",
      "--slp-vectorizer",
      "--deadargelim",
      "--jump-threading",
      "--simplifycfg",
      "--dse",
      "--barrier",
      "--sink",
      "--mergefunc",
      "--reassociate",
      "--coro-split",
      "--scalarizer",
      "--loop-unroll"
    ],
    "performance_vs_Oz": "+14.6%"
  }
}