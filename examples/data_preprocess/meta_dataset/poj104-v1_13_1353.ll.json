{
  "program_id": "poj104-v1_13_1353.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 16,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 6,
    "oneSuccessor": 14,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 11,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 1,
    "BranchCount": 25,
    "returnInt": 6,
    "CriticalCount": 8,
    "NumEdges": 36,
    "const32Bit": 25,
    "const64Bit": 11,
    "numConstZeroes": 14,
    "numConstOnes": 12,
    "UncondBranches": 14,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 27,
    "NumBitCastInst": 12,
    "NumBrInst": 25,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 28,
    "TotalInsts": 170,
    "TotalMemInst": 98,
    "TotalFuncs": 12,
    "ArgsPhi": 2,
    "testUnary": 79
  },
  "baseline_oz_instcount": 85,
  "knowledge_base_entry": [
    "--instcombine",
    "--prune-eh",
    "--inline",
    "--early-cse-memssa",
    "--mldst-motion",
    "--instsimplify",
    "--dse",
    "--gvn-hoist",
    "--die",
    "--sroa",
    "--sccp",
    "--early-cse",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "-loop-reduce",
    "--early-cse",
    "--slsr",
    "--slp-vectorizer",
    "--die",
    "--mergefunc",
    "--bdce",
    "--dse",
    "--newgvn",
    "--flattencfg",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--early-cse",
    "--early-cse",
    "--loop-instsimplify",
    "--early-cse",
    "--prune-eh",
    "--inline",
    "--early-cse-memssa",
    "--mldst-motion",
    "--instsimplify",
    "--dse",
    "--gvn-hoist",
    "--die",
    "--sroa",
    "--sccp",
    "--early-cse",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "-loop-reduce",
    "--instcombine",
    "--gvn-hoist",
    "--newgvn",
    "--instsimplify",
    "--simplifycfg",
    "--lower-expect",
    "--instcombine",
    "--gvn-hoist",
    "--loop-reroll",
    "--instsimplify",
    "--mldst-motion",
    "--instcombine",
    "--elim-avail-extern",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--argpromotion",
          "--rewrite-statepoints-for-gc",
          "--forceattrs",
          "--loop-distribute",
          "--inferattrs",
          "--instnamer",
          "--die",
          "--always-inline",
          "--ipsccp",
          "--lowerinvoke",
          "--loop-interchange",
          "--sroa",
          "--libcalls-shrinkwrap",
          "--canonicalize-aliases",
          "--newgvn",
          "--partial-inliner",
          "--loop-guard-widening",
          "--mldst-motion",
          "--loop-unroll",
          "--early-cse",
          "--indvars",
          "--attributor"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+20.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--argpromotion",
      "--rewrite-statepoints-for-gc",
      "--forceattrs",
      "--loop-distribute",
      "--inferattrs",
      "--instnamer",
      "--die",
      "--always-inline",
      "--ipsccp",
      "--lowerinvoke",
      "--loop-interchange",
      "--sroa",
      "--libcalls-shrinkwrap",
      "--canonicalize-aliases",
      "--newgvn",
      "--partial-inliner",
      "--loop-guard-widening",
      "--mldst-motion",
      "--loop-unroll",
      "--early-cse",
      "--indvars",
      "--attributor"
    ],
    "performance_vs_Oz": "+20.0%"
  }
}