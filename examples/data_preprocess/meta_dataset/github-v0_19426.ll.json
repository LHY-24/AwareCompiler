{
  "program_id": "github-v0_19426.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 71,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 30,
    "oneSuccessor": 60,
    "twoPred": 38,
    "twoPredOneSuc": 17,
    "twoEach": 21,
    "twoSuccessor": 52,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 110,
    "BeginPhi": 3,
    "BranchCount": 112,
    "returnInt": 11,
    "CriticalCount": 37,
    "NumEdges": 164,
    "const32Bit": 250,
    "const64Bit": 19,
    "numConstZeroes": 132,
    "numConstOnes": 84,
    "UncondBranches": 60,
    "binaryConstArg": 36,
    "NumAShrInst": 0,
    "NumAddInst": 24,
    "NumAllocaInst": 34,
    "NumAndInst": 2,
    "BlockMid": 7,
    "BlockLow": 106,
    "NumBitCastInst": 0,
    "NumBrInst": 112,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 89,
    "NumICmpInst": 52,
    "NumLShrInst": 0,
    "NumLoadInst": 244,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 1,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 82,
    "NumSubInst": 13,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 113,
    "TotalInsts": 701,
    "TotalMemInst": 476,
    "TotalFuncs": 15,
    "ArgsPhi": 6,
    "testUnary": 293
  },
  "baseline_oz_instcount": 703,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--correlated-propagation",
    "--globalopt",
    "--loweratomic",
    "--aggressive-instcombine",
    "--dse",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--mergeicmps",
          "--canonicalize-aliases",
          "--inferattrs",
          "--slsr",
          "--ipconstprop",
          "--hotcoldsplit",
          "--deadargelim",
          "--always-inline",
          "--lower-guard-intrinsic",
          "--loop-data-prefetch",
          "--loop-distribute",
          "--consthoist",
          "--mergereturn",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--mergeicmps",
      "--canonicalize-aliases",
      "--inferattrs",
      "--slsr",
      "--ipconstprop",
      "--hotcoldsplit",
      "--deadargelim",
      "--always-inline",
      "--lower-guard-intrinsic",
      "--loop-data-prefetch",
      "--loop-distribute",
      "--consthoist",
      "--mergereturn",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}