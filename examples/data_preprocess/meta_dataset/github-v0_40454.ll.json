{
  "program_id": "github-v0_40454.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 49,
    "const64Bit": 100,
    "numConstZeroes": 94,
    "numConstOnes": 32,
    "UncondBranches": 13,
    "binaryConstArg": 29,
    "NumAShrInst": 3,
    "NumAddInst": 6,
    "NumAllocaInst": 13,
    "NumAndInst": 11,
    "BlockMid": 7,
    "BlockLow": 17,
    "NumBitCastInst": 12,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 56,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 1,
    "NumOrInst": 10,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 28,
    "NumSubInst": 4,
    "NumTruncInst": 13,
    "NumXorInst": 1,
    "NumZExtInst": 26,
    "TotalBlocks": 24,
    "TotalInsts": 284,
    "TotalMemInst": 153,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 120
  },
  "baseline_oz_instcount": 284,
  "knowledge_base_entry": [
    "--inferattrs",
    "--instcombine",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--elim-avail-extern",
    "--jump-threading",
    "--aggressive-instcombine",
    "--dce",
    "--inline",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-guard-widening",
          "--jump-threading",
          "--prune-eh",
          "--irce",
          "--strip-debug-declare",
          "--correlated-propagation",
          "--dse",
          "--hotcoldsplit",
          "--cross-dso-cfi",
          "--functionattrs",
          "--loop-versioning-licm",
          "--lower-guard-intrinsic",
          "--early-cse",
          "--flattencfg",
          "--aggressive-instcombine",
          "--consthoist",
          "--loop-unroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-guard-widening",
      "--jump-threading",
      "--prune-eh",
      "--irce",
      "--strip-debug-declare",
      "--correlated-propagation",
      "--dse",
      "--hotcoldsplit",
      "--cross-dso-cfi",
      "--functionattrs",
      "--loop-versioning-licm",
      "--lower-guard-intrinsic",
      "--early-cse",
      "--flattencfg",
      "--aggressive-instcombine",
      "--consthoist",
      "--loop-unroll"
    ],
    "performance_vs_Oz": "+6.3%"
  }
}