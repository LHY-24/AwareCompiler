{
  "program_id": "github-v0_30907.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 0,
    "oneSuccessor": 15,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 0,
    "CriticalCount": 4,
    "NumEdges": 34,
    "const32Bit": 21,
    "const64Bit": 12,
    "numConstZeroes": 7,
    "numConstOnes": 16,
    "UncondBranches": 15,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 13,
    "NumAndInst": 5,
    "BlockMid": 0,
    "BlockLow": 30,
    "NumBitCastInst": 2,
    "NumBrInst": 18,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 8,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 30,
    "TotalInsts": 81,
    "TotalMemInst": 36,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 35
  },
  "baseline_oz_instcount": 81,
  "knowledge_base_entry": [
    "--flattencfg",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--early-cse-memssa",
          "--jump-threading",
          "--mergefunc",
          "--flattencfg",
          "--load-store-vectorizer",
          "--newgvn",
          "--loop-unroll-and-jam",
          "--name-anon-globals",
          "--partial-inliner",
          "--lower-guard-intrinsic",
          "--correlated-propagation",
          "--lower-matrix-intrinsics",
          "--called-value-propagation",
          "--simplifycfg",
          "--loop-simplifycfg",
          "--instcombine",
          "--globalsplit",
          "--alignment-from-assumptions",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--early-cse-memssa",
      "--jump-threading",
      "--mergefunc",
      "--flattencfg",
      "--load-store-vectorizer",
      "--newgvn",
      "--loop-unroll-and-jam",
      "--name-anon-globals",
      "--partial-inliner",
      "--lower-guard-intrinsic",
      "--correlated-propagation",
      "--lower-matrix-intrinsics",
      "--called-value-propagation",
      "--simplifycfg",
      "--loop-simplifycfg",
      "--instcombine",
      "--globalsplit",
      "--alignment-from-assumptions",
      "--sancov"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}