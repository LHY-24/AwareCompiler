{
  "program_id": "linux-v0_268.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 9,
    "oneSuccessor": 18,
    "twoPred": 8,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 16,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 8,
    "CriticalCount": 13,
    "NumEdges": 53,
    "const32Bit": 115,
    "const64Bit": 9,
    "numConstZeroes": 47,
    "numConstOnes": 42,
    "UncondBranches": 18,
    "binaryConstArg": 16,
    "NumAShrInst": 3,
    "NumAddInst": 7,
    "NumAllocaInst": 28,
    "NumAndInst": 4,
    "BlockMid": 4,
    "BlockLow": 37,
    "NumBitCastInst": 8,
    "NumBrInst": 34,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 103,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 46,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 4,
    "NumZExtInst": 14,
    "TotalBlocks": 41,
    "TotalInsts": 340,
    "TotalMemInst": 226,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 162
  },
  "baseline_oz_instcount": 341,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--adce",
    "--inline",
    "--early-cse-memssa",
    "--die",
    "--slp-vectorizer",
    "--dse",
    "--ipsccp",
    "--sccp",
    "--inline",
    "--bdce",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--reassociate",
          "--mem2reg",
          "--die",
          "--mergefunc",
          "--post-inline-ee-instrument",
          "--loop-distribute",
          "--partially-inline-libcalls",
          "--sancov",
          "--lowerinvoke",
          "--globaldce",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--reassociate",
      "--mem2reg",
      "--die",
      "--mergefunc",
      "--post-inline-ee-instrument",
      "--loop-distribute",
      "--partially-inline-libcalls",
      "--sancov",
      "--lowerinvoke",
      "--globaldce",
      "--float2int"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}