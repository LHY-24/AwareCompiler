{
  "program_id": "linux-v0_11587.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 44,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 9,
    "oneSuccessor": 40,
    "twoPred": 16,
    "twoPredOneSuc": 4,
    "twoEach": 9,
    "twoSuccessor": 21,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 1,
    "BranchCount": 61,
    "returnInt": 15,
    "CriticalCount": 11,
    "NumEdges": 87,
    "const32Bit": 236,
    "const64Bit": 34,
    "numConstZeroes": 114,
    "numConstOnes": 87,
    "UncondBranches": 40,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 62,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 73,
    "NumBitCastInst": 31,
    "NumBrInst": 61,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 89,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 170,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 98,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 82,
    "TotalInsts": 620,
    "TotalMemInst": 465,
    "TotalFuncs": 30,
    "ArgsPhi": 2,
    "testUnary": 280
  },
  "baseline_oz_instcount": 620,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--adce",
    "--instsimplify",
    "--elim-avail-extern",
    "--simplifycfg",
    "--inline",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--flattencfg",
    "--gvn-hoist",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--insert-gcov-profiling",
          "--libcalls-shrinkwrap",
          "--sink",
          "--early-cse-memssa",
          "--called-value-propagation",
          "--inline",
          "--pgo-memop-opt",
          "--lcssa",
          "--separate-const-offset-from-gep"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--insert-gcov-profiling",
      "--libcalls-shrinkwrap",
      "--sink",
      "--early-cse-memssa",
      "--called-value-propagation",
      "--inline",
      "--pgo-memop-opt",
      "--lcssa",
      "--separate-const-offset-from-gep"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}