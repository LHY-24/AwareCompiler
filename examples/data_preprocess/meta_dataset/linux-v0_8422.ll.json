{
  "program_id": "linux-v0_8422.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 37,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 6,
    "oneSuccessor": 34,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 70,
    "BeginPhi": 1,
    "BranchCount": 52,
    "returnInt": 18,
    "CriticalCount": 2,
    "NumEdges": 70,
    "const32Bit": 268,
    "const64Bit": 74,
    "numConstZeroes": 155,
    "numConstOnes": 104,
    "UncondBranches": 34,
    "binaryConstArg": 24,
    "NumAShrInst": 1,
    "NumAddInst": 12,
    "NumAllocaInst": 73,
    "NumAndInst": 1,
    "BlockMid": 16,
    "BlockLow": 55,
    "NumBitCastInst": 12,
    "NumBrInst": 52,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 107,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 212,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 19,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 120,
    "NumSubInst": 7,
    "NumTruncInst": 21,
    "NumXorInst": 2,
    "NumZExtInst": 24,
    "TotalBlocks": 71,
    "TotalInsts": 734,
    "TotalMemInst": 549,
    "TotalFuncs": 33,
    "ArgsPhi": 2,
    "testUnary": 352
  },
  "baseline_oz_instcount": 735,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--gvn",
    "--adce",
    "--aggressive-instcombine",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--globaldce",
          "--loop-versioning",
          "--slsr",
          "--alignment-from-assumptions",
          "--callsite-splitting",
          "--loop-unroll-and-jam",
          "--constmerge",
          "--aggressive-instcombine",
          "--strip-debug-declare",
          "--add-discriminators",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--globaldce",
      "--loop-versioning",
      "--slsr",
      "--alignment-from-assumptions",
      "--callsite-splitting",
      "--loop-unroll-and-jam",
      "--constmerge",
      "--aggressive-instcombine",
      "--strip-debug-declare",
      "--add-discriminators",
      "--barrier"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}