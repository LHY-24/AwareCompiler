{
  "program_id": "github-v0_22929.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 18,
    "const32Bit": 102,
    "const64Bit": 43,
    "numConstZeroes": 60,
    "numConstOnes": 57,
    "UncondBranches": 8,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 43,
    "NumAndInst": 10,
    "BlockMid": 7,
    "BlockLow": 12,
    "NumBitCastInst": 6,
    "NumBrInst": 13,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 6,
    "NumLShrInst": 7,
    "NumLoadInst": 71,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 57,
    "NumSubInst": 2,
    "NumTruncInst": 9,
    "NumXorInst": 2,
    "NumZExtInst": 4,
    "TotalBlocks": 19,
    "TotalInsts": 304,
    "TotalMemInst": 237,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 133
  },
  "baseline_oz_instcount": 304,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--jump-threading",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--irce",
          "--scalarizer",
          "--correlated-propagation",
          "--loop-rotate",
          "--hotcoldsplit",
          "--gvn-hoist",
          "--canonicalize-aliases",
          "--loop-vectorize",
          "--simplifycfg",
          "--loop-versioning-licm",
          "--instsimplify",
          "--sink",
          "--loop-unroll-and-jam",
          "--sancov",
          "--aggressive-instcombine",
          "--loop-simplifycfg",
          "--inline",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--irce",
      "--scalarizer",
      "--correlated-propagation",
      "--loop-rotate",
      "--hotcoldsplit",
      "--gvn-hoist",
      "--canonicalize-aliases",
      "--loop-vectorize",
      "--simplifycfg",
      "--loop-versioning-licm",
      "--instsimplify",
      "--sink",
      "--loop-unroll-and-jam",
      "--sancov",
      "--aggressive-instcombine",
      "--loop-simplifycfg",
      "--inline",
      "--early-cse"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}