{
  "program_id": "linux-v0_3777.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 51,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 8,
    "oneSuccessor": 45,
    "twoPred": 19,
    "twoPredOneSuc": 7,
    "twoEach": 7,
    "twoSuccessor": 19,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 84,
    "BeginPhi": 0,
    "BranchCount": 64,
    "returnInt": 26,
    "CriticalCount": 5,
    "NumEdges": 92,
    "const32Bit": 129,
    "const64Bit": 24,
    "numConstZeroes": 57,
    "numConstOnes": 55,
    "UncondBranches": 45,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 36,
    "NumAndInst": 1,
    "BlockMid": 4,
    "BlockLow": 80,
    "NumBitCastInst": 6,
    "NumBrInst": 64,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 135,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 11,
    "NumSelectInst": 1,
    "NumShlInst": 2,
    "NumStoreInst": 58,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 84,
    "TotalInsts": 456,
    "TotalMemInst": 319,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 195
  },
  "baseline_oz_instcount": 457,
  "knowledge_base_entry": [
    "--loweratomic",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--early-cse",
    "--nary-reassociate",
    "--simplifycfg",
    "--prune-eh",
    "--reassociate",
    "--gvn",
    "--bdce",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--argpromotion",
          "--partial-inliner",
          "--lower-widenable-condition",
          "--memcpyopt",
          "--sink",
          "--strip-debug-declare",
          "--loop-vectorize",
          "--coro-cleanup",
          "--slsr"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--argpromotion",
      "--partial-inliner",
      "--lower-widenable-condition",
      "--memcpyopt",
      "--sink",
      "--strip-debug-declare",
      "--loop-vectorize",
      "--coro-cleanup",
      "--slsr"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}