{
  "program_id": "github-v0_29834.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 38,
    "const64Bit": 59,
    "numConstZeroes": 57,
    "numConstOnes": 30,
    "UncondBranches": 15,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 15,
    "NumAndInst": 1,
    "BlockMid": 6,
    "BlockLow": 21,
    "NumBitCastInst": 12,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 8,
    "NumLShrInst": 2,
    "NumLoadInst": 53,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 27,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 14,
    "TotalBlocks": 27,
    "TotalInsts": 227,
    "TotalMemInst": 147,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 100
  },
  "baseline_oz_instcount": 227,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--jump-threading",
    "--aggressive-instcombine",
    "--reassociate",
    "--instcombine",
    "-loop-reduce",
    "--mergefunc",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--dse",
    "--nary-reassociate",
    "--loop-fusion",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--pgo-memop-opt",
          "--constprop",
          "--memcpyopt",
          "--slsr",
          "--always-inline",
          "--strip",
          "--div-rem-pairs",
          "--aggressive-instcombine",
          "--correlated-propagation",
          "-loop-reduce",
          "--nary-reassociate",
          "--coro-cleanup",
          "--name-anon-globals",
          "--coro-early",
          "--argpromotion",
          "--mergereturn",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--pgo-memop-opt",
      "--constprop",
      "--memcpyopt",
      "--slsr",
      "--always-inline",
      "--strip",
      "--div-rem-pairs",
      "--aggressive-instcombine",
      "--correlated-propagation",
      "-loop-reduce",
      "--nary-reassociate",
      "--coro-cleanup",
      "--name-anon-globals",
      "--coro-early",
      "--argpromotion",
      "--mergereturn",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}