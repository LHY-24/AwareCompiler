{
  "program_id": "linux-v0_7417.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 59,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 9,
    "oneSuccessor": 53,
    "twoPred": 16,
    "twoPredOneSuc": 3,
    "twoEach": 7,
    "twoSuccessor": 23,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 105,
    "BeginPhi": 1,
    "BranchCount": 76,
    "returnInt": 23,
    "CriticalCount": 6,
    "NumEdges": 112,
    "const32Bit": 380,
    "const64Bit": 38,
    "numConstZeroes": 190,
    "numConstOnes": 123,
    "UncondBranches": 53,
    "binaryConstArg": 36,
    "NumAShrInst": 3,
    "NumAddInst": 6,
    "NumAllocaInst": 83,
    "NumAndInst": 9,
    "BlockMid": 15,
    "BlockLow": 91,
    "NumBitCastInst": 42,
    "NumBrInst": 76,
    "NumCallInst": 65,
    "NumGetElementPtrInst": 138,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 275,
    "NumMulInst": 1,
    "NumOrInst": 8,
    "NumPHIInst": 1,
    "NumRetInst": 27,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 148,
    "NumSubInst": 5,
    "NumTruncInst": 12,
    "NumXorInst": 2,
    "NumZExtInst": 14,
    "TotalBlocks": 106,
    "TotalInsts": 967,
    "TotalMemInst": 709,
    "TotalFuncs": 51,
    "ArgsPhi": 2,
    "testUnary": 447
  },
  "baseline_oz_instcount": 966,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--die",
    "--early-cse",
    "--inline",
    "--sccp",
    "--lower-constant-intrinsics",
    "--bdce",
    "--aggressive-instcombine",
    "--ipsccp",
    "--early-cse",
    "--slp-vectorizer",
    "--loop-reroll",
    "--instsimplify",
    "--ipsccp",
    "--gvn-hoist",
    "--prune-eh",
    "--reassociate",
    "--adce",
    "--licm",
    "--gvn",
    "--loop-rotate",
    "--early-cse-memssa",
    "--adce",
    "--inline",
    "--sroa",
    "--jump-threading",
    "--gvn-hoist",
    "--early-cse",
    "--globalopt",
    "--dse",
    "--newgvn",
    "--bdce",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--loop-fusion",
          "--sink",
          "--instsimplify",
          "--ipsccp",
          "--memcpyopt",
          "--constmerge",
          "--post-inline-ee-instrument",
          "--inline",
          "--sancov",
          "--elim-avail-extern",
          "--scalarizer",
          "--dse",
          "--loweratomic",
          "--loop-rotate",
          "--flattencfg",
          "--lower-matrix-intrinsics",
          "--aggressive-instcombine",
          "--mldst-motion",
          "--float2int",
          "--loop-sink",
          "--loop-guard-widening",
          "--instcombine",
          "--slsr",
          "--loop-versioning-licm",
          "--rpo-functionattrs",
          "--loop-predication",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--loop-fusion",
      "--sink",
      "--instsimplify",
      "--ipsccp",
      "--memcpyopt",
      "--constmerge",
      "--post-inline-ee-instrument",
      "--inline",
      "--sancov",
      "--elim-avail-extern",
      "--scalarizer",
      "--dse",
      "--loweratomic",
      "--loop-rotate",
      "--flattencfg",
      "--lower-matrix-intrinsics",
      "--aggressive-instcombine",
      "--mldst-motion",
      "--float2int",
      "--loop-sink",
      "--loop-guard-widening",
      "--instcombine",
      "--slsr",
      "--loop-versioning-licm",
      "--rpo-functionattrs",
      "--loop-predication",
      "--die"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}