{
  "program_id": "github-v0_13320.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 61,
    "onePredOneSuc": 44,
    "onePredTwoSuc": 14,
    "oneSuccessor": 57,
    "twoPred": 33,
    "twoPredOneSuc": 8,
    "twoEach": 22,
    "twoSuccessor": 40,
    "morePreds": 3,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 100,
    "BeginPhi": 4,
    "BranchCount": 97,
    "returnInt": 9,
    "CriticalCount": 24,
    "NumEdges": 137,
    "const32Bit": 179,
    "const64Bit": 45,
    "numConstZeroes": 105,
    "numConstOnes": 57,
    "UncondBranches": 57,
    "binaryConstArg": 37,
    "NumAShrInst": 3,
    "NumAddInst": 15,
    "NumAllocaInst": 33,
    "NumAndInst": 0,
    "BlockMid": 12,
    "BlockLow": 92,
    "NumBitCastInst": 1,
    "NumBrInst": 97,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 90,
    "NumICmpInst": 40,
    "NumLShrInst": 3,
    "NumLoadInst": 266,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 7,
    "NumSExtInst": 29,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 106,
    "NumSubInst": 17,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 104,
    "TotalInsts": 764,
    "TotalMemInst": 521,
    "TotalFuncs": 15,
    "ArgsPhi": 8,
    "testUnary": 349
  },
  "baseline_oz_instcount": 766,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse",
    "--prune-eh",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--flattencfg",
    "--ipsccp",
    "--bdce",
    "--simplifycfg",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--div-rem-pairs",
          "--mldst-motion",
          "--early-cse",
          "--coro-early",
          "--redundant-dbg-inst-elim",
          "--loop-vectorize",
          "--strip-dead-prototypes",
          "--dce",
          "--mergereturn",
          "--coro-elide",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--div-rem-pairs",
      "--mldst-motion",
      "--early-cse",
      "--coro-early",
      "--redundant-dbg-inst-elim",
      "--loop-vectorize",
      "--strip-dead-prototypes",
      "--dce",
      "--mergereturn",
      "--coro-elide",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}