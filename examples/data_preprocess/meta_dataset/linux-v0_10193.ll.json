{
  "program_id": "linux-v0_10193.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 68,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 24,
    "oneSuccessor": 57,
    "twoPred": 10,
    "twoPredOneSuc": 6,
    "twoEach": 3,
    "twoSuccessor": 29,
    "morePreds": 12,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 98,
    "BeginPhi": 0,
    "BranchCount": 86,
    "returnInt": 24,
    "CriticalCount": 22,
    "NumEdges": 142,
    "const32Bit": 160,
    "const64Bit": 21,
    "numConstZeroes": 74,
    "numConstOnes": 47,
    "UncondBranches": 57,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 37,
    "NumAndInst": 5,
    "BlockMid": 4,
    "BlockLow": 94,
    "NumBitCastInst": 7,
    "NumBrInst": 86,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 133,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 81,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 98,
    "TotalInsts": 477,
    "TotalMemInst": 314,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 195
  },
  "baseline_oz_instcount": 477,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--gvn-hoist",
    "--inline",
    "--slp-vectorizer",
    "--dse",
    "--die",
    "--sroa",
    "--memcpyopt",
    "--mergefunc",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--indvars",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-instsimplify",
          "--loop-idiom",
          "--indvars",
          "--loop-unroll-and-jam",
          "--div-rem-pairs",
          "--prune-eh",
          "--instcombine",
          "--strip-nondebug",
          "--globaldce",
          "--separate-const-offset-from-gep",
          "--mergeicmps",
          "--ee-instrument",
          "--loop-vectorize",
          "--loop-distribute",
          "--loop-rotate",
          "--lower-guard-intrinsic",
          "--aggressive-instcombine",
          "--deadargelim",
          "--cross-dso-cfi",
          "--constprop",
          "--loop-guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-instsimplify",
      "--loop-idiom",
      "--indvars",
      "--loop-unroll-and-jam",
      "--div-rem-pairs",
      "--prune-eh",
      "--instcombine",
      "--strip-nondebug",
      "--globaldce",
      "--separate-const-offset-from-gep",
      "--mergeicmps",
      "--ee-instrument",
      "--loop-vectorize",
      "--loop-distribute",
      "--loop-rotate",
      "--lower-guard-intrinsic",
      "--aggressive-instcombine",
      "--deadargelim",
      "--cross-dso-cfi",
      "--constprop",
      "--loop-guard-widening"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}