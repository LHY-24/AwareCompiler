{
  "program_id": "tensorflow-v0_1006.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 46,
    "const64Bit": 12,
    "numConstZeroes": 50,
    "numConstOnes": 0,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 18,
    "NumBitCastInst": 12,
    "NumBrInst": 0,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 4,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 18,
    "TotalInsts": 66,
    "TotalMemInst": 36,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 12
  },
  "baseline_oz_instcount": 66,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--ipsccp",
    "--licm",
    "--jump-threading",
    "--dce",
    "--gvn",
    "--loop-instsimplify",
    "--adce",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--adce",
          "--loop-distribute",
          "--rpo-functionattrs",
          "--loop-load-elim",
          "--called-value-propagation",
          "--loop-versioning",
          "--indvars",
          "--coro-split",
          "--attributor",
          "--gvn-hoist",
          "--canonicalize-aliases",
          "--separate-const-offset-from-gep",
          "--nary-reassociate",
          "--loop-predication",
          "--forceattrs",
          "--functionattrs",
          "--loop-rotate",
          "--loop-simplify",
          "--lcssa",
          "--early-cse-memssa",
          "--flattencfg",
          "--lower-matrix-intrinsics",
          "--mergereturn",
          "--reassociate",
          "--callsite-splitting",
          "--partial-inliner",
          "--argpromotion",
          "--break-crit-edges"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+12.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--adce",
      "--loop-distribute",
      "--rpo-functionattrs",
      "--loop-load-elim",
      "--called-value-propagation",
      "--loop-versioning",
      "--indvars",
      "--coro-split",
      "--attributor",
      "--gvn-hoist",
      "--canonicalize-aliases",
      "--separate-const-offset-from-gep",
      "--nary-reassociate",
      "--loop-predication",
      "--forceattrs",
      "--functionattrs",
      "--loop-rotate",
      "--loop-simplify",
      "--lcssa",
      "--early-cse-memssa",
      "--flattencfg",
      "--lower-matrix-intrinsics",
      "--mergereturn",
      "--reassociate",
      "--callsite-splitting",
      "--partial-inliner",
      "--argpromotion",
      "--break-crit-edges"
    ],
    "performance_vs_Oz": "+12.1%"
  }
}