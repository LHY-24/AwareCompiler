{
  "program_id": "linux-v0_5605.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 25,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 7,
    "oneSuccessor": 20,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 14,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 1,
    "BranchCount": 34,
    "returnInt": 21,
    "CriticalCount": 3,
    "NumEdges": 48,
    "const32Bit": 147,
    "const64Bit": 24,
    "numConstZeroes": 56,
    "numConstOnes": 62,
    "UncondBranches": 20,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 53,
    "NumAndInst": 4,
    "BlockMid": 9,
    "BlockLow": 45,
    "NumBitCastInst": 13,
    "NumBrInst": 34,
    "NumCallInst": 53,
    "NumGetElementPtrInst": 47,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 114,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 68,
    "NumSubInst": 1,
    "NumTruncInst": 9,
    "NumXorInst": 2,
    "NumZExtInst": 8,
    "TotalBlocks": 54,
    "TotalInsts": 447,
    "TotalMemInst": 335,
    "TotalFuncs": 36,
    "ArgsPhi": 3,
    "testUnary": 202
  },
  "baseline_oz_instcount": 447,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--bdce",
    "--aggressive-instcombine",
    "--early-cse",
    "--globalopt",
    "--early-cse-memssa",
    "--mem2reg",
    "--loop-instsimplify",
    "--sroa",
    "--loop-deletion",
    "--instcombine",
    "--simplifycfg",
    "--loop-rotate",
    "--gvn",
    "--prune-eh",
    "--reassociate",
    "--newgvn",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--inject-tli-mappings",
          "--dce",
          "--mergeicmps",
          "--simple-loop-unswitch",
          "--pgo-memop-opt",
          "--sancov",
          "--inline",
          "--simplifycfg",
          "--loop-unswitch",
          "--aggressive-instcombine",
          "--partially-inline-libcalls",
          "--lowerinvoke",
          "--die",
          "--canonicalize-aliases",
          "--coro-elide",
          "--name-anon-globals",
          "--mergereturn",
          "--nary-reassociate",
          "--coro-split",
          "--sink",
          "--early-cse",
          "--tailcallelim",
          "--ipsccp",
          "--cross-dso-cfi",
          "--div-rem-pairs",
          "--hotcoldsplit",
          "--loop-sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--inject-tli-mappings",
      "--dce",
      "--mergeicmps",
      "--simple-loop-unswitch",
      "--pgo-memop-opt",
      "--sancov",
      "--inline",
      "--simplifycfg",
      "--loop-unswitch",
      "--aggressive-instcombine",
      "--partially-inline-libcalls",
      "--lowerinvoke",
      "--die",
      "--canonicalize-aliases",
      "--coro-elide",
      "--name-anon-globals",
      "--mergereturn",
      "--nary-reassociate",
      "--coro-split",
      "--sink",
      "--early-cse",
      "--tailcallelim",
      "--ipsccp",
      "--cross-dso-cfi",
      "--div-rem-pairs",
      "--hotcoldsplit",
      "--loop-sink"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}