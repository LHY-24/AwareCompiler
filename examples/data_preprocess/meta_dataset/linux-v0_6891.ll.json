{
  "program_id": "linux-v0_6891.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 7,
    "oneSuccessor": 14,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 27,
    "returnInt": 3,
    "CriticalCount": 9,
    "NumEdges": 40,
    "const32Bit": 179,
    "const64Bit": 9,
    "numConstZeroes": 88,
    "numConstOnes": 36,
    "UncondBranches": 14,
    "binaryConstArg": 13,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 26,
    "NumAndInst": 7,
    "BlockMid": 8,
    "BlockLow": 25,
    "NumBitCastInst": 13,
    "NumBrInst": 27,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 62,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 89,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 51,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 33,
    "TotalInsts": 333,
    "TotalMemInst": 240,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 147
  },
  "baseline_oz_instcount": 333,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--globalopt",
    "--instsimplify",
    "--inline",
    "--die",
    "--early-cse-memssa",
    "--instcombine",
    "--simplifycfg",
    "--licm",
    "--flattencfg",
    "--jump-threading",
    "--early-cse",
    "--lower-expect",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--instcombine",
    "--prune-eh",
    "--loop-simplifycfg",
    "--dse",
    "--loop-rotate",
    "--early-cse",
    "--loop-reroll",
    "--early-cse",
    "--load-store-vectorizer",
    "--licm",
    "--adce",
    "--sccp",
    "--newgvn",
    "--early-cse-memssa",
    "--indvars",
    "--early-cse-memssa",
    "--adce",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--bdce",
    "--inline",
    "--bdce",
    "--aggressive-instcombine",
    "--lower-expect",
    "--instsimplify",
    "--instcombine",
    "--gvn",
    "--loop-instsimplify",
    "--bdce",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--die",
    "--lower-expect",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--instcombine",
    "--prune-eh",
    "--loop-simplifycfg",
    "--dse",
    "--loop-rotate",
    "--early-cse",
    "--loop-reroll",
    "--early-cse",
    "--load-store-vectorizer",
    "--licm",
    "--adce",
    "--sccp",
    "--newgvn",
    "--early-cse-memssa",
    "--indvars",
    "--early-cse-memssa",
    "--adce",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--bdce",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--redundant-dbg-inst-elim",
          "--indvars",
          "--loop-deletion",
          "--loop-sink",
          "--lower-constant-intrinsics",
          "--newgvn",
          "--aggressive-instcombine",
          "--name-anon-globals",
          "--mergefunc",
          "--alignment-from-assumptions",
          "--slp-vectorizer",
          "--loop-unswitch",
          "--coro-early",
          "--loop-guard-widening",
          "--lower-widenable-condition",
          "--slsr",
          "--nary-reassociate",
          "--globaldce",
          "--flattencfg",
          "--add-discriminators",
          "--adce",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--redundant-dbg-inst-elim",
      "--indvars",
      "--loop-deletion",
      "--loop-sink",
      "--lower-constant-intrinsics",
      "--newgvn",
      "--aggressive-instcombine",
      "--name-anon-globals",
      "--mergefunc",
      "--alignment-from-assumptions",
      "--slp-vectorizer",
      "--loop-unswitch",
      "--coro-early",
      "--loop-guard-widening",
      "--lower-widenable-condition",
      "--slsr",
      "--nary-reassociate",
      "--globaldce",
      "--flattencfg",
      "--add-discriminators",
      "--adce",
      "--barrier"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}