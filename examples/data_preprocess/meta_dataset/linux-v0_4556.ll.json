{
  "program_id": "linux-v0_4556.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 5,
    "const32Bit": 16,
    "const64Bit": 4,
    "numConstZeroes": 1,
    "numConstOnes": 10,
    "UncondBranches": 3,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 11,
    "NumBitCastInst": 2,
    "NumBrInst": 3,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 14,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 11,
    "TotalInsts": 64,
    "TotalMemInst": 49,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 27
  },
  "baseline_oz_instcount": 65,
  "knowledge_base_entry": [
    "--inline",
    "--sroa",
    "--mem2reg",
    "--jump-threading",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--dce",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--globaldce",
          "--mem2reg",
          "--strip-dead-prototypes",
          "--scalarizer",
          "--mergeicmps",
          "--lower-constant-intrinsics",
          "--slp-vectorizer",
          "--loop-fusion",
          "--separate-const-offset-from-gep",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--globaldce",
      "--mem2reg",
      "--strip-dead-prototypes",
      "--scalarizer",
      "--mergeicmps",
      "--lower-constant-intrinsics",
      "--slp-vectorizer",
      "--loop-fusion",
      "--separate-const-offset-from-gep",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}