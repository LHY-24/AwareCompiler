{
  "program_id": "linux-v0_9805.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 6,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 2,
    "oneSuccessor": 5,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 1,
    "BranchCount": 10,
    "returnInt": 2,
    "CriticalCount": 4,
    "NumEdges": 15,
    "const32Bit": 41,
    "const64Bit": 0,
    "numConstZeroes": 21,
    "numConstOnes": 17,
    "UncondBranches": 5,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 11,
    "NumAndInst": 2,
    "BlockMid": 2,
    "BlockLow": 14,
    "NumBitCastInst": 1,
    "NumBrInst": 10,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 6,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 15,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 4,
    "NumZExtInst": 4,
    "TotalBlocks": 16,
    "TotalInsts": 135,
    "TotalMemInst": 92,
    "TotalFuncs": 8,
    "ArgsPhi": 3,
    "testUnary": 66
  },
  "baseline_oz_instcount": 135,
  "knowledge_base_entry": [
    "--flattencfg",
    "--early-cse",
    "--aggressive-instcombine",
    "--die",
    "--mem2reg",
    "--early-cse-memssa",
    "--ipsccp",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--dce",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--bdce",
          "--aggressive-instcombine",
          "--add-discriminators",
          "--newgvn",
          "--coro-early",
          "--partially-inline-libcalls",
          "--slsr",
          "--loop-deletion",
          "--mergeicmps",
          "--flattencfg",
          "--loop-vectorize",
          "--loop-unswitch",
          "--loop-unroll",
          "--scalarizer",
          "--jump-threading",
          "--loop-load-elim",
          "--coro-split",
          "--loop-versioning-licm",
          "--adce",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--bdce",
      "--aggressive-instcombine",
      "--add-discriminators",
      "--newgvn",
      "--coro-early",
      "--partially-inline-libcalls",
      "--slsr",
      "--loop-deletion",
      "--mergeicmps",
      "--flattencfg",
      "--loop-vectorize",
      "--loop-unswitch",
      "--loop-unroll",
      "--scalarizer",
      "--jump-threading",
      "--loop-load-elim",
      "--coro-split",
      "--loop-versioning-licm",
      "--adce",
      "--indvars"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}