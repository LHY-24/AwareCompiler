{
  "program_id": "linux-v0_2775.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 68,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 15,
    "oneSuccessor": 59,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 23,
    "morePreds": 4,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 100,
    "BeginPhi": 2,
    "BranchCount": 82,
    "returnInt": 20,
    "CriticalCount": 4,
    "NumEdges": 113,
    "const32Bit": 639,
    "const64Bit": 33,
    "numConstZeroes": 382,
    "numConstOnes": 91,
    "UncondBranches": 59,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 59,
    "NumAndInst": 2,
    "BlockMid": 16,
    "BlockLow": 86,
    "NumBitCastInst": 19,
    "NumBrInst": 82,
    "NumCallInst": 99,
    "NumGetElementPtrInst": 220,
    "NumICmpInst": 20,
    "NumLShrInst": 1,
    "NumLoadInst": 313,
    "NumMulInst": 3,
    "NumOrInst": 3,
    "NumPHIInst": 2,
    "NumRetInst": 18,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 3,
    "NumStoreInst": 105,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 102,
    "TotalInsts": 977,
    "TotalMemInst": 796,
    "TotalFuncs": 54,
    "ArgsPhi": 4,
    "testUnary": 407
  },
  "baseline_oz_instcount": 977,
  "knowledge_base_entry": [
    "--mergereturn",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--jump-threading",
    "--ipsccp",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-guard-intrinsic",
          "--alignment-from-assumptions",
          "--coro-cleanup",
          "--loop-predication",
          "--mergeicmps",
          "--float2int",
          "--indvars",
          "--loop-sink",
          "--globaldce",
          "--sink",
          "--aggressive-instcombine",
          "--loop-simplify",
          "--inferattrs",
          "--libcalls-shrinkwrap",
          "--add-discriminators"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-guard-intrinsic",
      "--alignment-from-assumptions",
      "--coro-cleanup",
      "--loop-predication",
      "--mergeicmps",
      "--float2int",
      "--indvars",
      "--loop-sink",
      "--globaldce",
      "--sink",
      "--aggressive-instcombine",
      "--loop-simplify",
      "--inferattrs",
      "--libcalls-shrinkwrap",
      "--add-discriminators"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}