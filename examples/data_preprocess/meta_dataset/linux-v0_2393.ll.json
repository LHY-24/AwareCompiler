{
  "program_id": "linux-v0_2393.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 75,
    "onePredOneSuc": 44,
    "onePredTwoSuc": 31,
    "oneSuccessor": 58,
    "twoPred": 23,
    "twoPredOneSuc": 7,
    "twoEach": 9,
    "twoSuccessor": 51,
    "morePreds": 11,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 126,
    "BeginPhi": 2,
    "BranchCount": 109,
    "returnInt": 29,
    "CriticalCount": 31,
    "NumEdges": 160,
    "const32Bit": 310,
    "const64Bit": 72,
    "numConstZeroes": 156,
    "numConstOnes": 132,
    "UncondBranches": 58,
    "binaryConstArg": 21,
    "NumAShrInst": 1,
    "NumAddInst": 9,
    "NumAllocaInst": 91,
    "NumAndInst": 6,
    "BlockMid": 15,
    "BlockLow": 113,
    "NumBitCastInst": 6,
    "NumBrInst": 109,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 122,
    "NumICmpInst": 56,
    "NumLShrInst": 1,
    "NumLoadInst": 272,
    "NumMulInst": 3,
    "NumOrInst": 4,
    "NumPHIInst": 2,
    "NumRetInst": 19,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 139,
    "NumSubInst": 7,
    "NumTruncInst": 13,
    "NumXorInst": 2,
    "NumZExtInst": 52,
    "TotalBlocks": 128,
    "TotalInsts": 976,
    "TotalMemInst": 670,
    "TotalFuncs": 31,
    "ArgsPhi": 4,
    "testUnary": 443
  },
  "baseline_oz_instcount": 977,
  "knowledge_base_entry": [
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--inline",
    "--mldst-motion",
    "--inline",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--inline",
    "--flattencfg",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--loop-instsimplify",
          "--aggressive-instcombine",
          "--cross-dso-cfi",
          "--memcpyopt",
          "--mergereturn",
          "--constmerge",
          "--coro-elide",
          "--flattencfg",
          "--libcalls-shrinkwrap",
          "--barrier",
          "--die",
          "--instsimplify",
          "--partial-inliner",
          "--sroa",
          "--always-inline",
          "--functionattrs",
          "--attributor",
          "--loop-versioning-licm",
          "--early-cse-memssa",
          "--indvars",
          "--lowerinvoke",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--loop-instsimplify",
      "--aggressive-instcombine",
      "--cross-dso-cfi",
      "--memcpyopt",
      "--mergereturn",
      "--constmerge",
      "--coro-elide",
      "--flattencfg",
      "--libcalls-shrinkwrap",
      "--barrier",
      "--die",
      "--instsimplify",
      "--partial-inliner",
      "--sroa",
      "--always-inline",
      "--functionattrs",
      "--attributor",
      "--loop-versioning-licm",
      "--early-cse-memssa",
      "--indvars",
      "--lowerinvoke",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}