{
  "program_id": "github-v0_7.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 3,
    "CriticalCount": 2,
    "NumEdges": 16,
    "const32Bit": 17,
    "const64Bit": 0,
    "numConstZeroes": 5,
    "numConstOnes": 11,
    "UncondBranches": 8,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 12,
    "NumBitCastInst": 0,
    "NumBrInst": 12,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 17,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 9,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 13,
    "TotalInsts": 67,
    "TotalMemInst": 42,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 29
  },
  "baseline_oz_instcount": 68,
  "knowledge_base_entry": [
    "--lower-expect",
    "--dce",
    "--sccp",
    "--early-cse",
    "--gvn-hoist",
    "--sroa",
    "--memcpyopt",
    "--slp-vectorizer",
    "--bdce",
    "--gvn",
    "--dse",
    "--jump-threading",
    "--bdce",
    "--mem2reg",
    "--globalopt",
    "--sroa",
    "--flattencfg",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--attributor",
          "--loop-distribute",
          "--mergereturn",
          "--globaldce",
          "--ee-instrument",
          "--sccp",
          "--globalopt",
          "--consthoist",
          "--slsr",
          "--guard-widening",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--attributor",
      "--loop-distribute",
      "--mergereturn",
      "--globaldce",
      "--ee-instrument",
      "--sccp",
      "--globalopt",
      "--consthoist",
      "--slsr",
      "--guard-widening",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}