{
  "program_id": "linux-v0_7954.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 76,
    "onePredOneSuc": 56,
    "onePredTwoSuc": 19,
    "oneSuccessor": 61,
    "twoPred": 19,
    "twoPredOneSuc": 3,
    "twoEach": 6,
    "twoSuccessor": 41,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 130,
    "BeginPhi": 0,
    "BranchCount": 102,
    "returnInt": 34,
    "CriticalCount": 12,
    "NumEdges": 143,
    "const32Bit": 373,
    "const64Bit": 17,
    "numConstZeroes": 183,
    "numConstOnes": 130,
    "UncondBranches": 61,
    "binaryConstArg": 20,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 75,
    "NumAndInst": 2,
    "BlockMid": 12,
    "BlockLow": 118,
    "NumBitCastInst": 10,
    "NumBrInst": 102,
    "NumCallInst": 89,
    "NumGetElementPtrInst": 119,
    "NumICmpInst": 40,
    "NumLShrInst": 0,
    "NumLoadInst": 278,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 28,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 137,
    "NumSubInst": 4,
    "NumTruncInst": 15,
    "NumXorInst": 8,
    "NumZExtInst": 8,
    "TotalBlocks": 130,
    "TotalInsts": 930,
    "TotalMemInst": 698,
    "TotalFuncs": 60,
    "ArgsPhi": 0,
    "testUnary": 394
  },
  "baseline_oz_instcount": 927,
  "knowledge_base_entry": [
    "--ipsccp",
    "--flattencfg",
    "--licm",
    "--reassociate",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--globalopt",
    "--early-cse-memssa",
    "--indvars",
    "-loop-reduce",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--dse",
    "--jump-threading",
    "--slp-vectorizer",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--mergereturn",
          "--loop-idiom",
          "--aggressive-instcombine",
          "--inject-tli-mappings",
          "--strip-dead-prototypes",
          "--loop-sink",
          "--lower-expect",
          "--hotcoldsplit",
          "--loop-versioning",
          "--mldst-motion",
          "--post-inline-ee-instrument",
          "--lcssa",
          "--infer-address-spaces",
          "--ipsccp",
          "--slp-vectorizer",
          "--insert-gcov-profiling",
          "--ipconstprop",
          "--cross-dso-cfi",
          "--mergeicmps",
          "--sancov",
          "--coro-early",
          "--gvn",
          "--separate-const-offset-from-gep",
          "--loop-data-prefetch",
          "--sroa",
          "--sink",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--mergereturn",
      "--loop-idiom",
      "--aggressive-instcombine",
      "--inject-tli-mappings",
      "--strip-dead-prototypes",
      "--loop-sink",
      "--lower-expect",
      "--hotcoldsplit",
      "--loop-versioning",
      "--mldst-motion",
      "--post-inline-ee-instrument",
      "--lcssa",
      "--infer-address-spaces",
      "--ipsccp",
      "--slp-vectorizer",
      "--insert-gcov-profiling",
      "--ipconstprop",
      "--cross-dso-cfi",
      "--mergeicmps",
      "--sancov",
      "--coro-early",
      "--gvn",
      "--separate-const-offset-from-gep",
      "--loop-data-prefetch",
      "--sroa",
      "--sink",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}