{
  "program_id": "linux-v0_6895.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 1,
    "oneSuccessor": 12,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 5,
    "CriticalCount": 2,
    "NumEdges": 26,
    "const32Bit": 217,
    "const64Bit": 30,
    "numConstZeroes": 119,
    "numConstOnes": 60,
    "UncondBranches": 12,
    "binaryConstArg": 16,
    "NumAShrInst": 2,
    "NumAddInst": 1,
    "NumAllocaInst": 40,
    "NumAndInst": 9,
    "BlockMid": 10,
    "BlockLow": 21,
    "NumBitCastInst": 12,
    "NumBrInst": 19,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 89,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 112,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 75,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 31,
    "TotalInsts": 418,
    "TotalMemInst": 336,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 177
  },
  "baseline_oz_instcount": 418,
  "knowledge_base_entry": [
    "--irce",
    "--newgvn",
    "--prune-eh",
    "--aggressive-instcombine",
    "--gvn",
    "--jump-threading",
    "--dse",
    "--jump-threading",
    "--ipsccp",
    "--lower-expect",
    "--jump-threading",
    "--bdce",
    "--lower-expect",
    "--early-cse",
    "--load-store-vectorizer",
    "--die",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--pgo-memop-opt",
          "--coro-split",
          "--mem2reg",
          "--aggressive-instcombine",
          "--loop-simplify",
          "--loop-simplifycfg",
          "--lowerinvoke",
          "--lower-matrix-intrinsics",
          "--irce",
          "--strip-dead-prototypes",
          "--loop-versioning",
          "--attributor",
          "--loop-predication",
          "-loop-reduce",
          "--ipconstprop",
          "--cross-dso-cfi",
          "--newgvn",
          "--loop-vectorize",
          "--loop-interchange",
          "--alignment-from-assumptions",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--pgo-memop-opt",
      "--coro-split",
      "--mem2reg",
      "--aggressive-instcombine",
      "--loop-simplify",
      "--loop-simplifycfg",
      "--lowerinvoke",
      "--lower-matrix-intrinsics",
      "--irce",
      "--strip-dead-prototypes",
      "--loop-versioning",
      "--attributor",
      "--loop-predication",
      "-loop-reduce",
      "--ipconstprop",
      "--cross-dso-cfi",
      "--newgvn",
      "--loop-vectorize",
      "--loop-interchange",
      "--alignment-from-assumptions",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}