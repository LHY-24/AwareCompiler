{
  "program_id": "poj104-v1_98_1530.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 5,
    "oneSuccessor": 22,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 13,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 62,
    "BeginPhi": 0,
    "BranchCount": 35,
    "returnInt": 21,
    "CriticalCount": 5,
    "NumEdges": 48,
    "const32Bit": 81,
    "const64Bit": 66,
    "numConstZeroes": 40,
    "numConstOnes": 61,
    "UncondBranches": 22,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 47,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 54,
    "NumBitCastInst": 59,
    "NumBrInst": 35,
    "NumCallInst": 78,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 103,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 26,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 55,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 62,
    "TotalInsts": 475,
    "TotalMemInst": 321,
    "TotalFuncs": 42,
    "ArgsPhi": 0,
    "testUnary": 220
  },
  "baseline_oz_instcount": 133,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--lower-expect",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--adce",
    "--ipsccp",
    "--globalopt",
    "--jump-threading",
    "--newgvn",
    "--adce",
    "--ipsccp",
    "--globalopt",
    "--jump-threading",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--adce",
    "--gvn-hoist",
    "--simplifycfg",
    "--mem2reg",
    "--dse",
    "--instcombine",
    "--loop-instsimplify",
    "--dse",
    "--instsimplify",
    "--mem2reg",
    "--loop-simplifycfg",
    "--mem2reg",
    "--gvn",
    "--loop-reroll",
    "--newgvn",
    "--jump-threading",
    "--inline",
    "--prune-eh",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--hotcoldsplit",
          "--pgo-memop-opt",
          "--mergefunc",
          "--instnamer",
          "--loop-simplify",
          "--loop-data-prefetch",
          "--loop-versioning-licm",
          "--functionattrs",
          "--lower-matrix-intrinsics",
          "--jump-threading",
          "--mergeicmps",
          "--add-discriminators",
          "--float2int",
          "--elim-avail-extern",
          "--loweratomic",
          "--constmerge",
          "-loop-reduce",
          "--called-value-propagation",
          "--sroa",
          "--adce",
          "--gvn",
          "--lower-constant-intrinsics",
          "--name-anon-globals",
          "--slp-vectorizer",
          "--coro-cleanup",
          "--partially-inline-libcalls",
          "--globalopt",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+55.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--hotcoldsplit",
      "--pgo-memop-opt",
      "--mergefunc",
      "--instnamer",
      "--loop-simplify",
      "--loop-data-prefetch",
      "--loop-versioning-licm",
      "--functionattrs",
      "--lower-matrix-intrinsics",
      "--jump-threading",
      "--mergeicmps",
      "--add-discriminators",
      "--float2int",
      "--elim-avail-extern",
      "--loweratomic",
      "--constmerge",
      "-loop-reduce",
      "--called-value-propagation",
      "--sroa",
      "--adce",
      "--gvn",
      "--lower-constant-intrinsics",
      "--name-anon-globals",
      "--slp-vectorizer",
      "--coro-cleanup",
      "--partially-inline-libcalls",
      "--globalopt",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+55.6%"
  }
}