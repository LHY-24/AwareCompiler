{
  "program_id": "github-v0_18936.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 29,
    "const64Bit": 49,
    "numConstZeroes": 51,
    "numConstOnes": 19,
    "UncondBranches": 13,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 2,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 35,
    "TotalBlocks": 24,
    "TotalInsts": 219,
    "TotalMemInst": 122,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 111
  },
  "baseline_oz_instcount": 219,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--gvn",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--jump-threading",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--sink",
          "--pgo-memop-opt",
          "--scalarizer",
          "--strip-debug-declare",
          "--lower-matrix-intrinsics",
          "--jump-threading",
          "--rpo-functionattrs",
          "--div-rem-pairs",
          "--tailcallelim",
          "--always-inline",
          "--argpromotion",
          "--globalopt",
          "--load-store-vectorizer",
          "--mergereturn",
          "--canonicalize-aliases",
          "--globalsplit",
          "--lowerinvoke",
          "--coro-early",
          "--loop-unroll-and-jam",
          "--aggressive-instcombine",
          "--consthoist",
          "--strip",
          "--lcssa",
          "--newgvn",
          "--loop-vectorize",
          "--loop-distribute",
          "--strip-dead-prototypes",
          "--instnamer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+13.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--sink",
      "--pgo-memop-opt",
      "--scalarizer",
      "--strip-debug-declare",
      "--lower-matrix-intrinsics",
      "--jump-threading",
      "--rpo-functionattrs",
      "--div-rem-pairs",
      "--tailcallelim",
      "--always-inline",
      "--argpromotion",
      "--globalopt",
      "--load-store-vectorizer",
      "--mergereturn",
      "--canonicalize-aliases",
      "--globalsplit",
      "--lowerinvoke",
      "--coro-early",
      "--loop-unroll-and-jam",
      "--aggressive-instcombine",
      "--consthoist",
      "--strip",
      "--lcssa",
      "--newgvn",
      "--loop-vectorize",
      "--loop-distribute",
      "--strip-dead-prototypes",
      "--instnamer"
    ],
    "performance_vs_Oz": "+13.7%"
  }
}