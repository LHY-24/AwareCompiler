{
  "program_id": "linux-v0_13891.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 54,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 11,
    "oneSuccessor": 46,
    "twoPred": 21,
    "twoPredOneSuc": 2,
    "twoEach": 16,
    "twoSuccessor": 31,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 107,
    "BeginPhi": 0,
    "BranchCount": 77,
    "returnInt": 35,
    "CriticalCount": 9,
    "NumEdges": 108,
    "const32Bit": 252,
    "const64Bit": 23,
    "numConstZeroes": 105,
    "numConstOnes": 82,
    "UncondBranches": 46,
    "binaryConstArg": 34,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 67,
    "NumAndInst": 9,
    "BlockMid": 6,
    "BlockLow": 101,
    "NumBitCastInst": 9,
    "NumBrInst": 77,
    "NumCallInst": 76,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 219,
    "NumMulInst": 0,
    "NumOrInst": 24,
    "NumPHIInst": 0,
    "NumRetInst": 30,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 6,
    "NumStoreInst": 112,
    "NumSubInst": 0,
    "NumTruncInst": 12,
    "NumXorInst": 2,
    "NumZExtInst": 11,
    "TotalBlocks": 107,
    "TotalInsts": 756,
    "TotalMemInst": 544,
    "TotalFuncs": 46,
    "ArgsPhi": 0,
    "testUnary": 323
  },
  "baseline_oz_instcount": 688,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--lower-expect",
    "--mergefunc",
    "--inline",
    "--dce",
    "--inline",
    "--ipsccp",
    "--inline",
    "--flattencfg",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--sccp",
          "--indvars",
          "--loop-versioning",
          "--aggressive-instcombine",
          "--coro-split",
          "--slsr",
          "--ipsccp",
          "--tailcallelim",
          "--gvn",
          "--deadargelim",
          "--loop-load-elim",
          "--globaldce",
          "--coro-elide",
          "--globalopt",
          "--partial-inliner",
          "--strip-dead-prototypes",
          "--partially-inline-libcalls",
          "--prune-eh",
          "--memcpyopt",
          "--strip-debug-declare",
          "--separate-const-offset-from-gep",
          "--irce",
          "--alignment-from-assumptions",
          "--lowerswitch",
          "-loop-reduce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--sccp",
      "--indvars",
      "--loop-versioning",
      "--aggressive-instcombine",
      "--coro-split",
      "--slsr",
      "--ipsccp",
      "--tailcallelim",
      "--gvn",
      "--deadargelim",
      "--loop-load-elim",
      "--globaldce",
      "--coro-elide",
      "--globalopt",
      "--partial-inliner",
      "--strip-dead-prototypes",
      "--partially-inline-libcalls",
      "--prune-eh",
      "--memcpyopt",
      "--strip-debug-declare",
      "--separate-const-offset-from-gep",
      "--irce",
      "--alignment-from-assumptions",
      "--lowerswitch",
      "-loop-reduce"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}