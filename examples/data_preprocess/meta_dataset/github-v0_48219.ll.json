{
  "program_id": "github-v0_48219.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 25,
    "oneSuccessor": 38,
    "twoPred": 17,
    "twoPredOneSuc": 7,
    "twoEach": 8,
    "twoSuccessor": 34,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 1,
    "BranchCount": 72,
    "returnInt": 0,
    "CriticalCount": 23,
    "NumEdges": 109,
    "const32Bit": 168,
    "const64Bit": 16,
    "numConstZeroes": 30,
    "numConstOnes": 153,
    "UncondBranches": 38,
    "binaryConstArg": 40,
    "NumAShrInst": 2,
    "NumAddInst": 9,
    "NumAllocaInst": 45,
    "NumAndInst": 15,
    "BlockMid": 11,
    "BlockLow": 66,
    "NumBitCastInst": 3,
    "NumBrInst": 72,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 104,
    "NumICmpInst": 36,
    "NumLShrInst": 5,
    "NumLoadInst": 249,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 1,
    "NumRetInst": 4,
    "NumSExtInst": 3,
    "NumSelectInst": 1,
    "NumShlInst": 4,
    "NumStoreInst": 187,
    "NumSubInst": 6,
    "NumTruncInst": 12,
    "NumXorInst": 2,
    "NumZExtInst": 67,
    "TotalBlocks": 77,
    "TotalInsts": 843,
    "TotalMemInst": 589,
    "TotalFuncs": 5,
    "ArgsPhi": 16,
    "testUnary": 385
  },
  "baseline_oz_instcount": 843,
  "knowledge_base_entry": [
    "--sccp",
    "--reassociate",
    "--aggressive-instcombine",
    "--prune-eh",
    "--newgvn",
    "--mergefunc",
    "--adce",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn",
          "--deadargelim",
          "--slp-vectorizer",
          "--lower-matrix-intrinsics",
          "--guard-widening",
          "--aggressive-instcombine",
          "--globalsplit",
          "--loop-versioning",
          "--inline",
          "--functionattrs",
          "--inject-tli-mappings",
          "--infer-address-spaces",
          "--cross-dso-cfi",
          "--slsr",
          "--speculative-execution",
          "--sink",
          "-loop-reduce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn",
      "--deadargelim",
      "--slp-vectorizer",
      "--lower-matrix-intrinsics",
      "--guard-widening",
      "--aggressive-instcombine",
      "--globalsplit",
      "--loop-versioning",
      "--inline",
      "--functionattrs",
      "--inject-tli-mappings",
      "--infer-address-spaces",
      "--cross-dso-cfi",
      "--slsr",
      "--speculative-execution",
      "--sink",
      "-loop-reduce"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}