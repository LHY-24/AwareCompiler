{
  "program_id": "github-v0_42905.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 1,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 0,
    "oneSuccessor": 1,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 0,
    "BranchCount": 2,
    "returnInt": 1,
    "CriticalCount": 1,
    "NumEdges": 3,
    "const32Bit": 1,
    "const64Bit": 10,
    "numConstZeroes": 6,
    "numConstOnes": 5,
    "UncondBranches": 1,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 4,
    "NumBitCastInst": 0,
    "NumBrInst": 2,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 6,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 2,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 6,
    "TotalInsts": 75,
    "TotalMemInst": 35,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 8
  },
  "baseline_oz_instcount": 73,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--slsr",
    "--nary-reassociate",
    "--correlated-propagation",
    "--instcombine",
    "--dce",
    "--load-store-vectorizer",
    "--early-cse",
    "--mldst-motion",
    "--licm",
    "--loop-rotate",
    "--dse",
    "--mem2reg",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--die",
          "--sroa",
          "--loop-interchange",
          "--simplifycfg",
          "--loop-versioning",
          "--canonicalize-aliases",
          "--early-cse",
          "--instcombine",
          "--scalarizer",
          "--instnamer",
          "--loop-instsimplify",
          "-loop-reduce",
          "--newgvn",
          "--ipconstprop",
          "--always-inline",
          "--prune-eh",
          "--globalopt",
          "--nary-reassociate",
          "--coro-cleanup",
          "--sancov",
          "--loop-unswitch",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--die",
      "--sroa",
      "--loop-interchange",
      "--simplifycfg",
      "--loop-versioning",
      "--canonicalize-aliases",
      "--early-cse",
      "--instcombine",
      "--scalarizer",
      "--instnamer",
      "--loop-instsimplify",
      "-loop-reduce",
      "--newgvn",
      "--ipconstprop",
      "--always-inline",
      "--prune-eh",
      "--globalopt",
      "--nary-reassociate",
      "--coro-cleanup",
      "--sancov",
      "--loop-unswitch",
      "--globaldce"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}