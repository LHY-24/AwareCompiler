{
  "program_id": "linux-v0_8494.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 10,
    "oneSuccessor": 18,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 17,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 0,
    "BranchCount": 35,
    "returnInt": 19,
    "CriticalCount": 16,
    "NumEdges": 52,
    "const32Bit": 128,
    "const64Bit": 12,
    "numConstZeroes": 49,
    "numConstOnes": 50,
    "UncondBranches": 18,
    "binaryConstArg": 17,
    "NumAShrInst": 1,
    "NumAddInst": 8,
    "NumAllocaInst": 41,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 39,
    "NumBitCastInst": 6,
    "NumBrInst": 35,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 18,
    "NumLShrInst": 1,
    "NumLoadInst": 100,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 5,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 50,
    "NumSubInst": 3,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 15,
    "TotalBlocks": 47,
    "TotalInsts": 362,
    "TotalMemInst": 247,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 170
  },
  "baseline_oz_instcount": 362,
  "knowledge_base_entry": [
    "--irce",
    "--early-cse-memssa",
    "--adce",
    "--bdce",
    "--sroa",
    "--aggressive-instcombine",
    "--early-cse",
    "--indvars",
    "--gvn",
    "--sroa",
    "--aggressive-instcombine",
    "--adce",
    "--dse",
    "--correlated-propagation",
    "--jump-threading",
    "--elim-avail-extern",
    "--mergefunc",
    "--licm",
    "--dce",
    "--lower-expect",
    "--ipsccp",
    "--loweratomic",
    "--instcombine",
    "--prune-eh",
    "--gvn-hoist",
    "--adce",
    "--reassociate",
    "--dse",
    "--mldst-motion",
    "--jump-threading",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--aggressive-instcombine",
          "-loop-reduce",
          "--callsite-splitting",
          "--early-cse",
          "--partial-inliner",
          "--loop-rotate",
          "--cross-dso-cfi",
          "--newgvn",
          "--loop-deletion",
          "--coro-elide",
          "--globaldce",
          "--tailcallelim",
          "--inline",
          "--ipconstprop",
          "--name-anon-globals",
          "--lcssa",
          "--insert-gcov-profiling",
          "--instcombine",
          "--early-cse-memssa",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--aggressive-instcombine",
      "-loop-reduce",
      "--callsite-splitting",
      "--early-cse",
      "--partial-inliner",
      "--loop-rotate",
      "--cross-dso-cfi",
      "--newgvn",
      "--loop-deletion",
      "--coro-elide",
      "--globaldce",
      "--tailcallelim",
      "--inline",
      "--ipconstprop",
      "--name-anon-globals",
      "--lcssa",
      "--insert-gcov-profiling",
      "--instcombine",
      "--early-cse-memssa",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}