{
  "program_id": "github-v0_40423.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 5,
    "oneSuccessor": 16,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 25,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 34,
    "const32Bit": 55,
    "const64Bit": 75,
    "numConstZeroes": 80,
    "numConstOnes": 31,
    "UncondBranches": 16,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 12,
    "NumAndInst": 10,
    "BlockMid": 5,
    "BlockLow": 24,
    "NumBitCastInst": 8,
    "NumBrInst": 25,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 9,
    "NumLShrInst": 7,
    "NumLoadInst": 42,
    "NumMulInst": 2,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 23,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 29,
    "TotalInsts": 219,
    "TotalMemInst": 129,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 70
  },
  "baseline_oz_instcount": 219,
  "knowledge_base_entry": [
    "--reassociate",
    "--dce",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--instsimplify",
    "--globalopt",
    "--globaldce",
    "--ipsccp",
    "--nary-reassociate",
    "--sroa",
    "--memcpyopt",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--attributor",
          "--loop-idiom",
          "--irce",
          "--barrier",
          "--loop-load-elim",
          "--float2int",
          "--globaldce",
          "--strip-nondebug",
          "--loop-simplifycfg",
          "--name-anon-globals",
          "--sccp",
          "--aggressive-instcombine",
          "--redundant-dbg-inst-elim",
          "--loop-interchange",
          "--slp-vectorizer",
          "--forceattrs",
          "--gvn-hoist",
          "--indvars",
          "--slsr",
          "--loop-predication",
          "--alignment-from-assumptions",
          "--loop-distribute",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--attributor",
      "--loop-idiom",
      "--irce",
      "--barrier",
      "--loop-load-elim",
      "--float2int",
      "--globaldce",
      "--strip-nondebug",
      "--loop-simplifycfg",
      "--name-anon-globals",
      "--sccp",
      "--aggressive-instcombine",
      "--redundant-dbg-inst-elim",
      "--loop-interchange",
      "--slp-vectorizer",
      "--forceattrs",
      "--gvn-hoist",
      "--indvars",
      "--slsr",
      "--loop-predication",
      "--alignment-from-assumptions",
      "--loop-distribute",
      "--newgvn"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}