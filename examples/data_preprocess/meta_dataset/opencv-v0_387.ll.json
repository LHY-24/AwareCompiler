{
  "program_id": "opencv-v0_387.ll",
  "autophase_features": {
    "BBNumArgsHi": 11,
    "BBNumArgsLo": 8,
    "onePred": 21,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 9,
    "oneSuccessor": 19,
    "twoPred": 18,
    "twoPredOneSuc": 7,
    "twoEach": 9,
    "twoSuccessor": 21,
    "morePreds": 1,
    "BB03Phi": 8,
    "BBHiPhi": 11,
    "BBNoPhi": 25,
    "BeginPhi": 19,
    "BranchCount": 40,
    "returnInt": 1,
    "CriticalCount": 21,
    "NumEdges": 61,
    "const32Bit": 3,
    "const64Bit": 137,
    "numConstZeroes": 12,
    "numConstOnes": 8,
    "UncondBranches": 19,
    "binaryConstArg": 62,
    "NumAShrInst": 0,
    "NumAddInst": 120,
    "NumAllocaInst": 0,
    "NumAndInst": 15,
    "BlockMid": 6,
    "BlockLow": 38,
    "NumBitCastInst": 0,
    "NumBrInst": 40,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 32,
    "NumLShrInst": 5,
    "NumLoadInst": 43,
    "NumMulInst": 2,
    "NumOrInst": 5,
    "NumPHIInst": 63,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 11,
    "NumShlInst": 5,
    "NumStoreInst": 0,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 44,
    "TotalBlocks": 44,
    "TotalInsts": 446,
    "TotalMemInst": 88,
    "TotalFuncs": 4,
    "ArgsPhi": 128,
    "testUnary": 87
  },
  "baseline_oz_instcount": 437,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--slsr",
    "--instcombine",
    "--inline",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--early-cse-memssa",
    "--mergefunc",
    "--dse",
    "--early-cse-memssa",
    "--die",
    "--load-store-vectorizer",
    "--instsimplify",
    "--elim-avail-extern",
    "--sccp",
    "--simplifycfg",
    "--sroa",
    "--sccp",
    "--newgvn",
    "--jump-threading",
    "--mergefunc",
    "--ipsccp",
    "--die",
    "--early-cse",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--lowerswitch",
          "--load-store-vectorizer",
          "--partially-inline-libcalls",
          "--callsite-splitting",
          "--elim-avail-extern",
          "--sancov",
          "--gvn",
          "--ipsccp",
          "--loop-data-prefetch",
          "--mem2reg",
          "--inject-tli-mappings",
          "--sroa",
          "--loop-versioning",
          "--mergereturn",
          "--partial-inliner",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--lowerswitch",
      "--load-store-vectorizer",
      "--partially-inline-libcalls",
      "--callsite-splitting",
      "--elim-avail-extern",
      "--sancov",
      "--gvn",
      "--ipsccp",
      "--loop-data-prefetch",
      "--mem2reg",
      "--inject-tli-mappings",
      "--sroa",
      "--loop-versioning",
      "--mergereturn",
      "--partial-inliner",
      "--die"
    ],
    "performance_vs_Oz": "+11.9%"
  }
}