{
  "program_id": "linux-v0_9433.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 61,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 12,
    "oneSuccessor": 56,
    "twoPred": 13,
    "twoPredOneSuc": 5,
    "twoEach": 5,
    "twoSuccessor": 22,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 108,
    "BeginPhi": 0,
    "BranchCount": 77,
    "returnInt": 42,
    "CriticalCount": 6,
    "NumEdges": 113,
    "const32Bit": 454,
    "const64Bit": 55,
    "numConstZeroes": 274,
    "numConstOnes": 124,
    "UncondBranches": 56,
    "binaryConstArg": 11,
    "NumAShrInst": 1,
    "NumAddInst": 4,
    "NumAllocaInst": 91,
    "NumAndInst": 3,
    "BlockMid": 17,
    "BlockLow": 91,
    "NumBitCastInst": 35,
    "NumBrInst": 77,
    "NumCallInst": 95,
    "NumGetElementPtrInst": 163,
    "NumICmpInst": 21,
    "NumLShrInst": 1,
    "NumLoadInst": 275,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 27,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 145,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 108,
    "TotalInsts": 960,
    "TotalMemInst": 769,
    "TotalFuncs": 107,
    "ArgsPhi": 0,
    "testUnary": 416
  },
  "baseline_oz_instcount": 961,
  "knowledge_base_entry": [
    "--loop-unroll",
    "--newgvn",
    "-loop-reduce",
    "--sroa",
    "--aggressive-instcombine",
    "--licm",
    "--flattencfg",
    "--licm",
    "--reassociate",
    "--aggressive-instcombine",
    "--licm",
    "--flattencfg",
    "--licm",
    "--reassociate",
    "--slp-vectorizer",
    "--mergefunc",
    "--jump-threading",
    "--sccp",
    "--sroa",
    "--dse",
    "--lower-constant-intrinsics",
    "--adce",
    "--inline",
    "--jump-threading",
    "--correlated-propagation",
    "--die",
    "--gvn",
    "--die",
    "--lower-constant-intrinsics",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--loop-unroll-and-jam",
          "--alignment-from-assumptions",
          "--mergefunc",
          "--prune-eh",
          "--lowerinvoke",
          "--constmerge",
          "--pgo-memop-opt",
          "--early-cse-memssa",
          "--separate-const-offset-from-gep",
          "--loop-instsimplify",
          "--slsr",
          "--load-store-vectorizer",
          "--barrier",
          "--loop-load-elim",
          "--loop-predication",
          "--hotcoldsplit",
          "--loop-deletion",
          "--aggressive-instcombine",
          "--guard-widening",
          "--canonicalize-aliases",
          "--loop-vectorize",
          "--coro-elide",
          "--loop-data-prefetch",
          "--loop-versioning-licm",
          "--ipsccp",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--loop-unroll-and-jam",
      "--alignment-from-assumptions",
      "--mergefunc",
      "--prune-eh",
      "--lowerinvoke",
      "--constmerge",
      "--pgo-memop-opt",
      "--early-cse-memssa",
      "--separate-const-offset-from-gep",
      "--loop-instsimplify",
      "--slsr",
      "--load-store-vectorizer",
      "--barrier",
      "--loop-load-elim",
      "--loop-predication",
      "--hotcoldsplit",
      "--loop-deletion",
      "--aggressive-instcombine",
      "--guard-widening",
      "--canonicalize-aliases",
      "--loop-vectorize",
      "--coro-elide",
      "--loop-data-prefetch",
      "--loop-versioning-licm",
      "--ipsccp",
      "--dse"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}