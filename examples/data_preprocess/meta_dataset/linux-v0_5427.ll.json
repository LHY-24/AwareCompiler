{
  "program_id": "linux-v0_5427.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 40,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 10,
    "oneSuccessor": 37,
    "twoPred": 12,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 16,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 65,
    "BeginPhi": 1,
    "BranchCount": 53,
    "returnInt": 9,
    "CriticalCount": 8,
    "NumEdges": 74,
    "const32Bit": 156,
    "const64Bit": 19,
    "numConstZeroes": 73,
    "numConstOnes": 58,
    "UncondBranches": 37,
    "binaryConstArg": 7,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 50,
    "NumAndInst": 1,
    "BlockMid": 8,
    "BlockLow": 58,
    "NumBitCastInst": 21,
    "NumBrInst": 53,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 130,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 12,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 65,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 66,
    "TotalInsts": 451,
    "TotalMemInst": 324,
    "TotalFuncs": 25,
    "ArgsPhi": 2,
    "testUnary": 214
  },
  "baseline_oz_instcount": 451,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--slsr",
    "--early-cse-memssa",
    "--flattencfg",
    "--instcombine",
    "--loop-reroll",
    "--indvars",
    "--load-store-vectorizer",
    "--bdce",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--mldst-motion",
    "--inline",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--instsimplify",
          "--loop-unswitch",
          "--scalarizer",
          "--loop-sink",
          "--dse",
          "--called-value-propagation",
          "--loop-simplifycfg",
          "--globalopt",
          "--instnamer",
          "--loop-data-prefetch",
          "--lower-widenable-condition",
          "--mem2reg",
          "--aggressive-instcombine",
          "--ipconstprop",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--instsimplify",
      "--loop-unswitch",
      "--scalarizer",
      "--loop-sink",
      "--dse",
      "--called-value-propagation",
      "--loop-simplifycfg",
      "--globalopt",
      "--instnamer",
      "--loop-data-prefetch",
      "--lower-widenable-condition",
      "--mem2reg",
      "--aggressive-instcombine",
      "--ipconstprop",
      "--dce"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}