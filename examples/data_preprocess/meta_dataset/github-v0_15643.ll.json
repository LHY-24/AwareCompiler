{
  "program_id": "github-v0_15643.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 122,
    "onePredOneSuc": 109,
    "onePredTwoSuc": 11,
    "oneSuccessor": 122,
    "twoPred": 14,
    "twoPredOneSuc": 9,
    "twoEach": 3,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 138,
    "BeginPhi": 2,
    "BranchCount": 136,
    "returnInt": 11,
    "CriticalCount": 3,
    "NumEdges": 154,
    "const32Bit": 121,
    "const64Bit": 78,
    "numConstZeroes": 99,
    "numConstOnes": 32,
    "UncondBranches": 122,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 21,
    "NumAndInst": 11,
    "BlockMid": 4,
    "BlockLow": 136,
    "NumBitCastInst": 12,
    "NumBrInst": 136,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 64,
    "NumICmpInst": 14,
    "NumLShrInst": 2,
    "NumLoadInst": 99,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 48,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 15,
    "TotalBlocks": 140,
    "TotalInsts": 468,
    "TotalMemInst": 254,
    "TotalFuncs": 20,
    "ArgsPhi": 4,
    "testUnary": 156
  },
  "baseline_oz_instcount": 468,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--loop-rotate",
    "--early-cse-memssa",
    "--dce",
    "--gvn",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--aggressive-instcombine",
          "--canonicalize-aliases",
          "--strip",
          "--strip-dead-prototypes",
          "--sccp",
          "--lowerinvoke",
          "--libcalls-shrinkwrap",
          "--globaldce",
          "--deadargelim",
          "--mergereturn",
          "--mem2reg",
          "--lower-expect",
          "--loweratomic",
          "--loop-reroll",
          "--forceattrs",
          "--separate-const-offset-from-gep",
          "--dse",
          "--hotcoldsplit",
          "--early-cse-memssa",
          "--loop-vectorize",
          "--redundant-dbg-inst-elim",
          "--loop-interchange",
          "--instnamer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--aggressive-instcombine",
      "--canonicalize-aliases",
      "--strip",
      "--strip-dead-prototypes",
      "--sccp",
      "--lowerinvoke",
      "--libcalls-shrinkwrap",
      "--globaldce",
      "--deadargelim",
      "--mergereturn",
      "--mem2reg",
      "--lower-expect",
      "--loweratomic",
      "--loop-reroll",
      "--forceattrs",
      "--separate-const-offset-from-gep",
      "--dse",
      "--hotcoldsplit",
      "--early-cse-memssa",
      "--loop-vectorize",
      "--redundant-dbg-inst-elim",
      "--loop-interchange",
      "--instnamer"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}