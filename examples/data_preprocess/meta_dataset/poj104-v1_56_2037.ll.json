{
  "program_id": "poj104-v1_56_2037.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 9,
    "const32Bit": 20,
    "const64Bit": 12,
    "numConstZeroes": 3,
    "numConstOnes": 12,
    "UncondBranches": 5,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 8,
    "NumBitCastInst": 12,
    "NumBrInst": 7,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 17,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 11,
    "TotalInsts": 97,
    "TotalMemInst": 58,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 44
  },
  "baseline_oz_instcount": 108,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--simplifycfg",
    "--instcombine",
    "--reassociate",
    "--inline",
    "--slp-vectorizer",
    "--die",
    "--dse",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--licm",
    "--inline",
    "--loop-instsimplify",
    "--simplifycfg",
    "--instcombine",
    "--reassociate",
    "--inline",
    "--slp-vectorizer",
    "--die",
    "--dse",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--licm",
    "--inline",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--mem2reg",
    "--mergefunc",
    "--mem2reg",
    "--reassociate",
    "--reassociate",
    "--dse",
    "--elim-avail-extern",
    "--flattencfg",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-predication",
          "--barrier",
          "--add-discriminators",
          "--strip",
          "--strip-debug-declare",
          "--speculative-execution",
          "--sroa",
          "--loop-interchange",
          "--sccp",
          "--instcombine",
          "--alignment-from-assumptions",
          "--elim-avail-extern",
          "--mergereturn",
          "--coro-cleanup",
          "--name-anon-globals",
          "--loop-versioning-licm",
          "--loop-data-prefetch",
          "--cross-dso-cfi",
          "--loop-simplifycfg",
          "--guard-widening",
          "--strip-dead-prototypes",
          "--inline",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+63.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-predication",
      "--barrier",
      "--add-discriminators",
      "--strip",
      "--strip-debug-declare",
      "--speculative-execution",
      "--sroa",
      "--loop-interchange",
      "--sccp",
      "--instcombine",
      "--alignment-from-assumptions",
      "--elim-avail-extern",
      "--mergereturn",
      "--coro-cleanup",
      "--name-anon-globals",
      "--loop-versioning-licm",
      "--loop-data-prefetch",
      "--cross-dso-cfi",
      "--loop-simplifycfg",
      "--guard-widening",
      "--strip-dead-prototypes",
      "--inline",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+63.9%"
  }
}