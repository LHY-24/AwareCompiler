{
  "program_id": "linux-v0_13304.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 7,
    "oneSuccessor": 21,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 31,
    "returnInt": 39,
    "CriticalCount": 1,
    "NumEdges": 45,
    "const32Bit": 192,
    "const64Bit": 52,
    "numConstZeroes": 117,
    "numConstOnes": 106,
    "UncondBranches": 21,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 85,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 46,
    "NumBitCastInst": 38,
    "NumBrInst": 31,
    "NumCallInst": 83,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 128,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 80,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 50,
    "TotalInsts": 536,
    "TotalMemInst": 424,
    "TotalFuncs": 63,
    "ArgsPhi": 0,
    "testUnary": 263
  },
  "baseline_oz_instcount": 536,
  "knowledge_base_entry": [
    "--mem2reg",
    "--bdce",
    "--correlated-propagation",
    "--newgvn",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--adce",
    "--lower-constant-intrinsics",
    "--sccp",
    "--jump-threading",
    "--ipsccp",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-dead-prototypes",
          "--lcssa",
          "--speculative-execution",
          "--loop-distribute",
          "--deadargelim",
          "--indvars",
          "--early-cse-memssa",
          "--coro-split",
          "--infer-address-spaces",
          "--lower-constant-intrinsics",
          "--inject-tli-mappings",
          "--ipsccp",
          "--loop-unroll-and-jam",
          "--scalarizer",
          "--jump-threading",
          "--always-inline",
          "--strip-nondebug",
          "--inferattrs",
          "--argpromotion",
          "--add-discriminators",
          "--constmerge",
          "--prune-eh",
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--guard-widening",
          "--mergeicmps",
          "--dse",
          "--forceattrs",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-dead-prototypes",
      "--lcssa",
      "--speculative-execution",
      "--loop-distribute",
      "--deadargelim",
      "--indvars",
      "--early-cse-memssa",
      "--coro-split",
      "--infer-address-spaces",
      "--lower-constant-intrinsics",
      "--inject-tli-mappings",
      "--ipsccp",
      "--loop-unroll-and-jam",
      "--scalarizer",
      "--jump-threading",
      "--always-inline",
      "--strip-nondebug",
      "--inferattrs",
      "--argpromotion",
      "--add-discriminators",
      "--constmerge",
      "--prune-eh",
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--guard-widening",
      "--mergeicmps",
      "--dse",
      "--forceattrs",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}