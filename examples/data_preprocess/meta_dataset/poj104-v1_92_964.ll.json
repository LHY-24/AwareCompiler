{
  "program_id": "poj104-v1_92_964.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 34,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 4,
    "oneSuccessor": 33,
    "twoPred": 12,
    "twoPredOneSuc": 2,
    "twoEach": 10,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 51,
    "BeginPhi": 0,
    "BranchCount": 47,
    "returnInt": 5,
    "CriticalCount": 4,
    "NumEdges": 61,
    "const32Bit": 49,
    "const64Bit": 39,
    "numConstZeroes": 22,
    "numConstOnes": 31,
    "UncondBranches": 33,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 48,
    "NumBitCastInst": 24,
    "NumBrInst": 47,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 67,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 51,
    "TotalInsts": 289,
    "TotalMemInst": 169,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 121
  },
  "baseline_oz_instcount": 149,
  "knowledge_base_entry": [
    "--prune-eh",
    "--simplifycfg",
    "--mem2reg",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--bdce",
    "--simplifycfg",
    "--dce",
    "--dse",
    "--mem2reg",
    "--slp-vectorizer",
    "--instsimplify",
    "--simplifycfg",
    "--sccp",
    "--newgvn",
    "--simplifycfg",
    "--sccp",
    "--dce",
    "--dse",
    "--mem2reg",
    "--slp-vectorizer",
    "--instsimplify",
    "--slp-vectorizer",
    "--simplifycfg",
    "--gvn-hoist",
    "--newgvn",
    "--simplifycfg",
    "--sroa",
    "--instcombine",
    "--simplifycfg",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--loop-instsimplify",
          "--constprop",
          "--lower-matrix-intrinsics",
          "--loop-unroll-and-jam",
          "--inferattrs",
          "--scalarizer",
          "--mergeicmps",
          "--coro-elide",
          "--inject-tli-mappings",
          "--loop-unroll",
          "--slp-vectorizer",
          "--loop-predication",
          "--strip",
          "--reg2mem",
          "--add-discriminators",
          "--speculative-execution",
          "--loop-versioning",
          "--simplifycfg",
          "--mem2reg",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--loop-instsimplify",
      "--constprop",
      "--lower-matrix-intrinsics",
      "--loop-unroll-and-jam",
      "--inferattrs",
      "--scalarizer",
      "--mergeicmps",
      "--coro-elide",
      "--inject-tli-mappings",
      "--loop-unroll",
      "--slp-vectorizer",
      "--loop-predication",
      "--strip",
      "--reg2mem",
      "--add-discriminators",
      "--speculative-execution",
      "--loop-versioning",
      "--simplifycfg",
      "--mem2reg",
      "--early-cse"
    ],
    "performance_vs_Oz": "+5.4%"
  }
}