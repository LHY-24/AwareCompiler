{
  "program_id": "github-v0_7955.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 30,
    "const64Bit": 35,
    "numConstZeroes": 36,
    "numConstOnes": 23,
    "UncondBranches": 11,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 4,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 21,
    "TotalInsts": 160,
    "TotalMemInst": 97,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 72
  },
  "baseline_oz_instcount": 160,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--aggressive-instcombine",
    "--prune-eh",
    "--aggressive-instcombine",
    "--newgvn",
    "--instcombine",
    "--licm",
    "--elim-avail-extern",
    "--bdce",
    "--simplifycfg",
    "--loop-deletion",
    "--mem2reg",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--lower-matrix-intrinsics",
          "--dse",
          "--load-store-vectorizer",
          "--hotcoldsplit",
          "--globalsplit",
          "--lowerinvoke",
          "--scalarizer",
          "--guard-widening",
          "--infer-address-spaces",
          "--die",
          "--aggressive-instcombine",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--lower-matrix-intrinsics",
      "--dse",
      "--load-store-vectorizer",
      "--hotcoldsplit",
      "--globalsplit",
      "--lowerinvoke",
      "--scalarizer",
      "--guard-widening",
      "--infer-address-spaces",
      "--die",
      "--aggressive-instcombine",
      "--instcombine"
    ],
    "performance_vs_Oz": "+6.2%"
  }
}