{
  "program_id": "linux-v0_12854.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 1,
    "oneSuccessor": 14,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 9,
    "CriticalCount": 0,
    "NumEdges": 24,
    "const32Bit": 213,
    "const64Bit": 30,
    "numConstZeroes": 72,
    "numConstOnes": 58,
    "UncondBranches": 14,
    "binaryConstArg": 50,
    "NumAShrInst": 0,
    "NumAddInst": 22,
    "NumAllocaInst": 44,
    "NumAndInst": 0,
    "BlockMid": 10,
    "BlockLow": 20,
    "NumBitCastInst": 4,
    "NumBrInst": 19,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 95,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 190,
    "NumMulInst": 21,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 18,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 83,
    "NumSubInst": 1,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 51,
    "TotalBlocks": 30,
    "TotalInsts": 638,
    "TotalMemInst": 461,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 317
  },
  "baseline_oz_instcount": 638,
  "knowledge_base_entry": [
    "--irce",
    "--jump-threading",
    "--dse",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--instcombine",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--instsimplify",
    "--dse",
    "--simplifycfg",
    "--loop-instsimplify",
    "--mergefunc",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--lower-matrix-intrinsics",
          "--irce",
          "--early-cse-memssa",
          "--lower-expect",
          "--argpromotion",
          "--adce",
          "--aggressive-instcombine",
          "--correlated-propagation",
          "--sink",
          "--div-rem-pairs",
          "--licm",
          "--instnamer",
          "--strip",
          "--lower-guard-intrinsic",
          "--loop-fusion",
          "--coro-early",
          "--always-inline",
          "--globalsplit",
          "--canonicalize-aliases",
          "--partially-inline-libcalls",
          "--separate-const-offset-from-gep",
          "--forceattrs",
          "--sccp",
          "--loop-interchange",
          "--loweratomic",
          "--coro-cleanup",
          "--break-crit-edges"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--lower-matrix-intrinsics",
      "--irce",
      "--early-cse-memssa",
      "--lower-expect",
      "--argpromotion",
      "--adce",
      "--aggressive-instcombine",
      "--correlated-propagation",
      "--sink",
      "--div-rem-pairs",
      "--licm",
      "--instnamer",
      "--strip",
      "--lower-guard-intrinsic",
      "--loop-fusion",
      "--coro-early",
      "--always-inline",
      "--globalsplit",
      "--canonicalize-aliases",
      "--partially-inline-libcalls",
      "--separate-const-offset-from-gep",
      "--forceattrs",
      "--sccp",
      "--loop-interchange",
      "--loweratomic",
      "--coro-cleanup",
      "--break-crit-edges"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}