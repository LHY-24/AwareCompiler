{
  "program_id": "blas-v0_189.ll",
  "autophase_features": {
    "BBNumArgsHi": 6,
    "BBNumArgsLo": 1,
    "onePred": 19,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 9,
    "oneSuccessor": 12,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 15,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 5,
    "BBNoPhi": 21,
    "BeginPhi": 7,
    "BranchCount": 27,
    "returnInt": 0,
    "CriticalCount": 11,
    "NumEdges": 42,
    "const32Bit": 0,
    "const64Bit": 8,
    "numConstZeroes": 0,
    "numConstOnes": 2,
    "UncondBranches": 12,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 6,
    "BlockMid": 3,
    "BlockLow": 25,
    "NumBitCastInst": 17,
    "NumBrInst": 27,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 4,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 34,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 17,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 28,
    "TotalInsts": 199,
    "TotalMemInst": 43,
    "TotalFuncs": 2,
    "ArgsPhi": 95,
    "testUnary": 21
  },
  "baseline_oz_instcount": 197,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--load-store-vectorizer",
    "--indvars",
    "--loop-fusion",
    "--early-cse",
    "--mem2reg",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--adce",
    "--early-cse",
    "--simplifycfg",
    "--instcombine",
    "--die",
    "--correlated-propagation",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--mldst-motion",
    "--simplifycfg",
    "--prune-eh",
    "--simplifycfg",
    "--globalopt",
    "--flattencfg",
    "--mem2reg",
    "--flattencfg",
    "--load-store-vectorizer",
    "--lower-expect",
    "--die",
    "--gvn",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--lcssa",
          "--loop-simplifycfg",
          "--pgo-memop-opt",
          "--load-store-vectorizer",
          "--memcpyopt",
          "--lowerswitch",
          "--indvars",
          "--instnamer",
          "--simple-loop-unswitch",
          "--newgvn",
          "--name-anon-globals",
          "--lower-expect",
          "--lower-widenable-condition",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--lcssa",
      "--loop-simplifycfg",
      "--pgo-memop-opt",
      "--load-store-vectorizer",
      "--memcpyopt",
      "--lowerswitch",
      "--indvars",
      "--instnamer",
      "--simple-loop-unswitch",
      "--newgvn",
      "--name-anon-globals",
      "--lower-expect",
      "--lower-widenable-condition",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}