{
  "program_id": "github-v0_36091.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 67,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 21,
    "oneSuccessor": 61,
    "twoPred": 33,
    "twoPredOneSuc": 13,
    "twoEach": 20,
    "twoSuccessor": 42,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 105,
    "BeginPhi": 0,
    "BranchCount": 103,
    "returnInt": 0,
    "CriticalCount": 29,
    "NumEdges": 148,
    "const32Bit": 140,
    "const64Bit": 18,
    "numConstZeroes": 66,
    "numConstOnes": 72,
    "UncondBranches": 61,
    "binaryConstArg": 31,
    "NumAShrInst": 0,
    "NumAddInst": 20,
    "NumAllocaInst": 28,
    "NumAndInst": 7,
    "BlockMid": 8,
    "BlockLow": 97,
    "NumBitCastInst": 4,
    "NumBrInst": 103,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 42,
    "NumLShrInst": 4,
    "NumLoadInst": 196,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 10,
    "NumStoreInst": 103,
    "NumSubInst": 13,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 42,
    "TotalBlocks": 105,
    "TotalInsts": 636,
    "TotalMemInst": 377,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 281
  },
  "baseline_oz_instcount": 639,
  "knowledge_base_entry": [
    "--adce",
    "--gvn-hoist",
    "--globalopt",
    "--gvn",
    "--simplifycfg",
    "--elim-avail-extern",
    "--dce",
    "--aggressive-instcombine",
    "--jump-threading",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--speculative-execution",
          "--inject-tli-mappings",
          "--loop-data-prefetch",
          "--loop-predication",
          "--mem2reg",
          "--rewrite-statepoints-for-gc",
          "--guard-widening",
          "--inferattrs",
          "--newgvn",
          "--called-value-propagation",
          "--lower-widenable-condition",
          "--forceattrs",
          "--loweratomic",
          "--nary-reassociate",
          "--mergereturn",
          "--gvn-hoist",
          "--alignment-from-assumptions",
          "--cross-dso-cfi",
          "--loop-versioning",
          "--loop-deletion",
          "--loop-idiom",
          "--loop-unroll-and-jam",
          "--aggressive-instcombine",
          "--argpromotion",
          "--functionattrs",
          "--inline",
          "--attributor"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--speculative-execution",
      "--inject-tli-mappings",
      "--loop-data-prefetch",
      "--loop-predication",
      "--mem2reg",
      "--rewrite-statepoints-for-gc",
      "--guard-widening",
      "--inferattrs",
      "--newgvn",
      "--called-value-propagation",
      "--lower-widenable-condition",
      "--forceattrs",
      "--loweratomic",
      "--nary-reassociate",
      "--mergereturn",
      "--gvn-hoist",
      "--alignment-from-assumptions",
      "--cross-dso-cfi",
      "--loop-versioning",
      "--loop-deletion",
      "--loop-idiom",
      "--loop-unroll-and-jam",
      "--aggressive-instcombine",
      "--argpromotion",
      "--functionattrs",
      "--inline",
      "--attributor"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}