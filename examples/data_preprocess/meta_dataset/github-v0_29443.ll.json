{
  "program_id": "github-v0_29443.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 60,
    "const64Bit": 78,
    "numConstZeroes": 76,
    "numConstOnes": 29,
    "UncondBranches": 13,
    "binaryConstArg": 44,
    "NumAShrInst": 9,
    "NumAddInst": 4,
    "NumAllocaInst": 11,
    "NumAndInst": 16,
    "BlockMid": 7,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 45,
    "NumMulInst": 0,
    "NumOrInst": 16,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 10,
    "NumStoreInst": 21,
    "NumSubInst": 4,
    "NumTruncInst": 17,
    "NumXorInst": 1,
    "NumZExtInst": 31,
    "TotalBlocks": 24,
    "TotalInsts": 270,
    "TotalMemInst": 122,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 113
  },
  "baseline_oz_instcount": 270,
  "knowledge_base_entry": [
    "--slsr",
    "--indvars",
    "--loop-fusion",
    "--newgvn",
    "--prune-eh",
    "--aggressive-instcombine",
    "--flattencfg",
    "--globalopt",
    "--loop-deletion",
    "--newgvn",
    "--loop-rotate",
    "--newgvn",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--coro-cleanup",
          "--mem2reg",
          "--lower-guard-intrinsic",
          "--callsite-splitting",
          "--loop-idiom",
          "--constmerge",
          "--reassociate",
          "--aggressive-instcombine",
          "--sroa",
          "--loop-unswitch",
          "--lower-widenable-condition",
          "--float2int",
          "--partially-inline-libcalls",
          "--barrier",
          "--separate-const-offset-from-gep",
          "--speculative-execution",
          "--dce",
          "--mldst-motion",
          "--libcalls-shrinkwrap",
          "--newgvn",
          "--consthoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--coro-cleanup",
      "--mem2reg",
      "--lower-guard-intrinsic",
      "--callsite-splitting",
      "--loop-idiom",
      "--constmerge",
      "--reassociate",
      "--aggressive-instcombine",
      "--sroa",
      "--loop-unswitch",
      "--lower-widenable-condition",
      "--float2int",
      "--partially-inline-libcalls",
      "--barrier",
      "--separate-const-offset-from-gep",
      "--speculative-execution",
      "--dce",
      "--mldst-motion",
      "--libcalls-shrinkwrap",
      "--newgvn",
      "--consthoist"
    ],
    "performance_vs_Oz": "+5.9%"
  }
}