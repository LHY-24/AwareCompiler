{
  "program_id": "github-v0_23192.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 0,
    "oneSuccessor": 6,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 12,
    "const32Bit": 93,
    "const64Bit": 2,
    "numConstZeroes": 26,
    "numConstOnes": 32,
    "UncondBranches": 6,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 27,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 22,
    "NumBitCastInst": 2,
    "NumBrInst": 8,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 57,
    "NumMulInst": 0,
    "NumOrInst": 13,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 51,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 23,
    "TotalInsts": 216,
    "TotalMemInst": 163,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 95
  },
  "baseline_oz_instcount": 217,
  "knowledge_base_entry": [
    "--licm",
    "--inline",
    "--prune-eh",
    "--simplifycfg",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--simplifycfg",
    "--instsimplify",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--lower-expect",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--adce",
    "--sroa",
    "--loop-reroll",
    "--instsimplify",
    "--mergefunc",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--coro-elide",
          "--lcssa",
          "--loop-unroll",
          "--separate-const-offset-from-gep",
          "--mergereturn",
          "--partially-inline-libcalls",
          "--callsite-splitting",
          "--insert-gcov-profiling",
          "--indvars",
          "--coro-cleanup",
          "--always-inline",
          "--globalsplit",
          "--early-cse-memssa",
          "--functionattrs",
          "--coro-split",
          "--mergeicmps",
          "--name-anon-globals",
          "--rpo-functionattrs",
          "--redundant-dbg-inst-elim",
          "--canonicalize-aliases",
          "--hotcoldsplit",
          "--gvn-hoist",
          "--newgvn",
          "--lower-expect",
          "--div-rem-pairs",
          "--strip-dead-prototypes",
          "--loop-data-prefetch",
          "--tailcallelim",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--coro-elide",
      "--lcssa",
      "--loop-unroll",
      "--separate-const-offset-from-gep",
      "--mergereturn",
      "--partially-inline-libcalls",
      "--callsite-splitting",
      "--insert-gcov-profiling",
      "--indvars",
      "--coro-cleanup",
      "--always-inline",
      "--globalsplit",
      "--early-cse-memssa",
      "--functionattrs",
      "--coro-split",
      "--mergeicmps",
      "--name-anon-globals",
      "--rpo-functionattrs",
      "--redundant-dbg-inst-elim",
      "--canonicalize-aliases",
      "--hotcoldsplit",
      "--gvn-hoist",
      "--newgvn",
      "--lower-expect",
      "--div-rem-pairs",
      "--strip-dead-prototypes",
      "--loop-data-prefetch",
      "--tailcallelim",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}