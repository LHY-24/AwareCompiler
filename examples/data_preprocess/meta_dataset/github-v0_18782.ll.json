{
  "program_id": "github-v0_18782.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 38,
    "const64Bit": 30,
    "numConstZeroes": 36,
    "numConstOnes": 23,
    "UncondBranches": 13,
    "binaryConstArg": 12,
    "NumAShrInst": 1,
    "NumAddInst": 8,
    "NumAllocaInst": 14,
    "NumAndInst": 1,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 4,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 37,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 1,
    "NumZExtInst": 19,
    "TotalBlocks": 24,
    "TotalInsts": 180,
    "TotalMemInst": 102,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 82
  },
  "baseline_oz_instcount": 180,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--instsimplify",
    "--instcombine",
    "--loop-reroll",
    "--early-cse",
    "--dce",
    "--lower-constant-intrinsics",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--bdce",
          "--partially-inline-libcalls",
          "--coro-split",
          "--rpo-functionattrs",
          "--instnamer",
          "--loweratomic",
          "--rewrite-statepoints-for-gc",
          "--simple-loop-unswitch",
          "--loop-sink",
          "--loop-unroll",
          "--loop-interchange",
          "--coro-cleanup",
          "--attributor",
          "--loop-unroll-and-jam",
          "--sink",
          "--aggressive-instcombine",
          "--lower-widenable-condition",
          "--ipsccp",
          "--early-cse",
          "--guard-widening",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--bdce",
      "--partially-inline-libcalls",
      "--coro-split",
      "--rpo-functionattrs",
      "--instnamer",
      "--loweratomic",
      "--rewrite-statepoints-for-gc",
      "--simple-loop-unswitch",
      "--loop-sink",
      "--loop-unroll",
      "--loop-interchange",
      "--coro-cleanup",
      "--attributor",
      "--loop-unroll-and-jam",
      "--sink",
      "--aggressive-instcombine",
      "--lower-widenable-condition",
      "--ipsccp",
      "--early-cse",
      "--guard-widening",
      "--dse"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}