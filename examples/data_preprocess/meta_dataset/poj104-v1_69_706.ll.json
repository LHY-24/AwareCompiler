{
  "program_id": "poj104-v1_69_706.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 46,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 6,
    "oneSuccessor": 43,
    "twoPred": 16,
    "twoPredOneSuc": 4,
    "twoEach": 9,
    "twoSuccessor": 19,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 87,
    "BeginPhi": 0,
    "BranchCount": 62,
    "returnInt": 22,
    "CriticalCount": 7,
    "NumEdges": 81,
    "const32Bit": 100,
    "const64Bit": 91,
    "numConstZeroes": 58,
    "numConstOnes": 66,
    "UncondBranches": 43,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 49,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 79,
    "NumBitCastInst": 65,
    "NumBrInst": 62,
    "NumCallInst": 84,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 121,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 24,
    "NumSExtInst": 18,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 66,
    "NumSubInst": 8,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 87,
    "TotalInsts": 591,
    "TotalMemInst": 368,
    "TotalFuncs": 40,
    "ArgsPhi": 0,
    "testUnary": 265
  },
  "baseline_oz_instcount": 195,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--slsr",
    "--simplifycfg",
    "--lower-expect",
    "--ipsccp",
    "--elim-avail-extern",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--slp-vectorizer",
    "--newgvn",
    "--ipsccp",
    "--inline",
    "--instcombine",
    "--loop-rotate",
    "--lower-expect",
    "--simplifycfg",
    "--dce",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--globalopt",
    "--jump-threading",
    "--sroa",
    "--adce",
    "--correlated-propagation",
    "--globalopt",
    "--jump-threading",
    "--prune-eh",
    "--aggressive-instcombine",
    "--adce",
    "--elim-avail-extern",
    "--loop-deletion",
    "--jump-threading",
    "--gvn",
    "--nary-reassociate",
    "--inline",
    "--jump-threading",
    "--simplifycfg",
    "--inline",
    "--instcombine",
    "--sccp",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--mem2reg",
    "--bdce",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--inline",
    "--bdce",
    "--simplifycfg",
    "--mem2reg",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn",
          "--lower-constant-intrinsics",
          "--slsr",
          "--sccp",
          "--mldst-motion",
          "--strip",
          "--indvars",
          "--loweratomic",
          "--float2int",
          "--coro-elide",
          "--loop-guard-widening",
          "--loop-unroll-and-jam",
          "--break-crit-edges",
          "--bdce",
          "--strip-dead-prototypes",
          "--loop-data-prefetch",
          "--instcombine",
          "--name-anon-globals",
          "--lowerinvoke",
          "--globaldce",
          "--rpo-functionattrs",
          "--slp-vectorizer",
          "--inject-tli-mappings",
          "--add-discriminators",
          "--elim-avail-extern",
          "--mergefunc",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+19.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn",
      "--lower-constant-intrinsics",
      "--slsr",
      "--sccp",
      "--mldst-motion",
      "--strip",
      "--indvars",
      "--loweratomic",
      "--float2int",
      "--coro-elide",
      "--loop-guard-widening",
      "--loop-unroll-and-jam",
      "--break-crit-edges",
      "--bdce",
      "--strip-dead-prototypes",
      "--loop-data-prefetch",
      "--instcombine",
      "--name-anon-globals",
      "--lowerinvoke",
      "--globaldce",
      "--rpo-functionattrs",
      "--slp-vectorizer",
      "--inject-tli-mappings",
      "--add-discriminators",
      "--elim-avail-extern",
      "--mergefunc",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+19.0%"
  }
}