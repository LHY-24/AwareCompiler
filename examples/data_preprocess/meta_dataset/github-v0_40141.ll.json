{
  "program_id": "github-v0_40141.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 1,
    "oneSuccessor": 17,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 5,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 1,
    "CriticalCount": 1,
    "NumEdges": 31,
    "const32Bit": 24,
    "const64Bit": 7,
    "numConstZeroes": 13,
    "numConstOnes": 18,
    "UncondBranches": 17,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 30,
    "NumBitCastInst": 0,
    "NumBrInst": 24,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 38,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 30,
    "TotalInsts": 137,
    "TotalMemInst": 84,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 56
  },
  "baseline_oz_instcount": 138,
  "knowledge_base_entry": [
    "--mergereturn",
    "--simplifycfg",
    "--sroa",
    "--lower-expect",
    "--ipsccp",
    "--instsimplify",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--inject-tli-mappings",
          "--strip-nondebug",
          "--insert-gcov-profiling",
          "--globaldce",
          "--tailcallelim",
          "--name-anon-globals",
          "--aggressive-instcombine",
          "--infer-address-spaces",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--inject-tli-mappings",
      "--strip-nondebug",
      "--insert-gcov-profiling",
      "--globaldce",
      "--tailcallelim",
      "--name-anon-globals",
      "--aggressive-instcombine",
      "--infer-address-spaces",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}