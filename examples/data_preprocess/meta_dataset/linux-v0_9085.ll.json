{
  "program_id": "linux-v0_9085.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 73,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 31,
    "oneSuccessor": 59,
    "twoPred": 25,
    "twoPredOneSuc": 11,
    "twoEach": 8,
    "twoSuccessor": 49,
    "morePreds": 10,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 119,
    "BeginPhi": 3,
    "BranchCount": 108,
    "returnInt": 14,
    "CriticalCount": 29,
    "NumEdges": 157,
    "const32Bit": 219,
    "const64Bit": 23,
    "numConstZeroes": 69,
    "numConstOnes": 107,
    "UncondBranches": 59,
    "binaryConstArg": 43,
    "NumAShrInst": 2,
    "NumAddInst": 11,
    "NumAllocaInst": 71,
    "NumAndInst": 8,
    "BlockMid": 10,
    "BlockLow": 112,
    "NumBitCastInst": 3,
    "NumBrInst": 108,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 61,
    "NumICmpInst": 49,
    "NumLShrInst": 4,
    "NumLoadInst": 229,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 14,
    "NumSExtInst": 21,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 116,
    "NumSubInst": 14,
    "NumTruncInst": 7,
    "NumXorInst": 2,
    "NumZExtInst": 15,
    "TotalBlocks": 122,
    "TotalInsts": 794,
    "TotalMemInst": 525,
    "TotalFuncs": 27,
    "ArgsPhi": 6,
    "testUnary": 352
  },
  "baseline_oz_instcount": 794,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--mergefunc",
    "--flattencfg",
    "--elim-avail-extern",
    "--instcombine",
    "--gvn",
    "--gvn-hoist",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-split",
          "--guard-widening",
          "--speculative-execution",
          "--add-discriminators",
          "--rewrite-statepoints-for-gc",
          "--strip-nondebug",
          "--lower-constant-intrinsics",
          "--consthoist",
          "--loop-data-prefetch",
          "--loop-unswitch",
          "-loop-reduce",
          "--load-store-vectorizer",
          "--correlated-propagation",
          "--loop-unroll",
          "--instcombine",
          "--coro-cleanup",
          "--loop-interchange",
          "--simple-loop-unswitch",
          "--infer-address-spaces",
          "--gvn-hoist",
          "--aggressive-instcombine",
          "--argpromotion",
          "--licm",
          "--loop-guard-widening",
          "--post-inline-ee-instrument",
          "--loop-idiom",
          "--attributor"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-split",
      "--guard-widening",
      "--speculative-execution",
      "--add-discriminators",
      "--rewrite-statepoints-for-gc",
      "--strip-nondebug",
      "--lower-constant-intrinsics",
      "--consthoist",
      "--loop-data-prefetch",
      "--loop-unswitch",
      "-loop-reduce",
      "--load-store-vectorizer",
      "--correlated-propagation",
      "--loop-unroll",
      "--instcombine",
      "--coro-cleanup",
      "--loop-interchange",
      "--simple-loop-unswitch",
      "--infer-address-spaces",
      "--gvn-hoist",
      "--aggressive-instcombine",
      "--argpromotion",
      "--licm",
      "--loop-guard-widening",
      "--post-inline-ee-instrument",
      "--loop-idiom",
      "--attributor"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}