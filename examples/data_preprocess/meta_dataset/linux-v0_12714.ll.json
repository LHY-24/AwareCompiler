{
  "program_id": "linux-v0_12714.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 14,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 28,
    "BeginPhi": 2,
    "BranchCount": 21,
    "returnInt": 7,
    "CriticalCount": 4,
    "NumEdges": 29,
    "const32Bit": 78,
    "const64Bit": 13,
    "numConstZeroes": 25,
    "numConstOnes": 44,
    "UncondBranches": 13,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 35,
    "NumAndInst": 7,
    "BlockMid": 5,
    "BlockLow": 25,
    "NumBitCastInst": 7,
    "NumBrInst": 21,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 9,
    "NumLShrInst": 3,
    "NumLoadInst": 65,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 9,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 50,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 9,
    "TotalBlocks": 30,
    "TotalInsts": 269,
    "TotalMemInst": 178,
    "TotalFuncs": 13,
    "ArgsPhi": 5,
    "testUnary": 126
  },
  "baseline_oz_instcount": 269,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--bdce",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--reassociate",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--prune-eh",
    "--aggressive-instcombine",
    "--bdce",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--early-cse",
    "--memcpyopt",
    "--newgvn",
    "--dce",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "-loop-reduce",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--lowerswitch",
          "--loop-unswitch",
          "--lower-expect",
          "--deadargelim",
          "--post-inline-ee-instrument",
          "--libcalls-shrinkwrap",
          "--slsr",
          "--simple-loop-unswitch",
          "--loop-load-elim",
          "--loop-fusion",
          "--globaldce",
          "--sccp",
          "--alignment-from-assumptions",
          "--early-cse-memssa",
          "--name-anon-globals",
          "--strip-debug-declare",
          "--rpo-functionattrs",
          "--inject-tli-mappings",
          "--simplifycfg",
          "--coro-early",
          "--aggressive-instcombine",
          "--die",
          "--mem2reg",
          "--nary-reassociate",
          "--globalopt",
          "--slp-vectorizer",
          "--loop-rotate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--lowerswitch",
      "--loop-unswitch",
      "--lower-expect",
      "--deadargelim",
      "--post-inline-ee-instrument",
      "--libcalls-shrinkwrap",
      "--slsr",
      "--simple-loop-unswitch",
      "--loop-load-elim",
      "--loop-fusion",
      "--globaldce",
      "--sccp",
      "--alignment-from-assumptions",
      "--early-cse-memssa",
      "--name-anon-globals",
      "--strip-debug-declare",
      "--rpo-functionattrs",
      "--inject-tli-mappings",
      "--simplifycfg",
      "--coro-early",
      "--aggressive-instcombine",
      "--die",
      "--mem2reg",
      "--nary-reassociate",
      "--globalopt",
      "--slp-vectorizer",
      "--loop-rotate"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}