{
  "program_id": "linux-v0_10363.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 4,
    "oneSuccessor": 14,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 4,
    "CriticalCount": 4,
    "NumEdges": 30,
    "const32Bit": 68,
    "const64Bit": 4,
    "numConstZeroes": 27,
    "numConstOnes": 32,
    "UncondBranches": 14,
    "binaryConstArg": 8,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 26,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 21,
    "NumBitCastInst": 0,
    "NumBrInst": 22,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 33,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 8,
    "TotalBlocks": 26,
    "TotalInsts": 180,
    "TotalMemInst": 124,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 83
  },
  "baseline_oz_instcount": 181,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--early-cse",
    "--bdce",
    "--ipsccp",
    "--sroa",
    "--dse",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--loweratomic",
          "--slp-vectorizer",
          "--elim-avail-extern",
          "--aggressive-instcombine",
          "--strip",
          "--always-inline",
          "--flattencfg",
          "--pgo-memop-opt",
          "--separate-const-offset-from-gep",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--loweratomic",
      "--slp-vectorizer",
      "--elim-avail-extern",
      "--aggressive-instcombine",
      "--strip",
      "--always-inline",
      "--flattencfg",
      "--pgo-memop-opt",
      "--separate-const-offset-from-gep",
      "--newgvn"
    ],
    "performance_vs_Oz": "+2.8%"
  }
}