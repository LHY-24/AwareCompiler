{
  "program_id": "poj104-v1_69_421.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 28,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 6,
    "oneSuccessor": 27,
    "twoPred": 14,
    "twoPredOneSuc": 4,
    "twoEach": 8,
    "twoSuccessor": 16,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 2,
    "BranchCount": 43,
    "returnInt": 18,
    "CriticalCount": 9,
    "NumEdges": 59,
    "const32Bit": 86,
    "const64Bit": 68,
    "numConstZeroes": 46,
    "numConstOnes": 48,
    "UncondBranches": 27,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 34,
    "NumAndInst": 0,
    "BlockMid": 10,
    "BlockLow": 50,
    "NumBitCastInst": 54,
    "NumBrInst": 43,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 102,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 17,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 56,
    "NumSubInst": 5,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 60,
    "TotalInsts": 479,
    "TotalMemInst": 288,
    "TotalFuncs": 28,
    "ArgsPhi": 4,
    "testUnary": 217
  },
  "baseline_oz_instcount": 208,
  "knowledge_base_entry": [
    "--slsr",
    "--gvn",
    "--jump-threading",
    "--inline",
    "--sroa",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--jump-threading",
    "--lower-expect",
    "--reassociate",
    "--early-cse-memssa",
    "--reassociate",
    "--correlated-propagation",
    "--lower-expect",
    "--loop-simplifycfg",
    "--instcombine",
    "--inline",
    "--dce",
    "--die",
    "--early-cse-memssa",
    "--loop-reroll",
    "--mergefunc",
    "--reassociate",
    "--die",
    "--early-cse",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--lower-expect",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--correlated-propagation",
    "--mergefunc",
    "--simplifycfg",
    "--bdce",
    "--newgvn",
    "--lower-expect",
    "--gvn",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--instcombine",
    "--inline",
    "--jump-threading",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--globalopt",
          "--loop-versioning-licm",
          "--loop-interchange",
          "--gvn-hoist",
          "--lower-constant-intrinsics",
          "--cross-dso-cfi",
          "--loop-guard-widening",
          "--globaldce",
          "-loop-reduce",
          "--partially-inline-libcalls",
          "--newgvn",
          "--loweratomic",
          "--lower-guard-intrinsic",
          "--instcombine",
          "--constprop",
          "--strip-nondebug",
          "--licm",
          "--always-inline",
          "--dce",
          "--globalsplit",
          "--coro-elide",
          "--libcalls-shrinkwrap",
          "--prune-eh",
          "--pgo-memop-opt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--globalopt",
      "--loop-versioning-licm",
      "--loop-interchange",
      "--gvn-hoist",
      "--lower-constant-intrinsics",
      "--cross-dso-cfi",
      "--loop-guard-widening",
      "--globaldce",
      "-loop-reduce",
      "--partially-inline-libcalls",
      "--newgvn",
      "--loweratomic",
      "--lower-guard-intrinsic",
      "--instcombine",
      "--constprop",
      "--strip-nondebug",
      "--licm",
      "--always-inline",
      "--dce",
      "--globalsplit",
      "--coro-elide",
      "--libcalls-shrinkwrap",
      "--prune-eh",
      "--pgo-memop-opt"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}