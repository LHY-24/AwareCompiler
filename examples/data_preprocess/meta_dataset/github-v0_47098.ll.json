{
  "program_id": "github-v0_47098.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 28,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 3,
    "oneSuccessor": 26,
    "twoPred": 13,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 17,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 54,
    "BeginPhi": 1,
    "BranchCount": 43,
    "returnInt": 20,
    "CriticalCount": 9,
    "NumEdges": 60,
    "const32Bit": 171,
    "const64Bit": 6,
    "numConstZeroes": 82,
    "numConstOnes": 74,
    "UncondBranches": 26,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 40,
    "NumAndInst": 0,
    "BlockMid": 14,
    "BlockLow": 41,
    "NumBitCastInst": 5,
    "NumBrInst": 43,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 66,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 180,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 12,
    "NumSExtInst": 20,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 65,
    "NumSubInst": 9,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 55,
    "TotalInsts": 508,
    "TotalMemInst": 388,
    "TotalFuncs": 16,
    "ArgsPhi": 2,
    "testUnary": 245
  },
  "baseline_oz_instcount": 509,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--early-cse-memssa",
    "--mergefunc",
    "--mergefunc",
    "--dce",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--ipsccp",
    "--flattencfg",
    "--sroa",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--nary-reassociate",
          "--libcalls-shrinkwrap",
          "--jump-threading",
          "--load-store-vectorizer",
          "--mergeicmps",
          "--inject-tli-mappings",
          "--strip-nondebug",
          "--mergereturn",
          "--instsimplify",
          "--consthoist",
          "--tailcallelim",
          "--guard-widening",
          "--infer-address-spaces",
          "--add-discriminators",
          "--early-cse",
          "--constprop",
          "--slsr",
          "--instnamer",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--nary-reassociate",
      "--libcalls-shrinkwrap",
      "--jump-threading",
      "--load-store-vectorizer",
      "--mergeicmps",
      "--inject-tli-mappings",
      "--strip-nondebug",
      "--mergereturn",
      "--instsimplify",
      "--consthoist",
      "--tailcallelim",
      "--guard-widening",
      "--infer-address-spaces",
      "--add-discriminators",
      "--early-cse",
      "--constprop",
      "--slsr",
      "--instnamer",
      "--always-inline"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}