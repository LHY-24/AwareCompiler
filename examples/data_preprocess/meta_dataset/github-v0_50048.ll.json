{
  "program_id": "github-v0_50048.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 3,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 5,
    "BeginPhi": 3,
    "BranchCount": 7,
    "returnInt": 0,
    "CriticalCount": 5,
    "NumEdges": 11,
    "const32Bit": 16,
    "const64Bit": 8,
    "numConstZeroes": 9,
    "numConstOnes": 4,
    "UncondBranches": 3,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 1,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 6,
    "NumBitCastInst": 1,
    "NumBrInst": 7,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 8,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 3,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 6,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 8,
    "TotalInsts": 76,
    "TotalMemInst": 31,
    "TotalFuncs": 3,
    "ArgsPhi": 6,
    "testUnary": 22
  },
  "baseline_oz_instcount": 74,
  "knowledge_base_entry": [
    "--loop-deletion",
    "--early-cse",
    "--loop-reroll",
    "--indvars",
    "--gvn",
    "--instcombine",
    "--die",
    "--newgvn",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "--loop-distribute",
          "--loop-reroll",
          "--strip",
          "--infer-address-spaces",
          "--float2int",
          "--lowerswitch",
          "--separate-const-offset-from-gep",
          "--loop-load-elim",
          "--inject-tli-mappings",
          "--lower-constant-intrinsics",
          "--consthoist",
          "--instcombine",
          "--loop-guard-widening",
          "--gvn-hoist",
          "--loop-vectorize",
          "--slp-vectorizer",
          "--simplifycfg",
          "--correlated-propagation",
          "--lower-expect",
          "--lowerinvoke",
          "--rpo-functionattrs",
          "--functionattrs",
          "--strip-nondebug"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+47.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "--loop-distribute",
      "--loop-reroll",
      "--strip",
      "--infer-address-spaces",
      "--float2int",
      "--lowerswitch",
      "--separate-const-offset-from-gep",
      "--loop-load-elim",
      "--inject-tli-mappings",
      "--lower-constant-intrinsics",
      "--consthoist",
      "--instcombine",
      "--loop-guard-widening",
      "--gvn-hoist",
      "--loop-vectorize",
      "--slp-vectorizer",
      "--simplifycfg",
      "--correlated-propagation",
      "--lower-expect",
      "--lowerinvoke",
      "--rpo-functionattrs",
      "--functionattrs",
      "--strip-nondebug"
    ],
    "performance_vs_Oz": "+47.3%"
  }
}