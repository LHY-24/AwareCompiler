{
  "program_id": "linux-v0_10719.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 10,
    "oneSuccessor": 18,
    "twoPred": 12,
    "twoPredOneSuc": 6,
    "twoEach": 3,
    "twoSuccessor": 16,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 40,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 5,
    "CriticalCount": 11,
    "NumEdges": 50,
    "const32Bit": 68,
    "const64Bit": 4,
    "numConstZeroes": 28,
    "numConstOnes": 17,
    "UncondBranches": 18,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 12,
    "NumAndInst": 2,
    "BlockMid": 0,
    "BlockLow": 40,
    "NumBitCastInst": 4,
    "NumBrInst": 33,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 54,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 40,
    "TotalInsts": 189,
    "TotalMemInst": 116,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 80
  },
  "baseline_oz_instcount": 191,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--gvn-hoist",
    "--instsimplify",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--insert-gcov-profiling",
          "--callsite-splitting",
          "--mem2reg",
          "--float2int",
          "--lowerinvoke",
          "--load-store-vectorizer",
          "--lower-expect",
          "--sccp",
          "--early-cse-memssa",
          "--called-value-propagation",
          "--early-cse",
          "--speculative-execution",
          "--deadargelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--insert-gcov-profiling",
      "--callsite-splitting",
      "--mem2reg",
      "--float2int",
      "--lowerinvoke",
      "--load-store-vectorizer",
      "--lower-expect",
      "--sccp",
      "--early-cse-memssa",
      "--called-value-propagation",
      "--early-cse",
      "--speculative-execution",
      "--deadargelim"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}