{
  "program_id": "github-v0_21962.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 0,
    "oneSuccessor": 5,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 6,
    "CriticalCount": 5,
    "NumEdges": 15,
    "const32Bit": 167,
    "const64Bit": 6,
    "numConstZeroes": 97,
    "numConstOnes": 41,
    "UncondBranches": 5,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 32,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 15,
    "NumBitCastInst": 10,
    "NumBrInst": 10,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 88,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 45,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 22,
    "TotalInsts": 288,
    "TotalMemInst": 249,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 130
  },
  "baseline_oz_instcount": 288,
  "knowledge_base_entry": [
    "--loop-interchange",
    "--early-cse",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--licm",
    "--memcpyopt",
    "--mem2reg",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--loop-deletion",
          "--globalopt",
          "--always-inline",
          "--loop-unroll-and-jam",
          "--loop-simplifycfg",
          "--mergefunc",
          "--forceattrs",
          "--loop-distribute",
          "--coro-elide",
          "--called-value-propagation",
          "--pgo-memop-opt",
          "--lower-constant-intrinsics",
          "--post-inline-ee-instrument",
          "--loop-simplify",
          "--reassociate",
          "--loop-interchange",
          "-loop-reduce",
          "--die",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--loop-deletion",
      "--globalopt",
      "--always-inline",
      "--loop-unroll-and-jam",
      "--loop-simplifycfg",
      "--mergefunc",
      "--forceattrs",
      "--loop-distribute",
      "--coro-elide",
      "--called-value-propagation",
      "--pgo-memop-opt",
      "--lower-constant-intrinsics",
      "--post-inline-ee-instrument",
      "--loop-simplify",
      "--reassociate",
      "--loop-interchange",
      "-loop-reduce",
      "--die",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+4.2%"
  }
}