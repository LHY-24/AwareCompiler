{
  "program_id": "linux-v0_13712.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 74,
    "onePredOneSuc": 53,
    "onePredTwoSuc": 20,
    "oneSuccessor": 76,
    "twoPred": 41,
    "twoPredOneSuc": 20,
    "twoEach": 17,
    "twoSuccessor": 38,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 125,
    "BeginPhi": 1,
    "BranchCount": 114,
    "returnInt": 11,
    "CriticalCount": 35,
    "NumEdges": 159,
    "const32Bit": 257,
    "const64Bit": 16,
    "numConstZeroes": 107,
    "numConstOnes": 100,
    "UncondBranches": 76,
    "binaryConstArg": 66,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 54,
    "NumAndInst": 35,
    "BlockMid": 9,
    "BlockLow": 117,
    "NumBitCastInst": 4,
    "NumBrInst": 114,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 51,
    "NumICmpInst": 48,
    "NumLShrInst": 6,
    "NumLoadInst": 181,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 10,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 63,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 22,
    "NumZExtInst": 40,
    "TotalBlocks": 126,
    "TotalInsts": 691,
    "TotalMemInst": 391,
    "TotalFuncs": 34,
    "ArgsPhi": 2,
    "testUnary": 291
  },
  "baseline_oz_instcount": 691,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--instsimplify",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--mem2reg",
    "--globalopt",
    "--loweratomic",
    "--ipsccp",
    "--licm",
    "--load-store-vectorizer",
    "--dce",
    "--correlated-propagation",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--indvars",
          "--inferattrs",
          "--rewrite-statepoints-for-gc",
          "--scalarizer",
          "--coro-cleanup",
          "--div-rem-pairs",
          "--strip-debug-declare",
          "--globalopt",
          "--loweratomic",
          "--forceattrs",
          "--bdce",
          "--dce",
          "--strip",
          "--sancov",
          "--inline",
          "--libcalls-shrinkwrap",
          "--correlated-propagation",
          "--licm",
          "--partial-inliner",
          "--barrier",
          "--lower-guard-intrinsic",
          "--early-cse-memssa",
          "--argpromotion",
          "--instsimplify",
          "--inject-tli-mappings",
          "--loop-interchange",
          "--simple-loop-unswitch",
          "--ipsccp",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--indvars",
      "--inferattrs",
      "--rewrite-statepoints-for-gc",
      "--scalarizer",
      "--coro-cleanup",
      "--div-rem-pairs",
      "--strip-debug-declare",
      "--globalopt",
      "--loweratomic",
      "--forceattrs",
      "--bdce",
      "--dce",
      "--strip",
      "--sancov",
      "--inline",
      "--libcalls-shrinkwrap",
      "--correlated-propagation",
      "--licm",
      "--partial-inliner",
      "--barrier",
      "--lower-guard-intrinsic",
      "--early-cse-memssa",
      "--argpromotion",
      "--instsimplify",
      "--inject-tli-mappings",
      "--loop-interchange",
      "--simple-loop-unswitch",
      "--ipsccp",
      "--newgvn"
    ],
    "performance_vs_Oz": "+4.1%"
  }
}