{
  "program_id": "linux-v0_3628.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 3,
    "oneSuccessor": 21,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 38,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 5,
    "CriticalCount": 3,
    "NumEdges": 40,
    "const32Bit": 106,
    "const64Bit": 3,
    "numConstZeroes": 27,
    "numConstOnes": 77,
    "UncondBranches": 21,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 63,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 33,
    "NumBitCastInst": 18,
    "NumBrInst": 28,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 88,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 67,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 6,
    "NumZExtInst": 4,
    "TotalBlocks": 38,
    "TotalInsts": 335,
    "TotalMemInst": 252,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 184
  },
  "baseline_oz_instcount": 336,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--dce",
    "--mem2reg",
    "--newgvn",
    "--aggressive-instcombine",
    "--lower-expect",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--dce",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--lower-constant-intrinsics",
          "--strip-dead-prototypes",
          "--adce",
          "--loop-interchange",
          "--always-inline",
          "--rpo-functionattrs",
          "--mergereturn",
          "--consthoist",
          "--add-discriminators",
          "--cross-dso-cfi",
          "--mergefunc",
          "--tailcallelim",
          "--lower-widenable-condition",
          "--scalarizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--lower-constant-intrinsics",
      "--strip-dead-prototypes",
      "--adce",
      "--loop-interchange",
      "--always-inline",
      "--rpo-functionattrs",
      "--mergereturn",
      "--consthoist",
      "--add-discriminators",
      "--cross-dso-cfi",
      "--mergefunc",
      "--tailcallelim",
      "--lower-widenable-condition",
      "--scalarizer"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}