{
  "program_id": "linux-v0_5.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 5,
    "oneSuccessor": 15,
    "twoPred": 10,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 32,
    "BeginPhi": 0,
    "BranchCount": 25,
    "returnInt": 1,
    "CriticalCount": 7,
    "NumEdges": 35,
    "const32Bit": 42,
    "const64Bit": 0,
    "numConstZeroes": 6,
    "numConstOnes": 21,
    "UncondBranches": 15,
    "binaryConstArg": 11,
    "NumAShrInst": 1,
    "NumAddInst": 6,
    "NumAllocaInst": 16,
    "NumAndInst": 4,
    "BlockMid": 3,
    "BlockLow": 29,
    "NumBitCastInst": 0,
    "NumBrInst": 25,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 27,
    "NumSubInst": 2,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 32,
    "TotalInsts": 169,
    "TotalMemInst": 99,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 71
  },
  "baseline_oz_instcount": 169,
  "knowledge_base_entry": [
    "--loweratomic",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--dse",
    "--instcombine",
    "--ipsccp",
    "--gvn",
    "--dse",
    "--load-store-vectorizer",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--loop-unroll-and-jam",
          "--loop-simplifycfg",
          "--canonicalize-aliases",
          "--sancov",
          "--lowerinvoke",
          "--bdce",
          "--div-rem-pairs",
          "--insert-gcov-profiling",
          "--newgvn",
          "--strip-dead-prototypes",
          "--loop-versioning-licm",
          "--forceattrs",
          "--aggressive-instcombine",
          "--argpromotion",
          "--loop-unswitch",
          "--lower-matrix-intrinsics",
          "--libcalls-shrinkwrap"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--loop-unroll-and-jam",
      "--loop-simplifycfg",
      "--canonicalize-aliases",
      "--sancov",
      "--lowerinvoke",
      "--bdce",
      "--div-rem-pairs",
      "--insert-gcov-profiling",
      "--newgvn",
      "--strip-dead-prototypes",
      "--loop-versioning-licm",
      "--forceattrs",
      "--aggressive-instcombine",
      "--argpromotion",
      "--loop-unswitch",
      "--lower-matrix-intrinsics",
      "--libcalls-shrinkwrap"
    ],
    "performance_vs_Oz": "+3.0%"
  }
}