{
  "program_id": "github-v0_29527.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 5,
    "oneSuccessor": 15,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 28,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 33,
    "const32Bit": 46,
    "const64Bit": 54,
    "numConstZeroes": 60,
    "numConstOnes": 26,
    "UncondBranches": 15,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 13,
    "NumAndInst": 5,
    "BlockMid": 5,
    "BlockLow": 23,
    "NumBitCastInst": 8,
    "NumBrInst": 24,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 9,
    "NumLShrInst": 5,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 28,
    "TotalInsts": 178,
    "TotalMemInst": 109,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 60
  },
  "baseline_oz_instcount": 178,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--newgvn",
    "--sroa",
    "--prune-eh",
    "--gvn-hoist",
    "--flattencfg",
    "--globalopt",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--die",
    "--simplifycfg",
    "--dse",
    "--lower-expect",
    "--loop-simplifycfg",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--die",
          "--deadargelim",
          "--aggressive-instcombine",
          "--loop-simplify",
          "--elim-avail-extern",
          "--loop-predication",
          "--inject-tli-mappings",
          "--strip",
          "-loop-reduce",
          "--loop-simplifycfg",
          "--barrier",
          "--lower-guard-intrinsic",
          "--slsr",
          "--canonicalize-aliases",
          "--irce",
          "--loop-versioning-licm",
          "--constmerge",
          "--hotcoldsplit",
          "--loweratomic",
          "--adce",
          "--globaldce",
          "--load-store-vectorizer",
          "--forceattrs",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--die",
      "--deadargelim",
      "--aggressive-instcombine",
      "--loop-simplify",
      "--elim-avail-extern",
      "--loop-predication",
      "--inject-tli-mappings",
      "--strip",
      "-loop-reduce",
      "--loop-simplifycfg",
      "--barrier",
      "--lower-guard-intrinsic",
      "--slsr",
      "--canonicalize-aliases",
      "--irce",
      "--loop-versioning-licm",
      "--constmerge",
      "--hotcoldsplit",
      "--loweratomic",
      "--adce",
      "--globaldce",
      "--load-store-vectorizer",
      "--forceattrs",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}