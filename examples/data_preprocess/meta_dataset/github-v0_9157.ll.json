{
  "program_id": "github-v0_9157.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 3,
    "CriticalCount": 2,
    "NumEdges": 10,
    "const32Bit": 10,
    "const64Bit": 0,
    "numConstZeroes": 1,
    "numConstOnes": 5,
    "UncondBranches": 4,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 7,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 9,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 6,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 42,
    "TotalMemInst": 23,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 20
  },
  "baseline_oz_instcount": 42,
  "knowledge_base_entry": [
    "--prune-eh",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--indvars",
    "--correlated-propagation",
    "--mergefunc",
    "--die",
    "--loop-instsimplify",
    "--sccp",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--gvn",
          "--infer-address-spaces",
          "--guard-widening",
          "--constprop",
          "--libcalls-shrinkwrap",
          "--forceattrs",
          "--elim-avail-extern",
          "--rpo-functionattrs",
          "--ipconstprop",
          "--cross-dso-cfi",
          "--licm",
          "--load-store-vectorizer",
          "--gvn-hoist",
          "--hotcoldsplit",
          "--loop-vectorize",
          "--inject-tli-mappings",
          "--newgvn",
          "--name-anon-globals",
          "--loop-reroll",
          "--memcpyopt",
          "--post-inline-ee-instrument",
          "--sroa",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--gvn",
      "--infer-address-spaces",
      "--guard-widening",
      "--constprop",
      "--libcalls-shrinkwrap",
      "--forceattrs",
      "--elim-avail-extern",
      "--rpo-functionattrs",
      "--ipconstprop",
      "--cross-dso-cfi",
      "--licm",
      "--load-store-vectorizer",
      "--gvn-hoist",
      "--hotcoldsplit",
      "--loop-vectorize",
      "--inject-tli-mappings",
      "--newgvn",
      "--name-anon-globals",
      "--loop-reroll",
      "--memcpyopt",
      "--post-inline-ee-instrument",
      "--sroa",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+4.8%"
  }
}