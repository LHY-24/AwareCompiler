{
  "program_id": "linux-v0_13685.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 6,
    "oneSuccessor": 23,
    "twoPred": 8,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 15,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 10,
    "CriticalCount": 4,
    "NumEdges": 53,
    "const32Bit": 113,
    "const64Bit": 12,
    "numConstZeroes": 56,
    "numConstOnes": 43,
    "UncondBranches": 23,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 36,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 45,
    "NumBitCastInst": 5,
    "NumBrInst": 38,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 102,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 58,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 50,
    "TotalInsts": 335,
    "TotalMemInst": 252,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 150
  },
  "baseline_oz_instcount": 336,
  "knowledge_base_entry": [
    "--gvn",
    "--inline",
    "--early-cse",
    "--prune-eh",
    "--gvn",
    "--flattencfg",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--speculative-execution",
          "--mem2reg",
          "--load-store-vectorizer",
          "--sroa",
          "--partially-inline-libcalls",
          "--hotcoldsplit",
          "--scalarizer",
          "--loop-versioning",
          "--add-discriminators",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--speculative-execution",
      "--mem2reg",
      "--load-store-vectorizer",
      "--sroa",
      "--partially-inline-libcalls",
      "--hotcoldsplit",
      "--scalarizer",
      "--loop-versioning",
      "--add-discriminators",
      "--strip"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}