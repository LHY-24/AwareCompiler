{
  "program_id": "linux-v0_9033.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 64,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 19,
    "oneSuccessor": 53,
    "twoPred": 21,
    "twoPredOneSuc": 4,
    "twoEach": 11,
    "twoSuccessor": 35,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 110,
    "BeginPhi": 2,
    "BranchCount": 88,
    "returnInt": 30,
    "CriticalCount": 13,
    "NumEdges": 123,
    "const32Bit": 287,
    "const64Bit": 22,
    "numConstZeroes": 137,
    "numConstOnes": 101,
    "UncondBranches": 53,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 72,
    "NumAndInst": 2,
    "BlockMid": 16,
    "BlockLow": 96,
    "NumBitCastInst": 25,
    "NumBrInst": 88,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 88,
    "NumICmpInst": 36,
    "NumLShrInst": 0,
    "NumLoadInst": 224,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 24,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 113,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 6,
    "NumZExtInst": 12,
    "TotalBlocks": 112,
    "TotalInsts": 781,
    "TotalMemInst": 549,
    "TotalFuncs": 43,
    "ArgsPhi": 4,
    "testUnary": 350
  },
  "baseline_oz_instcount": 781,
  "knowledge_base_entry": [
    "--instcombine",
    "--aggressive-instcombine",
    "--ipsccp",
    "--gvn",
    "--mem2reg",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--die",
          "--strip-debug-declare",
          "--inferattrs",
          "--loop-distribute",
          "--lower-expect",
          "--mldst-motion",
          "--loop-vectorize",
          "--aggressive-instcombine",
          "--callsite-splitting",
          "--lcssa",
          "--inline",
          "--add-discriminators",
          "--always-inline",
          "--sink",
          "--constprop",
          "--memcpyopt",
          "--slsr",
          "--called-value-propagation",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--die",
      "--strip-debug-declare",
      "--inferattrs",
      "--loop-distribute",
      "--lower-expect",
      "--mldst-motion",
      "--loop-vectorize",
      "--aggressive-instcombine",
      "--callsite-splitting",
      "--lcssa",
      "--inline",
      "--add-discriminators",
      "--always-inline",
      "--sink",
      "--constprop",
      "--memcpyopt",
      "--slsr",
      "--called-value-propagation",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}