{
  "program_id": "poj104-v1_73_1594.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 5,
    "oneSuccessor": 28,
    "twoPred": 11,
    "twoPredOneSuc": 2,
    "twoEach": 8,
    "twoSuccessor": 13,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 0,
    "BranchCount": 41,
    "returnInt": 4,
    "CriticalCount": 5,
    "NumEdges": 54,
    "const32Bit": 41,
    "const64Bit": 34,
    "numConstZeroes": 33,
    "numConstOnes": 19,
    "UncondBranches": 28,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 41,
    "NumBitCastInst": 14,
    "NumBrInst": 41,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 53,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 20,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 44,
    "TotalInsts": 228,
    "TotalMemInst": 126,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 95
  },
  "baseline_oz_instcount": 494,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse",
    "--mem2reg",
    "--instcombine",
    "--newgvn",
    "--globalopt",
    "--sroa",
    "--mldst-motion",
    "--mem2reg",
    "--mergefunc",
    "--adce",
    "--die",
    "--newgvn",
    "--adce",
    "--sccp",
    "--loop-instsimplify",
    "--jump-threading",
    "--newgvn",
    "--bdce",
    "--newgvn",
    "--loop-instsimplify",
    "--mem2reg",
    "--loop-instsimplify",
    "--mem2reg",
    "--inline",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--reassociate",
    "--die",
    "--mem2reg",
    "--bdce",
    "--loop-instsimplify",
    "--instcombine",
    "--dce",
    "--gvn-hoist",
    "--gvn-hoist",
    "--loop-rotate",
    "--early-cse-memssa",
    "--loop-rotate",
    "--lower-expect",
    "--bdce",
    "--aggressive-instcombine",
    "--dse",
    "--elim-avail-extern",
    "--die",
    "--early-cse",
    "--memcpyopt",
    "--mem2reg",
    "--inline",
    "--loop-simplifycfg",
    "--correlated-propagation",
    "--die",
    "--licm",
    "--newgvn",
    "--mergefunc",
    "--licm",
    "--nary-reassociate",
    "--lower-expect",
    "--loop-rotate",
    "--early-cse-memssa",
    "--loop-rotate",
    "--lower-expect",
    "--bdce",
    "--aggressive-instcombine",
    "--dse",
    "--elim-avail-extern",
    "--die",
    "--early-cse",
    "--mem2reg",
    "--instcombine",
    "--newgvn",
    "--globalopt",
    "--sroa",
    "--mldst-motion",
    "--gvn-hoist",
    "--gvn",
    "--nary-reassociate",
    "--indvars",
    "--simplifycfg",
    "--adce",
    "--correlated-propagation",
    "--early-cse",
    "--gvn-hoist",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--reassociate",
    "--die",
    "--mem2reg",
    "--bdce",
    "--loop-instsimplify",
    "--instcombine",
    "--dce",
    "--gvn-hoist",
    "--gvn-hoist",
    "--loop-rotate",
    "--early-cse-memssa",
    "--loop-rotate",
    "--lower-expect",
    "--bdce",
    "--aggressive-instcombine",
    "--dse",
    "--elim-avail-extern",
    "--die",
    "--early-cse",
    "--memcpyopt",
    "--jump-threading",
    "--ipsccp",
    "--licm",
    "--ipsccp",
    "--early-cse-memssa",
    "--mldst-motion",
    "--gvn-hoist",
    "--gvn",
    "--nary-reassociate",
    "--indvars",
    "--simplifycfg",
    "--adce",
    "--correlated-propagation",
    "--early-cse",
    "--gvn-hoist",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--loop-simplify",
          "--coro-early",
          "--lowerinvoke",
          "--sccp",
          "--loop-simplifycfg",
          "--loop-fusion",
          "--post-inline-ee-instrument",
          "--globaldce",
          "--mem2reg",
          "--coro-elide",
          "--always-inline",
          "--loweratomic",
          "--infer-address-spaces",
          "--lower-widenable-condition",
          "--alignment-from-assumptions",
          "--gvn",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+75.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--loop-simplify",
      "--coro-early",
      "--lowerinvoke",
      "--sccp",
      "--loop-simplifycfg",
      "--loop-fusion",
      "--post-inline-ee-instrument",
      "--globaldce",
      "--mem2reg",
      "--coro-elide",
      "--always-inline",
      "--loweratomic",
      "--infer-address-spaces",
      "--lower-widenable-condition",
      "--alignment-from-assumptions",
      "--gvn",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+75.7%"
  }
}