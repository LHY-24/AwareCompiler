{
  "program_id": "linux-v0_1629.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 50,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 8,
    "oneSuccessor": 44,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 19,
    "morePreds": 6,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 83,
    "BeginPhi": 2,
    "BranchCount": 63,
    "returnInt": 16,
    "CriticalCount": 4,
    "NumEdges": 97,
    "const32Bit": 218,
    "const64Bit": 12,
    "numConstZeroes": 85,
    "numConstOnes": 106,
    "UncondBranches": 44,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 86,
    "NumAndInst": 2,
    "BlockMid": 9,
    "BlockLow": 76,
    "NumBitCastInst": 50,
    "NumBrInst": 63,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 183,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 19,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 119,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 11,
    "TotalBlocks": 85,
    "TotalInsts": 668,
    "TotalMemInst": 476,
    "TotalFuncs": 26,
    "ArgsPhi": 4,
    "testUnary": 347
  },
  "baseline_oz_instcount": 668,
  "knowledge_base_entry": [
    "--mergefunc",
    "--ipsccp",
    "--jump-threading",
    "--elim-avail-extern",
    "--sccp",
    "--lower-expect",
    "--sroa",
    "--instcombine",
    "--mergefunc",
    "--mergefunc",
    "-loop-reduce",
    "--slp-vectorizer",
    "--slsr",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--loop-simplify",
          "--alignment-from-assumptions",
          "--lowerinvoke",
          "--name-anon-globals",
          "--gvn",
          "--loop-predication",
          "--float2int",
          "--dce",
          "--libcalls-shrinkwrap",
          "--early-cse-memssa",
          "--loop-deletion",
          "--guard-widening",
          "--insert-gcov-profiling",
          "--cross-dso-cfi",
          "--infer-address-spaces"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--loop-simplify",
      "--alignment-from-assumptions",
      "--lowerinvoke",
      "--name-anon-globals",
      "--gvn",
      "--loop-predication",
      "--float2int",
      "--dce",
      "--libcalls-shrinkwrap",
      "--early-cse-memssa",
      "--loop-deletion",
      "--guard-widening",
      "--insert-gcov-profiling",
      "--cross-dso-cfi",
      "--infer-address-spaces"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}