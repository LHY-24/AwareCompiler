{
  "program_id": "poj104-v1_93_1273.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 5,
    "CriticalCount": 1,
    "NumEdges": 21,
    "const32Bit": 27,
    "const64Bit": 22,
    "numConstZeroes": 16,
    "numConstOnes": 18,
    "UncondBranches": 11,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 22,
    "NumBitCastInst": 13,
    "NumBrInst": 14,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 23,
    "TotalInsts": 139,
    "TotalMemInst": 95,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 56
  },
  "baseline_oz_instcount": 66,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--gvn",
    "--ipsccp",
    "--mergefunc",
    "--newgvn",
    "--early-cse",
    "--lower-expect",
    "--globalopt",
    "--licm",
    "--newgvn",
    "--instcombine",
    "-loop-reduce",
    "--jump-threading",
    "--ipsccp",
    "--ipsccp",
    "--inline",
    "--dse",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--reassociate",
    "--prune-eh",
    "--lower-expect",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--mem2reg",
    "--instcombine",
    "--jump-threading",
    "--newgvn",
    "--loop-deletion",
    "--sccp",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--loop-distribute",
          "--slp-vectorizer",
          "-loop-reduce",
          "--break-crit-edges",
          "--sroa",
          "--newgvn",
          "--simplifycfg",
          "--loop-guard-widening",
          "--lower-constant-intrinsics",
          "--mldst-motion",
          "--rewrite-statepoints-for-gc",
          "--partially-inline-libcalls",
          "--name-anon-globals",
          "--inline",
          "--dse",
          "--inject-tli-mappings",
          "--loop-versioning",
          "--mergefunc",
          "--prune-eh",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--loop-distribute",
      "--slp-vectorizer",
      "-loop-reduce",
      "--break-crit-edges",
      "--sroa",
      "--newgvn",
      "--simplifycfg",
      "--loop-guard-widening",
      "--lower-constant-intrinsics",
      "--mldst-motion",
      "--rewrite-statepoints-for-gc",
      "--partially-inline-libcalls",
      "--name-anon-globals",
      "--inline",
      "--dse",
      "--inject-tli-mappings",
      "--loop-versioning",
      "--mergefunc",
      "--prune-eh",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+7.6%"
  }
}