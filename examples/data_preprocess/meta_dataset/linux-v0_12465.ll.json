{
  "program_id": "linux-v0_12465.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 47,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 25,
    "oneSuccessor": 31,
    "twoPred": 18,
    "twoPredOneSuc": 8,
    "twoEach": 9,
    "twoSuccessor": 37,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 0,
    "BranchCount": 68,
    "returnInt": 5,
    "CriticalCount": 28,
    "NumEdges": 105,
    "const32Bit": 214,
    "const64Bit": 5,
    "numConstZeroes": 112,
    "numConstOnes": 62,
    "UncondBranches": 31,
    "binaryConstArg": 45,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 33,
    "NumAndInst": 24,
    "BlockMid": 15,
    "BlockLow": 61,
    "NumBitCastInst": 12,
    "NumBrInst": 68,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 59,
    "NumICmpInst": 51,
    "NumLShrInst": 0,
    "NumLoadInst": 149,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 51,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 27,
    "NumZExtInst": 55,
    "TotalBlocks": 76,
    "TotalInsts": 566,
    "TotalMemInst": 304,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 257
  },
  "baseline_oz_instcount": 566,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--jump-threading",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--licm",
    "--gvn-hoist",
    "--jump-threading",
    "--aggressive-instcombine",
    "--instcombine",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--jump-threading",
    "--dse",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--instsimplify",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--loop-guard-widening",
          "--lower-expect",
          "--strip-nondebug",
          "--callsite-splitting",
          "--partially-inline-libcalls",
          "--aggressive-instcombine",
          "--jump-threading",
          "--float2int",
          "--argpromotion",
          "--dse",
          "--alignment-from-assumptions",
          "--ee-instrument",
          "--loop-simplify",
          "--loop-rotate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--loop-guard-widening",
      "--lower-expect",
      "--strip-nondebug",
      "--callsite-splitting",
      "--partially-inline-libcalls",
      "--aggressive-instcombine",
      "--jump-threading",
      "--float2int",
      "--argpromotion",
      "--dse",
      "--alignment-from-assumptions",
      "--ee-instrument",
      "--loop-simplify",
      "--loop-rotate"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}