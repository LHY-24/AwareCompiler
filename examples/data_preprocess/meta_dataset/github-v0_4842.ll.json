{
  "program_id": "github-v0_4842.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 29,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 14,
    "oneSuccessor": 26,
    "twoPred": 18,
    "twoPredOneSuc": 11,
    "twoEach": 7,
    "twoSuccessor": 24,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 1,
    "BranchCount": 50,
    "returnInt": 6,
    "CriticalCount": 19,
    "NumEdges": 74,
    "const32Bit": 31,
    "const64Bit": 1,
    "numConstZeroes": 21,
    "numConstOnes": 10,
    "UncondBranches": 26,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 51,
    "NumBitCastInst": 0,
    "NumBrInst": 50,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 52,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 1,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 51,
    "TotalInsts": 170,
    "TotalMemInst": 88,
    "TotalFuncs": 10,
    "ArgsPhi": 3,
    "testUnary": 61
  },
  "baseline_oz_instcount": 171,
  "knowledge_base_entry": [
    "--prune-eh",
    "--gvn",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse",
    "--bdce",
    "--lower-expect",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loweratomic",
          "--die",
          "--ipsccp",
          "--sroa",
          "--lower-expect",
          "--inject-tli-mappings",
          "--aggressive-instcombine",
          "--mergereturn",
          "--div-rem-pairs",
          "--globaldce",
          "--deadargelim",
          "--mldst-motion",
          "--mem2reg",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loweratomic",
      "--die",
      "--ipsccp",
      "--sroa",
      "--lower-expect",
      "--inject-tli-mappings",
      "--aggressive-instcombine",
      "--mergereturn",
      "--div-rem-pairs",
      "--globaldce",
      "--deadargelim",
      "--mldst-motion",
      "--mem2reg",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}