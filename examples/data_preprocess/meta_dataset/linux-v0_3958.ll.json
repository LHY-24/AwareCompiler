{
  "program_id": "linux-v0_3958.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 54,
    "onePredOneSuc": 46,
    "onePredTwoSuc": 7,
    "oneSuccessor": 52,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 14,
    "morePreds": 5,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 74,
    "BeginPhi": 3,
    "BranchCount": 66,
    "returnInt": 9,
    "CriticalCount": 9,
    "NumEdges": 98,
    "const32Bit": 133,
    "const64Bit": 16,
    "numConstZeroes": 54,
    "numConstOnes": 66,
    "UncondBranches": 52,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 39,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 72,
    "NumBitCastInst": 30,
    "NumBrInst": 66,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 119,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 8,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 58,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 12,
    "NumZExtInst": 5,
    "TotalBlocks": 77,
    "TotalInsts": 432,
    "TotalMemInst": 282,
    "TotalFuncs": 23,
    "ArgsPhi": 6,
    "testUnary": 200
  },
  "baseline_oz_instcount": 433,
  "knowledge_base_entry": [
    "--sink",
    "--newgvn",
    "--globalopt",
    "--gvn",
    "--load-store-vectorizer",
    "--sroa",
    "--dse",
    "--loop-simplifycfg",
    "--dse",
    "--loop-instsimplify",
    "--instcombine",
    "--gvn-hoist",
    "--dce",
    "--loop-simplifycfg",
    "--dse",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--dse",
    "--instcombine",
    "--aggressive-instcombine",
    "--instsimplify",
    "--simplifycfg",
    "--newgvn",
    "--globalopt",
    "--flattencfg",
    "--early-cse",
    "--globalopt",
    "--loop-deletion",
    "--sccp",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--instcombine",
    "--jump-threading",
    "--instsimplify",
    "--globalopt",
    "--mergefunc",
    "--globalopt",
    "--globaldce",
    "--aggressive-instcombine",
    "--ipsccp",
    "--inline",
    "--aggressive-instcombine",
    "--flattencfg",
    "--early-cse",
    "--globalopt",
    "--loop-deletion",
    "--sccp",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--instcombine",
    "--jump-threading",
    "--instsimplify",
    "--early-cse",
    "--memcpyopt",
    "--loop-reroll",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--globalopt",
          "--nary-reassociate",
          "--indvars",
          "--pgo-memop-opt",
          "--always-inline",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--prune-eh",
          "--dse",
          "--lower-matrix-intrinsics",
          "--newgvn",
          "--inferattrs",
          "--instnamer",
          "--loop-load-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--globalopt",
      "--nary-reassociate",
      "--indvars",
      "--pgo-memop-opt",
      "--always-inline",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--prune-eh",
      "--dse",
      "--lower-matrix-intrinsics",
      "--newgvn",
      "--inferattrs",
      "--instnamer",
      "--loop-load-elim"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}