{
  "program_id": "linux-v0_2849.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 9,
    "oneSuccessor": 21,
    "twoPred": 17,
    "twoPredOneSuc": 7,
    "twoEach": 8,
    "twoSuccessor": 20,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 0,
    "BranchCount": 41,
    "returnInt": 17,
    "CriticalCount": 18,
    "NumEdges": 61,
    "const32Bit": 107,
    "const64Bit": 13,
    "numConstZeroes": 51,
    "numConstOnes": 31,
    "UncondBranches": 21,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 19,
    "NumAllocaInst": 23,
    "NumAndInst": 3,
    "BlockMid": 2,
    "BlockLow": 46,
    "NumBitCastInst": 0,
    "NumBrInst": 41,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 20,
    "NumLShrInst": 1,
    "NumLoadInst": 69,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 38,
    "NumSubInst": 1,
    "NumTruncInst": 11,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 48,
    "TotalInsts": 318,
    "TotalMemInst": 188,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 124
  },
  "baseline_oz_instcount": 318,
  "knowledge_base_entry": [
    "--slsr",
    "--simplifycfg",
    "--mergefunc",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--jump-threading",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--mergeicmps",
          "--partial-inliner",
          "--simplifycfg",
          "--hotcoldsplit",
          "--scalarizer",
          "--instsimplify",
          "--name-anon-globals",
          "--load-store-vectorizer",
          "--strip",
          "--ipsccp",
          "--loop-instsimplify",
          "--add-discriminators",
          "--sroa",
          "--loop-unswitch",
          "--aggressive-instcombine",
          "--attributor"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--mergeicmps",
      "--partial-inliner",
      "--simplifycfg",
      "--hotcoldsplit",
      "--scalarizer",
      "--instsimplify",
      "--name-anon-globals",
      "--load-store-vectorizer",
      "--strip",
      "--ipsccp",
      "--loop-instsimplify",
      "--add-discriminators",
      "--sroa",
      "--loop-unswitch",
      "--aggressive-instcombine",
      "--attributor"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}