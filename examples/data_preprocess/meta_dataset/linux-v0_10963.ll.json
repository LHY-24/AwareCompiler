{
  "program_id": "linux-v0_10963.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 14,
    "oneSuccessor": 31,
    "twoPred": 14,
    "twoPredOneSuc": 8,
    "twoEach": 4,
    "twoSuccessor": 21,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 67,
    "BeginPhi": 0,
    "BranchCount": 52,
    "returnInt": 28,
    "CriticalCount": 6,
    "NumEdges": 73,
    "const32Bit": 197,
    "const64Bit": 6,
    "numConstZeroes": 94,
    "numConstOnes": 50,
    "UncondBranches": 31,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 37,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 62,
    "NumBitCastInst": 18,
    "NumBrInst": 52,
    "NumCallInst": 73,
    "NumGetElementPtrInst": 66,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 186,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 63,
    "NumSubInst": 0,
    "NumTruncInst": 13,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 67,
    "TotalInsts": 555,
    "TotalMemInst": 425,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 264
  },
  "baseline_oz_instcount": 555,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--gvn-hoist",
    "--instcombine",
    "--nary-reassociate",
    "--loop-fusion",
    "--jump-threading",
    "--aggressive-instcombine",
    "--licm",
    "--prune-eh",
    "--sroa",
    "--correlated-propagation",
    "--simplifycfg",
    "--slp-vectorizer",
    "--bdce",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--add-discriminators",
          "--aggressive-instcombine",
          "--ipconstprop",
          "--inline",
          "--always-inline",
          "--loop-deletion",
          "--early-cse-memssa",
          "--loop-load-elim",
          "--loop-fusion",
          "--loop-unroll",
          "--dse",
          "--slp-vectorizer",
          "--globaldce",
          "--deadargelim",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--add-discriminators",
      "--aggressive-instcombine",
      "--ipconstprop",
      "--inline",
      "--always-inline",
      "--loop-deletion",
      "--early-cse-memssa",
      "--loop-load-elim",
      "--loop-fusion",
      "--loop-unroll",
      "--dse",
      "--slp-vectorizer",
      "--globaldce",
      "--deadargelim",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}