{
  "program_id": "github-v0_18684.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 34,
    "const64Bit": 27,
    "numConstZeroes": 31,
    "numConstOnes": 23,
    "UncondBranches": 11,
    "binaryConstArg": 11,
    "NumAShrInst": 1,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 4,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 6,
    "NumLShrInst": 1,
    "NumLoadInst": 31,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 21,
    "TotalInsts": 158,
    "TotalMemInst": 92,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 71
  },
  "baseline_oz_instcount": 158,
  "knowledge_base_entry": [
    "--licm",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--gvn",
    "--reassociate",
    "--loop-simplifycfg",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--sroa",
    "--inline",
    "--flattencfg",
    "--newgvn",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--argpromotion",
          "--mldst-motion",
          "--load-store-vectorizer",
          "--lower-matrix-intrinsics",
          "--inferattrs",
          "--lower-widenable-condition",
          "--instnamer",
          "--cross-dso-cfi",
          "--attributor",
          "--aggressive-instcombine",
          "--infer-address-spaces",
          "--memcpyopt",
          "--jump-threading",
          "--mergeicmps",
          "--lowerswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--argpromotion",
      "--mldst-motion",
      "--load-store-vectorizer",
      "--lower-matrix-intrinsics",
      "--inferattrs",
      "--lower-widenable-condition",
      "--instnamer",
      "--cross-dso-cfi",
      "--attributor",
      "--aggressive-instcombine",
      "--infer-address-spaces",
      "--memcpyopt",
      "--jump-threading",
      "--mergeicmps",
      "--lowerswitch"
    ],
    "performance_vs_Oz": "+3.8%"
  }
}