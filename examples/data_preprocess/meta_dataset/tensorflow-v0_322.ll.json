{
  "program_id": "tensorflow-v0_322.ll",
  "autophase_features": {
    "BBNumArgsHi": 6,
    "BBNumArgsLo": 26,
    "onePred": 62,
    "onePredOneSuc": 46,
    "onePredTwoSuc": 16,
    "oneSuccessor": 52,
    "twoPred": 38,
    "twoPredOneSuc": 4,
    "twoEach": 22,
    "twoSuccessor": 46,
    "morePreds": 2,
    "BB03Phi": 32,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 32,
    "BranchCount": 94,
    "returnInt": 0,
    "CriticalCount": 30,
    "NumEdges": 144,
    "const32Bit": 244,
    "const64Bit": 209,
    "numConstZeroes": 344,
    "numConstOnes": 105,
    "UncondBranches": 52,
    "binaryConstArg": 54,
    "NumAShrInst": 0,
    "NumAddInst": 45,
    "NumAllocaInst": 0,
    "NumAndInst": 24,
    "BlockMid": 10,
    "BlockLow": 103,
    "NumBitCastInst": 18,
    "NumBrInst": 94,
    "NumCallInst": 53,
    "NumGetElementPtrInst": 172,
    "NumICmpInst": 40,
    "NumLShrInst": 12,
    "NumLoadInst": 144,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 52,
    "NumRetInst": 11,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 6,
    "NumSubInst": 8,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 113,
    "TotalInsts": 709,
    "TotalMemInst": 379,
    "TotalFuncs": 17,
    "ArgsPhi": 106,
    "testUnary": 176
  },
  "baseline_oz_instcount": 679,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--memcpyopt",
    "--mem2reg",
    "--gvn-hoist",
    "--dce",
    "--inline",
    "--sroa",
    "--die",
    "--early-cse-memssa",
    "--prune-eh",
    "--early-cse",
    "--mergefunc",
    "--sroa",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--lower-expect",
    "--nary-reassociate",
    "--gvn",
    "--simplifycfg",
    "--sccp",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--slp-vectorizer",
          "--lower-expect",
          "--strip-nondebug",
          "--simplifycfg",
          "--lower-widenable-condition",
          "--mldst-motion",
          "--instnamer",
          "--correlated-propagation",
          "--mergereturn",
          "--nary-reassociate",
          "--memcpyopt",
          "--lowerswitch",
          "--die",
          "--name-anon-globals",
          "--simple-loop-unswitch",
          "--mergefunc",
          "--loop-versioning",
          "--loop-idiom",
          "--deadargelim",
          "--libcalls-shrinkwrap",
          "--inject-tli-mappings",
          "--loop-sink",
          "--lower-matrix-intrinsics",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--slp-vectorizer",
      "--lower-expect",
      "--strip-nondebug",
      "--simplifycfg",
      "--lower-widenable-condition",
      "--mldst-motion",
      "--instnamer",
      "--correlated-propagation",
      "--mergereturn",
      "--nary-reassociate",
      "--memcpyopt",
      "--lowerswitch",
      "--die",
      "--name-anon-globals",
      "--simple-loop-unswitch",
      "--mergefunc",
      "--loop-versioning",
      "--loop-idiom",
      "--deadargelim",
      "--libcalls-shrinkwrap",
      "--inject-tli-mappings",
      "--loop-sink",
      "--lower-matrix-intrinsics",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}