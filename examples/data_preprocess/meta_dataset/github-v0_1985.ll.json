{
  "program_id": "github-v0_1985.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 0,
    "oneSuccessor": 16,
    "twoPred": 8,
    "twoPredOneSuc": 0,
    "twoEach": 7,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 32,
    "const32Bit": 228,
    "const64Bit": 50,
    "numConstZeroes": 188,
    "numConstOnes": 77,
    "UncondBranches": 16,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 28,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 27,
    "NumBitCastInst": 31,
    "NumBrInst": 24,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 117,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 65,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 42,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 31,
    "TotalBlocks": 36,
    "TotalInsts": 413,
    "TotalMemInst": 277,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 164
  },
  "baseline_oz_instcount": 403,
  "knowledge_base_entry": [
    "--irce",
    "--jump-threading",
    "--nary-reassociate",
    "--gvn-hoist",
    "--instcombine",
    "--mldst-motion",
    "--dse",
    "--simplifycfg",
    "--adce",
    "--early-cse",
    "--early-cse",
    "--aggressive-instcombine",
    "--mergefunc",
    "--adce",
    "--instcombine",
    "--licm",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--globalopt",
          "--instsimplify",
          "--adce",
          "--redundant-dbg-inst-elim",
          "--nary-reassociate",
          "--lowerinvoke",
          "--instnamer",
          "--lower-guard-intrinsic",
          "--forceattrs",
          "--called-value-propagation",
          "--mergeicmps",
          "--inferattrs",
          "--scalarizer",
          "--hotcoldsplit",
          "--constmerge",
          "--loop-load-elim",
          "--loop-idiom",
          "--aggressive-instcombine",
          "--separate-const-offset-from-gep",
          "--div-rem-pairs",
          "--coro-elide",
          "--infer-address-spaces",
          "--always-inline",
          "--slsr",
          "--indvars",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--globalopt",
      "--instsimplify",
      "--adce",
      "--redundant-dbg-inst-elim",
      "--nary-reassociate",
      "--lowerinvoke",
      "--instnamer",
      "--lower-guard-intrinsic",
      "--forceattrs",
      "--called-value-propagation",
      "--mergeicmps",
      "--inferattrs",
      "--scalarizer",
      "--hotcoldsplit",
      "--constmerge",
      "--loop-load-elim",
      "--loop-idiom",
      "--aggressive-instcombine",
      "--separate-const-offset-from-gep",
      "--div-rem-pairs",
      "--coro-elide",
      "--infer-address-spaces",
      "--always-inline",
      "--slsr",
      "--indvars",
      "--newgvn"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}