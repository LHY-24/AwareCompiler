{
  "program_id": "linux-v0_5156.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 58,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 2,
    "oneSuccessor": 58,
    "twoPred": 9,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 9,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 93,
    "BeginPhi": 0,
    "BranchCount": 67,
    "returnInt": 10,
    "CriticalCount": 2,
    "NumEdges": 96,
    "const32Bit": 279,
    "const64Bit": 10,
    "numConstZeroes": 112,
    "numConstOnes": 135,
    "UncondBranches": 58,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 110,
    "NumAndInst": 1,
    "BlockMid": 12,
    "BlockLow": 81,
    "NumBitCastInst": 59,
    "NumBrInst": 67,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 74,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 217,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 133,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 93,
    "TotalInsts": 751,
    "TotalMemInst": 576,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 397
  },
  "baseline_oz_instcount": 749,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--instcombine",
    "--aggressive-instcombine",
    "--adce",
    "--simplifycfg",
    "--loop-reroll",
    "--simplifycfg",
    "--mergefunc",
    "--sroa",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--dce",
    "--ipsccp",
    "--dce",
    "--ipsccp",
    "--mergefunc",
    "--flattencfg",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--mergefunc",
          "--licm",
          "--bdce",
          "--ipconstprop",
          "--argpromotion",
          "--alignment-from-assumptions",
          "--consthoist",
          "--globalopt",
          "--mergeicmps",
          "--prune-eh",
          "--coro-split",
          "--loop-simplify",
          "--globalsplit",
          "--adce",
          "--name-anon-globals",
          "--loop-versioning-licm",
          "--scalarizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--mergefunc",
      "--licm",
      "--bdce",
      "--ipconstprop",
      "--argpromotion",
      "--alignment-from-assumptions",
      "--consthoist",
      "--globalopt",
      "--mergeicmps",
      "--prune-eh",
      "--coro-split",
      "--loop-simplify",
      "--globalsplit",
      "--adce",
      "--name-anon-globals",
      "--loop-versioning-licm",
      "--scalarizer"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}