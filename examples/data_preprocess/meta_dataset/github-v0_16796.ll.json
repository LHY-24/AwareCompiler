{
  "program_id": "github-v0_16796.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 4,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 0,
    "CriticalCount": 4,
    "NumEdges": 20,
    "const32Bit": 18,
    "const64Bit": 2,
    "numConstZeroes": 13,
    "numConstOnes": 10,
    "UncondBranches": 8,
    "binaryConstArg": 4,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 5,
    "NumAndInst": 1,
    "BlockMid": 2,
    "BlockLow": 15,
    "NumBitCastInst": 0,
    "NumBrInst": 14,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 23,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 17,
    "TotalInsts": 95,
    "TotalMemInst": 56,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 39
  },
  "baseline_oz_instcount": 94,
  "knowledge_base_entry": [
    "--prune-eh",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--loop-deletion",
    "--newgvn",
    "--prune-eh",
    "--sroa",
    "--correlated-propagation",
    "--globalopt",
    "--aggressive-instcombine",
    "--inline",
    "--loop-simplifycfg",
    "--sccp",
    "--die",
    "--lower-expect",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-cleanup",
          "--loop-unroll-and-jam",
          "--rewrite-statepoints-for-gc",
          "--barrier",
          "--loop-versioning-licm",
          "--speculative-execution",
          "--flattencfg",
          "--strip",
          "--loop-unroll",
          "--div-rem-pairs",
          "--canonicalize-aliases",
          "--forceattrs",
          "--globaldce",
          "--coro-split",
          "--coro-early",
          "--lower-expect",
          "--prune-eh",
          "--aggressive-instcombine",
          "--float2int",
          "--ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-cleanup",
      "--loop-unroll-and-jam",
      "--rewrite-statepoints-for-gc",
      "--barrier",
      "--loop-versioning-licm",
      "--speculative-execution",
      "--flattencfg",
      "--strip",
      "--loop-unroll",
      "--div-rem-pairs",
      "--canonicalize-aliases",
      "--forceattrs",
      "--globaldce",
      "--coro-split",
      "--coro-early",
      "--lower-expect",
      "--prune-eh",
      "--aggressive-instcombine",
      "--float2int",
      "--ee-instrument"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}