{
  "program_id": "linux-v0_12239.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 47,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 21,
    "oneSuccessor": 40,
    "twoPred": 17,
    "twoPredOneSuc": 9,
    "twoEach": 5,
    "twoSuccessor": 30,
    "morePreds": 6,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 75,
    "BeginPhi": 6,
    "BranchCount": 70,
    "returnInt": 33,
    "CriticalCount": 17,
    "NumEdges": 100,
    "const32Bit": 279,
    "const64Bit": 7,
    "numConstZeroes": 87,
    "numConstOnes": 106,
    "UncondBranches": 40,
    "binaryConstArg": 58,
    "NumAShrInst": 4,
    "NumAddInst": 31,
    "NumAllocaInst": 75,
    "NumAndInst": 18,
    "BlockMid": 12,
    "BlockLow": 69,
    "NumBitCastInst": 9,
    "NumBrInst": 70,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 36,
    "NumLShrInst": 0,
    "NumLoadInst": 227,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 6,
    "NumRetInst": 11,
    "NumSExtInst": 2,
    "NumSelectInst": 6,
    "NumShlInst": 1,
    "NumStoreInst": 69,
    "NumSubInst": 2,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 69,
    "TotalBlocks": 81,
    "TotalInsts": 754,
    "TotalMemInst": 474,
    "TotalFuncs": 30,
    "ArgsPhi": 13,
    "testUnary": 392
  },
  "baseline_oz_instcount": 754,
  "knowledge_base_entry": [
    "--gvn",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse",
    "--instcombine",
    "--inline",
    "--slp-vectorizer",
    "--reassociate",
    "--ipsccp",
    "--nary-reassociate",
    "--instsimplify",
    "--correlated-propagation",
    "--sroa",
    "--indvars",
    "--newgvn",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--nary-reassociate",
          "--loop-rotate",
          "--strip-debug-declare",
          "--globaldce",
          "--mergeicmps",
          "--scalarizer",
          "--sink",
          "--loop-simplify",
          "--strip-nondebug",
          "--gvn-hoist",
          "--float2int",
          "--globalopt",
          "--load-store-vectorizer",
          "--mergereturn",
          "--dce",
          "--loop-versioning",
          "--post-inline-ee-instrument",
          "--callsite-splitting",
          "--aggressive-instcombine",
          "--consthoist",
          "--lowerinvoke",
          "--simple-loop-unswitch",
          "--rewrite-statepoints-for-gc",
          "--libcalls-shrinkwrap",
          "--flattencfg",
          "--loop-sink",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--nary-reassociate",
      "--loop-rotate",
      "--strip-debug-declare",
      "--globaldce",
      "--mergeicmps",
      "--scalarizer",
      "--sink",
      "--loop-simplify",
      "--strip-nondebug",
      "--gvn-hoist",
      "--float2int",
      "--globalopt",
      "--load-store-vectorizer",
      "--mergereturn",
      "--dce",
      "--loop-versioning",
      "--post-inline-ee-instrument",
      "--callsite-splitting",
      "--aggressive-instcombine",
      "--consthoist",
      "--lowerinvoke",
      "--simple-loop-unswitch",
      "--rewrite-statepoints-for-gc",
      "--libcalls-shrinkwrap",
      "--flattencfg",
      "--loop-sink",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}