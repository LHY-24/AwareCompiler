{
  "program_id": "github-v0_1196.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 13,
    "CriticalCount": 2,
    "NumEdges": 23,
    "const32Bit": 37,
    "const64Bit": 6,
    "numConstZeroes": 9,
    "numConstOnes": 23,
    "UncondBranches": 11,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 19,
    "TotalInsts": 126,
    "TotalMemInst": 93,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 50
  },
  "baseline_oz_instcount": 127,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--mergefunc",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--adce",
    "--early-cse-memssa",
    "--bdce",
    "--jump-threading",
    "--load-store-vectorizer",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--lower-widenable-condition",
          "--simplifycfg",
          "--instcombine",
          "--inferattrs",
          "--globalopt",
          "--functionattrs",
          "--loop-data-prefetch",
          "--lower-guard-intrinsic",
          "--instnamer",
          "--mergeicmps"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--lower-widenable-condition",
      "--simplifycfg",
      "--instcombine",
      "--inferattrs",
      "--globalopt",
      "--functionattrs",
      "--loop-data-prefetch",
      "--lower-guard-intrinsic",
      "--instnamer",
      "--mergeicmps"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}