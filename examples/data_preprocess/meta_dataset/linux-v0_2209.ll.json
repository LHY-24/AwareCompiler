{
  "program_id": "linux-v0_2209.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 51,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 11,
    "oneSuccessor": 44,
    "twoPred": 11,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 19,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 0,
    "BranchCount": 63,
    "returnInt": 54,
    "CriticalCount": 1,
    "NumEdges": 96,
    "const32Bit": 156,
    "const64Bit": 0,
    "numConstZeroes": 23,
    "numConstOnes": 58,
    "UncondBranches": 44,
    "binaryConstArg": 51,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 38,
    "NumAndInst": 26,
    "BlockMid": 14,
    "BlockLow": 58,
    "NumBitCastInst": 0,
    "NumBrInst": 63,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 126,
    "NumMulInst": 0,
    "NumOrInst": 13,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 25,
    "NumStoreInst": 58,
    "NumSubInst": 0,
    "NumTruncInst": 38,
    "NumXorInst": 0,
    "NumZExtInst": 26,
    "TotalBlocks": 72,
    "TotalInsts": 495,
    "TotalMemInst": 276,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 228
  },
  "baseline_oz_instcount": 495,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--flattencfg",
    "--globalopt",
    "--dse",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--early-cse",
    "--aggressive-instcombine",
    "--instsimplify",
    "--mem2reg",
    "--sccp",
    "--loop-deletion",
    "--gvn",
    "--prune-eh",
    "--simplifycfg",
    "--jump-threading",
    "--mergefunc",
    "--load-store-vectorizer",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--loop-load-elim",
          "-loop-reduce",
          "--mergeicmps",
          "--attributor",
          "--strip",
          "--aggressive-instcombine",
          "--name-anon-globals",
          "--constprop",
          "--alignment-from-assumptions",
          "--loop-predication",
          "--partially-inline-libcalls",
          "--redundant-dbg-inst-elim",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--loop-load-elim",
      "-loop-reduce",
      "--mergeicmps",
      "--attributor",
      "--strip",
      "--aggressive-instcombine",
      "--name-anon-globals",
      "--constprop",
      "--alignment-from-assumptions",
      "--loop-predication",
      "--partially-inline-libcalls",
      "--redundant-dbg-inst-elim",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+5.3%"
  }
}