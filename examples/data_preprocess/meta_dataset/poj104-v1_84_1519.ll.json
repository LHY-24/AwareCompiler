{
  "program_id": "poj104-v1_84_1519.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 10,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 18,
    "const32Bit": 20,
    "const64Bit": 11,
    "numConstZeroes": 4,
    "numConstOnes": 14,
    "UncondBranches": 10,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 14,
    "NumBitCastInst": 11,
    "NumBrInst": 14,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 11,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 17,
    "TotalInsts": 130,
    "TotalMemInst": 78,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 62
  },
  "baseline_oz_instcount": 66,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--load-store-vectorizer",
    "--slsr",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--sroa",
    "--globalopt",
    "--sroa",
    "--inline",
    "--dce",
    "--early-cse-memssa",
    "--flattencfg",
    "--sroa",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--mem2reg",
    "--instsimplify",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--flattencfg",
    "--simplifycfg",
    "--prune-eh",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--loop-instsimplify",
    "--mem2reg",
    "--inline",
    "--slp-vectorizer",
    "--indvars",
    "--loop-reroll",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--dse",
    "--dce",
    "--jump-threading",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-guard-intrinsic",
          "--globaldce",
          "--elim-avail-extern",
          "--slp-vectorizer",
          "--loop-simplifycfg",
          "--correlated-propagation",
          "--loop-idiom",
          "--mem2reg",
          "--argpromotion",
          "--indvars",
          "--loop-unroll-and-jam",
          "--loop-predication",
          "--coro-cleanup",
          "--adce",
          "--lowerinvoke",
          "--globalopt",
          "--loop-guard-widening",
          "--partial-inliner",
          "--libcalls-shrinkwrap",
          "--guard-widening",
          "--ipsccp",
          "--strip",
          "--irce",
          "--break-crit-edges",
          "--strip-dead-prototypes",
          "--div-rem-pairs",
          "--gvn",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-guard-intrinsic",
      "--globaldce",
      "--elim-avail-extern",
      "--slp-vectorizer",
      "--loop-simplifycfg",
      "--correlated-propagation",
      "--loop-idiom",
      "--mem2reg",
      "--argpromotion",
      "--indvars",
      "--loop-unroll-and-jam",
      "--loop-predication",
      "--coro-cleanup",
      "--adce",
      "--lowerinvoke",
      "--globalopt",
      "--loop-guard-widening",
      "--partial-inliner",
      "--libcalls-shrinkwrap",
      "--guard-widening",
      "--ipsccp",
      "--strip",
      "--irce",
      "--break-crit-edges",
      "--strip-dead-prototypes",
      "--div-rem-pairs",
      "--gvn",
      "--float2int"
    ],
    "performance_vs_Oz": "+9.1%"
  }
}