{
  "program_id": "linux-v0_13409.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 3,
    "oneSuccessor": 28,
    "twoPred": 8,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 10,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 65,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 8,
    "CriticalCount": 2,
    "NumEdges": 58,
    "const32Bit": 175,
    "const64Bit": 19,
    "numConstZeroes": 80,
    "numConstOnes": 80,
    "UncondBranches": 28,
    "binaryConstArg": 8,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 63,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 57,
    "NumBitCastInst": 29,
    "NumBrInst": 38,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 49,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 142,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 91,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 2,
    "NumZExtInst": 5,
    "TotalBlocks": 65,
    "TotalInsts": 514,
    "TotalMemInst": 386,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 250
  },
  "baseline_oz_instcount": 513,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--adce",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--instsimplify",
    "--lower-expect",
    "--early-cse",
    "--mergefunc",
    "--reassociate",
    "--die",
    "--loop-instsimplify",
    "--mem2reg",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--loop-guard-widening",
          "--tailcallelim",
          "--jump-threading",
          "--strip-dead-prototypes",
          "--infer-address-spaces",
          "--instsimplify",
          "--early-cse",
          "--loop-simplifycfg",
          "--lcssa",
          "--sancov",
          "--loop-vectorize",
          "--gvn",
          "--forceattrs",
          "--div-rem-pairs",
          "--always-inline",
          "--argpromotion",
          "--loop-versioning-licm",
          "--indvars",
          "--scalarizer",
          "--ipconstprop",
          "--aggressive-instcombine",
          "--constprop",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--loop-guard-widening",
      "--tailcallelim",
      "--jump-threading",
      "--strip-dead-prototypes",
      "--infer-address-spaces",
      "--instsimplify",
      "--early-cse",
      "--loop-simplifycfg",
      "--lcssa",
      "--sancov",
      "--loop-vectorize",
      "--gvn",
      "--forceattrs",
      "--div-rem-pairs",
      "--always-inline",
      "--argpromotion",
      "--loop-versioning-licm",
      "--indvars",
      "--scalarizer",
      "--ipconstprop",
      "--aggressive-instcombine",
      "--constprop",
      "--globalopt"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}