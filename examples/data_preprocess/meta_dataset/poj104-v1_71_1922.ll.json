{
  "program_id": "poj104-v1_71_1922.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 49,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 6,
    "oneSuccessor": 49,
    "twoPred": 21,
    "twoPredOneSuc": 6,
    "twoEach": 14,
    "twoSuccessor": 21,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 74,
    "BeginPhi": 0,
    "BranchCount": 70,
    "returnInt": 8,
    "CriticalCount": 6,
    "NumEdges": 91,
    "const32Bit": 72,
    "const64Bit": 48,
    "numConstZeroes": 40,
    "numConstOnes": 49,
    "UncondBranches": 49,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 70,
    "NumBitCastInst": 22,
    "NumBrInst": 70,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 72,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 22,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 40,
    "NumSubInst": 4,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 74,
    "TotalInsts": 346,
    "TotalMemInst": 181,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 129
  },
  "baseline_oz_instcount": 703,
  "knowledge_base_entry": [
    "--instcombine",
    "--loop-reroll",
    "--mergefunc",
    "--elim-avail-extern",
    "--sroa",
    "--indvars",
    "--gvn",
    "--simplifycfg",
    "--mldst-motion",
    "--newgvn",
    "--slsr",
    "--nary-reassociate",
    "--mem2reg",
    "--aggressive-instcombine",
    "--instsimplify",
    "--instcombine",
    "--loop-reroll",
    "--mergefunc",
    "--elim-avail-extern",
    "--sroa",
    "--indvars",
    "--gvn",
    "--simplifycfg",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--float2int",
          "--early-cse-memssa",
          "--load-store-vectorizer",
          "-loop-reduce",
          "--partial-inliner",
          "--elim-avail-extern",
          "--early-cse",
          "--loop-instsimplify",
          "--instcombine",
          "--loop-vectorize",
          "--lowerswitch",
          "--lowerinvoke",
          "--dce",
          "--inferattrs",
          "--lower-constant-intrinsics",
          "--loop-simplifycfg",
          "--slsr",
          "--rewrite-statepoints-for-gc",
          "--loop-idiom",
          "--add-discriminators",
          "--scalarizer",
          "--callsite-splitting",
          "--strip-dead-prototypes",
          "--sroa",
          "--inject-tli-mappings",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+71.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--float2int",
      "--early-cse-memssa",
      "--load-store-vectorizer",
      "-loop-reduce",
      "--partial-inliner",
      "--elim-avail-extern",
      "--early-cse",
      "--loop-instsimplify",
      "--instcombine",
      "--loop-vectorize",
      "--lowerswitch",
      "--lowerinvoke",
      "--dce",
      "--inferattrs",
      "--lower-constant-intrinsics",
      "--loop-simplifycfg",
      "--slsr",
      "--rewrite-statepoints-for-gc",
      "--loop-idiom",
      "--add-discriminators",
      "--scalarizer",
      "--callsite-splitting",
      "--strip-dead-prototypes",
      "--sroa",
      "--inject-tli-mappings",
      "--gvn"
    ],
    "performance_vs_Oz": "+71.6%"
  }
}