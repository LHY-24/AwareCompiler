{
  "program_id": "linux-v0_11667.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 80,
    "onePredOneSuc": 62,
    "onePredTwoSuc": 13,
    "oneSuccessor": 78,
    "twoPred": 19,
    "twoPredOneSuc": 5,
    "twoEach": 7,
    "twoSuccessor": 35,
    "morePreds": 19,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 136,
    "BeginPhi": 1,
    "BranchCount": 113,
    "returnInt": 11,
    "CriticalCount": 54,
    "NumEdges": 205,
    "const32Bit": 420,
    "const64Bit": 57,
    "numConstZeroes": 169,
    "numConstOnes": 163,
    "UncondBranches": 78,
    "binaryConstArg": 38,
    "NumAShrInst": 3,
    "NumAddInst": 6,
    "NumAllocaInst": 124,
    "NumAndInst": 14,
    "BlockMid": 15,
    "BlockLow": 122,
    "NumBitCastInst": 22,
    "NumBrInst": 113,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 106,
    "NumICmpInst": 44,
    "NumLShrInst": 0,
    "NumLoadInst": 232,
    "NumMulInst": 7,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 19,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 172,
    "NumSubInst": 7,
    "NumTruncInst": 1,
    "NumXorInst": 6,
    "NumZExtInst": 30,
    "TotalBlocks": 137,
    "TotalInsts": 960,
    "TotalMemInst": 666,
    "TotalFuncs": 24,
    "ArgsPhi": 2,
    "testUnary": 418
  },
  "baseline_oz_instcount": 961,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--newgvn",
    "--reassociate",
    "--prune-eh",
    "--reassociate",
    "--mem2reg",
    "--aggressive-instcombine",
    "--early-cse",
    "--ipsccp",
    "--instcombine",
    "--load-store-vectorizer",
    "--reassociate",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "--lowerinvoke",
          "--instnamer",
          "--constprop",
          "--load-store-vectorizer",
          "--inject-tli-mappings",
          "--constmerge",
          "--ipconstprop",
          "--bdce",
          "--instcombine",
          "--lower-guard-intrinsic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "--lowerinvoke",
      "--instnamer",
      "--constprop",
      "--load-store-vectorizer",
      "--inject-tli-mappings",
      "--constmerge",
      "--ipconstprop",
      "--bdce",
      "--instcombine",
      "--lower-guard-intrinsic"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}