{
  "program_id": "linux-v0_12111.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 7,
    "CriticalCount": 1,
    "NumEdges": 19,
    "const32Bit": 50,
    "const64Bit": 7,
    "numConstZeroes": 16,
    "numConstOnes": 27,
    "UncondBranches": 9,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 23,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 20,
    "NumBitCastInst": 6,
    "NumBrInst": 14,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 5,
    "NumLShrInst": 2,
    "NumLoadInst": 41,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 2,
    "NumZExtInst": 4,
    "TotalBlocks": 23,
    "TotalInsts": 180,
    "TotalMemInst": 122,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 84
  },
  "baseline_oz_instcount": 180,
  "knowledge_base_entry": [
    "--newgvn",
    "--mergefunc",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--loop-fusion",
    "--loop-reroll",
    "--slsr",
    "--instcombine",
    "--loop-instsimplify",
    "--sroa",
    "--instcombine",
    "--aggressive-instcombine",
    "--lower-expect",
    "--gvn-hoist",
    "--prune-eh",
    "--gvn",
    "--newgvn",
    "--reassociate",
    "--jump-threading",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--redundant-dbg-inst-elim",
          "--aggressive-instcombine",
          "--guard-widening",
          "--hotcoldsplit",
          "--sancov",
          "-loop-reduce",
          "--licm",
          "--loop-predication",
          "--barrier",
          "--loop-deletion",
          "--gvn-hoist",
          "--indvars",
          "--sccp",
          "--elim-avail-extern",
          "--loweratomic",
          "--canonicalize-aliases",
          "--deadargelim",
          "--flattencfg",
          "--early-cse",
          "--loop-rotate",
          "--die",
          "--nary-reassociate",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--redundant-dbg-inst-elim",
      "--aggressive-instcombine",
      "--guard-widening",
      "--hotcoldsplit",
      "--sancov",
      "-loop-reduce",
      "--licm",
      "--loop-predication",
      "--barrier",
      "--loop-deletion",
      "--gvn-hoist",
      "--indvars",
      "--sccp",
      "--elim-avail-extern",
      "--loweratomic",
      "--canonicalize-aliases",
      "--deadargelim",
      "--flattencfg",
      "--early-cse",
      "--loop-rotate",
      "--die",
      "--nary-reassociate",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}