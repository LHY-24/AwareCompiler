{
  "program_id": "github-v0_21416.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 0,
    "oneSuccessor": 4,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 4,
    "CriticalCount": 4,
    "NumEdges": 12,
    "const32Bit": 15,
    "const64Bit": 0,
    "numConstZeroes": 2,
    "numConstOnes": 5,
    "UncondBranches": 4,
    "binaryConstArg": 21,
    "NumAShrInst": 5,
    "NumAddInst": 19,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 6,
    "BlockLow": 3,
    "NumBitCastInst": 0,
    "NumBrInst": 8,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 3,
    "NumLShrInst": 1,
    "NumLoadInst": 14,
    "NumMulInst": 17,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 19,
    "NumSelectInst": 0,
    "NumShlInst": 10,
    "NumStoreInst": 12,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 1,
    "NumZExtInst": 14,
    "TotalBlocks": 9,
    "TotalInsts": 157,
    "TotalMemInst": 52,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 53
  },
  "baseline_oz_instcount": 157,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--die",
    "--reassociate",
    "--dse",
    "--gvn-hoist",
    "--inline",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergeicmps",
          "--irce",
          "--float2int",
          "--lcssa",
          "--correlated-propagation",
          "--bdce",
          "--coro-elide",
          "--instsimplify",
          "--inline",
          "--speculative-execution",
          "--alignment-from-assumptions",
          "--globalsplit",
          "--simple-loop-unswitch",
          "--gvn",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergeicmps",
      "--irce",
      "--float2int",
      "--lcssa",
      "--correlated-propagation",
      "--bdce",
      "--coro-elide",
      "--instsimplify",
      "--inline",
      "--speculative-execution",
      "--alignment-from-assumptions",
      "--globalsplit",
      "--simple-loop-unswitch",
      "--gvn",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}