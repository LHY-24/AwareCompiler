{
  "program_id": "github-v0_7656.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 37,
    "const64Bit": 51,
    "numConstZeroes": 53,
    "numConstOnes": 23,
    "UncondBranches": 11,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 8,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 6,
    "NumLShrInst": 2,
    "NumLoadInst": 32,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 21,
    "TotalInsts": 161,
    "TotalMemInst": 108,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 59
  },
  "baseline_oz_instcount": 161,
  "knowledge_base_entry": [
    "--loop-sink",
    "--jump-threading",
    "--early-cse-memssa",
    "--sccp",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--instcombine",
    "--loop-reroll",
    "--gvn",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--early-cse",
    "--loop-fusion",
    "--instcombine",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--aggressive-instcombine",
    "--early-cse",
    "--dse",
    "--adce",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--slsr",
    "--early-cse",
    "--dse",
    "--adce",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--slsr",
    "--early-cse",
    "--loop-fusion",
    "--instcombine",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--aggressive-instcombine",
    "--early-cse",
    "--dse",
    "--adce",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--early-cse",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--ipsccp",
    "--loop-deletion",
    "--newgvn",
    "--mergefunc",
    "--die",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--post-inline-ee-instrument",
          "--constmerge",
          "--forceattrs",
          "--strip-debug-declare",
          "--simplifycfg",
          "--partial-inliner",
          "--bdce",
          "--inferattrs",
          "--indvars",
          "--slsr",
          "--reg2mem",
          "--called-value-propagation",
          "--globalsplit",
          "--loop-idiom",
          "--lcssa",
          "--loop-unswitch",
          "--loop-fusion",
          "--loop-versioning",
          "--coro-cleanup",
          "--loop-simplify",
          "--instsimplify",
          "--aggressive-instcombine",
          "--lower-matrix-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--post-inline-ee-instrument",
      "--constmerge",
      "--forceattrs",
      "--strip-debug-declare",
      "--simplifycfg",
      "--partial-inliner",
      "--bdce",
      "--inferattrs",
      "--indvars",
      "--slsr",
      "--reg2mem",
      "--called-value-propagation",
      "--globalsplit",
      "--loop-idiom",
      "--lcssa",
      "--loop-unswitch",
      "--loop-fusion",
      "--loop-versioning",
      "--coro-cleanup",
      "--loop-simplify",
      "--instsimplify",
      "--aggressive-instcombine",
      "--lower-matrix-intrinsics"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}