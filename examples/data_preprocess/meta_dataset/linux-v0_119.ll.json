{
  "program_id": "linux-v0_119.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 4,
    "oneSuccessor": 30,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 9,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 65,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 12,
    "CriticalCount": 6,
    "NumEdges": 62,
    "const32Bit": 151,
    "const64Bit": 23,
    "numConstZeroes": 54,
    "numConstOnes": 93,
    "UncondBranches": 30,
    "binaryConstArg": 18,
    "NumAShrInst": 2,
    "NumAddInst": 1,
    "NumAllocaInst": 75,
    "NumAndInst": 6,
    "BlockMid": 11,
    "BlockLow": 54,
    "NumBitCastInst": 25,
    "NumBrInst": 39,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 13,
    "NumLShrInst": 1,
    "NumLoadInst": 135,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 90,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 6,
    "NumZExtInst": 6,
    "TotalBlocks": 65,
    "TotalInsts": 513,
    "TotalMemInst": 363,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 260
  },
  "baseline_oz_instcount": 513,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--jump-threading",
    "--aggressive-instcombine",
    "--mergefunc",
    "--loop-simplifycfg",
    "--sroa",
    "--dse",
    "--gvn-hoist",
    "--licm",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--canonicalize-aliases",
          "--mergefunc",
          "--elim-avail-extern",
          "--strip",
          "--lower-guard-intrinsic",
          "--adce",
          "--loop-idiom",
          "--scalarizer",
          "--newgvn",
          "--simplifycfg",
          "--ee-instrument",
          "--hotcoldsplit",
          "--redundant-dbg-inst-elim",
          "--globalsplit",
          "--loop-predication",
          "--memcpyopt",
          "--rewrite-statepoints-for-gc",
          "--lower-widenable-condition",
          "--instnamer",
          "--die",
          "--cross-dso-cfi",
          "--aggressive-instcombine",
          "--sink",
          "--sroa",
          "--reassociate",
          "--loop-vectorize",
          "--mergereturn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--canonicalize-aliases",
      "--mergefunc",
      "--elim-avail-extern",
      "--strip",
      "--lower-guard-intrinsic",
      "--adce",
      "--loop-idiom",
      "--scalarizer",
      "--newgvn",
      "--simplifycfg",
      "--ee-instrument",
      "--hotcoldsplit",
      "--redundant-dbg-inst-elim",
      "--globalsplit",
      "--loop-predication",
      "--memcpyopt",
      "--rewrite-statepoints-for-gc",
      "--lower-widenable-condition",
      "--instnamer",
      "--die",
      "--cross-dso-cfi",
      "--aggressive-instcombine",
      "--sink",
      "--sroa",
      "--reassociate",
      "--loop-vectorize",
      "--mergereturn"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}