{
  "program_id": "poj104-v1_14_1530.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 2,
    "oneSuccessor": 19,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 5,
    "CriticalCount": 1,
    "NumEdges": 33,
    "const32Bit": 57,
    "const64Bit": 56,
    "numConstZeroes": 39,
    "numConstOnes": 37,
    "UncondBranches": 19,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 24,
    "NumBitCastInst": 27,
    "NumBrInst": 26,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 78,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 33,
    "NumSubInst": 4,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 30,
    "TotalInsts": 292,
    "TotalMemInst": 199,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 132
  },
  "baseline_oz_instcount": 142,
  "knowledge_base_entry": [
    "--mem2reg",
    "--globalopt",
    "--sccp",
    "--loop-simplifycfg",
    "--jump-threading",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--sroa",
    "--mem2reg",
    "--bdce",
    "--loop-simplifycfg",
    "--sccp",
    "--gvn-hoist",
    "--memcpyopt",
    "--newgvn",
    "--globalopt",
    "--instcombine",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--lower-expect",
    "--jump-threading",
    "--load-store-vectorizer",
    "--die",
    "--correlated-propagation",
    "--simplifycfg",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--lower-constant-intrinsics",
          "--jump-threading",
          "--add-discriminators",
          "--correlated-propagation",
          "--instsimplify",
          "--callsite-splitting",
          "--coro-cleanup",
          "--globalsplit",
          "--called-value-propagation",
          "--dce",
          "--always-inline",
          "--loop-reroll",
          "--strip-debug-declare",
          "--div-rem-pairs",
          "--partially-inline-libcalls",
          "--deadargelim",
          "--coro-split",
          "--partial-inliner",
          "--sccp",
          "--nary-reassociate",
          "--float2int",
          "--sroa",
          "--aggressive-instcombine",
          "--loop-simplify",
          "--loop-rotate",
          "--simplifycfg",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+20.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--lower-constant-intrinsics",
      "--jump-threading",
      "--add-discriminators",
      "--correlated-propagation",
      "--instsimplify",
      "--callsite-splitting",
      "--coro-cleanup",
      "--globalsplit",
      "--called-value-propagation",
      "--dce",
      "--always-inline",
      "--loop-reroll",
      "--strip-debug-declare",
      "--div-rem-pairs",
      "--partially-inline-libcalls",
      "--deadargelim",
      "--coro-split",
      "--partial-inliner",
      "--sccp",
      "--nary-reassociate",
      "--float2int",
      "--sroa",
      "--aggressive-instcombine",
      "--loop-simplify",
      "--loop-rotate",
      "--simplifycfg",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+20.4%"
  }
}