{
  "program_id": "linux-v0_4413.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 22,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 2,
    "oneSuccessor": 22,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 2,
    "BranchCount": 28,
    "returnInt": 14,
    "CriticalCount": 2,
    "NumEdges": 34,
    "const32Bit": 99,
    "const64Bit": 7,
    "numConstZeroes": 21,
    "numConstOnes": 54,
    "UncondBranches": 22,
    "binaryConstArg": 12,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 46,
    "NumAndInst": 6,
    "BlockMid": 4,
    "BlockLow": 31,
    "NumBitCastInst": 6,
    "NumBrInst": 28,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 40,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 12,
    "TotalBlocks": 35,
    "TotalInsts": 246,
    "TotalMemInst": 166,
    "TotalFuncs": 11,
    "ArgsPhi": 4,
    "testUnary": 110
  },
  "baseline_oz_instcount": 246,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--adce",
    "--loop-simplifycfg",
    "--prune-eh",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--gvn",
    "--lower-expect",
    "--licm",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--coro-elide",
          "--loop-distribute",
          "--lower-guard-intrinsic",
          "--globalopt",
          "--redundant-dbg-inst-elim",
          "--functionattrs",
          "--aggressive-instcombine",
          "--loop-instsimplify",
          "--lowerinvoke",
          "--loweratomic",
          "--deadargelim",
          "--infer-address-spaces",
          "--gvn",
          "--cross-dso-cfi",
          "--inferattrs",
          "--load-store-vectorizer",
          "--globalsplit",
          "--coro-cleanup",
          "--mem2reg",
          "--partially-inline-libcalls",
          "--barrier",
          "--loop-unroll-and-jam",
          "--scalarizer",
          "--canonicalize-aliases",
          "--early-cse",
          "--slsr",
          "--guard-widening",
          "--speculative-execution"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--coro-elide",
      "--loop-distribute",
      "--lower-guard-intrinsic",
      "--globalopt",
      "--redundant-dbg-inst-elim",
      "--functionattrs",
      "--aggressive-instcombine",
      "--loop-instsimplify",
      "--lowerinvoke",
      "--loweratomic",
      "--deadargelim",
      "--infer-address-spaces",
      "--gvn",
      "--cross-dso-cfi",
      "--inferattrs",
      "--load-store-vectorizer",
      "--globalsplit",
      "--coro-cleanup",
      "--mem2reg",
      "--partially-inline-libcalls",
      "--barrier",
      "--loop-unroll-and-jam",
      "--scalarizer",
      "--canonicalize-aliases",
      "--early-cse",
      "--slsr",
      "--guard-widening",
      "--speculative-execution"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}