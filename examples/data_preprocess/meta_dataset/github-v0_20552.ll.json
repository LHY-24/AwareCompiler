{
  "program_id": "github-v0_20552.ll",
  "autophase_features": {
    "BBNumArgsHi": 5,
    "BBNumArgsLo": 4,
    "onePred": 13,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 15,
    "twoPredOneSuc": 0,
    "twoEach": 13,
    "twoSuccessor": 19,
    "morePreds": 2,
    "BB03Phi": 6,
    "BBHiPhi": 3,
    "BBNoPhi": 24,
    "BeginPhi": 9,
    "BranchCount": 30,
    "returnInt": 10,
    "CriticalCount": 25,
    "NumEdges": 49,
    "const32Bit": 64,
    "const64Bit": 7,
    "numConstZeroes": 18,
    "numConstOnes": 12,
    "UncondBranches": 11,
    "binaryConstArg": 34,
    "NumAShrInst": 0,
    "NumAddInst": 30,
    "NumAllocaInst": 0,
    "NumAndInst": 7,
    "BlockMid": 6,
    "BlockLow": 27,
    "NumBitCastInst": 0,
    "NumBrInst": 30,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 52,
    "NumICmpInst": 19,
    "NumLShrInst": 2,
    "NumLoadInst": 44,
    "NumMulInst": 5,
    "NumOrInst": 3,
    "NumPHIInst": 23,
    "NumRetInst": 3,
    "NumSExtInst": 19,
    "NumSelectInst": 40,
    "NumShlInst": 0,
    "NumStoreInst": 35,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 22,
    "TotalBlocks": 33,
    "TotalInsts": 379,
    "TotalMemInst": 146,
    "TotalFuncs": 10,
    "ArgsPhi": 48,
    "testUnary": 92
  },
  "baseline_oz_instcount": 380,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--nary-reassociate",
    "--gvn",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--loop-rotate",
    "--jump-threading",
    "--early-cse-memssa",
    "--dce",
    "--simplifycfg",
    "--early-cse",
    "--loop-simplifycfg",
    "--flattencfg",
    "--instcombine",
    "--early-cse-memssa",
    "--bdce",
    "--early-cse",
    "--lower-expect",
    "--dse",
    "--instcombine",
    "--sroa",
    "--dce",
    "--jump-threading",
    "--simplifycfg",
    "--nary-reassociate",
    "--gvn",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--loop-rotate",
    "--jump-threading",
    "--simplifycfg",
    "--nary-reassociate",
    "--gvn",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--loop-rotate",
    "--jump-threading",
    "--early-cse-memssa",
    "--dce",
    "--simplifycfg",
    "--early-cse",
    "--gvn-hoist",
    "--dce",
    "--elim-avail-extern",
    "--die",
    "--gvn-hoist",
    "--bdce",
    "--ipsccp",
    "--instsimplify",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--loop-reroll",
          "--post-inline-ee-instrument",
          "--loop-interchange",
          "--memcpyopt",
          "--strip",
          "--early-cse-memssa",
          "--lcssa",
          "--coro-elide",
          "--partially-inline-libcalls",
          "--flattencfg",
          "--early-cse",
          "--loop-versioning",
          "--lower-guard-intrinsic",
          "--sink",
          "--loop-unroll-and-jam",
          "--simplifycfg",
          "--tailcallelim",
          "--mergefunc",
          "--dce",
          "--rewrite-statepoints-for-gc",
          "--mergeicmps"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--loop-reroll",
      "--post-inline-ee-instrument",
      "--loop-interchange",
      "--memcpyopt",
      "--strip",
      "--early-cse-memssa",
      "--lcssa",
      "--coro-elide",
      "--partially-inline-libcalls",
      "--flattencfg",
      "--early-cse",
      "--loop-versioning",
      "--lower-guard-intrinsic",
      "--sink",
      "--loop-unroll-and-jam",
      "--simplifycfg",
      "--tailcallelim",
      "--mergefunc",
      "--dce",
      "--rewrite-statepoints-for-gc",
      "--mergeicmps"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}