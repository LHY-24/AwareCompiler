{
  "program_id": "github-v0_16554.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 28,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 8,
    "oneSuccessor": 28,
    "twoPred": 20,
    "twoPredOneSuc": 8,
    "twoEach": 2,
    "twoSuccessor": 20,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 75,
    "BeginPhi": 0,
    "BranchCount": 48,
    "returnInt": 14,
    "CriticalCount": 13,
    "NumEdges": 68,
    "const32Bit": 237,
    "const64Bit": 2,
    "numConstZeroes": 106,
    "numConstOnes": 110,
    "UncondBranches": 28,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 87,
    "NumAndInst": 0,
    "BlockMid": 16,
    "BlockLow": 59,
    "NumBitCastInst": 18,
    "NumBrInst": 48,
    "NumCallInst": 53,
    "NumGetElementPtrInst": 72,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 214,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 27,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 127,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 75,
    "TotalInsts": 671,
    "TotalMemInst": 553,
    "TotalFuncs": 40,
    "ArgsPhi": 0,
    "testUnary": 326
  },
  "baseline_oz_instcount": 672,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--gvn-hoist",
    "--flattencfg",
    "--load-store-vectorizer",
    "--mergefunc",
    "--jump-threading",
    "--die",
    "--inline",
    "--mem2reg",
    "--aggressive-instcombine",
    "--sroa",
    "--bdce",
    "--slp-vectorizer",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "--simplifycfg",
          "--ee-instrument",
          "--inject-tli-mappings",
          "--pgo-memop-opt",
          "--loop-unroll-and-jam",
          "--gvn-hoist",
          "--sancov",
          "--lcssa",
          "--coro-early",
          "--mergefunc",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "--simplifycfg",
      "--ee-instrument",
      "--inject-tli-mappings",
      "--pgo-memop-opt",
      "--loop-unroll-and-jam",
      "--gvn-hoist",
      "--sancov",
      "--lcssa",
      "--coro-early",
      "--mergefunc",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}