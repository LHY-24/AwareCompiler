{
  "program_id": "linux-v0_1406.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 15,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 8,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 1,
    "BranchCount": 21,
    "returnInt": 12,
    "CriticalCount": 2,
    "NumEdges": 29,
    "const32Bit": 123,
    "const64Bit": 4,
    "numConstZeroes": 53,
    "numConstOnes": 47,
    "UncondBranches": 13,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 36,
    "NumAndInst": 2,
    "BlockMid": 3,
    "BlockLow": 39,
    "NumBitCastInst": 7,
    "NumBrInst": 21,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 74,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 21,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 51,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 3,
    "NumZExtInst": 4,
    "TotalBlocks": 42,
    "TotalInsts": 309,
    "TotalMemInst": 230,
    "TotalFuncs": 35,
    "ArgsPhi": 2,
    "testUnary": 130
  },
  "baseline_oz_instcount": 308,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--jump-threading",
    "--aggressive-instcombine",
    "--ipsccp",
    "--globalopt",
    "--loweratomic",
    "--aggressive-instcombine",
    "--ipsccp",
    "--die",
    "--sroa",
    "--indvars",
    "--loop-reroll",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--mldst-motion",
          "--mergereturn",
          "--lower-expect",
          "--rpo-functionattrs",
          "--aggressive-instcombine",
          "--instnamer",
          "--strip-debug-declare",
          "--flattencfg",
          "--loop-instsimplify",
          "--loop-unswitch",
          "--guard-widening",
          "--dce",
          "--loop-idiom",
          "--constprop",
          "--rewrite-statepoints-for-gc",
          "--hotcoldsplit",
          "--loop-deletion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--mldst-motion",
      "--mergereturn",
      "--lower-expect",
      "--rpo-functionattrs",
      "--aggressive-instcombine",
      "--instnamer",
      "--strip-debug-declare",
      "--flattencfg",
      "--loop-instsimplify",
      "--loop-unswitch",
      "--guard-widening",
      "--dce",
      "--loop-idiom",
      "--constprop",
      "--rewrite-statepoints-for-gc",
      "--hotcoldsplit",
      "--loop-deletion"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}