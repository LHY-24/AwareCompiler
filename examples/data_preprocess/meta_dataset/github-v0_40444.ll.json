{
  "program_id": "github-v0_40444.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 52,
    "const64Bit": 85,
    "numConstZeroes": 82,
    "numConstOnes": 32,
    "UncondBranches": 13,
    "binaryConstArg": 32,
    "NumAShrInst": 10,
    "NumAddInst": 5,
    "NumAllocaInst": 12,
    "NumAndInst": 10,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 8,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 47,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 43,
    "NumMulInst": 1,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 25,
    "NumSubInst": 3,
    "NumTruncInst": 14,
    "NumXorInst": 0,
    "NumZExtInst": 23,
    "TotalBlocks": 24,
    "TotalInsts": 260,
    "TotalMemInst": 134,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 108
  },
  "baseline_oz_instcount": 260,
  "knowledge_base_entry": [
    "--mergefunc",
    "--instsimplify",
    "--lower-expect",
    "--aggressive-instcombine",
    "--inline",
    "--prune-eh",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--inline",
    "--gvn",
    "--loop-reroll",
    "-loop-reduce",
    "--instcombine",
    "--reassociate",
    "--newgvn",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--correlated-propagation",
    "--lower-expect",
    "--loop-instsimplify",
    "--adce",
    "--sroa",
    "--loop-reroll",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--sroa",
    "--instcombine",
    "--jump-threading",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--die",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--dse",
    "--bdce",
    "--simplifycfg",
    "--adce",
    "--aggressive-instcombine",
    "--instsimplify",
    "--lower-expect",
    "--aggressive-instcombine",
    "--flattencfg",
    "--globalopt",
    "--mergefunc",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-interchange",
          "--name-anon-globals",
          "--strip-debug-declare",
          "--aggressive-instcombine",
          "--globalopt",
          "--die",
          "--load-store-vectorizer",
          "--lowerswitch",
          "--loop-simplifycfg",
          "--loop-guard-widening",
          "--constmerge",
          "--correlated-propagation",
          "--always-inline",
          "--loop-sink",
          "--mergereturn",
          "--break-crit-edges",
          "--loop-unroll-and-jam",
          "--deadargelim",
          "--inject-tli-mappings",
          "--licm",
          "--memcpyopt",
          "--strip-dead-prototypes",
          "--reg2mem",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-interchange",
      "--name-anon-globals",
      "--strip-debug-declare",
      "--aggressive-instcombine",
      "--globalopt",
      "--die",
      "--load-store-vectorizer",
      "--lowerswitch",
      "--loop-simplifycfg",
      "--loop-guard-widening",
      "--constmerge",
      "--correlated-propagation",
      "--always-inline",
      "--loop-sink",
      "--mergereturn",
      "--break-crit-edges",
      "--loop-unroll-and-jam",
      "--deadargelim",
      "--inject-tli-mappings",
      "--licm",
      "--memcpyopt",
      "--strip-dead-prototypes",
      "--reg2mem",
      "--barrier"
    ],
    "performance_vs_Oz": "+6.5%"
  }
}