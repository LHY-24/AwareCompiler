{
  "program_id": "linux-v0_11307.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 14,
    "oneSuccessor": 49,
    "twoPred": 14,
    "twoPredOneSuc": 10,
    "twoEach": 4,
    "twoSuccessor": 20,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 80,
    "BeginPhi": 0,
    "BranchCount": 69,
    "returnInt": 12,
    "CriticalCount": 9,
    "NumEdges": 89,
    "const32Bit": 342,
    "const64Bit": 16,
    "numConstZeroes": 199,
    "numConstOnes": 91,
    "UncondBranches": 49,
    "binaryConstArg": 51,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 26,
    "NumAndInst": 18,
    "BlockMid": 6,
    "BlockLow": 74,
    "NumBitCastInst": 10,
    "NumBrInst": 69,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 129,
    "NumICmpInst": 30,
    "NumLShrInst": 9,
    "NumLoadInst": 144,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 19,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 54,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 21,
    "NumZExtInst": 10,
    "TotalBlocks": 80,
    "TotalInsts": 590,
    "TotalMemInst": 390,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 209
  },
  "baseline_oz_instcount": 590,
  "knowledge_base_entry": [
    "--prune-eh",
    "--lower-expect",
    "--slp-vectorizer",
    "--mergefunc",
    "--early-cse",
    "--loop-deletion",
    "--gvn-hoist",
    "--correlated-propagation",
    "--ipsccp",
    "--lower-expect",
    "--mergefunc",
    "--adce",
    "--early-cse-memssa",
    "--sccp",
    "--dce",
    "--jump-threading",
    "--loop-deletion",
    "--gvn-hoist",
    "--correlated-propagation",
    "--sroa",
    "--indvars",
    "--early-cse-memssa",
    "--slsr",
    "--load-store-vectorizer",
    "--reassociate",
    "--mergefunc",
    "--slp-vectorizer",
    "--lower-expect",
    "--slp-vectorizer",
    "--mergefunc",
    "--early-cse",
    "--loop-deletion",
    "--gvn-hoist",
    "--correlated-propagation",
    "--sroa",
    "--indvars",
    "--early-cse-memssa",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--loop-simplifycfg",
          "--loop-sink",
          "--strip-nondebug",
          "--lowerinvoke",
          "--mergeicmps",
          "--lower-widenable-condition",
          "--redundant-dbg-inst-elim",
          "--sccp",
          "--callsite-splitting",
          "--canonicalize-aliases",
          "--speculative-execution",
          "--loop-reroll",
          "--loop-load-elim",
          "--loop-guard-widening",
          "--strip-debug-declare",
          "--loop-versioning-licm",
          "--nary-reassociate",
          "--mem2reg",
          "--inject-tli-mappings",
          "--tailcallelim",
          "--instcombine",
          "--coro-split",
          "--loop-idiom",
          "--lower-matrix-intrinsics",
          "--partially-inline-libcalls",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--loop-simplifycfg",
      "--loop-sink",
      "--strip-nondebug",
      "--lowerinvoke",
      "--mergeicmps",
      "--lower-widenable-condition",
      "--redundant-dbg-inst-elim",
      "--sccp",
      "--callsite-splitting",
      "--canonicalize-aliases",
      "--speculative-execution",
      "--loop-reroll",
      "--loop-load-elim",
      "--loop-guard-widening",
      "--strip-debug-declare",
      "--loop-versioning-licm",
      "--nary-reassociate",
      "--mem2reg",
      "--inject-tli-mappings",
      "--tailcallelim",
      "--instcombine",
      "--coro-split",
      "--loop-idiom",
      "--lower-matrix-intrinsics",
      "--partially-inline-libcalls",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+8.0%"
  }
}