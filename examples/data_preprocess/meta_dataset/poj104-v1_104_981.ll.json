{
  "program_id": "poj104-v1_104_981.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 5,
    "returnInt": 5,
    "CriticalCount": 1,
    "NumEdges": 7,
    "const32Bit": 9,
    "const64Bit": 10,
    "numConstZeroes": 1,
    "numConstOnes": 7,
    "UncondBranches": 3,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 8,
    "NumBitCastInst": 10,
    "NumBrInst": 5,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 14,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 8,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 68,
    "TotalMemInst": 46,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 31
  },
  "baseline_oz_instcount": 37,
  "knowledge_base_entry": [
    "--break-crit-edges",
    "--gvn",
    "--newgvn",
    "--correlated-propagation",
    "--mergefunc",
    "--mem2reg",
    "--jump-threading",
    "--gvn",
    "--die",
    "--dse",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--simplifycfg",
    "--correlated-propagation",
    "--dse",
    "--dce",
    "--loop-instsimplify",
    "--newgvn",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--inline",
    "--instcombine",
    "--globalopt",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--instsimplify",
    "--lower-expect",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--sancov",
          "--strip-nondebug",
          "--loop-unroll",
          "--mergefunc",
          "--lower-expect",
          "--adce",
          "--ipconstprop",
          "--always-inline",
          "--inline",
          "--gvn",
          "--ee-instrument",
          "--coro-cleanup",
          "--loop-versioning",
          "--ipsccp",
          "--loop-rotate",
          "--loop-reroll",
          "--gvn-hoist",
          "--loop-interchange",
          "--separate-const-offset-from-gep",
          "--sroa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+18.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--sancov",
      "--strip-nondebug",
      "--loop-unroll",
      "--mergefunc",
      "--lower-expect",
      "--adce",
      "--ipconstprop",
      "--always-inline",
      "--inline",
      "--gvn",
      "--ee-instrument",
      "--coro-cleanup",
      "--loop-versioning",
      "--ipsccp",
      "--loop-rotate",
      "--loop-reroll",
      "--gvn-hoist",
      "--loop-interchange",
      "--separate-const-offset-from-gep",
      "--sroa"
    ],
    "performance_vs_Oz": "+18.9%"
  }
}