{
  "program_id": "tensorflow-v0_1720.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 6,
    "onePred": 41,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 27,
    "oneSuccessor": 18,
    "twoPred": 14,
    "twoPredOneSuc": 5,
    "twoEach": 6,
    "twoSuccessor": 36,
    "morePreds": 5,
    "BB03Phi": 8,
    "BBHiPhi": 0,
    "BBNoPhi": 56,
    "BeginPhi": 8,
    "BranchCount": 34,
    "returnInt": 0,
    "CriticalCount": 31,
    "NumEdges": 90,
    "const32Bit": 45,
    "const64Bit": 56,
    "numConstZeroes": 49,
    "numConstOnes": 15,
    "UncondBranches": 18,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 6,
    "NumAndInst": 5,
    "BlockMid": 2,
    "BlockLow": 62,
    "NumBitCastInst": 29,
    "NumBrInst": 34,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 26,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 13,
    "NumRetInst": 3,
    "NumSExtInst": 1,
    "NumSelectInst": 3,
    "NumShlInst": 1,
    "NumStoreInst": 7,
    "NumSubInst": 4,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 64,
    "TotalInsts": 271,
    "TotalMemInst": 124,
    "TotalFuncs": 26,
    "ArgsPhi": 30,
    "testUnary": 75
  },
  "baseline_oz_instcount": 268,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--inline",
    "--sccp",
    "--die",
    "--mem2reg",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--early-cse",
    "--newgvn",
    "--loop-simplifycfg",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-deletion",
          "--adce",
          "--insert-gcov-profiling",
          "--loop-versioning",
          "--loop-interchange",
          "--lowerinvoke",
          "--irce",
          "--always-inline",
          "--sancov",
          "--scalarizer",
          "--inline",
          "--slp-vectorizer",
          "--simplifycfg",
          "--newgvn",
          "--post-inline-ee-instrument",
          "--correlated-propagation",
          "--loop-versioning-licm",
          "--sink",
          "--simple-loop-unswitch",
          "--early-cse-memssa",
          "--early-cse",
          "--mergereturn",
          "--flattencfg",
          "--partially-inline-libcalls",
          "--loop-simplifycfg",
          "--cross-dso-cfi"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+26.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-deletion",
      "--adce",
      "--insert-gcov-profiling",
      "--loop-versioning",
      "--loop-interchange",
      "--lowerinvoke",
      "--irce",
      "--always-inline",
      "--sancov",
      "--scalarizer",
      "--inline",
      "--slp-vectorizer",
      "--simplifycfg",
      "--newgvn",
      "--post-inline-ee-instrument",
      "--correlated-propagation",
      "--loop-versioning-licm",
      "--sink",
      "--simple-loop-unswitch",
      "--early-cse-memssa",
      "--early-cse",
      "--mergereturn",
      "--flattencfg",
      "--partially-inline-libcalls",
      "--loop-simplifycfg",
      "--cross-dso-cfi"
    ],
    "performance_vs_Oz": "+26.5%"
  }
}