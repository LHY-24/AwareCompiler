{
  "program_id": "github-v0_17000.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 61,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 27,
    "oneSuccessor": 40,
    "twoPred": 12,
    "twoPredOneSuc": 6,
    "twoEach": 6,
    "twoSuccessor": 36,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 75,
    "BeginPhi": 2,
    "BranchCount": 76,
    "returnInt": 0,
    "CriticalCount": 13,
    "NumEdges": 112,
    "const32Bit": 110,
    "const64Bit": 30,
    "numConstZeroes": 37,
    "numConstOnes": 66,
    "UncondBranches": 40,
    "binaryConstArg": 57,
    "NumAShrInst": 0,
    "NumAddInst": 22,
    "NumAllocaInst": 17,
    "NumAndInst": 3,
    "BlockMid": 28,
    "BlockLow": 49,
    "NumBitCastInst": 2,
    "NumBrInst": 76,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 50,
    "NumLShrInst": 5,
    "NumLoadInst": 241,
    "NumMulInst": 3,
    "NumOrInst": 5,
    "NumPHIInst": 2,
    "NumRetInst": 1,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 81,
    "NumSubInst": 24,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 101,
    "TotalBlocks": 77,
    "TotalInsts": 748,
    "TotalMemInst": 418,
    "TotalFuncs": 1,
    "ArgsPhi": 4,
    "testUnary": 389
  },
  "baseline_oz_instcount": 749,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--gvn",
    "--reassociate",
    "--gvn",
    "--jump-threading",
    "--load-store-vectorizer",
    "--inline",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--attributor",
          "--div-rem-pairs",
          "--consthoist",
          "--coro-split",
          "--guard-widening",
          "--always-inline",
          "--constmerge",
          "--ee-instrument",
          "--partial-inliner",
          "--lower-widenable-condition",
          "--reassociate",
          "--barrier",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--attributor",
      "--div-rem-pairs",
      "--consthoist",
      "--coro-split",
      "--guard-widening",
      "--always-inline",
      "--constmerge",
      "--ee-instrument",
      "--partial-inliner",
      "--lower-widenable-condition",
      "--reassociate",
      "--barrier",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}