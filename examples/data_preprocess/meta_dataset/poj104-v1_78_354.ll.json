{
  "program_id": "poj104-v1_78_354.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 4,
    "oneSuccessor": 33,
    "twoPred": 22,
    "twoPredOneSuc": 1,
    "twoEach": 19,
    "twoSuccessor": 26,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 74,
    "BeginPhi": 0,
    "BranchCount": 59,
    "returnInt": 7,
    "CriticalCount": 19,
    "NumEdges": 85,
    "const32Bit": 66,
    "const64Bit": 20,
    "numConstZeroes": 12,
    "numConstOnes": 32,
    "UncondBranches": 33,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 27,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 70,
    "NumBitCastInst": 26,
    "NumBrInst": 59,
    "NumCallInst": 84,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 38,
    "NumLShrInst": 0,
    "NumLoadInst": 110,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 74,
    "TotalInsts": 432,
    "TotalMemInst": 263,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 176
  },
  "baseline_oz_instcount": 326,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--mem2reg",
    "--bdce",
    "--simplifycfg",
    "--elim-avail-extern",
    "--memcpyopt",
    "--gvn",
    "--loop-simplifycfg",
    "--jump-threading",
    "--simplifycfg",
    "--mldst-motion",
    "--inline",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--die",
    "--loop-instsimplify",
    "--dse",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--slsr",
    "--early-cse",
    "--mem2reg",
    "--ipsccp",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--always-inline",
          "--elim-avail-extern",
          "--loop-unroll",
          "--bdce",
          "--strip-nondebug",
          "--mem2reg",
          "--infer-address-spaces",
          "--inline",
          "--sroa",
          "--loop-reroll",
          "--load-store-vectorizer",
          "--correlated-propagation",
          "--lower-matrix-intrinsics",
          "--strip-dead-prototypes",
          "--loop-data-prefetch",
          "--inferattrs",
          "--loop-versioning",
          "--called-value-propagation",
          "--gvn-hoist",
          "--loop-idiom",
          "--redundant-dbg-inst-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+47.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--always-inline",
      "--elim-avail-extern",
      "--loop-unroll",
      "--bdce",
      "--strip-nondebug",
      "--mem2reg",
      "--infer-address-spaces",
      "--inline",
      "--sroa",
      "--loop-reroll",
      "--load-store-vectorizer",
      "--correlated-propagation",
      "--lower-matrix-intrinsics",
      "--strip-dead-prototypes",
      "--loop-data-prefetch",
      "--inferattrs",
      "--loop-versioning",
      "--called-value-propagation",
      "--gvn-hoist",
      "--loop-idiom",
      "--redundant-dbg-inst-elim"
    ],
    "performance_vs_Oz": "+47.2%"
  }
}