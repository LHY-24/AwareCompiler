{
  "program_id": "github-v0_29433.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 40,
    "const64Bit": 41,
    "numConstZeroes": 49,
    "numConstOnes": 21,
    "UncondBranches": 15,
    "binaryConstArg": 14,
    "NumAShrInst": 4,
    "NumAddInst": 10,
    "NumAllocaInst": 11,
    "NumAndInst": 4,
    "BlockMid": 3,
    "BlockLow": 24,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 18,
    "TotalBlocks": 27,
    "TotalInsts": 175,
    "TotalMemInst": 92,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 72
  },
  "baseline_oz_instcount": 175,
  "knowledge_base_entry": [
    "--globalopt",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--loop-reroll",
    "--memcpyopt",
    "--sroa",
    "--loop-rotate",
    "--gvn-hoist",
    "--instcombine",
    "--licm",
    "--loop-simplifycfg",
    "--early-cse",
    "--nary-reassociate",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-interchange",
          "--called-value-propagation",
          "--loweratomic",
          "--loop-distribute",
          "--sink",
          "--inferattrs",
          "--loop-data-prefetch",
          "--aggressive-instcombine",
          "--instnamer",
          "--memcpyopt",
          "--cross-dso-cfi",
          "--slp-vectorizer",
          "--bdce",
          "--tailcallelim",
          "--coro-early",
          "--mem2reg",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+10.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-interchange",
      "--called-value-propagation",
      "--loweratomic",
      "--loop-distribute",
      "--sink",
      "--inferattrs",
      "--loop-data-prefetch",
      "--aggressive-instcombine",
      "--instnamer",
      "--memcpyopt",
      "--cross-dso-cfi",
      "--slp-vectorizer",
      "--bdce",
      "--tailcallelim",
      "--coro-early",
      "--mem2reg",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+10.9%"
  }
}