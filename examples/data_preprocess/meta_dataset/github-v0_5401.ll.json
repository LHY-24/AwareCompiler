{
  "program_id": "github-v0_5401.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 96,
    "onePredOneSuc": 59,
    "onePredTwoSuc": 36,
    "oneSuccessor": 83,
    "twoPred": 40,
    "twoPredOneSuc": 18,
    "twoEach": 20,
    "twoSuccessor": 61,
    "morePreds": 9,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 146,
    "BeginPhi": 5,
    "BranchCount": 144,
    "returnInt": 9,
    "CriticalCount": 36,
    "NumEdges": 211,
    "const32Bit": 107,
    "const64Bit": 81,
    "numConstZeroes": 69,
    "numConstOnes": 83,
    "UncondBranches": 83,
    "binaryConstArg": 48,
    "NumAShrInst": 0,
    "NumAddInst": 23,
    "NumAllocaInst": 54,
    "NumAndInst": 12,
    "BlockMid": 12,
    "BlockLow": 139,
    "NumBitCastInst": 0,
    "NumBrInst": 144,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 61,
    "NumLShrInst": 0,
    "NumLoadInst": 223,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 5,
    "NumRetInst": 6,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 102,
    "NumSubInst": 16,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 42,
    "TotalBlocks": 151,
    "TotalInsts": 770,
    "TotalMemInst": 445,
    "TotalFuncs": 12,
    "ArgsPhi": 10,
    "testUnary": 332
  },
  "baseline_oz_instcount": 775,
  "knowledge_base_entry": [
    "--jump-threading",
    "--elim-avail-extern",
    "--adce",
    "--instsimplify",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-cleanup",
          "--slp-vectorizer",
          "--globalopt",
          "--inline",
          "--loop-unroll-and-jam",
          "--infer-address-spaces",
          "--div-rem-pairs",
          "--ipsccp",
          "--early-cse-memssa",
          "--lower-widenable-condition",
          "--coro-early",
          "--deadargelim",
          "--pgo-memop-opt",
          "--guard-widening",
          "--loweratomic",
          "--adce",
          "--ipconstprop",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-cleanup",
      "--slp-vectorizer",
      "--globalopt",
      "--inline",
      "--loop-unroll-and-jam",
      "--infer-address-spaces",
      "--div-rem-pairs",
      "--ipsccp",
      "--early-cse-memssa",
      "--lower-widenable-condition",
      "--coro-early",
      "--deadargelim",
      "--pgo-memop-opt",
      "--guard-widening",
      "--loweratomic",
      "--adce",
      "--ipconstprop",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}