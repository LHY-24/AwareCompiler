{
  "program_id": "linux-v0_12890.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 76,
    "onePredOneSuc": 67,
    "onePredTwoSuc": 8,
    "oneSuccessor": 75,
    "twoPred": 18,
    "twoPredOneSuc": 8,
    "twoEach": 5,
    "twoSuccessor": 21,
    "morePreds": 14,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 138,
    "BeginPhi": 0,
    "BranchCount": 96,
    "returnInt": 36,
    "CriticalCount": 15,
    "NumEdges": 165,
    "const32Bit": 438,
    "const64Bit": 20,
    "numConstZeroes": 152,
    "numConstOnes": 170,
    "UncondBranches": 75,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 113,
    "NumAndInst": 8,
    "BlockMid": 16,
    "BlockLow": 122,
    "NumBitCastInst": 12,
    "NumBrInst": 96,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 83,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 285,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 30,
    "NumSExtInst": 8,
    "NumSelectInst": 2,
    "NumShlInst": 6,
    "NumStoreInst": 209,
    "NumSubInst": 2,
    "NumTruncInst": 14,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 138,
    "TotalInsts": 967,
    "TotalMemInst": 746,
    "TotalFuncs": 41,
    "ArgsPhi": 0,
    "testUnary": 435
  },
  "baseline_oz_instcount": 966,
  "knowledge_base_entry": [
    "--scalarizer",
    "--instcombine",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--newgvn",
    "--globalopt",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--newgvn",
    "--ipsccp",
    "--newgvn",
    "--bdce",
    "--loop-instsimplify",
    "--lower-expect",
    "--aggressive-instcombine",
    "--dse",
    "--mergefunc",
    "--slp-vectorizer",
    "--jump-threading",
    "--loop-deletion",
    "--newgvn",
    "--slp-vectorizer",
    "--gvn",
    "--licm",
    "--gvn",
    "--elim-avail-extern",
    "--ipsccp",
    "--mem2reg",
    "--flattencfg",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loweratomic",
          "--always-inline",
          "--lower-expect",
          "--separate-const-offset-from-gep",
          "--flattencfg",
          "--ipconstprop",
          "--aggressive-instcombine",
          "--adce",
          "--constmerge",
          "--canonicalize-aliases",
          "--functionattrs",
          "--irce",
          "--inline",
          "--slsr",
          "--simple-loop-unswitch",
          "--loop-distribute",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loweratomic",
      "--always-inline",
      "--lower-expect",
      "--separate-const-offset-from-gep",
      "--flattencfg",
      "--ipconstprop",
      "--aggressive-instcombine",
      "--adce",
      "--constmerge",
      "--canonicalize-aliases",
      "--functionattrs",
      "--irce",
      "--inline",
      "--slsr",
      "--simple-loop-unswitch",
      "--loop-distribute",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}