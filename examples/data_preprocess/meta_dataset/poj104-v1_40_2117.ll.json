{
  "program_id": "poj104-v1_40_2117.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 0,
    "oneSuccessor": 6,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 14,
    "CriticalCount": 0,
    "NumEdges": 14,
    "const32Bit": 98,
    "const64Bit": 26,
    "numConstZeroes": 25,
    "numConstOnes": 62,
    "UncondBranches": 6,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 59,
    "NumAndInst": 1,
    "BlockMid": 8,
    "BlockLow": 31,
    "NumBitCastInst": 38,
    "NumBrInst": 10,
    "NumCallInst": 69,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 109,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 28,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 58,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 1,
    "TotalBlocks": 39,
    "TotalInsts": 442,
    "TotalMemInst": 320,
    "TotalFuncs": 45,
    "ArgsPhi": 0,
    "testUnary": 209
  },
  "baseline_oz_instcount": 125,
  "knowledge_base_entry": [
    "--reg2mem",
    "--gvn",
    "--instcombine",
    "--elim-avail-extern",
    "--mem2reg",
    "--instsimplify",
    "--mldst-motion",
    "--gvn",
    "--indvars",
    "--simplifycfg",
    "--bdce",
    "--gvn-hoist",
    "--memcpyopt",
    "--jump-threading",
    "--globalopt",
    "--gvn-hoist",
    "--inline",
    "--instcombine",
    "--loop-rotate",
    "--early-cse-memssa",
    "--flattencfg",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-predication",
          "--constmerge",
          "--loop-fusion",
          "--attributor",
          "--loweratomic",
          "--sroa",
          "--elim-avail-extern",
          "--scalarizer",
          "--lcssa",
          "--separate-const-offset-from-gep",
          "--coro-early",
          "--newgvn",
          "--loop-interchange",
          "--slp-vectorizer",
          "--coro-cleanup",
          "--loop-versioning-licm",
          "--globalopt",
          "--loop-deletion",
          "--correlated-propagation",
          "--tailcallelim",
          "--reassociate",
          "--argpromotion",
          "--loop-simplifycfg",
          "--guard-widening",
          "--mergefunc",
          "--infer-address-spaces",
          "--loop-idiom",
          "--libcalls-shrinkwrap"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-predication",
      "--constmerge",
      "--loop-fusion",
      "--attributor",
      "--loweratomic",
      "--sroa",
      "--elim-avail-extern",
      "--scalarizer",
      "--lcssa",
      "--separate-const-offset-from-gep",
      "--coro-early",
      "--newgvn",
      "--loop-interchange",
      "--slp-vectorizer",
      "--coro-cleanup",
      "--loop-versioning-licm",
      "--globalopt",
      "--loop-deletion",
      "--correlated-propagation",
      "--tailcallelim",
      "--reassociate",
      "--argpromotion",
      "--loop-simplifycfg",
      "--guard-widening",
      "--mergefunc",
      "--infer-address-spaces",
      "--loop-idiom",
      "--libcalls-shrinkwrap"
    ],
    "performance_vs_Oz": "+5.6%"
  }
}