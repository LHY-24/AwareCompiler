{
  "program_id": "linux-v0_5306.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 51,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 12,
    "oneSuccessor": 45,
    "twoPred": 15,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 24,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 103,
    "BeginPhi": 0,
    "BranchCount": 69,
    "returnInt": 18,
    "CriticalCount": 12,
    "NumEdges": 103,
    "const32Bit": 359,
    "const64Bit": 42,
    "numConstZeroes": 176,
    "numConstOnes": 131,
    "UncondBranches": 45,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 85,
    "NumAndInst": 6,
    "BlockMid": 12,
    "BlockLow": 91,
    "NumBitCastInst": 33,
    "NumBrInst": 69,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 117,
    "NumICmpInst": 26,
    "NumLShrInst": 4,
    "NumLoadInst": 262,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 32,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 139,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 6,
    "NumZExtInst": 14,
    "TotalBlocks": 103,
    "TotalInsts": 886,
    "TotalMemInst": 666,
    "TotalFuncs": 42,
    "ArgsPhi": 0,
    "testUnary": 412
  },
  "baseline_oz_instcount": 885,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--jump-threading",
    "--nary-reassociate",
    "--licm",
    "--lower-expect",
    "--ipsccp",
    "--aggressive-instcombine",
    "--dse",
    "--gvn",
    "--inline",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--ipsccp",
    "--aggressive-instcombine",
    "--instsimplify",
    "--licm",
    "--loop-rotate",
    "--instsimplify",
    "--reassociate",
    "--early-cse-memssa",
    "--sccp",
    "--lower-expect",
    "--simplifycfg",
    "--loop-rotate",
    "--instsimplify",
    "--loop-rotate",
    "--mem2reg",
    "--early-cse",
    "--load-store-vectorizer",
    "--inline",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--ipsccp",
    "--aggressive-instcombine",
    "--instsimplify",
    "--licm",
    "--loop-rotate",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--indvars",
          "--add-discriminators",
          "--coro-elide",
          "--cross-dso-cfi",
          "--callsite-splitting",
          "--ipsccp",
          "--adce",
          "--aggressive-instcombine",
          "--instsimplify",
          "--scalarizer",
          "--early-cse-memssa",
          "--lower-expect",
          "--mergeicmps",
          "--infer-address-spaces",
          "--ee-instrument",
          "--sccp",
          "--gvn",
          "--prune-eh",
          "--canonicalize-aliases",
          "--lowerinvoke",
          "--loweratomic",
          "--loop-unswitch",
          "--inline",
          "--mergefunc",
          "--nary-reassociate",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--indvars",
      "--add-discriminators",
      "--coro-elide",
      "--cross-dso-cfi",
      "--callsite-splitting",
      "--ipsccp",
      "--adce",
      "--aggressive-instcombine",
      "--instsimplify",
      "--scalarizer",
      "--early-cse-memssa",
      "--lower-expect",
      "--mergeicmps",
      "--infer-address-spaces",
      "--ee-instrument",
      "--sccp",
      "--gvn",
      "--prune-eh",
      "--canonicalize-aliases",
      "--lowerinvoke",
      "--loweratomic",
      "--loop-unswitch",
      "--inline",
      "--mergefunc",
      "--nary-reassociate",
      "--coro-split"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}