{
  "program_id": "linux-v0_5920.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 41,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 9,
    "oneSuccessor": 37,
    "twoPred": 16,
    "twoPredOneSuc": 4,
    "twoEach": 9,
    "twoSuccessor": 22,
    "morePreds": 2,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 6,
    "BranchCount": 59,
    "returnInt": 3,
    "CriticalCount": 3,
    "NumEdges": 81,
    "const32Bit": 206,
    "const64Bit": 5,
    "numConstZeroes": 96,
    "numConstOnes": 34,
    "UncondBranches": 37,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 25,
    "NumAndInst": 3,
    "BlockMid": 6,
    "BlockLow": 60,
    "NumBitCastInst": 16,
    "NumBrInst": 59,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 80,
    "NumICmpInst": 21,
    "NumLShrInst": 1,
    "NumLoadInst": 156,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 6,
    "NumRetInst": 7,
    "NumSExtInst": 3,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 54,
    "NumSubInst": 0,
    "NumTruncInst": 17,
    "NumXorInst": 3,
    "NumZExtInst": 19,
    "TotalBlocks": 66,
    "TotalInsts": 493,
    "TotalMemInst": 334,
    "TotalFuncs": 15,
    "ArgsPhi": 12,
    "testUnary": 236
  },
  "baseline_oz_instcount": 493,
  "knowledge_base_entry": [
    "--prune-eh",
    "--jump-threading",
    "--dce",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--lower-expect",
    "--slp-vectorizer",
    "--mem2reg",
    "--simplifycfg",
    "--early-cse",
    "--ipsccp",
    "--inline",
    "--gvn",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--adce",
          "--globalopt",
          "--ipconstprop",
          "--loop-instsimplify",
          "--bdce",
          "--simplifycfg",
          "--consthoist",
          "--sroa",
          "--sancov",
          "--instnamer",
          "--coro-cleanup",
          "--strip-debug-declare",
          "--aggressive-instcombine",
          "--loop-rotate",
          "--loop-deletion",
          "--lower-widenable-condition",
          "--infer-address-spaces",
          "--ipsccp",
          "--post-inline-ee-instrument",
          "--load-store-vectorizer",
          "--gvn",
          "--indvars",
          "--coro-elide",
          "--gvn-hoist",
          "--loop-unroll-and-jam",
          "--sink",
          "--lowerswitch",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--adce",
      "--globalopt",
      "--ipconstprop",
      "--loop-instsimplify",
      "--bdce",
      "--simplifycfg",
      "--consthoist",
      "--sroa",
      "--sancov",
      "--instnamer",
      "--coro-cleanup",
      "--strip-debug-declare",
      "--aggressive-instcombine",
      "--loop-rotate",
      "--loop-deletion",
      "--lower-widenable-condition",
      "--infer-address-spaces",
      "--ipsccp",
      "--post-inline-ee-instrument",
      "--load-store-vectorizer",
      "--gvn",
      "--indvars",
      "--coro-elide",
      "--gvn-hoist",
      "--loop-unroll-and-jam",
      "--sink",
      "--lowerswitch",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}