{
  "program_id": "linux-v0_1637.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 2,
    "oneSuccessor": 14,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 4,
    "CriticalCount": 4,
    "NumEdges": 28,
    "const32Bit": 79,
    "const64Bit": 7,
    "numConstZeroes": 32,
    "numConstOnes": 42,
    "UncondBranches": 14,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 28,
    "NumAndInst": 1,
    "BlockMid": 4,
    "BlockLow": 27,
    "NumBitCastInst": 5,
    "NumBrInst": 21,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 47,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 39,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 6,
    "NumZExtInst": 4,
    "TotalBlocks": 31,
    "TotalInsts": 217,
    "TotalMemInst": 155,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 87
  },
  "baseline_oz_instcount": 217,
  "knowledge_base_entry": [
    "--flattencfg",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--simplifycfg",
    "--early-cse-memssa",
    "--lower-expect",
    "--mem2reg",
    "--ipsccp",
    "--die",
    "--inline",
    "--prune-eh",
    "--jump-threading",
    "--early-cse",
    "--die",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--flattencfg",
          "--canonicalize-aliases",
          "--licm",
          "--loop-interchange",
          "--nary-reassociate",
          "--loop-simplify",
          "--constprop",
          "--mergefunc",
          "--hotcoldsplit",
          "--add-discriminators",
          "--pgo-memop-opt",
          "--die",
          "--callsite-splitting",
          "--strip-nondebug",
          "--lower-matrix-intrinsics",
          "--loop-simplifycfg",
          "--newgvn",
          "--load-store-vectorizer",
          "--lower-expect",
          "--partial-inliner",
          "--loop-data-prefetch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--flattencfg",
      "--canonicalize-aliases",
      "--licm",
      "--loop-interchange",
      "--nary-reassociate",
      "--loop-simplify",
      "--constprop",
      "--mergefunc",
      "--hotcoldsplit",
      "--add-discriminators",
      "--pgo-memop-opt",
      "--die",
      "--callsite-splitting",
      "--strip-nondebug",
      "--lower-matrix-intrinsics",
      "--loop-simplifycfg",
      "--newgvn",
      "--load-store-vectorizer",
      "--lower-expect",
      "--partial-inliner",
      "--loop-data-prefetch"
    ],
    "performance_vs_Oz": "+3.2%"
  }
}