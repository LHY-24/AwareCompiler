{
  "program_id": "github-v0_14175.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 2,
    "oneSuccessor": 25,
    "twoPred": 14,
    "twoPredOneSuc": 2,
    "twoEach": 9,
    "twoSuccessor": 14,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 11,
    "CriticalCount": 3,
    "NumEdges": 53,
    "const32Bit": 120,
    "const64Bit": 23,
    "numConstZeroes": 36,
    "numConstOnes": 84,
    "UncondBranches": 25,
    "binaryConstArg": 48,
    "NumAShrInst": 7,
    "NumAddInst": 18,
    "NumAllocaInst": 49,
    "NumAndInst": 9,
    "BlockMid": 14,
    "BlockLow": 39,
    "NumBitCastInst": 8,
    "NumBrInst": 39,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 39,
    "NumICmpInst": 14,
    "NumLShrInst": 3,
    "NumLoadInst": 130,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 21,
    "NumSelectInst": 0,
    "NumShlInst": 12,
    "NumStoreInst": 96,
    "NumSubInst": 6,
    "NumTruncInst": 22,
    "NumXorInst": 2,
    "NumZExtInst": 31,
    "TotalBlocks": 53,
    "TotalInsts": 545,
    "TotalMemInst": 338,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 261
  },
  "baseline_oz_instcount": 545,
  "knowledge_base_entry": [
    "--reassociate",
    "--loop-simplifycfg",
    "--lower-expect",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--loweratomic",
    "--ipsccp",
    "--loop-simplifycfg",
    "--mergefunc",
    "--flattencfg",
    "--globalopt",
    "--reassociate",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--mergereturn",
          "--constprop",
          "--loop-simplify",
          "--early-cse-memssa",
          "--gvn-hoist",
          "--dce",
          "--irce",
          "--post-inline-ee-instrument",
          "--lower-constant-intrinsics",
          "--load-store-vectorizer",
          "--aggressive-instcombine",
          "--coro-early",
          "--mergefunc",
          "--globalsplit",
          "--loop-vectorize",
          "--insert-gcov-profiling",
          "--div-rem-pairs",
          "--strip-debug-declare",
          "--slp-vectorizer",
          "--coro-split",
          "--lower-guard-intrinsic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--mergereturn",
      "--constprop",
      "--loop-simplify",
      "--early-cse-memssa",
      "--gvn-hoist",
      "--dce",
      "--irce",
      "--post-inline-ee-instrument",
      "--lower-constant-intrinsics",
      "--load-store-vectorizer",
      "--aggressive-instcombine",
      "--coro-early",
      "--mergefunc",
      "--globalsplit",
      "--loop-vectorize",
      "--insert-gcov-profiling",
      "--div-rem-pairs",
      "--strip-debug-declare",
      "--slp-vectorizer",
      "--coro-split",
      "--lower-guard-intrinsic"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}