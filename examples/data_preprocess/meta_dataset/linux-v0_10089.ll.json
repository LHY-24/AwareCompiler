{
  "program_id": "linux-v0_10089.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 5,
    "CriticalCount": 0,
    "NumEdges": 4,
    "const32Bit": 21,
    "const64Bit": 6,
    "numConstZeroes": 5,
    "numConstOnes": 13,
    "UncondBranches": 2,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 11,
    "NumAndInst": 1,
    "BlockMid": 2,
    "BlockLow": 7,
    "NumBitCastInst": 2,
    "NumBrInst": 3,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 20,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 9,
    "TotalInsts": 87,
    "TotalMemInst": 61,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 42
  },
  "baseline_oz_instcount": 87,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--flattencfg",
    "--licm",
    "--jump-threading",
    "--mldst-motion",
    "--gvn-hoist",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--die",
    "--correlated-propagation",
    "--newgvn",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--mergeicmps",
          "--coro-elide",
          "--instcombine",
          "--callsite-splitting",
          "--globaldce",
          "--loop-versioning-licm",
          "--inferattrs",
          "--loop-rotate",
          "--loop-versioning",
          "--libcalls-shrinkwrap",
          "--always-inline",
          "--rpo-functionattrs",
          "--alignment-from-assumptions",
          "--aggressive-instcombine",
          "--instsimplify",
          "--argpromotion",
          "--early-cse",
          "--globalopt",
          "--loop-fusion",
          "--add-discriminators",
          "--instnamer",
          "--name-anon-globals",
          "--load-store-vectorizer",
          "--lower-widenable-condition",
          "--insert-gcov-profiling",
          "--simple-loop-unswitch",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--mergeicmps",
      "--coro-elide",
      "--instcombine",
      "--callsite-splitting",
      "--globaldce",
      "--loop-versioning-licm",
      "--inferattrs",
      "--loop-rotate",
      "--loop-versioning",
      "--libcalls-shrinkwrap",
      "--always-inline",
      "--rpo-functionattrs",
      "--alignment-from-assumptions",
      "--aggressive-instcombine",
      "--instsimplify",
      "--argpromotion",
      "--early-cse",
      "--globalopt",
      "--loop-fusion",
      "--add-discriminators",
      "--instnamer",
      "--name-anon-globals",
      "--load-store-vectorizer",
      "--lower-widenable-condition",
      "--insert-gcov-profiling",
      "--simple-loop-unswitch",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+2.3%"
  }
}