{
  "program_id": "github-v0_47123.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 58,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 7,
    "oneSuccessor": 52,
    "twoPred": 23,
    "twoPredOneSuc": 3,
    "twoEach": 14,
    "twoSuccessor": 26,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 91,
    "BeginPhi": 2,
    "BranchCount": 78,
    "returnInt": 42,
    "CriticalCount": 3,
    "NumEdges": 104,
    "const32Bit": 318,
    "const64Bit": 28,
    "numConstZeroes": 149,
    "numConstOnes": 137,
    "UncondBranches": 52,
    "binaryConstArg": 39,
    "NumAShrInst": 0,
    "NumAddInst": 21,
    "NumAllocaInst": 86,
    "NumAndInst": 0,
    "BlockMid": 20,
    "BlockLow": 73,
    "NumBitCastInst": 11,
    "NumBrInst": 78,
    "NumCallInst": 72,
    "NumGetElementPtrInst": 141,
    "NumICmpInst": 30,
    "NumLShrInst": 0,
    "NumLoadInst": 291,
    "NumMulInst": 8,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 12,
    "NumSExtInst": 48,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 138,
    "NumSubInst": 11,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 93,
    "TotalInsts": 957,
    "TotalMemInst": 728,
    "TotalFuncs": 25,
    "ArgsPhi": 4,
    "testUnary": 441
  },
  "baseline_oz_instcount": 957,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--lower-expect",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--early-cse",
    "--slsr",
    "--indvars",
    "--nary-reassociate",
    "--early-cse",
    "--globalopt",
    "--mem2reg",
    "--jump-threading",
    "--loop-rotate",
    "--inline",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--sccp",
    "--reassociate",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instcombine",
          "--name-anon-globals",
          "--globalsplit",
          "--coro-split",
          "--canonicalize-aliases",
          "--inferattrs",
          "--lower-matrix-intrinsics",
          "--simple-loop-unswitch",
          "--loop-fusion",
          "--tailcallelim",
          "--partial-inliner",
          "--newgvn",
          "--callsite-splitting",
          "--memcpyopt",
          "--globalopt",
          "--hotcoldsplit",
          "--adce",
          "--loop-simplify",
          "--lower-widenable-condition",
          "--rewrite-statepoints-for-gc",
          "--loop-unroll",
          "--aggressive-instcombine",
          "--argpromotion",
          "--loop-unroll-and-jam",
          "--lcssa",
          "--jump-threading",
          "--attributor",
          "--alignment-from-assumptions",
          "--sink",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instcombine",
      "--name-anon-globals",
      "--globalsplit",
      "--coro-split",
      "--canonicalize-aliases",
      "--inferattrs",
      "--lower-matrix-intrinsics",
      "--simple-loop-unswitch",
      "--loop-fusion",
      "--tailcallelim",
      "--partial-inliner",
      "--newgvn",
      "--callsite-splitting",
      "--memcpyopt",
      "--globalopt",
      "--hotcoldsplit",
      "--adce",
      "--loop-simplify",
      "--lower-widenable-condition",
      "--rewrite-statepoints-for-gc",
      "--loop-unroll",
      "--aggressive-instcombine",
      "--argpromotion",
      "--loop-unroll-and-jam",
      "--lcssa",
      "--jump-threading",
      "--attributor",
      "--alignment-from-assumptions",
      "--sink",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}