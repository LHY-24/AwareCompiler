{
  "program_id": "linux-v0_6993.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 58,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 30,
    "oneSuccessor": 42,
    "twoPred": 20,
    "twoPredOneSuc": 12,
    "twoEach": 7,
    "twoSuccessor": 42,
    "morePreds": 6,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 91,
    "BeginPhi": 2,
    "BranchCount": 84,
    "returnInt": 20,
    "CriticalCount": 28,
    "NumEdges": 126,
    "const32Bit": 133,
    "const64Bit": 60,
    "numConstZeroes": 103,
    "numConstOnes": 66,
    "UncondBranches": 42,
    "binaryConstArg": 7,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 45,
    "NumAndInst": 2,
    "BlockMid": 6,
    "BlockLow": 87,
    "NumBitCastInst": 16,
    "NumBrInst": 84,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 57,
    "NumICmpInst": 31,
    "NumLShrInst": 0,
    "NumLoadInst": 128,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 9,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 70,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 93,
    "TotalInsts": 490,
    "TotalMemInst": 330,
    "TotalFuncs": 20,
    "ArgsPhi": 4,
    "testUnary": 199
  },
  "baseline_oz_instcount": 481,
  "knowledge_base_entry": [
    "--globalopt",
    "--aggressive-instcombine",
    "--licm",
    "--sroa",
    "--slp-vectorizer",
    "--instsimplify",
    "--jump-threading",
    "--sccp",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--add-discriminators",
          "--called-value-propagation",
          "--strip-nondebug",
          "--partially-inline-libcalls",
          "--infer-address-spaces",
          "--ipsccp",
          "--lower-constant-intrinsics",
          "--loop-instsimplify",
          "--tailcallelim",
          "--dse",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--add-discriminators",
      "--called-value-propagation",
      "--strip-nondebug",
      "--partially-inline-libcalls",
      "--infer-address-spaces",
      "--ipsccp",
      "--lower-constant-intrinsics",
      "--loop-instsimplify",
      "--tailcallelim",
      "--dse",
      "--globaldce"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}