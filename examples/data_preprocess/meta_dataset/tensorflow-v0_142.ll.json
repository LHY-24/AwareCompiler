{
  "program_id": "tensorflow-v0_142.ll",
  "autophase_features": {
    "BBNumArgsHi": 6,
    "BBNumArgsLo": 9,
    "onePred": 88,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 41,
    "oneSuccessor": 56,
    "twoPred": 45,
    "twoPredOneSuc": 11,
    "twoEach": 26,
    "twoSuccessor": 78,
    "morePreds": 9,
    "BB03Phi": 15,
    "BBHiPhi": 0,
    "BBNoPhi": 134,
    "BeginPhi": 15,
    "BranchCount": 111,
    "returnInt": 0,
    "CriticalCount": 68,
    "NumEdges": 212,
    "const32Bit": 163,
    "const64Bit": 151,
    "numConstZeroes": 195,
    "numConstOnes": 51,
    "UncondBranches": 56,
    "binaryConstArg": 46,
    "NumAShrInst": 9,
    "NumAddInst": 6,
    "NumAllocaInst": 9,
    "NumAndInst": 14,
    "BlockMid": 3,
    "BlockLow": 146,
    "NumBitCastInst": 46,
    "NumBrInst": 111,
    "NumCallInst": 69,
    "NumGetElementPtrInst": 85,
    "NumICmpInst": 54,
    "NumLShrInst": 6,
    "NumLoadInst": 90,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 28,
    "NumRetInst": 7,
    "NumSExtInst": 1,
    "NumSelectInst": 2,
    "NumShlInst": 3,
    "NumStoreInst": 25,
    "NumSubInst": 15,
    "NumTruncInst": 0,
    "NumXorInst": 6,
    "NumZExtInst": 1,
    "TotalBlocks": 149,
    "TotalInsts": 687,
    "TotalMemInst": 301,
    "TotalFuncs": 28,
    "ArgsPhi": 72,
    "testUnary": 197
  },
  "baseline_oz_instcount": 679,
  "knowledge_base_entry": [
    "--gvn",
    "--reassociate",
    "--jump-threading",
    "--dse",
    "--bdce",
    "--mem2reg",
    "--nary-reassociate",
    "--loop-fusion",
    "--loop-reroll",
    "--newgvn",
    "--newgvn",
    "--licm",
    "--inline",
    "--instsimplify",
    "--mem2reg",
    "--instsimplify",
    "--nary-reassociate",
    "--gvn",
    "--early-cse-memssa",
    "--mergefunc",
    "--jump-threading",
    "--instcombine",
    "--early-cse",
    "--early-cse",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--coro-cleanup",
          "--adce",
          "--coro-early",
          "--mem2reg",
          "--lowerinvoke",
          "--loop-versioning",
          "--mergereturn",
          "--indvars",
          "--always-inline",
          "--gvn",
          "--sink",
          "--deadargelim",
          "--loop-predication",
          "--called-value-propagation",
          "--gvn-hoist",
          "--redundant-dbg-inst-elim",
          "--loop-unroll",
          "--loop-instsimplify",
          "--lower-widenable-condition",
          "--memcpyopt",
          "--globaldce",
          "--lower-matrix-intrinsics",
          "--mergefunc",
          "--globalopt",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+28.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--coro-cleanup",
      "--adce",
      "--coro-early",
      "--mem2reg",
      "--lowerinvoke",
      "--loop-versioning",
      "--mergereturn",
      "--indvars",
      "--always-inline",
      "--gvn",
      "--sink",
      "--deadargelim",
      "--loop-predication",
      "--called-value-propagation",
      "--gvn-hoist",
      "--redundant-dbg-inst-elim",
      "--loop-unroll",
      "--loop-instsimplify",
      "--lower-widenable-condition",
      "--memcpyopt",
      "--globaldce",
      "--lower-matrix-intrinsics",
      "--mergefunc",
      "--globalopt",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+28.7%"
  }
}