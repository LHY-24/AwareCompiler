{
  "program_id": "linux-v0_3798.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 65,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 19,
    "oneSuccessor": 63,
    "twoPred": 18,
    "twoPredOneSuc": 10,
    "twoEach": 1,
    "twoSuccessor": 22,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 103,
    "BeginPhi": 2,
    "BranchCount": 85,
    "returnInt": 15,
    "CriticalCount": 16,
    "NumEdges": 107,
    "const32Bit": 318,
    "const64Bit": 22,
    "numConstZeroes": 192,
    "numConstOnes": 94,
    "UncondBranches": 63,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 65,
    "NumAndInst": 12,
    "BlockMid": 8,
    "BlockLow": 97,
    "NumBitCastInst": 32,
    "NumBrInst": 85,
    "NumCallInst": 60,
    "NumGetElementPtrInst": 112,
    "NumICmpInst": 29,
    "NumLShrInst": 5,
    "NumLoadInst": 179,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 20,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 69,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 11,
    "NumZExtInst": 17,
    "TotalBlocks": 105,
    "TotalInsts": 710,
    "TotalMemInst": 485,
    "TotalFuncs": 42,
    "ArgsPhi": 4,
    "testUnary": 301
  },
  "baseline_oz_instcount": 710,
  "knowledge_base_entry": [
    "--mergefunc",
    "--loop-reroll",
    "-loop-reduce",
    "--early-cse",
    "--correlated-propagation",
    "--sroa",
    "--instcombine",
    "--inline",
    "--early-cse-memssa",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--gvn",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-reroll",
          "--partial-inliner",
          "--elim-avail-extern",
          "--newgvn",
          "--loop-simplify",
          "--prune-eh",
          "--dse",
          "--barrier",
          "--instcombine",
          "--reassociate",
          "--name-anon-globals",
          "--loop-load-elim",
          "--correlated-propagation",
          "--mergefunc",
          "--coro-split",
          "--lcssa",
          "-loop-reduce",
          "--nary-reassociate",
          "--lower-widenable-condition",
          "--loop-deletion",
          "--guard-widening",
          "--loop-data-prefetch",
          "--ee-instrument",
          "--memcpyopt",
          "--alignment-from-assumptions",
          "--add-discriminators",
          "--div-rem-pairs",
          "--adce",
          "--loop-fusion",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-reroll",
      "--partial-inliner",
      "--elim-avail-extern",
      "--newgvn",
      "--loop-simplify",
      "--prune-eh",
      "--dse",
      "--barrier",
      "--instcombine",
      "--reassociate",
      "--name-anon-globals",
      "--loop-load-elim",
      "--correlated-propagation",
      "--mergefunc",
      "--coro-split",
      "--lcssa",
      "-loop-reduce",
      "--nary-reassociate",
      "--lower-widenable-condition",
      "--loop-deletion",
      "--guard-widening",
      "--loop-data-prefetch",
      "--ee-instrument",
      "--memcpyopt",
      "--alignment-from-assumptions",
      "--add-discriminators",
      "--div-rem-pairs",
      "--adce",
      "--loop-fusion",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}