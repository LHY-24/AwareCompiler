{
  "program_id": "github-v0_10260.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 14,
    "onePred": 25,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 1,
    "oneSuccessor": 25,
    "twoPred": 27,
    "twoPredOneSuc": 4,
    "twoEach": 22,
    "twoSuccessor": 27,
    "morePreds": 0,
    "BB03Phi": 15,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 15,
    "BranchCount": 52,
    "returnInt": 8,
    "CriticalCount": 29,
    "NumEdges": 79,
    "const32Bit": 172,
    "const64Bit": 39,
    "numConstZeroes": 54,
    "numConstOnes": 39,
    "UncondBranches": 25,
    "binaryConstArg": 121,
    "NumAShrInst": 5,
    "NumAddInst": 153,
    "NumAllocaInst": 0,
    "NumAndInst": 3,
    "BlockMid": 20,
    "BlockLow": 37,
    "NumBitCastInst": 0,
    "NumBrInst": 52,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 115,
    "NumICmpInst": 47,
    "NumLShrInst": 0,
    "NumLoadInst": 74,
    "NumMulInst": 37,
    "NumOrInst": 8,
    "NumPHIInst": 18,
    "NumRetInst": 5,
    "NumSExtInst": 93,
    "NumSelectInst": 18,
    "NumShlInst": 26,
    "NumStoreInst": 43,
    "NumSubInst": 35,
    "NumTruncInst": 8,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 57,
    "TotalInsts": 771,
    "TotalMemInst": 259,
    "TotalFuncs": 8,
    "ArgsPhi": 36,
    "testUnary": 175
  },
  "baseline_oz_instcount": 771,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--sroa",
    "--mem2reg",
    "--dce",
    "--newgvn",
    "--aggressive-instcombine",
    "--dse",
    "--nary-reassociate",
    "--sroa",
    "--lower-expect",
    "--reassociate",
    "--die",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--gvn-hoist",
    "--instsimplify",
    "--sccp",
    "--gvn-hoist",
    "--correlated-propagation",
    "--gvn-hoist",
    "--loop-reroll",
    "--slsr",
    "--simplifycfg",
    "--jump-threading",
    "--mldst-motion",
    "--instsimplify",
    "--mergefunc",
    "--instsimplify",
    "--sccp",
    "--gvn-hoist",
    "--correlated-propagation",
    "--gvn-hoist",
    "--loop-reroll",
    "--slsr",
    "--simplifycfg",
    "--jump-threading",
    "--mldst-motion",
    "--instsimplify",
    "--mergefunc",
    "--adce",
    "--aggressive-instcombine",
    "--instsimplify",
    "--gvn",
    "--sccp",
    "--instcombine",
    "--nary-reassociate",
    "--jump-threading",
    "--mergefunc",
    "--instsimplify",
    "--aggressive-instcombine",
    "--bdce",
    "--loop-simplifycfg",
    "--gvn",
    "--prune-eh",
    "--lower-expect",
    "--correlated-propagation",
    "--gvn-hoist",
    "--loop-reroll",
    "--slsr",
    "--simplifycfg",
    "--jump-threading",
    "--mldst-motion",
    "--instsimplify",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--loop-reroll",
          "--loop-data-prefetch",
          "--simplifycfg",
          "--bdce",
          "--constmerge",
          "--licm",
          "--lower-expect",
          "--partial-inliner",
          "--post-inline-ee-instrument",
          "--loop-load-elim",
          "--argpromotion",
          "--loop-unroll",
          "--infer-address-spaces",
          "--nary-reassociate",
          "--canonicalize-aliases",
          "--loop-fusion",
          "--instcombine",
          "--libcalls-shrinkwrap",
          "--ipconstprop",
          "--slsr",
          "--always-inline",
          "--sancov",
          "--consthoist",
          "--inject-tli-mappings",
          "--jump-threading"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--loop-reroll",
      "--loop-data-prefetch",
      "--simplifycfg",
      "--bdce",
      "--constmerge",
      "--licm",
      "--lower-expect",
      "--partial-inliner",
      "--post-inline-ee-instrument",
      "--loop-load-elim",
      "--argpromotion",
      "--loop-unroll",
      "--infer-address-spaces",
      "--nary-reassociate",
      "--canonicalize-aliases",
      "--loop-fusion",
      "--instcombine",
      "--libcalls-shrinkwrap",
      "--ipconstprop",
      "--slsr",
      "--always-inline",
      "--sancov",
      "--consthoist",
      "--inject-tli-mappings",
      "--jump-threading"
    ],
    "performance_vs_Oz": "+6.1%"
  }
}