{
  "program_id": "linux-v0_11140.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 66,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 18,
    "oneSuccessor": 57,
    "twoPred": 16,
    "twoPredOneSuc": 9,
    "twoEach": 2,
    "twoSuccessor": 29,
    "morePreds": 7,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 116,
    "BeginPhi": 1,
    "BranchCount": 86,
    "returnInt": 39,
    "CriticalCount": 13,
    "NumEdges": 128,
    "const32Bit": 284,
    "const64Bit": 33,
    "numConstZeroes": 120,
    "numConstOnes": 144,
    "UncondBranches": 57,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 107,
    "NumAndInst": 8,
    "BlockMid": 15,
    "BlockLow": 102,
    "NumBitCastInst": 41,
    "NumBrInst": 86,
    "NumCallInst": 80,
    "NumGetElementPtrInst": 62,
    "NumICmpInst": 27,
    "NumLShrInst": 2,
    "NumLoadInst": 240,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 1,
    "NumRetInst": 28,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 154,
    "NumSubInst": 0,
    "NumTruncInst": 13,
    "NumXorInst": 3,
    "NumZExtInst": 17,
    "TotalBlocks": 117,
    "TotalInsts": 890,
    "TotalMemInst": 643,
    "TotalFuncs": 52,
    "ArgsPhi": 2,
    "testUnary": 423
  },
  "baseline_oz_instcount": 889,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--adce",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--sroa",
    "--ipsccp",
    "--lower-expect",
    "--mem2reg",
    "--instcombine",
    "--ipsccp",
    "--globalopt",
    "--mem2reg",
    "--bdce",
    "--aggressive-instcombine",
    "--prune-eh",
    "--licm",
    "--loop-instsimplify",
    "--reassociate",
    "--die",
    "--slp-vectorizer",
    "--jump-threading",
    "--nary-reassociate",
    "--sroa",
    "-loop-reduce",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-guard-widening",
          "--slsr",
          "--dce",
          "--hotcoldsplit",
          "--loop-rotate",
          "--functionattrs",
          "--loop-versioning",
          "--lower-expect",
          "--guard-widening",
          "--inject-tli-mappings",
          "--mldst-motion",
          "--ee-instrument",
          "--nary-reassociate",
          "--globalopt",
          "--ipconstprop",
          "--indvars",
          "--callsite-splitting",
          "--cross-dso-cfi",
          "--lowerinvoke",
          "--correlated-propagation",
          "--loop-data-prefetch",
          "--irce",
          "--mergefunc",
          "--aggressive-instcombine",
          "--gvn-hoist",
          "--insert-gcov-profiling",
          "--sroa",
          "--loop-unroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-guard-widening",
      "--slsr",
      "--dce",
      "--hotcoldsplit",
      "--loop-rotate",
      "--functionattrs",
      "--loop-versioning",
      "--lower-expect",
      "--guard-widening",
      "--inject-tli-mappings",
      "--mldst-motion",
      "--ee-instrument",
      "--nary-reassociate",
      "--globalopt",
      "--ipconstprop",
      "--indvars",
      "--callsite-splitting",
      "--cross-dso-cfi",
      "--lowerinvoke",
      "--correlated-propagation",
      "--loop-data-prefetch",
      "--irce",
      "--mergefunc",
      "--aggressive-instcombine",
      "--gvn-hoist",
      "--insert-gcov-profiling",
      "--sroa",
      "--loop-unroll"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}