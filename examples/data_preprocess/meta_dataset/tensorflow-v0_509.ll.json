{
  "program_id": "tensorflow-v0_509.ll",
  "autophase_features": {
    "BBNumArgsHi": 8,
    "BBNumArgsLo": 12,
    "onePred": 12,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 20,
    "twoPred": 20,
    "twoPredOneSuc": 10,
    "twoEach": 6,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 16,
    "BBHiPhi": 4,
    "BBNoPhi": 14,
    "BeginPhi": 20,
    "BranchCount": 30,
    "returnInt": 0,
    "CriticalCount": 20,
    "NumEdges": 52,
    "const32Bit": 26,
    "const64Bit": 87,
    "numConstZeroes": 4,
    "numConstOnes": 6,
    "UncondBranches": 20,
    "binaryConstArg": 75,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 0,
    "NumAndInst": 4,
    "BlockMid": 4,
    "BlockLow": 30,
    "NumBitCastInst": 10,
    "NumBrInst": 30,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 10,
    "NumLShrInst": 16,
    "NumLoadInst": 20,
    "NumMulInst": 35,
    "NumOrInst": 0,
    "NumPHIInst": 40,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 8,
    "NumStoreInst": 0,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 36,
    "NumZExtInst": 11,
    "TotalBlocks": 34,
    "TotalInsts": 259,
    "TotalMemInst": 40,
    "TotalFuncs": 2,
    "ArgsPhi": 80,
    "testUnary": 42
  },
  "baseline_oz_instcount": 256,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--jump-threading",
    "--mem2reg",
    "--ipsccp",
    "--correlated-propagation",
    "--jump-threading",
    "--flattencfg",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--prune-eh",
    "--simplifycfg",
    "--instcombine",
    "--ipsccp",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--mldst-motion",
          "--early-cse",
          "--elim-avail-extern",
          "--partially-inline-libcalls",
          "--constmerge",
          "--simplifycfg",
          "--strip-nondebug",
          "--lower-expect",
          "--mergefunc",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--mldst-motion",
      "--early-cse",
      "--elim-avail-extern",
      "--partially-inline-libcalls",
      "--constmerge",
      "--simplifycfg",
      "--strip-nondebug",
      "--lower-expect",
      "--mergefunc",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}