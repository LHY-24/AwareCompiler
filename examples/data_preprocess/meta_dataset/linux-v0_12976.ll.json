{
  "program_id": "linux-v0_12976.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 12,
    "oneSuccessor": 25,
    "twoPred": 12,
    "twoPredOneSuc": 6,
    "twoEach": 4,
    "twoSuccessor": 19,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 0,
    "BranchCount": 44,
    "returnInt": 19,
    "CriticalCount": 13,
    "NumEdges": 63,
    "const32Bit": 94,
    "const64Bit": 26,
    "numConstZeroes": 26,
    "numConstOnes": 54,
    "UncondBranches": 25,
    "binaryConstArg": 13,
    "NumAShrInst": 3,
    "NumAddInst": 4,
    "NumAllocaInst": 44,
    "NumAndInst": 7,
    "BlockMid": 6,
    "BlockLow": 52,
    "NumBitCastInst": 7,
    "NumBrInst": 44,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 88,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 53,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 58,
    "TotalInsts": 350,
    "TotalMemInst": 238,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 149
  },
  "baseline_oz_instcount": 340,
  "knowledge_base_entry": [
    "--simple-loop-unswitch",
    "--instcombine",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--adce",
    "--elim-avail-extern",
    "--gvn",
    "--simplifycfg",
    "--die",
    "--early-cse",
    "--simplifycfg",
    "--bdce",
    "--die",
    "--ipsccp",
    "--dce",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--flattencfg",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--called-value-propagation",
          "--coro-elide",
          "--rewrite-statepoints-for-gc",
          "--lowerinvoke",
          "--ipsccp",
          "--barrier",
          "--loop-unswitch",
          "--strip-nondebug",
          "--aggressive-instcombine",
          "--lowerswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--called-value-propagation",
      "--coro-elide",
      "--rewrite-statepoints-for-gc",
      "--lowerinvoke",
      "--ipsccp",
      "--barrier",
      "--loop-unswitch",
      "--strip-nondebug",
      "--aggressive-instcombine",
      "--lowerswitch"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}