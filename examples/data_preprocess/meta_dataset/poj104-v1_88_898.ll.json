{
  "program_id": "poj104-v1_88_898.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 5,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 9,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 5,
    "CriticalCount": 7,
    "NumEdges": 26,
    "const32Bit": 39,
    "const64Bit": 26,
    "numConstZeroes": 15,
    "numConstOnes": 28,
    "UncondBranches": 8,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 21,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 26,
    "NumBitCastInst": 19,
    "NumBrInst": 17,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 46,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 29,
    "TotalInsts": 204,
    "TotalMemInst": 138,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 94
  },
  "baseline_oz_instcount": 55,
  "knowledge_base_entry": [
    "--lower-expect",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--lower-expect",
    "--die",
    "--gvn-hoist",
    "--mergefunc",
    "--ipsccp",
    "--aggressive-instcombine",
    "--simplifycfg",
    "-loop-reduce",
    "--indvars",
    "--loop-fusion",
    "--indvars",
    "--slp-vectorizer",
    "--die",
    "--licm",
    "--simplifycfg",
    "--globalopt",
    "--loop-instsimplify",
    "--reassociate",
    "-loop-reduce",
    "--nary-reassociate",
    "--instcombine",
    "--slsr",
    "--slp-vectorizer",
    "--sroa",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--flattencfg",
    "--instcombine",
    "--reassociate",
    "-loop-reduce",
    "--indvars",
    "--loop-fusion",
    "--indvars",
    "--slp-vectorizer",
    "--die",
    "--licm",
    "--simplifycfg",
    "--globalopt",
    "--loop-instsimplify",
    "--reassociate",
    "-loop-reduce",
    "--nary-reassociate",
    "--instcombine",
    "--correlated-propagation",
    "--early-cse",
    "--gvn-hoist",
    "--prune-eh",
    "--reassociate",
    "--early-cse-memssa",
    "--gvn",
    "--slsr",
    "--jump-threading",
    "--inline",
    "--mem2reg",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--consthoist",
          "--elim-avail-extern",
          "--die",
          "--loop-simplifycfg",
          "--globaldce",
          "--called-value-propagation",
          "--strip",
          "--simplifycfg",
          "--argpromotion",
          "--globalsplit",
          "--infer-address-spaces",
          "--lowerswitch",
          "--mem2reg",
          "--loop-unswitch",
          "--sccp",
          "--loop-reroll",
          "--ipsccp",
          "--partial-inliner",
          "--loop-unroll-and-jam",
          "--constprop",
          "--coro-elide",
          "--early-cse-memssa",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+14.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--consthoist",
      "--elim-avail-extern",
      "--die",
      "--loop-simplifycfg",
      "--globaldce",
      "--called-value-propagation",
      "--strip",
      "--simplifycfg",
      "--argpromotion",
      "--globalsplit",
      "--infer-address-spaces",
      "--lowerswitch",
      "--mem2reg",
      "--loop-unswitch",
      "--sccp",
      "--loop-reroll",
      "--ipsccp",
      "--partial-inliner",
      "--loop-unroll-and-jam",
      "--constprop",
      "--coro-elide",
      "--early-cse-memssa",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+14.5%"
  }
}