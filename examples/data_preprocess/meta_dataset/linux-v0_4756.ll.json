{
  "program_id": "linux-v0_4756.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 11,
    "oneSuccessor": 24,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 6,
    "twoSuccessor": 18,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 56,
    "BeginPhi": 0,
    "BranchCount": 42,
    "returnInt": 15,
    "CriticalCount": 9,
    "NumEdges": 60,
    "const32Bit": 265,
    "const64Bit": 11,
    "numConstZeroes": 125,
    "numConstOnes": 69,
    "UncondBranches": 24,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 49,
    "NumAndInst": 6,
    "BlockMid": 8,
    "BlockLow": 48,
    "NumBitCastInst": 9,
    "NumBrInst": 42,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 83,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 171,
    "NumMulInst": 1,
    "NumOrInst": 12,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 80,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 2,
    "NumZExtInst": 22,
    "TotalBlocks": 56,
    "TotalInsts": 568,
    "TotalMemInst": 424,
    "TotalFuncs": 26,
    "ArgsPhi": 0,
    "testUnary": 261
  },
  "baseline_oz_instcount": 568,
  "knowledge_base_entry": [
    "--mergefunc",
    "--elim-avail-extern",
    "--sccp",
    "--loop-deletion",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--mem2reg",
    "--slp-vectorizer",
    "--instcombine",
    "--bdce",
    "--dse",
    "--dse",
    "--licm",
    "--mldst-motion",
    "--jump-threading",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--reassociate",
          "--canonicalize-aliases",
          "--slp-vectorizer",
          "--mem2reg",
          "--libcalls-shrinkwrap",
          "--indvars",
          "--newgvn",
          "--always-inline",
          "--loop-interchange",
          "--sroa",
          "--insert-gcov-profiling",
          "--gvn-hoist",
          "--coro-split",
          "--loop-idiom",
          "--strip",
          "--aggressive-instcombine",
          "--constprop",
          "--consthoist",
          "--lowerinvoke",
          "--lower-guard-intrinsic",
          "--ipsccp",
          "--loop-unswitch",
          "--redundant-dbg-inst-elim",
          "--called-value-propagation",
          "--nary-reassociate",
          "--name-anon-globals",
          "-loop-reduce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--reassociate",
      "--canonicalize-aliases",
      "--slp-vectorizer",
      "--mem2reg",
      "--libcalls-shrinkwrap",
      "--indvars",
      "--newgvn",
      "--always-inline",
      "--loop-interchange",
      "--sroa",
      "--insert-gcov-profiling",
      "--gvn-hoist",
      "--coro-split",
      "--loop-idiom",
      "--strip",
      "--aggressive-instcombine",
      "--constprop",
      "--consthoist",
      "--lowerinvoke",
      "--lower-guard-intrinsic",
      "--ipsccp",
      "--loop-unswitch",
      "--redundant-dbg-inst-elim",
      "--called-value-propagation",
      "--nary-reassociate",
      "--name-anon-globals",
      "-loop-reduce"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}