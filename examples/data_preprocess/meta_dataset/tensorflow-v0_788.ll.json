{
  "program_id": "tensorflow-v0_788.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 51,
    "onePred": 84,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 43,
    "oneSuccessor": 57,
    "twoPred": 53,
    "twoPredOneSuc": 18,
    "twoEach": 30,
    "twoSuccessor": 87,
    "morePreds": 11,
    "BB03Phi": 52,
    "BBHiPhi": 0,
    "BBNoPhi": 110,
    "BeginPhi": 52,
    "BranchCount": 138,
    "returnInt": 0,
    "CriticalCount": 93,
    "NumEdges": 234,
    "const32Bit": 84,
    "const64Bit": 255,
    "numConstZeroes": 197,
    "numConstOnes": 71,
    "UncondBranches": 57,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 24,
    "NumAllocaInst": 8,
    "NumAndInst": 7,
    "BlockMid": 5,
    "BlockLow": 157,
    "NumBitCastInst": 16,
    "NumBrInst": 138,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 153,
    "NumICmpInst": 94,
    "NumLShrInst": 0,
    "NumLoadInst": 106,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 57,
    "NumRetInst": 13,
    "NumSExtInst": 3,
    "NumSelectInst": 9,
    "NumShlInst": 0,
    "NumStoreInst": 39,
    "NumSubInst": 12,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 42,
    "TotalBlocks": 162,
    "TotalInsts": 782,
    "TotalMemInst": 346,
    "TotalFuncs": 29,
    "ArgsPhi": 135,
    "testUnary": 185
  },
  "baseline_oz_instcount": 731,
  "knowledge_base_entry": [
    "--mergereturn",
    "--jump-threading",
    "--loop-deletion",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--loop-reroll",
    "--jump-threading",
    "--flattencfg",
    "--inline",
    "--memcpyopt",
    "--early-cse-memssa",
    "--simplifycfg",
    "--early-cse",
    "--bdce",
    "--newgvn",
    "--loop-reroll",
    "--gvn",
    "--lower-expect",
    "--simplifycfg",
    "--nary-reassociate",
    "--instcombine",
    "--reassociate",
    "--sccp",
    "--instcombine",
    "--early-cse-memssa",
    "--instsimplify",
    "--ipsccp",
    "--simplifycfg",
    "--licm",
    "--newgvn",
    "--ipsccp",
    "--globalopt",
    "--loop-instsimplify",
    "--early-cse",
    "--newgvn",
    "--loop-reroll",
    "--gvn-hoist",
    "--instsimplify",
    "--mldst-motion",
    "--licm",
    "--loop-rotate",
    "--sroa",
    "--dce",
    "--licm",
    "--mldst-motion",
    "--instsimplify",
    "--jump-threading",
    "--loop-simplifycfg",
    "--adce",
    "--bdce",
    "--early-cse",
    "--bdce",
    "--newgvn",
    "--loop-reroll",
    "--gvn",
    "--lower-expect",
    "--simplifycfg",
    "--nary-reassociate",
    "--instcombine",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--pgo-memop-opt",
          "--inferattrs",
          "--redundant-dbg-inst-elim",
          "--loop-reroll",
          "--aggressive-instcombine",
          "--inline",
          "--strip-debug-declare",
          "--dse",
          "--strip-dead-prototypes",
          "--slp-vectorizer",
          "--globaldce",
          "--prune-eh",
          "--bdce",
          "--callsite-splitting",
          "--jump-threading",
          "--mem2reg",
          "--lower-guard-intrinsic",
          "--lower-constant-intrinsics",
          "--hotcoldsplit",
          "--add-discriminators",
          "--coro-cleanup"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--pgo-memop-opt",
      "--inferattrs",
      "--redundant-dbg-inst-elim",
      "--loop-reroll",
      "--aggressive-instcombine",
      "--inline",
      "--strip-debug-declare",
      "--dse",
      "--strip-dead-prototypes",
      "--slp-vectorizer",
      "--globaldce",
      "--prune-eh",
      "--bdce",
      "--callsite-splitting",
      "--jump-threading",
      "--mem2reg",
      "--lower-guard-intrinsic",
      "--lower-constant-intrinsics",
      "--hotcoldsplit",
      "--add-discriminators",
      "--coro-cleanup"
    ],
    "performance_vs_Oz": "+11.8%"
  }
}