{
  "program_id": "linux-v0_3245.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 0,
    "oneSuccessor": 16,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 32,
    "const32Bit": 262,
    "const64Bit": 0,
    "numConstZeroes": 120,
    "numConstOnes": 22,
    "UncondBranches": 16,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 20,
    "NumBitCastInst": 0,
    "NumBrInst": 16,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 112,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 172,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 78,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 26,
    "TotalInsts": 404,
    "TotalMemInst": 378,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 182
  },
  "baseline_oz_instcount": 404,
  "knowledge_base_entry": [
    "--break-crit-edges",
    "--simplifycfg",
    "--newgvn",
    "--loop-simplifycfg",
    "--sccp",
    "--globalopt",
    "--early-cse-memssa",
    "--newgvn",
    "--loop-simplifycfg",
    "--mergefunc",
    "--jump-threading",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--infer-address-spaces",
          "--inferattrs",
          "--loop-simplify",
          "--dce",
          "--strip-debug-declare",
          "--lower-widenable-condition",
          "--guard-widening",
          "--memcpyopt",
          "--argpromotion",
          "--reg2mem",
          "--inline",
          "--ee-instrument",
          "--alignment-from-assumptions",
          "--coro-cleanup",
          "--callsite-splitting",
          "--globalsplit",
          "--loop-load-elim",
          "--loop-distribute",
          "--early-cse-memssa",
          "--inject-tli-mappings",
          "--lower-matrix-intrinsics",
          "--gvn-hoist",
          "--loop-unroll-and-jam",
          "--mergefunc",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+49.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--infer-address-spaces",
      "--inferattrs",
      "--loop-simplify",
      "--dce",
      "--strip-debug-declare",
      "--lower-widenable-condition",
      "--guard-widening",
      "--memcpyopt",
      "--argpromotion",
      "--reg2mem",
      "--inline",
      "--ee-instrument",
      "--alignment-from-assumptions",
      "--coro-cleanup",
      "--callsite-splitting",
      "--globalsplit",
      "--loop-load-elim",
      "--loop-distribute",
      "--early-cse-memssa",
      "--inject-tli-mappings",
      "--lower-matrix-intrinsics",
      "--gvn-hoist",
      "--loop-unroll-and-jam",
      "--mergefunc",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+49.0%"
  }
}