{
  "program_id": "github-v0_25513.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 3,
    "oneSuccessor": 7,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 7,
    "CriticalCount": 3,
    "NumEdges": 21,
    "const32Bit": 33,
    "const64Bit": 4,
    "numConstZeroes": 14,
    "numConstOnes": 20,
    "UncondBranches": 7,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 14,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 11,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 19,
    "TotalInsts": 87,
    "TotalMemInst": 59,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 28
  },
  "baseline_oz_instcount": 88,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--gvn",
    "--instcombine",
    "--die",
    "--lower-expect",
    "--instsimplify",
    "--jump-threading",
    "--globalopt",
    "--mem2reg",
    "--flattencfg",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--strip",
          "--simplifycfg",
          "--gvn-hoist",
          "--sccp",
          "--lower-guard-intrinsic",
          "--canonicalize-aliases",
          "--loop-versioning",
          "--guard-widening",
          "--separate-const-offset-from-gep"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--strip",
      "--simplifycfg",
      "--gvn-hoist",
      "--sccp",
      "--lower-guard-intrinsic",
      "--canonicalize-aliases",
      "--loop-versioning",
      "--guard-widening",
      "--separate-const-offset-from-gep"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}