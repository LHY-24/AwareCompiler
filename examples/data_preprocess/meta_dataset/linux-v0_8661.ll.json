{
  "program_id": "linux-v0_8661.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 98,
    "onePredOneSuc": 67,
    "onePredTwoSuc": 27,
    "oneSuccessor": 92,
    "twoPred": 35,
    "twoPredOneSuc": 18,
    "twoEach": 13,
    "twoSuccessor": 45,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 156,
    "BeginPhi": 0,
    "BranchCount": 137,
    "returnInt": 22,
    "CriticalCount": 21,
    "NumEdges": 182,
    "const32Bit": 343,
    "const64Bit": 49,
    "numConstZeroes": 168,
    "numConstOnes": 144,
    "UncondBranches": 92,
    "binaryConstArg": 71,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 77,
    "NumAndInst": 28,
    "BlockMid": 11,
    "BlockLow": 145,
    "NumBitCastInst": 7,
    "NumBrInst": 137,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 110,
    "NumICmpInst": 54,
    "NumLShrInst": 9,
    "NumLoadInst": 235,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 13,
    "NumSelectInst": 1,
    "NumShlInst": 6,
    "NumStoreInst": 121,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 18,
    "NumZExtInst": 48,
    "TotalBlocks": 156,
    "TotalInsts": 960,
    "TotalMemInst": 595,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 389
  },
  "baseline_oz_instcount": 951,
  "knowledge_base_entry": [
    "--gvn",
    "--reassociate",
    "--newgvn",
    "--gvn-hoist",
    "--mldst-motion",
    "--early-cse",
    "--elim-avail-extern",
    "--newgvn",
    "--mergefunc",
    "--slp-vectorizer",
    "--dse",
    "--mergefunc",
    "--globalopt",
    "--lower-expect",
    "--mergefunc",
    "--ipsccp",
    "--mergefunc",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--strip-debug-declare",
          "--flattencfg",
          "--loop-guard-widening",
          "--correlated-propagation",
          "--ipsccp",
          "-loop-reduce",
          "--alignment-from-assumptions",
          "--barrier",
          "--nary-reassociate",
          "--aggressive-instcombine",
          "--scalarizer",
          "--cross-dso-cfi",
          "--slp-vectorizer",
          "--loop-distribute",
          "--mergefunc",
          "--post-inline-ee-instrument",
          "--called-value-propagation",
          "--lowerswitch",
          "--loop-fusion",
          "--loweratomic",
          "--mergeicmps",
          "--early-cse-memssa",
          "--globaldce",
          "--mergereturn",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--strip-debug-declare",
      "--flattencfg",
      "--loop-guard-widening",
      "--correlated-propagation",
      "--ipsccp",
      "-loop-reduce",
      "--alignment-from-assumptions",
      "--barrier",
      "--nary-reassociate",
      "--aggressive-instcombine",
      "--scalarizer",
      "--cross-dso-cfi",
      "--slp-vectorizer",
      "--loop-distribute",
      "--mergefunc",
      "--post-inline-ee-instrument",
      "--called-value-propagation",
      "--lowerswitch",
      "--loop-fusion",
      "--loweratomic",
      "--mergeicmps",
      "--early-cse-memssa",
      "--globaldce",
      "--mergereturn",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}