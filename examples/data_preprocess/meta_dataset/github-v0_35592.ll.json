{
  "program_id": "github-v0_35592.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 5,
    "oneSuccessor": 20,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 32,
    "returnInt": 0,
    "CriticalCount": 5,
    "NumEdges": 44,
    "const32Bit": 165,
    "const64Bit": 10,
    "numConstZeroes": 92,
    "numConstOnes": 28,
    "UncondBranches": 20,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 20,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 36,
    "NumBitCastInst": 1,
    "NumBrInst": 32,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 72,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 108,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 52,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 39,
    "TotalInsts": 326,
    "TotalMemInst": 257,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 140
  },
  "baseline_oz_instcount": 327,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--flattencfg",
    "--jump-threading",
    "--sroa",
    "--instcombine",
    "--early-cse-memssa",
    "--die",
    "--reassociate",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--partially-inline-libcalls",
          "--early-cse-memssa",
          "--sroa",
          "--tailcallelim",
          "--loop-vectorize",
          "--rewrite-statepoints-for-gc",
          "--reassociate",
          "--callsite-splitting",
          "--coro-cleanup",
          "--lower-expect",
          "--speculative-execution",
          "--instnamer",
          "--mergefunc",
          "--deadargelim",
          "--bdce",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--partially-inline-libcalls",
      "--early-cse-memssa",
      "--sroa",
      "--tailcallelim",
      "--loop-vectorize",
      "--rewrite-statepoints-for-gc",
      "--reassociate",
      "--callsite-splitting",
      "--coro-cleanup",
      "--lower-expect",
      "--speculative-execution",
      "--instnamer",
      "--mergefunc",
      "--deadargelim",
      "--bdce",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}