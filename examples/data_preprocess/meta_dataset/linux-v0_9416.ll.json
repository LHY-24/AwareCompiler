{
  "program_id": "linux-v0_9416.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 1,
    "oneSuccessor": 19,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 18,
    "CriticalCount": 3,
    "NumEdges": 41,
    "const32Bit": 141,
    "const64Bit": 4,
    "numConstZeroes": 41,
    "numConstOnes": 59,
    "UncondBranches": 19,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 49,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 42,
    "NumBitCastInst": 6,
    "NumBrInst": 23,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 78,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 63,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 8,
    "TotalBlocks": 47,
    "TotalInsts": 329,
    "TotalMemInst": 239,
    "TotalFuncs": 40,
    "ArgsPhi": 0,
    "testUnary": 153
  },
  "baseline_oz_instcount": 330,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--flattencfg",
    "--newgvn",
    "--instsimplify",
    "--dse",
    "--jump-threading",
    "--memcpyopt",
    "--sroa",
    "--die",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--inline",
    "--bdce",
    "--reassociate",
    "--licm",
    "--gvn-hoist",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--mergereturn",
          "--loop-sink",
          "--coro-elide",
          "--reassociate",
          "--lcssa",
          "--aggressive-instcombine",
          "--correlated-propagation",
          "--loop-guard-widening",
          "--lowerinvoke",
          "--nary-reassociate",
          "--instcombine",
          "-loop-reduce",
          "--loop-simplify",
          "--loop-instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--mergereturn",
      "--loop-sink",
      "--coro-elide",
      "--reassociate",
      "--lcssa",
      "--aggressive-instcombine",
      "--correlated-propagation",
      "--loop-guard-widening",
      "--lowerinvoke",
      "--nary-reassociate",
      "--instcombine",
      "-loop-reduce",
      "--loop-simplify",
      "--loop-instsimplify"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}