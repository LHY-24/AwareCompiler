{
  "program_id": "linux-v0_11131.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 9,
    "oneSuccessor": 19,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 0,
    "BranchCount": 32,
    "returnInt": 13,
    "CriticalCount": 1,
    "NumEdges": 45,
    "const32Bit": 164,
    "const64Bit": 10,
    "numConstZeroes": 80,
    "numConstOnes": 54,
    "UncondBranches": 19,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 44,
    "NumAndInst": 2,
    "BlockMid": 7,
    "BlockLow": 39,
    "NumBitCastInst": 8,
    "NumBrInst": 32,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 11,
    "NumLShrInst": 2,
    "NumLoadInst": 114,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 71,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 4,
    "TotalBlocks": 46,
    "TotalInsts": 406,
    "TotalMemInst": 314,
    "TotalFuncs": 26,
    "ArgsPhi": 0,
    "testUnary": 185
  },
  "baseline_oz_instcount": 406,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--memcpyopt",
    "--mergefunc",
    "--bdce",
    "--simplifycfg",
    "--instcombine",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--bdce",
    "--simplifycfg",
    "--instcombine",
    "--reassociate",
    "--gvn-hoist",
    "--loop-deletion",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--bdce",
    "--simplifycfg",
    "--sroa",
    "--inline",
    "--early-cse",
    "--loop-fusion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--nary-reassociate",
          "--pgo-memop-opt",
          "--correlated-propagation",
          "--rpo-functionattrs",
          "--consthoist",
          "--instcombine",
          "--dce",
          "--simple-loop-unswitch",
          "--infer-address-spaces",
          "--coro-early",
          "--loop-unroll-and-jam",
          "--cross-dso-cfi",
          "--loop-deletion",
          "--canonicalize-aliases",
          "--mergefunc",
          "--loop-versioning-licm",
          "--lower-matrix-intrinsics",
          "--loop-interchange",
          "--loop-rotate",
          "--indvars",
          "--functionattrs",
          "--argpromotion",
          "--loweratomic",
          "--mergeicmps",
          "--dse",
          "--lowerinvoke",
          "--elim-avail-extern",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--nary-reassociate",
      "--pgo-memop-opt",
      "--correlated-propagation",
      "--rpo-functionattrs",
      "--consthoist",
      "--instcombine",
      "--dce",
      "--simple-loop-unswitch",
      "--infer-address-spaces",
      "--coro-early",
      "--loop-unroll-and-jam",
      "--cross-dso-cfi",
      "--loop-deletion",
      "--canonicalize-aliases",
      "--mergefunc",
      "--loop-versioning-licm",
      "--lower-matrix-intrinsics",
      "--loop-interchange",
      "--loop-rotate",
      "--indvars",
      "--functionattrs",
      "--argpromotion",
      "--loweratomic",
      "--mergeicmps",
      "--dse",
      "--lowerinvoke",
      "--elim-avail-extern",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}