{
  "program_id": "github-v0_27427.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 11,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 11,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 12,
    "CriticalCount": 9,
    "NumEdges": 35,
    "const32Bit": 165,
    "const64Bit": 3,
    "numConstZeroes": 63,
    "numConstOnes": 77,
    "UncondBranches": 13,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 61,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 33,
    "NumBitCastInst": 19,
    "NumBrInst": 24,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 51,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 142,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 85,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 44,
    "TotalInsts": 452,
    "TotalMemInst": 374,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 227
  },
  "baseline_oz_instcount": 452,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--gvn-hoist",
    "--flattencfg",
    "--loop-simplifycfg",
    "--ipsccp",
    "--loweratomic",
    "--aggressive-instcombine",
    "--mergefunc",
    "--flattencfg",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--loop-reroll",
          "--inline",
          "--div-rem-pairs",
          "--alignment-from-assumptions",
          "--sccp",
          "--irce",
          "--aggressive-instcombine",
          "--loweratomic",
          "--loop-instsimplify",
          "--gvn",
          "--mem2reg",
          "--tailcallelim",
          "--early-cse",
          "--loop-sink",
          "--separate-const-offset-from-gep",
          "--deadargelim",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--loop-reroll",
      "--inline",
      "--div-rem-pairs",
      "--alignment-from-assumptions",
      "--sccp",
      "--irce",
      "--aggressive-instcombine",
      "--loweratomic",
      "--loop-instsimplify",
      "--gvn",
      "--mem2reg",
      "--tailcallelim",
      "--early-cse",
      "--loop-sink",
      "--separate-const-offset-from-gep",
      "--deadargelim",
      "--globaldce"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}