{
  "program_id": "github-v0_29946.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 2,
    "oneSuccessor": 12,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 26,
    "const32Bit": 37,
    "const64Bit": 17,
    "numConstZeroes": 23,
    "numConstOnes": 20,
    "UncondBranches": 12,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 2,
    "BlockMid": 3,
    "BlockLow": 20,
    "NumBitCastInst": 0,
    "NumBrInst": 19,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 7,
    "NumLShrInst": 1,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 17,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 1,
    "NumZExtInst": 4,
    "TotalBlocks": 23,
    "TotalInsts": 127,
    "TotalMemInst": 73,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 50
  },
  "baseline_oz_instcount": 127,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--gvn-hoist",
    "--bdce",
    "--sroa",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--inline",
    "--adce",
    "--ipsccp",
    "--adce",
    "--inline",
    "--jump-threading",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--speculative-execution",
          "--gvn-hoist",
          "--ee-instrument",
          "--add-discriminators",
          "--mem2reg",
          "--loop-vectorize",
          "--insert-gcov-profiling",
          "--early-cse-memssa",
          "--sccp",
          "--indvars",
          "--dse",
          "--jump-threading",
          "--div-rem-pairs",
          "--rewrite-statepoints-for-gc",
          "--inline",
          "--argpromotion",
          "--mergeicmps",
          "--loop-interchange",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--speculative-execution",
      "--gvn-hoist",
      "--ee-instrument",
      "--add-discriminators",
      "--mem2reg",
      "--loop-vectorize",
      "--insert-gcov-profiling",
      "--early-cse-memssa",
      "--sccp",
      "--indvars",
      "--dse",
      "--jump-threading",
      "--div-rem-pairs",
      "--rewrite-statepoints-for-gc",
      "--inline",
      "--argpromotion",
      "--mergeicmps",
      "--loop-interchange",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+6.3%"
  }
}