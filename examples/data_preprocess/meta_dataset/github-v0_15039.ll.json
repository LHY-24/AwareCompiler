{
  "program_id": "github-v0_15039.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 57,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 21,
    "oneSuccessor": 50,
    "twoPred": 24,
    "twoPredOneSuc": 13,
    "twoEach": 6,
    "twoSuccessor": 36,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 101,
    "BeginPhi": 1,
    "BranchCount": 86,
    "returnInt": 15,
    "CriticalCount": 19,
    "NumEdges": 122,
    "const32Bit": 206,
    "const64Bit": 21,
    "numConstZeroes": 105,
    "numConstOnes": 102,
    "UncondBranches": 50,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 62,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 91,
    "NumBitCastInst": 27,
    "NumBrInst": 86,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 38,
    "NumLShrInst": 1,
    "NumLoadInst": 210,
    "NumMulInst": 5,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 16,
    "NumSExtInst": 8,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 103,
    "NumSubInst": 7,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 26,
    "TotalBlocks": 102,
    "TotalInsts": 711,
    "TotalMemInst": 474,
    "TotalFuncs": 21,
    "ArgsPhi": 2,
    "testUnary": 341
  },
  "baseline_oz_instcount": 712,
  "knowledge_base_entry": [
    "--sroa",
    "--aggressive-instcombine",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inject-tli-mappings",
          "--strip-dead-prototypes",
          "--nary-reassociate",
          "--deadargelim",
          "--lcssa",
          "--insert-gcov-profiling",
          "--rewrite-statepoints-for-gc",
          "--alignment-from-assumptions",
          "--mergeicmps",
          "--redundant-dbg-inst-elim",
          "--bdce",
          "--loop-unroll-and-jam",
          "--mergefunc",
          "--instsimplify",
          "--globaldce",
          "--prune-eh",
          "--loop-instsimplify",
          "--irce",
          "--ee-instrument",
          "--consthoist",
          "--attributor",
          "--inline",
          "--lower-expect",
          "--jump-threading",
          "--mergereturn",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inject-tli-mappings",
      "--strip-dead-prototypes",
      "--nary-reassociate",
      "--deadargelim",
      "--lcssa",
      "--insert-gcov-profiling",
      "--rewrite-statepoints-for-gc",
      "--alignment-from-assumptions",
      "--mergeicmps",
      "--redundant-dbg-inst-elim",
      "--bdce",
      "--loop-unroll-and-jam",
      "--mergefunc",
      "--instsimplify",
      "--globaldce",
      "--prune-eh",
      "--loop-instsimplify",
      "--irce",
      "--ee-instrument",
      "--consthoist",
      "--attributor",
      "--inline",
      "--lower-expect",
      "--jump-threading",
      "--mergereturn",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}