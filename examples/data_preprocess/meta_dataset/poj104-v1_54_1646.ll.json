{
  "program_id": "poj104-v1_54_1646.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 3,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 8,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 34,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 10,
    "CriticalCount": 2,
    "NumEdges": 25,
    "const32Bit": 48,
    "const64Bit": 8,
    "numConstZeroes": 10,
    "numConstOnes": 35,
    "UncondBranches": 9,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 25,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 31,
    "NumBitCastInst": 14,
    "NumBrInst": 17,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 63,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 31,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 34,
    "TotalInsts": 234,
    "TotalMemInst": 162,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 103
  },
  "baseline_oz_instcount": 73,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--bdce",
    "--die",
    "--inline",
    "--die",
    "--mem2reg",
    "--gvn",
    "--prune-eh",
    "--gvn-hoist",
    "--loop-reroll",
    "--correlated-propagation",
    "--gvn",
    "-loop-reduce",
    "--early-cse",
    "--lower-expect",
    "--reassociate",
    "--reassociate",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--mem2reg",
    "--gvn",
    "--prune-eh",
    "--gvn-hoist",
    "--loop-reroll",
    "--correlated-propagation",
    "--gvn",
    "-loop-reduce",
    "--sroa",
    "--adce",
    "--elim-avail-extern",
    "--die",
    "--lower-expect",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--mem2reg",
    "--newgvn",
    "--lower-expect",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--inline",
    "--flattencfg",
    "--ipsccp",
    "--mergefunc",
    "--early-cse-memssa",
    "--newgvn",
    "--nary-reassociate",
    "--slsr",
    "-loop-reduce",
    "--early-cse",
    "--lower-expect",
    "--reassociate",
    "--reassociate",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--mem2reg",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--bdce",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simplifycfg",
          "--loop-data-prefetch",
          "--gvn",
          "--elim-avail-extern",
          "--lower-matrix-intrinsics",
          "--loop-idiom",
          "--lowerswitch",
          "--coro-early",
          "--coro-cleanup",
          "--loop-load-elim",
          "--add-discriminators",
          "--called-value-propagation",
          "--loop-reroll",
          "--speculative-execution",
          "--tailcallelim",
          "--constmerge",
          "--separate-const-offset-from-gep",
          "--inline",
          "--inject-tli-mappings",
          "--canonicalize-aliases",
          "--loop-predication",
          "--loop-unroll",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simplifycfg",
      "--loop-data-prefetch",
      "--gvn",
      "--elim-avail-extern",
      "--lower-matrix-intrinsics",
      "--loop-idiom",
      "--lowerswitch",
      "--coro-early",
      "--coro-cleanup",
      "--loop-load-elim",
      "--add-discriminators",
      "--called-value-propagation",
      "--loop-reroll",
      "--speculative-execution",
      "--tailcallelim",
      "--constmerge",
      "--separate-const-offset-from-gep",
      "--inline",
      "--inject-tli-mappings",
      "--canonicalize-aliases",
      "--loop-predication",
      "--loop-unroll",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+8.2%"
  }
}