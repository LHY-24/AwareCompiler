{
  "program_id": "github-v0_6757.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 55,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 21,
    "oneSuccessor": 51,
    "twoPred": 31,
    "twoPredOneSuc": 14,
    "twoEach": 14,
    "twoSuccessor": 39,
    "morePreds": 4,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 91,
    "BeginPhi": 6,
    "BranchCount": 90,
    "returnInt": 7,
    "CriticalCount": 30,
    "NumEdges": 129,
    "const32Bit": 68,
    "const64Bit": 5,
    "numConstZeroes": 33,
    "numConstOnes": 37,
    "UncondBranches": 51,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 20,
    "NumAndInst": 4,
    "BlockMid": 1,
    "BlockLow": 96,
    "NumBitCastInst": 0,
    "NumBrInst": 90,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 39,
    "NumLShrInst": 0,
    "NumLoadInst": 129,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 6,
    "NumRetInst": 7,
    "NumSExtInst": 32,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 47,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 1,
    "NumZExtInst": 4,
    "TotalBlocks": 97,
    "TotalInsts": 431,
    "TotalMemInst": 240,
    "TotalFuncs": 12,
    "ArgsPhi": 13,
    "testUnary": 186
  },
  "baseline_oz_instcount": 432,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--gvn",
    "--gvn-hoist",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--bdce",
    "--jump-threading",
    "--dce",
    "--dse",
    "--simplifycfg",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-expect",
          "--simplifycfg",
          "--globalsplit",
          "--load-store-vectorizer",
          "--jump-threading",
          "--early-cse",
          "--infer-address-spaces",
          "--name-anon-globals",
          "--dse",
          "--instcombine",
          "--instnamer",
          "--sroa",
          "--coro-elide",
          "--functionattrs",
          "--scalarizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-expect",
      "--simplifycfg",
      "--globalsplit",
      "--load-store-vectorizer",
      "--jump-threading",
      "--early-cse",
      "--infer-address-spaces",
      "--name-anon-globals",
      "--dse",
      "--instcombine",
      "--instnamer",
      "--sroa",
      "--coro-elide",
      "--functionattrs",
      "--scalarizer"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}