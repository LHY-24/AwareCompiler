{
  "program_id": "poj104-v1_34_1822.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 5,
    "CriticalCount": 2,
    "NumEdges": 11,
    "const32Bit": 15,
    "const64Bit": 6,
    "numConstZeroes": 5,
    "numConstOnes": 6,
    "UncondBranches": 5,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 11,
    "NumBitCastInst": 6,
    "NumBrInst": 8,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 11,
    "TotalInsts": 67,
    "TotalMemInst": 42,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 25
  },
  "baseline_oz_instcount": 33,
  "knowledge_base_entry": [
    "--slsr",
    "--early-cse-memssa",
    "--dse",
    "--inline",
    "--jump-threading",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--dce",
    "--correlated-propagation",
    "--mergefunc",
    "--mem2reg",
    "--prune-eh",
    "--sroa",
    "--die",
    "--loop-instsimplify",
    "--globalopt",
    "--instsimplify",
    "--globalopt",
    "--globaldce",
    "--aggressive-instcombine",
    "--mergefunc",
    "--reassociate",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mem2reg",
          "--loop-vectorize",
          "--lower-matrix-intrinsics",
          "--always-inline",
          "--inline",
          "--aggressive-instcombine",
          "--gvn-hoist",
          "--inferattrs",
          "-loop-reduce",
          "--constprop",
          "--loop-instsimplify",
          "--early-cse",
          "--sroa",
          "--pgo-memop-opt",
          "--loop-unswitch",
          "--lower-guard-intrinsic",
          "--rewrite-statepoints-for-gc",
          "--globalsplit",
          "--hotcoldsplit",
          "--mergefunc",
          "--sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mem2reg",
      "--loop-vectorize",
      "--lower-matrix-intrinsics",
      "--always-inline",
      "--inline",
      "--aggressive-instcombine",
      "--gvn-hoist",
      "--inferattrs",
      "-loop-reduce",
      "--constprop",
      "--loop-instsimplify",
      "--early-cse",
      "--sroa",
      "--pgo-memop-opt",
      "--loop-unswitch",
      "--lower-guard-intrinsic",
      "--rewrite-statepoints-for-gc",
      "--globalsplit",
      "--hotcoldsplit",
      "--mergefunc",
      "--sink"
    ],
    "performance_vs_Oz": "+3.0%"
  }
}