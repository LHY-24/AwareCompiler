{
  "program_id": "poj104-v1_77_1674.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 2,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 5,
    "CriticalCount": 1,
    "NumEdges": 18,
    "const32Bit": 36,
    "const64Bit": 24,
    "numConstZeroes": 17,
    "numConstOnes": 26,
    "UncondBranches": 8,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 22,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 23,
    "NumBitCastInst": 19,
    "NumBrInst": 13,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 46,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 26,
    "TotalInsts": 207,
    "TotalMemInst": 143,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 97
  },
  "baseline_oz_instcount": 61,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--correlated-propagation",
    "--instcombine",
    "--licm",
    "--loop-instsimplify",
    "--dce",
    "--elim-avail-extern",
    "--instcombine",
    "--newgvn",
    "--loop-simplifycfg",
    "--slsr",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--die",
    "--sroa",
    "-loop-reduce",
    "--slsr",
    "--jump-threading",
    "--prune-eh",
    "--instcombine",
    "--memcpyopt",
    "--inline",
    "--dce",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--sccp",
    "--adce",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--deadargelim",
          "--instsimplify",
          "--simplifycfg",
          "--early-cse",
          "--functionattrs",
          "--licm",
          "--sink",
          "--globaldce",
          "--loop-interchange",
          "--constmerge",
          "--tailcallelim",
          "--infer-address-spaces",
          "--inferattrs",
          "--inline",
          "--slsr",
          "--prune-eh",
          "--redundant-dbg-inst-elim",
          "--slp-vectorizer",
          "--rpo-functionattrs",
          "--instcombine",
          "--consthoist",
          "--strip-dead-prototypes",
          "--separate-const-offset-from-gep",
          "--coro-early",
          "--sancov",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+21.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--deadargelim",
      "--instsimplify",
      "--simplifycfg",
      "--early-cse",
      "--functionattrs",
      "--licm",
      "--sink",
      "--globaldce",
      "--loop-interchange",
      "--constmerge",
      "--tailcallelim",
      "--infer-address-spaces",
      "--inferattrs",
      "--inline",
      "--slsr",
      "--prune-eh",
      "--redundant-dbg-inst-elim",
      "--slp-vectorizer",
      "--rpo-functionattrs",
      "--instcombine",
      "--consthoist",
      "--strip-dead-prototypes",
      "--separate-const-offset-from-gep",
      "--coro-early",
      "--sancov",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+21.3%"
  }
}