{
  "program_id": "github-v0_30058.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 34,
    "const64Bit": 22,
    "numConstZeroes": 27,
    "numConstOnes": 22,
    "UncondBranches": 11,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 4,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 6,
    "NumLShrInst": 1,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 21,
    "TotalInsts": 147,
    "TotalMemInst": 88,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 67
  },
  "baseline_oz_instcount": 147,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--jump-threading",
    "--mergefunc",
    "--mergefunc",
    "--early-cse",
    "--adce",
    "--instcombine",
    "--load-store-vectorizer",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplify",
          "--lower-guard-intrinsic",
          "--loop-unswitch",
          "--reassociate",
          "--loop-load-elim",
          "--lowerinvoke",
          "--bdce",
          "--lowerswitch",
          "--dce",
          "--newgvn",
          "--globalsplit",
          "--aggressive-instcombine",
          "--loop-data-prefetch",
          "--infer-address-spaces",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplify",
      "--lower-guard-intrinsic",
      "--loop-unswitch",
      "--reassociate",
      "--loop-load-elim",
      "--lowerinvoke",
      "--bdce",
      "--lowerswitch",
      "--dce",
      "--newgvn",
      "--globalsplit",
      "--aggressive-instcombine",
      "--loop-data-prefetch",
      "--infer-address-spaces",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}