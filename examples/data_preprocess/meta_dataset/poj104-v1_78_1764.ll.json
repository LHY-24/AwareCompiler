{
  "program_id": "poj104-v1_78_1764.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 50,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 11,
    "oneSuccessor": 40,
    "twoPred": 25,
    "twoPredOneSuc": 1,
    "twoEach": 21,
    "twoSuccessor": 35,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 90,
    "BeginPhi": 0,
    "BranchCount": 75,
    "returnInt": 7,
    "CriticalCount": 26,
    "NumEdges": 110,
    "const32Bit": 59,
    "const64Bit": 77,
    "numConstZeroes": 49,
    "numConstOnes": 40,
    "UncondBranches": 40,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 27,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 86,
    "NumBitCastInst": 27,
    "NumBrInst": 75,
    "NumCallInst": 85,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 35,
    "NumLShrInst": 0,
    "NumLoadInst": 138,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 43,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 90,
    "TotalInsts": 509,
    "TotalMemInst": 334,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 199
  },
  "baseline_oz_instcount": 477,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--instcombine",
    "--dse",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--elim-avail-extern",
    "--sroa",
    "--dse",
    "--adce",
    "--instsimplify",
    "--newgvn",
    "--instcombine",
    "--inline",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--indvars",
    "--loop-fusion",
    "--early-cse",
    "--nary-reassociate",
    "--gvn-hoist",
    "--nary-reassociate",
    "--inline",
    "--newgvn",
    "--nary-reassociate",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--jump-threading",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--instcombine",
    "--bdce",
    "--elim-avail-extern",
    "--lower-expect",
    "--prune-eh",
    "--reassociate",
    "--correlated-propagation",
    "--lower-expect",
    "--slp-vectorizer",
    "--dse",
    "--elim-avail-extern",
    "--sroa",
    "--dse",
    "--adce",
    "--instsimplify",
    "--newgvn",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--indvars",
    "--loop-fusion",
    "--early-cse",
    "--nary-reassociate",
    "--gvn-hoist",
    "--nary-reassociate",
    "--inline",
    "--newgvn",
    "--nary-reassociate",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--reassociate",
    "--correlated-propagation",
    "--dse",
    "--correlated-propagation",
    "--newgvn",
    "--instcombine",
    "--inline",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--indvars",
    "--loop-fusion",
    "--early-cse",
    "--nary-reassociate",
    "--gvn-hoist",
    "--nary-reassociate",
    "--inline",
    "--newgvn",
    "--nary-reassociate",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--jump-threading",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--instcombine",
    "--bdce",
    "--elim-avail-extern",
    "--lower-expect",
    "--prune-eh",
    "--reassociate",
    "--correlated-propagation",
    "--lower-expect",
    "--slp-vectorizer",
    "--dse",
    "--elim-avail-extern",
    "--sroa",
    "--dse",
    "--adce",
    "--instsimplify",
    "--newgvn",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--indvars",
    "--loop-fusion",
    "--early-cse",
    "--nary-reassociate",
    "--gvn-hoist",
    "--nary-reassociate",
    "--inline",
    "--newgvn",
    "--nary-reassociate",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--jump-threading",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--lcssa",
          "--coro-split",
          "--mem2reg",
          "--guard-widening",
          "--inferattrs",
          "--loop-versioning-licm",
          "--tailcallelim",
          "--lower-guard-intrinsic",
          "--partially-inline-libcalls",
          "--simplifycfg",
          "--post-inline-ee-instrument",
          "--mldst-motion",
          "--sancov",
          "--argpromotion",
          "--newgvn",
          "--ee-instrument",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+53.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--lcssa",
      "--coro-split",
      "--mem2reg",
      "--guard-widening",
      "--inferattrs",
      "--loop-versioning-licm",
      "--tailcallelim",
      "--lower-guard-intrinsic",
      "--partially-inline-libcalls",
      "--simplifycfg",
      "--post-inline-ee-instrument",
      "--mldst-motion",
      "--sancov",
      "--argpromotion",
      "--newgvn",
      "--ee-instrument",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+53.5%"
  }
}