{
  "program_id": "linux-v0_4640.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 77,
    "onePredOneSuc": 56,
    "onePredTwoSuc": 21,
    "oneSuccessor": 68,
    "twoPred": 26,
    "twoPredOneSuc": 8,
    "twoEach": 13,
    "twoSuccessor": 43,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 129,
    "BeginPhi": 0,
    "BranchCount": 111,
    "returnInt": 10,
    "CriticalCount": 18,
    "NumEdges": 154,
    "const32Bit": 269,
    "const64Bit": 45,
    "numConstZeroes": 148,
    "numConstOnes": 110,
    "UncondBranches": 68,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 68,
    "NumAndInst": 12,
    "BlockMid": 10,
    "BlockLow": 119,
    "NumBitCastInst": 14,
    "NumBrInst": 111,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 109,
    "NumICmpInst": 38,
    "NumLShrInst": 0,
    "NumLoadInst": 247,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 95,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 7,
    "NumZExtInst": 41,
    "TotalBlocks": 129,
    "TotalInsts": 822,
    "TotalMemInst": 553,
    "TotalFuncs": 36,
    "ArgsPhi": 0,
    "testUnary": 384
  },
  "baseline_oz_instcount": 824,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--lower-expect",
    "--mem2reg",
    "--mldst-motion",
    "--newgvn",
    "--bdce",
    "--lower-constant-intrinsics",
    "--bdce",
    "--mergefunc",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partial-inliner",
          "--lowerinvoke",
          "--lower-expect",
          "--instsimplify",
          "--sancov",
          "--coro-split",
          "--float2int",
          "--bdce",
          "--instcombine",
          "--partially-inline-libcalls",
          "--globaldce",
          "--name-anon-globals",
          "--elim-avail-extern",
          "--called-value-propagation",
          "--loop-data-prefetch",
          "--lower-widenable-condition",
          "--post-inline-ee-instrument",
          "--argpromotion",
          "--scalarizer",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partial-inliner",
      "--lowerinvoke",
      "--lower-expect",
      "--instsimplify",
      "--sancov",
      "--coro-split",
      "--float2int",
      "--bdce",
      "--instcombine",
      "--partially-inline-libcalls",
      "--globaldce",
      "--name-anon-globals",
      "--elim-avail-extern",
      "--called-value-propagation",
      "--loop-data-prefetch",
      "--lower-widenable-condition",
      "--post-inline-ee-instrument",
      "--argpromotion",
      "--scalarizer",
      "--dce"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}