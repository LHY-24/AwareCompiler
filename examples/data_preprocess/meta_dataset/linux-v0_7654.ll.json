{
  "program_id": "linux-v0_7654.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 2,
    "oneSuccessor": 18,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 14,
    "CriticalCount": 1,
    "NumEdges": 28,
    "const32Bit": 97,
    "const64Bit": 16,
    "numConstZeroes": 40,
    "numConstOnes": 52,
    "UncondBranches": 18,
    "binaryConstArg": 12,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 43,
    "NumAndInst": 2,
    "BlockMid": 6,
    "BlockLow": 33,
    "NumBitCastInst": 16,
    "NumBrInst": 23,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 71,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 53,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 6,
    "NumZExtInst": 9,
    "TotalBlocks": 39,
    "TotalInsts": 321,
    "TotalMemInst": 219,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 156
  },
  "baseline_oz_instcount": 321,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--flattencfg",
    "--gvn",
    "--instsimplify",
    "--slp-vectorizer",
    "--inline",
    "--jump-threading",
    "--simplifycfg",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-guard-widening",
          "--loop-sink",
          "--loop-idiom",
          "--jump-threading",
          "--tailcallelim",
          "--simplifycfg",
          "--slsr",
          "--post-inline-ee-instrument",
          "--sroa",
          "--mergefunc",
          "--float2int",
          "--loop-unroll-and-jam",
          "-loop-reduce",
          "--licm",
          "--elim-avail-extern",
          "--lower-matrix-intrinsics",
          "--loop-predication",
          "--aggressive-instcombine",
          "--strip-nondebug",
          "--inject-tli-mappings",
          "--sink",
          "--irce",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-guard-widening",
      "--loop-sink",
      "--loop-idiom",
      "--jump-threading",
      "--tailcallelim",
      "--simplifycfg",
      "--slsr",
      "--post-inline-ee-instrument",
      "--sroa",
      "--mergefunc",
      "--float2int",
      "--loop-unroll-and-jam",
      "-loop-reduce",
      "--licm",
      "--elim-avail-extern",
      "--lower-matrix-intrinsics",
      "--loop-predication",
      "--aggressive-instcombine",
      "--strip-nondebug",
      "--inject-tli-mappings",
      "--sink",
      "--irce",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}