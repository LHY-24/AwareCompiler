{
  "program_id": "poj104-v1_83_953.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 10,
    "oneSuccessor": 25,
    "twoPred": 21,
    "twoPredOneSuc": 10,
    "twoEach": 11,
    "twoSuccessor": 21,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 49,
    "BeginPhi": 0,
    "BranchCount": 46,
    "returnInt": 5,
    "CriticalCount": 19,
    "NumEdges": 67,
    "const32Bit": 17,
    "const64Bit": 58,
    "numConstZeroes": 46,
    "numConstOnes": 13,
    "UncondBranches": 25,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 47,
    "NumBitCastInst": 16,
    "NumBrInst": 46,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 42,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 83,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 42,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 49,
    "TotalInsts": 323,
    "TotalMemInst": 181,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 152
  },
  "baseline_oz_instcount": 149,
  "knowledge_base_entry": [
    "--loop-predication",
    "--gvn-hoist",
    "--dce",
    "--reassociate",
    "--lower-expect",
    "--loop-instsimplify",
    "--jump-threading",
    "--sroa",
    "--bdce",
    "--early-cse-memssa",
    "--globalopt",
    "--loop-deletion",
    "--jump-threading",
    "--newgvn",
    "--simplifycfg",
    "--slsr",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--mem2reg",
    "--early-cse-memssa",
    "--mem2reg",
    "--dce",
    "--load-store-vectorizer",
    "--slsr",
    "--loop-reroll",
    "--newgvn",
    "-loop-reduce",
    "--early-cse-memssa",
    "--memcpyopt",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--jump-threading",
    "--adce",
    "--jump-threading",
    "--mergefunc",
    "--mergefunc",
    "--instsimplify",
    "--dse",
    "--early-cse",
    "--loop-fusion",
    "--gvn-hoist",
    "--mem2reg",
    "--load-store-vectorizer",
    "--slsr",
    "--loop-reroll",
    "--newgvn",
    "-loop-reduce",
    "--early-cse-memssa",
    "--memcpyopt",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--jump-threading",
    "--adce",
    "--jump-threading",
    "--mergefunc",
    "--mergefunc",
    "--instsimplify",
    "--dse",
    "--early-cse",
    "--loop-fusion",
    "--gvn-hoist",
    "--mem2reg",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--slsr",
    "--slp-vectorizer",
    "--instsimplify",
    "--inline",
    "--instsimplify",
    "--sroa",
    "--loop-reroll",
    "--newgvn",
    "-loop-reduce",
    "--early-cse-memssa",
    "--memcpyopt",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--jump-threading",
    "--adce",
    "--jump-threading",
    "--mergefunc",
    "--mergefunc",
    "--instsimplify",
    "--dse",
    "--early-cse",
    "--loop-fusion",
    "--gvn-hoist",
    "--mem2reg",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--slsr",
    "--slp-vectorizer",
    "--instsimplify",
    "--inline",
    "--instsimplify",
    "--sroa",
    "--loop-reroll",
    "--loop-fusion",
    "--simplifycfg",
    "--slsr",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--mem2reg",
    "--early-cse-memssa",
    "--mem2reg",
    "--dce",
    "--load-store-vectorizer",
    "--slsr",
    "--loop-reroll",
    "--newgvn",
    "-loop-reduce",
    "--early-cse-memssa",
    "--simplifycfg",
    "--sccp",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--consthoist",
          "--slp-vectorizer",
          "--loweratomic",
          "--lower-guard-intrinsic",
          "--functionattrs",
          "--sroa",
          "--mldst-motion",
          "--loop-reroll",
          "--instcombine",
          "--newgvn",
          "--canonicalize-aliases",
          "--strip",
          "--jump-threading",
          "--inline",
          "--load-store-vectorizer",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--consthoist",
      "--slp-vectorizer",
      "--loweratomic",
      "--lower-guard-intrinsic",
      "--functionattrs",
      "--sroa",
      "--mldst-motion",
      "--loop-reroll",
      "--instcombine",
      "--newgvn",
      "--canonicalize-aliases",
      "--strip",
      "--jump-threading",
      "--inline",
      "--load-store-vectorizer",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}