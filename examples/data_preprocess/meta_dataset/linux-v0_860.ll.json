{
  "program_id": "linux-v0_860.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 8,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 3,
    "oneSuccessor": 8,
    "twoPred": 7,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 1,
    "BranchCount": 15,
    "returnInt": 10,
    "CriticalCount": 7,
    "NumEdges": 22,
    "const32Bit": 107,
    "const64Bit": 1,
    "numConstZeroes": 61,
    "numConstOnes": 34,
    "UncondBranches": 8,
    "binaryConstArg": 9,
    "NumAShrInst": 1,
    "NumAddInst": 5,
    "NumAllocaInst": 25,
    "NumAndInst": 3,
    "BlockMid": 8,
    "BlockLow": 12,
    "NumBitCastInst": 13,
    "NumBrInst": 15,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 57,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 31,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 18,
    "TotalBlocks": 20,
    "TotalInsts": 239,
    "TotalMemInst": 161,
    "TotalFuncs": 9,
    "ArgsPhi": 2,
    "testUnary": 118
  },
  "baseline_oz_instcount": 238,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--gvn",
    "--aggressive-instcombine",
    "--mem2reg",
    "--adce",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--bdce",
    "--ipsccp",
    "--newgvn",
    "--jump-threading",
    "--adce",
    "--instcombine",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--early-cse-memssa",
          "--globaldce",
          "--nary-reassociate",
          "--tailcallelim",
          "--correlated-propagation",
          "--infer-address-spaces",
          "--lower-guard-intrinsic",
          "--loop-instsimplify",
          "--loweratomic",
          "--lcssa",
          "--loop-fusion",
          "--name-anon-globals",
          "--ipsccp",
          "--float2int",
          "--partially-inline-libcalls",
          "--memcpyopt",
          "--prune-eh",
          "--cross-dso-cfi",
          "--separate-const-offset-from-gep",
          "--reassociate",
          "--lowerswitch",
          "--aggressive-instcombine",
          "--mergeicmps",
          "--alignment-from-assumptions",
          "--coro-early",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--early-cse-memssa",
      "--globaldce",
      "--nary-reassociate",
      "--tailcallelim",
      "--correlated-propagation",
      "--infer-address-spaces",
      "--lower-guard-intrinsic",
      "--loop-instsimplify",
      "--loweratomic",
      "--lcssa",
      "--loop-fusion",
      "--name-anon-globals",
      "--ipsccp",
      "--float2int",
      "--partially-inline-libcalls",
      "--memcpyopt",
      "--prune-eh",
      "--cross-dso-cfi",
      "--separate-const-offset-from-gep",
      "--reassociate",
      "--lowerswitch",
      "--aggressive-instcombine",
      "--mergeicmps",
      "--alignment-from-assumptions",
      "--coro-early",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}