{
  "program_id": "github-v0_13011.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 78,
    "onePredOneSuc": 54,
    "onePredTwoSuc": 23,
    "oneSuccessor": 65,
    "twoPred": 18,
    "twoPredOneSuc": 7,
    "twoEach": 5,
    "twoSuccessor": 41,
    "morePreds": 12,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 120,
    "BeginPhi": 3,
    "BranchCount": 106,
    "returnInt": 13,
    "CriticalCount": 21,
    "NumEdges": 162,
    "const32Bit": 341,
    "const64Bit": 14,
    "numConstZeroes": 150,
    "numConstOnes": 112,
    "UncondBranches": 65,
    "binaryConstArg": 27,
    "NumAShrInst": 1,
    "NumAddInst": 14,
    "NumAllocaInst": 72,
    "NumAndInst": 5,
    "BlockMid": 18,
    "BlockLow": 105,
    "NumBitCastInst": 2,
    "NumBrInst": 106,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 96,
    "NumICmpInst": 45,
    "NumLShrInst": 0,
    "NumLoadInst": 266,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 3,
    "NumRetInst": 15,
    "NumSExtInst": 7,
    "NumSelectInst": 4,
    "NumShlInst": 9,
    "NumStoreInst": 149,
    "NumSubInst": 9,
    "NumTruncInst": 23,
    "NumXorInst": 0,
    "NumZExtInst": 79,
    "TotalBlocks": 123,
    "TotalInsts": 930,
    "TotalMemInst": 603,
    "TotalFuncs": 19,
    "ArgsPhi": 6,
    "testUnary": 449
  },
  "baseline_oz_instcount": 930,
  "knowledge_base_entry": [
    "--instcombine",
    "--memcpyopt",
    "--gvn",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--mem2reg",
    "--simplifycfg",
    "--flattencfg",
    "--sroa",
    "--sccp",
    "--instcombine",
    "--early-cse",
    "--slp-vectorizer",
    "--early-cse",
    "--instsimplify",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--dse",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--bdce",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--lower-expect",
    "--prune-eh",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--sroa",
    "--sccp",
    "--globalopt",
    "--instsimplify",
    "--sccp",
    "--gvn-hoist",
    "--globalopt",
    "--instsimplify",
    "--ipsccp",
    "--jump-threading",
    "--load-store-vectorizer",
    "--bdce",
    "--ipsccp",
    "--sroa",
    "--loop-simplifycfg",
    "--lower-expect",
    "--prune-eh",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--sroa",
    "--sccp",
    "--globalopt",
    "--instsimplify",
    "--sccp",
    "--gvn-hoist",
    "--globalopt",
    "--instsimplify",
    "--ipsccp",
    "--jump-threading",
    "--load-store-vectorizer",
    "--bdce",
    "--ipsccp",
    "--sroa",
    "--loop-simplifycfg",
    "--prune-eh",
    "--lower-expect",
    "--aggressive-instcombine",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--loop-fusion",
          "--rewrite-statepoints-for-gc",
          "--lower-widenable-condition",
          "--partial-inliner",
          "--lcssa",
          "--strip",
          "--prune-eh",
          "--elim-avail-extern",
          "--loop-predication",
          "--instsimplify",
          "--loop-guard-widening",
          "--strip-nondebug",
          "--strip-debug-declare",
          "--separate-const-offset-from-gep",
          "--inject-tli-mappings",
          "--memcpyopt",
          "--loop-interchange",
          "--coro-cleanup",
          "--aggressive-instcombine",
          "--inline",
          "--coro-early",
          "--libcalls-shrinkwrap",
          "--scalarizer",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--loop-fusion",
      "--rewrite-statepoints-for-gc",
      "--lower-widenable-condition",
      "--partial-inliner",
      "--lcssa",
      "--strip",
      "--prune-eh",
      "--elim-avail-extern",
      "--loop-predication",
      "--instsimplify",
      "--loop-guard-widening",
      "--strip-nondebug",
      "--strip-debug-declare",
      "--separate-const-offset-from-gep",
      "--inject-tli-mappings",
      "--memcpyopt",
      "--loop-interchange",
      "--coro-cleanup",
      "--aggressive-instcombine",
      "--inline",
      "--coro-early",
      "--libcalls-shrinkwrap",
      "--scalarizer",
      "--float2int"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}