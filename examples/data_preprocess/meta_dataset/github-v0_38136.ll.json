{
  "program_id": "github-v0_38136.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 1,
    "oneSuccessor": 7,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 7,
    "CriticalCount": 4,
    "NumEdges": 19,
    "const32Bit": 26,
    "const64Bit": 3,
    "numConstZeroes": 11,
    "numConstOnes": 15,
    "UncondBranches": 7,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 14,
    "NumBitCastInst": 0,
    "NumBrInst": 13,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 19,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 16,
    "TotalInsts": 97,
    "TotalMemInst": 64,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 34
  },
  "baseline_oz_instcount": 98,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--separate-const-offset-from-gep",
          "--loop-interchange",
          "--libcalls-shrinkwrap",
          "--alignment-from-assumptions",
          "--called-value-propagation",
          "--guard-widening",
          "--div-rem-pairs",
          "--licm",
          "--deadargelim",
          "--reassociate",
          "--coro-early",
          "--lower-widenable-condition",
          "--strip-dead-prototypes",
          "--barrier",
          "--loop-idiom",
          "--die",
          "--constprop",
          "--memcpyopt",
          "--nary-reassociate",
          "--flattencfg",
          "--loop-reroll",
          "--post-inline-ee-instrument",
          "--lower-constant-intrinsics",
          "--loop-rotate",
          "--sroa",
          "--infer-address-spaces"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--separate-const-offset-from-gep",
      "--loop-interchange",
      "--libcalls-shrinkwrap",
      "--alignment-from-assumptions",
      "--called-value-propagation",
      "--guard-widening",
      "--div-rem-pairs",
      "--licm",
      "--deadargelim",
      "--reassociate",
      "--coro-early",
      "--lower-widenable-condition",
      "--strip-dead-prototypes",
      "--barrier",
      "--loop-idiom",
      "--die",
      "--constprop",
      "--memcpyopt",
      "--nary-reassociate",
      "--flattencfg",
      "--loop-reroll",
      "--post-inline-ee-instrument",
      "--lower-constant-intrinsics",
      "--loop-rotate",
      "--sroa",
      "--infer-address-spaces"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}