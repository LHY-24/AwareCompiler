{
  "program_id": "linux-v0_11501.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 49,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 18,
    "oneSuccessor": 36,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 26,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 91,
    "BeginPhi": 0,
    "BranchCount": 62,
    "returnInt": 26,
    "CriticalCount": 6,
    "NumEdges": 88,
    "const32Bit": 271,
    "const64Bit": 27,
    "numConstZeroes": 118,
    "numConstOnes": 91,
    "UncondBranches": 36,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 76,
    "NumAndInst": 5,
    "BlockMid": 10,
    "BlockLow": 81,
    "NumBitCastInst": 15,
    "NumBrInst": 62,
    "NumCallInst": 81,
    "NumGetElementPtrInst": 84,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 213,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 29,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 117,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 2,
    "NumZExtInst": 9,
    "TotalBlocks": 91,
    "TotalInsts": 739,
    "TotalMemInst": 571,
    "TotalFuncs": 53,
    "ArgsPhi": 0,
    "testUnary": 328
  },
  "baseline_oz_instcount": 739,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--bdce",
    "--ipsccp",
    "--gvn-hoist",
    "--inline",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip",
          "--functionattrs",
          "--loop-fusion",
          "--aggressive-instcombine",
          "--loop-instsimplify",
          "--sccp",
          "--mergefunc",
          "--early-cse",
          "--inferattrs",
          "--flattencfg",
          "--coro-cleanup",
          "--loop-deletion",
          "--licm",
          "--indvars",
          "--loop-distribute",
          "--alignment-from-assumptions",
          "--correlated-propagation",
          "--constprop",
          "--forceattrs",
          "--pgo-memop-opt",
          "--lowerswitch",
          "--add-discriminators",
          "--loop-unroll-and-jam",
          "--loop-data-prefetch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip",
      "--functionattrs",
      "--loop-fusion",
      "--aggressive-instcombine",
      "--loop-instsimplify",
      "--sccp",
      "--mergefunc",
      "--early-cse",
      "--inferattrs",
      "--flattencfg",
      "--coro-cleanup",
      "--loop-deletion",
      "--licm",
      "--indvars",
      "--loop-distribute",
      "--alignment-from-assumptions",
      "--correlated-propagation",
      "--constprop",
      "--forceattrs",
      "--pgo-memop-opt",
      "--lowerswitch",
      "--add-discriminators",
      "--loop-unroll-and-jam",
      "--loop-data-prefetch"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}