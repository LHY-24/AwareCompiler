{
  "program_id": "linux-v0_7264.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 78,
    "onePredOneSuc": 62,
    "onePredTwoSuc": 16,
    "oneSuccessor": 72,
    "twoPred": 18,
    "twoPredOneSuc": 9,
    "twoEach": 7,
    "twoSuccessor": 29,
    "morePreds": 5,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 112,
    "BeginPhi": 3,
    "BranchCount": 101,
    "returnInt": 15,
    "CriticalCount": 16,
    "NumEdges": 130,
    "const32Bit": 403,
    "const64Bit": 20,
    "numConstZeroes": 199,
    "numConstOnes": 146,
    "UncondBranches": 72,
    "binaryConstArg": 40,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 88,
    "NumAndInst": 16,
    "BlockMid": 13,
    "BlockLow": 102,
    "NumBitCastInst": 32,
    "NumBrInst": 101,
    "NumCallInst": 57,
    "NumGetElementPtrInst": 127,
    "NumICmpInst": 39,
    "NumLShrInst": 6,
    "NumLoadInst": 231,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 3,
    "NumRetInst": 14,
    "NumSExtInst": 6,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 107,
    "NumSubInst": 2,
    "NumTruncInst": 11,
    "NumXorInst": 14,
    "NumZExtInst": 27,
    "TotalBlocks": 115,
    "TotalInsts": 889,
    "TotalMemInst": 610,
    "TotalFuncs": 34,
    "ArgsPhi": 6,
    "testUnary": 395
  },
  "baseline_oz_instcount": 889,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--newgvn",
    "--early-cse",
    "--die",
    "--mergefunc",
    "--adce",
    "--aggressive-instcombine",
    "--mem2reg",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--prune-eh",
    "--inline",
    "--early-cse-memssa",
    "--loop-deletion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--sancov",
          "--loop-data-prefetch",
          "--coro-early",
          "--instnamer",
          "--callsite-splitting",
          "--lower-expect",
          "--deadargelim",
          "--globaldce",
          "--inject-tli-mappings",
          "--gvn-hoist",
          "--indvars",
          "--always-inline",
          "--memcpyopt",
          "--newgvn",
          "--globalopt",
          "--tailcallelim",
          "--mergefunc",
          "--sroa",
          "--loop-deletion",
          "--early-cse-memssa",
          "--early-cse",
          "--die",
          "--lower-matrix-intrinsics",
          "--simplifycfg",
          "--ipsccp",
          "--slsr",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--sancov",
      "--loop-data-prefetch",
      "--coro-early",
      "--instnamer",
      "--callsite-splitting",
      "--lower-expect",
      "--deadargelim",
      "--globaldce",
      "--inject-tli-mappings",
      "--gvn-hoist",
      "--indvars",
      "--always-inline",
      "--memcpyopt",
      "--newgvn",
      "--globalopt",
      "--tailcallelim",
      "--mergefunc",
      "--sroa",
      "--loop-deletion",
      "--early-cse-memssa",
      "--early-cse",
      "--die",
      "--lower-matrix-intrinsics",
      "--simplifycfg",
      "--ipsccp",
      "--slsr",
      "--gvn"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}