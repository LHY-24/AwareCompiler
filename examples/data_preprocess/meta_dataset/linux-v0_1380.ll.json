{
  "program_id": "linux-v0_1380.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 16,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 49,
    "const64Bit": 2,
    "numConstZeroes": 4,
    "numConstOnes": 29,
    "UncondBranches": 0,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 25,
    "NumAndInst": 4,
    "BlockMid": 2,
    "BlockLow": 14,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 30,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 16,
    "TotalInsts": 193,
    "TotalMemInst": 139,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 81
  },
  "baseline_oz_instcount": 193,
  "knowledge_base_entry": [
    "--loop-deletion",
    "--early-cse-memssa",
    "--die",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--dse",
    "--globalopt",
    "--mergefunc",
    "--gvn-hoist",
    "--mergefunc",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--mem2reg",
    "--instcombine",
    "--bdce",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--die",
    "--correlated-propagation",
    "--jump-threading",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--jump-threading",
          "--aggressive-instcombine",
          "--pgo-memop-opt",
          "--deadargelim",
          "--mem2reg",
          "--alignment-from-assumptions",
          "--tailcallelim",
          "--adce",
          "--correlated-propagation",
          "--instsimplify",
          "--separate-const-offset-from-gep",
          "--lower-matrix-intrinsics",
          "--callsite-splitting",
          "--sroa",
          "--partial-inliner",
          "--scalarizer",
          "--coro-early",
          "--loop-instsimplify",
          "--infer-address-spaces",
          "--loop-interchange",
          "--gvn",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--jump-threading",
      "--aggressive-instcombine",
      "--pgo-memop-opt",
      "--deadargelim",
      "--mem2reg",
      "--alignment-from-assumptions",
      "--tailcallelim",
      "--adce",
      "--correlated-propagation",
      "--instsimplify",
      "--separate-const-offset-from-gep",
      "--lower-matrix-intrinsics",
      "--callsite-splitting",
      "--sroa",
      "--partial-inliner",
      "--scalarizer",
      "--coro-early",
      "--loop-instsimplify",
      "--infer-address-spaces",
      "--loop-interchange",
      "--gvn",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+8.3%"
  }
}