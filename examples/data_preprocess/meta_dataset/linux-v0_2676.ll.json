{
  "program_id": "linux-v0_2676.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 2,
    "oneSuccessor": 9,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 5,
    "CriticalCount": 1,
    "NumEdges": 19,
    "const32Bit": 55,
    "const64Bit": 4,
    "numConstZeroes": 21,
    "numConstOnes": 26,
    "UncondBranches": 9,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 23,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 19,
    "NumBitCastInst": 2,
    "NumBrInst": 14,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 24,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 35,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 4,
    "TotalBlocks": 21,
    "TotalInsts": 143,
    "TotalMemInst": 102,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 60
  },
  "baseline_oz_instcount": 142,
  "knowledge_base_entry": [
    "--flattencfg",
    "--ipsccp",
    "--inline",
    "--licm",
    "--mldst-motion",
    "--sroa",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--loop-simplifycfg",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-guard-widening",
          "--loop-reroll",
          "--sancov",
          "--coro-elide",
          "--ipconstprop",
          "--loop-load-elim",
          "--partial-inliner",
          "--deadargelim",
          "--loop-simplifycfg",
          "--post-inline-ee-instrument",
          "--guard-widening",
          "--sink",
          "--loop-instsimplify",
          "--early-cse-memssa",
          "--mergefunc",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-guard-widening",
      "--loop-reroll",
      "--sancov",
      "--coro-elide",
      "--ipconstprop",
      "--loop-load-elim",
      "--partial-inliner",
      "--deadargelim",
      "--loop-simplifycfg",
      "--post-inline-ee-instrument",
      "--guard-widening",
      "--sink",
      "--loop-instsimplify",
      "--early-cse-memssa",
      "--mergefunc",
      "--indvars"
    ],
    "performance_vs_Oz": "+2.8%"
  }
}