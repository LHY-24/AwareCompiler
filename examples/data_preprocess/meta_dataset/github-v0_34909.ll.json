{
  "program_id": "github-v0_34909.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 7,
    "CriticalCount": 3,
    "NumEdges": 13,
    "const32Bit": 134,
    "const64Bit": 7,
    "numConstZeroes": 78,
    "numConstOnes": 41,
    "UncondBranches": 5,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 33,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 8,
    "NumBitCastInst": 16,
    "NumBrInst": 9,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 4,
    "NumLShrInst": 2,
    "NumLoadInst": 102,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 36,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 4,
    "TotalBlocks": 16,
    "TotalInsts": 299,
    "TotalMemInst": 248,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 158
  },
  "baseline_oz_instcount": 299,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--early-cse-memssa",
    "--mergefunc",
    "--bdce",
    "--aggressive-instcombine",
    "--newgvn",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--sroa",
    "--instcombine",
    "--adce",
    "--ipsccp",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--loop-sink",
          "--lowerinvoke",
          "--mem2reg",
          "--aggressive-instcombine",
          "--die",
          "--insert-gcov-profiling",
          "--loop-versioning",
          "--slsr",
          "--lcssa",
          "--forceattrs",
          "--loop-simplifycfg",
          "--speculative-execution"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--loop-sink",
      "--lowerinvoke",
      "--mem2reg",
      "--aggressive-instcombine",
      "--die",
      "--insert-gcov-profiling",
      "--loop-versioning",
      "--slsr",
      "--lcssa",
      "--forceattrs",
      "--loop-simplifycfg",
      "--speculative-execution"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}