{
  "program_id": "poj104-v1_46_3075.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 4,
    "oneSuccessor": 33,
    "twoPred": 8,
    "twoPredOneSuc": 1,
    "twoEach": 6,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 55,
    "BeginPhi": 0,
    "BranchCount": 45,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 57,
    "const32Bit": 62,
    "const64Bit": 39,
    "numConstZeroes": 21,
    "numConstOnes": 42,
    "UncondBranches": 33,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 20,
    "NumAllocaInst": 25,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 52,
    "NumBitCastInst": 31,
    "NumBrInst": 45,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 79,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 40,
    "NumSubInst": 6,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 55,
    "TotalInsts": 346,
    "TotalMemInst": 211,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 146
  },
  "baseline_oz_instcount": 160,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--mergefunc",
    "--globaldce",
    "--mergefunc",
    "--slp-vectorizer",
    "--adce",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--dse",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--loop-instsimplify",
    "--sroa",
    "--prune-eh",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--simplifycfg",
    "--nary-reassociate",
    "--instsimplify",
    "--prune-eh",
    "--sroa",
    "--jump-threading",
    "--early-cse",
    "--ipsccp",
    "--loweratomic",
    "--globalopt",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--aggressive-instcombine",
    "--die",
    "--inline",
    "--instsimplify",
    "--mergefunc",
    "--bdce",
    "--elim-avail-extern",
    "--simplifycfg",
    "--nary-reassociate",
    "--instsimplify",
    "--mergefunc",
    "--bdce",
    "--sccp",
    "--globalopt",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--aggressive-instcombine",
    "--die",
    "--inline",
    "--instsimplify",
    "--mergefunc",
    "--bdce",
    "--sccp",
    "--globalopt",
    "--flattencfg",
    "--aggressive-instcombine",
    "--mergefunc",
    "--jump-threading",
    "--early-cse",
    "--mldst-motion",
    "--slp-vectorizer",
    "--adce",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--bdce",
    "--loop-simplifycfg",
    "--sroa",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--adce",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--aggressive-instcombine",
    "--die",
    "--inline",
    "--instsimplify",
    "--mergefunc",
    "--bdce",
    "--sccp",
    "--globalopt",
    "--flattencfg",
    "--aggressive-instcombine",
    "--mergefunc",
    "--jump-threading",
    "--gvn-hoist",
    "--simplifycfg",
    "--newgvn",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--loop-simplifycfg",
          "--newgvn",
          "--loop-unroll",
          "--barrier",
          "--loop-deletion",
          "--sink",
          "--partial-inliner",
          "--early-cse",
          "--bdce",
          "--sancov",
          "--early-cse-memssa",
          "--name-anon-globals",
          "--always-inline",
          "--mem2reg",
          "--loop-fusion",
          "--globaldce",
          "--elim-avail-extern",
          "--simplifycfg",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--loop-simplifycfg",
      "--newgvn",
      "--loop-unroll",
      "--barrier",
      "--loop-deletion",
      "--sink",
      "--partial-inliner",
      "--early-cse",
      "--bdce",
      "--sancov",
      "--early-cse-memssa",
      "--name-anon-globals",
      "--always-inline",
      "--mem2reg",
      "--loop-fusion",
      "--globaldce",
      "--elim-avail-extern",
      "--simplifycfg",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+9.4%"
  }
}