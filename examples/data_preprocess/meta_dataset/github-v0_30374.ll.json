{
  "program_id": "github-v0_30374.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 3,
    "oneSuccessor": 8,
    "twoPred": 1,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 1,
    "CriticalCount": 2,
    "NumEdges": 19,
    "const32Bit": 20,
    "const64Bit": 5,
    "numConstZeroes": 6,
    "numConstOnes": 12,
    "UncondBranches": 8,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 13,
    "NumBitCastInst": 0,
    "NumBrInst": 12,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 20,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 14,
    "TotalInsts": 76,
    "TotalMemInst": 52,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 31
  },
  "baseline_oz_instcount": 77,
  "knowledge_base_entry": [
    "--jump-threading",
    "--correlated-propagation",
    "--adce",
    "--early-cse-memssa",
    "--instsimplify",
    "--newgvn",
    "--aggressive-instcombine",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--alignment-from-assumptions",
          "--globalsplit",
          "--strip",
          "--loweratomic",
          "--attributor",
          "--constprop",
          "--lcssa",
          "--early-cse-memssa",
          "--loop-data-prefetch",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--alignment-from-assumptions",
      "--globalsplit",
      "--strip",
      "--loweratomic",
      "--attributor",
      "--constprop",
      "--lcssa",
      "--early-cse-memssa",
      "--loop-data-prefetch",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}