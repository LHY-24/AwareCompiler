{
  "program_id": "linux-v0_11542.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 3,
    "oneSuccessor": 17,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 16,
    "CriticalCount": 3,
    "NumEdges": 39,
    "const32Bit": 224,
    "const64Bit": 43,
    "numConstZeroes": 119,
    "numConstOnes": 76,
    "UncondBranches": 17,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 53,
    "NumAndInst": 3,
    "BlockMid": 14,
    "BlockLow": 36,
    "NumBitCastInst": 14,
    "NumBrInst": 28,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 101,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 157,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 77,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 4,
    "NumZExtInst": 6,
    "TotalBlocks": 50,
    "TotalInsts": 546,
    "TotalMemInst": 434,
    "TotalFuncs": 36,
    "ArgsPhi": 0,
    "testUnary": 248
  },
  "baseline_oz_instcount": 547,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--newgvn",
    "--aggressive-instcombine",
    "--lower-expect",
    "--globalopt",
    "--sccp",
    "--jump-threading",
    "--bdce",
    "--dse",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--newgvn",
    "--aggressive-instcombine",
    "--newgvn",
    "--newgvn",
    "--reassociate",
    "--reassociate",
    "--instcombine",
    "--slsr",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--slsr",
          "--lower-guard-intrinsic",
          "--gvn-hoist",
          "--canonicalize-aliases",
          "--elim-avail-extern",
          "--coro-split",
          "--lowerinvoke",
          "--globaldce",
          "--newgvn",
          "--reassociate",
          "--redundant-dbg-inst-elim",
          "--strip-nondebug",
          "--aggressive-instcombine",
          "--sroa",
          "--loop-predication",
          "--coro-elide",
          "--barrier",
          "--loop-idiom",
          "--constprop",
          "--memcpyopt",
          "--nary-reassociate",
          "--slp-vectorizer",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--slsr",
      "--lower-guard-intrinsic",
      "--gvn-hoist",
      "--canonicalize-aliases",
      "--elim-avail-extern",
      "--coro-split",
      "--lowerinvoke",
      "--globaldce",
      "--newgvn",
      "--reassociate",
      "--redundant-dbg-inst-elim",
      "--strip-nondebug",
      "--aggressive-instcombine",
      "--sroa",
      "--loop-predication",
      "--coro-elide",
      "--barrier",
      "--loop-idiom",
      "--constprop",
      "--memcpyopt",
      "--nary-reassociate",
      "--slp-vectorizer",
      "--constmerge"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}