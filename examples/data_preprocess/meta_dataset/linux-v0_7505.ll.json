{
  "program_id": "linux-v0_7505.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 84,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 42,
    "oneSuccessor": 55,
    "twoPred": 20,
    "twoPredOneSuc": 9,
    "twoEach": 8,
    "twoSuccessor": 55,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 129,
    "BeginPhi": 0,
    "BranchCount": 110,
    "returnInt": 60,
    "CriticalCount": 36,
    "NumEdges": 174,
    "const32Bit": 232,
    "const64Bit": 24,
    "numConstZeroes": 119,
    "numConstOnes": 85,
    "UncondBranches": 55,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 64,
    "NumAndInst": 3,
    "BlockMid": 10,
    "BlockLow": 119,
    "NumBitCastInst": 6,
    "NumBrInst": 110,
    "NumCallInst": 70,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 54,
    "NumLShrInst": 0,
    "NumLoadInst": 187,
    "NumMulInst": 1,
    "NumOrInst": 19,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 101,
    "NumSubInst": 0,
    "NumTruncInst": 21,
    "NumXorInst": 0,
    "NumZExtInst": 33,
    "TotalBlocks": 129,
    "TotalInsts": 738,
    "TotalMemInst": 462,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 316
  },
  "baseline_oz_instcount": 738,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--gvn-hoist",
    "--lower-expect",
    "--globalopt",
    "--newgvn",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--sroa",
    "--prune-eh",
    "--inline",
    "--aggressive-instcombine",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--elim-avail-extern",
          "--name-anon-globals",
          "--globalopt",
          "--loop-versioning",
          "--coro-elide",
          "--argpromotion",
          "--loop-load-elim",
          "--instsimplify",
          "--always-inline",
          "-loop-reduce",
          "--loop-sink",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--elim-avail-extern",
      "--name-anon-globals",
      "--globalopt",
      "--loop-versioning",
      "--coro-elide",
      "--argpromotion",
      "--loop-load-elim",
      "--instsimplify",
      "--always-inline",
      "-loop-reduce",
      "--loop-sink",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+4.1%"
  }
}