{
  "program_id": "github-v0_17599.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 63,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 20,
    "oneSuccessor": 59,
    "twoPred": 28,
    "twoPredOneSuc": 14,
    "twoEach": 12,
    "twoSuccessor": 34,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 97,
    "BeginPhi": 0,
    "BranchCount": 93,
    "returnInt": 21,
    "CriticalCount": 14,
    "NumEdges": 127,
    "const32Bit": 95,
    "const64Bit": 0,
    "numConstZeroes": 38,
    "numConstOnes": 47,
    "UncondBranches": 59,
    "binaryConstArg": 14,
    "NumAShrInst": 2,
    "NumAddInst": 11,
    "NumAllocaInst": 36,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 93,
    "NumBitCastInst": 0,
    "NumBrInst": 93,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 34,
    "NumLShrInst": 0,
    "NumLoadInst": 80,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 76,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 2,
    "NumZExtInst": 26,
    "TotalBlocks": 97,
    "TotalInsts": 419,
    "TotalMemInst": 230,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 153
  },
  "baseline_oz_instcount": 420,
  "knowledge_base_entry": [
    "--globalopt",
    "--aggressive-instcombine",
    "--gvn",
    "--mem2reg",
    "--elim-avail-extern",
    "--flattencfg",
    "--adce",
    "--die",
    "--mergefunc",
    "--instsimplify",
    "--bdce",
    "--jump-threading",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--sroa",
          "--aggressive-instcombine",
          "--simplifycfg",
          "--ipsccp",
          "--slsr",
          "--functionattrs",
          "--dse",
          "--prune-eh",
          "--load-store-vectorizer",
          "--insert-gcov-profiling",
          "--deadargelim",
          "--mldst-motion",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--sroa",
      "--aggressive-instcombine",
      "--simplifycfg",
      "--ipsccp",
      "--slsr",
      "--functionattrs",
      "--dse",
      "--prune-eh",
      "--load-store-vectorizer",
      "--insert-gcov-profiling",
      "--deadargelim",
      "--mldst-motion",
      "--constmerge"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}