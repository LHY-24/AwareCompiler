{
  "program_id": "linux-v0_12003.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 79,
    "onePredOneSuc": 61,
    "onePredTwoSuc": 18,
    "oneSuccessor": 76,
    "twoPred": 27,
    "twoPredOneSuc": 13,
    "twoEach": 8,
    "twoSuccessor": 32,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 127,
    "BeginPhi": 2,
    "BranchCount": 108,
    "returnInt": 10,
    "CriticalCount": 17,
    "NumEdges": 140,
    "const32Bit": 334,
    "const64Bit": 38,
    "numConstZeroes": 137,
    "numConstOnes": 151,
    "UncondBranches": 76,
    "binaryConstArg": 32,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 113,
    "NumAndInst": 4,
    "BlockMid": 15,
    "BlockLow": 114,
    "NumBitCastInst": 10,
    "NumBrInst": 108,
    "NumCallInst": 65,
    "NumGetElementPtrInst": 94,
    "NumICmpInst": 42,
    "NumLShrInst": 1,
    "NumLoadInst": 244,
    "NumMulInst": 3,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 21,
    "NumSExtInst": 13,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 132,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 20,
    "NumZExtInst": 14,
    "TotalBlocks": 129,
    "TotalInsts": 900,
    "TotalMemInst": 648,
    "TotalFuncs": 35,
    "ArgsPhi": 4,
    "testUnary": 402
  },
  "baseline_oz_instcount": 895,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--mergefunc",
    "--dse",
    "--die",
    "--ipsccp",
    "--loweratomic",
    "--early-cse-memssa",
    "--mem2reg",
    "--sccp",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--separate-const-offset-from-gep",
          "--loop-unroll",
          "--add-discriminators",
          "--lcssa",
          "--loop-distribute",
          "--globalopt",
          "--mergefunc",
          "--insert-gcov-profiling",
          "--adce",
          "--strip",
          "--consthoist",
          "--lower-expect",
          "--reassociate",
          "--sancov",
          "-loop-reduce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--separate-const-offset-from-gep",
      "--loop-unroll",
      "--add-discriminators",
      "--lcssa",
      "--loop-distribute",
      "--globalopt",
      "--mergefunc",
      "--insert-gcov-profiling",
      "--adce",
      "--strip",
      "--consthoist",
      "--lower-expect",
      "--reassociate",
      "--sancov",
      "-loop-reduce"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}