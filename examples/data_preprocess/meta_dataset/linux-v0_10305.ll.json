{
  "program_id": "linux-v0_10305.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 49,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 13,
    "oneSuccessor": 49,
    "twoPred": 19,
    "twoPredOneSuc": 13,
    "twoEach": 0,
    "twoSuccessor": 19,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 90,
    "BeginPhi": 0,
    "BranchCount": 68,
    "returnInt": 15,
    "CriticalCount": 11,
    "NumEdges": 97,
    "const32Bit": 238,
    "const64Bit": 21,
    "numConstZeroes": 100,
    "numConstOnes": 87,
    "UncondBranches": 49,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 62,
    "NumAndInst": 14,
    "BlockMid": 10,
    "BlockLow": 80,
    "NumBitCastInst": 9,
    "NumBrInst": 68,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 58,
    "NumICmpInst": 23,
    "NumLShrInst": 3,
    "NumLoadInst": 138,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 95,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 7,
    "NumZExtInst": 14,
    "TotalBlocks": 90,
    "TotalInsts": 567,
    "TotalMemInst": 392,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 233
  },
  "baseline_oz_instcount": 567,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--jump-threading",
    "--aggressive-instcombine",
    "--dse",
    "--early-cse-memssa",
    "--dse",
    "--early-cse",
    "-loop-reduce",
    "--newgvn",
    "--loop-reroll",
    "--slp-vectorizer",
    "--die",
    "--sccp",
    "--loop-instsimplify",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--lower-matrix-intrinsics",
          "--simplifycfg",
          "--gvn",
          "--newgvn",
          "--globaldce",
          "--slp-vectorizer",
          "--ipsccp",
          "--forceattrs",
          "--float2int",
          "--licm",
          "--early-cse",
          "--functionattrs",
          "--jump-threading",
          "--lower-expect",
          "--flattencfg",
          "--coro-cleanup",
          "--adce",
          "--rewrite-statepoints-for-gc",
          "--loop-fusion",
          "--dse",
          "--lower-widenable-condition",
          "--prune-eh",
          "--div-rem-pairs",
          "--canonicalize-aliases",
          "--aggressive-instcombine",
          "--argpromotion",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--lower-matrix-intrinsics",
      "--simplifycfg",
      "--gvn",
      "--newgvn",
      "--globaldce",
      "--slp-vectorizer",
      "--ipsccp",
      "--forceattrs",
      "--float2int",
      "--licm",
      "--early-cse",
      "--functionattrs",
      "--jump-threading",
      "--lower-expect",
      "--flattencfg",
      "--coro-cleanup",
      "--adce",
      "--rewrite-statepoints-for-gc",
      "--loop-fusion",
      "--dse",
      "--lower-widenable-condition",
      "--prune-eh",
      "--div-rem-pairs",
      "--canonicalize-aliases",
      "--aggressive-instcombine",
      "--argpromotion",
      "--always-inline"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}