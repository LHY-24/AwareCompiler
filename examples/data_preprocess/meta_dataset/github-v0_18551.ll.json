{
  "program_id": "github-v0_18551.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 29,
    "const64Bit": 44,
    "numConstZeroes": 46,
    "numConstOnes": 19,
    "UncondBranches": 13,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 30,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 48,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 1,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 33,
    "TotalBlocks": 24,
    "TotalInsts": 209,
    "TotalMemInst": 118,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 106
  },
  "baseline_oz_instcount": 209,
  "knowledge_base_entry": [
    "--irce",
    "--early-cse",
    "--nary-reassociate",
    "--licm",
    "--aggressive-instcombine",
    "--inline",
    "--bdce",
    "--mergefunc",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--globalopt",
          "--slp-vectorizer",
          "--loop-simplifycfg",
          "--bdce",
          "--globaldce",
          "--correlated-propagation",
          "--functionattrs",
          "--loop-unroll-and-jam",
          "--strip",
          "--rpo-functionattrs",
          "--loop-vectorize",
          "--loop-interchange",
          "--ipsccp",
          "--loop-load-elim",
          "--loop-versioning",
          "--canonicalize-aliases",
          "--consthoist",
          "--called-value-propagation",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--globalopt",
      "--slp-vectorizer",
      "--loop-simplifycfg",
      "--bdce",
      "--globaldce",
      "--correlated-propagation",
      "--functionattrs",
      "--loop-unroll-and-jam",
      "--strip",
      "--rpo-functionattrs",
      "--loop-vectorize",
      "--loop-interchange",
      "--ipsccp",
      "--loop-load-elim",
      "--loop-versioning",
      "--canonicalize-aliases",
      "--consthoist",
      "--called-value-propagation",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+11.5%"
  }
}