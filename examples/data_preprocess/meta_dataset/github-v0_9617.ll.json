{
  "program_id": "github-v0_9617.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 9,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 3,
    "oneSuccessor": 7,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 10,
    "morePreds": 1,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 4,
    "BranchCount": 17,
    "returnInt": 3,
    "CriticalCount": 11,
    "NumEdges": 27,
    "const32Bit": 13,
    "const64Bit": 6,
    "numConstZeroes": 6,
    "numConstOnes": 5,
    "UncondBranches": 7,
    "binaryConstArg": 12,
    "NumAShrInst": 3,
    "NumAddInst": 5,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 17,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 3,
    "NumSExtInst": 7,
    "NumSelectInst": 2,
    "NumShlInst": 3,
    "NumStoreInst": 10,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 20,
    "TotalInsts": 112,
    "TotalMemInst": 49,
    "TotalFuncs": 4,
    "ArgsPhi": 8,
    "testUnary": 27
  },
  "baseline_oz_instcount": 112,
  "knowledge_base_entry": [
    "--globaldce",
    "--ipsccp",
    "--globalopt",
    "--loop-instsimplify",
    "--lower-expect",
    "--early-cse",
    "--sccp",
    "--licm",
    "--mldst-motion",
    "--mem2reg",
    "--jump-threading",
    "--flattencfg",
    "--instcombine",
    "--mem2reg",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--jump-threading",
    "--simplifycfg",
    "--instsimplify",
    "--ipsccp",
    "--dce",
    "--sroa",
    "--lower-expect",
    "--nary-reassociate",
    "--sroa",
    "--mem2reg",
    "--early-cse",
    "--sccp",
    "--licm",
    "--mldst-motion",
    "--mem2reg",
    "--jump-threading",
    "--flattencfg",
    "--instcombine",
    "--mem2reg",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--jump-threading",
    "--simplifycfg",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-expect",
          "--attributor",
          "--rewrite-statepoints-for-gc",
          "--dse",
          "--nary-reassociate",
          "--early-cse-memssa",
          "--loop-deletion",
          "--loop-fusion",
          "--deadargelim",
          "--argpromotion",
          "--libcalls-shrinkwrap",
          "--name-anon-globals",
          "--tailcallelim",
          "--flattencfg",
          "--loop-instsimplify",
          "--canonicalize-aliases",
          "--loop-versioning-licm",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-expect",
      "--attributor",
      "--rewrite-statepoints-for-gc",
      "--dse",
      "--nary-reassociate",
      "--early-cse-memssa",
      "--loop-deletion",
      "--loop-fusion",
      "--deadargelim",
      "--argpromotion",
      "--libcalls-shrinkwrap",
      "--name-anon-globals",
      "--tailcallelim",
      "--flattencfg",
      "--loop-instsimplify",
      "--canonicalize-aliases",
      "--loop-versioning-licm",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}