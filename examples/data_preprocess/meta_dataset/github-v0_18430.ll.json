{
  "program_id": "github-v0_18430.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 0,
    "oneSuccessor": 27,
    "twoPred": 9,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 49,
    "BeginPhi": 0,
    "BranchCount": 36,
    "returnInt": 3,
    "CriticalCount": 9,
    "NumEdges": 45,
    "const32Bit": 67,
    "const64Bit": 2,
    "numConstZeroes": 15,
    "numConstOnes": 50,
    "UncondBranches": 27,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 39,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 47,
    "NumBitCastInst": 5,
    "NumBrInst": 36,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 55,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 49,
    "TotalInsts": 196,
    "TotalMemInst": 133,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 71
  },
  "baseline_oz_instcount": 196,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--lower-expect",
    "--simplifycfg",
    "--sroa",
    "--loop-reroll",
    "--memcpyopt",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--rewrite-statepoints-for-gc",
          "--indvars",
          "--loop-unroll-and-jam",
          "--instsimplify",
          "--early-cse",
          "--sink",
          "--loop-guard-widening",
          "--deadargelim",
          "--lowerswitch",
          "--partial-inliner",
          "--hotcoldsplit",
          "--consthoist",
          "--mergeicmps",
          "--add-discriminators",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--rewrite-statepoints-for-gc",
      "--indvars",
      "--loop-unroll-and-jam",
      "--instsimplify",
      "--early-cse",
      "--sink",
      "--loop-guard-widening",
      "--deadargelim",
      "--lowerswitch",
      "--partial-inliner",
      "--hotcoldsplit",
      "--consthoist",
      "--mergeicmps",
      "--add-discriminators",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+7.1%"
  }
}