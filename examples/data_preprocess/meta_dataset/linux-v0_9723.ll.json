{
  "program_id": "linux-v0_9723.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 4,
    "const32Bit": 35,
    "const64Bit": 0,
    "numConstZeroes": 12,
    "numConstOnes": 11,
    "UncondBranches": 2,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 11,
    "NumAndInst": 1,
    "BlockMid": 2,
    "BlockLow": 8,
    "NumBitCastInst": 0,
    "NumBrInst": 3,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 17,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 68,
    "TotalMemInst": 56,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 28
  },
  "baseline_oz_instcount": 68,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse",
    "-loop-reduce",
    "--mergefunc",
    "--licm",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--insert-gcov-profiling",
          "--flattencfg",
          "--called-value-propagation",
          "--loop-simplifycfg",
          "--loop-deletion",
          "--lcssa",
          "--coro-cleanup",
          "--mergefunc",
          "--loop-guard-widening",
          "--consthoist",
          "--globalopt",
          "--forceattrs",
          "--loop-rotate",
          "--strip-debug-declare",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+20.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--insert-gcov-profiling",
      "--flattencfg",
      "--called-value-propagation",
      "--loop-simplifycfg",
      "--loop-deletion",
      "--lcssa",
      "--coro-cleanup",
      "--mergefunc",
      "--loop-guard-widening",
      "--consthoist",
      "--globalopt",
      "--forceattrs",
      "--loop-rotate",
      "--strip-debug-declare",
      "--licm"
    ],
    "performance_vs_Oz": "+20.6%"
  }
}