{
  "program_id": "github-v0_45425.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 28,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 6,
    "oneSuccessor": 26,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 16,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 0,
    "BranchCount": 42,
    "returnInt": 0,
    "CriticalCount": 8,
    "NumEdges": 58,
    "const32Bit": 82,
    "const64Bit": 42,
    "numConstZeroes": 52,
    "numConstOnes": 35,
    "UncondBranches": 26,
    "binaryConstArg": 41,
    "NumAShrInst": 5,
    "NumAddInst": 14,
    "NumAllocaInst": 24,
    "NumAndInst": 6,
    "BlockMid": 8,
    "BlockLow": 40,
    "NumBitCastInst": 7,
    "NumBrInst": 42,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 7,
    "NumLShrInst": 1,
    "NumLoadInst": 66,
    "NumMulInst": 2,
    "NumOrInst": 8,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 9,
    "NumStoreInst": 40,
    "NumSubInst": 5,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 48,
    "TotalInsts": 336,
    "TotalMemInst": 168,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 132
  },
  "baseline_oz_instcount": 336,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--instcombine",
    "-loop-reduce",
    "--jump-threading",
    "--aggressive-instcombine",
    "--licm",
    "--mergefunc",
    "--inline",
    "--dce",
    "--early-cse",
    "--slp-vectorizer",
    "--lower-expect",
    "--die",
    "--gvn-hoist",
    "--loop-rotate",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-guard-widening",
          "--sancov",
          "--irce",
          "--slsr",
          "--separate-const-offset-from-gep",
          "--mldst-motion",
          "--loweratomic",
          "--loop-unroll",
          "--early-cse-memssa",
          "--inferattrs",
          "--loop-versioning-licm",
          "--sroa",
          "--gvn-hoist",
          "--mem2reg",
          "--aggressive-instcombine",
          "--barrier",
          "--lower-widenable-condition",
          "--add-discriminators",
          "--libcalls-shrinkwrap",
          "--lower-expect",
          "--instsimplify",
          "--sccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-guard-widening",
      "--sancov",
      "--irce",
      "--slsr",
      "--separate-const-offset-from-gep",
      "--mldst-motion",
      "--loweratomic",
      "--loop-unroll",
      "--early-cse-memssa",
      "--inferattrs",
      "--loop-versioning-licm",
      "--sroa",
      "--gvn-hoist",
      "--mem2reg",
      "--aggressive-instcombine",
      "--barrier",
      "--lower-widenable-condition",
      "--add-discriminators",
      "--libcalls-shrinkwrap",
      "--lower-expect",
      "--instsimplify",
      "--sccp"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}