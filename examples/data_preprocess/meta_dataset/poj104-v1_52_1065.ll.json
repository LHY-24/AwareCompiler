{
  "program_id": "poj104-v1_52_1065.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 1,
    "oneSuccessor": 13,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 5,
    "CriticalCount": 1,
    "NumEdges": 23,
    "const32Bit": 22,
    "const64Bit": 27,
    "numConstZeroes": 17,
    "numConstOnes": 16,
    "UncondBranches": 13,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 18,
    "NumBitCastInst": 14,
    "NumBrInst": 18,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 7,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 21,
    "TotalInsts": 135,
    "TotalMemInst": 79,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 54
  },
  "baseline_oz_instcount": 79,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--inline",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--dse",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--flattencfg",
    "--sroa",
    "--dse",
    "--instcombine",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--early-cse",
    "--slp-vectorizer",
    "--simplifycfg",
    "--prune-eh",
    "--jump-threading",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--globaldce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "--alignment-from-assumptions",
          "--separate-const-offset-from-gep",
          "--loop-unroll-and-jam",
          "--load-store-vectorizer",
          "--newgvn",
          "--loop-unswitch",
          "--jump-threading",
          "--instsimplify",
          "--indvars",
          "--simple-loop-unswitch",
          "--mem2reg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "--alignment-from-assumptions",
      "--separate-const-offset-from-gep",
      "--loop-unroll-and-jam",
      "--load-store-vectorizer",
      "--newgvn",
      "--loop-unswitch",
      "--jump-threading",
      "--instsimplify",
      "--indvars",
      "--simple-loop-unswitch",
      "--mem2reg"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}