{
  "program_id": "github-v0_43342.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 3,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 4,
    "BeginPhi": 3,
    "BranchCount": 6,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 9,
    "const32Bit": 18,
    "const64Bit": 0,
    "numConstZeroes": 3,
    "numConstOnes": 3,
    "UncondBranches": 3,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 5,
    "NumBitCastInst": 0,
    "NumBrInst": 6,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 7,
    "TotalInsts": 75,
    "TotalMemInst": 20,
    "TotalFuncs": 1,
    "ArgsPhi": 6,
    "testUnary": 20
  },
  "baseline_oz_instcount": 74,
  "knowledge_base_entry": [
    "--adce",
    "--correlated-propagation",
    "--gvn",
    "--ipsccp",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--simplifycfg",
    "--inline",
    "--globalopt",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll",
          "--speculative-execution",
          "--float2int",
          "--inferattrs",
          "--loop-simplify",
          "--globalopt",
          "--lower-guard-intrinsic",
          "--loop-deletion",
          "--prune-eh",
          "--loop-fusion",
          "--loop-versioning",
          "--infer-address-spaces",
          "--instsimplify",
          "--rewrite-statepoints-for-gc",
          "--gvn-hoist",
          "--loop-rotate",
          "--add-discriminators",
          "--mergeicmps",
          "--memcpyopt",
          "--loop-idiom",
          "--dse",
          "--aggressive-instcombine",
          "--loop-reroll",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+63.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll",
      "--speculative-execution",
      "--float2int",
      "--inferattrs",
      "--loop-simplify",
      "--globalopt",
      "--lower-guard-intrinsic",
      "--loop-deletion",
      "--prune-eh",
      "--loop-fusion",
      "--loop-versioning",
      "--infer-address-spaces",
      "--instsimplify",
      "--rewrite-statepoints-for-gc",
      "--gvn-hoist",
      "--loop-rotate",
      "--add-discriminators",
      "--mergeicmps",
      "--memcpyopt",
      "--loop-idiom",
      "--dse",
      "--aggressive-instcombine",
      "--loop-reroll",
      "--globaldce"
    ],
    "performance_vs_Oz": "+63.5%"
  }
}