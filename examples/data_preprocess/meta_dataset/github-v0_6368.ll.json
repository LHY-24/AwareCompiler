{
  "program_id": "github-v0_6368.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 34,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 13,
    "oneSuccessor": 28,
    "twoPred": 12,
    "twoPredOneSuc": 6,
    "twoEach": 5,
    "twoSuccessor": 22,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 54,
    "BeginPhi": 1,
    "BranchCount": 50,
    "returnInt": 23,
    "CriticalCount": 12,
    "NumEdges": 72,
    "const32Bit": 485,
    "const64Bit": 23,
    "numConstZeroes": 356,
    "numConstOnes": 103,
    "UncondBranches": 28,
    "binaryConstArg": 38,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 62,
    "NumAndInst": 0,
    "BlockMid": 15,
    "BlockLow": 40,
    "NumBitCastInst": 1,
    "NumBrInst": 50,
    "NumCallInst": 69,
    "NumGetElementPtrInst": 206,
    "NumICmpInst": 28,
    "NumLShrInst": 1,
    "NumLoadInst": 215,
    "NumMulInst": 3,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 5,
    "NumSExtInst": 65,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 71,
    "NumSubInst": 10,
    "NumTruncInst": 11,
    "NumXorInst": 9,
    "NumZExtInst": 8,
    "TotalBlocks": 55,
    "TotalInsts": 836,
    "TotalMemInst": 623,
    "TotalFuncs": 28,
    "ArgsPhi": 2,
    "testUnary": 362
  },
  "baseline_oz_instcount": 823,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--gvn",
    "--reassociate",
    "--aggressive-instcombine",
    "--licm",
    "--newgvn",
    "--loop-instsimplify",
    "--newgvn",
    "--loop-instsimplify",
    "--mergefunc",
    "-loop-reduce",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--sroa",
    "--loop-rotate",
    "--instcombine",
    "--loop-instsimplify",
    "--bdce",
    "--die",
    "--ipsccp",
    "--reassociate",
    "--aggressive-instcombine",
    "--licm",
    "--newgvn",
    "--loop-instsimplify",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--loop-unswitch",
          "--lowerinvoke",
          "--ee-instrument",
          "--strip",
          "--loweratomic",
          "--constprop",
          "--loop-instsimplify",
          "--ipsccp",
          "--loop-load-elim",
          "--die",
          "--guard-widening",
          "--inline",
          "--hotcoldsplit",
          "--inferattrs",
          "--globalopt",
          "--slsr",
          "--indvars",
          "--barrier",
          "--mergereturn",
          "--bdce",
          "--elim-avail-extern",
          "--partially-inline-libcalls",
          "--loop-fusion",
          "--early-cse",
          "--canonicalize-aliases",
          "--aggressive-instcombine",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--loop-unswitch",
      "--lowerinvoke",
      "--ee-instrument",
      "--strip",
      "--loweratomic",
      "--constprop",
      "--loop-instsimplify",
      "--ipsccp",
      "--loop-load-elim",
      "--die",
      "--guard-widening",
      "--inline",
      "--hotcoldsplit",
      "--inferattrs",
      "--globalopt",
      "--slsr",
      "--indvars",
      "--barrier",
      "--mergereturn",
      "--bdce",
      "--elim-avail-extern",
      "--partially-inline-libcalls",
      "--loop-fusion",
      "--early-cse",
      "--canonicalize-aliases",
      "--aggressive-instcombine",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}