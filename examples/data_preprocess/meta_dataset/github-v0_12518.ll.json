{
  "program_id": "github-v0_12518.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 88,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 39,
    "oneSuccessor": 81,
    "twoPred": 46,
    "twoPredOneSuc": 26,
    "twoEach": 16,
    "twoSuccessor": 59,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 148,
    "BeginPhi": 0,
    "BranchCount": 140,
    "returnInt": 9,
    "CriticalCount": 38,
    "NumEdges": 199,
    "const32Bit": 295,
    "const64Bit": 35,
    "numConstZeroes": 140,
    "numConstOnes": 105,
    "UncondBranches": 81,
    "binaryConstArg": 77,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 46,
    "NumAndInst": 36,
    "BlockMid": 16,
    "BlockLow": 132,
    "NumBitCastInst": 2,
    "NumBrInst": 140,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 61,
    "NumICmpInst": 69,
    "NumLShrInst": 2,
    "NumLoadInst": 248,
    "NumMulInst": 2,
    "NumOrInst": 8,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 2,
    "NumSelectInst": 10,
    "NumShlInst": 14,
    "NumStoreInst": 93,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 6,
    "NumZExtInst": 32,
    "TotalBlocks": 148,
    "TotalInsts": 845,
    "TotalMemInst": 478,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 330
  },
  "baseline_oz_instcount": 846,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--instcombine",
    "--dse",
    "--adce",
    "--newgvn",
    "--sroa",
    "--adce",
    "--early-cse",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--sccp",
    "--die",
    "--elim-avail-extern",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--mergereturn",
          "--rpo-functionattrs",
          "--instsimplify",
          "--coro-split",
          "--strip",
          "--mergefunc",
          "--loop-distribute",
          "--lower-matrix-intrinsics",
          "--constprop",
          "--mem2reg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--mergereturn",
      "--rpo-functionattrs",
      "--instsimplify",
      "--coro-split",
      "--strip",
      "--mergefunc",
      "--loop-distribute",
      "--lower-matrix-intrinsics",
      "--constprop",
      "--mem2reg"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}