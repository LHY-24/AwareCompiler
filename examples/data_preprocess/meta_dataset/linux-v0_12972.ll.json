{
  "program_id": "linux-v0_12972.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 56,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 13,
    "oneSuccessor": 55,
    "twoPred": 16,
    "twoPredOneSuc": 6,
    "twoEach": 1,
    "twoSuccessor": 18,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 2,
    "BranchCount": 73,
    "returnInt": 17,
    "CriticalCount": 10,
    "NumEdges": 101,
    "const32Bit": 271,
    "const64Bit": 9,
    "numConstZeroes": 97,
    "numConstOnes": 138,
    "UncondBranches": 55,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 113,
    "NumAndInst": 0,
    "BlockMid": 17,
    "BlockLow": 79,
    "NumBitCastInst": 49,
    "NumBrInst": 73,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 67,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 220,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 21,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 131,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 96,
    "TotalInsts": 753,
    "TotalMemInst": 583,
    "TotalFuncs": 41,
    "ArgsPhi": 4,
    "testUnary": 391
  },
  "baseline_oz_instcount": 753,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--loop-simplifycfg",
    "--lower-expect",
    "--nary-reassociate",
    "--gvn",
    "--lower-expect",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--instsimplify",
          "--mergefunc",
          "--float2int",
          "--loop-versioning",
          "--loop-sink",
          "--lower-matrix-intrinsics",
          "--mldst-motion",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--instsimplify",
      "--mergefunc",
      "--float2int",
      "--loop-versioning",
      "--loop-sink",
      "--lower-matrix-intrinsics",
      "--mldst-motion",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}