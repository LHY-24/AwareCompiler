{
  "program_id": "github-v0_48553.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 33,
    "const64Bit": 45,
    "numConstZeroes": 44,
    "numConstOnes": 28,
    "UncondBranches": 13,
    "binaryConstArg": 8,
    "NumAShrInst": 1,
    "NumAddInst": 5,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 19,
    "NumBitCastInst": 12,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 52,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 25,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 27,
    "TotalBlocks": 24,
    "TotalInsts": 225,
    "TotalMemInst": 138,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 112
  },
  "baseline_oz_instcount": 225,
  "knowledge_base_entry": [
    "--gvn",
    "--aggressive-instcombine",
    "--sroa",
    "--loop-instsimplify",
    "--dse",
    "--die",
    "--newgvn",
    "--loop-rotate",
    "--mem2reg",
    "--instcombine",
    "--bdce",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-dead-prototypes",
          "--scalarizer",
          "--sancov",
          "--aggressive-instcombine",
          "--instnamer",
          "--separate-const-offset-from-gep",
          "--prune-eh",
          "--early-cse-memssa",
          "--ee-instrument",
          "--coro-early",
          "--loop-unroll-and-jam",
          "--loop-deletion",
          "--loop-instsimplify",
          "--loop-rotate",
          "--instcombine",
          "--name-anon-globals",
          "--lower-constant-intrinsics",
          "--lower-guard-intrinsic",
          "--loop-interchange",
          "--loop-predication",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-dead-prototypes",
      "--scalarizer",
      "--sancov",
      "--aggressive-instcombine",
      "--instnamer",
      "--separate-const-offset-from-gep",
      "--prune-eh",
      "--early-cse-memssa",
      "--ee-instrument",
      "--coro-early",
      "--loop-unroll-and-jam",
      "--loop-deletion",
      "--loop-instsimplify",
      "--loop-rotate",
      "--instcombine",
      "--name-anon-globals",
      "--lower-constant-intrinsics",
      "--lower-guard-intrinsic",
      "--loop-interchange",
      "--loop-predication",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}