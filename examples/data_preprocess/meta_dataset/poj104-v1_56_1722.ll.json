{
  "program_id": "poj104-v1_56_1722.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 4,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 4,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 15,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 20,
    "const32Bit": 34,
    "const64Bit": 14,
    "numConstZeroes": 7,
    "numConstOnes": 8,
    "UncondBranches": 10,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 15,
    "NumBitCastInst": 14,
    "NumBrInst": 15,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 10,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 18,
    "TotalInsts": 132,
    "TotalMemInst": 66,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 49
  },
  "baseline_oz_instcount": 57,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--gvn",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--early-cse",
    "--dce",
    "--reassociate",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--sccp",
    "--gvn",
    "--loop-rotate",
    "--sroa",
    "--simplifycfg",
    "--prune-eh",
    "--inline",
    "--sccp",
    "--adce",
    "--mem2reg",
    "--loop-deletion",
    "--newgvn",
    "--correlated-propagation",
    "--adce",
    "--slp-vectorizer",
    "--instsimplify",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--early-cse",
    "--mldst-motion",
    "--simplifycfg",
    "--prune-eh",
    "--inline",
    "--sccp",
    "--adce",
    "--mem2reg",
    "--loop-deletion",
    "--sroa",
    "--mergefunc",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-expect",
          "--loop-versioning-licm",
          "--coro-split",
          "--inferattrs",
          "--tailcallelim",
          "--hotcoldsplit",
          "--inline",
          "--lowerinvoke",
          "--instnamer",
          "--instcombine",
          "--newgvn",
          "--adce",
          "--infer-address-spaces",
          "--strip-debug-declare",
          "--mergereturn",
          "--ee-instrument",
          "--attributor",
          "--mem2reg",
          "--simplifycfg",
          "--callsite-splitting",
          "--inject-tli-mappings",
          "--aggressive-instcombine",
          "--loop-predication",
          "--strip-nondebug",
          "--coro-cleanup",
          "--licm",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-expect",
      "--loop-versioning-licm",
      "--coro-split",
      "--inferattrs",
      "--tailcallelim",
      "--hotcoldsplit",
      "--inline",
      "--lowerinvoke",
      "--instnamer",
      "--instcombine",
      "--newgvn",
      "--adce",
      "--infer-address-spaces",
      "--strip-debug-declare",
      "--mergereturn",
      "--ee-instrument",
      "--attributor",
      "--mem2reg",
      "--simplifycfg",
      "--callsite-splitting",
      "--inject-tli-mappings",
      "--aggressive-instcombine",
      "--loop-predication",
      "--strip-nondebug",
      "--coro-cleanup",
      "--licm",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+3.5%"
  }
}