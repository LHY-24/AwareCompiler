{
  "program_id": "linux-v0_10938.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 72,
    "onePredOneSuc": 58,
    "onePredTwoSuc": 12,
    "oneSuccessor": 68,
    "twoPred": 19,
    "twoPredOneSuc": 7,
    "twoEach": 7,
    "twoSuccessor": 27,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 119,
    "BeginPhi": 1,
    "BranchCount": 95,
    "returnInt": 16,
    "CriticalCount": 12,
    "NumEdges": 132,
    "const32Bit": 364,
    "const64Bit": 37,
    "numConstZeroes": 180,
    "numConstOnes": 151,
    "UncondBranches": 68,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 112,
    "NumAndInst": 0,
    "BlockMid": 18,
    "BlockLow": 102,
    "NumBitCastInst": 27,
    "NumBrInst": 95,
    "NumCallInst": 65,
    "NumGetElementPtrInst": 119,
    "NumICmpInst": 34,
    "NumLShrInst": 0,
    "NumLoadInst": 271,
    "NumMulInst": 4,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 23,
    "NumSExtInst": 7,
    "NumSelectInst": 3,
    "NumShlInst": 0,
    "NumStoreInst": 134,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 9,
    "NumZExtInst": 21,
    "TotalBlocks": 120,
    "TotalInsts": 942,
    "TotalMemInst": 701,
    "TotalFuncs": 42,
    "ArgsPhi": 2,
    "testUnary": 445
  },
  "baseline_oz_instcount": 942,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--gvn",
    "--gvn",
    "--loop-rotate",
    "--early-cse",
    "--load-store-vectorizer",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rewrite-statepoints-for-gc",
          "--barrier",
          "--loop-instsimplify",
          "--coro-split",
          "--argpromotion",
          "--load-store-vectorizer",
          "--sancov",
          "--loop-unroll-and-jam",
          "--forceattrs",
          "--strip-nondebug",
          "--sroa",
          "--aggressive-instcombine",
          "--lower-widenable-condition",
          "--attributor",
          "--elim-avail-extern",
          "--loop-fusion",
          "--slp-vectorizer",
          "--flattencfg",
          "--insert-gcov-profiling",
          "--simplifycfg",
          "--loop-guard-widening",
          "--sccp",
          "--globaldce",
          "--memcpyopt",
          "--always-inline",
          "--strip-debug-declare",
          "--mergefunc",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rewrite-statepoints-for-gc",
      "--barrier",
      "--loop-instsimplify",
      "--coro-split",
      "--argpromotion",
      "--load-store-vectorizer",
      "--sancov",
      "--loop-unroll-and-jam",
      "--forceattrs",
      "--strip-nondebug",
      "--sroa",
      "--aggressive-instcombine",
      "--lower-widenable-condition",
      "--attributor",
      "--elim-avail-extern",
      "--loop-fusion",
      "--slp-vectorizer",
      "--flattencfg",
      "--insert-gcov-profiling",
      "--simplifycfg",
      "--loop-guard-widening",
      "--sccp",
      "--globaldce",
      "--memcpyopt",
      "--always-inline",
      "--strip-debug-declare",
      "--mergefunc",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}