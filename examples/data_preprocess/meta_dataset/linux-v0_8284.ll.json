{
  "program_id": "linux-v0_8284.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 67,
    "onePredOneSuc": 54,
    "onePredTwoSuc": 13,
    "oneSuccessor": 65,
    "twoPred": 22,
    "twoPredOneSuc": 10,
    "twoEach": 4,
    "twoSuccessor": 26,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 105,
    "BeginPhi": 1,
    "BranchCount": 91,
    "returnInt": 19,
    "CriticalCount": 10,
    "NumEdges": 117,
    "const32Bit": 314,
    "const64Bit": 50,
    "numConstZeroes": 175,
    "numConstOnes": 140,
    "UncondBranches": 65,
    "binaryConstArg": 36,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 98,
    "NumAndInst": 11,
    "BlockMid": 20,
    "BlockLow": 86,
    "NumBitCastInst": 30,
    "NumBrInst": 91,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 97,
    "NumICmpInst": 30,
    "NumLShrInst": 7,
    "NumLoadInst": 248,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 1,
    "NumRetInst": 15,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 132,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 9,
    "NumZExtInst": 32,
    "TotalBlocks": 106,
    "TotalInsts": 876,
    "TotalMemInst": 616,
    "TotalFuncs": 26,
    "ArgsPhi": 2,
    "testUnary": 426
  },
  "baseline_oz_instcount": 877,
  "knowledge_base_entry": [
    "--mergereturn",
    "--simplifycfg",
    "--instsimplify",
    "--early-cse-memssa",
    "--mergefunc",
    "--early-cse-memssa",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--separate-const-offset-from-gep",
          "--infer-address-spaces",
          "--forceattrs",
          "--elim-avail-extern",
          "--lower-guard-intrinsic",
          "--aggressive-instcombine",
          "--loop-versioning",
          "--lower-widenable-condition",
          "--partial-inliner",
          "--strip",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--separate-const-offset-from-gep",
      "--infer-address-spaces",
      "--forceattrs",
      "--elim-avail-extern",
      "--lower-guard-intrinsic",
      "--aggressive-instcombine",
      "--loop-versioning",
      "--lower-widenable-condition",
      "--partial-inliner",
      "--strip",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}