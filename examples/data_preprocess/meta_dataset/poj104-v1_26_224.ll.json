{
  "program_id": "poj104-v1_26_224.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 32,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 8,
    "CriticalCount": 1,
    "NumEdges": 22,
    "const32Bit": 42,
    "const64Bit": 19,
    "numConstZeroes": 15,
    "numConstOnes": 30,
    "UncondBranches": 10,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 25,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 29,
    "NumBitCastInst": 20,
    "NumBrInst": 16,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 51,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 32,
    "TotalInsts": 219,
    "TotalMemInst": 156,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 100
  },
  "baseline_oz_instcount": 37,
  "knowledge_base_entry": [
    "--instcombine",
    "--slsr",
    "--newgvn",
    "--nary-reassociate",
    "--mem2reg",
    "--mergefunc",
    "--instcombine",
    "--simplifycfg",
    "--bdce",
    "--early-cse",
    "--mldst-motion",
    "--jump-threading",
    "--loop-instsimplify",
    "--early-cse",
    "--correlated-propagation",
    "--early-cse",
    "--jump-threading",
    "--gvn",
    "--instsimplify",
    "--simplifycfg",
    "--sroa",
    "--simplifycfg",
    "--flattencfg",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--jump-threading",
    "--instcombine",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--bdce",
    "--mergefunc",
    "--die",
    "--inline",
    "--loop-rotate",
    "--elim-avail-extern",
    "--mem2reg",
    "--simplifycfg",
    "--flattencfg",
    "--licm",
    "--early-cse",
    "--globalopt",
    "--mergefunc",
    "--globaldce",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--sink",
          "--redundant-dbg-inst-elim",
          "--float2int",
          "--constmerge",
          "--name-anon-globals",
          "--guard-widening",
          "--globalopt",
          "--coro-elide",
          "--lowerswitch",
          "--mem2reg",
          "--bdce",
          "--strip",
          "--loop-simplifycfg",
          "--globalsplit",
          "--partially-inline-libcalls",
          "--coro-early",
          "--inferattrs",
          "--loop-load-elim",
          "--instcombine",
          "--memcpyopt",
          "--flattencfg",
          "--strip-debug-declare",
          "--lower-guard-intrinsic",
          "--gvn",
          "--speculative-execution",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--sink",
      "--redundant-dbg-inst-elim",
      "--float2int",
      "--constmerge",
      "--name-anon-globals",
      "--guard-widening",
      "--globalopt",
      "--coro-elide",
      "--lowerswitch",
      "--mem2reg",
      "--bdce",
      "--strip",
      "--loop-simplifycfg",
      "--globalsplit",
      "--partially-inline-libcalls",
      "--coro-early",
      "--inferattrs",
      "--loop-load-elim",
      "--instcombine",
      "--memcpyopt",
      "--flattencfg",
      "--strip-debug-declare",
      "--lower-guard-intrinsic",
      "--gvn",
      "--speculative-execution",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+8.1%"
  }
}