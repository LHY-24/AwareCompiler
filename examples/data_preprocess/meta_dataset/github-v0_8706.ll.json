{
  "program_id": "github-v0_8706.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 69,
    "onePredOneSuc": 55,
    "onePredTwoSuc": 14,
    "oneSuccessor": 64,
    "twoPred": 15,
    "twoPredOneSuc": 3,
    "twoEach": 8,
    "twoSuccessor": 23,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 103,
    "BeginPhi": 0,
    "BranchCount": 87,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 110,
    "const32Bit": 169,
    "const64Bit": 21,
    "numConstZeroes": 81,
    "numConstOnes": 78,
    "UncondBranches": 64,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 63,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 96,
    "NumBitCastInst": 15,
    "NumBrInst": 87,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 108,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 89,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 103,
    "TotalInsts": 501,
    "TotalMemInst": 344,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 198
  },
  "baseline_oz_instcount": 501,
  "knowledge_base_entry": [
    "--early-cse",
    "--adce",
    "--inline",
    "--dse",
    "--mergefunc",
    "--inline",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--gvn-hoist",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--pgo-memop-opt",
          "--instsimplify",
          "--ipsccp",
          "--indvars",
          "--loop-fusion",
          "--slp-vectorizer",
          "--gvn-hoist",
          "--rewrite-statepoints-for-gc",
          "--coro-cleanup",
          "--slsr",
          "--strip-debug-declare",
          "--callsite-splitting",
          "--licm",
          "--strip-nondebug",
          "--mem2reg",
          "--always-inline",
          "--hotcoldsplit",
          "--mergefunc",
          "--alignment-from-assumptions",
          "--constmerge",
          "--loop-predication",
          "--coro-early",
          "--die",
          "-loop-reduce",
          "--partial-inliner",
          "--simple-loop-unswitch",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--pgo-memop-opt",
      "--instsimplify",
      "--ipsccp",
      "--indvars",
      "--loop-fusion",
      "--slp-vectorizer",
      "--gvn-hoist",
      "--rewrite-statepoints-for-gc",
      "--coro-cleanup",
      "--slsr",
      "--strip-debug-declare",
      "--callsite-splitting",
      "--licm",
      "--strip-nondebug",
      "--mem2reg",
      "--always-inline",
      "--hotcoldsplit",
      "--mergefunc",
      "--alignment-from-assumptions",
      "--constmerge",
      "--loop-predication",
      "--coro-early",
      "--die",
      "-loop-reduce",
      "--partial-inliner",
      "--simple-loop-unswitch",
      "--sancov"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}