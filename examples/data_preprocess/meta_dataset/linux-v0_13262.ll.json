{
  "program_id": "linux-v0_13262.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 44,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 8,
    "oneSuccessor": 40,
    "twoPred": 15,
    "twoPredOneSuc": 3,
    "twoEach": 7,
    "twoSuccessor": 22,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 74,
    "BeginPhi": 2,
    "BranchCount": 62,
    "returnInt": 8,
    "CriticalCount": 10,
    "NumEdges": 84,
    "const32Bit": 293,
    "const64Bit": 32,
    "numConstZeroes": 140,
    "numConstOnes": 135,
    "UncondBranches": 40,
    "binaryConstArg": 33,
    "NumAShrInst": 0,
    "NumAddInst": 29,
    "NumAllocaInst": 100,
    "NumAndInst": 4,
    "BlockMid": 20,
    "BlockLow": 56,
    "NumBitCastInst": 15,
    "NumBrInst": 62,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 83,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 275,
    "NumMulInst": 8,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 14,
    "NumSExtInst": 8,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 138,
    "NumSubInst": 19,
    "NumTruncInst": 24,
    "NumXorInst": 3,
    "NumZExtInst": 53,
    "TotalBlocks": 76,
    "TotalInsts": 910,
    "TotalMemInst": 628,
    "TotalFuncs": 26,
    "ArgsPhi": 4,
    "testUnary": 479
  },
  "baseline_oz_instcount": 914,
  "knowledge_base_entry": [
    "--prune-eh",
    "--aggressive-instcombine",
    "--mem2reg",
    "--ipsccp",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--instcombine",
    "--jump-threading",
    "--memcpyopt",
    "--mem2reg",
    "--ipsccp",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--newgvn",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--dce",
    "--aggressive-instcombine",
    "--reassociate",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--irce",
          "--loop-vectorize",
          "--lower-widenable-condition",
          "--bdce",
          "--lowerswitch",
          "--aggressive-instcombine",
          "--simple-loop-unswitch",
          "--mergefunc",
          "--instcombine",
          "--sroa",
          "--constprop",
          "--loop-reroll",
          "--strip",
          "--guard-widening",
          "--instnamer",
          "--sancov",
          "--callsite-splitting",
          "--attributor",
          "--rewrite-statepoints-for-gc",
          "--cross-dso-cfi",
          "--canonicalize-aliases",
          "--loop-idiom",
          "--ipsccp",
          "--jump-threading",
          "--partial-inliner",
          "--float2int",
          "--loop-predication",
          "--globaldce",
          "--loop-rotate",
          "--libcalls-shrinkwrap"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--irce",
      "--loop-vectorize",
      "--lower-widenable-condition",
      "--bdce",
      "--lowerswitch",
      "--aggressive-instcombine",
      "--simple-loop-unswitch",
      "--mergefunc",
      "--instcombine",
      "--sroa",
      "--constprop",
      "--loop-reroll",
      "--strip",
      "--guard-widening",
      "--instnamer",
      "--sancov",
      "--callsite-splitting",
      "--attributor",
      "--rewrite-statepoints-for-gc",
      "--cross-dso-cfi",
      "--canonicalize-aliases",
      "--loop-idiom",
      "--ipsccp",
      "--jump-threading",
      "--partial-inliner",
      "--float2int",
      "--loop-predication",
      "--globaldce",
      "--loop-rotate",
      "--libcalls-shrinkwrap"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}