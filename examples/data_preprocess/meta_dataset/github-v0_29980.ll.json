{
  "program_id": "github-v0_29980.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 53,
    "const64Bit": 73,
    "numConstZeroes": 74,
    "numConstOnes": 29,
    "UncondBranches": 13,
    "binaryConstArg": 28,
    "NumAShrInst": 5,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 10,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 8,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 0,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 24,
    "NumSubInst": 1,
    "NumTruncInst": 10,
    "NumXorInst": 1,
    "NumZExtInst": 21,
    "TotalBlocks": 24,
    "TotalInsts": 240,
    "TotalMemInst": 128,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 98
  },
  "baseline_oz_instcount": 240,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--gvn",
    "--instcombine",
    "--bdce",
    "--ipsccp",
    "--dce",
    "--mergefunc",
    "--correlated-propagation",
    "--early-cse",
    "--die",
    "--licm",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerswitch",
          "--loop-unroll-and-jam",
          "--mergefunc",
          "--early-cse",
          "--globalsplit",
          "--aggressive-instcombine",
          "--loop-rotate",
          "--loop-predication",
          "--loop-instsimplify",
          "--strip-dead-prototypes",
          "--functionattrs",
          "--memcpyopt",
          "--redundant-dbg-inst-elim",
          "--early-cse-memssa",
          "--prune-eh",
          "--consthoist",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerswitch",
      "--loop-unroll-and-jam",
      "--mergefunc",
      "--early-cse",
      "--globalsplit",
      "--aggressive-instcombine",
      "--loop-rotate",
      "--loop-predication",
      "--loop-instsimplify",
      "--strip-dead-prototypes",
      "--functionattrs",
      "--memcpyopt",
      "--redundant-dbg-inst-elim",
      "--early-cse-memssa",
      "--prune-eh",
      "--consthoist",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+3.3%"
  }
}