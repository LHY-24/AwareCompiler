{
  "program_id": "blas-v0_116.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 1,
    "onePred": 5,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 3,
    "oneSuccessor": 2,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 2,
    "BBNoPhi": 6,
    "BeginPhi": 3,
    "BranchCount": 8,
    "returnInt": 0,
    "CriticalCount": 7,
    "NumEdges": 14,
    "const32Bit": 16,
    "const64Bit": 4,
    "numConstZeroes": 3,
    "numConstOnes": 9,
    "UncondBranches": 2,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 7,
    "NumBitCastInst": 7,
    "NumBrInst": 8,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 5,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 10,
    "NumRetInst": 1,
    "NumSExtInst": 2,
    "NumSelectInst": 4,
    "NumShlInst": 0,
    "NumStoreInst": 0,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 59,
    "TotalMemInst": 12,
    "TotalFuncs": 2,
    "ArgsPhi": 23,
    "testUnary": 15
  },
  "baseline_oz_instcount": 59,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--gvn-hoist",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--bdce",
    "--load-store-vectorizer",
    "--newgvn",
    "--prune-eh",
    "--early-cse-memssa",
    "--simplifycfg",
    "--gvn-hoist",
    "--inline",
    "--mldst-motion",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--sccp",
    "--adce",
    "--bdce",
    "--licm",
    "--die",
    "--sroa",
    "--early-cse",
    "--globalopt",
    "--gvn-hoist",
    "--licm",
    "--mem2reg",
    "--reassociate",
    "--gvn-hoist",
    "--inline",
    "--mldst-motion",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--sccp",
    "--dse",
    "--jump-threading",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--loop-distribute",
          "--loop-simplifycfg",
          "--lower-matrix-intrinsics",
          "--separate-const-offset-from-gep",
          "--gvn-hoist",
          "--aggressive-instcombine",
          "--cross-dso-cfi",
          "--loop-deletion",
          "--inline",
          "--simplifycfg",
          "--rpo-functionattrs",
          "--lowerswitch",
          "--constprop",
          "--attributor",
          "--loweratomic",
          "--always-inline",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--loop-distribute",
      "--loop-simplifycfg",
      "--lower-matrix-intrinsics",
      "--separate-const-offset-from-gep",
      "--gvn-hoist",
      "--aggressive-instcombine",
      "--cross-dso-cfi",
      "--loop-deletion",
      "--inline",
      "--simplifycfg",
      "--rpo-functionattrs",
      "--lowerswitch",
      "--constprop",
      "--attributor",
      "--loweratomic",
      "--always-inline",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}