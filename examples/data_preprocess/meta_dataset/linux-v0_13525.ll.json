{
  "program_id": "linux-v0_13525.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 35,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 7,
    "oneSuccessor": 32,
    "twoPred": 12,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 17,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 82,
    "BeginPhi": 1,
    "BranchCount": 49,
    "returnInt": 33,
    "CriticalCount": 9,
    "NumEdges": 66,
    "const32Bit": 372,
    "const64Bit": 41,
    "numConstZeroes": 202,
    "numConstOnes": 133,
    "UncondBranches": 32,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 98,
    "NumAndInst": 9,
    "BlockMid": 16,
    "BlockLow": 67,
    "NumBitCastInst": 35,
    "NumBrInst": 49,
    "NumCallInst": 104,
    "NumGetElementPtrInst": 140,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 238,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 1,
    "NumRetInst": 34,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 120,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 9,
    "NumZExtInst": 6,
    "TotalBlocks": 83,
    "TotalInsts": 884,
    "TotalMemInst": 700,
    "TotalFuncs": 55,
    "ArgsPhi": 2,
    "testUnary": 394
  },
  "baseline_oz_instcount": 884,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--early-cse",
    "--elim-avail-extern",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--correlated-propagation",
          "--aggressive-instcombine",
          "--div-rem-pairs",
          "--forceattrs",
          "--insert-gcov-profiling",
          "--lowerinvoke",
          "--loop-guard-widening",
          "--ipconstprop",
          "--lower-matrix-intrinsics",
          "--rpo-functionattrs",
          "--ee-instrument",
          "--loop-reroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--correlated-propagation",
      "--aggressive-instcombine",
      "--div-rem-pairs",
      "--forceattrs",
      "--insert-gcov-profiling",
      "--lowerinvoke",
      "--loop-guard-widening",
      "--ipconstprop",
      "--lower-matrix-intrinsics",
      "--rpo-functionattrs",
      "--ee-instrument",
      "--loop-reroll"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}