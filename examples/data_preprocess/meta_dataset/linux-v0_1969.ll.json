{
  "program_id": "linux-v0_1969.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 0,
    "oneSuccessor": 20,
    "twoPred": 8,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 0,
    "BranchCount": 27,
    "returnInt": 6,
    "CriticalCount": 2,
    "NumEdges": 39,
    "const32Bit": 189,
    "const64Bit": 9,
    "numConstZeroes": 61,
    "numConstOnes": 32,
    "UncondBranches": 20,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 19,
    "NumAllocaInst": 24,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 39,
    "NumBitCastInst": 2,
    "NumBrInst": 27,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 62,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 135,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 42,
    "TotalInsts": 387,
    "TotalMemInst": 284,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 190
  },
  "baseline_oz_instcount": 387,
  "knowledge_base_entry": [
    "--loweratomic",
    "--aggressive-instcombine",
    "--sroa",
    "--sccp",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--inline",
    "--dce",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--simplifycfg",
          "--lcssa",
          "--sccp",
          "--name-anon-globals",
          "--loop-versioning-licm",
          "--ee-instrument",
          "--slp-vectorizer",
          "--coro-cleanup",
          "--loop-instsimplify",
          "--guard-widening",
          "--reassociate",
          "--callsite-splitting",
          "--rpo-functionattrs",
          "--aggressive-instcombine",
          "--alignment-from-assumptions",
          "--mem2reg",
          "--hotcoldsplit",
          "--instnamer",
          "--simple-loop-unswitch",
          "--loop-simplify",
          "--loop-distribute",
          "--pgo-memop-opt",
          "--instcombine",
          "--jump-threading"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--simplifycfg",
      "--lcssa",
      "--sccp",
      "--name-anon-globals",
      "--loop-versioning-licm",
      "--ee-instrument",
      "--slp-vectorizer",
      "--coro-cleanup",
      "--loop-instsimplify",
      "--guard-widening",
      "--reassociate",
      "--callsite-splitting",
      "--rpo-functionattrs",
      "--aggressive-instcombine",
      "--alignment-from-assumptions",
      "--mem2reg",
      "--hotcoldsplit",
      "--instnamer",
      "--simple-loop-unswitch",
      "--loop-simplify",
      "--loop-distribute",
      "--pgo-memop-opt",
      "--instcombine",
      "--jump-threading"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}