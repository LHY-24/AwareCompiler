{
  "program_id": "linux-v0_7962.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 44,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 1,
    "oneSuccessor": 44,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 65,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 6,
    "CriticalCount": 5,
    "NumEdges": 83,
    "const32Bit": 249,
    "const64Bit": 4,
    "numConstZeroes": 98,
    "numConstOnes": 91,
    "UncondBranches": 44,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 77,
    "NumAndInst": 5,
    "BlockMid": 13,
    "BlockLow": 52,
    "NumBitCastInst": 65,
    "NumBrInst": 51,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 53,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 190,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 106,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 2,
    "NumZExtInst": 1,
    "TotalBlocks": 65,
    "TotalInsts": 628,
    "TotalMemInst": 474,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 339
  },
  "baseline_oz_instcount": 628,
  "knowledge_base_entry": [
    "--instsimplify",
    "--early-cse",
    "--mergefunc",
    "--gvn-hoist",
    "--reassociate",
    "--jump-threading",
    "--loop-reroll",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--infer-address-spaces",
          "--div-rem-pairs",
          "--instsimplify",
          "--barrier",
          "--early-cse",
          "--gvn-hoist",
          "--mergereturn",
          "--newgvn",
          "--pgo-memop-opt",
          "--globalopt",
          "--slsr",
          "--globaldce",
          "--loop-reroll",
          "--deadargelim",
          "--globalsplit",
          "--slp-vectorizer",
          "--strip",
          "--loop-load-elim",
          "--simplifycfg",
          "--mergefunc",
          "--partial-inliner",
          "--guard-widening",
          "--always-inline",
          "--post-inline-ee-instrument",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--infer-address-spaces",
      "--div-rem-pairs",
      "--instsimplify",
      "--barrier",
      "--early-cse",
      "--gvn-hoist",
      "--mergereturn",
      "--newgvn",
      "--pgo-memop-opt",
      "--globalopt",
      "--slsr",
      "--globaldce",
      "--loop-reroll",
      "--deadargelim",
      "--globalsplit",
      "--slp-vectorizer",
      "--strip",
      "--loop-load-elim",
      "--simplifycfg",
      "--mergefunc",
      "--partial-inliner",
      "--guard-widening",
      "--always-inline",
      "--post-inline-ee-instrument",
      "--instcombine"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}