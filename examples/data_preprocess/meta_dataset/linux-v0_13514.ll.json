{
  "program_id": "linux-v0_13514.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 9,
    "oneSuccessor": 19,
    "twoPred": 7,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 55,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 31,
    "CriticalCount": 3,
    "NumEdges": 47,
    "const32Bit": 343,
    "const64Bit": 54,
    "numConstZeroes": 202,
    "numConstOnes": 74,
    "UncondBranches": 19,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 58,
    "NumAndInst": 10,
    "BlockMid": 10,
    "BlockLow": 45,
    "NumBitCastInst": 18,
    "NumBrInst": 33,
    "NumCallInst": 94,
    "NumGetElementPtrInst": 161,
    "NumICmpInst": 14,
    "NumLShrInst": 8,
    "NumLoadInst": 258,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 94,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 4,
    "NumZExtInst": 5,
    "TotalBlocks": 55,
    "TotalInsts": 792,
    "TotalMemInst": 665,
    "TotalFuncs": 39,
    "ArgsPhi": 0,
    "testUnary": 350
  },
  "baseline_oz_instcount": 792,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--slp-vectorizer",
    "--instsimplify",
    "--sroa",
    "--instsimplify",
    "--licm",
    "--dce",
    "--gvn",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--correlated-propagation",
    "--early-cse",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--pgo-memop-opt",
          "--loweratomic",
          "--mem2reg",
          "--dce",
          "--consthoist",
          "--partially-inline-libcalls",
          "--lowerswitch",
          "--sroa",
          "--sink",
          "--load-store-vectorizer",
          "--inferattrs",
          "--mldst-motion",
          "--early-cse-memssa",
          "--mergereturn",
          "--elim-avail-extern",
          "--slsr",
          "--loop-rotate",
          "--die",
          "--float2int",
          "--loop-vectorize",
          "--infer-address-spaces",
          "--mergeicmps",
          "--coro-split",
          "--redundant-dbg-inst-elim",
          "--hotcoldsplit",
          "--coro-cleanup",
          "--aggressive-instcombine",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--pgo-memop-opt",
      "--loweratomic",
      "--mem2reg",
      "--dce",
      "--consthoist",
      "--partially-inline-libcalls",
      "--lowerswitch",
      "--sroa",
      "--sink",
      "--load-store-vectorizer",
      "--inferattrs",
      "--mldst-motion",
      "--early-cse-memssa",
      "--mergereturn",
      "--elim-avail-extern",
      "--slsr",
      "--loop-rotate",
      "--die",
      "--float2int",
      "--loop-vectorize",
      "--infer-address-spaces",
      "--mergeicmps",
      "--coro-split",
      "--redundant-dbg-inst-elim",
      "--hotcoldsplit",
      "--coro-cleanup",
      "--aggressive-instcombine",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}