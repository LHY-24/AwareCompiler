{
  "program_id": "poj104-v1_104_1231.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 1,
    "oneSuccessor": 6,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 14,
    "const32Bit": 25,
    "const64Bit": 7,
    "numConstZeroes": 9,
    "numConstOnes": 13,
    "UncondBranches": 6,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 19,
    "NumBitCastInst": 9,
    "NumBrInst": 10,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 20,
    "TotalInsts": 120,
    "TotalMemInst": 84,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 50
  },
  "baseline_oz_instcount": 45,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--inline",
    "--mergefunc",
    "--instsimplify",
    "--sccp",
    "--loop-instsimplify",
    "--mergefunc",
    "--dse",
    "--early-cse-memssa",
    "--reassociate",
    "--ipsccp",
    "--simplifycfg",
    "--newgvn",
    "--early-cse-memssa",
    "--loop-fusion",
    "--early-cse",
    "--mem2reg",
    "--instsimplify",
    "--die",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--bdce",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--scalarizer",
          "--loop-interchange",
          "--sccp",
          "--partial-inliner",
          "--instsimplify",
          "--always-inline",
          "--lcssa",
          "--elim-avail-extern",
          "--forceattrs",
          "--inject-tli-mappings",
          "--partially-inline-libcalls",
          "--newgvn",
          "--memcpyopt",
          "--tailcallelim",
          "--loop-simplify",
          "--reg2mem",
          "--adce",
          "--loop-unroll-and-jam",
          "--loop-distribute",
          "--lower-expect",
          "--early-cse",
          "--ipsccp",
          "--inline",
          "--mem2reg",
          "--strip-dead-prototypes",
          "--loop-fusion",
          "--simple-loop-unswitch",
          "--bdce",
          "--instnamer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+26.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--scalarizer",
      "--loop-interchange",
      "--sccp",
      "--partial-inliner",
      "--instsimplify",
      "--always-inline",
      "--lcssa",
      "--elim-avail-extern",
      "--forceattrs",
      "--inject-tli-mappings",
      "--partially-inline-libcalls",
      "--newgvn",
      "--memcpyopt",
      "--tailcallelim",
      "--loop-simplify",
      "--reg2mem",
      "--adce",
      "--loop-unroll-and-jam",
      "--loop-distribute",
      "--lower-expect",
      "--early-cse",
      "--ipsccp",
      "--inline",
      "--mem2reg",
      "--strip-dead-prototypes",
      "--loop-fusion",
      "--simple-loop-unswitch",
      "--bdce",
      "--instnamer"
    ],
    "performance_vs_Oz": "+26.7%"
  }
}