{
  "program_id": "github-v0_10516.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 1,
    "onePred": 4,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 2,
    "oneSuccessor": 3,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 3,
    "BranchCount": 8,
    "returnInt": 2,
    "CriticalCount": 6,
    "NumEdges": 13,
    "const32Bit": 12,
    "const64Bit": 0,
    "numConstZeroes": 6,
    "numConstOnes": 4,
    "UncondBranches": 3,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 1,
    "BlockLow": 8,
    "NumBitCastInst": 0,
    "NumBrInst": 8,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 6,
    "NumMulInst": 5,
    "NumOrInst": 1,
    "NumPHIInst": 7,
    "NumRetInst": 1,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 1,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 68,
    "TotalMemInst": 19,
    "TotalFuncs": 3,
    "ArgsPhi": 15,
    "testUnary": 15
  },
  "baseline_oz_instcount": 68,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--dse",
    "--gvn",
    "--indvars",
    "--nary-reassociate",
    "--jump-threading",
    "--lower-expect",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--instsimplify",
    "--nary-reassociate",
    "--inline",
    "--reassociate",
    "--slsr",
    "--newgvn",
    "--jump-threading",
    "--correlated-propagation",
    "--simplifycfg",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--mem2reg",
    "--nary-reassociate",
    "--early-cse",
    "--elim-avail-extern",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--dse",
    "--gvn",
    "--indvars",
    "--nary-reassociate",
    "--jump-threading",
    "--lower-expect",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--instsimplify",
    "--nary-reassociate",
    "--inline",
    "--reassociate",
    "-loop-reduce",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--jump-threading",
          "--redundant-dbg-inst-elim",
          "--lower-guard-intrinsic",
          "--deadargelim",
          "--early-cse-memssa",
          "--barrier",
          "--correlated-propagation",
          "--post-inline-ee-instrument",
          "--libcalls-shrinkwrap",
          "--globalopt",
          "--mldst-motion",
          "--simplifycfg",
          "--elim-avail-extern",
          "--mergeicmps"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--jump-threading",
      "--redundant-dbg-inst-elim",
      "--lower-guard-intrinsic",
      "--deadargelim",
      "--early-cse-memssa",
      "--barrier",
      "--correlated-propagation",
      "--post-inline-ee-instrument",
      "--libcalls-shrinkwrap",
      "--globalopt",
      "--mldst-motion",
      "--simplifycfg",
      "--elim-avail-extern",
      "--mergeicmps"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}