{
  "program_id": "linux-v0_1490.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 36,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 6,
    "oneSuccessor": 32,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 11,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 65,
    "BeginPhi": 1,
    "BranchCount": 42,
    "returnInt": 8,
    "CriticalCount": 3,
    "NumEdges": 67,
    "const32Bit": 252,
    "const64Bit": 26,
    "numConstZeroes": 125,
    "numConstOnes": 95,
    "UncondBranches": 32,
    "binaryConstArg": 10,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 71,
    "NumAndInst": 2,
    "BlockMid": 13,
    "BlockLow": 53,
    "NumBitCastInst": 28,
    "NumBrInst": 42,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 83,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 171,
    "NumMulInst": 1,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 109,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 66,
    "TotalInsts": 607,
    "TotalMemInst": 479,
    "TotalFuncs": 32,
    "ArgsPhi": 2,
    "testUnary": 283
  },
  "baseline_oz_instcount": 607,
  "knowledge_base_entry": [
    "--ipsccp",
    "--sccp",
    "--loop-deletion",
    "--instcombine",
    "--early-cse-memssa",
    "--prune-eh",
    "--gvn-hoist",
    "--sccp",
    "--gvn-hoist",
    "--jump-threading",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--sroa",
    "--inline",
    "--slp-vectorizer",
    "--instsimplify",
    "--loop-rotate",
    "--gvn-hoist",
    "--mldst-motion",
    "--early-cse",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--instcombine",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--inject-tli-mappings",
          "--forceattrs",
          "--ipsccp",
          "--ipconstprop",
          "--sccp",
          "--loop-data-prefetch",
          "--coro-elide",
          "--memcpyopt",
          "--name-anon-globals",
          "--rewrite-statepoints-for-gc",
          "--barrier",
          "-loop-reduce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--inject-tli-mappings",
      "--forceattrs",
      "--ipsccp",
      "--ipconstprop",
      "--sccp",
      "--loop-data-prefetch",
      "--coro-elide",
      "--memcpyopt",
      "--name-anon-globals",
      "--rewrite-statepoints-for-gc",
      "--barrier",
      "-loop-reduce"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}