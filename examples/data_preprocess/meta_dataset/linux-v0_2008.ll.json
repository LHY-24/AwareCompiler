{
  "program_id": "linux-v0_2008.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 44,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 12,
    "oneSuccessor": 40,
    "twoPred": 17,
    "twoPredOneSuc": 6,
    "twoEach": 9,
    "twoSuccessor": 25,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 0,
    "BranchCount": 65,
    "returnInt": 8,
    "CriticalCount": 19,
    "NumEdges": 90,
    "const32Bit": 273,
    "const64Bit": 23,
    "numConstZeroes": 164,
    "numConstOnes": 68,
    "UncondBranches": 40,
    "binaryConstArg": 35,
    "NumAShrInst": 1,
    "NumAddInst": 6,
    "NumAllocaInst": 34,
    "NumAndInst": 17,
    "BlockMid": 8,
    "BlockLow": 63,
    "NumBitCastInst": 14,
    "NumBrInst": 65,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 105,
    "NumICmpInst": 31,
    "NumLShrInst": 2,
    "NumLoadInst": 162,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 52,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 10,
    "NumZExtInst": 36,
    "TotalBlocks": 71,
    "TotalInsts": 573,
    "TotalMemInst": 371,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 256
  },
  "baseline_oz_instcount": 573,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--gvn",
    "--ipsccp",
    "--aggressive-instcombine",
    "--reassociate",
    "--early-cse-memssa",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--dce",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--slsr",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--globalopt",
          "--inject-tli-mappings",
          "--consthoist",
          "--coro-cleanup",
          "--early-cse-memssa",
          "--constprop",
          "--functionattrs",
          "--called-value-propagation",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--globalopt",
      "--inject-tli-mappings",
      "--consthoist",
      "--coro-cleanup",
      "--early-cse-memssa",
      "--constprop",
      "--functionattrs",
      "--called-value-propagation",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}