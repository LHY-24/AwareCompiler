{
  "program_id": "github-v0_37720.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 9,
    "oneSuccessor": 25,
    "twoPred": 15,
    "twoPredOneSuc": 8,
    "twoEach": 6,
    "twoSuccessor": 15,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 0,
    "BranchCount": 40,
    "returnInt": 3,
    "CriticalCount": 9,
    "NumEdges": 55,
    "const32Bit": 76,
    "const64Bit": 0,
    "numConstZeroes": 35,
    "numConstOnes": 12,
    "UncondBranches": 25,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 35,
    "NumBitCastInst": 0,
    "NumBrInst": 40,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 56,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 122,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 30,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 40,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 41,
    "TotalInsts": 330,
    "TotalMemInst": 230,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 161
  },
  "baseline_oz_instcount": 332,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--dce",
    "--inline",
    "--prune-eh",
    "--sroa",
    "--mem2reg",
    "--load-store-vectorizer",
    "--jump-threading",
    "--flattencfg",
    "--ipsccp",
    "--mergefunc",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--simplifycfg",
          "--bdce",
          "--dce",
          "--mldst-motion",
          "--name-anon-globals",
          "--lower-widenable-condition",
          "--partially-inline-libcalls",
          "--partial-inliner",
          "--loweratomic",
          "--coro-elide",
          "--deadargelim",
          "--strip-dead-prototypes",
          "--slsr",
          "--hotcoldsplit",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--simplifycfg",
      "--bdce",
      "--dce",
      "--mldst-motion",
      "--name-anon-globals",
      "--lower-widenable-condition",
      "--partially-inline-libcalls",
      "--partial-inliner",
      "--loweratomic",
      "--coro-elide",
      "--deadargelim",
      "--strip-dead-prototypes",
      "--slsr",
      "--hotcoldsplit",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}