{
  "program_id": "github-v0_9723.ll",
  "autophase_features": {
    "BBNumArgsHi": 11,
    "BBNumArgsLo": 7,
    "onePred": 48,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 13,
    "oneSuccessor": 37,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 29,
    "morePreds": 11,
    "BB03Phi": 17,
    "BBHiPhi": 1,
    "BBNoPhi": 56,
    "BeginPhi": 18,
    "BranchCount": 66,
    "returnInt": 12,
    "CriticalCount": 22,
    "NumEdges": 107,
    "const32Bit": 62,
    "const64Bit": 10,
    "numConstZeroes": 18,
    "numConstOnes": 19,
    "UncondBranches": 37,
    "binaryConstArg": 54,
    "NumAShrInst": 1,
    "NumAddInst": 36,
    "NumAllocaInst": 0,
    "NumAndInst": 18,
    "BlockMid": 9,
    "BlockLow": 65,
    "NumBitCastInst": 0,
    "NumBrInst": 66,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 33,
    "NumLShrInst": 0,
    "NumLoadInst": 23,
    "NumMulInst": 39,
    "NumOrInst": 8,
    "NumPHIInst": 39,
    "NumRetInst": 6,
    "NumSExtInst": 22,
    "NumSelectInst": 26,
    "NumShlInst": 4,
    "NumStoreInst": 4,
    "NumSubInst": 7,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 74,
    "TotalInsts": 578,
    "TotalMemInst": 101,
    "TotalFuncs": 12,
    "ArgsPhi": 127,
    "testUnary": 66
  },
  "baseline_oz_instcount": 577,
  "knowledge_base_entry": [
    "--globalopt",
    "--elim-avail-extern",
    "--lower-expect",
    "--gvn",
    "--gvn-hoist",
    "--reassociate",
    "--simplifycfg",
    "-loop-reduce",
    "--slsr",
    "--nary-reassociate",
    "--newgvn",
    "--loop-fusion",
    "--early-cse",
    "--loop-deletion",
    "--jump-threading",
    "--reassociate",
    "--aggressive-instcombine",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--loop-data-prefetch",
          "--gvn-hoist",
          "--loop-reroll",
          "--speculative-execution",
          "--add-discriminators",
          "--post-inline-ee-instrument",
          "--sccp",
          "--div-rem-pairs",
          "--loop-versioning",
          "--break-crit-edges",
          "--loop-rotate",
          "--globalsplit",
          "--flattencfg",
          "--partially-inline-libcalls",
          "--mergeicmps",
          "--nary-reassociate",
          "--loop-fusion",
          "--cross-dso-cfi",
          "--instcombine",
          "--loop-load-elim",
          "--called-value-propagation",
          "--loop-deletion",
          "--jump-threading",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--loop-data-prefetch",
      "--gvn-hoist",
      "--loop-reroll",
      "--speculative-execution",
      "--add-discriminators",
      "--post-inline-ee-instrument",
      "--sccp",
      "--div-rem-pairs",
      "--loop-versioning",
      "--break-crit-edges",
      "--loop-rotate",
      "--globalsplit",
      "--flattencfg",
      "--partially-inline-libcalls",
      "--mergeicmps",
      "--nary-reassociate",
      "--loop-fusion",
      "--cross-dso-cfi",
      "--instcombine",
      "--loop-load-elim",
      "--called-value-propagation",
      "--loop-deletion",
      "--jump-threading",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}