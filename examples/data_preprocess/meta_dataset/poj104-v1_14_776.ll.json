{
  "program_id": "poj104-v1_14_776.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 7,
    "oneSuccessor": 22,
    "twoPred": 11,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 13,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 38,
    "BeginPhi": 0,
    "BranchCount": 35,
    "returnInt": 6,
    "CriticalCount": 9,
    "NumEdges": 48,
    "const32Bit": 24,
    "const64Bit": 35,
    "numConstZeroes": 25,
    "numConstOnes": 21,
    "UncondBranches": 22,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 35,
    "NumBitCastInst": 12,
    "NumBrInst": 35,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 69,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 23,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 38,
    "TotalInsts": 237,
    "TotalMemInst": 143,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 113
  },
  "baseline_oz_instcount": 125,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--gvn-hoist",
    "--globalopt",
    "--dse",
    "--instsimplify",
    "--sccp",
    "--inline",
    "--slp-vectorizer",
    "--sroa",
    "--correlated-propagation",
    "--dce",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--slsr",
    "--loop-simplifycfg",
    "--newgvn",
    "--lower-expect",
    "--mergefunc",
    "--early-cse",
    "--bdce",
    "--simplifycfg",
    "--slp-vectorizer",
    "--sroa",
    "--simplifycfg",
    "--nary-reassociate",
    "--sroa",
    "--gvn-hoist",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--canonicalize-aliases",
          "--reassociate",
          "--mem2reg",
          "--early-cse",
          "--loweratomic",
          "--coro-elide",
          "--libcalls-shrinkwrap",
          "--callsite-splitting",
          "--elim-avail-extern",
          "--simplifycfg",
          "--correlated-propagation",
          "--pgo-memop-opt",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+13.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--canonicalize-aliases",
      "--reassociate",
      "--mem2reg",
      "--early-cse",
      "--loweratomic",
      "--coro-elide",
      "--libcalls-shrinkwrap",
      "--callsite-splitting",
      "--elim-avail-extern",
      "--simplifycfg",
      "--correlated-propagation",
      "--pgo-memop-opt",
      "--float2int"
    ],
    "performance_vs_Oz": "+13.6%"
  }
}