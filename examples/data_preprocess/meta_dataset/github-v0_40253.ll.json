{
  "program_id": "github-v0_40253.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 92,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 43,
    "oneSuccessor": 76,
    "twoPred": 48,
    "twoPredOneSuc": 14,
    "twoEach": 30,
    "twoSuccessor": 78,
    "morePreds": 14,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 159,
    "BeginPhi": 0,
    "BranchCount": 154,
    "returnInt": 6,
    "CriticalCount": 68,
    "NumEdges": 232,
    "const32Bit": 60,
    "const64Bit": 145,
    "numConstZeroes": 74,
    "numConstOnes": 57,
    "UncondBranches": 76,
    "binaryConstArg": 69,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 36,
    "NumAndInst": 40,
    "BlockMid": 6,
    "BlockLow": 153,
    "NumBitCastInst": 0,
    "NumBrInst": 154,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 52,
    "NumLShrInst": 0,
    "NumLoadInst": 189,
    "NumMulInst": 0,
    "NumOrInst": 26,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 80,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 159,
    "TotalInsts": 671,
    "TotalMemInst": 346,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 229
  },
  "baseline_oz_instcount": 674,
  "knowledge_base_entry": [
    "--sink",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--bdce",
    "--early-cse",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--partially-inline-libcalls",
          "--loop-versioning",
          "--newgvn",
          "--lcssa",
          "--speculative-execution",
          "--early-cse-memssa",
          "--functionattrs",
          "--elim-avail-extern",
          "--instsimplify",
          "--lower-widenable-condition",
          "--instcombine",
          "--constprop",
          "--sroa",
          "--div-rem-pairs",
          "--lower-guard-intrinsic",
          "--ipconstprop",
          "--argpromotion",
          "--canonicalize-aliases",
          "--loop-data-prefetch",
          "--load-store-vectorizer",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--partially-inline-libcalls",
      "--loop-versioning",
      "--newgvn",
      "--lcssa",
      "--speculative-execution",
      "--early-cse-memssa",
      "--functionattrs",
      "--elim-avail-extern",
      "--instsimplify",
      "--lower-widenable-condition",
      "--instcombine",
      "--constprop",
      "--sroa",
      "--div-rem-pairs",
      "--lower-guard-intrinsic",
      "--ipconstprop",
      "--argpromotion",
      "--canonicalize-aliases",
      "--loop-data-prefetch",
      "--load-store-vectorizer",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}