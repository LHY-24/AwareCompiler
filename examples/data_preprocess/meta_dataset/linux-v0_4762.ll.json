{
  "program_id": "linux-v0_4762.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 46,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 17,
    "oneSuccessor": 34,
    "twoPred": 13,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 28,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 75,
    "BeginPhi": 2,
    "BranchCount": 62,
    "returnInt": 24,
    "CriticalCount": 11,
    "NumEdges": 90,
    "const32Bit": 227,
    "const64Bit": 7,
    "numConstZeroes": 91,
    "numConstOnes": 80,
    "UncondBranches": 34,
    "binaryConstArg": 24,
    "NumAShrInst": 4,
    "NumAddInst": 4,
    "NumAllocaInst": 61,
    "NumAndInst": 6,
    "BlockMid": 12,
    "BlockLow": 65,
    "NumBitCastInst": 4,
    "NumBrInst": 62,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 28,
    "NumLShrInst": 0,
    "NumLoadInst": 189,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 2,
    "NumRetInst": 15,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 102,
    "NumSubInst": 4,
    "NumTruncInst": 12,
    "NumXorInst": 4,
    "NumZExtInst": 14,
    "TotalBlocks": 77,
    "TotalInsts": 620,
    "TotalMemInst": 447,
    "TotalFuncs": 31,
    "ArgsPhi": 4,
    "testUnary": 280
  },
  "baseline_oz_instcount": 620,
  "knowledge_base_entry": [
    "--loop-sink",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--instsimplify",
    "--ipsccp",
    "--adce",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--globalopt",
    "--mergefunc",
    "-loop-reduce",
    "--jump-threading",
    "--inline",
    "--prune-eh",
    "--gvn",
    "--loop-rotate",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--lower-matrix-intrinsics",
          "--lcssa",
          "--globalopt",
          "--mldst-motion",
          "--inject-tli-mappings",
          "--lower-guard-intrinsic",
          "--aggressive-instcombine",
          "--sccp",
          "--loop-versioning-licm",
          "--pgo-memop-opt",
          "--loop-unswitch",
          "--mergereturn",
          "--scalarizer",
          "--licm",
          "--ee-instrument",
          "--tailcallelim",
          "--libcalls-shrinkwrap",
          "--strip-debug-declare",
          "--early-cse",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--lower-matrix-intrinsics",
      "--lcssa",
      "--globalopt",
      "--mldst-motion",
      "--inject-tli-mappings",
      "--lower-guard-intrinsic",
      "--aggressive-instcombine",
      "--sccp",
      "--loop-versioning-licm",
      "--pgo-memop-opt",
      "--loop-unswitch",
      "--mergereturn",
      "--scalarizer",
      "--licm",
      "--ee-instrument",
      "--tailcallelim",
      "--libcalls-shrinkwrap",
      "--strip-debug-declare",
      "--early-cse",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}