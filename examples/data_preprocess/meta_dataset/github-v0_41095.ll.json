{
  "program_id": "github-v0_41095.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 91,
    "onePredOneSuc": 46,
    "onePredTwoSuc": 44,
    "oneSuccessor": 67,
    "twoPred": 30,
    "twoPredOneSuc": 15,
    "twoEach": 11,
    "twoSuccessor": 64,
    "morePreds": 11,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 138,
    "BeginPhi": 0,
    "BranchCount": 131,
    "returnInt": 11,
    "CriticalCount": 42,
    "NumEdges": 199,
    "const32Bit": 409,
    "const64Bit": 25,
    "numConstZeroes": 218,
    "numConstOnes": 109,
    "UncondBranches": 67,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 54,
    "NumAndInst": 5,
    "BlockMid": 14,
    "BlockLow": 124,
    "NumBitCastInst": 42,
    "NumBrInst": 131,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 143,
    "NumICmpInst": 64,
    "NumLShrInst": 0,
    "NumLoadInst": 271,
    "NumMulInst": 2,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 116,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 28,
    "TotalBlocks": 138,
    "TotalInsts": 916,
    "TotalMemInst": 609,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 407
  },
  "baseline_oz_instcount": 917,
  "knowledge_base_entry": [
    "--gvn",
    "--aggressive-instcombine",
    "--ipsccp",
    "--instcombine",
    "--dce",
    "--sccp",
    "--lower-expect",
    "--die",
    "--lower-constant-intrinsics",
    "--adce",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mem2reg",
          "--barrier",
          "--adce",
          "--slsr",
          "--float2int",
          "--infer-address-spaces",
          "--strip-nondebug",
          "--libcalls-shrinkwrap",
          "--correlated-propagation",
          "--separate-const-offset-from-gep",
          "--lower-expect"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mem2reg",
      "--barrier",
      "--adce",
      "--slsr",
      "--float2int",
      "--infer-address-spaces",
      "--strip-nondebug",
      "--libcalls-shrinkwrap",
      "--correlated-propagation",
      "--separate-const-offset-from-gep",
      "--lower-expect"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}