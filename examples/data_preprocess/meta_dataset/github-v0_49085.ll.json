{
  "program_id": "github-v0_49085.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 144,
    "onePredOneSuc": 67,
    "onePredTwoSuc": 37,
    "oneSuccessor": 75,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 38,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 157,
    "BeginPhi": 0,
    "BranchCount": 113,
    "returnInt": 48,
    "CriticalCount": 2,
    "NumEdges": 151,
    "const32Bit": 106,
    "const64Bit": 7,
    "numConstZeroes": 38,
    "numConstOnes": 37,
    "UncondBranches": 75,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 18,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 156,
    "NumBitCastInst": 3,
    "NumBrInst": 113,
    "NumCallInst": 96,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 38,
    "NumLShrInst": 0,
    "NumLoadInst": 92,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 30,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 157,
    "TotalInsts": 448,
    "TotalMemInst": 244,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 114
  },
  "baseline_oz_instcount": 455,
  "knowledge_base_entry": [
    "--licm",
    "--early-cse-memssa",
    "--gvn",
    "--gvn-hoist",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--newgvn",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--constprop",
          "--loop-load-elim",
          "--libcalls-shrinkwrap",
          "--coro-split",
          "--globaldce",
          "--coro-elide",
          "--loop-guard-widening",
          "--loop-versioning",
          "--loop-predication",
          "--simplifycfg",
          "--loop-unswitch",
          "--simple-loop-unswitch",
          "--forceattrs",
          "--gvn",
          "--loop-rotate",
          "--lowerinvoke",
          "--float2int",
          "--hotcoldsplit",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--constprop",
      "--loop-load-elim",
      "--libcalls-shrinkwrap",
      "--coro-split",
      "--globaldce",
      "--coro-elide",
      "--loop-guard-widening",
      "--loop-versioning",
      "--loop-predication",
      "--simplifycfg",
      "--loop-unswitch",
      "--simple-loop-unswitch",
      "--forceattrs",
      "--gvn",
      "--loop-rotate",
      "--lowerinvoke",
      "--float2int",
      "--hotcoldsplit",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}