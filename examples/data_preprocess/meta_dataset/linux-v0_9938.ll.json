{
  "program_id": "linux-v0_9938.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 67,
    "onePredOneSuc": 50,
    "onePredTwoSuc": 13,
    "oneSuccessor": 61,
    "twoPred": 18,
    "twoPredOneSuc": 4,
    "twoEach": 8,
    "twoSuccessor": 29,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 125,
    "BeginPhi": 0,
    "BranchCount": 90,
    "returnInt": 17,
    "CriticalCount": 13,
    "NumEdges": 119,
    "const32Bit": 269,
    "const64Bit": 13,
    "numConstZeroes": 90,
    "numConstOnes": 128,
    "UncondBranches": 61,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 117,
    "NumAndInst": 1,
    "BlockMid": 12,
    "BlockLow": 113,
    "NumBitCastInst": 22,
    "NumBrInst": 90,
    "NumCallInst": 72,
    "NumGetElementPtrInst": 63,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 239,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 35,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 154,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 125,
    "TotalInsts": 862,
    "TotalMemInst": 645,
    "TotalFuncs": 56,
    "ArgsPhi": 0,
    "testUnary": 403
  },
  "baseline_oz_instcount": 862,
  "knowledge_base_entry": [
    "--mem2reg",
    "--die",
    "--gvn-hoist",
    "--early-cse",
    "--loop-fusion",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--sroa",
    "--elim-avail-extern",
    "--mergefunc",
    "--instsimplify",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--inline",
          "--sancov",
          "--prune-eh",
          "--load-store-vectorizer",
          "--infer-address-spaces",
          "--slsr",
          "--deadargelim",
          "--canonicalize-aliases",
          "--loop-idiom",
          "--slp-vectorizer",
          "--lowerswitch",
          "--mergefunc",
          "--loop-unroll-and-jam",
          "--gvn-hoist",
          "--loop-unswitch",
          "--strip-debug-declare",
          "--partially-inline-libcalls",
          "--attributor",
          "--early-cse-memssa",
          "--loop-load-elim",
          "--mem2reg",
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--redundant-dbg-inst-elim",
          "--bdce",
          "--loop-guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--inline",
      "--sancov",
      "--prune-eh",
      "--load-store-vectorizer",
      "--infer-address-spaces",
      "--slsr",
      "--deadargelim",
      "--canonicalize-aliases",
      "--loop-idiom",
      "--slp-vectorizer",
      "--lowerswitch",
      "--mergefunc",
      "--loop-unroll-and-jam",
      "--gvn-hoist",
      "--loop-unswitch",
      "--strip-debug-declare",
      "--partially-inline-libcalls",
      "--attributor",
      "--early-cse-memssa",
      "--loop-load-elim",
      "--mem2reg",
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--redundant-dbg-inst-elim",
      "--bdce",
      "--loop-guard-widening"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}