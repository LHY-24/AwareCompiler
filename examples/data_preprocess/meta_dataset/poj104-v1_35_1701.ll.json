{
  "program_id": "poj104-v1_35_1701.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 4,
    "oneSuccessor": 19,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 5,
    "CriticalCount": 4,
    "NumEdges": 37,
    "const32Bit": 36,
    "const64Bit": 34,
    "numConstZeroes": 28,
    "numConstOnes": 20,
    "UncondBranches": 19,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 29,
    "NumBitCastInst": 24,
    "NumBrInst": 28,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 31,
    "TotalInsts": 187,
    "TotalMemInst": 109,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 80
  },
  "baseline_oz_instcount": 89,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--instcombine",
    "--instsimplify",
    "--nary-reassociate",
    "--instcombine",
    "--bdce",
    "--slp-vectorizer",
    "--loop-reroll",
    "--memcpyopt",
    "--early-cse-memssa",
    "--bdce",
    "--inline",
    "--mergefunc",
    "--mem2reg",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--inline",
    "--load-store-vectorizer",
    "--early-cse",
    "--simplifycfg",
    "--instcombine",
    "--correlated-propagation",
    "--newgvn",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--simple-loop-unswitch",
          "--globaldce",
          "--lcssa",
          "--loop-instsimplify",
          "--early-cse",
          "--loop-vectorize",
          "--gvn-hoist",
          "--simplifycfg",
          "--reassociate",
          "--guard-widening",
          "--forceattrs",
          "--partially-inline-libcalls",
          "--pgo-memop-opt",
          "--div-rem-pairs",
          "--lower-matrix-intrinsics",
          "--nary-reassociate",
          "--instcombine",
          "--mergefunc",
          "--consthoist",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--simple-loop-unswitch",
      "--globaldce",
      "--lcssa",
      "--loop-instsimplify",
      "--early-cse",
      "--loop-vectorize",
      "--gvn-hoist",
      "--simplifycfg",
      "--reassociate",
      "--guard-widening",
      "--forceattrs",
      "--partially-inline-libcalls",
      "--pgo-memop-opt",
      "--div-rem-pairs",
      "--lower-matrix-intrinsics",
      "--nary-reassociate",
      "--instcombine",
      "--mergefunc",
      "--consthoist",
      "--barrier"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}