{
  "program_id": "github-v0_41880.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 6,
    "oneSuccessor": 20,
    "twoPred": 13,
    "twoPredOneSuc": 0,
    "twoEach": 10,
    "twoSuccessor": 19,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 1,
    "CriticalCount": 15,
    "NumEdges": 58,
    "const32Bit": 123,
    "const64Bit": 50,
    "numConstZeroes": 53,
    "numConstOnes": 35,
    "UncondBranches": 20,
    "binaryConstArg": 79,
    "NumAShrInst": 18,
    "NumAddInst": 4,
    "NumAllocaInst": 21,
    "NumAndInst": 16,
    "BlockMid": 15,
    "BlockLow": 29,
    "NumBitCastInst": 10,
    "NumBrInst": 39,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 19,
    "NumLShrInst": 31,
    "NumLoadInst": 222,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 94,
    "NumSubInst": 9,
    "NumTruncInst": 56,
    "NumXorInst": 66,
    "NumZExtInst": 114,
    "TotalBlocks": 44,
    "TotalInsts": 786,
    "TotalMemInst": 392,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 429
  },
  "baseline_oz_instcount": 786,
  "knowledge_base_entry": [
    "--instcombine",
    "--aggressive-instcombine",
    "--instsimplify",
    "--lower-expect",
    "--dse",
    "--dse",
    "--die",
    "--elim-avail-extern",
    "--licm",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--coro-elide",
          "--loop-simplify",
          "--div-rem-pairs",
          "--separate-const-offset-from-gep",
          "--loop-load-elim",
          "--libcalls-shrinkwrap",
          "--loop-distribute",
          "--rewrite-statepoints-for-gc",
          "--pgo-memop-opt",
          "--functionattrs",
          "--elim-avail-extern",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--coro-elide",
      "--loop-simplify",
      "--div-rem-pairs",
      "--separate-const-offset-from-gep",
      "--loop-load-elim",
      "--libcalls-shrinkwrap",
      "--loop-distribute",
      "--rewrite-statepoints-for-gc",
      "--pgo-memop-opt",
      "--functionattrs",
      "--elim-avail-extern",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}