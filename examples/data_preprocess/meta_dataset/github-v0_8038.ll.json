{
  "program_id": "github-v0_8038.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 30,
    "const64Bit": 23,
    "numConstZeroes": 28,
    "numConstOnes": 20,
    "UncondBranches": 9,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 14,
    "NumBitCastInst": 0,
    "NumBrInst": 14,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 28,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 18,
    "TotalInsts": 133,
    "TotalMemInst": 81,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 60
  },
  "baseline_oz_instcount": 133,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--gvn",
    "--indvars",
    "--slsr",
    "--instcombine",
    "--elim-avail-extern",
    "--mergefunc",
    "--gvn-hoist",
    "--reassociate",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--early-cse",
    "--prune-eh",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergereturn",
          "--inline",
          "--rpo-functionattrs",
          "--aggressive-instcombine",
          "--loop-data-prefetch",
          "--loop-instsimplify",
          "--barrier",
          "--lower-constant-intrinsics",
          "--loop-unroll",
          "--early-cse",
          "-loop-reduce",
          "--die",
          "--load-store-vectorizer",
          "--partial-inliner",
          "--instcombine",
          "--sccp",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergereturn",
      "--inline",
      "--rpo-functionattrs",
      "--aggressive-instcombine",
      "--loop-data-prefetch",
      "--loop-instsimplify",
      "--barrier",
      "--lower-constant-intrinsics",
      "--loop-unroll",
      "--early-cse",
      "-loop-reduce",
      "--die",
      "--load-store-vectorizer",
      "--partial-inliner",
      "--instcombine",
      "--sccp",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+7.5%"
  }
}