{
  "program_id": "github-v0_18378.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 66,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 24,
    "oneSuccessor": 50,
    "twoPred": 17,
    "twoPredOneSuc": 8,
    "twoEach": 6,
    "twoSuccessor": 36,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 103,
    "BeginPhi": 0,
    "BranchCount": 86,
    "returnInt": 6,
    "CriticalCount": 7,
    "NumEdges": 122,
    "const32Bit": 366,
    "const64Bit": 22,
    "numConstZeroes": 176,
    "numConstOnes": 102,
    "UncondBranches": 50,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 79,
    "NumAndInst": 3,
    "BlockMid": 11,
    "BlockLow": 92,
    "NumBitCastInst": 25,
    "NumBrInst": 86,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 119,
    "NumICmpInst": 36,
    "NumLShrInst": 0,
    "NumLoadInst": 258,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 140,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 103,
    "TotalInsts": 817,
    "TotalMemInst": 634,
    "TotalFuncs": 48,
    "ArgsPhi": 0,
    "testUnary": 372
  },
  "baseline_oz_instcount": 730,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--newgvn",
    "--loop-simplifycfg",
    "--mergefunc",
    "--ipsccp",
    "--jump-threading",
    "--sccp",
    "--globalopt",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--slsr",
    "--gvn-hoist",
    "--inline",
    "--gvn-hoist",
    "--newgvn",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--mergefunc",
    "--dce",
    "--die",
    "--slp-vectorizer",
    "--gvn",
    "--bdce",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--mem2reg",
          "--flattencfg",
          "--lower-matrix-intrinsics",
          "--slsr",
          "--callsite-splitting",
          "--gvn-hoist",
          "--strip-nondebug",
          "--loop-fusion",
          "--dce",
          "--lcssa",
          "--irce",
          "--loop-predication",
          "--lower-widenable-condition",
          "--early-cse-memssa",
          "--reassociate",
          "--mergefunc",
          "--globaldce",
          "--loop-simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--mem2reg",
      "--flattencfg",
      "--lower-matrix-intrinsics",
      "--slsr",
      "--callsite-splitting",
      "--gvn-hoist",
      "--strip-nondebug",
      "--loop-fusion",
      "--dce",
      "--lcssa",
      "--irce",
      "--loop-predication",
      "--lower-widenable-condition",
      "--early-cse-memssa",
      "--reassociate",
      "--mergefunc",
      "--globaldce",
      "--loop-simplifycfg"
    ],
    "performance_vs_Oz": "+4.5%"
  }
}