{
  "program_id": "linux-v0_5697.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 6,
    "oneSuccessor": 18,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 2,
    "CriticalCount": 5,
    "NumEdges": 38,
    "const32Bit": 41,
    "const64Bit": 3,
    "numConstZeroes": 12,
    "numConstOnes": 34,
    "UncondBranches": 18,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 27,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 29,
    "NumBitCastInst": 0,
    "NumBrInst": 28,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 47,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 42,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 33,
    "TotalInsts": 192,
    "TotalMemInst": 137,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 83
  },
  "baseline_oz_instcount": 195,
  "knowledge_base_entry": [
    "--prune-eh",
    "--instsimplify",
    "--dse",
    "--globalopt",
    "--loop-instsimplify",
    "--instcombine",
    "--die",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--instsimplify",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-interchange",
          "--loop-unroll-and-jam",
          "--loop-unroll",
          "--rpo-functionattrs",
          "-loop-reduce",
          "--loop-simplifycfg",
          "--globalopt",
          "--strip-debug-declare",
          "--globalsplit",
          "--partially-inline-libcalls",
          "--constmerge",
          "--loop-predication",
          "--dce",
          "--tailcallelim",
          "--newgvn",
          "--inline",
          "--lowerswitch",
          "--ipconstprop",
          "--coro-split",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-interchange",
      "--loop-unroll-and-jam",
      "--loop-unroll",
      "--rpo-functionattrs",
      "-loop-reduce",
      "--loop-simplifycfg",
      "--globalopt",
      "--strip-debug-declare",
      "--globalsplit",
      "--partially-inline-libcalls",
      "--constmerge",
      "--loop-predication",
      "--dce",
      "--tailcallelim",
      "--newgvn",
      "--inline",
      "--lowerswitch",
      "--ipconstprop",
      "--coro-split",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+3.1%"
  }
}