{
  "program_id": "linux-v0_934.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 1,
    "CriticalCount": 0,
    "NumEdges": 4,
    "const32Bit": 49,
    "const64Bit": 3,
    "numConstZeroes": 18,
    "numConstOnes": 25,
    "UncondBranches": 2,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 23,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 6,
    "NumBitCastInst": 4,
    "NumBrInst": 3,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 11,
    "TotalInsts": 129,
    "TotalMemInst": 109,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 62
  },
  "baseline_oz_instcount": 129,
  "knowledge_base_entry": [
    "--ipsccp",
    "--globaldce",
    "--mergefunc",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--jump-threading",
    "--early-cse",
    "--loop-instsimplify",
    "--dse",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--lowerswitch",
          "--lower-matrix-intrinsics",
          "--canonicalize-aliases",
          "--speculative-execution",
          "--mldst-motion",
          "--callsite-splitting",
          "--scalarizer",
          "--simplifycfg",
          "--globaldce",
          "--mergefunc",
          "--gvn-hoist",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--lowerswitch",
      "--lower-matrix-intrinsics",
      "--canonicalize-aliases",
      "--speculative-execution",
      "--mldst-motion",
      "--callsite-splitting",
      "--scalarizer",
      "--simplifycfg",
      "--globaldce",
      "--mergefunc",
      "--gvn-hoist",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}