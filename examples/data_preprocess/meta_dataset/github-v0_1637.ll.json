{
  "program_id": "github-v0_1637.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 8,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 28,
    "const64Bit": 1,
    "numConstZeroes": 8,
    "numConstOnes": 19,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 19,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 7,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 11,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 8,
    "TotalInsts": 67,
    "TotalMemInst": 59,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 30
  },
  "baseline_oz_instcount": 67,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--ipsccp",
    "--licm",
    "--die",
    "--simplifycfg",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "--irce",
          "--separate-const-offset-from-gep",
          "--early-cse-memssa",
          "--load-store-vectorizer",
          "--slsr",
          "--coro-cleanup",
          "--loop-unswitch",
          "--aggressive-instcombine",
          "--lower-matrix-intrinsics",
          "--guard-widening",
          "--mergefunc",
          "--gvn-hoist",
          "--loop-instsimplify",
          "--ipconstprop",
          "--elim-avail-extern",
          "--partial-inliner",
          "--mldst-motion",
          "--correlated-propagation",
          "--instnamer",
          "--always-inline",
          "--loop-interchange",
          "--loop-data-prefetch",
          "--lowerinvoke",
          "--rpo-functionattrs",
          "--loop-versioning",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+17.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "--irce",
      "--separate-const-offset-from-gep",
      "--early-cse-memssa",
      "--load-store-vectorizer",
      "--slsr",
      "--coro-cleanup",
      "--loop-unswitch",
      "--aggressive-instcombine",
      "--lower-matrix-intrinsics",
      "--guard-widening",
      "--mergefunc",
      "--gvn-hoist",
      "--loop-instsimplify",
      "--ipconstprop",
      "--elim-avail-extern",
      "--partial-inliner",
      "--mldst-motion",
      "--correlated-propagation",
      "--instnamer",
      "--always-inline",
      "--loop-interchange",
      "--loop-data-prefetch",
      "--lowerinvoke",
      "--rpo-functionattrs",
      "--loop-versioning",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+17.9%"
  }
}