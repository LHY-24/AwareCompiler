{
  "program_id": "linux-v0_6780.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 6,
    "oneSuccessor": 22,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 12,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 12,
    "CriticalCount": 1,
    "NumEdges": 46,
    "const32Bit": 364,
    "const64Bit": 45,
    "numConstZeroes": 210,
    "numConstOnes": 96,
    "UncondBranches": 22,
    "binaryConstArg": 18,
    "NumAShrInst": 1,
    "NumAddInst": 15,
    "NumAllocaInst": 76,
    "NumAndInst": 3,
    "BlockMid": 21,
    "BlockLow": 38,
    "NumBitCastInst": 34,
    "NumBrInst": 34,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 143,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 238,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 130,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 1,
    "NumZExtInst": 19,
    "TotalBlocks": 59,
    "TotalInsts": 815,
    "TotalMemInst": 643,
    "TotalFuncs": 34,
    "ArgsPhi": 0,
    "testUnary": 388
  },
  "baseline_oz_instcount": 816,
  "knowledge_base_entry": [
    "--sroa",
    "--globalopt",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--mergefunc",
    "--simplifycfg",
    "--early-cse-memssa",
    "--mergefunc",
    "--aggressive-instcombine",
    "--dse",
    "--aggressive-instcombine",
    "--globalopt",
    "--early-cse-memssa",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--alignment-from-assumptions",
          "--lower-matrix-intrinsics",
          "--strip-nondebug",
          "--forceattrs",
          "--memcpyopt",
          "--always-inline",
          "--functionattrs",
          "--ee-instrument",
          "--inline",
          "--redundant-dbg-inst-elim",
          "--loop-load-elim",
          "--partially-inline-libcalls",
          "--aggressive-instcombine",
          "--gvn-hoist",
          "--mergefunc",
          "--lowerswitch",
          "--loop-idiom",
          "--inferattrs",
          "--loop-deletion",
          "--loop-data-prefetch",
          "--rewrite-statepoints-for-gc",
          "--sroa",
          "--lcssa",
          "--early-cse",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+10.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--alignment-from-assumptions",
      "--lower-matrix-intrinsics",
      "--strip-nondebug",
      "--forceattrs",
      "--memcpyopt",
      "--always-inline",
      "--functionattrs",
      "--ee-instrument",
      "--inline",
      "--redundant-dbg-inst-elim",
      "--loop-load-elim",
      "--partially-inline-libcalls",
      "--aggressive-instcombine",
      "--gvn-hoist",
      "--mergefunc",
      "--lowerswitch",
      "--loop-idiom",
      "--inferattrs",
      "--loop-deletion",
      "--loop-data-prefetch",
      "--rewrite-statepoints-for-gc",
      "--sroa",
      "--lcssa",
      "--early-cse",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+10.3%"
  }
}