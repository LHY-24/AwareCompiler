{
  "program_id": "tensorflow-v0_475.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 8,
    "onePred": 22,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 7,
    "oneSuccessor": 17,
    "twoPred": 12,
    "twoPredOneSuc": 2,
    "twoEach": 7,
    "twoSuccessor": 22,
    "morePreds": 5,
    "BB03Phi": 8,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 8,
    "BranchCount": 39,
    "returnInt": 0,
    "CriticalCount": 22,
    "NumEdges": 61,
    "const32Bit": 126,
    "const64Bit": 83,
    "numConstZeroes": 129,
    "numConstOnes": 46,
    "UncondBranches": 17,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 0,
    "BlockLow": 55,
    "NumBitCastInst": 30,
    "NumBrInst": 39,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 75,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 52,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 8,
    "NumRetInst": 16,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 55,
    "TotalInsts": 302,
    "TotalMemInst": 183,
    "TotalFuncs": 20,
    "ArgsPhi": 16,
    "testUnary": 84
  },
  "baseline_oz_instcount": 292,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--sroa",
    "--die",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--slsr",
    "--loop-reroll",
    "--simplifycfg",
    "--slsr",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--reassociate",
    "--bdce",
    "--mergefunc",
    "--gvn",
    "--dce",
    "--mergefunc",
    "--gvn",
    "--early-cse-memssa",
    "--simplifycfg",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mem2reg",
          "--post-inline-ee-instrument",
          "--constmerge",
          "--loop-versioning-licm",
          "--attributor",
          "--lowerswitch",
          "-loop-reduce",
          "--loop-rotate",
          "--instsimplify",
          "--infer-address-spaces",
          "--separate-const-offset-from-gep",
          "--called-value-propagation",
          "--instcombine",
          "--jump-threading",
          "--simple-loop-unswitch",
          "--insert-gcov-profiling",
          "--ipconstprop",
          "--mergefunc",
          "--tailcallelim",
          "--loop-unswitch",
          "--bdce",
          "--inferattrs",
          "--loop-load-elim",
          "--loop-reroll",
          "--lower-widenable-condition"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mem2reg",
      "--post-inline-ee-instrument",
      "--constmerge",
      "--loop-versioning-licm",
      "--attributor",
      "--lowerswitch",
      "-loop-reduce",
      "--loop-rotate",
      "--instsimplify",
      "--infer-address-spaces",
      "--separate-const-offset-from-gep",
      "--called-value-propagation",
      "--instcombine",
      "--jump-threading",
      "--simple-loop-unswitch",
      "--insert-gcov-profiling",
      "--ipconstprop",
      "--mergefunc",
      "--tailcallelim",
      "--loop-unswitch",
      "--bdce",
      "--inferattrs",
      "--loop-load-elim",
      "--loop-reroll",
      "--lower-widenable-condition"
    ],
    "performance_vs_Oz": "+7.5%"
  }
}