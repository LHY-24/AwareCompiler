{
  "program_id": "github-v0_40514.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 31,
    "const64Bit": 28,
    "numConstZeroes": 29,
    "numConstOnes": 26,
    "UncondBranches": 11,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 4,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 21,
    "TotalInsts": 136,
    "TotalMemInst": 84,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 55
  },
  "baseline_oz_instcount": 136,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--sroa",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--dse",
    "--dce",
    "--gvn-hoist",
    "--bdce",
    "--lower-expect",
    "--globalopt",
    "--newgvn",
    "--instcombine",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--reassociate",
          "--loop-deletion",
          "--gvn-hoist",
          "--loop-instsimplify",
          "--lower-guard-intrinsic",
          "--loop-vectorize",
          "--mldst-motion",
          "--indvars",
          "--div-rem-pairs",
          "--aggressive-instcombine",
          "--float2int",
          "--irce",
          "--inline",
          "--coro-early",
          "--globalopt",
          "-loop-reduce",
          "--lcssa",
          "--mergereturn",
          "--constprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--reassociate",
      "--loop-deletion",
      "--gvn-hoist",
      "--loop-instsimplify",
      "--lower-guard-intrinsic",
      "--loop-vectorize",
      "--mldst-motion",
      "--indvars",
      "--div-rem-pairs",
      "--aggressive-instcombine",
      "--float2int",
      "--irce",
      "--inline",
      "--coro-early",
      "--globalopt",
      "-loop-reduce",
      "--lcssa",
      "--mergereturn",
      "--constprop"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}