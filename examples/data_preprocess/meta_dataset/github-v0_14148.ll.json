{
  "program_id": "github-v0_14148.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 4,
    "oneSuccessor": 21,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 5,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 2,
    "CriticalCount": 3,
    "NumEdges": 47,
    "const32Bit": 69,
    "const64Bit": 5,
    "numConstZeroes": 34,
    "numConstOnes": 34,
    "UncondBranches": 21,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 19,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 36,
    "NumBitCastInst": 10,
    "NumBrInst": 34,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 80,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 42,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 39,
    "TotalInsts": 236,
    "TotalMemInst": 171,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 111
  },
  "baseline_oz_instcount": 237,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--inline",
    "--instsimplify",
    "--jump-threading",
    "--gvn",
    "--newgvn",
    "--sroa",
    "--early-cse-memssa",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--ipconstprop",
          "--rpo-functionattrs",
          "--partial-inliner",
          "--tailcallelim",
          "--simplifycfg",
          "--lowerinvoke",
          "--bdce",
          "--instsimplify",
          "--mergeicmps",
          "--libcalls-shrinkwrap"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--ipconstprop",
      "--rpo-functionattrs",
      "--partial-inliner",
      "--tailcallelim",
      "--simplifycfg",
      "--lowerinvoke",
      "--bdce",
      "--instsimplify",
      "--mergeicmps",
      "--libcalls-shrinkwrap"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}