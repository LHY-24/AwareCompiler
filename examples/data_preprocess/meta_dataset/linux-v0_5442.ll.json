{
  "program_id": "linux-v0_5442.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 8,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 7,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 1,
    "BranchCount": 10,
    "returnInt": 1,
    "CriticalCount": 0,
    "NumEdges": 15,
    "const32Bit": 27,
    "const64Bit": 0,
    "numConstZeroes": 7,
    "numConstOnes": 16,
    "UncondBranches": 7,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 14,
    "NumAndInst": 1,
    "BlockMid": 2,
    "BlockLow": 13,
    "NumBitCastInst": 0,
    "NumBrInst": 10,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 10,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 15,
    "TotalInsts": 65,
    "TotalMemInst": 44,
    "TotalFuncs": 6,
    "ArgsPhi": 2,
    "testUnary": 24
  },
  "baseline_oz_instcount": 66,
  "knowledge_base_entry": [
    "--adce",
    "--loop-simplifycfg",
    "--jump-threading",
    "--sroa",
    "--correlated-propagation",
    "--die",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--loop-sink",
          "--inferattrs",
          "--loop-guard-widening",
          "--gvn",
          "--load-store-vectorizer",
          "--called-value-propagation",
          "--post-inline-ee-instrument",
          "--argpromotion",
          "--coro-elide",
          "--attributor"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--loop-sink",
      "--inferattrs",
      "--loop-guard-widening",
      "--gvn",
      "--load-store-vectorizer",
      "--called-value-propagation",
      "--post-inline-ee-instrument",
      "--argpromotion",
      "--coro-elide",
      "--attributor"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}