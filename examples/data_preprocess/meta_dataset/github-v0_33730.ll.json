{
  "program_id": "github-v0_33730.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 4,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 2,
    "CriticalCount": 4,
    "NumEdges": 14,
    "const32Bit": 18,
    "const64Bit": 6,
    "numConstZeroes": 8,
    "numConstOnes": 7,
    "UncondBranches": 4,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 6,
    "NumAndInst": 3,
    "BlockMid": 1,
    "BlockLow": 13,
    "NumBitCastInst": 0,
    "NumBrInst": 9,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 5,
    "NumLShrInst": 2,
    "NumLoadInst": 12,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 7,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 14,
    "TotalInsts": 65,
    "TotalMemInst": 31,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 28
  },
  "baseline_oz_instcount": 63,
  "knowledge_base_entry": [
    "--newgvn",
    "--sccp",
    "--reassociate",
    "--correlated-propagation",
    "--mergefunc",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--reassociate",
    "--instsimplify",
    "--globalopt",
    "--early-cse",
    "--dce",
    "--die",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unswitch",
          "--rewrite-statepoints-for-gc",
          "--aggressive-instcombine",
          "--insert-gcov-profiling",
          "--loop-deletion",
          "--loop-versioning",
          "--simple-loop-unswitch",
          "--loop-reroll",
          "--rpo-functionattrs",
          "--lower-constant-intrinsics",
          "--flattencfg",
          "--reassociate",
          "--sccp",
          "--slsr",
          "--ipconstprop",
          "--instnamer",
          "--functionattrs",
          "--tailcallelim",
          "--redundant-dbg-inst-elim",
          "--nary-reassociate",
          "--die",
          "--globalopt",
          "--canonicalize-aliases",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unswitch",
      "--rewrite-statepoints-for-gc",
      "--aggressive-instcombine",
      "--insert-gcov-profiling",
      "--loop-deletion",
      "--loop-versioning",
      "--simple-loop-unswitch",
      "--loop-reroll",
      "--rpo-functionattrs",
      "--lower-constant-intrinsics",
      "--flattencfg",
      "--reassociate",
      "--sccp",
      "--slsr",
      "--ipconstprop",
      "--instnamer",
      "--functionattrs",
      "--tailcallelim",
      "--redundant-dbg-inst-elim",
      "--nary-reassociate",
      "--die",
      "--globalopt",
      "--canonicalize-aliases",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+3.2%"
  }
}