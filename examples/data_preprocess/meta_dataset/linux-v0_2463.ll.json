{
  "program_id": "linux-v0_2463.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 55,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 15,
    "oneSuccessor": 47,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 23,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 83,
    "BeginPhi": 0,
    "BranchCount": 69,
    "returnInt": 12,
    "CriticalCount": 7,
    "NumEdges": 96,
    "const32Bit": 218,
    "const64Bit": 15,
    "numConstZeroes": 107,
    "numConstOnes": 66,
    "UncondBranches": 47,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 54,
    "NumAndInst": 1,
    "BlockMid": 11,
    "BlockLow": 72,
    "NumBitCastInst": 16,
    "NumBrInst": 69,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 81,
    "NumICmpInst": 23,
    "NumLShrInst": 0,
    "NumLoadInst": 187,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 72,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 83,
    "TotalInsts": 574,
    "TotalMemInst": 427,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 269
  },
  "baseline_oz_instcount": 575,
  "knowledge_base_entry": [
    "--mergereturn",
    "--jump-threading",
    "--mergefunc",
    "--dse",
    "--aggressive-instcombine",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--adce",
    "--mergefunc",
    "--die",
    "--early-cse-memssa",
    "--sroa",
    "--nary-reassociate",
    "--gvn",
    "--inline",
    "--jump-threading",
    "--loop-reroll",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-reroll",
          "--constmerge",
          "--functionattrs",
          "--speculative-execution",
          "--loop-versioning-licm",
          "--inject-tli-mappings",
          "--lowerinvoke",
          "--mergeicmps",
          "--rpo-functionattrs",
          "--gvn-hoist",
          "--attributor",
          "--loweratomic",
          "--coro-early",
          "--sccp",
          "-loop-reduce",
          "--cross-dso-cfi",
          "--alignment-from-assumptions",
          "--lower-expect",
          "--lower-matrix-intrinsics",
          "--simple-loop-unswitch",
          "--prune-eh",
          "--irce",
          "--barrier",
          "--instnamer",
          "--sancov",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-reroll",
      "--constmerge",
      "--functionattrs",
      "--speculative-execution",
      "--loop-versioning-licm",
      "--inject-tli-mappings",
      "--lowerinvoke",
      "--mergeicmps",
      "--rpo-functionattrs",
      "--gvn-hoist",
      "--attributor",
      "--loweratomic",
      "--coro-early",
      "--sccp",
      "-loop-reduce",
      "--cross-dso-cfi",
      "--alignment-from-assumptions",
      "--lower-expect",
      "--lower-matrix-intrinsics",
      "--simple-loop-unswitch",
      "--prune-eh",
      "--irce",
      "--barrier",
      "--instnamer",
      "--sancov",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}