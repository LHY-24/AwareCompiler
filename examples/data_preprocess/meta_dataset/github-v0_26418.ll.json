{
  "program_id": "github-v0_26418.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 27,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 7,
    "oneSuccessor": 25,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 1,
    "BranchCount": 38,
    "returnInt": 6,
    "CriticalCount": 10,
    "NumEdges": 60,
    "const32Bit": 127,
    "const64Bit": 13,
    "numConstZeroes": 78,
    "numConstOnes": 37,
    "UncondBranches": 25,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 24,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 41,
    "NumBitCastInst": 7,
    "NumBrInst": 38,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 90,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 6,
    "NumSExtInst": 19,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 50,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 45,
    "TotalInsts": 319,
    "TotalMemInst": 226,
    "TotalFuncs": 13,
    "ArgsPhi": 2,
    "testUnary": 143
  },
  "baseline_oz_instcount": 321,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--gvn-hoist",
    "--gvn",
    "--instsimplify",
    "--early-cse",
    "--flattencfg",
    "--adce",
    "--elim-avail-extern",
    "--adce",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--bdce",
          "--instsimplify",
          "--pgo-memop-opt",
          "--partial-inliner",
          "--sccp",
          "--hotcoldsplit",
          "--die",
          "--simplifycfg",
          "--infer-address-spaces",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--bdce",
      "--instsimplify",
      "--pgo-memop-opt",
      "--partial-inliner",
      "--sccp",
      "--hotcoldsplit",
      "--die",
      "--simplifycfg",
      "--infer-address-spaces",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}