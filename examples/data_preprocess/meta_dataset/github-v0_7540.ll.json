{
  "program_id": "github-v0_7540.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 5,
    "oneSuccessor": 17,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 35,
    "const32Bit": 54,
    "const64Bit": 52,
    "numConstZeroes": 56,
    "numConstOnes": 32,
    "UncondBranches": 17,
    "binaryConstArg": 32,
    "NumAShrInst": 11,
    "NumAddInst": 3,
    "NumAllocaInst": 11,
    "NumAndInst": 13,
    "BlockMid": 9,
    "BlockLow": 21,
    "NumBitCastInst": 0,
    "NumBrInst": 26,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 15,
    "NumXorInst": 1,
    "NumZExtInst": 21,
    "TotalBlocks": 30,
    "TotalInsts": 221,
    "TotalMemInst": 99,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 91
  },
  "baseline_oz_instcount": 221,
  "knowledge_base_entry": [
    "--loop-deletion",
    "--early-cse-memssa",
    "--flattencfg",
    "--instcombine",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--mergefunc",
    "--aggressive-instcombine",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--reg2mem",
          "--partial-inliner",
          "--argpromotion",
          "--functionattrs",
          "--cross-dso-cfi",
          "--coro-early",
          "--loop-reroll",
          "--sccp",
          "--partially-inline-libcalls",
          "--pgo-memop-opt",
          "--aggressive-instcombine",
          "--reassociate",
          "--constmerge",
          "--loop-simplify",
          "--tailcallelim",
          "--canonicalize-aliases",
          "--loop-guard-widening",
          "--loop-deletion",
          "--rpo-functionattrs",
          "--add-discriminators",
          "--bdce",
          "--attributor",
          "--mem2reg",
          "--ipconstprop",
          "--name-anon-globals",
          "--rewrite-statepoints-for-gc",
          "--jump-threading",
          "--licm",
          "--forceattrs",
          "--loop-unroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--reg2mem",
      "--partial-inliner",
      "--argpromotion",
      "--functionattrs",
      "--cross-dso-cfi",
      "--coro-early",
      "--loop-reroll",
      "--sccp",
      "--partially-inline-libcalls",
      "--pgo-memop-opt",
      "--aggressive-instcombine",
      "--reassociate",
      "--constmerge",
      "--loop-simplify",
      "--tailcallelim",
      "--canonicalize-aliases",
      "--loop-guard-widening",
      "--loop-deletion",
      "--rpo-functionattrs",
      "--add-discriminators",
      "--bdce",
      "--attributor",
      "--mem2reg",
      "--ipconstprop",
      "--name-anon-globals",
      "--rewrite-statepoints-for-gc",
      "--jump-threading",
      "--licm",
      "--forceattrs",
      "--loop-unroll"
    ],
    "performance_vs_Oz": "+7.2%"
  }
}