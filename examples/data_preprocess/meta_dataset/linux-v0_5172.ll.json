{
  "program_id": "linux-v0_5172.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 3,
    "oneSuccessor": 14,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 7,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 28,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 6,
    "CriticalCount": 0,
    "NumEdges": 28,
    "const32Bit": 84,
    "const64Bit": 7,
    "numConstZeroes": 29,
    "numConstOnes": 36,
    "UncondBranches": 14,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 26,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 23,
    "NumBitCastInst": 9,
    "NumBrInst": 21,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 66,
    "NumMulInst": 2,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 43,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 7,
    "TotalBlocks": 28,
    "TotalInsts": 255,
    "TotalMemInst": 174,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 122
  },
  "baseline_oz_instcount": 255,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--simplifycfg",
    "--loop-deletion",
    "--newgvn",
    "--licm",
    "--reassociate",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--strip-debug-declare",
          "--ipconstprop",
          "--licm",
          "--reg2mem",
          "--reassociate",
          "--jump-threading",
          "--sink",
          "--loop-predication",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--strip-debug-declare",
      "--ipconstprop",
      "--licm",
      "--reg2mem",
      "--reassociate",
      "--jump-threading",
      "--sink",
      "--loop-predication",
      "--strip"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}