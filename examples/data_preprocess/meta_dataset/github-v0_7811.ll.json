{
  "program_id": "github-v0_7811.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 4,
    "oneSuccessor": 14,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 30,
    "const32Bit": 31,
    "const64Bit": 57,
    "numConstZeroes": 54,
    "numConstOnes": 27,
    "UncondBranches": 14,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 21,
    "NumBitCastInst": 12,
    "NumBrInst": 22,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 43,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 19,
    "TotalBlocks": 26,
    "TotalInsts": 210,
    "TotalMemInst": 129,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 96
  },
  "baseline_oz_instcount": 210,
  "knowledge_base_entry": [
    "--loop-sink",
    "--gvn-hoist",
    "--bdce",
    "--aggressive-instcombine",
    "--gvn",
    "--lower-expect",
    "--dse",
    "--loop-simplifycfg",
    "--licm",
    "--aggressive-instcombine",
    "--lower-expect",
    "--load-store-vectorizer",
    "--reassociate",
    "--sccp",
    "--sroa",
    "--jump-threading",
    "--nary-reassociate",
    "--sroa",
    "--globalopt",
    "--correlated-propagation",
    "--early-cse",
    "--aggressive-instcombine",
    "--instsimplify",
    "--loop-reroll",
    "--indvars",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--licm",
    "--aggressive-instcombine",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--lowerinvoke",
          "--memcpyopt",
          "--globalopt",
          "--coro-cleanup",
          "--early-cse-memssa",
          "--loweratomic",
          "--loop-idiom",
          "--instcombine",
          "--simplifycfg",
          "--loop-sink",
          "--aggressive-instcombine",
          "--lower-constant-intrinsics",
          "--partially-inline-libcalls",
          "--gvn",
          "--mergereturn",
          "--hotcoldsplit",
          "--sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--lowerinvoke",
      "--memcpyopt",
      "--globalopt",
      "--coro-cleanup",
      "--early-cse-memssa",
      "--loweratomic",
      "--loop-idiom",
      "--instcombine",
      "--simplifycfg",
      "--loop-sink",
      "--aggressive-instcombine",
      "--lower-constant-intrinsics",
      "--partially-inline-libcalls",
      "--gvn",
      "--mergereturn",
      "--hotcoldsplit",
      "--sink"
    ],
    "performance_vs_Oz": "+4.3%"
  }
}