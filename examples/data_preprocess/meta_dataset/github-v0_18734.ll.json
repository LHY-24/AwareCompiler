{
  "program_id": "github-v0_18734.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 35,
    "const64Bit": 54,
    "numConstZeroes": 55,
    "numConstOnes": 23,
    "UncondBranches": 15,
    "binaryConstArg": 16,
    "NumAShrInst": 4,
    "NumAddInst": 4,
    "NumAllocaInst": 12,
    "NumAndInst": 4,
    "BlockMid": 7,
    "BlockLow": 20,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 8,
    "NumLShrInst": 2,
    "NumLoadInst": 52,
    "NumMulInst": 0,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 15,
    "NumXorInst": 0,
    "NumZExtInst": 38,
    "TotalBlocks": 27,
    "TotalInsts": 245,
    "TotalMemInst": 127,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 123
  },
  "baseline_oz_instcount": 245,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--instsimplify",
    "--instcombine",
    "--reassociate",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--early-cse-memssa",
    "--dse",
    "--ipsccp",
    "--correlated-propagation",
    "--globalopt",
    "--jump-threading",
    "--elim-avail-extern",
    "--instsimplify",
    "--slp-vectorizer",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--separate-const-offset-from-gep",
          "--aggressive-instcombine",
          "--inferattrs",
          "--functionattrs",
          "--instnamer",
          "--coro-cleanup",
          "--break-crit-edges",
          "--add-discriminators",
          "--partially-inline-libcalls",
          "--loop-sink",
          "--instcombine",
          "--float2int",
          "--rpo-functionattrs",
          "--loop-simplifycfg",
          "--always-inline",
          "--sccp",
          "--dse",
          "--libcalls-shrinkwrap",
          "--gvn-hoist",
          "--gvn",
          "--coro-split",
          "--globalopt",
          "--jump-threading",
          "--lower-matrix-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--separate-const-offset-from-gep",
      "--aggressive-instcombine",
      "--inferattrs",
      "--functionattrs",
      "--instnamer",
      "--coro-cleanup",
      "--break-crit-edges",
      "--add-discriminators",
      "--partially-inline-libcalls",
      "--loop-sink",
      "--instcombine",
      "--float2int",
      "--rpo-functionattrs",
      "--loop-simplifycfg",
      "--always-inline",
      "--sccp",
      "--dse",
      "--libcalls-shrinkwrap",
      "--gvn-hoist",
      "--gvn",
      "--coro-split",
      "--globalopt",
      "--jump-threading",
      "--lower-matrix-intrinsics"
    ],
    "performance_vs_Oz": "+9.4%"
  }
}