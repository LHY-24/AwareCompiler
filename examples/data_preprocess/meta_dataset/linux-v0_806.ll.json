{
  "program_id": "linux-v0_806.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 67,
    "onePredOneSuc": 53,
    "onePredTwoSuc": 12,
    "oneSuccessor": 58,
    "twoPred": 11,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 24,
    "morePreds": 7,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 118,
    "BeginPhi": 1,
    "BranchCount": 82,
    "returnInt": 25,
    "CriticalCount": 8,
    "NumEdges": 123,
    "const32Bit": 288,
    "const64Bit": 13,
    "numConstZeroes": 108,
    "numConstOnes": 115,
    "UncondBranches": 58,
    "binaryConstArg": 38,
    "NumAShrInst": 3,
    "NumAddInst": 5,
    "NumAllocaInst": 88,
    "NumAndInst": 10,
    "BlockMid": 18,
    "BlockLow": 101,
    "NumBitCastInst": 22,
    "NumBrInst": 82,
    "NumCallInst": 60,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 33,
    "NumLShrInst": 2,
    "NumLoadInst": 253,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 34,
    "NumSExtInst": 9,
    "NumSelectInst": 1,
    "NumShlInst": 3,
    "NumStoreInst": 143,
    "NumSubInst": 15,
    "NumTruncInst": 20,
    "NumXorInst": 17,
    "NumZExtInst": 33,
    "TotalBlocks": 119,
    "TotalInsts": 920,
    "TotalMemInst": 612,
    "TotalFuncs": 43,
    "ArgsPhi": 2,
    "testUnary": 437
  },
  "baseline_oz_instcount": 917,
  "knowledge_base_entry": [
    "--ipsccp",
    "--dce",
    "--die",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--bdce",
    "--aggressive-instcombine",
    "--inline",
    "--early-cse",
    "--nary-reassociate",
    "--loop-reroll",
    "--mergefunc",
    "--globalopt",
    "--globaldce",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--mem2reg",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--post-inline-ee-instrument",
          "--cross-dso-cfi",
          "--globalopt",
          "--loop-vectorize",
          "--slp-vectorizer",
          "--constmerge",
          "--ipconstprop",
          "-loop-reduce",
          "--mergeicmps",
          "--loop-simplifycfg",
          "--barrier",
          "--lower-matrix-intrinsics",
          "--loop-unroll-and-jam",
          "--gvn-hoist",
          "--die",
          "--aggressive-instcombine",
          "--scalarizer",
          "--lower-constant-intrinsics",
          "--coro-split",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--post-inline-ee-instrument",
      "--cross-dso-cfi",
      "--globalopt",
      "--loop-vectorize",
      "--slp-vectorizer",
      "--constmerge",
      "--ipconstprop",
      "-loop-reduce",
      "--mergeicmps",
      "--loop-simplifycfg",
      "--barrier",
      "--lower-matrix-intrinsics",
      "--loop-unroll-and-jam",
      "--gvn-hoist",
      "--die",
      "--aggressive-instcombine",
      "--scalarizer",
      "--lower-constant-intrinsics",
      "--coro-split",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}