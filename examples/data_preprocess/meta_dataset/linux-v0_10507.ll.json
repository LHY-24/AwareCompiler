{
  "program_id": "linux-v0_10507.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 43,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 7,
    "oneSuccessor": 37,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 14,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 67,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 9,
    "CriticalCount": 7,
    "NumEdges": 75,
    "const32Bit": 217,
    "const64Bit": 10,
    "numConstZeroes": 80,
    "numConstOnes": 98,
    "UncondBranches": 37,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 83,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 59,
    "NumBitCastInst": 40,
    "NumBrInst": 51,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 49,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 150,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 91,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 67,
    "TotalInsts": 556,
    "TotalMemInst": 413,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 288
  },
  "baseline_oz_instcount": 556,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--licm",
    "--bdce",
    "--lower-expect",
    "--correlated-propagation",
    "--instcombine",
    "--jump-threading",
    "--nary-reassociate",
    "--indvars",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--strip",
          "--dce",
          "--functionattrs",
          "--tailcallelim",
          "--gvn-hoist",
          "--callsite-splitting",
          "--loop-unswitch",
          "--loop-fusion",
          "--newgvn",
          "--flattencfg",
          "--indvars",
          "--memcpyopt",
          "--instcombine",
          "--always-inline",
          "--insert-gcov-profiling",
          "--load-store-vectorizer",
          "--infer-address-spaces",
          "--loop-deletion",
          "--mem2reg",
          "--mergefunc",
          "--lower-constant-intrinsics",
          "--early-cse",
          "--called-value-propagation",
          "--lower-expect",
          "--loop-data-prefetch",
          "--irce",
          "--pgo-memop-opt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--strip",
      "--dce",
      "--functionattrs",
      "--tailcallelim",
      "--gvn-hoist",
      "--callsite-splitting",
      "--loop-unswitch",
      "--loop-fusion",
      "--newgvn",
      "--flattencfg",
      "--indvars",
      "--memcpyopt",
      "--instcombine",
      "--always-inline",
      "--insert-gcov-profiling",
      "--load-store-vectorizer",
      "--infer-address-spaces",
      "--loop-deletion",
      "--mem2reg",
      "--mergefunc",
      "--lower-constant-intrinsics",
      "--early-cse",
      "--called-value-propagation",
      "--lower-expect",
      "--loop-data-prefetch",
      "--irce",
      "--pgo-memop-opt"
    ],
    "performance_vs_Oz": "+3.6%"
  }
}