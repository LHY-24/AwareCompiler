{
  "program_id": "linux-v0_4799.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 39,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 8,
    "oneSuccessor": 37,
    "twoPred": 17,
    "twoPredOneSuc": 6,
    "twoEach": 10,
    "twoSuccessor": 20,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 79,
    "BeginPhi": 0,
    "BranchCount": 57,
    "returnInt": 8,
    "CriticalCount": 10,
    "NumEdges": 80,
    "const32Bit": 322,
    "const64Bit": 25,
    "numConstZeroes": 150,
    "numConstOnes": 129,
    "UncondBranches": 37,
    "binaryConstArg": 41,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 82,
    "NumAndInst": 10,
    "BlockMid": 18,
    "BlockLow": 61,
    "NumBitCastInst": 17,
    "NumBrInst": 57,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 103,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 225,
    "NumMulInst": 4,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 11,
    "NumSelectInst": 1,
    "NumShlInst": 11,
    "NumStoreInst": 120,
    "NumSubInst": 3,
    "NumTruncInst": 16,
    "NumXorInst": 0,
    "NumZExtInst": 30,
    "TotalBlocks": 79,
    "TotalInsts": 797,
    "TotalMemInst": 570,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 382
  },
  "baseline_oz_instcount": 798,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--simplifycfg",
    "--instsimplify",
    "--globalopt",
    "--early-cse",
    "--instcombine",
    "--gvn",
    "--reassociate",
    "--early-cse",
    "--ipsccp",
    "--gvn-hoist",
    "--gvn-hoist",
    "--ipsccp",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-guard-widening",
          "--loop-interchange",
          "--load-store-vectorizer",
          "--insert-gcov-profiling",
          "--loop-sink",
          "--aggressive-instcombine",
          "--elim-avail-extern",
          "--libcalls-shrinkwrap",
          "--lower-widenable-condition",
          "--loop-rotate",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-guard-widening",
      "--loop-interchange",
      "--load-store-vectorizer",
      "--insert-gcov-profiling",
      "--loop-sink",
      "--aggressive-instcombine",
      "--elim-avail-extern",
      "--libcalls-shrinkwrap",
      "--lower-widenable-condition",
      "--loop-rotate",
      "--inline"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}