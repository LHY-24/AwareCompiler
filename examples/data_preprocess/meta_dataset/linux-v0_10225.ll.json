{
  "program_id": "linux-v0_10225.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 12,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 12,
    "twoPred": 9,
    "twoPredOneSuc": 1,
    "twoEach": 6,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 3,
    "BranchCount": 21,
    "returnInt": 4,
    "CriticalCount": 6,
    "NumEdges": 30,
    "const32Bit": 51,
    "const64Bit": 16,
    "numConstZeroes": 25,
    "numConstOnes": 11,
    "UncondBranches": 12,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 11,
    "NumAndInst": 3,
    "BlockMid": 1,
    "BlockLow": 24,
    "NumBitCastInst": 2,
    "NumBrInst": 21,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 3,
    "NumRetInst": 4,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 15,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 25,
    "TotalInsts": 152,
    "TotalMemInst": 91,
    "TotalFuncs": 5,
    "ArgsPhi": 6,
    "testUnary": 57
  },
  "baseline_oz_instcount": 152,
  "knowledge_base_entry": [
    "--sccp",
    "--reassociate",
    "--jump-threading",
    "--simplifycfg",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--dse",
    "--inline",
    "--prune-eh",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--gvn",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--lower-expect",
          "--adce",
          "--mergefunc",
          "--inline",
          "--scalarizer",
          "--dse",
          "--aggressive-instcombine",
          "--lower-matrix-intrinsics",
          "--float2int",
          "--loop-data-prefetch",
          "--indvars",
          "--newgvn",
          "--loop-simplify",
          "--nary-reassociate",
          "--argpromotion",
          "--loop-deletion",
          "--loop-simplifycfg",
          "--mergereturn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--lower-expect",
      "--adce",
      "--mergefunc",
      "--inline",
      "--scalarizer",
      "--dse",
      "--aggressive-instcombine",
      "--lower-matrix-intrinsics",
      "--float2int",
      "--loop-data-prefetch",
      "--indvars",
      "--newgvn",
      "--loop-simplify",
      "--nary-reassociate",
      "--argpromotion",
      "--loop-deletion",
      "--loop-simplifycfg",
      "--mergereturn"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}