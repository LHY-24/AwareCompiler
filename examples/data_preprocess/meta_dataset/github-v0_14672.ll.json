{
  "program_id": "github-v0_14672.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 0,
    "BranchCount": 5,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 7,
    "const32Bit": 4,
    "const64Bit": 0,
    "numConstZeroes": 1,
    "numConstOnes": 2,
    "UncondBranches": 3,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 1,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 6,
    "NumBitCastInst": 0,
    "NumBrInst": 5,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 4,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 3,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 6,
    "TotalInsts": 19,
    "TotalMemInst": 11,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 5
  },
  "baseline_oz_instcount": 20,
  "knowledge_base_entry": [
    "--early-cse",
    "--elim-avail-extern",
    "--loop-rotate",
    "--early-cse-memssa",
    "--mergefunc",
    "--early-cse",
    "--mem2reg",
    "--newgvn",
    "--loop-reroll",
    "--gvn",
    "-loop-reduce",
    "--reassociate",
    "--licm",
    "--inline",
    "--ipsccp",
    "--loop-deletion",
    "--instcombine",
    "--mergefunc",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--irce",
          "--partial-inliner",
          "--consthoist",
          "--adce",
          "--sroa",
          "--elim-avail-extern",
          "--rewrite-statepoints-for-gc",
          "--constprop",
          "--slsr",
          "--loop-predication",
          "--simplifycfg",
          "--lower-matrix-intrinsics",
          "--licm",
          "--lower-widenable-condition",
          "--lower-expect",
          "--name-anon-globals",
          "--mldst-motion",
          "--loop-versioning",
          "--lcssa",
          "--strip-debug-declare",
          "--globaldce",
          "--libcalls-shrinkwrap"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--irce",
      "--partial-inliner",
      "--consthoist",
      "--adce",
      "--sroa",
      "--elim-avail-extern",
      "--rewrite-statepoints-for-gc",
      "--constprop",
      "--slsr",
      "--loop-predication",
      "--simplifycfg",
      "--lower-matrix-intrinsics",
      "--licm",
      "--lower-widenable-condition",
      "--lower-expect",
      "--name-anon-globals",
      "--mldst-motion",
      "--loop-versioning",
      "--lcssa",
      "--strip-debug-declare",
      "--globaldce",
      "--libcalls-shrinkwrap"
    ],
    "performance_vs_Oz": "+5.0%"
  }
}