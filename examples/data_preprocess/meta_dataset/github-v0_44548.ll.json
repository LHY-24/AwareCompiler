{
  "program_id": "github-v0_44548.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 1,
    "oneSuccessor": 16,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 28,
    "const32Bit": 58,
    "const64Bit": 2,
    "numConstZeroes": 17,
    "numConstOnes": 35,
    "UncondBranches": 16,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 26,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 20,
    "NumBitCastInst": 3,
    "NumBrInst": 22,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 48,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 39,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 25,
    "TotalInsts": 175,
    "TotalMemInst": 132,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 79
  },
  "baseline_oz_instcount": 176,
  "knowledge_base_entry": [
    "--instcombine",
    "--adce",
    "--slp-vectorizer",
    "--instsimplify",
    "--inline",
    "--die",
    "--gvn",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--bdce",
    "--early-cse-memssa",
    "--dce",
    "--elim-avail-extern",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--argpromotion",
          "--mergefunc",
          "--mem2reg",
          "--lowerswitch",
          "--sroa",
          "--lower-guard-intrinsic",
          "--callsite-splitting",
          "--lcssa",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--argpromotion",
      "--mergefunc",
      "--mem2reg",
      "--lowerswitch",
      "--sroa",
      "--lower-guard-intrinsic",
      "--callsite-splitting",
      "--lcssa",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}