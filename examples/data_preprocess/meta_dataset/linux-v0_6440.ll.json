{
  "program_id": "linux-v0_6440.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 8,
    "oneSuccessor": 37,
    "twoPred": 10,
    "twoPredOneSuc": 5,
    "twoEach": 0,
    "twoSuccessor": 16,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 87,
    "BeginPhi": 0,
    "BranchCount": 52,
    "returnInt": 49,
    "CriticalCount": 8,
    "NumEdges": 82,
    "const32Bit": 327,
    "const64Bit": 4,
    "numConstZeroes": 142,
    "numConstOnes": 114,
    "UncondBranches": 37,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 70,
    "NumAndInst": 0,
    "BlockMid": 12,
    "BlockLow": 75,
    "NumBitCastInst": 14,
    "NumBrInst": 52,
    "NumCallInst": 89,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 189,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 31,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 86,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 87,
    "TotalInsts": 634,
    "TotalMemInst": 504,
    "TotalFuncs": 61,
    "ArgsPhi": 0,
    "testUnary": 283
  },
  "baseline_oz_instcount": 516,
  "knowledge_base_entry": [
    "--jump-threading",
    "--early-cse",
    "--slp-vectorizer",
    "--dce",
    "--simplifycfg",
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--inline",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--flattencfg",
    "--load-store-vectorizer",
    "--reassociate",
    "--ipsccp",
    "--globaldce",
    "--ipsccp",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--div-rem-pairs",
          "--inject-tli-mappings",
          "--speculative-execution",
          "--mldst-motion",
          "--instnamer",
          "--ipsccp",
          "--loop-data-prefetch",
          "--loop-unroll-and-jam",
          "--ipconstprop",
          "--dce",
          "--simplifycfg",
          "--loop-rotate",
          "--instcombine",
          "-loop-reduce",
          "--constprop",
          "--correlated-propagation",
          "--ee-instrument",
          "--globaldce",
          "--loop-versioning-licm",
          "--redundant-dbg-inst-elim",
          "--newgvn",
          "--irce",
          "--called-value-propagation",
          "--lower-guard-intrinsic",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--div-rem-pairs",
      "--inject-tli-mappings",
      "--speculative-execution",
      "--mldst-motion",
      "--instnamer",
      "--ipsccp",
      "--loop-data-prefetch",
      "--loop-unroll-and-jam",
      "--ipconstprop",
      "--dce",
      "--simplifycfg",
      "--loop-rotate",
      "--instcombine",
      "-loop-reduce",
      "--constprop",
      "--correlated-propagation",
      "--ee-instrument",
      "--globaldce",
      "--loop-versioning-licm",
      "--redundant-dbg-inst-elim",
      "--newgvn",
      "--irce",
      "--called-value-propagation",
      "--lower-guard-intrinsic",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}