{
  "program_id": "linux-v0_9008.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 23,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 3,
    "oneSuccessor": 22,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 9,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 1,
    "BranchCount": 31,
    "returnInt": 9,
    "CriticalCount": 4,
    "NumEdges": 49,
    "const32Bit": 173,
    "const64Bit": 18,
    "numConstZeroes": 82,
    "numConstOnes": 39,
    "UncondBranches": 22,
    "binaryConstArg": 63,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 32,
    "NumAndInst": 40,
    "BlockMid": 7,
    "BlockLow": 31,
    "NumBitCastInst": 78,
    "NumBrInst": 31,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 56,
    "NumICmpInst": 9,
    "NumLShrInst": 10,
    "NumLoadInst": 167,
    "NumMulInst": 0,
    "NumOrInst": 12,
    "NumPHIInst": 1,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 67,
    "NumSubInst": 2,
    "NumTruncInst": 27,
    "NumXorInst": 1,
    "NumZExtInst": 9,
    "TotalBlocks": 38,
    "TotalInsts": 584,
    "TotalMemInst": 347,
    "TotalFuncs": 10,
    "ArgsPhi": 2,
    "testUnary": 316
  },
  "baseline_oz_instcount": 584,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--indvars",
    "-loop-reduce",
    "--sroa",
    "--mem2reg",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--inline",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--die",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--indvars",
          "--aggressive-instcombine",
          "--inline",
          "--coro-split",
          "--gvn-hoist",
          "--early-cse",
          "--name-anon-globals",
          "--ipconstprop",
          "--partial-inliner",
          "--adce",
          "--loop-unroll-and-jam",
          "--attributor",
          "--lower-guard-intrinsic",
          "--deadargelim",
          "--mergeicmps",
          "--insert-gcov-profiling",
          "--elim-avail-extern",
          "--forceattrs",
          "--sccp",
          "--loweratomic",
          "--mem2reg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--indvars",
      "--aggressive-instcombine",
      "--inline",
      "--coro-split",
      "--gvn-hoist",
      "--early-cse",
      "--name-anon-globals",
      "--ipconstprop",
      "--partial-inliner",
      "--adce",
      "--loop-unroll-and-jam",
      "--attributor",
      "--lower-guard-intrinsic",
      "--deadargelim",
      "--mergeicmps",
      "--insert-gcov-profiling",
      "--elim-avail-extern",
      "--forceattrs",
      "--sccp",
      "--loweratomic",
      "--mem2reg"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}