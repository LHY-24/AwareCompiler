{
  "program_id": "linux-v0_725.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 80,
    "onePredOneSuc": 56,
    "onePredTwoSuc": 18,
    "oneSuccessor": 63,
    "twoPred": 19,
    "twoPredOneSuc": 3,
    "twoEach": 8,
    "twoSuccessor": 41,
    "morePreds": 9,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 130,
    "BeginPhi": 0,
    "BranchCount": 104,
    "returnInt": 59,
    "CriticalCount": 7,
    "NumEdges": 145,
    "const32Bit": 228,
    "const64Bit": 28,
    "numConstZeroes": 98,
    "numConstOnes": 114,
    "UncondBranches": 63,
    "binaryConstArg": 9,
    "NumAShrInst": 1,
    "NumAddInst": 8,
    "NumAllocaInst": 107,
    "NumAndInst": 2,
    "BlockMid": 9,
    "BlockLow": 121,
    "NumBitCastInst": 4,
    "NumBrInst": 104,
    "NumCallInst": 86,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 43,
    "NumLShrInst": 0,
    "NumLoadInst": 161,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 127,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 130,
    "TotalInsts": 713,
    "TotalMemInst": 514,
    "TotalFuncs": 49,
    "ArgsPhi": 0,
    "testUnary": 281
  },
  "baseline_oz_instcount": 714,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--dce",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--lower-expect",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--guard-widening",
          "--name-anon-globals",
          "--coro-early",
          "--aggressive-instcombine",
          "--correlated-propagation",
          "--coro-split",
          "--lcssa",
          "--strip-nondebug",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--guard-widening",
      "--name-anon-globals",
      "--coro-early",
      "--aggressive-instcombine",
      "--correlated-propagation",
      "--coro-split",
      "--lcssa",
      "--strip-nondebug",
      "--globalopt"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}