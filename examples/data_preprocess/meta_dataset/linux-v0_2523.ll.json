{
  "program_id": "linux-v0_2523.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 17,
    "oneSuccessor": 41,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 20,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 0,
    "BranchCount": 61,
    "returnInt": 28,
    "CriticalCount": 1,
    "NumEdges": 81,
    "const32Bit": 243,
    "const64Bit": 34,
    "numConstZeroes": 99,
    "numConstOnes": 84,
    "UncondBranches": 41,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 72,
    "NumAndInst": 6,
    "BlockMid": 11,
    "BlockLow": 70,
    "NumBitCastInst": 32,
    "NumBrInst": 61,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 22,
    "NumLShrInst": 3,
    "NumLoadInst": 163,
    "NumMulInst": 7,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 125,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 81,
    "TotalInsts": 636,
    "TotalMemInst": 462,
    "TotalFuncs": 38,
    "ArgsPhi": 0,
    "testUnary": 272
  },
  "baseline_oz_instcount": 636,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--instcombine",
    "--mldst-motion",
    "--elim-avail-extern",
    "--ipsccp",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--ipsccp",
          "--strip",
          "--callsite-splitting",
          "--loop-unswitch",
          "--loop-reroll",
          "--loweratomic",
          "--barrier",
          "--partial-inliner",
          "--loop-versioning",
          "--mergereturn",
          "--lowerinvoke",
          "--dce",
          "--name-anon-globals",
          "--rewrite-statepoints-for-gc",
          "--deadargelim",
          "--canonicalize-aliases",
          "--loop-fusion",
          "--loop-interchange",
          "--mergefunc",
          "--called-value-propagation",
          "--alignment-from-assumptions",
          "--irce",
          "--tailcallelim",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--ipsccp",
      "--strip",
      "--callsite-splitting",
      "--loop-unswitch",
      "--loop-reroll",
      "--loweratomic",
      "--barrier",
      "--partial-inliner",
      "--loop-versioning",
      "--mergereturn",
      "--lowerinvoke",
      "--dce",
      "--name-anon-globals",
      "--rewrite-statepoints-for-gc",
      "--deadargelim",
      "--canonicalize-aliases",
      "--loop-fusion",
      "--loop-interchange",
      "--mergefunc",
      "--called-value-propagation",
      "--alignment-from-assumptions",
      "--irce",
      "--tailcallelim",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}