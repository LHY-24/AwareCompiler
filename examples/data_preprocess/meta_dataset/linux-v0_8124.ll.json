{
  "program_id": "linux-v0_8124.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 79,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 20,
    "oneSuccessor": 81,
    "twoPred": 39,
    "twoPredOneSuc": 19,
    "twoEach": 10,
    "twoSuccessor": 40,
    "morePreds": 7,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 153,
    "BeginPhi": 1,
    "BranchCount": 121,
    "returnInt": 42,
    "CriticalCount": 34,
    "NumEdges": 183,
    "const32Bit": 407,
    "const64Bit": 19,
    "numConstZeroes": 183,
    "numConstOnes": 124,
    "UncondBranches": 81,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 81,
    "NumAndInst": 7,
    "BlockMid": 10,
    "BlockLow": 144,
    "NumBitCastInst": 25,
    "NumBrInst": 121,
    "NumCallInst": 99,
    "NumGetElementPtrInst": 118,
    "NumICmpInst": 37,
    "NumLShrInst": 1,
    "NumLoadInst": 318,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 29,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 127,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 154,
    "TotalInsts": 981,
    "TotalMemInst": 743,
    "TotalFuncs": 61,
    "ArgsPhi": 2,
    "testUnary": 434
  },
  "baseline_oz_instcount": 981,
  "knowledge_base_entry": [
    "--instsimplify",
    "--sroa",
    "--ipsccp",
    "--mergefunc",
    "--adce",
    "--newgvn",
    "--mem2reg",
    "--dse",
    "--sroa",
    "--dce",
    "--sccp",
    "--globalopt",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--post-inline-ee-instrument",
          "--strip-debug-declare",
          "--loop-sink",
          "--die",
          "--div-rem-pairs",
          "--loop-vectorize",
          "--loop-data-prefetch",
          "--forceattrs",
          "--ipsccp",
          "--loop-unswitch",
          "--strip",
          "--hotcoldsplit",
          "--scalarizer",
          "--sancov",
          "--add-discriminators",
          "--ee-instrument",
          "--lower-constant-intrinsics",
          "--mergefunc",
          "--elim-avail-extern",
          "--libcalls-shrinkwrap",
          "--canonicalize-aliases",
          "--coro-early"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--post-inline-ee-instrument",
      "--strip-debug-declare",
      "--loop-sink",
      "--die",
      "--div-rem-pairs",
      "--loop-vectorize",
      "--loop-data-prefetch",
      "--forceattrs",
      "--ipsccp",
      "--loop-unswitch",
      "--strip",
      "--hotcoldsplit",
      "--scalarizer",
      "--sancov",
      "--add-discriminators",
      "--ee-instrument",
      "--lower-constant-intrinsics",
      "--mergefunc",
      "--elim-avail-extern",
      "--libcalls-shrinkwrap",
      "--canonicalize-aliases",
      "--coro-early"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}