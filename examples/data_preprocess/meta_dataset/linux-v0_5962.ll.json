{
  "program_id": "linux-v0_5962.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 10,
    "oneSuccessor": 28,
    "twoPred": 13,
    "twoPredOneSuc": 6,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 0,
    "BranchCount": 46,
    "returnInt": 28,
    "CriticalCount": 7,
    "NumEdges": 64,
    "const32Bit": 220,
    "const64Bit": 31,
    "numConstZeroes": 84,
    "numConstOnes": 98,
    "UncondBranches": 28,
    "binaryConstArg": 17,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 79,
    "NumAndInst": 9,
    "BlockMid": 12,
    "BlockLow": 59,
    "NumBitCastInst": 12,
    "NumBrInst": 46,
    "NumCallInst": 58,
    "NumGetElementPtrInst": 53,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 128,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 13,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 115,
    "NumSubInst": 0,
    "NumTruncInst": 11,
    "NumXorInst": 4,
    "NumZExtInst": 26,
    "TotalBlocks": 71,
    "TotalInsts": 614,
    "TotalMemInst": 433,
    "TotalFuncs": 41,
    "ArgsPhi": 0,
    "testUnary": 273
  },
  "baseline_oz_instcount": 615,
  "knowledge_base_entry": [
    "--instcombine",
    "--gvn",
    "--elim-avail-extern",
    "--early-cse",
    "--aggressive-instcombine",
    "--flattencfg",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--mldst-motion",
    "--newgvn",
    "--newgvn",
    "--dse",
    "--mergefunc",
    "--slp-vectorizer",
    "--inline",
    "--ipsccp",
    "--reassociate",
    "--sccp",
    "--bdce",
    "--lower-constant-intrinsics",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn",
          "--simplifycfg",
          "--early-cse",
          "--early-cse-memssa",
          "--load-store-vectorizer",
          "--globalopt",
          "--aggressive-instcombine",
          "--attributor",
          "--gvn-hoist",
          "--dce",
          "--inject-tli-mappings",
          "--loop-unroll-and-jam",
          "--inline",
          "--lcssa",
          "--coro-split",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn",
      "--simplifycfg",
      "--early-cse",
      "--early-cse-memssa",
      "--load-store-vectorizer",
      "--globalopt",
      "--aggressive-instcombine",
      "--attributor",
      "--gvn-hoist",
      "--dce",
      "--inject-tli-mappings",
      "--loop-unroll-and-jam",
      "--inline",
      "--lcssa",
      "--coro-split",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}