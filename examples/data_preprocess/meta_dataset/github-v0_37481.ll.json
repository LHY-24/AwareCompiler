{
  "program_id": "github-v0_37481.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 52,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 19,
    "oneSuccessor": 51,
    "twoPred": 21,
    "twoPredOneSuc": 18,
    "twoEach": 2,
    "twoSuccessor": 23,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 75,
    "BeginPhi": 1,
    "BranchCount": 74,
    "returnInt": 30,
    "CriticalCount": 18,
    "NumEdges": 97,
    "const32Bit": 49,
    "const64Bit": 3,
    "numConstZeroes": 25,
    "numConstOnes": 28,
    "UncondBranches": 51,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 74,
    "NumBitCastInst": 0,
    "NumBrInst": 74,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 32,
    "NumLShrInst": 0,
    "NumLoadInst": 79,
    "NumMulInst": 0,
    "NumOrInst": 11,
    "NumPHIInst": 1,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 0,
    "NumTruncInst": 25,
    "NumXorInst": 0,
    "NumZExtInst": 34,
    "TotalBlocks": 76,
    "TotalInsts": 336,
    "TotalMemInst": 155,
    "TotalFuncs": 11,
    "ArgsPhi": 2,
    "testUnary": 148
  },
  "baseline_oz_instcount": 337,
  "knowledge_base_entry": [
    "--loweratomic",
    "--early-cse",
    "--correlated-propagation",
    "--reassociate",
    "--sccp",
    "--gvn",
    "--flattencfg",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--instcombine",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalopt",
          "--callsite-splitting",
          "--lower-matrix-intrinsics",
          "--constprop",
          "--load-store-vectorizer",
          "--partial-inliner",
          "--separate-const-offset-from-gep",
          "--post-inline-ee-instrument",
          "--lcssa",
          "--lower-guard-intrinsic",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalopt",
      "--callsite-splitting",
      "--lower-matrix-intrinsics",
      "--constprop",
      "--load-store-vectorizer",
      "--partial-inliner",
      "--separate-const-offset-from-gep",
      "--post-inline-ee-instrument",
      "--lcssa",
      "--lower-guard-intrinsic",
      "--gvn"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}