{
  "program_id": "github-v0_17930.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 5,
    "oneSuccessor": 20,
    "twoPred": 9,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 38,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 0,
    "CriticalCount": 9,
    "NumEdges": 46,
    "const32Bit": 37,
    "const64Bit": 3,
    "numConstZeroes": 8,
    "numConstOnes": 25,
    "UncondBranches": 20,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 22,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 33,
    "NumBitCastInst": 6,
    "NumBrInst": 33,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 99,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 28,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 40,
    "NumSubInst": 7,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 38,
    "TotalInsts": 307,
    "TotalMemInst": 186,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 168
  },
  "baseline_oz_instcount": 309,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--jump-threading",
    "--aggressive-instcombine",
    "--dse",
    "--instcombine",
    "--die",
    "--slp-vectorizer",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--gvn-hoist",
          "--instsimplify",
          "--rpo-functionattrs",
          "--canonicalize-aliases",
          "--insert-gcov-profiling",
          "--mldst-motion",
          "--infer-address-spaces",
          "--attributor",
          "--lcssa",
          "--partially-inline-libcalls",
          "--scalarizer",
          "--pgo-memop-opt",
          "--slsr",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--gvn-hoist",
      "--instsimplify",
      "--rpo-functionattrs",
      "--canonicalize-aliases",
      "--insert-gcov-profiling",
      "--mldst-motion",
      "--infer-address-spaces",
      "--attributor",
      "--lcssa",
      "--partially-inline-libcalls",
      "--scalarizer",
      "--pgo-memop-opt",
      "--slsr",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}