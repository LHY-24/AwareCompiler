{
  "program_id": "github-v0_28826.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 36,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 10,
    "oneSuccessor": 34,
    "twoPred": 15,
    "twoPredOneSuc": 8,
    "twoEach": 6,
    "twoSuccessor": 19,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 0,
    "BranchCount": 53,
    "returnInt": 34,
    "CriticalCount": 8,
    "NumEdges": 72,
    "const32Bit": 352,
    "const64Bit": 10,
    "numConstZeroes": 133,
    "numConstOnes": 101,
    "UncondBranches": 34,
    "binaryConstArg": 70,
    "NumAShrInst": 3,
    "NumAddInst": 9,
    "NumAllocaInst": 68,
    "NumAndInst": 24,
    "BlockMid": 20,
    "BlockLow": 52,
    "NumBitCastInst": 3,
    "NumBrInst": 53,
    "NumCallInst": 76,
    "NumGetElementPtrInst": 101,
    "NumICmpInst": 21,
    "NumLShrInst": 4,
    "NumLoadInst": 311,
    "NumMulInst": 5,
    "NumOrInst": 27,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 18,
    "NumStoreInst": 113,
    "NumSubInst": 0,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 52,
    "TotalBlocks": 72,
    "TotalInsts": 941,
    "TotalMemInst": 669,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 467
  },
  "baseline_oz_instcount": 941,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "-loop-reduce",
    "--early-cse",
    "--aggressive-instcombine",
    "--ipsccp",
    "--sroa",
    "--mergefunc",
    "--globaldce",
    "--ipsccp",
    "--jump-threading",
    "--newgvn",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mldst-motion",
          "--cross-dso-cfi",
          "--lower-guard-intrinsic",
          "--ipsccp",
          "--loop-data-prefetch",
          "--aggressive-instcombine",
          "--lcssa",
          "--early-cse",
          "--sancov",
          "--post-inline-ee-instrument",
          "--canonicalize-aliases",
          "-loop-reduce",
          "--separate-const-offset-from-gep",
          "--pgo-memop-opt",
          "--loop-versioning",
          "--bdce",
          "--mem2reg",
          "--insert-gcov-profiling",
          "--loop-simplifycfg",
          "--infer-address-spaces"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mldst-motion",
      "--cross-dso-cfi",
      "--lower-guard-intrinsic",
      "--ipsccp",
      "--loop-data-prefetch",
      "--aggressive-instcombine",
      "--lcssa",
      "--early-cse",
      "--sancov",
      "--post-inline-ee-instrument",
      "--canonicalize-aliases",
      "-loop-reduce",
      "--separate-const-offset-from-gep",
      "--pgo-memop-opt",
      "--loop-versioning",
      "--bdce",
      "--mem2reg",
      "--insert-gcov-profiling",
      "--loop-simplifycfg",
      "--infer-address-spaces"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}