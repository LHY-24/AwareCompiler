{
  "program_id": "github-v0_29770.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 35,
    "const64Bit": 51,
    "numConstZeroes": 49,
    "numConstOnes": 28,
    "UncondBranches": 13,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 14,
    "NumAndInst": 2,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 12,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 62,
    "NumMulInst": 2,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 27,
    "NumSubInst": 2,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 37,
    "TotalBlocks": 24,
    "TotalInsts": 260,
    "TotalMemInst": 155,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 134
  },
  "baseline_oz_instcount": 260,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--adce",
    "--correlated-propagation",
    "--mergefunc",
    "--flattencfg",
    "--jump-threading",
    "--correlated-propagation",
    "--loop-reroll",
    "--early-cse",
    "--gvn-hoist",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--alignment-from-assumptions",
          "--jump-threading",
          "--loop-simplifycfg",
          "--forceattrs",
          "--newgvn",
          "--argpromotion",
          "--cross-dso-cfi",
          "--bdce",
          "--partial-inliner",
          "--instsimplify",
          "--dse",
          "--globaldce",
          "--insert-gcov-profiling",
          "--barrier",
          "--mergereturn",
          "--loop-reroll",
          "--aggressive-instcombine",
          "--add-discriminators",
          "--licm",
          "--inline",
          "--rewrite-statepoints-for-gc",
          "--sroa",
          "--div-rem-pairs",
          "--float2int",
          "--post-inline-ee-instrument",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--alignment-from-assumptions",
      "--jump-threading",
      "--loop-simplifycfg",
      "--forceattrs",
      "--newgvn",
      "--argpromotion",
      "--cross-dso-cfi",
      "--bdce",
      "--partial-inliner",
      "--instsimplify",
      "--dse",
      "--globaldce",
      "--insert-gcov-profiling",
      "--barrier",
      "--mergereturn",
      "--loop-reroll",
      "--aggressive-instcombine",
      "--add-discriminators",
      "--licm",
      "--inline",
      "--rewrite-statepoints-for-gc",
      "--sroa",
      "--div-rem-pairs",
      "--float2int",
      "--post-inline-ee-instrument",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}