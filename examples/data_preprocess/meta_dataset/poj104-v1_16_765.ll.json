{
  "program_id": "poj104-v1_16_765.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 1,
    "oneSuccessor": 12,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 28,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 24,
    "const32Bit": 35,
    "const64Bit": 14,
    "numConstZeroes": 15,
    "numConstOnes": 17,
    "UncondBranches": 12,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 26,
    "NumBitCastInst": 13,
    "NumBrInst": 18,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 28,
    "TotalInsts": 162,
    "TotalMemInst": 106,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 67
  },
  "baseline_oz_instcount": 68,
  "knowledge_base_entry": [
    "--lower-expect",
    "--loop-simplifycfg",
    "--lower-expect",
    "--elim-avail-extern",
    "--inline",
    "--adce",
    "--inline",
    "--aggressive-instcombine",
    "--dse",
    "--jump-threading",
    "--loop-rotate",
    "--sroa",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--dce",
    "--gvn-hoist",
    "--instsimplify",
    "--newgvn",
    "--elim-avail-extern",
    "--simplifycfg",
    "--dce",
    "--sroa",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--lower-constant-intrinsics",
          "--lower-matrix-intrinsics",
          "--canonicalize-aliases",
          "--argpromotion",
          "--sink",
          "--loop-guard-widening",
          "--loop-versioning",
          "--loop-predication",
          "--cross-dso-cfi",
          "--elim-avail-extern",
          "-loop-reduce",
          "--globalsplit",
          "--loop-unroll",
          "--gvn",
          "--float2int",
          "--alignment-from-assumptions",
          "--aggressive-instcombine",
          "--globalopt",
          "--constprop",
          "--mem2reg",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+22.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--lower-constant-intrinsics",
      "--lower-matrix-intrinsics",
      "--canonicalize-aliases",
      "--argpromotion",
      "--sink",
      "--loop-guard-widening",
      "--loop-versioning",
      "--loop-predication",
      "--cross-dso-cfi",
      "--elim-avail-extern",
      "-loop-reduce",
      "--globalsplit",
      "--loop-unroll",
      "--gvn",
      "--float2int",
      "--alignment-from-assumptions",
      "--aggressive-instcombine",
      "--globalopt",
      "--constprop",
      "--mem2reg",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+22.1%"
  }
}