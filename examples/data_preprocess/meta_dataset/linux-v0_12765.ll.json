{
  "program_id": "linux-v0_12765.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 38,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 11,
    "oneSuccessor": 34,
    "twoPred": 13,
    "twoPredOneSuc": 5,
    "twoEach": 1,
    "twoSuccessor": 20,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 2,
    "BranchCount": 54,
    "returnInt": 26,
    "CriticalCount": 15,
    "NumEdges": 74,
    "const32Bit": 199,
    "const64Bit": 17,
    "numConstZeroes": 74,
    "numConstOnes": 97,
    "UncondBranches": 34,
    "binaryConstArg": 27,
    "NumAShrInst": 1,
    "NumAddInst": 3,
    "NumAllocaInst": 73,
    "NumAndInst": 12,
    "BlockMid": 11,
    "BlockLow": 63,
    "NumBitCastInst": 11,
    "NumBrInst": 54,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 26,
    "NumLShrInst": 2,
    "NumLoadInst": 142,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 20,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 82,
    "NumSubInst": 2,
    "NumTruncInst": 13,
    "NumXorInst": 7,
    "NumZExtInst": 20,
    "TotalBlocks": 74,
    "TotalInsts": 583,
    "TotalMemInst": 390,
    "TotalFuncs": 34,
    "ArgsPhi": 4,
    "testUnary": 276
  },
  "baseline_oz_instcount": 583,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--correlated-propagation",
    "--bdce",
    "--loop-simplifycfg",
    "--early-cse-memssa",
    "--adce",
    "--aggressive-instcombine",
    "--gvn",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--simplifycfg",
    "--adce",
    "--aggressive-instcombine",
    "--inline",
    "--load-store-vectorizer",
    "--lower-expect",
    "--correlated-propagation",
    "--ipsccp",
    "--mergefunc",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--jump-threading",
    "--elim-avail-extern",
    "--instcombine",
    "--reassociate",
    "--jump-threading",
    "--inline",
    "--mem2reg",
    "--dce",
    "--lower-expect",
    "--mergefunc",
    "--adce",
    "--instsimplify",
    "--gvn",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--simplifycfg",
    "--loop-deletion",
    "--newgvn",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--reassociate",
    "--jump-threading",
    "--inline",
    "--load-store-vectorizer",
    "--lower-expect",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--strip-nondebug",
          "--redundant-dbg-inst-elim",
          "--loop-deletion",
          "--lower-widenable-condition",
          "--rpo-functionattrs",
          "--mergereturn",
          "--aggressive-instcombine",
          "--loop-versioning",
          "--always-inline",
          "--correlated-propagation",
          "--infer-address-spaces",
          "--scalarizer",
          "--constmerge",
          "--early-cse-memssa",
          "--loop-idiom",
          "--simple-loop-unswitch",
          "--loop-load-elim",
          "--coro-early",
          "--sroa",
          "--instsimplify",
          "--coro-split",
          "--loop-reroll",
          "--flattencfg",
          "--rewrite-statepoints-for-gc",
          "--lower-matrix-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--strip-nondebug",
      "--redundant-dbg-inst-elim",
      "--loop-deletion",
      "--lower-widenable-condition",
      "--rpo-functionattrs",
      "--mergereturn",
      "--aggressive-instcombine",
      "--loop-versioning",
      "--always-inline",
      "--correlated-propagation",
      "--infer-address-spaces",
      "--scalarizer",
      "--constmerge",
      "--early-cse-memssa",
      "--loop-idiom",
      "--simple-loop-unswitch",
      "--loop-load-elim",
      "--coro-early",
      "--sroa",
      "--instsimplify",
      "--coro-split",
      "--loop-reroll",
      "--flattencfg",
      "--rewrite-statepoints-for-gc",
      "--lower-matrix-intrinsics"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}