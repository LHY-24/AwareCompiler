{
  "program_id": "linux-v0_4344.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 125,
    "onePredOneSuc": 76,
    "onePredTwoSuc": 49,
    "oneSuccessor": 92,
    "twoPred": 23,
    "twoPredOneSuc": 10,
    "twoEach": 9,
    "twoSuccessor": 64,
    "morePreds": 8,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 164,
    "BeginPhi": 1,
    "BranchCount": 156,
    "returnInt": 54,
    "CriticalCount": 18,
    "NumEdges": 220,
    "const32Bit": 190,
    "const64Bit": 5,
    "numConstZeroes": 77,
    "numConstOnes": 79,
    "UncondBranches": 92,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 61,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 157,
    "NumBitCastInst": 0,
    "NumBrInst": 156,
    "NumCallInst": 67,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 67,
    "NumLShrInst": 0,
    "NumLoadInst": 302,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 9,
    "NumSExtInst": 18,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 163,
    "NumSubInst": 17,
    "NumTruncInst": 1,
    "NumXorInst": 1,
    "NumZExtInst": 22,
    "TotalBlocks": 165,
    "TotalInsts": 936,
    "TotalMemInst": 624,
    "TotalFuncs": 33,
    "ArgsPhi": 2,
    "testUnary": 404
  },
  "baseline_oz_instcount": 939,
  "knowledge_base_entry": [
    "--dce",
    "--inline",
    "--simplifycfg",
    "--mldst-motion",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--load-store-vectorizer",
          "--nary-reassociate",
          "--ipconstprop",
          "--scalarizer",
          "--loop-vectorize",
          "--lower-constant-intrinsics",
          "--flattencfg",
          "--coro-cleanup",
          "--constprop",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--load-store-vectorizer",
      "--nary-reassociate",
      "--ipconstprop",
      "--scalarizer",
      "--loop-vectorize",
      "--lower-constant-intrinsics",
      "--flattencfg",
      "--coro-cleanup",
      "--constprop",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}