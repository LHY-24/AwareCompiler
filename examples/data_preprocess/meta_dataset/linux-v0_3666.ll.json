{
  "program_id": "linux-v0_3666.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 58,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 21,
    "oneSuccessor": 46,
    "twoPred": 20,
    "twoPredOneSuc": 8,
    "twoEach": 10,
    "twoSuccessor": 34,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 85,
    "BeginPhi": 0,
    "BranchCount": 80,
    "returnInt": 9,
    "CriticalCount": 23,
    "NumEdges": 127,
    "const32Bit": 107,
    "const64Bit": 2,
    "numConstZeroes": 25,
    "numConstOnes": 16,
    "UncondBranches": 46,
    "binaryConstArg": 18,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 8,
    "NumAndInst": 16,
    "BlockMid": 0,
    "BlockLow": 85,
    "NumBitCastInst": 0,
    "NumBrInst": 80,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 34,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 45,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 15,
    "TotalBlocks": 85,
    "TotalInsts": 275,
    "TotalMemInst": 117,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 78
  },
  "baseline_oz_instcount": 279,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--newgvn",
    "--gvn-hoist",
    "--die",
    "--aggressive-instcombine",
    "--mergefunc",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--hotcoldsplit",
          "--strip",
          "--strip-dead-prototypes",
          "--load-store-vectorizer",
          "--loweratomic",
          "--functionattrs",
          "--loop-unswitch",
          "--strip-debug-declare",
          "--inferattrs",
          "--loop-sink",
          "--name-anon-globals",
          "--globalsplit",
          "--canonicalize-aliases",
          "--lower-expect",
          "--flattencfg",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--hotcoldsplit",
      "--strip",
      "--strip-dead-prototypes",
      "--load-store-vectorizer",
      "--loweratomic",
      "--functionattrs",
      "--loop-unswitch",
      "--strip-debug-declare",
      "--inferattrs",
      "--loop-sink",
      "--name-anon-globals",
      "--globalsplit",
      "--canonicalize-aliases",
      "--lower-expect",
      "--flattencfg",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}