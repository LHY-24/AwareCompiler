{
  "program_id": "linux-v0_1420.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 47,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 14,
    "oneSuccessor": 43,
    "twoPred": 20,
    "twoPredOneSuc": 8,
    "twoEach": 6,
    "twoSuccessor": 27,
    "morePreds": 4,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 78,
    "BeginPhi": 6,
    "BranchCount": 69,
    "returnInt": 3,
    "CriticalCount": 14,
    "NumEdges": 100,
    "const32Bit": 406,
    "const64Bit": 8,
    "numConstZeroes": 196,
    "numConstOnes": 119,
    "UncondBranches": 43,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 84,
    "NumAndInst": 0,
    "BlockMid": 17,
    "BlockLow": 67,
    "NumBitCastInst": 14,
    "NumBrInst": 69,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 129,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 253,
    "NumMulInst": 7,
    "NumOrInst": 3,
    "NumPHIInst": 6,
    "NumRetInst": 13,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 123,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 84,
    "TotalInsts": 778,
    "TotalMemInst": 630,
    "TotalFuncs": 28,
    "ArgsPhi": 12,
    "testUnary": 355
  },
  "baseline_oz_instcount": 779,
  "knowledge_base_entry": [
    "--adce",
    "--gvn-hoist",
    "--loop-rotate",
    "--dse",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--indvars",
    "--correlated-propagation",
    "--jump-threading",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--always-inline",
          "--functionattrs",
          "--div-rem-pairs",
          "--loop-versioning-licm",
          "--die",
          "--lower-matrix-intrinsics",
          "--inline",
          "--mergereturn",
          "--sancov",
          "--correlated-propagation",
          "--cross-dso-cfi",
          "--loop-interchange",
          "-loop-reduce",
          "--gvn-hoist",
          "--loop-reroll",
          "--loop-unswitch",
          "--add-discriminators"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--always-inline",
      "--functionattrs",
      "--div-rem-pairs",
      "--loop-versioning-licm",
      "--die",
      "--lower-matrix-intrinsics",
      "--inline",
      "--mergereturn",
      "--sancov",
      "--correlated-propagation",
      "--cross-dso-cfi",
      "--loop-interchange",
      "-loop-reduce",
      "--gvn-hoist",
      "--loop-reroll",
      "--loop-unswitch",
      "--add-discriminators"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}