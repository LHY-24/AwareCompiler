{
  "program_id": "github-v0_13086.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 1,
    "oneSuccessor": 17,
    "twoPred": 8,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 34,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 31,
    "const32Bit": 56,
    "const64Bit": 5,
    "numConstZeroes": 15,
    "numConstOnes": 21,
    "UncondBranches": 17,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 16,
    "NumAndInst": 7,
    "BlockMid": 3,
    "BlockLow": 31,
    "NumBitCastInst": 0,
    "NumBrInst": 24,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 7,
    "NumLShrInst": 7,
    "NumLoadInst": 39,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 6,
    "NumZExtInst": 4,
    "TotalBlocks": 34,
    "TotalInsts": 182,
    "TotalMemInst": 106,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 66
  },
  "baseline_oz_instcount": 182,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--sroa",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--aggressive-instcombine",
    "--adce",
    "--ipsccp",
    "--loop-deletion",
    "--early-cse-memssa",
    "--simplifycfg",
    "--early-cse-memssa",
    "-loop-reduce",
    "--early-cse",
    "--nary-reassociate",
    "--correlated-propagation",
    "--newgvn",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--flattencfg",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn",
          "--instcombine",
          "--tailcallelim",
          "--loop-predication",
          "--loop-deletion",
          "--gvn-hoist",
          "--ipsccp",
          "--simple-loop-unswitch",
          "--alignment-from-assumptions",
          "--post-inline-ee-instrument",
          "--argpromotion",
          "--loop-simplifycfg",
          "-loop-reduce",
          "--memcpyopt",
          "--always-inline",
          "--aggressive-instcombine",
          "--inline",
          "--strip-nondebug",
          "--coro-elide",
          "--rewrite-statepoints-for-gc",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn",
      "--instcombine",
      "--tailcallelim",
      "--loop-predication",
      "--loop-deletion",
      "--gvn-hoist",
      "--ipsccp",
      "--simple-loop-unswitch",
      "--alignment-from-assumptions",
      "--post-inline-ee-instrument",
      "--argpromotion",
      "--loop-simplifycfg",
      "-loop-reduce",
      "--memcpyopt",
      "--always-inline",
      "--aggressive-instcombine",
      "--inline",
      "--strip-nondebug",
      "--coro-elide",
      "--rewrite-statepoints-for-gc",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+3.3%"
  }
}