{
  "program_id": "github-v0_28948.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 4,
    "oneSuccessor": 39,
    "twoPred": 16,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 17,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 0,
    "BranchCount": 56,
    "returnInt": 15,
    "CriticalCount": 10,
    "NumEdges": 82,
    "const32Bit": 171,
    "const64Bit": 25,
    "numConstZeroes": 81,
    "numConstOnes": 94,
    "UncondBranches": 39,
    "binaryConstArg": 17,
    "NumAShrInst": 1,
    "NumAddInst": 12,
    "NumAllocaInst": 68,
    "NumAndInst": 4,
    "BlockMid": 14,
    "BlockLow": 57,
    "NumBitCastInst": 38,
    "NumBrInst": 56,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 58,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 169,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 112,
    "NumSubInst": 1,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 33,
    "TotalBlocks": 71,
    "TotalInsts": 626,
    "TotalMemInst": 436,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 318
  },
  "baseline_oz_instcount": 627,
  "knowledge_base_entry": [
    "--instcombine",
    "--correlated-propagation",
    "--dce",
    "--lower-constant-intrinsics",
    "--dse",
    "--jump-threading",
    "--aggressive-instcombine",
    "--lower-expect",
    "--newgvn",
    "--gvn",
    "--aggressive-instcombine",
    "--mem2reg",
    "--dce",
    "--sccp",
    "--lower-constant-intrinsics",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--loweratomic",
          "--cross-dso-cfi",
          "--aggressive-instcombine",
          "--loop-data-prefetch",
          "--dce",
          "--callsite-splitting",
          "--instnamer",
          "--partially-inline-libcalls",
          "--adce",
          "--lower-expect",
          "--canonicalize-aliases",
          "--insert-gcov-profiling",
          "--sroa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--loweratomic",
      "--cross-dso-cfi",
      "--aggressive-instcombine",
      "--loop-data-prefetch",
      "--dce",
      "--callsite-splitting",
      "--instnamer",
      "--partially-inline-libcalls",
      "--adce",
      "--lower-expect",
      "--canonicalize-aliases",
      "--insert-gcov-profiling",
      "--sroa"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}