{
  "program_id": "poj104-v1_81_5.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 34,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 5,
    "oneSuccessor": 30,
    "twoPred": 12,
    "twoPredOneSuc": 1,
    "twoEach": 8,
    "twoSuccessor": 16,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 62,
    "BeginPhi": 0,
    "BranchCount": 46,
    "returnInt": 7,
    "CriticalCount": 5,
    "NumEdges": 62,
    "const32Bit": 66,
    "const64Bit": 37,
    "numConstZeroes": 36,
    "numConstOnes": 37,
    "UncondBranches": 30,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 28,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 58,
    "NumBitCastInst": 24,
    "NumBrInst": 46,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 84,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 40,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 62,
    "TotalInsts": 356,
    "TotalMemInst": 229,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 153
  },
  "baseline_oz_instcount": 143,
  "knowledge_base_entry": [
    "--bdce",
    "--simplifycfg",
    "--jump-threading",
    "--sroa",
    "--gvn-hoist",
    "--dse",
    "--adce",
    "--instsimplify",
    "--globalopt",
    "--flattencfg",
    "--licm",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--licm",
    "--nary-reassociate",
    "--lower-expect",
    "--jump-threading",
    "--mldst-motion",
    "--early-cse-memssa",
    "--reassociate",
    "--bdce",
    "--mergefunc",
    "--loop-simplifycfg",
    "--adce",
    "--gvn",
    "--load-store-vectorizer",
    "--indvars",
    "--early-cse",
    "--load-store-vectorizer",
    "--mem2reg",
    "--lower-expect",
    "--jump-threading",
    "--mldst-motion",
    "--early-cse-memssa",
    "--reassociate",
    "--early-cse",
    "--nary-reassociate",
    "--simplifycfg",
    "--jump-threading",
    "--sroa",
    "--gvn-hoist",
    "--dse",
    "--adce",
    "--instsimplify",
    "--globalopt",
    "--flattencfg",
    "--licm",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--simplifycfg",
    "--dse",
    "--sccp",
    "--loop-deletion",
    "--elim-avail-extern",
    "--flattencfg",
    "--early-cse",
    "--loop-reroll",
    "--instcombine",
    "--ipsccp",
    "--ipsccp",
    "--aggressive-instcombine",
    "--ipsccp",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--instcombine",
    "--loop-instsimplify",
    "--mem2reg",
    "--inline",
    "--instsimplify",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--licm",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--licm",
    "--nary-reassociate",
    "--lower-expect",
    "--jump-threading",
    "--mldst-motion",
    "--early-cse-memssa",
    "--reassociate",
    "--early-cse",
    "--slp-vectorizer",
    "--die",
    "--mergefunc",
    "--loop-simplifycfg",
    "--adce",
    "--gvn",
    "--load-store-vectorizer",
    "--indvars",
    "--early-cse",
    "--load-store-vectorizer",
    "--mem2reg",
    "--lower-expect",
    "--jump-threading",
    "--mldst-motion",
    "--early-cse-memssa",
    "--reassociate",
    "--early-cse",
    "--nary-reassociate",
    "--simplifycfg",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lcssa",
          "--loop-idiom",
          "--loop-versioning-licm",
          "--libcalls-shrinkwrap",
          "--rpo-functionattrs",
          "--loop-unroll",
          "--dse",
          "--name-anon-globals",
          "--dce",
          "--elim-avail-extern",
          "--loop-unroll-and-jam",
          "--inline",
          "--break-crit-edges",
          "--loop-fusion",
          "--irce",
          "--loop-predication",
          "--instcombine",
          "--simplifycfg",
          "--loop-simplify",
          "--loop-sink",
          "--coro-elide",
          "--loop-simplifycfg",
          "--coro-early",
          "--load-store-vectorizer",
          "--adce",
          "--reg2mem",
          "--inferattrs",
          "--sroa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lcssa",
      "--loop-idiom",
      "--loop-versioning-licm",
      "--libcalls-shrinkwrap",
      "--rpo-functionattrs",
      "--loop-unroll",
      "--dse",
      "--name-anon-globals",
      "--dce",
      "--elim-avail-extern",
      "--loop-unroll-and-jam",
      "--inline",
      "--break-crit-edges",
      "--loop-fusion",
      "--irce",
      "--loop-predication",
      "--instcombine",
      "--simplifycfg",
      "--loop-simplify",
      "--loop-sink",
      "--coro-elide",
      "--loop-simplifycfg",
      "--coro-early",
      "--load-store-vectorizer",
      "--adce",
      "--reg2mem",
      "--inferattrs",
      "--sroa"
    ],
    "performance_vs_Oz": "+4.9%"
  }
}