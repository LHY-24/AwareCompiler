{
  "program_id": "tensorflow-v0_132.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 6,
    "CriticalCount": 4,
    "NumEdges": 12,
    "const32Bit": 33,
    "const64Bit": 19,
    "numConstZeroes": 37,
    "numConstOnes": 12,
    "UncondBranches": 4,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 2,
    "NumAndInst": 4,
    "BlockMid": 2,
    "BlockLow": 9,
    "NumBitCastInst": 8,
    "NumBrInst": 8,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 3,
    "NumShlInst": 0,
    "NumStoreInst": 5,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 11,
    "TotalInsts": 74,
    "TotalMemInst": 43,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 22
  },
  "baseline_oz_instcount": 74,
  "knowledge_base_entry": [
    "--loop-reroll",
    "-loop-reduce",
    "--indvars",
    "-loop-reduce",
    "--early-cse-memssa",
    "--indvars",
    "--sroa",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--prune-eh",
    "--inline",
    "--instcombine",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--loop-predication",
          "--load-store-vectorizer",
          "--functionattrs",
          "--loop-distribute",
          "--loop-data-prefetch",
          "--coro-elide",
          "--redundant-dbg-inst-elim",
          "--inject-tli-mappings",
          "--cross-dso-cfi",
          "--instcombine",
          "--loop-simplify",
          "--memcpyopt",
          "--flattencfg",
          "--nary-reassociate",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--loop-predication",
      "--load-store-vectorizer",
      "--functionattrs",
      "--loop-distribute",
      "--loop-data-prefetch",
      "--coro-elide",
      "--redundant-dbg-inst-elim",
      "--inject-tli-mappings",
      "--cross-dso-cfi",
      "--instcombine",
      "--loop-simplify",
      "--memcpyopt",
      "--flattencfg",
      "--nary-reassociate",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+4.1%"
  }
}