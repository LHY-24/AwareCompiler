{
  "program_id": "linux-v0_4529.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 64,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 20,
    "oneSuccessor": 51,
    "twoPred": 15,
    "twoPredOneSuc": 7,
    "twoEach": 6,
    "twoSuccessor": 32,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 109,
    "BeginPhi": 0,
    "BranchCount": 83,
    "returnInt": 32,
    "CriticalCount": 12,
    "NumEdges": 120,
    "const32Bit": 303,
    "const64Bit": 26,
    "numConstZeroes": 141,
    "numConstOnes": 98,
    "UncondBranches": 51,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 77,
    "NumAndInst": 0,
    "BlockMid": 14,
    "BlockLow": 95,
    "NumBitCastInst": 22,
    "NumBrInst": 83,
    "NumCallInst": 77,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 33,
    "NumLShrInst": 0,
    "NumLoadInst": 246,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 8,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 136,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 6,
    "TotalBlocks": 109,
    "TotalInsts": 823,
    "TotalMemInst": 623,
    "TotalFuncs": 60,
    "ArgsPhi": 0,
    "testUnary": 369
  },
  "baseline_oz_instcount": 826,
  "knowledge_base_entry": [
    "--instsimplify",
    "--simplifycfg",
    "--adce",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--inline",
    "--prune-eh",
    "--newgvn",
    "--early-cse",
    "--die",
    "--inline",
    "--bdce",
    "--mergefunc",
    "--die",
    "--ipsccp",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--indvars",
          "--loop-distribute",
          "--guard-widening",
          "--aggressive-instcombine",
          "--name-anon-globals",
          "--separate-const-offset-from-gep",
          "--globalsplit",
          "--coro-elide",
          "--loop-data-prefetch",
          "--ipsccp",
          "--deadargelim",
          "--early-cse",
          "--attributor",
          "--licm",
          "--flattencfg",
          "--add-discriminators",
          "--coro-split",
          "--irce",
          "--rpo-functionattrs",
          "--bdce",
          "--mergereturn",
          "--lower-constant-intrinsics",
          "--constmerge",
          "--float2int",
          "--simplifycfg",
          "--lower-guard-intrinsic",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--indvars",
      "--loop-distribute",
      "--guard-widening",
      "--aggressive-instcombine",
      "--name-anon-globals",
      "--separate-const-offset-from-gep",
      "--globalsplit",
      "--coro-elide",
      "--loop-data-prefetch",
      "--ipsccp",
      "--deadargelim",
      "--early-cse",
      "--attributor",
      "--licm",
      "--flattencfg",
      "--add-discriminators",
      "--coro-split",
      "--irce",
      "--rpo-functionattrs",
      "--bdce",
      "--mergereturn",
      "--lower-constant-intrinsics",
      "--constmerge",
      "--float2int",
      "--simplifycfg",
      "--lower-guard-intrinsic",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}