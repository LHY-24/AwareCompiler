{
  "program_id": "linux-v0_9596.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 6,
    "oneSuccessor": 45,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 9,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 0,
    "BranchCount": 54,
    "returnInt": 2,
    "CriticalCount": 3,
    "NumEdges": 83,
    "const32Bit": 233,
    "const64Bit": 5,
    "numConstZeroes": 71,
    "numConstOnes": 136,
    "UncondBranches": 45,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 121,
    "NumAndInst": 4,
    "BlockMid": 10,
    "BlockLow": 54,
    "NumBitCastInst": 55,
    "NumBrInst": 54,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 30,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 197,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 138,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 4,
    "NumZExtInst": 4,
    "TotalBlocks": 64,
    "TotalInsts": 688,
    "TotalMemInst": 530,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 394
  },
  "baseline_oz_instcount": 688,
  "knowledge_base_entry": [
    "--gvn",
    "--die",
    "--ipsccp",
    "--mergefunc",
    "--adce",
    "--sccp",
    "--instsimplify",
    "--mem2reg",
    "--globalopt",
    "--lower-expect",
    "--mem2reg",
    "--adce",
    "--early-cse",
    "--slp-vectorizer",
    "--dse",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--lower-constant-intrinsics",
          "--separate-const-offset-from-gep",
          "--functionattrs",
          "--redundant-dbg-inst-elim",
          "--lowerinvoke",
          "--strip",
          "--mergefunc",
          "--irce",
          "--sink",
          "--barrier",
          "--loop-data-prefetch",
          "--loop-distribute",
          "--loop-idiom",
          "--gvn",
          "--instnamer",
          "--reassociate",
          "--pgo-memop-opt",
          "--correlated-propagation",
          "--add-discriminators"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--lower-constant-intrinsics",
      "--separate-const-offset-from-gep",
      "--functionattrs",
      "--redundant-dbg-inst-elim",
      "--lowerinvoke",
      "--strip",
      "--mergefunc",
      "--irce",
      "--sink",
      "--barrier",
      "--loop-data-prefetch",
      "--loop-distribute",
      "--loop-idiom",
      "--gvn",
      "--instnamer",
      "--reassociate",
      "--pgo-memop-opt",
      "--correlated-propagation",
      "--add-discriminators"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}