{
  "program_id": "poj104-v1_41_540.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 17,
    "oneSuccessor": 22,
    "twoPred": 10,
    "twoPredOneSuc": 5,
    "twoEach": 5,
    "twoSuccessor": 22,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 0,
    "BranchCount": 44,
    "returnInt": 2,
    "CriticalCount": 17,
    "NumEdges": 66,
    "const32Bit": 29,
    "const64Bit": 10,
    "numConstZeroes": 1,
    "numConstOnes": 20,
    "UncondBranches": 22,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 46,
    "NumBitCastInst": 10,
    "NumBrInst": 44,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 43,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 11,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 47,
    "TotalInsts": 158,
    "TotalMemInst": 74,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 59
  },
  "baseline_oz_instcount": 69,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--prune-eh",
    "--sroa",
    "--loop-simplifycfg",
    "--mergefunc",
    "--sroa",
    "--instcombine",
    "--ipsccp",
    "--early-cse",
    "--elim-avail-extern",
    "--loop-deletion",
    "--early-cse-memssa",
    "--mergefunc",
    "--gvn",
    "--sccp",
    "--newgvn",
    "--dse",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--dse",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--sccp",
    "--simplifycfg",
    "--gvn",
    "--licm",
    "--ipsccp",
    "--early-cse",
    "--indvars",
    "--newgvn",
    "--dse",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--dse",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--sccp",
    "--simplifycfg",
    "--gvn",
    "--correlated-propagation",
    "--loop-reroll",
    "--slp-vectorizer",
    "--mem2reg",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--jump-threading",
    "--dse",
    "--newgvn",
    "--instcombine",
    "--loop-rotate",
    "--mem2reg",
    "--mldst-motion",
    "--elim-avail-extern",
    "--bdce",
    "--simplifycfg",
    "--sroa",
    "--loop-simplifycfg",
    "--mergefunc",
    "--sroa",
    "--instcombine",
    "--ipsccp",
    "--early-cse",
    "--elim-avail-extern",
    "--loop-deletion",
    "--early-cse-memssa",
    "--mergefunc",
    "--gvn",
    "--sccp",
    "--newgvn",
    "--prune-eh",
    "--aggressive-instcombine",
    "--mergefunc",
    "--simplifycfg",
    "--bdce",
    "--simplifycfg",
    "--sroa",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--prune-eh",
    "--sroa",
    "--loop-simplifycfg",
    "--mergefunc",
    "--sroa",
    "--instcombine",
    "--ipsccp",
    "--globalopt",
    "--mergefunc",
    "--simplifycfg",
    "--dse",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--mergefunc",
    "--mergefunc",
    "--flattencfg",
    "--jump-threading",
    "--newgvn",
    "--slsr",
    "--instcombine",
    "--inline",
    "--newgvn",
    "--dse",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--dse",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--early-cse",
    "--indvars",
    "--newgvn",
    "--dse",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--dse",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--sccp",
    "--simplifycfg",
    "--gvn",
    "--correlated-propagation",
    "--mergefunc",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-instsimplify",
          "--mergeicmps",
          "--loop-unswitch",
          "--partially-inline-libcalls",
          "--rewrite-statepoints-for-gc",
          "--loop-reroll",
          "--instsimplify",
          "--jump-threading",
          "--prune-eh",
          "--loop-predication",
          "--coro-elide",
          "--strip",
          "--sroa",
          "--newgvn",
          "--libcalls-shrinkwrap",
          "--lower-widenable-condition",
          "--simple-loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-instsimplify",
      "--mergeicmps",
      "--loop-unswitch",
      "--partially-inline-libcalls",
      "--rewrite-statepoints-for-gc",
      "--loop-reroll",
      "--instsimplify",
      "--jump-threading",
      "--prune-eh",
      "--loop-predication",
      "--coro-elide",
      "--strip",
      "--sroa",
      "--newgvn",
      "--libcalls-shrinkwrap",
      "--lower-widenable-condition",
      "--simple-loop-unswitch"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}