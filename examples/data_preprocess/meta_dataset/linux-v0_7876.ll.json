{
  "program_id": "linux-v0_7876.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 25,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 4,
    "oneSuccessor": 25,
    "twoPred": 14,
    "twoPredOneSuc": 1,
    "twoEach": 7,
    "twoSuccessor": 14,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 49,
    "BeginPhi": 1,
    "BranchCount": 39,
    "returnInt": 14,
    "CriticalCount": 7,
    "NumEdges": 53,
    "const32Bit": 87,
    "const64Bit": 19,
    "numConstZeroes": 24,
    "numConstOnes": 49,
    "UncondBranches": 25,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 32,
    "NumAndInst": 6,
    "BlockMid": 5,
    "BlockLow": 45,
    "NumBitCastInst": 2,
    "NumBrInst": 39,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 61,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 1,
    "NumRetInst": 11,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 54,
    "NumSubInst": 4,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 27,
    "TotalBlocks": 50,
    "TotalInsts": 319,
    "TotalMemInst": 186,
    "TotalFuncs": 12,
    "ArgsPhi": 2,
    "testUnary": 134
  },
  "baseline_oz_instcount": 321,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--gvn",
    "--gvn",
    "--adce",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--dse",
    "--lower-expect",
    "--adce",
    "--aggressive-instcombine",
    "--dse",
    "--lower-expect",
    "--adce",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--globalopt",
    "--jump-threading",
    "--lower-expect",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--sroa",
    "--die",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--sroa",
          "--flattencfg",
          "--speculative-execution",
          "--hotcoldsplit",
          "--insert-gcov-profiling",
          "--lower-widenable-condition",
          "--loop-data-prefetch",
          "--aggressive-instcombine",
          "--globalopt",
          "--gvn",
          "--loweratomic",
          "--guard-widening",
          "--ee-instrument",
          "--correlated-propagation",
          "--pgo-memop-opt",
          "--called-value-propagation",
          "--float2int",
          "--nary-reassociate",
          "--slp-vectorizer",
          "--instnamer",
          "--coro-split",
          "--functionattrs",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--sroa",
      "--flattencfg",
      "--speculative-execution",
      "--hotcoldsplit",
      "--insert-gcov-profiling",
      "--lower-widenable-condition",
      "--loop-data-prefetch",
      "--aggressive-instcombine",
      "--globalopt",
      "--gvn",
      "--loweratomic",
      "--guard-widening",
      "--ee-instrument",
      "--correlated-propagation",
      "--pgo-memop-opt",
      "--called-value-propagation",
      "--float2int",
      "--nary-reassociate",
      "--slp-vectorizer",
      "--instnamer",
      "--coro-split",
      "--functionattrs",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+6.2%"
  }
}