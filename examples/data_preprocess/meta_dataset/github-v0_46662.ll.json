{
  "program_id": "github-v0_46662.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 19,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 2,
    "oneSuccessor": 19,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 7,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 2,
    "BranchCount": 28,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 37,
    "const32Bit": 64,
    "const64Bit": 12,
    "numConstZeroes": 26,
    "numConstOnes": 25,
    "UncondBranches": 19,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 20,
    "NumAndInst": 10,
    "BlockMid": 3,
    "BlockLow": 30,
    "NumBitCastInst": 4,
    "NumBrInst": 28,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 9,
    "NumLShrInst": 8,
    "NumLoadInst": 69,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 38,
    "NumSubInst": 2,
    "NumTruncInst": 12,
    "NumXorInst": 3,
    "NumZExtInst": 29,
    "TotalBlocks": 33,
    "TotalInsts": 270,
    "TotalMemInst": 144,
    "TotalFuncs": 6,
    "ArgsPhi": 4,
    "testUnary": 134
  },
  "baseline_oz_instcount": 270,
  "knowledge_base_entry": [
    "--early-cse",
    "--early-cse",
    "--simplifycfg",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--reassociate",
    "--gvn-hoist",
    "--correlated-propagation",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--inferattrs",
          "--consthoist",
          "-loop-reduce",
          "--loop-sink",
          "--loop-unswitch",
          "--globaldce",
          "--licm",
          "--nary-reassociate",
          "--instsimplify",
          "--callsite-splitting",
          "--correlated-propagation",
          "--prune-eh",
          "--loop-interchange",
          "--strip-nondebug",
          "--libcalls-shrinkwrap",
          "--sccp",
          "--sink",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--inferattrs",
      "--consthoist",
      "-loop-reduce",
      "--loop-sink",
      "--loop-unswitch",
      "--globaldce",
      "--licm",
      "--nary-reassociate",
      "--instsimplify",
      "--callsite-splitting",
      "--correlated-propagation",
      "--prune-eh",
      "--loop-interchange",
      "--strip-nondebug",
      "--libcalls-shrinkwrap",
      "--sccp",
      "--sink",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+9.3%"
  }
}