{
  "program_id": "github-v0_6993.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 41,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 7,
    "oneSuccessor": 39,
    "twoPred": 16,
    "twoPredOneSuc": 4,
    "twoEach": 11,
    "twoSuccessor": 20,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 61,
    "BeginPhi": 2,
    "BranchCount": 59,
    "returnInt": 15,
    "CriticalCount": 6,
    "NumEdges": 79,
    "const32Bit": 89,
    "const64Bit": 7,
    "numConstZeroes": 18,
    "numConstOnes": 71,
    "UncondBranches": 39,
    "binaryConstArg": 38,
    "NumAShrInst": 0,
    "NumAddInst": 24,
    "NumAllocaInst": 37,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 52,
    "NumBitCastInst": 4,
    "NumBrInst": 59,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 166,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 4,
    "NumSExtInst": 38,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 74,
    "NumSubInst": 15,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 63,
    "TotalInsts": 537,
    "TotalMemInst": 340,
    "TotalFuncs": 16,
    "ArgsPhi": 4,
    "testUnary": 265
  },
  "baseline_oz_instcount": 537,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--mldst-motion",
    "--inline",
    "--reassociate",
    "--aggressive-instcombine",
    "--jump-threading",
    "--loop-rotate",
    "--early-cse-memssa",
    "--reassociate",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--adce",
    "--sccp",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--loop-predication",
          "--attributor",
          "--post-inline-ee-instrument",
          "--inline",
          "--dse",
          "--speculative-execution",
          "--lower-expect",
          "--aggressive-instcombine",
          "--loop-instsimplify",
          "--insert-gcov-profiling",
          "--indvars",
          "--simplifycfg",
          "--redundant-dbg-inst-elim",
          "--strip",
          "--rpo-functionattrs",
          "--inferattrs",
          "--sroa",
          "--loop-deletion",
          "--callsite-splitting",
          "--dce",
          "--mergereturn",
          "--lower-matrix-intrinsics",
          "--pgo-memop-opt",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--loop-predication",
      "--attributor",
      "--post-inline-ee-instrument",
      "--inline",
      "--dse",
      "--speculative-execution",
      "--lower-expect",
      "--aggressive-instcombine",
      "--loop-instsimplify",
      "--insert-gcov-profiling",
      "--indvars",
      "--simplifycfg",
      "--redundant-dbg-inst-elim",
      "--strip",
      "--rpo-functionattrs",
      "--inferattrs",
      "--sroa",
      "--loop-deletion",
      "--callsite-splitting",
      "--dce",
      "--mergereturn",
      "--lower-matrix-intrinsics",
      "--pgo-memop-opt",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}