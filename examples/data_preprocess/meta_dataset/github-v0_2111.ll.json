{
  "program_id": "github-v0_2111.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 70,
    "onePredOneSuc": 58,
    "onePredTwoSuc": 8,
    "oneSuccessor": 72,
    "twoPred": 31,
    "twoPredOneSuc": 8,
    "twoEach": 20,
    "twoSuccessor": 30,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 113,
    "BeginPhi": 1,
    "BranchCount": 102,
    "returnInt": 12,
    "CriticalCount": 9,
    "NumEdges": 132,
    "const32Bit": 166,
    "const64Bit": 37,
    "numConstZeroes": 62,
    "numConstOnes": 82,
    "UncondBranches": 72,
    "binaryConstArg": 41,
    "NumAShrInst": 0,
    "NumAddInst": 22,
    "NumAllocaInst": 53,
    "NumAndInst": 10,
    "BlockMid": 11,
    "BlockLow": 103,
    "NumBitCastInst": 2,
    "NumBrInst": 102,
    "NumCallInst": 78,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 35,
    "NumLShrInst": 7,
    "NumLoadInst": 202,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 12,
    "NumSExtInst": 25,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 96,
    "NumSubInst": 2,
    "NumTruncInst": 12,
    "NumXorInst": 8,
    "NumZExtInst": 30,
    "TotalBlocks": 114,
    "TotalInsts": 723,
    "TotalMemInst": 453,
    "TotalFuncs": 14,
    "ArgsPhi": 2,
    "testUnary": 324
  },
  "baseline_oz_instcount": 664,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--newgvn",
    "--loop-fusion",
    "--indvars",
    "--gvn",
    "--early-cse-memssa",
    "--sroa",
    "--lower-expect",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--lower-expect",
    "--dce",
    "--slp-vectorizer",
    "--loop-reroll",
    "--gvn-hoist",
    "--bdce",
    "--mem2reg",
    "--loop-deletion",
    "--instcombine",
    "--prune-eh",
    "--aggressive-instcombine",
    "--sroa",
    "--reassociate",
    "--globalopt",
    "--aggressive-instcombine",
    "--instsimplify",
    "--dse",
    "--ipsccp",
    "--inline",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--reassociate",
    "--globalopt",
    "--aggressive-instcombine",
    "--instsimplify",
    "--dse",
    "--ipsccp",
    "--mergefunc",
    "--licm",
    "--slp-vectorizer",
    "--mem2reg",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--add-discriminators",
          "--loop-instsimplify",
          "--memcpyopt",
          "--early-cse",
          "--gvn-hoist",
          "--coro-early",
          "--globalopt",
          "--ipsccp",
          "--lowerswitch",
          "--sroa",
          "--irce",
          "--lower-widenable-condition",
          "--sink",
          "--deadargelim",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--add-discriminators",
      "--loop-instsimplify",
      "--memcpyopt",
      "--early-cse",
      "--gvn-hoist",
      "--coro-early",
      "--globalopt",
      "--ipsccp",
      "--lowerswitch",
      "--sroa",
      "--irce",
      "--lower-widenable-condition",
      "--sink",
      "--deadargelim",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}