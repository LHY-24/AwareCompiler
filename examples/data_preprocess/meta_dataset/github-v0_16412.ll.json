{
  "program_id": "github-v0_16412.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 7,
    "onePred": 39,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 9,
    "oneSuccessor": 41,
    "twoPred": 23,
    "twoPredOneSuc": 11,
    "twoEach": 11,
    "twoSuccessor": 21,
    "morePreds": 1,
    "BB03Phi": 7,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 7,
    "BranchCount": 62,
    "returnInt": 1,
    "CriticalCount": 17,
    "NumEdges": 90,
    "const32Bit": 115,
    "const64Bit": 55,
    "numConstZeroes": 62,
    "numConstOnes": 75,
    "UncondBranches": 41,
    "binaryConstArg": 27,
    "NumAShrInst": 14,
    "NumAddInst": 16,
    "NumAllocaInst": 47,
    "NumAndInst": 0,
    "BlockMid": 10,
    "BlockLow": 56,
    "NumBitCastInst": 1,
    "NumBrInst": 62,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 69,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 169,
    "NumMulInst": 19,
    "NumOrInst": 0,
    "NumPHIInst": 7,
    "NumRetInst": 3,
    "NumSExtInst": 36,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 83,
    "NumSubInst": 5,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 66,
    "TotalInsts": 579,
    "TotalMemInst": 378,
    "TotalFuncs": 8,
    "ArgsPhi": 14,
    "testUnary": 269
  },
  "baseline_oz_instcount": 579,
  "knowledge_base_entry": [
    "--early-cse",
    "--aggressive-instcombine",
    "--dce",
    "--inline",
    "--prune-eh",
    "--inline",
    "--slp-vectorizer",
    "--gvn",
    "--instcombine",
    "--adce",
    "--simplifycfg",
    "--nary-reassociate",
    "--licm",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--lower-expect",
          "--lower-constant-intrinsics",
          "--globaldce",
          "--strip",
          "--infer-address-spaces",
          "--constmerge",
          "--gvn-hoist",
          "--loop-predication",
          "--dce",
          "-loop-reduce",
          "--memcpyopt",
          "--dse",
          "--sccp",
          "--strip-nondebug",
          "--loop-unswitch",
          "--aggressive-instcombine",
          "--lower-matrix-intrinsics",
          "--libcalls-shrinkwrap",
          "--cross-dso-cfi"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--lower-expect",
      "--lower-constant-intrinsics",
      "--globaldce",
      "--strip",
      "--infer-address-spaces",
      "--constmerge",
      "--gvn-hoist",
      "--loop-predication",
      "--dce",
      "-loop-reduce",
      "--memcpyopt",
      "--dse",
      "--sccp",
      "--strip-nondebug",
      "--loop-unswitch",
      "--aggressive-instcombine",
      "--lower-matrix-intrinsics",
      "--libcalls-shrinkwrap",
      "--cross-dso-cfi"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}