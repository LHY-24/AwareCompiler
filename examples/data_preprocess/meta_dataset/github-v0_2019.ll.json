{
  "program_id": "github-v0_2019.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 31,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 8,
    "oneSuccessor": 32,
    "twoPred": 18,
    "twoPredOneSuc": 9,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 2,
    "BranchCount": 50,
    "returnInt": 6,
    "CriticalCount": 17,
    "NumEdges": 78,
    "const32Bit": 131,
    "const64Bit": 5,
    "numConstZeroes": 50,
    "numConstOnes": 62,
    "UncondBranches": 32,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 35,
    "NumAndInst": 4,
    "BlockMid": 7,
    "BlockLow": 55,
    "NumBitCastInst": 2,
    "NumBrInst": 50,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 30,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 111,
    "NumMulInst": 1,
    "NumOrInst": 7,
    "NumPHIInst": 2,
    "NumRetInst": 11,
    "NumSExtInst": 7,
    "NumSelectInst": 3,
    "NumShlInst": 4,
    "NumStoreInst": 56,
    "NumSubInst": 4,
    "NumTruncInst": 22,
    "NumXorInst": 1,
    "NumZExtInst": 39,
    "TotalBlocks": 62,
    "TotalInsts": 436,
    "TotalMemInst": 256,
    "TotalFuncs": 16,
    "ArgsPhi": 4,
    "testUnary": 216
  },
  "baseline_oz_instcount": 436,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--mergefunc",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--sroa",
    "--loop-rotate",
    "--gvn",
    "--early-cse-memssa",
    "--early-cse",
    "--dce",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--separate-const-offset-from-gep",
          "--lower-widenable-condition",
          "--consthoist",
          "--lower-matrix-intrinsics",
          "--speculative-execution",
          "--loop-interchange",
          "--load-store-vectorizer",
          "--loop-versioning",
          "--cross-dso-cfi",
          "--always-inline",
          "--instcombine",
          "--deadargelim",
          "--aggressive-instcombine",
          "--loop-sink",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--separate-const-offset-from-gep",
      "--lower-widenable-condition",
      "--consthoist",
      "--lower-matrix-intrinsics",
      "--speculative-execution",
      "--loop-interchange",
      "--load-store-vectorizer",
      "--loop-versioning",
      "--cross-dso-cfi",
      "--always-inline",
      "--instcombine",
      "--deadargelim",
      "--aggressive-instcombine",
      "--loop-sink",
      "--adce"
    ],
    "performance_vs_Oz": "+2.3%"
  }
}