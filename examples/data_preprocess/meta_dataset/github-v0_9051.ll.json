{
  "program_id": "github-v0_9051.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 2,
    "oneSuccessor": 8,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 32,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 3,
    "CriticalCount": 7,
    "NumEdges": 24,
    "const32Bit": 57,
    "const64Bit": 3,
    "numConstZeroes": 13,
    "numConstOnes": 27,
    "UncondBranches": 8,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 23,
    "NumAndInst": 9,
    "BlockMid": 3,
    "BlockLow": 29,
    "NumBitCastInst": 0,
    "NumBrInst": 16,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 63,
    "NumMulInst": 1,
    "NumOrInst": 11,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 50,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 4,
    "TotalBlocks": 32,
    "TotalInsts": 222,
    "TotalMemInst": 146,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 93
  },
  "baseline_oz_instcount": 222,
  "knowledge_base_entry": [
    "--ipsccp",
    "--elim-avail-extern",
    "--mem2reg",
    "--aggressive-instcombine",
    "--sroa",
    "--indvars",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergereturn",
          "--sroa",
          "--post-inline-ee-instrument",
          "--prune-eh",
          "--always-inline",
          "--rewrite-statepoints-for-gc",
          "--irce",
          "--sccp",
          "--strip-debug-declare",
          "--strip-dead-prototypes",
          "--instsimplify",
          "--indvars",
          "--lowerswitch",
          "--memcpyopt",
          "--loop-vectorize",
          "--loop-reroll",
          "--hotcoldsplit",
          "--barrier",
          "--reassociate",
          "--insert-gcov-profiling",
          "--aggressive-instcombine",
          "--lower-expect",
          "--loop-guard-widening",
          "--mergefunc",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergereturn",
      "--sroa",
      "--post-inline-ee-instrument",
      "--prune-eh",
      "--always-inline",
      "--rewrite-statepoints-for-gc",
      "--irce",
      "--sccp",
      "--strip-debug-declare",
      "--strip-dead-prototypes",
      "--instsimplify",
      "--indvars",
      "--lowerswitch",
      "--memcpyopt",
      "--loop-vectorize",
      "--loop-reroll",
      "--hotcoldsplit",
      "--barrier",
      "--reassociate",
      "--insert-gcov-profiling",
      "--aggressive-instcombine",
      "--lower-expect",
      "--loop-guard-widening",
      "--mergefunc",
      "--dse"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}