{
  "program_id": "github-v0_44701.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 99,
    "onePredOneSuc": 54,
    "onePredTwoSuc": 43,
    "oneSuccessor": 99,
    "twoPred": 48,
    "twoPredOneSuc": 43,
    "twoEach": 5,
    "twoSuccessor": 48,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 151,
    "BeginPhi": 0,
    "BranchCount": 147,
    "returnInt": 73,
    "CriticalCount": 43,
    "NumEdges": 195,
    "const32Bit": 107,
    "const64Bit": 0,
    "numConstZeroes": 119,
    "numConstOnes": 102,
    "UncondBranches": 99,
    "binaryConstArg": 64,
    "NumAShrInst": 0,
    "NumAddInst": 29,
    "NumAllocaInst": 29,
    "NumAndInst": 2,
    "BlockMid": 9,
    "BlockLow": 142,
    "NumBitCastInst": 0,
    "NumBrInst": 147,
    "NumCallInst": 368,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 48,
    "NumLShrInst": 0,
    "NumLoadInst": 85,
    "NumMulInst": 17,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 86,
    "NumSubInst": 27,
    "NumTruncInst": 36,
    "NumXorInst": 2,
    "NumZExtInst": 31,
    "TotalBlocks": 151,
    "TotalInsts": 931,
    "TotalMemInst": 574,
    "TotalFuncs": 42,
    "ArgsPhi": 0,
    "testUnary": 190
  },
  "baseline_oz_instcount": 931,
  "knowledge_base_entry": [
    "--mem2reg",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--dse",
    "--inline",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--early-cse",
    "--gvn-hoist",
    "--globalopt",
    "--lower-expect",
    "--ipsccp",
    "--simplifycfg",
    "--early-cse",
    "--flattencfg",
    "--jump-threading",
    "--early-cse-memssa",
    "--sroa",
    "--indvars",
    "--sroa",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--loop-vectorize",
          "--aggressive-instcombine",
          "--memcpyopt",
          "--loop-instsimplify",
          "--slsr",
          "--sccp",
          "--alignment-from-assumptions",
          "--mem2reg",
          "--simplifycfg",
          "--newgvn",
          "--loop-versioning",
          "--coro-elide",
          "--lower-widenable-condition",
          "--licm",
          "--post-inline-ee-instrument",
          "--float2int",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--loop-vectorize",
      "--aggressive-instcombine",
      "--memcpyopt",
      "--loop-instsimplify",
      "--slsr",
      "--sccp",
      "--alignment-from-assumptions",
      "--mem2reg",
      "--simplifycfg",
      "--newgvn",
      "--loop-versioning",
      "--coro-elide",
      "--lower-widenable-condition",
      "--licm",
      "--post-inline-ee-instrument",
      "--float2int",
      "--die"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}