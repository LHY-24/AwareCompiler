{
  "program_id": "poj104-v1_27_449.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 3,
    "oneSuccessor": 7,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 7,
    "CriticalCount": 6,
    "NumEdges": 21,
    "const32Bit": 16,
    "const64Bit": 22,
    "numConstZeroes": 2,
    "numConstOnes": 14,
    "UncondBranches": 7,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 14,
    "NumBitCastInst": 22,
    "NumBrInst": 14,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 9,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 17,
    "TotalInsts": 176,
    "TotalMemInst": 99,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 81
  },
  "baseline_oz_instcount": 90,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--instcombine",
    "--die",
    "--early-cse",
    "--dse",
    "--sccp",
    "--inline",
    "--instsimplify",
    "--dse",
    "--gvn",
    "--loop-deletion",
    "--sroa",
    "--instcombine",
    "--inline",
    "--bdce",
    "--mergefunc",
    "--mergefunc",
    "--instcombine",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--jump-threading",
    "--gvn",
    "--die",
    "--aggressive-instcombine",
    "--inline",
    "--sccp",
    "--reassociate",
    "--dce",
    "--correlated-propagation",
    "--gvn-hoist",
    "--mergefunc",
    "--flattencfg",
    "--sroa",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-elide",
          "--infer-address-spaces",
          "--constprop",
          "--load-store-vectorizer",
          "--lowerswitch",
          "--speculative-execution",
          "--sroa",
          "--alignment-from-assumptions",
          "--mem2reg",
          "--loop-versioning",
          "--separate-const-offset-from-gep",
          "--rpo-functionattrs",
          "--div-rem-pairs",
          "--inline",
          "-loop-reduce",
          "--mergereturn",
          "--instcombine",
          "--loop-versioning-licm",
          "--gvn",
          "--prune-eh",
          "--dce",
          "--forceattrs",
          "--canonicalize-aliases",
          "--constmerge",
          "--globalopt",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-elide",
      "--infer-address-spaces",
      "--constprop",
      "--load-store-vectorizer",
      "--lowerswitch",
      "--speculative-execution",
      "--sroa",
      "--alignment-from-assumptions",
      "--mem2reg",
      "--loop-versioning",
      "--separate-const-offset-from-gep",
      "--rpo-functionattrs",
      "--div-rem-pairs",
      "--inline",
      "-loop-reduce",
      "--mergereturn",
      "--instcombine",
      "--loop-versioning-licm",
      "--gvn",
      "--prune-eh",
      "--dce",
      "--forceattrs",
      "--canonicalize-aliases",
      "--constmerge",
      "--globalopt",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}