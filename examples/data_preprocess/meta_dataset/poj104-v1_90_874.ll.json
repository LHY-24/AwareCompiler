{
  "program_id": "poj104-v1_90_874.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 2,
    "oneSuccessor": 5,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 8,
    "CriticalCount": 2,
    "NumEdges": 13,
    "const32Bit": 15,
    "const64Bit": 8,
    "numConstZeroes": 3,
    "numConstOnes": 11,
    "UncondBranches": 5,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 12,
    "NumBitCastInst": 8,
    "NumBrInst": 9,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 16,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 7,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 13,
    "TotalInsts": 78,
    "TotalMemInst": 49,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 32
  },
  "baseline_oz_instcount": 47,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--instcombine",
    "--loop-reroll",
    "--instsimplify",
    "--dce",
    "--inline",
    "--die",
    "--gvn",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--prune-eh",
    "--loop-simplifycfg",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--sroa",
    "--load-store-vectorizer",
    "--instsimplify",
    "--ipsccp",
    "--lower-expect",
    "--prune-eh",
    "--inline",
    "--instsimplify",
    "--correlated-propagation",
    "--simplifycfg",
    "--sroa",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--loop-interchange",
          "--globaldce",
          "--mldst-motion",
          "--loop-distribute",
          "--inline",
          "--licm",
          "--irce",
          "--sroa",
          "--loop-instsimplify",
          "--barrier",
          "--newgvn",
          "--dse",
          "--argpromotion",
          "--inject-tli-mappings",
          "--coro-cleanup",
          "--break-crit-edges",
          "--mem2reg",
          "--elim-avail-extern",
          "--loop-deletion",
          "--alignment-from-assumptions",
          "--jump-threading",
          "--hotcoldsplit",
          "--callsite-splitting",
          "--lower-matrix-intrinsics",
          "--aggressive-instcombine",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--loop-interchange",
      "--globaldce",
      "--mldst-motion",
      "--loop-distribute",
      "--inline",
      "--licm",
      "--irce",
      "--sroa",
      "--loop-instsimplify",
      "--barrier",
      "--newgvn",
      "--dse",
      "--argpromotion",
      "--inject-tli-mappings",
      "--coro-cleanup",
      "--break-crit-edges",
      "--mem2reg",
      "--elim-avail-extern",
      "--loop-deletion",
      "--alignment-from-assumptions",
      "--jump-threading",
      "--hotcoldsplit",
      "--callsite-splitting",
      "--lower-matrix-intrinsics",
      "--aggressive-instcombine",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+4.3%"
  }
}