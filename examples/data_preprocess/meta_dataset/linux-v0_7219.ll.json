{
  "program_id": "linux-v0_7219.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 55,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 13,
    "oneSuccessor": 47,
    "twoPred": 15,
    "twoPredOneSuc": 3,
    "twoEach": 9,
    "twoSuccessor": 27,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 97,
    "BeginPhi": 1,
    "BranchCount": 74,
    "returnInt": 24,
    "CriticalCount": 6,
    "NumEdges": 101,
    "const32Bit": 220,
    "const64Bit": 18,
    "numConstZeroes": 90,
    "numConstOnes": 89,
    "UncondBranches": 47,
    "binaryConstArg": 33,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 70,
    "NumAndInst": 9,
    "BlockMid": 8,
    "BlockLow": 90,
    "NumBitCastInst": 8,
    "NumBrInst": 74,
    "NumCallInst": 60,
    "NumGetElementPtrInst": 52,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 186,
    "NumMulInst": 0,
    "NumOrInst": 9,
    "NumPHIInst": 1,
    "NumRetInst": 24,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 99,
    "NumSubInst": 1,
    "NumTruncInst": 17,
    "NumXorInst": 4,
    "NumZExtInst": 21,
    "TotalBlocks": 98,
    "TotalInsts": 687,
    "TotalMemInst": 467,
    "TotalFuncs": 46,
    "ArgsPhi": 2,
    "testUnary": 314
  },
  "baseline_oz_instcount": 687,
  "knowledge_base_entry": [
    "--mergefunc",
    "--inline",
    "--nary-reassociate",
    "--loop-fusion",
    "--nary-reassociate",
    "--loop-reroll",
    "--instcombine",
    "--sccp",
    "--lower-expect",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "-loop-reduce",
    "--slp-vectorizer",
    "--bdce",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--load-store-vectorizer",
    "--mem2reg",
    "--reassociate",
    "--aggressive-instcombine",
    "--mergefunc",
    "--inline",
    "--nary-reassociate",
    "--loop-fusion",
    "--nary-reassociate",
    "--loop-reroll",
    "--instcombine",
    "--loop-instsimplify",
    "--early-cse",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--lower-expect",
    "--simplifycfg",
    "--adce",
    "--simplifycfg",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplify",
          "--jump-threading",
          "--simplifycfg",
          "--correlated-propagation",
          "--argpromotion",
          "--loop-load-elim",
          "--instnamer",
          "--partial-inliner",
          "--aggressive-instcombine",
          "--loop-instsimplify",
          "--strip-debug-declare",
          "--lower-constant-intrinsics",
          "--loop-data-prefetch",
          "--simple-loop-unswitch",
          "--loop-fusion",
          "--sancov",
          "--loop-reroll",
          "--add-discriminators",
          "--loweratomic",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplify",
      "--jump-threading",
      "--simplifycfg",
      "--correlated-propagation",
      "--argpromotion",
      "--loop-load-elim",
      "--instnamer",
      "--partial-inliner",
      "--aggressive-instcombine",
      "--loop-instsimplify",
      "--strip-debug-declare",
      "--lower-constant-intrinsics",
      "--loop-data-prefetch",
      "--simple-loop-unswitch",
      "--loop-fusion",
      "--sancov",
      "--loop-reroll",
      "--add-discriminators",
      "--loweratomic",
      "--newgvn"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}