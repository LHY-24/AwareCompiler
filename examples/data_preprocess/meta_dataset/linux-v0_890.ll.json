{
  "program_id": "linux-v0_890.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 13,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 2,
    "oneSuccessor": 16,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 43,
    "BeginPhi": 1,
    "BranchCount": 21,
    "returnInt": 1,
    "CriticalCount": 9,
    "NumEdges": 38,
    "const32Bit": 338,
    "const64Bit": 0,
    "numConstZeroes": 103,
    "numConstOnes": 111,
    "UncondBranches": 16,
    "binaryConstArg": 81,
    "NumAShrInst": 2,
    "NumAddInst": 0,
    "NumAllocaInst": 70,
    "NumAndInst": 54,
    "BlockMid": 16,
    "BlockLow": 28,
    "NumBitCastInst": 4,
    "NumBrInst": 21,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 209,
    "NumMulInst": 0,
    "NumOrInst": 38,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 16,
    "NumStoreInst": 145,
    "NumSubInst": 0,
    "NumTruncInst": 53,
    "NumXorInst": 0,
    "NumZExtInst": 93,
    "TotalBlocks": 44,
    "TotalInsts": 844,
    "TotalMemInst": 533,
    "TotalFuncs": 21,
    "ArgsPhi": 2,
    "testUnary": 430
  },
  "baseline_oz_instcount": 844,
  "knowledge_base_entry": [
    "--sccp",
    "--lower-expect",
    "--mergefunc",
    "--dce",
    "--simplifycfg",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--mem2reg",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--inline",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--simplifycfg",
    "--nary-reassociate",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--reassociate",
          "--correlated-propagation",
          "--irce",
          "--callsite-splitting",
          "--slsr",
          "--deadargelim",
          "--gvn-hoist",
          "--lower-constant-intrinsics",
          "--globaldce",
          "--barrier",
          "--reg2mem",
          "--nary-reassociate",
          "--dce",
          "--loop-vectorize",
          "--loop-interchange",
          "--lowerswitch",
          "--loop-simplifycfg",
          "--rewrite-statepoints-for-gc",
          "--loop-versioning",
          "--loop-sink",
          "--mergefunc",
          "--name-anon-globals",
          "--loop-simplify",
          "--simplifycfg",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+16.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--reassociate",
      "--correlated-propagation",
      "--irce",
      "--callsite-splitting",
      "--slsr",
      "--deadargelim",
      "--gvn-hoist",
      "--lower-constant-intrinsics",
      "--globaldce",
      "--barrier",
      "--reg2mem",
      "--nary-reassociate",
      "--dce",
      "--loop-vectorize",
      "--loop-interchange",
      "--lowerswitch",
      "--loop-simplifycfg",
      "--rewrite-statepoints-for-gc",
      "--loop-versioning",
      "--loop-sink",
      "--mergefunc",
      "--name-anon-globals",
      "--loop-simplify",
      "--simplifycfg",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+16.4%"
  }
}