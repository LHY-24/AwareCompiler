{
  "program_id": "linux-v0_12606.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 7,
    "oneSuccessor": 23,
    "twoPred": 9,
    "twoPredOneSuc": 4,
    "twoEach": 1,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 0,
    "BranchCount": 35,
    "returnInt": 25,
    "CriticalCount": 4,
    "NumEdges": 49,
    "const32Bit": 315,
    "const64Bit": 49,
    "numConstZeroes": 166,
    "numConstOnes": 153,
    "UncondBranches": 23,
    "binaryConstArg": 44,
    "NumAShrInst": 0,
    "NumAddInst": 25,
    "NumAllocaInst": 108,
    "NumAndInst": 8,
    "BlockMid": 16,
    "BlockLow": 55,
    "NumBitCastInst": 27,
    "NumBrInst": 35,
    "NumCallInst": 82,
    "NumGetElementPtrInst": 107,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 271,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 35,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 140,
    "NumSubInst": 22,
    "NumTruncInst": 6,
    "NumXorInst": 10,
    "NumZExtInst": 21,
    "TotalBlocks": 71,
    "TotalInsts": 936,
    "TotalMemInst": 708,
    "TotalFuncs": 51,
    "ArgsPhi": 0,
    "testUnary": 456
  },
  "baseline_oz_instcount": 927,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--loop-simplifycfg",
    "--ipsccp",
    "--dce",
    "--lower-expect",
    "--bdce",
    "--dse",
    "--dse",
    "--dce",
    "--sroa",
    "--indvars",
    "--loop-reroll",
    "--sroa",
    "--instcombine",
    "--loop-instsimplify",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--coro-split",
          "--deadargelim",
          "--flattencfg",
          "--strip-dead-prototypes",
          "--hotcoldsplit",
          "--reassociate",
          "--irce",
          "--elim-avail-extern",
          "--licm",
          "--coro-elide",
          "--name-anon-globals",
          "--loop-idiom",
          "--redundant-dbg-inst-elim",
          "--sink",
          "--prune-eh",
          "--ipsccp",
          "--loop-unroll-and-jam",
          "--globalsplit",
          "--called-value-propagation",
          "--aggressive-instcombine",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--coro-split",
      "--deadargelim",
      "--flattencfg",
      "--strip-dead-prototypes",
      "--hotcoldsplit",
      "--reassociate",
      "--irce",
      "--elim-avail-extern",
      "--licm",
      "--coro-elide",
      "--name-anon-globals",
      "--loop-idiom",
      "--redundant-dbg-inst-elim",
      "--sink",
      "--prune-eh",
      "--ipsccp",
      "--loop-unroll-and-jam",
      "--globalsplit",
      "--called-value-propagation",
      "--aggressive-instcombine",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}