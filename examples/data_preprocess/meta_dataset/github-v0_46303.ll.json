{
  "program_id": "github-v0_46303.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 2,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 0,
    "BranchCount": 5,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 8,
    "const32Bit": 15,
    "const64Bit": 0,
    "numConstZeroes": 6,
    "numConstOnes": 4,
    "UncondBranches": 2,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 5,
    "NumBitCastInst": 0,
    "NumBrInst": 5,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 10,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 6,
    "TotalInsts": 41,
    "TotalMemInst": 29,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 16
  },
  "baseline_oz_instcount": 41,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--jump-threading",
    "--gvn",
    "--bdce",
    "--aggressive-instcombine",
    "--inline",
    "--elim-avail-extern",
    "--dse",
    "--gvn-hoist",
    "--memcpyopt",
    "--early-cse",
    "--loop-fusion",
    "--simplifycfg",
    "--prune-eh",
    "--lower-expect",
    "--instsimplify",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--loop-guard-widening",
          "--aggressive-instcombine",
          "--scalarizer",
          "--early-cse-memssa",
          "--mldst-motion",
          "--ipconstprop",
          "--lowerswitch",
          "--loweratomic",
          "--lower-constant-intrinsics",
          "--float2int",
          "--loop-vectorize",
          "--lcssa",
          "--instnamer",
          "--dse",
          "--inferattrs",
          "--coro-split",
          "--loop-reroll",
          "--simplifycfg",
          "--lower-widenable-condition",
          "--inline",
          "--redundant-dbg-inst-elim",
          "--strip-debug-declare",
          "--post-inline-ee-instrument",
          "--deadargelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--loop-guard-widening",
      "--aggressive-instcombine",
      "--scalarizer",
      "--early-cse-memssa",
      "--mldst-motion",
      "--ipconstprop",
      "--lowerswitch",
      "--loweratomic",
      "--lower-constant-intrinsics",
      "--float2int",
      "--loop-vectorize",
      "--lcssa",
      "--instnamer",
      "--dse",
      "--inferattrs",
      "--coro-split",
      "--loop-reroll",
      "--simplifycfg",
      "--lower-widenable-condition",
      "--inline",
      "--redundant-dbg-inst-elim",
      "--strip-debug-declare",
      "--post-inline-ee-instrument",
      "--deadargelim"
    ],
    "performance_vs_Oz": "+4.9%"
  }
}