{
  "program_id": "github-v0_23123.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 2,
    "oneSuccessor": 14,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 8,
    "CriticalCount": 0,
    "NumEdges": 28,
    "const32Bit": 44,
    "const64Bit": 3,
    "numConstZeroes": 10,
    "numConstOnes": 33,
    "UncondBranches": 14,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 27,
    "NumAndInst": 4,
    "BlockMid": 4,
    "BlockLow": 20,
    "NumBitCastInst": 13,
    "NumBrInst": 21,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 7,
    "NumLShrInst": 1,
    "NumLoadInst": 50,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 46,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 24,
    "TotalInsts": 225,
    "TotalMemInst": 144,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 110
  },
  "baseline_oz_instcount": 225,
  "knowledge_base_entry": [
    "--flattencfg",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--die",
    "--load-store-vectorizer",
    "--mergefunc",
    "-loop-reduce",
    "--early-cse-memssa",
    "--loop-fusion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--sccp",
          "--nary-reassociate",
          "--canonicalize-aliases",
          "--break-crit-edges",
          "--constmerge",
          "--globalsplit",
          "--mergereturn",
          "--dce",
          "--jump-threading",
          "--irce",
          "--loop-data-prefetch",
          "--sink",
          "--loop-unswitch",
          "--loop-sink",
          "--argpromotion",
          "--slp-vectorizer",
          "--loop-predication",
          "--always-inline",
          "--aggressive-instcombine",
          "--loop-interchange",
          "--speculative-execution",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--sccp",
      "--nary-reassociate",
      "--canonicalize-aliases",
      "--break-crit-edges",
      "--constmerge",
      "--globalsplit",
      "--mergereturn",
      "--dce",
      "--jump-threading",
      "--irce",
      "--loop-data-prefetch",
      "--sink",
      "--loop-unswitch",
      "--loop-sink",
      "--argpromotion",
      "--slp-vectorizer",
      "--loop-predication",
      "--always-inline",
      "--aggressive-instcombine",
      "--loop-interchange",
      "--speculative-execution",
      "--adce"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}