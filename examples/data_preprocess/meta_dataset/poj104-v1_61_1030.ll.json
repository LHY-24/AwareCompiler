{
  "program_id": "poj104-v1_61_1030.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 0,
    "oneSuccessor": 6,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 14,
    "const32Bit": 37,
    "const64Bit": 17,
    "numConstZeroes": 7,
    "numConstOnes": 27,
    "UncondBranches": 6,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 18,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 17,
    "NumBitCastInst": 19,
    "NumBrInst": 10,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 31,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 20,
    "TotalInsts": 160,
    "TotalMemInst": 113,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 69
  },
  "baseline_oz_instcount": 43,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--flattencfg",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--gvn",
    "--aggressive-instcombine",
    "--dse",
    "--gvn-hoist",
    "--sccp",
    "--bdce",
    "--elim-avail-extern",
    "--dse",
    "--correlated-propagation",
    "--loop-reroll",
    "--lower-constant-intrinsics",
    "--bdce",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--inline",
    "--die",
    "--newgvn",
    "--sroa",
    "--ipsccp",
    "--aggressive-instcombine",
    "--ipsccp",
    "--mergefunc",
    "--mem2reg",
    "--reassociate",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--ee-instrument",
          "--loop-data-prefetch",
          "--canonicalize-aliases",
          "--strip",
          "--simplifycfg",
          "--loop-simplifycfg",
          "--inline",
          "--instsimplify",
          "--functionattrs",
          "--hotcoldsplit",
          "--constmerge",
          "--name-anon-globals",
          "-loop-reduce",
          "--inject-tli-mappings",
          "--sroa",
          "--loop-unswitch",
          "--mergefunc",
          "--lower-expect",
          "--loop-predication",
          "--lower-widenable-condition",
          "--mergereturn",
          "--always-inline",
          "--infer-address-spaces",
          "--partial-inliner",
          "--bdce",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+14.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--ee-instrument",
      "--loop-data-prefetch",
      "--canonicalize-aliases",
      "--strip",
      "--simplifycfg",
      "--loop-simplifycfg",
      "--inline",
      "--instsimplify",
      "--functionattrs",
      "--hotcoldsplit",
      "--constmerge",
      "--name-anon-globals",
      "-loop-reduce",
      "--inject-tli-mappings",
      "--sroa",
      "--loop-unswitch",
      "--mergefunc",
      "--lower-expect",
      "--loop-predication",
      "--lower-widenable-condition",
      "--mergereturn",
      "--always-inline",
      "--infer-address-spaces",
      "--partial-inliner",
      "--bdce",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+14.0%"
  }
}