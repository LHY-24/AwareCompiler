{
  "program_id": "poj104-v1_100_2091.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 5,
    "oneSuccessor": 23,
    "twoPred": 11,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 11,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 5,
    "CriticalCount": 5,
    "NumEdges": 45,
    "const32Bit": 32,
    "const64Bit": 28,
    "numConstZeroes": 25,
    "numConstOnes": 15,
    "UncondBranches": 23,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 36,
    "NumBitCastInst": 12,
    "NumBrInst": 34,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 37,
    "TotalInsts": 191,
    "TotalMemInst": 106,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 78
  },
  "baseline_oz_instcount": 234,
  "knowledge_base_entry": [
    "--loop-rotate",
    "--inline",
    "--die",
    "--load-store-vectorizer",
    "--mem2reg",
    "--newgvn",
    "--bdce",
    "--instcombine",
    "--simplifycfg",
    "--reassociate",
    "--early-cse",
    "--mem2reg",
    "--simplifycfg",
    "--reassociate",
    "--adce",
    "--sccp",
    "--newgvn",
    "--mem2reg",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--licm",
          "--loop-simplifycfg",
          "--mergeicmps",
          "--loop-unroll-and-jam",
          "--partial-inliner",
          "--sroa",
          "--bdce",
          "--lower-guard-intrinsic",
          "--loop-deletion",
          "--called-value-propagation",
          "--inline",
          "--prune-eh",
          "--ee-instrument",
          "--barrier",
          "--indvars",
          "--post-inline-ee-instrument",
          "--loop-versioning",
          "--alignment-from-assumptions",
          "--early-cse-memssa",
          "--aggressive-instcombine",
          "--callsite-splitting",
          "--simple-loop-unswitch",
          "--loop-data-prefetch",
          "--instsimplify",
          "--correlated-propagation",
          "--loop-simplify",
          "--redundant-dbg-inst-elim",
          "--sancov",
          "--inferattrs",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+56.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--licm",
      "--loop-simplifycfg",
      "--mergeicmps",
      "--loop-unroll-and-jam",
      "--partial-inliner",
      "--sroa",
      "--bdce",
      "--lower-guard-intrinsic",
      "--loop-deletion",
      "--called-value-propagation",
      "--inline",
      "--prune-eh",
      "--ee-instrument",
      "--barrier",
      "--indvars",
      "--post-inline-ee-instrument",
      "--loop-versioning",
      "--alignment-from-assumptions",
      "--early-cse-memssa",
      "--aggressive-instcombine",
      "--callsite-splitting",
      "--simple-loop-unswitch",
      "--loop-data-prefetch",
      "--instsimplify",
      "--correlated-propagation",
      "--loop-simplify",
      "--redundant-dbg-inst-elim",
      "--sancov",
      "--inferattrs",
      "--gvn"
    ],
    "performance_vs_Oz": "+56.8%"
  }
}