{
  "program_id": "github-v0_39225.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 2,
    "oneSuccessor": 6,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 1,
    "CriticalCount": 4,
    "NumEdges": 16,
    "const32Bit": 64,
    "const64Bit": 4,
    "numConstZeroes": 36,
    "numConstOnes": 27,
    "UncondBranches": 6,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 24,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 17,
    "NumBitCastInst": 1,
    "NumBrInst": 11,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 63,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 22,
    "TotalInsts": 188,
    "TotalMemInst": 152,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 97
  },
  "baseline_oz_instcount": 190,
  "knowledge_base_entry": [
    "--globalopt",
    "--aggressive-instcombine",
    "--flattencfg",
    "--simplifycfg",
    "--mem2reg",
    "--instcombine",
    "--slsr",
    "--gvn",
    "--nary-reassociate",
    "--newgvn",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-rotate",
          "--simple-loop-unswitch",
          "--nary-reassociate",
          "--coro-early",
          "--simplifycfg",
          "--separate-const-offset-from-gep",
          "--globalopt",
          "--lower-expect",
          "--lowerinvoke",
          "--coro-elide",
          "--hotcoldsplit",
          "--mldst-motion",
          "--ipconstprop",
          "--attributor",
          "--coro-cleanup",
          "--cross-dso-cfi",
          "--die",
          "--licm",
          "--loop-versioning",
          "--aggressive-instcombine",
          "--loweratomic",
          "--pgo-memop-opt",
          "--functionattrs",
          "--loop-data-prefetch",
          "--infer-address-spaces",
          "--loop-predication",
          "--rewrite-statepoints-for-gc",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-rotate",
      "--simple-loop-unswitch",
      "--nary-reassociate",
      "--coro-early",
      "--simplifycfg",
      "--separate-const-offset-from-gep",
      "--globalopt",
      "--lower-expect",
      "--lowerinvoke",
      "--coro-elide",
      "--hotcoldsplit",
      "--mldst-motion",
      "--ipconstprop",
      "--attributor",
      "--coro-cleanup",
      "--cross-dso-cfi",
      "--die",
      "--licm",
      "--loop-versioning",
      "--aggressive-instcombine",
      "--loweratomic",
      "--pgo-memop-opt",
      "--functionattrs",
      "--loop-data-prefetch",
      "--infer-address-spaces",
      "--loop-predication",
      "--rewrite-statepoints-for-gc",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}