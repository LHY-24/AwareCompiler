{
  "program_id": "github-v0_20937.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 2,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 1,
    "oneSuccessor": 2,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 3,
    "BeginPhi": 2,
    "BranchCount": 4,
    "returnInt": 2,
    "CriticalCount": 2,
    "NumEdges": 6,
    "const32Bit": 69,
    "const64Bit": 0,
    "numConstZeroes": 46,
    "numConstOnes": 5,
    "UncondBranches": 2,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 106,
    "NumAllocaInst": 0,
    "NumAndInst": 18,
    "BlockMid": 1,
    "BlockLow": 4,
    "NumBitCastInst": 0,
    "NumBrInst": 4,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 46,
    "NumICmpInst": 46,
    "NumLShrInst": 0,
    "NumLoadInst": 45,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 2,
    "NumShlInst": 2,
    "NumStoreInst": 1,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 89,
    "TotalBlocks": 5,
    "TotalInsts": 374,
    "TotalMemInst": 94,
    "TotalFuncs": 2,
    "ArgsPhi": 6,
    "testUnary": 136
  },
  "baseline_oz_instcount": 374,
  "knowledge_base_entry": [
    "--sink",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--globalopt",
    "--loweratomic",
    "--early-cse-memssa",
    "--nary-reassociate",
    "-loop-reduce",
    "--mergefunc",
    "--sroa",
    "--elim-avail-extern",
    "--lower-expect",
    "--gvn",
    "--prune-eh",
    "--sroa",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--bdce",
    "--sroa",
    "-loop-reduce",
    "--reassociate",
    "--gvn",
    "--instsimplify",
    "--adce",
    "--gvn",
    "--slp-vectorizer",
    "--mem2reg",
    "--adce",
    "--correlated-propagation",
    "--dse",
    "--aggressive-instcombine",
    "--ipsccp",
    "--correlated-propagation",
    "--dse",
    "--ipsccp",
    "--lower-expect",
    "--slp-vectorizer",
    "--newgvn",
    "--jump-threading",
    "--slsr",
    "--newgvn",
    "--ipsccp",
    "--correlated-propagation",
    "--dse",
    "--ipsccp",
    "--lower-expect",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--dse",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--mldst-motion",
    "--newgvn",
    "--licm",
    "--globalopt",
    "--lower-expect",
    "--correlated-propagation",
    "--adce",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--reassociate",
          "--slp-vectorizer",
          "--coro-split",
          "--lcssa",
          "--loop-distribute",
          "--deadargelim",
          "--sccp",
          "--gvn",
          "--rewrite-statepoints-for-gc",
          "--loop-versioning-licm",
          "--mergeicmps",
          "--hotcoldsplit",
          "--name-anon-globals",
          "--strip-dead-prototypes",
          "--attributor",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+15.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--reassociate",
      "--slp-vectorizer",
      "--coro-split",
      "--lcssa",
      "--loop-distribute",
      "--deadargelim",
      "--sccp",
      "--gvn",
      "--rewrite-statepoints-for-gc",
      "--loop-versioning-licm",
      "--mergeicmps",
      "--hotcoldsplit",
      "--name-anon-globals",
      "--strip-dead-prototypes",
      "--attributor",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+15.0%"
  }
}