{
  "program_id": "linux-v0_4163.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 2,
    "oneSuccessor": 6,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 14,
    "const32Bit": 13,
    "const64Bit": 1,
    "numConstZeroes": 3,
    "numConstOnes": 9,
    "UncondBranches": 6,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 10,
    "NumBitCastInst": 0,
    "NumBrInst": 10,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 11,
    "TotalInsts": 68,
    "TotalMemInst": 48,
    "TotalFuncs": 1,
    "ArgsPhi": 0,
    "testUnary": 35
  },
  "baseline_oz_instcount": 69,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--instcombine",
    "--lower-expect",
    "--adce",
    "--early-cse",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--loop-unroll-and-jam",
          "--coro-cleanup",
          "--callsite-splitting",
          "--lower-matrix-intrinsics",
          "--inferattrs",
          "--loop-distribute",
          "--separate-const-offset-from-gep",
          "--globalopt",
          "--load-store-vectorizer",
          "--alignment-from-assumptions",
          "--float2int",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--loop-unroll-and-jam",
      "--coro-cleanup",
      "--callsite-splitting",
      "--lower-matrix-intrinsics",
      "--inferattrs",
      "--loop-distribute",
      "--separate-const-offset-from-gep",
      "--globalopt",
      "--load-store-vectorizer",
      "--alignment-from-assumptions",
      "--float2int",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}