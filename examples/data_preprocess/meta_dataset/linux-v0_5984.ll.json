{
  "program_id": "linux-v0_5984.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 63,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 12,
    "oneSuccessor": 55,
    "twoPred": 18,
    "twoPredOneSuc": 2,
    "twoEach": 9,
    "twoSuccessor": 29,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 121,
    "BeginPhi": 1,
    "BranchCount": 84,
    "returnInt": 30,
    "CriticalCount": 7,
    "NumEdges": 123,
    "const32Bit": 340,
    "const64Bit": 18,
    "numConstZeroes": 151,
    "numConstOnes": 138,
    "UncondBranches": 55,
    "binaryConstArg": 19,
    "NumAShrInst": 1,
    "NumAddInst": 6,
    "NumAllocaInst": 105,
    "NumAndInst": 5,
    "BlockMid": 19,
    "BlockLow": 103,
    "NumBitCastInst": 43,
    "NumBrInst": 84,
    "NumCallInst": 83,
    "NumGetElementPtrInst": 97,
    "NumICmpInst": 26,
    "NumLShrInst": 1,
    "NumLoadInst": 274,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 36,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 149,
    "NumSubInst": 2,
    "NumTruncInst": 9,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 122,
    "TotalInsts": 959,
    "TotalMemInst": 708,
    "TotalFuncs": 56,
    "ArgsPhi": 2,
    "testUnary": 457
  },
  "baseline_oz_instcount": 958,
  "knowledge_base_entry": [
    "--lower-expect",
    "--elim-avail-extern",
    "--ipsccp",
    "--aggressive-instcombine",
    "--prune-eh",
    "--instcombine",
    "--bdce",
    "--ipsccp",
    "--instsimplify",
    "--dce",
    "--lower-expect",
    "--licm",
    "--simplifycfg",
    "--licm",
    "--loop-rotate",
    "--dse",
    "--instcombine",
    "--flattencfg",
    "--newgvn",
    "--slp-vectorizer",
    "--inline",
    "--ipsccp",
    "--ipsccp",
    "--sroa",
    "--adce",
    "--reassociate",
    "--dce",
    "--dse",
    "--jump-threading",
    "--bdce",
    "--aggressive-instcombine",
    "--prune-eh",
    "--early-cse",
    "--loop-fusion",
    "--early-cse",
    "--mldst-motion",
    "--mem2reg",
    "--flattencfg",
    "--newgvn",
    "--slp-vectorizer",
    "--inline",
    "--ipsccp",
    "--aggressive-instcombine",
    "--sroa",
    "--early-cse",
    "--prune-eh",
    "--early-cse",
    "--loop-fusion",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--bdce",
    "--ipsccp",
    "--gvn",
    "--loop-instsimplify",
    "--reassociate",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--partial-inliner",
          "--loop-deletion",
          "--lower-expect",
          "--sancov",
          "--indvars",
          "--die",
          "--callsite-splitting",
          "--libcalls-shrinkwrap",
          "--licm",
          "--ipsccp",
          "--separate-const-offset-from-gep",
          "--coro-early",
          "--ipconstprop",
          "--sccp",
          "--lowerinvoke",
          "--gvn-hoist",
          "--post-inline-ee-instrument",
          "--redundant-dbg-inst-elim",
          "--constprop",
          "--mldst-motion",
          "--slp-vectorizer",
          "--aggressive-instcombine",
          "--guard-widening",
          "--loop-versioning",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--partial-inliner",
      "--loop-deletion",
      "--lower-expect",
      "--sancov",
      "--indvars",
      "--die",
      "--callsite-splitting",
      "--libcalls-shrinkwrap",
      "--licm",
      "--ipsccp",
      "--separate-const-offset-from-gep",
      "--coro-early",
      "--ipconstprop",
      "--sccp",
      "--lowerinvoke",
      "--gvn-hoist",
      "--post-inline-ee-instrument",
      "--redundant-dbg-inst-elim",
      "--constprop",
      "--mldst-motion",
      "--slp-vectorizer",
      "--aggressive-instcombine",
      "--guard-widening",
      "--loop-versioning",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}