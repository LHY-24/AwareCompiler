{
  "program_id": "github-v0_48617.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 32,
    "const64Bit": 31,
    "numConstZeroes": 38,
    "numConstOnes": 18,
    "UncondBranches": 11,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 1,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 21,
    "TotalBlocks": 21,
    "TotalInsts": 168,
    "TotalMemInst": 96,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 80
  },
  "baseline_oz_instcount": 168,
  "knowledge_base_entry": [
    "--reassociate",
    "--early-cse-memssa",
    "--flattencfg",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--gvn-hoist",
    "--correlated-propagation",
    "--reassociate",
    "--dce",
    "--lower-constant-intrinsics",
    "--adce",
    "--mergefunc",
    "--jump-threading",
    "--sccp",
    "--jump-threading",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "-loop-reduce",
    "--early-cse",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--loop-fusion",
          "--die",
          "--early-cse-memssa",
          "--aggressive-instcombine",
          "--infer-address-spaces",
          "--coro-early",
          "--ipconstprop",
          "--loop-idiom",
          "--loop-rotate",
          "--sink",
          "--loop-unroll-and-jam",
          "--called-value-propagation",
          "--inferattrs",
          "--functionattrs",
          "--loop-unroll",
          "--always-inline",
          "--break-crit-edges",
          "--div-rem-pairs",
          "--forceattrs",
          "--insert-gcov-profiling",
          "--canonicalize-aliases",
          "--loop-reroll",
          "--elim-avail-extern",
          "--coro-cleanup",
          "--loop-interchange",
          "--deadargelim",
          "--strip-nondebug",
          "--barrier",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--loop-fusion",
      "--die",
      "--early-cse-memssa",
      "--aggressive-instcombine",
      "--infer-address-spaces",
      "--coro-early",
      "--ipconstprop",
      "--loop-idiom",
      "--loop-rotate",
      "--sink",
      "--loop-unroll-and-jam",
      "--called-value-propagation",
      "--inferattrs",
      "--functionattrs",
      "--loop-unroll",
      "--always-inline",
      "--break-crit-edges",
      "--div-rem-pairs",
      "--forceattrs",
      "--insert-gcov-profiling",
      "--canonicalize-aliases",
      "--loop-reroll",
      "--elim-avail-extern",
      "--coro-cleanup",
      "--loop-interchange",
      "--deadargelim",
      "--strip-nondebug",
      "--barrier",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+11.9%"
  }
}