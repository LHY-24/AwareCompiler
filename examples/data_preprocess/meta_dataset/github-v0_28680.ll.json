{
  "program_id": "github-v0_28680.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 0,
    "oneSuccessor": 26,
    "twoPred": 13,
    "twoPredOneSuc": 6,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 0,
    "BranchCount": 30,
    "returnInt": 34,
    "CriticalCount": 15,
    "NumEdges": 58,
    "const32Bit": 212,
    "const64Bit": 3,
    "numConstZeroes": 90,
    "numConstOnes": 74,
    "UncondBranches": 26,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 41,
    "NumAndInst": 3,
    "BlockMid": 12,
    "BlockLow": 29,
    "NumBitCastInst": 58,
    "NumBrInst": 30,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 236,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 103,
    "NumSubInst": 24,
    "NumTruncInst": 22,
    "NumXorInst": 0,
    "NumZExtInst": 41,
    "TotalBlocks": 41,
    "TotalInsts": 693,
    "TotalMemInst": 489,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 398
  },
  "baseline_oz_instcount": 693,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--bdce",
    "--lower-expect",
    "--globalopt",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--slp-vectorizer",
          "--correlated-propagation",
          "--strip",
          "--constmerge",
          "--sccp",
          "--scalarizer",
          "--dce",
          "-loop-reduce",
          "--loop-unroll",
          "--early-cse",
          "--alignment-from-assumptions",
          "--aggressive-instcombine",
          "--globalsplit",
          "--globalopt",
          "--pgo-memop-opt",
          "--argpromotion",
          "--loop-versioning-licm",
          "--insert-gcov-profiling",
          "--deadargelim",
          "--infer-address-spaces",
          "--adce",
          "--loop-predication",
          "--partial-inliner",
          "--hotcoldsplit",
          "--reassociate",
          "--called-value-propagation",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--slp-vectorizer",
      "--correlated-propagation",
      "--strip",
      "--constmerge",
      "--sccp",
      "--scalarizer",
      "--dce",
      "-loop-reduce",
      "--loop-unroll",
      "--early-cse",
      "--alignment-from-assumptions",
      "--aggressive-instcombine",
      "--globalsplit",
      "--globalopt",
      "--pgo-memop-opt",
      "--argpromotion",
      "--loop-versioning-licm",
      "--insert-gcov-profiling",
      "--deadargelim",
      "--infer-address-spaces",
      "--adce",
      "--loop-predication",
      "--partial-inliner",
      "--hotcoldsplit",
      "--reassociate",
      "--called-value-propagation",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+8.7%"
  }
}