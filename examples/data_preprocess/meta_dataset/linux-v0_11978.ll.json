{
  "program_id": "linux-v0_11978.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 103,
    "onePredOneSuc": 72,
    "onePredTwoSuc": 30,
    "oneSuccessor": 85,
    "twoPred": 21,
    "twoPredOneSuc": 6,
    "twoEach": 8,
    "twoSuccessor": 50,
    "morePreds": 14,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 168,
    "BeginPhi": 1,
    "BranchCount": 135,
    "returnInt": 46,
    "CriticalCount": 26,
    "NumEdges": 203,
    "const32Bit": 341,
    "const64Bit": 56,
    "numConstZeroes": 145,
    "numConstOnes": 155,
    "UncondBranches": 85,
    "binaryConstArg": 50,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 107,
    "NumAndInst": 23,
    "BlockMid": 10,
    "BlockLow": 159,
    "NumBitCastInst": 17,
    "NumBrInst": 135,
    "NumCallInst": 81,
    "NumGetElementPtrInst": 52,
    "NumICmpInst": 52,
    "NumLShrInst": 6,
    "NumLoadInst": 253,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 31,
    "NumSExtInst": 3,
    "NumSelectInst": 1,
    "NumShlInst": 2,
    "NumStoreInst": 159,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 7,
    "NumZExtInst": 21,
    "TotalBlocks": 169,
    "TotalInsts": 979,
    "TotalMemInst": 652,
    "TotalFuncs": 54,
    "ArgsPhi": 2,
    "testUnary": 412
  },
  "baseline_oz_instcount": 979,
  "knowledge_base_entry": [
    "--simple-loop-unswitch",
    "--newgvn",
    "-loop-reduce",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--slsr",
    "--gvn",
    "-loop-reduce",
    "--mergefunc",
    "--newgvn",
    "--early-cse-memssa",
    "--mldst-motion",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--bdce",
    "--ipsccp",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn",
          "--die",
          "--aggressive-instcombine",
          "--callsite-splitting",
          "--lower-widenable-condition",
          "--functionattrs",
          "--strip-dead-prototypes",
          "--infer-address-spaces",
          "--globalopt",
          "--loop-interchange",
          "--div-rem-pairs",
          "--inject-tli-mappings",
          "--speculative-execution",
          "--instcombine",
          "--dce",
          "--redundant-dbg-inst-elim",
          "--strip-nondebug",
          "--partial-inliner",
          "-loop-reduce",
          "--tailcallelim",
          "--alignment-from-assumptions",
          "--ee-instrument",
          "--loop-fusion",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn",
      "--die",
      "--aggressive-instcombine",
      "--callsite-splitting",
      "--lower-widenable-condition",
      "--functionattrs",
      "--strip-dead-prototypes",
      "--infer-address-spaces",
      "--globalopt",
      "--loop-interchange",
      "--div-rem-pairs",
      "--inject-tli-mappings",
      "--speculative-execution",
      "--instcombine",
      "--dce",
      "--redundant-dbg-inst-elim",
      "--strip-nondebug",
      "--partial-inliner",
      "-loop-reduce",
      "--tailcallelim",
      "--alignment-from-assumptions",
      "--ee-instrument",
      "--loop-fusion",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}