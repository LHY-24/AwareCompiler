{
  "program_id": "linux-v0_1743.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 20,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 3,
    "oneSuccessor": 19,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 9,
    "morePreds": 2,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 4,
    "BranchCount": 28,
    "returnInt": 10,
    "CriticalCount": 2,
    "NumEdges": 40,
    "const32Bit": 152,
    "const64Bit": 12,
    "numConstZeroes": 49,
    "numConstOnes": 49,
    "UncondBranches": 19,
    "binaryConstArg": 23,
    "NumAShrInst": 2,
    "NumAddInst": 6,
    "NumAllocaInst": 43,
    "NumAndInst": 7,
    "BlockMid": 6,
    "BlockLow": 46,
    "NumBitCastInst": 7,
    "NumBrInst": 28,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 101,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 4,
    "NumRetInst": 23,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 65,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 10,
    "TotalBlocks": 52,
    "TotalInsts": 396,
    "TotalMemInst": 286,
    "TotalFuncs": 34,
    "ArgsPhi": 8,
    "testUnary": 164
  },
  "baseline_oz_instcount": 396,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--loop-reroll",
    "--newgvn",
    "--dse",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--reassociate",
    "--mergefunc",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--mergefunc",
          "--simplifycfg",
          "--strip-debug-declare",
          "--coro-elide",
          "--callsite-splitting",
          "--prune-eh",
          "--correlated-propagation",
          "--consthoist",
          "--loop-interchange",
          "--loop-unswitch",
          "--lower-matrix-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--mergefunc",
      "--simplifycfg",
      "--strip-debug-declare",
      "--coro-elide",
      "--callsite-splitting",
      "--prune-eh",
      "--correlated-propagation",
      "--consthoist",
      "--loop-interchange",
      "--loop-unswitch",
      "--lower-matrix-intrinsics"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}