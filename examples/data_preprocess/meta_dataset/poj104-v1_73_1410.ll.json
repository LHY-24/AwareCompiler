{
  "program_id": "poj104-v1_73_1410.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 11,
    "oneSuccessor": 16,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 16,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 35,
    "BeginPhi": 0,
    "BranchCount": 32,
    "returnInt": 4,
    "CriticalCount": 12,
    "NumEdges": 48,
    "const32Bit": 26,
    "const64Bit": 60,
    "numConstZeroes": 53,
    "numConstOnes": 15,
    "UncondBranches": 16,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 34,
    "NumBitCastInst": 6,
    "NumBrInst": 32,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 68,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 34,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 35,
    "TotalInsts": 239,
    "TotalMemInst": 142,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 113
  },
  "baseline_oz_instcount": 124,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--mergefunc",
    "--flattencfg",
    "--inline",
    "--mem2reg",
    "--globalopt",
    "--flattencfg",
    "--simplifycfg",
    "--sroa",
    "--indvars",
    "--gvn",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--sroa",
    "--elim-avail-extern",
    "--prune-eh",
    "--aggressive-instcombine",
    "--instcombine",
    "--reassociate",
    "--licm",
    "--jump-threading",
    "--loop-reroll",
    "--instcombine",
    "--simplifycfg",
    "--reassociate",
    "--prune-eh",
    "--elim-avail-extern",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unswitch",
          "--attributor",
          "--simplifycfg",
          "--gvn",
          "--infer-address-spaces",
          "--loop-reroll",
          "--ipsccp",
          "--libcalls-shrinkwrap",
          "--gvn-hoist",
          "--adce",
          "--slp-vectorizer",
          "--functionattrs",
          "--reassociate",
          "--guard-widening",
          "--mergereturn",
          "--memcpyopt",
          "--die",
          "--loop-load-elim",
          "--loop-sink",
          "--indvars",
          "--loop-idiom",
          "--loop-rotate",
          "--loop-unroll",
          "--constmerge",
          "--coro-split",
          "--strip-dead-prototypes",
          "--instcombine",
          "--pgo-memop-opt",
          "--loop-data-prefetch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+26.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unswitch",
      "--attributor",
      "--simplifycfg",
      "--gvn",
      "--infer-address-spaces",
      "--loop-reroll",
      "--ipsccp",
      "--libcalls-shrinkwrap",
      "--gvn-hoist",
      "--adce",
      "--slp-vectorizer",
      "--functionattrs",
      "--reassociate",
      "--guard-widening",
      "--mergereturn",
      "--memcpyopt",
      "--die",
      "--loop-load-elim",
      "--loop-sink",
      "--indvars",
      "--loop-idiom",
      "--loop-rotate",
      "--loop-unroll",
      "--constmerge",
      "--coro-split",
      "--strip-dead-prototypes",
      "--instcombine",
      "--pgo-memop-opt",
      "--loop-data-prefetch"
    ],
    "performance_vs_Oz": "+26.6%"
  }
}