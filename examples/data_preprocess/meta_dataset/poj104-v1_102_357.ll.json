{
  "program_id": "poj104-v1_102_357.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 7,
    "oneSuccessor": 25,
    "twoPred": 12,
    "twoPredOneSuc": 7,
    "twoEach": 5,
    "twoSuccessor": 12,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 40,
    "BeginPhi": 0,
    "BranchCount": 37,
    "returnInt": 6,
    "CriticalCount": 7,
    "NumEdges": 49,
    "const32Bit": 46,
    "const64Bit": 15,
    "numConstZeroes": 14,
    "numConstOnes": 34,
    "UncondBranches": 25,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 36,
    "NumBitCastInst": 12,
    "NumBrInst": 37,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 72,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 22,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 35,
    "NumSubInst": 6,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 40,
    "TotalInsts": 283,
    "TotalMemInst": 168,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 129
  },
  "baseline_oz_instcount": 129,
  "knowledge_base_entry": [
    "--instsimplify",
    "--gvn-hoist",
    "--globalopt",
    "--jump-threading",
    "--newgvn",
    "--memcpyopt",
    "--gvn",
    "--correlated-propagation",
    "--globalopt",
    "--sroa",
    "--inline",
    "--sccp",
    "--early-cse-memssa",
    "--ipsccp",
    "--simplifycfg",
    "--flattencfg",
    "--gvn",
    "--ipsccp",
    "--simplifycfg",
    "--dce",
    "--early-cse",
    "--gvn-hoist",
    "--simplifycfg",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--correlated-propagation",
    "--simplifycfg",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--dse",
          "--inferattrs",
          "--loop-load-elim",
          "--mldst-motion",
          "--loop-interchange",
          "--strip",
          "--loop-data-prefetch",
          "--partial-inliner",
          "--sroa",
          "--constmerge",
          "--canonicalize-aliases",
          "--slsr",
          "--instsimplify",
          "--gvn",
          "--loop-simplifycfg",
          "--sancov",
          "--lower-expect",
          "--infer-address-spaces",
          "--redundant-dbg-inst-elim",
          "--scalarizer",
          "--coro-split",
          "--early-cse-memssa",
          "--coro-cleanup",
          "--ee-instrument",
          "--barrier",
          "--mergeicmps",
          "--loop-simplify",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--dse",
      "--inferattrs",
      "--loop-load-elim",
      "--mldst-motion",
      "--loop-interchange",
      "--strip",
      "--loop-data-prefetch",
      "--partial-inliner",
      "--sroa",
      "--constmerge",
      "--canonicalize-aliases",
      "--slsr",
      "--instsimplify",
      "--gvn",
      "--loop-simplifycfg",
      "--sancov",
      "--lower-expect",
      "--infer-address-spaces",
      "--redundant-dbg-inst-elim",
      "--scalarizer",
      "--coro-split",
      "--early-cse-memssa",
      "--coro-cleanup",
      "--ee-instrument",
      "--barrier",
      "--mergeicmps",
      "--loop-simplify",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}