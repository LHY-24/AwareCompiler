{
  "program_id": "opencv-v0_74.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 8,
    "onePred": 40,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 23,
    "oneSuccessor": 15,
    "twoPred": 16,
    "twoPredOneSuc": 10,
    "twoEach": 5,
    "twoSuccessor": 34,
    "morePreds": 3,
    "BB03Phi": 9,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 9,
    "BranchCount": 25,
    "returnInt": 0,
    "CriticalCount": 28,
    "NumEdges": 83,
    "const32Bit": 63,
    "const64Bit": 71,
    "numConstZeroes": 59,
    "numConstOnes": 13,
    "UncondBranches": 15,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 8,
    "NumAndInst": 6,
    "BlockMid": 2,
    "BlockLow": 65,
    "NumBitCastInst": 15,
    "NumBrInst": 25,
    "NumCallInst": 57,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 12,
    "NumLShrInst": 2,
    "NumLoadInst": 13,
    "NumMulInst": 6,
    "NumOrInst": 1,
    "NumPHIInst": 15,
    "NumRetInst": 7,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 2,
    "NumStoreInst": 15,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 67,
    "TotalInsts": 290,
    "TotalMemInst": 136,
    "TotalFuncs": 19,
    "ArgsPhi": 35,
    "testUnary": 60
  },
  "baseline_oz_instcount": 290,
  "knowledge_base_entry": [
    "--ipsccp",
    "--gvn-hoist",
    "--instcombine",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--instsimplify",
    "--globalopt",
    "--dse",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--instcombine",
    "--bdce",
    "--mem2reg",
    "--loop-simplifycfg",
    "--bdce",
    "--mem2reg",
    "--dse",
    "--load-store-vectorizer",
    "--jump-threading",
    "--slsr",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--inferattrs",
          "--flattencfg",
          "--simplifycfg",
          "--loop-versioning",
          "--lowerswitch",
          "--loop-rotate",
          "--coro-early",
          "--loop-distribute",
          "--adce",
          "--insert-gcov-profiling",
          "--rpo-functionattrs",
          "--hotcoldsplit",
          "--gvn-hoist",
          "--strip-debug-declare",
          "--tailcallelim",
          "--loweratomic",
          "--lower-matrix-intrinsics",
          "--loop-deletion",
          "--coro-split",
          "--jump-threading",
          "--mergeicmps",
          "--rewrite-statepoints-for-gc",
          "--cross-dso-cfi",
          "--sancov",
          "--loop-sink",
          "--speculative-execution",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+30.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--inferattrs",
      "--flattencfg",
      "--simplifycfg",
      "--loop-versioning",
      "--lowerswitch",
      "--loop-rotate",
      "--coro-early",
      "--loop-distribute",
      "--adce",
      "--insert-gcov-profiling",
      "--rpo-functionattrs",
      "--hotcoldsplit",
      "--gvn-hoist",
      "--strip-debug-declare",
      "--tailcallelim",
      "--loweratomic",
      "--lower-matrix-intrinsics",
      "--loop-deletion",
      "--coro-split",
      "--jump-threading",
      "--mergeicmps",
      "--rewrite-statepoints-for-gc",
      "--cross-dso-cfi",
      "--sancov",
      "--loop-sink",
      "--speculative-execution",
      "--constmerge"
    ],
    "performance_vs_Oz": "+30.3%"
  }
}