{
  "program_id": "github-v0_6805.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 4,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 6,
    "const32Bit": 21,
    "const64Bit": 2,
    "numConstZeroes": 5,
    "numConstOnes": 14,
    "UncondBranches": 2,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 8,
    "NumBitCastInst": 0,
    "NumBrInst": 4,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 11,
    "TotalInsts": 75,
    "TotalMemInst": 51,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 38
  },
  "baseline_oz_instcount": 75,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--jump-threading",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--instcombine",
    "--lower-expect",
    "--loop-rotate",
    "--dse",
    "--lower-expect",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--flattencfg",
    "--licm",
    "--early-cse",
    "--licm",
    "--instsimplify",
    "--gvn-hoist",
    "--newgvn",
    "--mergefunc",
    "--reassociate",
    "--instcombine",
    "--aggressive-instcombine",
    "--licm",
    "--early-cse",
    "--flattencfg",
    "--inline",
    "--bdce",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-sink",
          "--slp-vectorizer",
          "--slsr",
          "--lowerswitch",
          "--die",
          "--pgo-memop-opt",
          "--jump-threading",
          "--lower-widenable-condition",
          "--loop-instsimplify",
          "--dse",
          "--scalarizer",
          "--loop-rotate",
          "--loop-interchange",
          "--instcombine",
          "--ipsccp",
          "--lower-matrix-intrinsics",
          "--aggressive-instcombine",
          "--elim-avail-extern",
          "--mergefunc",
          "--sccp",
          "--constprop",
          "--early-cse",
          "--gvn-hoist",
          "--rewrite-statepoints-for-gc",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-sink",
      "--slp-vectorizer",
      "--slsr",
      "--lowerswitch",
      "--die",
      "--pgo-memop-opt",
      "--jump-threading",
      "--lower-widenable-condition",
      "--loop-instsimplify",
      "--dse",
      "--scalarizer",
      "--loop-rotate",
      "--loop-interchange",
      "--instcombine",
      "--ipsccp",
      "--lower-matrix-intrinsics",
      "--aggressive-instcombine",
      "--elim-avail-extern",
      "--mergefunc",
      "--sccp",
      "--constprop",
      "--early-cse",
      "--gvn-hoist",
      "--rewrite-statepoints-for-gc",
      "--indvars"
    ],
    "performance_vs_Oz": "+5.3%"
  }
}