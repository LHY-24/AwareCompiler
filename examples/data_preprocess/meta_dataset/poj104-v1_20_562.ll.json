{
  "program_id": "poj104-v1_20_562.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 1,
    "oneSuccessor": 15,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 8,
    "CriticalCount": 1,
    "NumEdges": 27,
    "const32Bit": 35,
    "const64Bit": 31,
    "numConstZeroes": 14,
    "numConstOnes": 27,
    "UncondBranches": 15,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 25,
    "NumBitCastInst": 18,
    "NumBrInst": 21,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 45,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 4,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 27,
    "TotalInsts": 205,
    "TotalMemInst": 127,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 91
  },
  "baseline_oz_instcount": 95,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--newgvn",
    "--loop-reroll",
    "--nary-reassociate",
    "--ipsccp",
    "--loop-simplifycfg",
    "--slsr",
    "--slp-vectorizer",
    "--slsr",
    "--early-cse",
    "--die",
    "--early-cse-memssa",
    "--globalopt",
    "--instcombine",
    "--reassociate",
    "--instcombine",
    "--die",
    "--early-cse-memssa",
    "--globalopt",
    "--instcombine",
    "--sroa",
    "--simplifycfg",
    "--elim-avail-extern",
    "--reassociate",
    "--gvn-hoist",
    "--instcombine",
    "--instsimplify",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--gvn",
          "--lowerinvoke",
          "--loop-guard-widening",
          "--forceattrs",
          "--loop-instsimplify",
          "--argpromotion",
          "--mergefunc",
          "--lower-widenable-condition",
          "--globalsplit",
          "--guard-widening",
          "--loop-load-elim",
          "--load-store-vectorizer",
          "--instcombine",
          "--sccp",
          "--pgo-memop-opt",
          "--add-discriminators",
          "--cross-dso-cfi",
          "--loop-unroll-and-jam",
          "--ipsccp",
          "--partial-inliner",
          "--div-rem-pairs",
          "--slsr",
          "--loop-deletion",
          "--simplifycfg",
          "--flattencfg",
          "--coro-cleanup",
          "--strip-nondebug",
          "--inject-tli-mappings",
          "--coro-elide"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--gvn",
      "--lowerinvoke",
      "--loop-guard-widening",
      "--forceattrs",
      "--loop-instsimplify",
      "--argpromotion",
      "--mergefunc",
      "--lower-widenable-condition",
      "--globalsplit",
      "--guard-widening",
      "--loop-load-elim",
      "--load-store-vectorizer",
      "--instcombine",
      "--sccp",
      "--pgo-memop-opt",
      "--add-discriminators",
      "--cross-dso-cfi",
      "--loop-unroll-and-jam",
      "--ipsccp",
      "--partial-inliner",
      "--div-rem-pairs",
      "--slsr",
      "--loop-deletion",
      "--simplifycfg",
      "--flattencfg",
      "--coro-cleanup",
      "--strip-nondebug",
      "--inject-tli-mappings",
      "--coro-elide"
    ],
    "performance_vs_Oz": "+3.2%"
  }
}