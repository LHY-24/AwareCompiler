{
  "program_id": "linux-v0_2392.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 10,
    "oneSuccessor": 26,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 17,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 66,
    "BeginPhi": 0,
    "BranchCount": 43,
    "returnInt": 10,
    "CriticalCount": 7,
    "NumEdges": 60,
    "const32Bit": 284,
    "const64Bit": 25,
    "numConstZeroes": 133,
    "numConstOnes": 102,
    "UncondBranches": 26,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 74,
    "NumAndInst": 2,
    "BlockMid": 16,
    "BlockLow": 50,
    "NumBitCastInst": 19,
    "NumBrInst": 43,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 114,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 255,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 111,
    "NumSubInst": 5,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 66,
    "TotalInsts": 763,
    "TotalMemInst": 602,
    "TotalFuncs": 42,
    "ArgsPhi": 0,
    "testUnary": 373
  },
  "baseline_oz_instcount": 763,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--gvn",
    "--memcpyopt",
    "--inline",
    "--prune-eh",
    "--reassociate",
    "--bdce",
    "--ipsccp",
    "--mergefunc",
    "--gvn-hoist",
    "--newgvn",
    "--inline",
    "--memcpyopt",
    "--early-cse",
    "--loop-rotate",
    "--mem2reg",
    "--globalopt",
    "--licm",
    "--die",
    "--aggressive-instcombine",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--loop-unswitch",
          "--ipconstprop",
          "--name-anon-globals",
          "--mergefunc",
          "--insert-gcov-profiling",
          "--loop-interchange",
          "--loop-instsimplify",
          "--globaldce",
          "--loop-simplifycfg",
          "--speculative-execution",
          "--coro-cleanup",
          "--instsimplify",
          "--globalopt",
          "--attributor",
          "--ee-instrument",
          "--functionattrs",
          "--memcpyopt",
          "--jump-threading",
          "--add-discriminators",
          "--lowerswitch",
          "--loop-rotate",
          "--sccp",
          "--dce",
          "--bdce",
          "--simple-loop-unswitch",
          "--strip",
          "--irce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--loop-unswitch",
      "--ipconstprop",
      "--name-anon-globals",
      "--mergefunc",
      "--insert-gcov-profiling",
      "--loop-interchange",
      "--loop-instsimplify",
      "--globaldce",
      "--loop-simplifycfg",
      "--speculative-execution",
      "--coro-cleanup",
      "--instsimplify",
      "--globalopt",
      "--attributor",
      "--ee-instrument",
      "--functionattrs",
      "--memcpyopt",
      "--jump-threading",
      "--add-discriminators",
      "--lowerswitch",
      "--loop-rotate",
      "--sccp",
      "--dce",
      "--bdce",
      "--simple-loop-unswitch",
      "--strip",
      "--irce"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}