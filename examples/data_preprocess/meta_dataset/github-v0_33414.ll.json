{
  "program_id": "github-v0_33414.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 57,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 14,
    "oneSuccessor": 54,
    "twoPred": 26,
    "twoPredOneSuc": 10,
    "twoEach": 16,
    "twoSuccessor": 30,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 85,
    "BeginPhi": 2,
    "BranchCount": 84,
    "returnInt": 1,
    "CriticalCount": 11,
    "NumEdges": 114,
    "const32Bit": 184,
    "const64Bit": 27,
    "numConstZeroes": 100,
    "numConstOnes": 91,
    "UncondBranches": 54,
    "binaryConstArg": 34,
    "NumAShrInst": 0,
    "NumAddInst": 24,
    "NumAllocaInst": 34,
    "NumAndInst": 2,
    "BlockMid": 9,
    "BlockLow": 78,
    "NumBitCastInst": 10,
    "NumBrInst": 84,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 32,
    "NumLShrInst": 3,
    "NumLoadInst": 193,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 2,
    "NumSExtInst": 6,
    "NumSelectInst": 2,
    "NumShlInst": 9,
    "NumStoreInst": 144,
    "NumSubInst": 20,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 19,
    "TotalBlocks": 87,
    "TotalInsts": 672,
    "TotalMemInst": 445,
    "TotalFuncs": 4,
    "ArgsPhi": 4,
    "testUnary": 270
  },
  "baseline_oz_instcount": 673,
  "knowledge_base_entry": [
    "--scalarizer",
    "--instcombine",
    "--ipsccp",
    "--die",
    "--jump-threading",
    "--sccp",
    "--early-cse",
    "--gvn",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--instsimplify",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--ipconstprop",
          "--sccp",
          "--sroa",
          "--lowerinvoke",
          "--argpromotion",
          "--dse",
          "--lower-expect",
          "--mergereturn",
          "--strip-nondebug",
          "--strip-dead-prototypes",
          "--hotcoldsplit",
          "--pgo-memop-opt",
          "--guard-widening",
          "--canonicalize-aliases",
          "--mergeicmps",
          "--loop-unroll-and-jam",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--ipconstprop",
      "--sccp",
      "--sroa",
      "--lowerinvoke",
      "--argpromotion",
      "--dse",
      "--lower-expect",
      "--mergereturn",
      "--strip-nondebug",
      "--strip-dead-prototypes",
      "--hotcoldsplit",
      "--pgo-memop-opt",
      "--guard-widening",
      "--canonicalize-aliases",
      "--mergeicmps",
      "--loop-unroll-and-jam",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}