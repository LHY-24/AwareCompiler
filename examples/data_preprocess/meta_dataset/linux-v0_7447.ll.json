{
  "program_id": "linux-v0_7447.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 64,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 13,
    "oneSuccessor": 59,
    "twoPred": 13,
    "twoPredOneSuc": 7,
    "twoEach": 2,
    "twoSuccessor": 21,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 103,
    "BeginPhi": 0,
    "BranchCount": 78,
    "returnInt": 20,
    "CriticalCount": 7,
    "NumEdges": 120,
    "const32Bit": 368,
    "const64Bit": 13,
    "numConstZeroes": 152,
    "numConstOnes": 126,
    "UncondBranches": 59,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 82,
    "NumAndInst": 8,
    "BlockMid": 14,
    "BlockLow": 89,
    "NumBitCastInst": 41,
    "NumBrInst": 78,
    "NumCallInst": 64,
    "NumGetElementPtrInst": 105,
    "NumICmpInst": 23,
    "NumLShrInst": 4,
    "NumLoadInst": 226,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 136,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 8,
    "NumZExtInst": 4,
    "TotalBlocks": 103,
    "TotalInsts": 818,
    "TotalMemInst": 613,
    "TotalFuncs": 45,
    "ArgsPhi": 0,
    "testUnary": 363
  },
  "baseline_oz_instcount": 818,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--gvn",
    "--early-cse-memssa",
    "--ipsccp",
    "--instcombine",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--lower-expect",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--gvn",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--correlated-propagation",
    "--early-cse",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--mergefunc",
    "--sroa",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--early-cse",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--indvars",
    "-loop-reduce",
    "--mergefunc",
    "--gvn",
    "--early-cse-memssa",
    "--ipsccp",
    "--instcombine",
    "--load-store-vectorizer",
    "--newgvn",
    "--loop-deletion",
    "--gvn",
    "--elim-avail-extern",
    "--simplifycfg",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--adce",
          "--sink",
          "--strip-nondebug",
          "--loop-simplifycfg",
          "--loop-load-elim",
          "--forceattrs",
          "--lcssa",
          "--guard-widening",
          "--pgo-memop-opt",
          "--loop-idiom",
          "--globaldce",
          "--reassociate",
          "--die",
          "--mem2reg",
          "--strip",
          "--always-inline",
          "--div-rem-pairs",
          "--lower-matrix-intrinsics",
          "--instnamer",
          "--coro-cleanup",
          "--mergefunc",
          "--globalsplit",
          "--loop-unroll-and-jam",
          "--irce",
          "--ipsccp",
          "--lower-widenable-condition"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--adce",
      "--sink",
      "--strip-nondebug",
      "--loop-simplifycfg",
      "--loop-load-elim",
      "--forceattrs",
      "--lcssa",
      "--guard-widening",
      "--pgo-memop-opt",
      "--loop-idiom",
      "--globaldce",
      "--reassociate",
      "--die",
      "--mem2reg",
      "--strip",
      "--always-inline",
      "--div-rem-pairs",
      "--lower-matrix-intrinsics",
      "--instnamer",
      "--coro-cleanup",
      "--mergefunc",
      "--globalsplit",
      "--loop-unroll-and-jam",
      "--irce",
      "--ipsccp",
      "--lower-widenable-condition"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}