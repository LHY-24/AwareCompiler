{
  "program_id": "linux-v0_6406.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 38,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 4,
    "oneSuccessor": 37,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 8,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 70,
    "BeginPhi": 0,
    "BranchCount": 43,
    "returnInt": 24,
    "CriticalCount": 4,
    "NumEdges": 77,
    "const32Bit": 227,
    "const64Bit": 7,
    "numConstZeroes": 109,
    "numConstOnes": 60,
    "UncondBranches": 37,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 50,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 65,
    "NumBitCastInst": 6,
    "NumBrInst": 43,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 121,
    "NumMulInst": 1,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 73,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 70,
    "TotalInsts": 440,
    "TotalMemInst": 330,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 191
  },
  "baseline_oz_instcount": 442,
  "knowledge_base_entry": [
    "--die",
    "--ipsccp",
    "--flattencfg",
    "--inline",
    "--mergefunc",
    "--early-cse-memssa",
    "--reassociate",
    "--gvn-hoist",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-interchange",
          "--cross-dso-cfi",
          "--instnamer",
          "--loop-simplify",
          "--lower-guard-intrinsic",
          "--early-cse-memssa",
          "--hotcoldsplit",
          "--dce",
          "--loweratomic",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-interchange",
      "--cross-dso-cfi",
      "--instnamer",
      "--loop-simplify",
      "--lower-guard-intrinsic",
      "--early-cse-memssa",
      "--hotcoldsplit",
      "--dce",
      "--loweratomic",
      "--float2int"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}