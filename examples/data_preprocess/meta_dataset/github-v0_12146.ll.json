{
  "program_id": "github-v0_12146.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 1,
    "oneSuccessor": 16,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 16,
    "CriticalCount": 1,
    "NumEdges": 30,
    "const32Bit": 74,
    "const64Bit": 4,
    "numConstZeroes": 45,
    "numConstOnes": 28,
    "UncondBranches": 16,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 21,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 22,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 55,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 7,
    "NumTruncInst": 8,
    "NumXorInst": 2,
    "NumZExtInst": 0,
    "TotalBlocks": 27,
    "TotalInsts": 233,
    "TotalMemInst": 155,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 100
  },
  "baseline_oz_instcount": 233,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--correlated-propagation",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--mem2reg",
    "--lower-expect",
    "--instsimplify",
    "--bdce",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--dce",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--libcalls-shrinkwrap",
          "--sink",
          "--hotcoldsplit",
          "--correlated-propagation",
          "--sancov",
          "--rpo-functionattrs",
          "--aggressive-instcombine",
          "--tailcallelim",
          "--early-cse-memssa",
          "--called-value-propagation",
          "--partially-inline-libcalls",
          "--ipsccp",
          "--callsite-splitting",
          "--indvars",
          "--gvn",
          "--sroa",
          "--lower-widenable-condition",
          "--lower-expect",
          "--rewrite-statepoints-for-gc",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--libcalls-shrinkwrap",
      "--sink",
      "--hotcoldsplit",
      "--correlated-propagation",
      "--sancov",
      "--rpo-functionattrs",
      "--aggressive-instcombine",
      "--tailcallelim",
      "--early-cse-memssa",
      "--called-value-propagation",
      "--partially-inline-libcalls",
      "--ipsccp",
      "--callsite-splitting",
      "--indvars",
      "--gvn",
      "--sroa",
      "--lower-widenable-condition",
      "--lower-expect",
      "--rewrite-statepoints-for-gc",
      "--float2int"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}