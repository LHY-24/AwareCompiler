{
  "program_id": "github-v0_4459.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 6,
    "returnInt": 10,
    "CriticalCount": 1,
    "NumEdges": 8,
    "const32Bit": 36,
    "const64Bit": 0,
    "numConstZeroes": 3,
    "numConstOnes": 32,
    "UncondBranches": 4,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 31,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 25,
    "NumBitCastInst": 2,
    "NumBrInst": 6,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 25,
    "TotalInsts": 131,
    "TotalMemInst": 94,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 52
  },
  "baseline_oz_instcount": 132,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--globaldce",
    "--ipsccp",
    "--loweratomic",
    "--aggressive-instcombine",
    "--bdce",
    "--load-store-vectorizer",
    "--adce",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--early-cse",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simplifycfg",
          "--mergeicmps",
          "--mergefunc",
          "--partial-inliner",
          "--scalarizer",
          "--alignment-from-assumptions",
          "--rewrite-statepoints-for-gc",
          "--coro-early",
          "--dce",
          "--instcombine",
          "--constmerge",
          "--globalopt",
          "--called-value-propagation",
          "--ee-instrument",
          "--partially-inline-libcalls",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+36.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simplifycfg",
      "--mergeicmps",
      "--mergefunc",
      "--partial-inliner",
      "--scalarizer",
      "--alignment-from-assumptions",
      "--rewrite-statepoints-for-gc",
      "--coro-early",
      "--dce",
      "--instcombine",
      "--constmerge",
      "--globalopt",
      "--called-value-propagation",
      "--ee-instrument",
      "--partially-inline-libcalls",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+36.4%"
  }
}