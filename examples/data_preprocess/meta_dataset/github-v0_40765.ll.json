{
  "program_id": "github-v0_40765.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 38,
    "const64Bit": 60,
    "numConstZeroes": 69,
    "numConstOnes": 22,
    "UncondBranches": 15,
    "binaryConstArg": 11,
    "NumAShrInst": 1,
    "NumAddInst": 14,
    "NumAllocaInst": 11,
    "NumAndInst": 4,
    "BlockMid": 8,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 2,
    "NumTruncInst": 13,
    "NumXorInst": 0,
    "NumZExtInst": 28,
    "TotalBlocks": 27,
    "TotalInsts": 217,
    "TotalMemInst": 117,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 97
  },
  "baseline_oz_instcount": 217,
  "knowledge_base_entry": [
    "--float2int",
    "--newgvn",
    "--jump-threading",
    "--aggressive-instcombine",
    "--dse",
    "--globalopt",
    "--instsimplify",
    "--prune-eh",
    "--lower-expect",
    "--slp-vectorizer",
    "--dse",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--reg2mem",
          "--loop-fusion",
          "--scalarizer",
          "--simple-loop-unswitch",
          "--div-rem-pairs",
          "--infer-address-spaces",
          "--loop-instsimplify",
          "--libcalls-shrinkwrap",
          "--aggressive-instcombine",
          "--hotcoldsplit",
          "--post-inline-ee-instrument",
          "--loweratomic",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+15.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--reg2mem",
      "--loop-fusion",
      "--scalarizer",
      "--simple-loop-unswitch",
      "--div-rem-pairs",
      "--infer-address-spaces",
      "--loop-instsimplify",
      "--libcalls-shrinkwrap",
      "--aggressive-instcombine",
      "--hotcoldsplit",
      "--post-inline-ee-instrument",
      "--loweratomic",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+15.7%"
  }
}