{
  "program_id": "poj104-v1_50_1647.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 11,
    "oneSuccessor": 12,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 16,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 3,
    "CriticalCount": 16,
    "NumEdges": 44,
    "const32Bit": 40,
    "const64Bit": 18,
    "numConstZeroes": 10,
    "numConstOnes": 13,
    "UncondBranches": 12,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 29,
    "NumBitCastInst": 16,
    "NumBrInst": 28,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 31,
    "TotalInsts": 150,
    "TotalMemInst": 78,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 56
  },
  "baseline_oz_instcount": 57,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--gvn",
    "--indvars",
    "--slp-vectorizer",
    "--inline",
    "--load-store-vectorizer",
    "--mem2reg",
    "--slp-vectorizer",
    "--jump-threading",
    "--instcombine",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--mem2reg",
    "--adce",
    "--newgvn",
    "--loop-simplifycfg",
    "--slsr",
    "--simplifycfg",
    "--die",
    "--dse",
    "--die",
    "--aggressive-instcombine",
    "--early-cse",
    "--correlated-propagation",
    "--bdce",
    "--sroa",
    "--mldst-motion",
    "--instsimplify",
    "--loop-rotate",
    "--instcombine",
    "--memcpyopt",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--loop-rotate",
          "--partial-inliner",
          "--sroa",
          "--name-anon-globals",
          "--barrier",
          "--pgo-memop-opt",
          "--early-cse-memssa",
          "--post-inline-ee-instrument",
          "--loop-vectorize",
          "--forceattrs",
          "--memcpyopt",
          "--instcombine",
          "--redundant-dbg-inst-elim",
          "--simplifycfg",
          "--loop-guard-widening",
          "--coro-elide",
          "--hotcoldsplit",
          "--strip",
          "--inferattrs",
          "--loop-versioning",
          "--globalsplit",
          "--prune-eh",
          "--tailcallelim",
          "--attributor",
          "--irce",
          "--separate-const-offset-from-gep",
          "--loop-load-elim",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--loop-rotate",
      "--partial-inliner",
      "--sroa",
      "--name-anon-globals",
      "--barrier",
      "--pgo-memop-opt",
      "--early-cse-memssa",
      "--post-inline-ee-instrument",
      "--loop-vectorize",
      "--forceattrs",
      "--memcpyopt",
      "--instcombine",
      "--redundant-dbg-inst-elim",
      "--simplifycfg",
      "--loop-guard-widening",
      "--coro-elide",
      "--hotcoldsplit",
      "--strip",
      "--inferattrs",
      "--loop-versioning",
      "--globalsplit",
      "--prune-eh",
      "--tailcallelim",
      "--attributor",
      "--irce",
      "--separate-const-offset-from-gep",
      "--loop-load-elim",
      "--dce"
    ],
    "performance_vs_Oz": "+7.0%"
  }
}