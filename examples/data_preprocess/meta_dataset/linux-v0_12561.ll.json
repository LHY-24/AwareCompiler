{
  "program_id": "linux-v0_12561.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 69,
    "onePredOneSuc": 53,
    "onePredTwoSuc": 15,
    "oneSuccessor": 64,
    "twoPred": 26,
    "twoPredOneSuc": 7,
    "twoEach": 12,
    "twoSuccessor": 35,
    "morePreds": 4,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 112,
    "BeginPhi": 4,
    "BranchCount": 99,
    "returnInt": 8,
    "CriticalCount": 13,
    "NumEdges": 134,
    "const32Bit": 208,
    "const64Bit": 25,
    "numConstZeroes": 116,
    "numConstOnes": 82,
    "UncondBranches": 64,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 61,
    "NumAndInst": 4,
    "BlockMid": 11,
    "BlockLow": 105,
    "NumBitCastInst": 8,
    "NumBrInst": 99,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 64,
    "NumICmpInst": 36,
    "NumLShrInst": 0,
    "NumLoadInst": 190,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 17,
    "NumSExtInst": 17,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 87,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 6,
    "NumZExtInst": 24,
    "TotalBlocks": 116,
    "TotalInsts": 676,
    "TotalMemInst": 445,
    "TotalFuncs": 31,
    "ArgsPhi": 8,
    "testUnary": 308
  },
  "baseline_oz_instcount": 676,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--gvn-hoist",
    "--early-cse",
    "--lower-expect",
    "--aggressive-instcombine",
    "--lower-expect",
    "--globalopt",
    "--aggressive-instcombine",
    "--lower-expect",
    "--globalopt",
    "--correlated-propagation",
    "--sroa",
    "--gvn",
    "--prune-eh",
    "--mem2reg",
    "--inline",
    "--dce",
    "--licm",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-split",
          "--cross-dso-cfi",
          "--aggressive-instcombine",
          "--barrier",
          "--lower-guard-intrinsic",
          "--partially-inline-libcalls",
          "--inject-tli-mappings",
          "--strip-dead-prototypes",
          "--loop-instsimplify",
          "--mergeicmps",
          "--gvn-hoist",
          "--constprop",
          "--loop-interchange",
          "--globalopt",
          "--instcombine",
          "--strip-nondebug",
          "--nary-reassociate",
          "--pgo-memop-opt",
          "--strip-debug-declare",
          "--adce",
          "--loop-fusion",
          "--loop-rotate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-split",
      "--cross-dso-cfi",
      "--aggressive-instcombine",
      "--barrier",
      "--lower-guard-intrinsic",
      "--partially-inline-libcalls",
      "--inject-tli-mappings",
      "--strip-dead-prototypes",
      "--loop-instsimplify",
      "--mergeicmps",
      "--gvn-hoist",
      "--constprop",
      "--loop-interchange",
      "--globalopt",
      "--instcombine",
      "--strip-nondebug",
      "--nary-reassociate",
      "--pgo-memop-opt",
      "--strip-debug-declare",
      "--adce",
      "--loop-fusion",
      "--loop-rotate"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}