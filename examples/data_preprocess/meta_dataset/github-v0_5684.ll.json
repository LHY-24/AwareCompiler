{
  "program_id": "github-v0_5684.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 12,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 4,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 1,
    "BranchCount": 18,
    "returnInt": 0,
    "CriticalCount": 4,
    "NumEdges": 25,
    "const32Bit": 19,
    "const64Bit": 0,
    "numConstZeroes": 7,
    "numConstOnes": 13,
    "UncondBranches": 11,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 7,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 18,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 7,
    "NumLShrInst": 1,
    "NumLoadInst": 20,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 1,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 19,
    "TotalInsts": 89,
    "TotalMemInst": 40,
    "TotalFuncs": 1,
    "ArgsPhi": 2,
    "testUnary": 43
  },
  "baseline_oz_instcount": 89,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--aggressive-instcombine",
    "--sroa",
    "--newgvn",
    "--adce",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--correlated-propagation",
    "--sroa",
    "--newgvn",
    "--lower-expect",
    "--reassociate",
    "--instcombine",
    "--early-cse",
    "--loop-deletion",
    "--gvn",
    "--sccp",
    "--sroa",
    "--dse",
    "--adce",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--globalsplit",
          "--consthoist",
          "--mergeicmps",
          "--early-cse-memssa",
          "--attributor",
          "--lowerswitch",
          "--loop-idiom",
          "--ipsccp",
          "--sink",
          "--aggressive-instcombine",
          "--loop-unroll",
          "--lower-constant-intrinsics",
          "--strip-debug-declare",
          "--loop-versioning",
          "--prune-eh",
          "--loop-interchange",
          "--loop-guard-widening",
          "--deadargelim",
          "--cross-dso-cfi",
          "-loop-reduce",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--globalsplit",
      "--consthoist",
      "--mergeicmps",
      "--early-cse-memssa",
      "--attributor",
      "--lowerswitch",
      "--loop-idiom",
      "--ipsccp",
      "--sink",
      "--aggressive-instcombine",
      "--loop-unroll",
      "--lower-constant-intrinsics",
      "--strip-debug-declare",
      "--loop-versioning",
      "--prune-eh",
      "--loop-interchange",
      "--loop-guard-widening",
      "--deadargelim",
      "--cross-dso-cfi",
      "-loop-reduce",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+9.0%"
  }
}