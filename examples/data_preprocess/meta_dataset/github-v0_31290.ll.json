{
  "program_id": "github-v0_31290.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 3,
    "oneSuccessor": 23,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 6,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 2,
    "CriticalCount": 3,
    "NumEdges": 43,
    "const32Bit": 48,
    "const64Bit": 10,
    "numConstZeroes": 17,
    "numConstOnes": 18,
    "UncondBranches": 23,
    "binaryConstArg": 12,
    "NumAShrInst": 2,
    "NumAddInst": 10,
    "NumAllocaInst": 12,
    "NumAndInst": 1,
    "BlockMid": 4,
    "BlockLow": 32,
    "NumBitCastInst": 2,
    "NumBrInst": 33,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 47,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 36,
    "TotalInsts": 180,
    "TotalMemInst": 104,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 73
  },
  "baseline_oz_instcount": 180,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--adce",
    "--ipsccp",
    "--early-cse-memssa",
    "--early-cse",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--called-value-propagation",
          "--float2int",
          "--attributor",
          "--infer-address-spaces",
          "--strip-nondebug",
          "--functionattrs",
          "--globalopt",
          "--coro-elide",
          "--barrier",
          "--lower-constant-intrinsics",
          "--strip-dead-prototypes"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--called-value-propagation",
      "--float2int",
      "--attributor",
      "--infer-address-spaces",
      "--strip-nondebug",
      "--functionattrs",
      "--globalopt",
      "--coro-elide",
      "--barrier",
      "--lower-constant-intrinsics",
      "--strip-dead-prototypes"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}