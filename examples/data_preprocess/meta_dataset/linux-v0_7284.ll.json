{
  "program_id": "linux-v0_7284.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 63,
    "onePredOneSuc": 50,
    "onePredTwoSuc": 11,
    "oneSuccessor": 57,
    "twoPred": 19,
    "twoPredOneSuc": 2,
    "twoEach": 9,
    "twoSuccessor": 28,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 114,
    "BeginPhi": 0,
    "BranchCount": 85,
    "returnInt": 16,
    "CriticalCount": 9,
    "NumEdges": 123,
    "const32Bit": 314,
    "const64Bit": 34,
    "numConstZeroes": 158,
    "numConstOnes": 125,
    "UncondBranches": 57,
    "binaryConstArg": 22,
    "NumAShrInst": 1,
    "NumAddInst": 6,
    "NumAllocaInst": 97,
    "NumAndInst": 8,
    "BlockMid": 10,
    "BlockLow": 104,
    "NumBitCastInst": 43,
    "NumBrInst": 85,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 84,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 197,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 27,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 147,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 20,
    "TotalBlocks": 114,
    "TotalInsts": 819,
    "TotalMemInst": 581,
    "TotalFuncs": 37,
    "ArgsPhi": 0,
    "testUnary": 370
  },
  "baseline_oz_instcount": 820,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--instcombine",
    "--ipsccp",
    "--instsimplify",
    "--adce",
    "--slp-vectorizer",
    "--early-cse",
    "--flattencfg",
    "--mergefunc",
    "--jump-threading",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--mem2reg",
    "--early-cse",
    "--bdce",
    "--early-cse-memssa",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--reassociate",
          "--sroa",
          "--div-rem-pairs",
          "--aggressive-instcombine",
          "--licm",
          "--gvn-hoist",
          "--die",
          "--lower-constant-intrinsics",
          "--attributor",
          "--pgo-memop-opt",
          "--partially-inline-libcalls",
          "--loop-distribute",
          "--jump-threading",
          "--loop-reroll",
          "--loop-load-elim",
          "--lower-expect",
          "--insert-gcov-profiling",
          "--ee-instrument",
          "--early-cse",
          "--coro-elide",
          "--globaldce",
          "--loop-data-prefetch",
          "--redundant-dbg-inst-elim",
          "--dce",
          "--sancov",
          "--inferattrs",
          "--simplifycfg",
          "--sccp",
          "--constprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--reassociate",
      "--sroa",
      "--div-rem-pairs",
      "--aggressive-instcombine",
      "--licm",
      "--gvn-hoist",
      "--die",
      "--lower-constant-intrinsics",
      "--attributor",
      "--pgo-memop-opt",
      "--partially-inline-libcalls",
      "--loop-distribute",
      "--jump-threading",
      "--loop-reroll",
      "--loop-load-elim",
      "--lower-expect",
      "--insert-gcov-profiling",
      "--ee-instrument",
      "--early-cse",
      "--coro-elide",
      "--globaldce",
      "--loop-data-prefetch",
      "--redundant-dbg-inst-elim",
      "--dce",
      "--sancov",
      "--inferattrs",
      "--simplifycfg",
      "--sccp",
      "--constprop"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}