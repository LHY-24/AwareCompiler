{
  "program_id": "linux-v0_1882.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 5,
    "oneSuccessor": 11,
    "twoPred": 8,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 10,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 0,
    "CriticalCount": 9,
    "NumEdges": 31,
    "const32Bit": 21,
    "const64Bit": 1,
    "numConstZeroes": 2,
    "numConstOnes": 6,
    "UncondBranches": 11,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 22,
    "NumBitCastInst": 0,
    "NumBrInst": 21,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 11,
    "NumSubInst": 5,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 22,
    "TotalInsts": 108,
    "TotalMemInst": 52,
    "TotalFuncs": 1,
    "ArgsPhi": 0,
    "testUnary": 52
  },
  "baseline_oz_instcount": 109,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--early-cse",
    "--simplifycfg",
    "--jump-threading",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--adce",
    "--gvn",
    "--elim-avail-extern",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--adce",
          "--dce",
          "--lower-constant-intrinsics",
          "--gvn-hoist",
          "--flattencfg",
          "--coro-early",
          "--argpromotion",
          "--lcssa",
          "--memcpyopt",
          "--slsr",
          "--infer-address-spaces",
          "--libcalls-shrinkwrap",
          "--forceattrs",
          "--deadargelim",
          "--gvn",
          "--coro-elide"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--adce",
      "--dce",
      "--lower-constant-intrinsics",
      "--gvn-hoist",
      "--flattencfg",
      "--coro-early",
      "--argpromotion",
      "--lcssa",
      "--memcpyopt",
      "--slsr",
      "--infer-address-spaces",
      "--libcalls-shrinkwrap",
      "--forceattrs",
      "--deadargelim",
      "--gvn",
      "--coro-elide"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}