{
  "program_id": "linux-v0_4488.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 48,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 11,
    "oneSuccessor": 45,
    "twoPred": 19,
    "twoPredOneSuc": 8,
    "twoEach": 7,
    "twoSuccessor": 24,
    "morePreds": 2,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 4,
    "BranchCount": 68,
    "returnInt": 11,
    "CriticalCount": 9,
    "NumEdges": 93,
    "const32Bit": 195,
    "const64Bit": 11,
    "numConstZeroes": 84,
    "numConstOnes": 74,
    "UncondBranches": 45,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 55,
    "NumAndInst": 2,
    "BlockMid": 6,
    "BlockLow": 74,
    "NumBitCastInst": 27,
    "NumBrInst": 68,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 61,
    "NumICmpInst": 20,
    "NumLShrInst": 1,
    "NumLoadInst": 124,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 4,
    "NumRetInst": 11,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 73,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 80,
    "TotalInsts": 487,
    "TotalMemInst": 339,
    "TotalFuncs": 25,
    "ArgsPhi": 8,
    "testUnary": 216
  },
  "baseline_oz_instcount": 490,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--elim-avail-extern",
    "--instsimplify",
    "--lower-expect",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--mldst-motion",
    "--early-cse",
    "--slsr",
    "--newgvn",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--mergefunc",
    "--aggressive-instcombine",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partial-inliner",
          "--simplifycfg",
          "--adce",
          "--cross-dso-cfi",
          "--ee-instrument",
          "--inject-tli-mappings",
          "--post-inline-ee-instrument",
          "--tailcallelim",
          "--lower-expect",
          "--functionattrs",
          "--sroa",
          "--loop-unroll-and-jam",
          "--die",
          "--instcombine",
          "--constprop",
          "--inferattrs",
          "--dce",
          "--canonicalize-aliases",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partial-inliner",
      "--simplifycfg",
      "--adce",
      "--cross-dso-cfi",
      "--ee-instrument",
      "--inject-tli-mappings",
      "--post-inline-ee-instrument",
      "--tailcallelim",
      "--lower-expect",
      "--functionattrs",
      "--sroa",
      "--loop-unroll-and-jam",
      "--die",
      "--instcombine",
      "--constprop",
      "--inferattrs",
      "--dce",
      "--canonicalize-aliases",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}