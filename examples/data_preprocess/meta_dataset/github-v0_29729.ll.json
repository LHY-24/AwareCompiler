{
  "program_id": "github-v0_29729.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 5,
    "oneSuccessor": 17,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 35,
    "const32Bit": 72,
    "const64Bit": 142,
    "numConstZeroes": 134,
    "numConstOnes": 46,
    "UncondBranches": 17,
    "binaryConstArg": 51,
    "NumAShrInst": 18,
    "NumAddInst": 6,
    "NumAllocaInst": 14,
    "NumAndInst": 17,
    "BlockMid": 9,
    "BlockLow": 21,
    "NumBitCastInst": 16,
    "NumBrInst": 26,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 78,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 63,
    "NumMulInst": 1,
    "NumOrInst": 16,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 8,
    "NumStoreInst": 34,
    "NumSubInst": 4,
    "NumTruncInst": 20,
    "NumXorInst": 0,
    "NumZExtInst": 37,
    "TotalBlocks": 30,
    "TotalInsts": 389,
    "TotalMemInst": 196,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 161
  },
  "baseline_oz_instcount": 389,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--adce",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--early-cse",
    "--licm",
    "--mergefunc",
    "--early-cse",
    "--memcpyopt",
    "--slp-vectorizer",
    "--sroa",
    "--nary-reassociate",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mldst-motion",
          "--mergeicmps",
          "--strip-debug-declare",
          "--loop-distribute",
          "--mergefunc",
          "--constprop",
          "--aggressive-instcombine",
          "--loop-instsimplify",
          "--loweratomic",
          "--loop-unroll-and-jam",
          "--deadargelim",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mldst-motion",
      "--mergeicmps",
      "--strip-debug-declare",
      "--loop-distribute",
      "--mergefunc",
      "--constprop",
      "--aggressive-instcombine",
      "--loop-instsimplify",
      "--loweratomic",
      "--loop-unroll-and-jam",
      "--deadargelim",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+6.2%"
  }
}