{
  "program_id": "linux-v0_1500.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 77,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 13,
    "oneSuccessor": 69,
    "twoPred": 18,
    "twoPredOneSuc": 5,
    "twoEach": 9,
    "twoSuccessor": 30,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 123,
    "BeginPhi": 0,
    "BranchCount": 99,
    "returnInt": 19,
    "CriticalCount": 7,
    "NumEdges": 147,
    "const32Bit": 306,
    "const64Bit": 51,
    "numConstZeroes": 144,
    "numConstOnes": 125,
    "UncondBranches": 69,
    "binaryConstArg": 30,
    "NumAShrInst": 1,
    "NumAddInst": 16,
    "NumAllocaInst": 85,
    "NumAndInst": 2,
    "BlockMid": 15,
    "BlockLow": 108,
    "NumBitCastInst": 6,
    "NumBrInst": 99,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 100,
    "NumICmpInst": 30,
    "NumLShrInst": 0,
    "NumLoadInst": 245,
    "NumMulInst": 6,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 29,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 156,
    "NumSubInst": 6,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 23,
    "TotalBlocks": 123,
    "TotalInsts": 882,
    "TotalMemInst": 624,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 395
  },
  "baseline_oz_instcount": 884,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--bdce",
    "--inline",
    "--early-cse-memssa",
    "--flattencfg",
    "--mergefunc",
    "--adce",
    "--reassociate",
    "--aggressive-instcombine",
    "--dse",
    "--gvn",
    "--aggressive-instcombine",
    "--bdce",
    "--gvn-hoist",
    "--inline",
    "--mem2reg",
    "--gvn-hoist",
    "--prune-eh",
    "--aggressive-instcombine",
    "--ipsccp",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--inline",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--early-cse",
    "--ipsccp",
    "--aggressive-instcombine",
    "--sroa",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--aggressive-instcombine",
          "--dce",
          "--alignment-from-assumptions",
          "--early-cse-memssa",
          "--strip-debug-declare",
          "--instnamer",
          "--insert-gcov-profiling",
          "--tailcallelim",
          "--redundant-dbg-inst-elim",
          "--coro-split",
          "--loop-guard-widening",
          "--sink",
          "--coro-early",
          "--gvn",
          "--instcombine",
          "--loop-unroll-and-jam",
          "--jump-threading",
          "--argpromotion",
          "--lowerinvoke",
          "--attributor",
          "--adce",
          "--ipsccp",
          "--hotcoldsplit",
          "--loop-deletion",
          "--coro-cleanup",
          "--loop-instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--aggressive-instcombine",
      "--dce",
      "--alignment-from-assumptions",
      "--early-cse-memssa",
      "--strip-debug-declare",
      "--instnamer",
      "--insert-gcov-profiling",
      "--tailcallelim",
      "--redundant-dbg-inst-elim",
      "--coro-split",
      "--loop-guard-widening",
      "--sink",
      "--coro-early",
      "--gvn",
      "--instcombine",
      "--loop-unroll-and-jam",
      "--jump-threading",
      "--argpromotion",
      "--lowerinvoke",
      "--attributor",
      "--adce",
      "--ipsccp",
      "--hotcoldsplit",
      "--loop-deletion",
      "--coro-cleanup",
      "--loop-instsimplify"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}