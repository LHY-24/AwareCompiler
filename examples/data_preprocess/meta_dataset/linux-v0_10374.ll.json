{
  "program_id": "linux-v0_10374.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 96,
    "onePredOneSuc": 64,
    "onePredTwoSuc": 29,
    "oneSuccessor": 87,
    "twoPred": 32,
    "twoPredOneSuc": 19,
    "twoEach": 9,
    "twoSuccessor": 43,
    "morePreds": 8,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 161,
    "BeginPhi": 2,
    "BranchCount": 130,
    "returnInt": 41,
    "CriticalCount": 16,
    "NumEdges": 192,
    "const32Bit": 321,
    "const64Bit": 46,
    "numConstZeroes": 124,
    "numConstOnes": 129,
    "UncondBranches": 87,
    "binaryConstArg": 29,
    "NumAShrInst": 4,
    "NumAddInst": 2,
    "NumAllocaInst": 108,
    "NumAndInst": 15,
    "BlockMid": 16,
    "BlockLow": 147,
    "NumBitCastInst": 22,
    "NumBrInst": 130,
    "NumCallInst": 68,
    "NumGetElementPtrInst": 71,
    "NumICmpInst": 45,
    "NumLShrInst": 1,
    "NumLoadInst": 243,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 2,
    "NumRetInst": 27,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 175,
    "NumSubInst": 2,
    "NumTruncInst": 15,
    "NumXorInst": 3,
    "NumZExtInst": 16,
    "TotalBlocks": 163,
    "TotalInsts": 977,
    "TotalMemInst": 665,
    "TotalFuncs": 43,
    "ArgsPhi": 4,
    "testUnary": 416
  },
  "baseline_oz_instcount": 978,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--instcombine",
    "--globalopt",
    "--early-cse-memssa",
    "--jump-threading",
    "--die",
    "--slp-vectorizer",
    "--jump-threading",
    "--mldst-motion",
    "--mem2reg",
    "--die",
    "--early-cse",
    "--flattencfg",
    "--early-cse-memssa",
    "--instsimplify",
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--inline",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "--lower-constant-intrinsics",
          "--name-anon-globals",
          "--constmerge",
          "--sroa",
          "--simple-loop-unswitch",
          "-loop-reduce",
          "--barrier",
          "--infer-address-spaces",
          "--strip-dead-prototypes",
          "--instcombine",
          "--lcssa",
          "--sccp",
          "--loop-guard-widening",
          "--inferattrs",
          "--loop-versioning-licm",
          "--aggressive-instcombine",
          "--hotcoldsplit",
          "--loop-fusion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "--lower-constant-intrinsics",
      "--name-anon-globals",
      "--constmerge",
      "--sroa",
      "--simple-loop-unswitch",
      "-loop-reduce",
      "--barrier",
      "--infer-address-spaces",
      "--strip-dead-prototypes",
      "--instcombine",
      "--lcssa",
      "--sccp",
      "--loop-guard-widening",
      "--inferattrs",
      "--loop-versioning-licm",
      "--aggressive-instcombine",
      "--hotcoldsplit",
      "--loop-fusion"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}