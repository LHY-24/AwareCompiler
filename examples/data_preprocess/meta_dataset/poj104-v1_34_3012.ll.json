{
  "program_id": "poj104-v1_34_3012.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 9,
    "CriticalCount": 0,
    "NumEdges": 18,
    "const32Bit": 39,
    "const64Bit": 6,
    "numConstZeroes": 9,
    "numConstOnes": 25,
    "UncondBranches": 8,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 22,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 29,
    "NumBitCastInst": 12,
    "NumBrInst": 13,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 30,
    "TotalInsts": 194,
    "TotalMemInst": 141,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 84
  },
  "baseline_oz_instcount": 64,
  "knowledge_base_entry": [
    "--break-crit-edges",
    "--gvn-hoist",
    "--simplifycfg",
    "--early-cse-memssa",
    "--ipsccp",
    "--elim-avail-extern",
    "--early-cse",
    "--flattencfg",
    "--newgvn",
    "--nary-reassociate",
    "--indvars",
    "-loop-reduce",
    "--slp-vectorizer",
    "--newgvn",
    "--newgvn",
    "--loop-fusion",
    "--load-store-vectorizer",
    "--dse",
    "--globalopt",
    "--elim-avail-extern",
    "--dse",
    "--instsimplify",
    "--adce",
    "--early-cse-memssa",
    "--instsimplify",
    "--sroa",
    "--globalopt",
    "--instcombine",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--div-rem-pairs",
          "--elim-avail-extern",
          "--partially-inline-libcalls",
          "--bdce",
          "--strip-dead-prototypes",
          "--strip-nondebug",
          "--speculative-execution",
          "--loop-load-elim",
          "--insert-gcov-profiling",
          "--argpromotion",
          "--sink",
          "--loop-unroll",
          "--always-inline",
          "--newgvn",
          "--loop-vectorize",
          "--sancov",
          "--gvn-hoist",
          "--sccp",
          "--coro-elide",
          "--simplifycfg",
          "--globaldce",
          "--rpo-functionattrs",
          "--coro-early",
          "--post-inline-ee-instrument",
          "--simple-loop-unswitch",
          "--reassociate",
          "--lower-matrix-intrinsics",
          "--loop-reroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+17.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--div-rem-pairs",
      "--elim-avail-extern",
      "--partially-inline-libcalls",
      "--bdce",
      "--strip-dead-prototypes",
      "--strip-nondebug",
      "--speculative-execution",
      "--loop-load-elim",
      "--insert-gcov-profiling",
      "--argpromotion",
      "--sink",
      "--loop-unroll",
      "--always-inline",
      "--newgvn",
      "--loop-vectorize",
      "--sancov",
      "--gvn-hoist",
      "--sccp",
      "--coro-elide",
      "--simplifycfg",
      "--globaldce",
      "--rpo-functionattrs",
      "--coro-early",
      "--post-inline-ee-instrument",
      "--simple-loop-unswitch",
      "--reassociate",
      "--lower-matrix-intrinsics",
      "--loop-reroll"
    ],
    "performance_vs_Oz": "+17.2%"
  }
}