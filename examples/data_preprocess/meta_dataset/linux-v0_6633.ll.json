{
  "program_id": "linux-v0_6633.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 10,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 3,
    "oneSuccessor": 9,
    "twoPred": 3,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 2,
    "BranchCount": 14,
    "returnInt": 2,
    "CriticalCount": 3,
    "NumEdges": 19,
    "const32Bit": 127,
    "const64Bit": 17,
    "numConstZeroes": 53,
    "numConstOnes": 77,
    "UncondBranches": 9,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 71,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 19,
    "NumBitCastInst": 10,
    "NumBrInst": 14,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 81,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 10,
    "NumSExtInst": 6,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 82,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 6,
    "TotalBlocks": 24,
    "TotalInsts": 385,
    "TotalMemInst": 300,
    "TotalFuncs": 16,
    "ArgsPhi": 5,
    "testUnary": 195
  },
  "baseline_oz_instcount": 385,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--early-cse",
    "--gvn-hoist",
    "--nary-reassociate",
    "--mem2reg",
    "--mergefunc",
    "--loop-simplifycfg",
    "--licm",
    "--early-cse",
    "--gvn-hoist",
    "--nary-reassociate",
    "--mem2reg",
    "--mergefunc",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--instcombine",
    "--nary-reassociate",
    "--dse",
    "--lower-constant-intrinsics",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--redundant-dbg-inst-elim",
          "--loop-unswitch",
          "--nary-reassociate",
          "--mem2reg",
          "--strip-nondebug",
          "--mergefunc",
          "--guard-widening",
          "--sccp",
          "--lowerswitch",
          "--early-cse",
          "--tailcallelim",
          "--sroa",
          "--loop-unroll-and-jam",
          "--loop-interchange",
          "--div-rem-pairs",
          "--add-discriminators",
          "--partial-inliner",
          "--adce",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--redundant-dbg-inst-elim",
      "--loop-unswitch",
      "--nary-reassociate",
      "--mem2reg",
      "--strip-nondebug",
      "--mergefunc",
      "--guard-widening",
      "--sccp",
      "--lowerswitch",
      "--early-cse",
      "--tailcallelim",
      "--sroa",
      "--loop-unroll-and-jam",
      "--loop-interchange",
      "--div-rem-pairs",
      "--add-discriminators",
      "--partial-inliner",
      "--adce",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}