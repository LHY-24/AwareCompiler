{
  "program_id": "linux-v0_10624.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 5,
    "oneSuccessor": 16,
    "twoPred": 3,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 40,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 9,
    "CriticalCount": 4,
    "NumEdges": 33,
    "const32Bit": 115,
    "const64Bit": 7,
    "numConstZeroes": 38,
    "numConstOnes": 44,
    "UncondBranches": 16,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 35,
    "NumAndInst": 3,
    "BlockMid": 3,
    "BlockLow": 37,
    "NumBitCastInst": 2,
    "NumBrInst": 23,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 9,
    "NumLShrInst": 1,
    "NumLoadInst": 50,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 48,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 40,
    "TotalInsts": 251,
    "TotalMemInst": 184,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 97
  },
  "baseline_oz_instcount": 251,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--slp-vectorizer",
    "--simplifycfg",
    "--dse",
    "--mergefunc",
    "--elim-avail-extern",
    "--inline",
    "--instsimplify",
    "--instcombine",
    "--globalopt",
    "--newgvn",
    "--dse",
    "--sroa",
    "--lower-expect",
    "--newgvn",
    "--elim-avail-extern",
    "--globalopt",
    "--aggressive-instcombine",
    "--mem2reg",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--lower-expect",
    "--newgvn",
    "--loop-deletion",
    "--gvn-hoist",
    "-loop-reduce",
    "--gvn",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--irce",
          "--loop-predication",
          "--aggressive-instcombine",
          "--sroa",
          "--loop-unroll",
          "--barrier",
          "--lower-matrix-intrinsics",
          "--ipsccp",
          "--indvars",
          "--loop-distribute",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--irce",
      "--loop-predication",
      "--aggressive-instcombine",
      "--sroa",
      "--loop-unroll",
      "--barrier",
      "--lower-matrix-intrinsics",
      "--ipsccp",
      "--indvars",
      "--loop-distribute",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}