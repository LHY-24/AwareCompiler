{
  "program_id": "linux-v0_7697.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 70,
    "onePredOneSuc": 55,
    "onePredTwoSuc": 13,
    "oneSuccessor": 63,
    "twoPred": 18,
    "twoPredOneSuc": 5,
    "twoEach": 12,
    "twoSuccessor": 28,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 106,
    "BeginPhi": 0,
    "BranchCount": 91,
    "returnInt": 27,
    "CriticalCount": 8,
    "NumEdges": 127,
    "const32Bit": 454,
    "const64Bit": 42,
    "numConstZeroes": 238,
    "numConstOnes": 116,
    "UncondBranches": 63,
    "binaryConstArg": 34,
    "NumAShrInst": 1,
    "NumAddInst": 21,
    "NumAllocaInst": 97,
    "NumAndInst": 8,
    "BlockMid": 21,
    "BlockLow": 85,
    "NumBitCastInst": 58,
    "NumBrInst": 91,
    "NumCallInst": 76,
    "NumGetElementPtrInst": 146,
    "NumICmpInst": 31,
    "NumLShrInst": 0,
    "NumLoadInst": 239,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 132,
    "NumSubInst": 0,
    "NumTruncInst": 22,
    "NumXorInst": 0,
    "NumZExtInst": 24,
    "TotalBlocks": 106,
    "TotalInsts": 967,
    "TotalMemInst": 690,
    "TotalFuncs": 41,
    "ArgsPhi": 0,
    "testUnary": 440
  },
  "baseline_oz_instcount": 966,
  "knowledge_base_entry": [
    "--bdce",
    "--ipsccp",
    "--gvn",
    "--aggressive-instcombine",
    "--licm",
    "--instcombine",
    "--inline",
    "--flattencfg",
    "--adce",
    "--bdce",
    "--correlated-propagation",
    "--jump-threading",
    "--loop-reroll",
    "--loop-fusion",
    "--simplifycfg",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--lowerinvoke",
          "--globalopt",
          "--rpo-functionattrs",
          "--memcpyopt",
          "--slsr",
          "--prune-eh",
          "--dse",
          "--functionattrs",
          "--correlated-propagation",
          "--aggressive-instcombine",
          "--loop-data-prefetch",
          "--div-rem-pairs",
          "--pgo-memop-opt",
          "--strip-dead-prototypes",
          "--loop-versioning",
          "--loweratomic",
          "--called-value-propagation",
          "--jump-threading",
          "--sroa",
          "--die",
          "--loop-predication",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--lowerinvoke",
      "--globalopt",
      "--rpo-functionattrs",
      "--memcpyopt",
      "--slsr",
      "--prune-eh",
      "--dse",
      "--functionattrs",
      "--correlated-propagation",
      "--aggressive-instcombine",
      "--loop-data-prefetch",
      "--div-rem-pairs",
      "--pgo-memop-opt",
      "--strip-dead-prototypes",
      "--loop-versioning",
      "--loweratomic",
      "--called-value-propagation",
      "--jump-threading",
      "--sroa",
      "--die",
      "--loop-predication",
      "--reassociate"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}