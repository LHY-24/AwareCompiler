{
  "program_id": "github-v0_5648.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 73,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 28,
    "oneSuccessor": 67,
    "twoPred": 42,
    "twoPredOneSuc": 18,
    "twoEach": 14,
    "twoSuccessor": 54,
    "morePreds": 6,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 135,
    "BeginPhi": 2,
    "BranchCount": 121,
    "returnInt": 46,
    "CriticalCount": 37,
    "NumEdges": 175,
    "const32Bit": 309,
    "const64Bit": 31,
    "numConstZeroes": 182,
    "numConstOnes": 81,
    "UncondBranches": 67,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 57,
    "NumAndInst": 13,
    "BlockMid": 6,
    "BlockLow": 131,
    "NumBitCastInst": 2,
    "NumBrInst": 121,
    "NumCallInst": 59,
    "NumGetElementPtrInst": 106,
    "NumICmpInst": 51,
    "NumLShrInst": 0,
    "NumLoadInst": 253,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 16,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 91,
    "NumSubInst": 9,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 137,
    "TotalInsts": 826,
    "TotalMemInst": 566,
    "TotalFuncs": 24,
    "ArgsPhi": 4,
    "testUnary": 345
  },
  "baseline_oz_instcount": 827,
  "knowledge_base_entry": [
    "--sccp",
    "--dse",
    "--dce",
    "--mergefunc",
    "--inline",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--jump-threading",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--lower-expect",
          "--instcombine",
          "--adce",
          "--load-store-vectorizer",
          "--slsr",
          "--dce",
          "--separate-const-offset-from-gep",
          "--sancov",
          "--libcalls-shrinkwrap",
          "--lcssa",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--lower-expect",
      "--instcombine",
      "--adce",
      "--load-store-vectorizer",
      "--slsr",
      "--dce",
      "--separate-const-offset-from-gep",
      "--sancov",
      "--libcalls-shrinkwrap",
      "--lcssa",
      "--early-cse"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}