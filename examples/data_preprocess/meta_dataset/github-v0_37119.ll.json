{
  "program_id": "github-v0_37119.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 10,
    "onePred": 103,
    "onePredOneSuc": 74,
    "onePredTwoSuc": 29,
    "oneSuccessor": 94,
    "twoPred": 50,
    "twoPredOneSuc": 17,
    "twoEach": 28,
    "twoSuccessor": 63,
    "morePreds": 4,
    "BB03Phi": 10,
    "BBHiPhi": 0,
    "BBNoPhi": 154,
    "BeginPhi": 10,
    "BranchCount": 157,
    "returnInt": 16,
    "CriticalCount": 35,
    "NumEdges": 220,
    "const32Bit": 318,
    "const64Bit": 45,
    "numConstZeroes": 184,
    "numConstOnes": 120,
    "UncondBranches": 94,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 33,
    "NumAllocaInst": 67,
    "NumAndInst": 6,
    "BlockMid": 16,
    "BlockLow": 148,
    "NumBitCastInst": 1,
    "NumBrInst": 157,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 116,
    "NumICmpInst": 65,
    "NumLShrInst": 0,
    "NumLoadInst": 363,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 10,
    "NumRetInst": 7,
    "NumSExtInst": 5,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 118,
    "NumSubInst": 19,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 164,
    "TotalInsts": 998,
    "TotalMemInst": 686,
    "TotalFuncs": 13,
    "ArgsPhi": 21,
    "testUnary": 442
  },
  "baseline_oz_instcount": 1002,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--die",
    "--simplifycfg",
    "--prune-eh",
    "--elim-avail-extern",
    "--memcpyopt",
    "--mem2reg",
    "--instcombine",
    "--mergefunc",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--mergefunc",
          "--libcalls-shrinkwrap",
          "--insert-gcov-profiling",
          "--lcssa",
          "--instcombine",
          "--newgvn",
          "--reassociate",
          "--sccp",
          "--div-rem-pairs",
          "--ipconstprop",
          "--redundant-dbg-inst-elim",
          "--lowerswitch",
          "--loop-distribute",
          "--slsr",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--mergefunc",
      "--libcalls-shrinkwrap",
      "--insert-gcov-profiling",
      "--lcssa",
      "--instcombine",
      "--newgvn",
      "--reassociate",
      "--sccp",
      "--div-rem-pairs",
      "--ipconstprop",
      "--redundant-dbg-inst-elim",
      "--lowerswitch",
      "--loop-distribute",
      "--slsr",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}