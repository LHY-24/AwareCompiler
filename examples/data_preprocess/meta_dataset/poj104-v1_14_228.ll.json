{
  "program_id": "poj104-v1_14_228.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 6,
    "oneSuccessor": 21,
    "twoPred": 12,
    "twoPredOneSuc": 6,
    "twoEach": 4,
    "twoSuccessor": 13,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 49,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 7,
    "CriticalCount": 5,
    "NumEdges": 47,
    "const32Bit": 84,
    "const64Bit": 36,
    "numConstZeroes": 48,
    "numConstOnes": 37,
    "UncondBranches": 21,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 26,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 45,
    "NumBitCastInst": 24,
    "NumBrInst": 34,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 46,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 88,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 18,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 35,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 49,
    "TotalInsts": 356,
    "TotalMemInst": 245,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 157
  },
  "baseline_oz_instcount": 145,
  "knowledge_base_entry": [
    "--mergereturn",
    "--jump-threading",
    "--ipsccp",
    "--flattencfg",
    "--licm",
    "--bdce",
    "--gvn",
    "--licm",
    "--dce",
    "--dse",
    "--reassociate",
    "--elim-avail-extern",
    "--adce",
    "--gvn-hoist",
    "--inline",
    "--newgvn",
    "--adce",
    "--ipsccp",
    "--flattencfg",
    "--inline",
    "--bdce",
    "--instcombine",
    "--memcpyopt",
    "--simplifycfg",
    "--die",
    "--mem2reg",
    "--flattencfg",
    "--globalopt",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--callsite-splitting",
          "--always-inline",
          "--partial-inliner",
          "--called-value-propagation",
          "--lower-matrix-intrinsics",
          "--redundant-dbg-inst-elim",
          "--globalsplit",
          "--add-discriminators",
          "--canonicalize-aliases",
          "--elim-avail-extern",
          "--strip",
          "--functionattrs",
          "--globaldce",
          "--slp-vectorizer",
          "--forceattrs",
          "--sroa",
          "--early-cse",
          "--inline",
          "--loop-idiom",
          "--loop-unswitch",
          "--correlated-propagation",
          "--simple-loop-unswitch",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--callsite-splitting",
      "--always-inline",
      "--partial-inliner",
      "--called-value-propagation",
      "--lower-matrix-intrinsics",
      "--redundant-dbg-inst-elim",
      "--globalsplit",
      "--add-discriminators",
      "--canonicalize-aliases",
      "--elim-avail-extern",
      "--strip",
      "--functionattrs",
      "--globaldce",
      "--slp-vectorizer",
      "--forceattrs",
      "--sroa",
      "--early-cse",
      "--inline",
      "--loop-idiom",
      "--loop-unswitch",
      "--correlated-propagation",
      "--simple-loop-unswitch",
      "--dce"
    ],
    "performance_vs_Oz": "+3.4%"
  }
}