{
  "program_id": "linux-v0_1092.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 6,
    "oneSuccessor": 23,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 56,
    "BeginPhi": 0,
    "BranchCount": 36,
    "returnInt": 31,
    "CriticalCount": 4,
    "NumEdges": 49,
    "const32Bit": 228,
    "const64Bit": 5,
    "numConstZeroes": 88,
    "numConstOnes": 56,
    "UncondBranches": 23,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 43,
    "NumAndInst": 6,
    "BlockMid": 15,
    "BlockLow": 41,
    "NumBitCastInst": 11,
    "NumBrInst": 36,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 76,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 169,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 62,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 56,
    "TotalInsts": 515,
    "TotalMemInst": 395,
    "TotalFuncs": 52,
    "ArgsPhi": 0,
    "testUnary": 249
  },
  "baseline_oz_instcount": 515,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--adce",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--jump-threading",
    "--ipsccp",
    "--licm",
    "--inline",
    "--instcombine",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--gvn",
          "--mergeicmps",
          "--sccp",
          "--early-cse-memssa",
          "--post-inline-ee-instrument",
          "--simplifycfg",
          "--aggressive-instcombine",
          "--prune-eh",
          "--lower-widenable-condition"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--gvn",
      "--mergeicmps",
      "--sccp",
      "--early-cse-memssa",
      "--post-inline-ee-instrument",
      "--simplifycfg",
      "--aggressive-instcombine",
      "--prune-eh",
      "--lower-widenable-condition"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}