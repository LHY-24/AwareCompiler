{
  "program_id": "github-v0_8046.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 36,
    "const64Bit": 36,
    "numConstZeroes": 37,
    "numConstOnes": 25,
    "UncondBranches": 13,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 14,
    "NumAndInst": 1,
    "BlockMid": 4,
    "BlockLow": 20,
    "NumBitCastInst": 4,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 39,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 22,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 11,
    "TotalBlocks": 24,
    "TotalInsts": 174,
    "TotalMemInst": 107,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 75
  },
  "baseline_oz_instcount": 174,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--jump-threading",
    "--sccp",
    "--licm",
    "--aggressive-instcombine",
    "--licm",
    "--mldst-motion",
    "--mem2reg",
    "--loop-rotate",
    "--instsimplify",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--dse",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instcombine",
          "--coro-early",
          "--simple-loop-unswitch",
          "--aggressive-instcombine",
          "--strip",
          "--flattencfg",
          "--loop-versioning",
          "--loop-sink",
          "--add-discriminators",
          "--lower-guard-intrinsic",
          "--globalopt",
          "--insert-gcov-profiling",
          "--strip-nondebug",
          "--loop-fusion",
          "--ipconstprop",
          "--lcssa",
          "--die",
          "--strip-debug-declare",
          "--always-inline",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instcombine",
      "--coro-early",
      "--simple-loop-unswitch",
      "--aggressive-instcombine",
      "--strip",
      "--flattencfg",
      "--loop-versioning",
      "--loop-sink",
      "--add-discriminators",
      "--lower-guard-intrinsic",
      "--globalopt",
      "--insert-gcov-profiling",
      "--strip-nondebug",
      "--loop-fusion",
      "--ipconstprop",
      "--lcssa",
      "--die",
      "--strip-debug-declare",
      "--always-inline",
      "--newgvn"
    ],
    "performance_vs_Oz": "+3.4%"
  }
}