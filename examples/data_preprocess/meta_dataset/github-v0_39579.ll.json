{
  "program_id": "github-v0_39579.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 4,
    "oneSuccessor": 22,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 6,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 0,
    "BranchCount": 32,
    "returnInt": 1,
    "CriticalCount": 4,
    "NumEdges": 42,
    "const32Bit": 40,
    "const64Bit": 5,
    "numConstZeroes": 11,
    "numConstOnes": 30,
    "UncondBranches": 22,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 17,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 35,
    "NumBitCastInst": 1,
    "NumBrInst": 32,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 57,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 36,
    "TotalInsts": 195,
    "TotalMemInst": 126,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 87
  },
  "baseline_oz_instcount": 196,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--dce",
    "--lower-expect",
    "--prune-eh",
    "--lower-expect",
    "--sccp",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--lowerinvoke",
          "--mergereturn",
          "--infer-address-spaces",
          "--sroa",
          "--rpo-functionattrs",
          "--always-inline",
          "--mergefunc",
          "--pgo-memop-opt",
          "--correlated-propagation",
          "--sink",
          "--bdce",
          "--early-cse",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--lowerinvoke",
      "--mergereturn",
      "--infer-address-spaces",
      "--sroa",
      "--rpo-functionattrs",
      "--always-inline",
      "--mergefunc",
      "--pgo-memop-opt",
      "--correlated-propagation",
      "--sink",
      "--bdce",
      "--early-cse",
      "--barrier"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}