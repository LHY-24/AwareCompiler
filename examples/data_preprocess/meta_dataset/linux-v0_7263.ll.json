{
  "program_id": "linux-v0_7263.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 80,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 28,
    "oneSuccessor": 71,
    "twoPred": 29,
    "twoPredOneSuc": 12,
    "twoEach": 16,
    "twoSuccessor": 45,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 128,
    "BeginPhi": 0,
    "BranchCount": 116,
    "returnInt": 21,
    "CriticalCount": 27,
    "NumEdges": 167,
    "const32Bit": 346,
    "const64Bit": 17,
    "numConstZeroes": 163,
    "numConstOnes": 115,
    "UncondBranches": 71,
    "binaryConstArg": 29,
    "NumAShrInst": 1,
    "NumAddInst": 10,
    "NumAllocaInst": 80,
    "NumAndInst": 12,
    "BlockMid": 10,
    "BlockLow": 118,
    "NumBitCastInst": 9,
    "NumBrInst": 116,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 95,
    "NumICmpInst": 54,
    "NumLShrInst": 0,
    "NumLoadInst": 200,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 113,
    "NumSubInst": 7,
    "NumTruncInst": 12,
    "NumXorInst": 1,
    "NumZExtInst": 27,
    "TotalBlocks": 128,
    "TotalInsts": 804,
    "TotalMemInst": 528,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 340
  },
  "baseline_oz_instcount": 804,
  "knowledge_base_entry": [
    "--globalopt",
    "--aggressive-instcombine",
    "--early-cse",
    "--jump-threading",
    "--slsr",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--dse",
    "--mldst-motion",
    "--gvn-hoist",
    "--instsimplify",
    "--ipsccp",
    "--globaldce",
    "--mergefunc",
    "--flattencfg",
    "--load-store-vectorizer",
    "--early-cse",
    "--early-cse-memssa",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instcombine",
          "--loop-data-prefetch",
          "--nary-reassociate",
          "--partially-inline-libcalls",
          "--aggressive-instcombine",
          "--insert-gcov-profiling",
          "--always-inline",
          "--mergereturn",
          "--post-inline-ee-instrument",
          "--name-anon-globals",
          "--loop-unroll-and-jam",
          "--functionattrs",
          "--loop-versioning",
          "--loop-vectorize"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instcombine",
      "--loop-data-prefetch",
      "--nary-reassociate",
      "--partially-inline-libcalls",
      "--aggressive-instcombine",
      "--insert-gcov-profiling",
      "--always-inline",
      "--mergereturn",
      "--post-inline-ee-instrument",
      "--name-anon-globals",
      "--loop-unroll-and-jam",
      "--functionattrs",
      "--loop-versioning",
      "--loop-vectorize"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}