{
  "program_id": "github-v0_48986.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 0,
    "oneSuccessor": 11,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 40,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 23,
    "const32Bit": 130,
    "const64Bit": 6,
    "numConstZeroes": 44,
    "numConstOnes": 76,
    "UncondBranches": 11,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 72,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 33,
    "NumBitCastInst": 18,
    "NumBrInst": 17,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 97,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 86,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 40,
    "TotalInsts": 375,
    "TotalMemInst": 304,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 191
  },
  "baseline_oz_instcount": 375,
  "knowledge_base_entry": [
    "--loop-unroll",
    "--newgvn",
    "--adce",
    "--lower-expect",
    "--sccp",
    "--reassociate",
    "--prune-eh",
    "--licm",
    "--mergefunc",
    "--flattencfg",
    "--instcombine",
    "--dce",
    "--reassociate",
    "--simplifycfg",
    "--loop-deletion",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--infer-address-spaces",
          "--instcombine",
          "--loop-vectorize",
          "--jump-threading",
          "--pgo-memop-opt",
          "--mergefunc",
          "--correlated-propagation",
          "--strip",
          "--loop-data-prefetch",
          "--attributor",
          "--redundant-dbg-inst-elim",
          "--loop-rotate",
          "--argpromotion",
          "--partially-inline-libcalls",
          "--coro-elide",
          "--separate-const-offset-from-gep",
          "--loop-instsimplify",
          "-loop-reduce",
          "--sancov",
          "--barrier",
          "--strip-nondebug",
          "--loop-load-elim",
          "--loweratomic",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--infer-address-spaces",
      "--instcombine",
      "--loop-vectorize",
      "--jump-threading",
      "--pgo-memop-opt",
      "--mergefunc",
      "--correlated-propagation",
      "--strip",
      "--loop-data-prefetch",
      "--attributor",
      "--redundant-dbg-inst-elim",
      "--loop-rotate",
      "--argpromotion",
      "--partially-inline-libcalls",
      "--coro-elide",
      "--separate-const-offset-from-gep",
      "--loop-instsimplify",
      "-loop-reduce",
      "--sancov",
      "--barrier",
      "--strip-nondebug",
      "--loop-load-elim",
      "--loweratomic",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+3.5%"
  }
}