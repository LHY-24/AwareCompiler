{
  "program_id": "github-v0_32148.ll",
  "autophase_features": {
    "BBNumArgsHi": 4,
    "BBNumArgsLo": 6,
    "onePred": 18,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 6,
    "oneSuccessor": 14,
    "twoPred": 13,
    "twoPredOneSuc": 0,
    "twoEach": 11,
    "twoSuccessor": 21,
    "morePreds": 4,
    "BB03Phi": 10,
    "BBHiPhi": 0,
    "BBNoPhi": 28,
    "BeginPhi": 10,
    "BranchCount": 35,
    "returnInt": 5,
    "CriticalCount": 24,
    "NumEdges": 56,
    "const32Bit": 42,
    "const64Bit": 26,
    "numConstZeroes": 20,
    "numConstOnes": 14,
    "UncondBranches": 14,
    "binaryConstArg": 37,
    "NumAShrInst": 10,
    "NumAddInst": 22,
    "NumAllocaInst": 0,
    "NumAndInst": 4,
    "BlockMid": 4,
    "BlockLow": 34,
    "NumBitCastInst": 0,
    "NumBrInst": 35,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 43,
    "NumMulInst": 4,
    "NumOrInst": 1,
    "NumPHIInst": 20,
    "NumRetInst": 3,
    "NumSExtInst": 20,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 10,
    "NumSubInst": 4,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 38,
    "TotalInsts": 271,
    "TotalMemInst": 114,
    "TotalFuncs": 9,
    "ArgsPhi": 43,
    "testUnary": 67
  },
  "baseline_oz_instcount": 272,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--gvn",
    "--dse",
    "--gvn",
    "--sroa",
    "--mergefunc",
    "--reassociate",
    "--prune-eh",
    "--loop-simplifycfg",
    "--globalopt",
    "--early-cse",
    "--jump-threading",
    "--slsr",
    "--instcombine",
    "--nary-reassociate",
    "--jump-threading",
    "--prune-eh",
    "--gvn",
    "--slsr",
    "--instcombine",
    "--loop-deletion",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--ipsccp",
    "--correlated-propagation",
    "--ipsccp",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--early-cse",
    "--aggressive-instcombine",
    "--inline",
    "--aggressive-instcombine",
    "--prune-eh",
    "--loop-simplifycfg",
    "--globalopt",
    "--early-cse",
    "--jump-threading",
    "--slsr",
    "--instcombine",
    "--nary-reassociate",
    "--jump-threading",
    "--prune-eh",
    "--gvn",
    "--slsr",
    "--instcombine",
    "--loop-deletion",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--ipsccp",
    "--correlated-propagation",
    "--ipsccp",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--early-cse",
    "--aggressive-instcombine",
    "--inline",
    "--aggressive-instcombine",
    "--prune-eh",
    "--loop-simplifycfg",
    "--globalopt",
    "--early-cse",
    "--jump-threading",
    "--slsr",
    "--instcombine",
    "--loop-deletion",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--ipsccp",
    "--correlated-propagation",
    "--simplifycfg",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--flattencfg",
    "--adce",
    "--simplifycfg",
    "--slsr",
    "--load-store-vectorizer",
    "--die",
    "--early-cse-memssa",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--slp-vectorizer",
    "--dse",
    "--gvn",
    "--sroa",
    "--mergefunc",
    "--reassociate",
    "--prune-eh",
    "--sroa",
    "--reassociate",
    "--gvn",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--jump-threading",
    "--early-cse",
    "--flattencfg",
    "--ipsccp",
    "--sccp",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--forceattrs",
          "--newgvn",
          "--argpromotion",
          "--nary-reassociate",
          "--instsimplify",
          "--rpo-functionattrs",
          "--loop-unswitch",
          "--lower-guard-intrinsic",
          "--coro-early",
          "--simplifycfg",
          "--lower-expect"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--forceattrs",
      "--newgvn",
      "--argpromotion",
      "--nary-reassociate",
      "--instsimplify",
      "--rpo-functionattrs",
      "--loop-unswitch",
      "--lower-guard-intrinsic",
      "--coro-early",
      "--simplifycfg",
      "--lower-expect"
    ],
    "performance_vs_Oz": "+3.3%"
  }
}