{
  "program_id": "poj104-v1_12_98.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 14,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 6,
    "oneSuccessor": 13,
    "twoPred": 8,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 10,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 1,
    "BranchCount": 23,
    "returnInt": 3,
    "CriticalCount": 10,
    "NumEdges": 33,
    "const32Bit": 29,
    "const64Bit": 21,
    "numConstZeroes": 17,
    "numConstOnes": 15,
    "UncondBranches": 13,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 25,
    "NumBitCastInst": 12,
    "NumBrInst": 23,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 26,
    "TotalInsts": 146,
    "TotalMemInst": 77,
    "TotalFuncs": 10,
    "ArgsPhi": 2,
    "testUnary": 60
  },
  "baseline_oz_instcount": 71,
  "knowledge_base_entry": [
    "--mergereturn",
    "--jump-threading",
    "--adce",
    "--mergefunc",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "-loop-reduce",
    "--early-cse-memssa",
    "--adce",
    "--loop-simplifycfg",
    "--jump-threading",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--die",
    "--lower-expect",
    "--gvn",
    "--inline",
    "--mem2reg",
    "--dce",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--mem2reg",
          "--gvn",
          "--consthoist",
          "--mldst-motion",
          "--canonicalize-aliases",
          "--barrier",
          "--lower-guard-intrinsic",
          "--dse",
          "--loop-simplifycfg",
          "--loop-instsimplify",
          "--jump-threading",
          "--simplifycfg",
          "--nary-reassociate",
          "--loop-distribute",
          "--ipconstprop",
          "--globalsplit",
          "--instcombine",
          "--strip-dead-prototypes",
          "--irce",
          "--coro-early",
          "--called-value-propagation",
          "--loop-unroll",
          "--inline",
          "--tailcallelim",
          "--memcpyopt",
          "--ee-instrument",
          "--libcalls-shrinkwrap",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--mem2reg",
      "--gvn",
      "--consthoist",
      "--mldst-motion",
      "--canonicalize-aliases",
      "--barrier",
      "--lower-guard-intrinsic",
      "--dse",
      "--loop-simplifycfg",
      "--loop-instsimplify",
      "--jump-threading",
      "--simplifycfg",
      "--nary-reassociate",
      "--loop-distribute",
      "--ipconstprop",
      "--globalsplit",
      "--instcombine",
      "--strip-dead-prototypes",
      "--irce",
      "--coro-early",
      "--called-value-propagation",
      "--loop-unroll",
      "--inline",
      "--tailcallelim",
      "--memcpyopt",
      "--ee-instrument",
      "--libcalls-shrinkwrap",
      "--newgvn"
    ],
    "performance_vs_Oz": "+9.9%"
  }
}