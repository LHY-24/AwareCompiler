{
  "program_id": "poj104-v1_38_635.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 0,
    "oneSuccessor": 12,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 15,
    "returnInt": 5,
    "CriticalCount": 0,
    "NumEdges": 18,
    "const32Bit": 23,
    "const64Bit": 20,
    "numConstZeroes": 10,
    "numConstOnes": 14,
    "UncondBranches": 12,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 16,
    "NumBitCastInst": 16,
    "NumBrInst": 15,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 18,
    "TotalInsts": 141,
    "TotalMemInst": 86,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 60
  },
  "baseline_oz_instcount": 59,
  "knowledge_base_entry": [
    "--early-cse",
    "--memcpyopt",
    "--instsimplify",
    "--early-cse",
    "--ipsccp",
    "--gvn",
    "--early-cse-memssa",
    "--die",
    "--inline",
    "--bdce",
    "--aggressive-instcombine",
    "--flattencfg",
    "--aggressive-instcombine",
    "--jump-threading",
    "--loop-deletion",
    "--sccp",
    "--dse",
    "--licm",
    "--inline",
    "--dce",
    "--mem2reg",
    "--elim-avail-extern",
    "--newgvn",
    "--reassociate",
    "--early-cse-memssa",
    "--slsr",
    "--simplifycfg",
    "--dce",
    "--slp-vectorizer",
    "--die",
    "--inline",
    "--reassociate",
    "--early-cse-memssa",
    "--slsr",
    "--indvars",
    "--correlated-propagation",
    "--dce",
    "--mergefunc",
    "--inline",
    "--newgvn",
    "--gvn-hoist",
    "--newgvn",
    "--newgvn",
    "--prune-eh",
    "--mem2reg",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--simple-loop-unswitch",
          "--guard-widening",
          "--reassociate",
          "--insert-gcov-profiling",
          "--strip-dead-prototypes",
          "--constprop",
          "--loop-unroll",
          "--always-inline",
          "--sroa",
          "--memcpyopt",
          "--jump-threading",
          "--inline",
          "--consthoist",
          "--globaldce",
          "--instsimplify",
          "--loop-guard-widening",
          "--early-cse-memssa",
          "--mergefunc",
          "--simplifycfg",
          "--lowerinvoke",
          "--globalopt",
          "--forceattrs",
          "--div-rem-pairs",
          "--dse",
          "--early-cse",
          "--canonicalize-aliases",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--simple-loop-unswitch",
      "--guard-widening",
      "--reassociate",
      "--insert-gcov-profiling",
      "--strip-dead-prototypes",
      "--constprop",
      "--loop-unroll",
      "--always-inline",
      "--sroa",
      "--memcpyopt",
      "--jump-threading",
      "--inline",
      "--consthoist",
      "--globaldce",
      "--instsimplify",
      "--loop-guard-widening",
      "--early-cse-memssa",
      "--mergefunc",
      "--simplifycfg",
      "--lowerinvoke",
      "--globalopt",
      "--forceattrs",
      "--div-rem-pairs",
      "--dse",
      "--early-cse",
      "--canonicalize-aliases",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+3.4%"
  }
}