{
  "program_id": "linux-v0_6837.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 39,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 8,
    "oneSuccessor": 37,
    "twoPred": 15,
    "twoPredOneSuc": 6,
    "twoEach": 2,
    "twoSuccessor": 19,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 86,
    "BeginPhi": 2,
    "BranchCount": 56,
    "returnInt": 13,
    "CriticalCount": 10,
    "NumEdges": 80,
    "const32Bit": 294,
    "const64Bit": 10,
    "numConstZeroes": 155,
    "numConstOnes": 114,
    "UncondBranches": 37,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 65,
    "NumAndInst": 0,
    "BlockMid": 13,
    "BlockLow": 75,
    "NumBitCastInst": 16,
    "NumBrInst": 56,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 97,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 189,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 31,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 117,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 18,
    "NumZExtInst": 13,
    "TotalBlocks": 88,
    "TotalInsts": 696,
    "TotalMemInst": 509,
    "TotalFuncs": 37,
    "ArgsPhi": 4,
    "testUnary": 297
  },
  "baseline_oz_instcount": 697,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--elim-avail-extern",
    "--sroa",
    "--loop-instsimplify",
    "--globalopt",
    "--correlated-propagation",
    "--ipsccp",
    "--globalopt",
    "--gvn",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--bdce",
    "--lower-constant-intrinsics",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--globalopt",
          "--loop-instsimplify",
          "--deadargelim",
          "--loop-simplify",
          "--loop-rotate",
          "--slp-vectorizer",
          "--guard-widening",
          "--aggressive-instcombine",
          "--ee-instrument",
          "--dse",
          "--coro-early",
          "--mergefunc",
          "--strip",
          "--correlated-propagation",
          "--loop-simplifycfg",
          "--jump-threading",
          "--loop-sink",
          "--coro-cleanup",
          "--loweratomic",
          "--simplifycfg",
          "--gvn",
          "--hotcoldsplit",
          "--loop-deletion",
          "--cross-dso-cfi",
          "--loop-versioning",
          "--loop-load-elim",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--globalopt",
      "--loop-instsimplify",
      "--deadargelim",
      "--loop-simplify",
      "--loop-rotate",
      "--slp-vectorizer",
      "--guard-widening",
      "--aggressive-instcombine",
      "--ee-instrument",
      "--dse",
      "--coro-early",
      "--mergefunc",
      "--strip",
      "--correlated-propagation",
      "--loop-simplifycfg",
      "--jump-threading",
      "--loop-sink",
      "--coro-cleanup",
      "--loweratomic",
      "--simplifycfg",
      "--gvn",
      "--hotcoldsplit",
      "--loop-deletion",
      "--cross-dso-cfi",
      "--loop-versioning",
      "--loop-load-elim",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}