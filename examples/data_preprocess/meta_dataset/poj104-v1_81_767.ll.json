{
  "program_id": "poj104-v1_81_767.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 2,
    "oneSuccessor": 32,
    "twoPred": 12,
    "twoPredOneSuc": 1,
    "twoEach": 10,
    "twoSuccessor": 12,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 0,
    "BranchCount": 44,
    "returnInt": 14,
    "CriticalCount": 2,
    "NumEdges": 56,
    "const32Bit": 39,
    "const64Bit": 39,
    "numConstZeroes": 32,
    "numConstOnes": 19,
    "UncondBranches": 32,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 46,
    "NumBitCastInst": 12,
    "NumBrInst": 44,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 56,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 47,
    "TotalInsts": 237,
    "TotalMemInst": 137,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 92
  },
  "baseline_oz_instcount": 199,
  "knowledge_base_entry": [
    "--loop-fusion",
    "--instcombine",
    "--gvn-hoist",
    "--die",
    "--gvn-hoist",
    "--inline",
    "--die",
    "--lower-constant-intrinsics",
    "--sroa",
    "--indvars",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--adce",
    "--newgvn",
    "--memcpyopt",
    "--instsimplify",
    "--simplifycfg",
    "--prune-eh",
    "--early-cse-memssa",
    "--licm",
    "--dce",
    "--gvn-hoist",
    "--inline",
    "--licm",
    "--instcombine",
    "--mergefunc",
    "--mem2reg",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--simplifycfg",
    "--sccp",
    "--jump-threading",
    "--instcombine",
    "--licm",
    "--aggressive-instcombine",
    "--dse",
    "--load-store-vectorizer",
    "--mem2reg",
    "--loop-simplifycfg",
    "--sroa",
    "--simplifycfg",
    "--instsimplify",
    "--simplifycfg",
    "--mldst-motion",
    "--simplifycfg",
    "--nary-reassociate",
    "--mem2reg",
    "--dce",
    "--simplifycfg",
    "--slp-vectorizer",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--jump-threading",
          "--div-rem-pairs",
          "--lowerswitch",
          "--lower-widenable-condition",
          "--loop-simplifycfg",
          "--loweratomic",
          "--loop-sink",
          "--reassociate",
          "--instnamer",
          "--lower-constant-intrinsics",
          "--mem2reg",
          "--insert-gcov-profiling",
          "--adce",
          "--scalarizer",
          "--canonicalize-aliases",
          "--early-cse-memssa",
          "--bdce",
          "--aggressive-instcombine",
          "--inline",
          "--separate-const-offset-from-gep",
          "--constmerge",
          "--cross-dso-cfi",
          "--ee-instrument",
          "--correlated-propagation",
          "--gvn",
          "--irce",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+28.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--jump-threading",
      "--div-rem-pairs",
      "--lowerswitch",
      "--lower-widenable-condition",
      "--loop-simplifycfg",
      "--loweratomic",
      "--loop-sink",
      "--reassociate",
      "--instnamer",
      "--lower-constant-intrinsics",
      "--mem2reg",
      "--insert-gcov-profiling",
      "--adce",
      "--scalarizer",
      "--canonicalize-aliases",
      "--early-cse-memssa",
      "--bdce",
      "--aggressive-instcombine",
      "--inline",
      "--separate-const-offset-from-gep",
      "--constmerge",
      "--cross-dso-cfi",
      "--ee-instrument",
      "--correlated-propagation",
      "--gvn",
      "--irce",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+28.6%"
  }
}