{
  "program_id": "linux-v0_7119.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 23,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 4,
    "oneSuccessor": 23,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 1,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 40,
    "BeginPhi": 1,
    "BranchCount": 30,
    "returnInt": 4,
    "CriticalCount": 3,
    "NumEdges": 37,
    "const32Bit": 138,
    "const64Bit": 19,
    "numConstZeroes": 36,
    "numConstOnes": 89,
    "UncondBranches": 23,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 71,
    "NumAndInst": 3,
    "BlockMid": 12,
    "BlockLow": 29,
    "NumBitCastInst": 16,
    "NumBrInst": 30,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 11,
    "NumLShrInst": 1,
    "NumLoadInst": 114,
    "NumMulInst": 8,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 11,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 4,
    "NumStoreInst": 90,
    "NumSubInst": 2,
    "NumTruncInst": 11,
    "NumXorInst": 3,
    "NumZExtInst": 24,
    "TotalBlocks": 41,
    "TotalInsts": 466,
    "TotalMemInst": 318,
    "TotalFuncs": 17,
    "ArgsPhi": 2,
    "testUnary": 242
  },
  "baseline_oz_instcount": 466,
  "knowledge_base_entry": [
    "--loop-interchange",
    "--gvn",
    "--elim-avail-extern",
    "--loop-deletion",
    "--sroa",
    "--globalopt",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--newgvn",
    "--early-cse-memssa",
    "--newgvn",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--die",
    "--gvn",
    "--adce",
    "--jump-threading",
    "--mem2reg",
    "--loop-rotate",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--loop-deletion",
          "--coro-elide",
          "--loop-simplifycfg",
          "--deadargelim",
          "--globalopt",
          "--coro-early",
          "--coro-split",
          "-loop-reduce",
          "--loop-fusion",
          "--mldst-motion",
          "--bdce",
          "--sccp",
          "--instcombine",
          "--licm",
          "--rewrite-statepoints-for-gc",
          "--mergereturn",
          "--scalarizer",
          "--simple-loop-unswitch",
          "--aggressive-instcombine",
          "--float2int",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--loop-deletion",
      "--coro-elide",
      "--loop-simplifycfg",
      "--deadargelim",
      "--globalopt",
      "--coro-early",
      "--coro-split",
      "-loop-reduce",
      "--loop-fusion",
      "--mldst-motion",
      "--bdce",
      "--sccp",
      "--instcombine",
      "--licm",
      "--rewrite-statepoints-for-gc",
      "--mergereturn",
      "--scalarizer",
      "--simple-loop-unswitch",
      "--aggressive-instcombine",
      "--float2int",
      "--indvars"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}