{
  "program_id": "poj104-v1_16_145.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 5,
    "oneSuccessor": 10,
    "twoPred": 9,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 8,
    "CriticalCount": 8,
    "NumEdges": 28,
    "const32Bit": 38,
    "const64Bit": 12,
    "numConstZeroes": 4,
    "numConstOnes": 8,
    "UncondBranches": 10,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 18,
    "NumBitCastInst": 12,
    "NumBrInst": 19,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 22,
    "TotalInsts": 146,
    "TotalMemInst": 78,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 52
  },
  "baseline_oz_instcount": 74,
  "knowledge_base_entry": [
    "--adce",
    "--sccp",
    "--early-cse",
    "--lower-expect",
    "--dse",
    "--inline",
    "--elim-avail-extern",
    "--sccp",
    "--mem2reg",
    "--loop-simplifycfg",
    "--jump-threading",
    "--loop-reroll",
    "--early-cse",
    "--instcombine",
    "--ipsccp",
    "--early-cse-memssa",
    "--dce",
    "--slp-vectorizer",
    "--mem2reg",
    "--instcombine",
    "--sroa",
    "--prune-eh",
    "--lower-expect",
    "--dse",
    "--inline",
    "--elim-avail-extern",
    "--sccp",
    "--mem2reg",
    "--loop-simplifycfg",
    "--jump-threading",
    "--loop-reroll",
    "--early-cse",
    "--instcombine",
    "--ipsccp",
    "--gvn",
    "--loop-rotate",
    "--jump-threading",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--loop-interchange",
          "--simplifycfg",
          "--loop-fusion",
          "--loop-load-elim",
          "--bdce",
          "--indvars",
          "--sancov",
          "--infer-address-spaces",
          "--consthoist",
          "--simple-loop-unswitch",
          "--lower-guard-intrinsic",
          "--reg2mem",
          "--mergeicmps",
          "--alignment-from-assumptions",
          "--lower-expect",
          "--aggressive-instcombine",
          "--loop-rotate",
          "--instcombine",
          "--gvn",
          "--insert-gcov-profiling",
          "--dse",
          "--lower-widenable-condition",
          "--irce",
          "--speculative-execution",
          "--rpo-functionattrs",
          "--strip-nondebug",
          "--sroa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+10.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--loop-interchange",
      "--simplifycfg",
      "--loop-fusion",
      "--loop-load-elim",
      "--bdce",
      "--indvars",
      "--sancov",
      "--infer-address-spaces",
      "--consthoist",
      "--simple-loop-unswitch",
      "--lower-guard-intrinsic",
      "--reg2mem",
      "--mergeicmps",
      "--alignment-from-assumptions",
      "--lower-expect",
      "--aggressive-instcombine",
      "--loop-rotate",
      "--instcombine",
      "--gvn",
      "--insert-gcov-profiling",
      "--dse",
      "--lower-widenable-condition",
      "--irce",
      "--speculative-execution",
      "--rpo-functionattrs",
      "--strip-nondebug",
      "--sroa"
    ],
    "performance_vs_Oz": "+10.8%"
  }
}