{
  "program_id": "github-v0_34824.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 121,
    "onePredOneSuc": 64,
    "onePredTwoSuc": 56,
    "oneSuccessor": 88,
    "twoPred": 32,
    "twoPredOneSuc": 20,
    "twoEach": 11,
    "twoSuccessor": 71,
    "morePreds": 7,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 161,
    "BeginPhi": 2,
    "BranchCount": 159,
    "returnInt": 21,
    "CriticalCount": 54,
    "NumEdges": 260,
    "const32Bit": 176,
    "const64Bit": 49,
    "numConstZeroes": 92,
    "numConstOnes": 34,
    "UncondBranches": 88,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 16,
    "NumAndInst": 16,
    "BlockMid": 5,
    "BlockLow": 158,
    "NumBitCastInst": 1,
    "NumBrInst": 159,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 67,
    "NumICmpInst": 71,
    "NumLShrInst": 0,
    "NumLoadInst": 246,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 3,
    "NumSExtInst": 58,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 100,
    "NumSubInst": 3,
    "NumTruncInst": 11,
    "NumXorInst": 1,
    "NumZExtInst": 16,
    "TotalBlocks": 163,
    "TotalInsts": 831,
    "TotalMemInst": 483,
    "TotalFuncs": 7,
    "ArgsPhi": 4,
    "testUnary": 348
  },
  "baseline_oz_instcount": 836,
  "knowledge_base_entry": [
    "--lower-expect",
    "--nary-reassociate",
    "--instsimplify",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--reassociate",
          "--coro-elide",
          "--aggressive-instcombine",
          "--correlated-propagation",
          "--prune-eh",
          "--callsite-splitting",
          "--consthoist",
          "--tailcallelim",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--reassociate",
      "--coro-elide",
      "--aggressive-instcombine",
      "--correlated-propagation",
      "--prune-eh",
      "--callsite-splitting",
      "--consthoist",
      "--tailcallelim",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}