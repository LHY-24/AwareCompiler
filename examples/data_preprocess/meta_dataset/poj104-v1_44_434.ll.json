{
  "program_id": "poj104-v1_44_434.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 0,
    "oneSuccessor": 16,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 24,
    "const32Bit": 24,
    "const64Bit": 14,
    "numConstZeroes": 9,
    "numConstOnes": 10,
    "UncondBranches": 16,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 23,
    "NumBitCastInst": 12,
    "NumBrInst": 20,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 21,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 24,
    "TotalInsts": 116,
    "TotalMemInst": 62,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 43
  },
  "baseline_oz_instcount": 60,
  "knowledge_base_entry": [
    "--scalarizer",
    "--early-cse-memssa",
    "--ipsccp",
    "--adce",
    "--mem2reg",
    "--elim-avail-extern",
    "--reassociate",
    "--dse",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--jump-threading",
    "--loop-reroll",
    "--indvars",
    "--correlated-propagation",
    "--dce",
    "--loop-instsimplify",
    "--lower-expect",
    "--newgvn",
    "--mergefunc",
    "--loop-reroll",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--bdce",
    "--mem2reg",
    "--flattencfg",
    "--sroa",
    "--loop-deletion",
    "--instcombine",
    "--gvn",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-split",
          "--alignment-from-assumptions",
          "--correlated-propagation",
          "--instcombine",
          "--barrier",
          "--reg2mem",
          "--lower-constant-intrinsics",
          "--loop-vectorize",
          "--inferattrs",
          "--loop-instsimplify",
          "--partial-inliner",
          "--inject-tli-mappings",
          "--elim-avail-extern",
          "--lower-expect",
          "--indvars",
          "--globaldce",
          "--loop-idiom",
          "--sroa",
          "--sccp",
          "--constprop",
          "--lcssa",
          "--reassociate",
          "--early-cse-memssa",
          "--coro-early",
          "--lower-guard-intrinsic",
          "--rewrite-statepoints-for-gc",
          "--gvn",
          "--canonicalize-aliases"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+13.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-split",
      "--alignment-from-assumptions",
      "--correlated-propagation",
      "--instcombine",
      "--barrier",
      "--reg2mem",
      "--lower-constant-intrinsics",
      "--loop-vectorize",
      "--inferattrs",
      "--loop-instsimplify",
      "--partial-inliner",
      "--inject-tli-mappings",
      "--elim-avail-extern",
      "--lower-expect",
      "--indvars",
      "--globaldce",
      "--loop-idiom",
      "--sroa",
      "--sccp",
      "--constprop",
      "--lcssa",
      "--reassociate",
      "--early-cse-memssa",
      "--coro-early",
      "--lower-guard-intrinsic",
      "--rewrite-statepoints-for-gc",
      "--gvn",
      "--canonicalize-aliases"
    ],
    "performance_vs_Oz": "+13.3%"
  }
}