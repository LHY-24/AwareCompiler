{
  "program_id": "linux-v0_12523.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 5,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 22,
    "const64Bit": 0,
    "numConstZeroes": 4,
    "numConstOnes": 11,
    "UncondBranches": 0,
    "binaryConstArg": 4,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 11,
    "NumAndInst": 2,
    "BlockMid": 2,
    "BlockLow": 4,
    "NumBitCastInst": 1,
    "NumBrInst": 0,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 14,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 12,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 6,
    "TotalInsts": 64,
    "TotalMemInst": 45,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 33
  },
  "baseline_oz_instcount": 64,
  "knowledge_base_entry": [
    "--sroa",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--dse",
    "--gvn-hoist",
    "--instsimplify",
    "--newgvn",
    "--loop-deletion",
    "--sroa",
    "--gvn",
    "--load-store-vectorizer",
    "--sroa",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--indvars",
    "--early-cse",
    "--globalopt",
    "--flattencfg",
    "--jump-threading",
    "--aggressive-instcombine",
    "--loweratomic",
    "--globalopt",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--loop-data-prefetch",
          "--loop-interchange",
          "--loop-unroll-and-jam",
          "--slp-vectorizer",
          "--aggressive-instcombine",
          "--ee-instrument",
          "--elim-avail-extern",
          "--flattencfg",
          "--rpo-functionattrs",
          "--early-cse-memssa",
          "--inline",
          "--coro-early",
          "--mldst-motion",
          "--loop-vectorize",
          "--loop-load-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--loop-data-prefetch",
      "--loop-interchange",
      "--loop-unroll-and-jam",
      "--slp-vectorizer",
      "--aggressive-instcombine",
      "--ee-instrument",
      "--elim-avail-extern",
      "--flattencfg",
      "--rpo-functionattrs",
      "--early-cse-memssa",
      "--inline",
      "--coro-early",
      "--mldst-motion",
      "--loop-vectorize",
      "--loop-load-elim"
    ],
    "performance_vs_Oz": "+3.1%"
  }
}