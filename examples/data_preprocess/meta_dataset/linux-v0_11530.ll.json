{
  "program_id": "linux-v0_11530.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 71,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 23,
    "oneSuccessor": 59,
    "twoPred": 25,
    "twoPredOneSuc": 7,
    "twoEach": 11,
    "twoSuccessor": 42,
    "morePreds": 6,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 121,
    "BeginPhi": 2,
    "BranchCount": 101,
    "returnInt": 21,
    "CriticalCount": 26,
    "NumEdges": 147,
    "const32Bit": 317,
    "const64Bit": 23,
    "numConstZeroes": 178,
    "numConstOnes": 118,
    "UncondBranches": 59,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 72,
    "NumAndInst": 6,
    "BlockMid": 14,
    "BlockLow": 109,
    "NumBitCastInst": 12,
    "NumBrInst": 101,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 102,
    "NumICmpInst": 44,
    "NumLShrInst": 2,
    "NumLoadInst": 239,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 21,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 110,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 15,
    "NumZExtInst": 20,
    "TotalBlocks": 123,
    "TotalInsts": 832,
    "TotalMemInst": 571,
    "TotalFuncs": 36,
    "ArgsPhi": 4,
    "testUnary": 373
  },
  "baseline_oz_instcount": 833,
  "knowledge_base_entry": [
    "--sink",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--gvn",
    "--dse",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partial-inliner",
          "--infer-address-spaces",
          "--slp-vectorizer",
          "--memcpyopt",
          "--lower-guard-intrinsic",
          "--called-value-propagation",
          "--libcalls-shrinkwrap",
          "--flattencfg",
          "--coro-elide",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partial-inliner",
      "--infer-address-spaces",
      "--slp-vectorizer",
      "--memcpyopt",
      "--lower-guard-intrinsic",
      "--called-value-propagation",
      "--libcalls-shrinkwrap",
      "--flattencfg",
      "--coro-elide",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}