{
  "program_id": "github-v0_46609.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 2,
    "oneSuccessor": 4,
    "twoPred": 1,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 10,
    "CriticalCount": 1,
    "NumEdges": 10,
    "const32Bit": 41,
    "const64Bit": 0,
    "numConstZeroes": 2,
    "numConstOnes": 35,
    "UncondBranches": 4,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 34,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 26,
    "NumBitCastInst": 0,
    "NumBrInst": 7,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 16,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 38,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 26,
    "TotalInsts": 146,
    "TotalMemInst": 110,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 57
  },
  "baseline_oz_instcount": 146,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--instcombine",
    "--loop-deletion",
    "--early-cse",
    "--correlated-propagation",
    "--mergefunc",
    "--loop-simplifycfg",
    "--dse",
    "--load-store-vectorizer",
    "--mem2reg",
    "--mergefunc",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--ipconstprop",
          "--float2int",
          "--attributor",
          "--instsimplify",
          "--loop-idiom",
          "--memcpyopt",
          "--mergefunc",
          "--coro-cleanup",
          "--sancov",
          "--loop-fusion",
          "--loop-unswitch",
          "--correlated-propagation",
          "--mldst-motion",
          "--loop-distribute",
          "--rewrite-statepoints-for-gc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+32.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--ipconstprop",
      "--float2int",
      "--attributor",
      "--instsimplify",
      "--loop-idiom",
      "--memcpyopt",
      "--mergefunc",
      "--coro-cleanup",
      "--sancov",
      "--loop-fusion",
      "--loop-unswitch",
      "--correlated-propagation",
      "--mldst-motion",
      "--loop-distribute",
      "--rewrite-statepoints-for-gc"
    ],
    "performance_vs_Oz": "+32.2%"
  }
}