{
  "program_id": "github-v0_33556.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 5,
    "oneSuccessor": 28,
    "twoPred": 12,
    "twoPredOneSuc": 5,
    "twoEach": 6,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 2,
    "CriticalCount": 9,
    "NumEdges": 63,
    "const32Bit": 42,
    "const64Bit": 48,
    "numConstZeroes": 23,
    "numConstOnes": 26,
    "UncondBranches": 28,
    "binaryConstArg": 43,
    "NumAShrInst": 1,
    "NumAddInst": 13,
    "NumAllocaInst": 11,
    "NumAndInst": 9,
    "BlockMid": 4,
    "BlockLow": 37,
    "NumBitCastInst": 0,
    "NumBrInst": 39,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 12,
    "NumLShrInst": 11,
    "NumLoadInst": 84,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 9,
    "NumStoreInst": 47,
    "NumSubInst": 11,
    "NumTruncInst": 5,
    "NumXorInst": 4,
    "NumZExtInst": 15,
    "TotalBlocks": 41,
    "TotalInsts": 310,
    "TotalMemInst": 156,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 124
  },
  "baseline_oz_instcount": 311,
  "knowledge_base_entry": [
    "--jump-threading",
    "--adce",
    "--aggressive-instcombine",
    "--gvn",
    "--early-cse",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--loop-fusion",
          "--lower-expect",
          "--indvars",
          "--loop-reroll",
          "--consthoist",
          "--aggressive-instcombine",
          "--die",
          "--lcssa",
          "--strip-dead-prototypes",
          "--sink",
          "--prune-eh",
          "--insert-gcov-profiling",
          "--memcpyopt",
          "--speculative-execution",
          "--lower-widenable-condition"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--loop-fusion",
      "--lower-expect",
      "--indvars",
      "--loop-reroll",
      "--consthoist",
      "--aggressive-instcombine",
      "--die",
      "--lcssa",
      "--strip-dead-prototypes",
      "--sink",
      "--prune-eh",
      "--insert-gcov-profiling",
      "--memcpyopt",
      "--speculative-execution",
      "--lower-widenable-condition"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}