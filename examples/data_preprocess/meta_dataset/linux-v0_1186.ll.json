{
  "program_id": "linux-v0_1186.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 8,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 17,
    "const64Bit": 12,
    "numConstZeroes": 4,
    "numConstOnes": 11,
    "UncondBranches": 0,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 10,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 7,
    "NumBitCastInst": 2,
    "NumBrInst": 0,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 8,
    "TotalInsts": 99,
    "TotalMemInst": 77,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 43
  },
  "baseline_oz_instcount": 81,
  "knowledge_base_entry": [
    "--newgvn",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--globaldce",
    "--ipsccp",
    "--globaldce",
    "--ipsccp",
    "--aggressive-instcombine",
    "--instsimplify",
    "--simplifycfg",
    "--sccp",
    "--simplifycfg",
    "--early-cse",
    "--licm",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--jump-threading",
    "--ipsccp",
    "--dce",
    "--simplifycfg",
    "--gvn-hoist",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--prune-eh",
    "--instcombine",
    "--gvn",
    "--slp-vectorizer",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--redundant-dbg-inst-elim",
          "--lower-widenable-condition",
          "--functionattrs",
          "--loop-fusion",
          "--reassociate",
          "--loop-guard-widening",
          "--inferattrs",
          "--irce",
          "--mergefunc",
          "--rpo-functionattrs",
          "--lower-constant-intrinsics",
          "--elim-avail-extern",
          "--lcssa",
          "--globalopt",
          "--sancov",
          "--coro-split",
          "--aggressive-instcombine",
          "--ipconstprop",
          "--loop-deletion",
          "--canonicalize-aliases",
          "--partially-inline-libcalls",
          "--consthoist",
          "--lowerinvoke",
          "--deadargelim",
          "--ipsccp",
          "--infer-address-spaces",
          "--coro-cleanup",
          "--loop-simplifycfg",
          "--instnamer",
          "--sccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--redundant-dbg-inst-elim",
      "--lower-widenable-condition",
      "--functionattrs",
      "--loop-fusion",
      "--reassociate",
      "--loop-guard-widening",
      "--inferattrs",
      "--irce",
      "--mergefunc",
      "--rpo-functionattrs",
      "--lower-constant-intrinsics",
      "--elim-avail-extern",
      "--lcssa",
      "--globalopt",
      "--sancov",
      "--coro-split",
      "--aggressive-instcombine",
      "--ipconstprop",
      "--loop-deletion",
      "--canonicalize-aliases",
      "--partially-inline-libcalls",
      "--consthoist",
      "--lowerinvoke",
      "--deadargelim",
      "--ipsccp",
      "--infer-address-spaces",
      "--coro-cleanup",
      "--loop-simplifycfg",
      "--instnamer",
      "--sccp"
    ],
    "performance_vs_Oz": "+7.4%"
  }
}