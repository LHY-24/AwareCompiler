{
  "program_id": "linux-v0_8213.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 9,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 1,
    "BranchCount": 12,
    "returnInt": 8,
    "CriticalCount": 3,
    "NumEdges": 19,
    "const32Bit": 197,
    "const64Bit": 5,
    "numConstZeroes": 36,
    "numConstOnes": 75,
    "UncondBranches": 9,
    "binaryConstArg": 51,
    "NumAShrInst": 1,
    "NumAddInst": 9,
    "NumAllocaInst": 54,
    "NumAndInst": 12,
    "BlockMid": 6,
    "BlockLow": 19,
    "NumBitCastInst": 4,
    "NumBrInst": 12,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 30,
    "NumICmpInst": 4,
    "NumLShrInst": 5,
    "NumLoadInst": 135,
    "NumMulInst": 4,
    "NumOrInst": 15,
    "NumPHIInst": 1,
    "NumRetInst": 12,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 10,
    "NumStoreInst": 77,
    "NumSubInst": 13,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 25,
    "TotalInsts": 456,
    "TotalMemInst": 335,
    "TotalFuncs": 17,
    "ArgsPhi": 2,
    "testUnary": 210
  },
  "baseline_oz_instcount": 456,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--dce",
    "--aggressive-instcombine",
    "--ipsccp",
    "--gvn-hoist",
    "--flattencfg",
    "--loop-simplifycfg",
    "--instsimplify",
    "--aggressive-instcombine",
    "--lower-expect",
    "--aggressive-instcombine",
    "--instsimplify",
    "--adce",
    "--licm",
    "--memcpyopt",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--irce",
          "--guard-widening",
          "--loop-fusion",
          "--inferattrs",
          "--nary-reassociate",
          "--functionattrs",
          "--hotcoldsplit",
          "--constmerge",
          "--loop-instsimplify",
          "--loop-load-elim",
          "--early-cse-memssa",
          "--prune-eh",
          "--correlated-propagation",
          "--aggressive-instcombine",
          "--loop-data-prefetch",
          "--inline",
          "-loop-reduce",
          "--argpromotion",
          "--lower-expect",
          "--lower-widenable-condition"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--irce",
      "--guard-widening",
      "--loop-fusion",
      "--inferattrs",
      "--nary-reassociate",
      "--functionattrs",
      "--hotcoldsplit",
      "--constmerge",
      "--loop-instsimplify",
      "--loop-load-elim",
      "--early-cse-memssa",
      "--prune-eh",
      "--correlated-propagation",
      "--aggressive-instcombine",
      "--loop-data-prefetch",
      "--inline",
      "-loop-reduce",
      "--argpromotion",
      "--lower-expect",
      "--lower-widenable-condition"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}