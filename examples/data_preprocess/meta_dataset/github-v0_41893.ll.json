{
  "program_id": "github-v0_41893.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 0,
    "BranchCount": 4,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 5,
    "const32Bit": 251,
    "const64Bit": 5,
    "numConstZeroes": 6,
    "numConstOnes": 152,
    "UncondBranches": 3,
    "binaryConstArg": 179,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 70,
    "NumAndInst": 105,
    "BlockMid": 26,
    "BlockLow": 20,
    "NumBitCastInst": 180,
    "NumBrInst": 4,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 1,
    "NumLShrInst": 46,
    "NumLoadInst": 160,
    "NumMulInst": 2,
    "NumOrInst": 27,
    "NumPHIInst": 0,
    "NumRetInst": 42,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 23,
    "NumStoreInst": 102,
    "NumSubInst": 0,
    "NumTruncInst": 53,
    "NumXorInst": 0,
    "NumZExtInst": 81,
    "TotalBlocks": 46,
    "TotalInsts": 907,
    "TotalMemInst": 336,
    "TotalFuncs": 42,
    "ArgsPhi": 0,
    "testUnary": 548
  },
  "baseline_oz_instcount": 907,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--mem2reg",
    "--loop-rotate",
    "--elim-avail-extern",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--ipsccp",
    "--mergefunc",
    "--dse",
    "--bdce",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--loop-vectorize",
          "--sink",
          "--loop-simplify",
          "--callsite-splitting",
          "--globalsplit",
          "--aggressive-instcombine",
          "--rpo-functionattrs",
          "--name-anon-globals",
          "--infer-address-spaces"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--loop-vectorize",
      "--sink",
      "--loop-simplify",
      "--callsite-splitting",
      "--globalsplit",
      "--aggressive-instcombine",
      "--rpo-functionattrs",
      "--name-anon-globals",
      "--infer-address-spaces"
    ],
    "performance_vs_Oz": "+11.2%"
  }
}