{
  "program_id": "linux-v0_4503.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 69,
    "onePredOneSuc": 50,
    "onePredTwoSuc": 19,
    "oneSuccessor": 55,
    "twoPred": 18,
    "twoPredOneSuc": 3,
    "twoEach": 10,
    "twoSuccessor": 37,
    "morePreds": 6,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 110,
    "BeginPhi": 4,
    "BranchCount": 92,
    "returnInt": 39,
    "CriticalCount": 19,
    "NumEdges": 132,
    "const32Bit": 328,
    "const64Bit": 34,
    "numConstZeroes": 171,
    "numConstOnes": 120,
    "UncondBranches": 55,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 81,
    "NumAndInst": 6,
    "BlockMid": 16,
    "BlockLow": 98,
    "NumBitCastInst": 15,
    "NumBrInst": 92,
    "NumCallInst": 71,
    "NumGetElementPtrInst": 81,
    "NumICmpInst": 34,
    "NumLShrInst": 0,
    "NumLoadInst": 229,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 4,
    "NumRetInst": 21,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 126,
    "NumSubInst": 2,
    "NumTruncInst": 22,
    "NumXorInst": 6,
    "NumZExtInst": 15,
    "TotalBlocks": 114,
    "TotalInsts": 822,
    "TotalMemInst": 588,
    "TotalFuncs": 43,
    "ArgsPhi": 8,
    "testUnary": 370
  },
  "baseline_oz_instcount": 822,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--dse",
    "--ipsccp",
    "--gvn",
    "--loop-deletion",
    "--jump-threading",
    "--flattencfg",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--callsite-splitting",
          "--speculative-execution",
          "--indvars",
          "--licm",
          "--loop-simplifycfg",
          "-loop-reduce",
          "--deadargelim",
          "--barrier",
          "--loop-instsimplify",
          "--memcpyopt",
          "--inject-tli-mappings",
          "--loop-versioning",
          "--gvn",
          "--instcombine",
          "--ipconstprop",
          "--strip-debug-declare",
          "--post-inline-ee-instrument",
          "--sink",
          "--float2int",
          "--dse",
          "--sccp",
          "--correlated-propagation",
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--ee-instrument",
          "--loop-distribute",
          "--functionattrs",
          "--loop-unroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--callsite-splitting",
      "--speculative-execution",
      "--indvars",
      "--licm",
      "--loop-simplifycfg",
      "-loop-reduce",
      "--deadargelim",
      "--barrier",
      "--loop-instsimplify",
      "--memcpyopt",
      "--inject-tli-mappings",
      "--loop-versioning",
      "--gvn",
      "--instcombine",
      "--ipconstprop",
      "--strip-debug-declare",
      "--post-inline-ee-instrument",
      "--sink",
      "--float2int",
      "--dse",
      "--sccp",
      "--correlated-propagation",
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--ee-instrument",
      "--loop-distribute",
      "--functionattrs",
      "--loop-unroll"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}