{
  "program_id": "github-v0_29445.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 29,
    "const64Bit": 44,
    "numConstZeroes": 46,
    "numConstOnes": 19,
    "UncondBranches": 13,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 46,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 1,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 32,
    "TotalBlocks": 24,
    "TotalInsts": 205,
    "TotalMemInst": 115,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 103
  },
  "baseline_oz_instcount": 205,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--early-cse-memssa",
    "--adce",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--gvn",
    "--mem2reg",
    "--inline",
    "--elim-avail-extern",
    "--die",
    "--dse",
    "--ipsccp",
    "--loop-deletion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-interchange",
          "--guard-widening",
          "--inject-tli-mappings",
          "--loop-sink",
          "--rewrite-statepoints-for-gc",
          "--aggressive-instcombine",
          "--sancov",
          "--ipconstprop",
          "--alignment-from-assumptions",
          "--reg2mem",
          "--loop-guard-widening",
          "--speculative-execution",
          "--early-cse-memssa",
          "--scalarizer",
          "--flattencfg",
          "--lower-widenable-condition",
          "--lower-guard-intrinsic",
          "--rpo-functionattrs",
          "--loop-reroll",
          "--name-anon-globals",
          "--constprop",
          "--instcombine",
          "--coro-early"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-interchange",
      "--guard-widening",
      "--inject-tli-mappings",
      "--loop-sink",
      "--rewrite-statepoints-for-gc",
      "--aggressive-instcombine",
      "--sancov",
      "--ipconstprop",
      "--alignment-from-assumptions",
      "--reg2mem",
      "--loop-guard-widening",
      "--speculative-execution",
      "--early-cse-memssa",
      "--scalarizer",
      "--flattencfg",
      "--lower-widenable-condition",
      "--lower-guard-intrinsic",
      "--rpo-functionattrs",
      "--loop-reroll",
      "--name-anon-globals",
      "--constprop",
      "--instcombine",
      "--coro-early"
    ],
    "performance_vs_Oz": "+11.7%"
  }
}