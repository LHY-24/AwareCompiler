{
  "program_id": "linux-v0_5477.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 50,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 16,
    "oneSuccessor": 42,
    "twoPred": 15,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 28,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 1,
    "BranchCount": 70,
    "returnInt": 33,
    "CriticalCount": 10,
    "NumEdges": 98,
    "const32Bit": 394,
    "const64Bit": 69,
    "numConstZeroes": 206,
    "numConstOnes": 120,
    "UncondBranches": 42,
    "binaryConstArg": 40,
    "NumAShrInst": 0,
    "NumAddInst": 22,
    "NumAllocaInst": 82,
    "NumAndInst": 6,
    "BlockMid": 15,
    "BlockLow": 80,
    "NumBitCastInst": 20,
    "NumBrInst": 70,
    "NumCallInst": 70,
    "NumGetElementPtrInst": 146,
    "NumICmpInst": 32,
    "NumLShrInst": 0,
    "NumLoadInst": 279,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 25,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 127,
    "NumSubInst": 3,
    "NumTruncInst": 19,
    "NumXorInst": 8,
    "NumZExtInst": 23,
    "TotalBlocks": 95,
    "TotalInsts": 944,
    "TotalMemInst": 704,
    "TotalFuncs": 48,
    "ArgsPhi": 2,
    "testUnary": 430
  },
  "baseline_oz_instcount": 944,
  "knowledge_base_entry": [
    "--indvars",
    "--sroa",
    "--aggressive-instcombine",
    "--instsimplify",
    "--ipsccp",
    "--inline",
    "--sccp",
    "--instcombine",
    "--aggressive-instcombine",
    "--dce",
    "--reassociate",
    "--globalopt",
    "--dse",
    "--licm",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--ipsccp",
    "--inline",
    "--sccp",
    "--instcombine",
    "--aggressive-instcombine",
    "--dce",
    "--reassociate",
    "--globalopt",
    "--dse",
    "--mldst-motion",
    "--early-cse",
    "--simplifycfg",
    "--loop-instsimplify",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--inferattrs",
          "--strip-debug-declare",
          "--coro-early",
          "--loop-simplify",
          "--correlated-propagation",
          "--insert-gcov-profiling",
          "--jump-threading",
          "--strip-nondebug",
          "--ipsccp",
          "--globalopt",
          "--lowerswitch",
          "--lower-guard-intrinsic",
          "--pgo-memop-opt",
          "--licm",
          "--slp-vectorizer",
          "--loop-reroll",
          "--adce",
          "--loop-rotate",
          "--deadargelim",
          "--always-inline",
          "--sccp",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--inferattrs",
      "--strip-debug-declare",
      "--coro-early",
      "--loop-simplify",
      "--correlated-propagation",
      "--insert-gcov-profiling",
      "--jump-threading",
      "--strip-nondebug",
      "--ipsccp",
      "--globalopt",
      "--lowerswitch",
      "--lower-guard-intrinsic",
      "--pgo-memop-opt",
      "--licm",
      "--slp-vectorizer",
      "--loop-reroll",
      "--adce",
      "--loop-rotate",
      "--deadargelim",
      "--always-inline",
      "--sccp",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}