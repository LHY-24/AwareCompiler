{
  "program_id": "github-v0_8025.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 31,
    "const64Bit": 29,
    "numConstZeroes": 29,
    "numConstOnes": 20,
    "UncondBranches": 9,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 14,
    "NumBitCastInst": 4,
    "NumBrInst": 14,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 30,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 18,
    "TotalInsts": 142,
    "TotalMemInst": 90,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 63
  },
  "baseline_oz_instcount": 142,
  "knowledge_base_entry": [
    "--gvn",
    "--slp-vectorizer",
    "--bdce",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--lower-expect",
    "--early-cse-memssa",
    "--prune-eh",
    "--instcombine",
    "-loop-reduce",
    "--early-cse-memssa",
    "--simplifycfg",
    "--lower-expect",
    "--die",
    "--aggressive-instcombine",
    "--loweratomic",
    "--globalopt",
    "--jump-threading",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--lower-expect",
    "--elim-avail-extern",
    "--dce",
    "--jump-threading",
    "--dse",
    "--adce",
    "--bdce",
    "--newgvn",
    "--die",
    "--inline",
    "--elim-avail-extern",
    "--loop-deletion",
    "--sroa",
    "--early-cse",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--deadargelim",
          "--add-discriminators",
          "--functionattrs",
          "--loop-vectorize",
          "--loop-predication",
          "--sroa",
          "--scalarizer",
          "--loop-idiom",
          "--lower-widenable-condition",
          "--loop-versioning-licm",
          "--aggressive-instcombine",
          "--gvn-hoist",
          "--inject-tli-mappings",
          "--loop-data-prefetch",
          "--lower-guard-intrinsic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--deadargelim",
      "--add-discriminators",
      "--functionattrs",
      "--loop-vectorize",
      "--loop-predication",
      "--sroa",
      "--scalarizer",
      "--loop-idiom",
      "--lower-widenable-condition",
      "--loop-versioning-licm",
      "--aggressive-instcombine",
      "--gvn-hoist",
      "--inject-tli-mappings",
      "--loop-data-prefetch",
      "--lower-guard-intrinsic"
    ],
    "performance_vs_Oz": "+4.2%"
  }
}