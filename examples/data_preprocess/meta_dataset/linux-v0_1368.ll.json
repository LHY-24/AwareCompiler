{
  "program_id": "linux-v0_1368.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 35,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 8,
    "oneSuccessor": 31,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 17,
    "morePreds": 3,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 67,
    "BeginPhi": 4,
    "BranchCount": 47,
    "returnInt": 50,
    "CriticalCount": 3,
    "NumEdges": 65,
    "const32Bit": 252,
    "const64Bit": 28,
    "numConstZeroes": 108,
    "numConstOnes": 108,
    "UncondBranches": 31,
    "binaryConstArg": 19,
    "NumAShrInst": 4,
    "NumAddInst": 9,
    "NumAllocaInst": 75,
    "NumAndInst": 2,
    "BlockMid": 10,
    "BlockLow": 61,
    "NumBitCastInst": 11,
    "NumBrInst": 47,
    "NumCallInst": 74,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 18,
    "NumLShrInst": 2,
    "NumLoadInst": 184,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 4,
    "NumRetInst": 23,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 140,
    "NumSubInst": 0,
    "NumTruncInst": 11,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 71,
    "TotalInsts": 696,
    "TotalMemInst": 541,
    "TotalFuncs": 37,
    "ArgsPhi": 8,
    "testUnary": 300
  },
  "baseline_oz_instcount": 697,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--gvn",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--jump-threading",
    "--reassociate",
    "--bdce",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--die",
          "--scalarizer",
          "--correlated-propagation",
          "--tailcallelim",
          "--speculative-execution",
          "--newgvn",
          "--separate-const-offset-from-gep",
          "--loop-deletion",
          "--mergereturn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--die",
      "--scalarizer",
      "--correlated-propagation",
      "--tailcallelim",
      "--speculative-execution",
      "--newgvn",
      "--separate-const-offset-from-gep",
      "--loop-deletion",
      "--mergereturn"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}