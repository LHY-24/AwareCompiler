{
  "program_id": "github-v0_29711.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 32,
    "const64Bit": 42,
    "numConstZeroes": 47,
    "numConstOnes": 19,
    "UncondBranches": 11,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 11,
    "NumAndInst": 2,
    "BlockMid": 6,
    "BlockLow": 15,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 1,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 18,
    "TotalBlocks": 21,
    "TotalInsts": 165,
    "TotalMemInst": 93,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 73
  },
  "baseline_oz_instcount": 165,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--gvn",
    "--aggressive-instcombine",
    "--instcombine",
    "--dce",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerswitch",
          "--globaldce",
          "--loweratomic",
          "--guard-widening",
          "--die",
          "--partially-inline-libcalls",
          "--loop-data-prefetch",
          "--loop-unswitch",
          "--ee-instrument",
          "--lcssa",
          "--early-cse-memssa",
          "--div-rem-pairs",
          "--ipconstprop",
          "--loop-simplifycfg",
          "--loop-vectorize",
          "--aggressive-instcombine",
          "--consthoist",
          "--add-discriminators"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+13.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerswitch",
      "--globaldce",
      "--loweratomic",
      "--guard-widening",
      "--die",
      "--partially-inline-libcalls",
      "--loop-data-prefetch",
      "--loop-unswitch",
      "--ee-instrument",
      "--lcssa",
      "--early-cse-memssa",
      "--div-rem-pairs",
      "--ipconstprop",
      "--loop-simplifycfg",
      "--loop-vectorize",
      "--aggressive-instcombine",
      "--consthoist",
      "--add-discriminators"
    ],
    "performance_vs_Oz": "+13.3%"
  }
}