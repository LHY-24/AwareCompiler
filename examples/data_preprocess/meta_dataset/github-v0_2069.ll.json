{
  "program_id": "github-v0_2069.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 2,
    "oneSuccessor": 21,
    "twoPred": 8,
    "twoPredOneSuc": 1,
    "twoEach": 6,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 29,
    "returnInt": 1,
    "CriticalCount": 1,
    "NumEdges": 37,
    "const32Bit": 85,
    "const64Bit": 25,
    "numConstZeroes": 61,
    "numConstOnes": 22,
    "UncondBranches": 21,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 27,
    "NumBitCastInst": 4,
    "NumBrInst": 29,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 8,
    "NumLShrInst": 2,
    "NumLoadInst": 57,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 26,
    "NumSubInst": 3,
    "NumTruncInst": 1,
    "NumXorInst": 3,
    "NumZExtInst": 0,
    "TotalBlocks": 31,
    "TotalInsts": 229,
    "TotalMemInst": 154,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 91
  },
  "baseline_oz_instcount": 230,
  "knowledge_base_entry": [
    "--loweratomic",
    "--ipsccp",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--gvn",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--redundant-dbg-inst-elim",
          "--aggressive-instcombine",
          "--add-discriminators",
          "--gvn",
          "--inferattrs",
          "--coro-cleanup",
          "--simplifycfg",
          "--mergefunc",
          "--partial-inliner",
          "--barrier",
          "--memcpyopt",
          "--hotcoldsplit",
          "--lcssa",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--redundant-dbg-inst-elim",
      "--aggressive-instcombine",
      "--add-discriminators",
      "--gvn",
      "--inferattrs",
      "--coro-cleanup",
      "--simplifycfg",
      "--mergefunc",
      "--partial-inliner",
      "--barrier",
      "--memcpyopt",
      "--hotcoldsplit",
      "--lcssa",
      "--adce"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}