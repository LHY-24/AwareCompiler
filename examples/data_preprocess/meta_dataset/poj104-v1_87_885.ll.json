{
  "program_id": "poj104-v1_87_885.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 3,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 1,
    "BranchCount": 5,
    "returnInt": 6,
    "CriticalCount": 1,
    "NumEdges": 7,
    "const32Bit": 28,
    "const64Bit": 20,
    "numConstZeroes": 5,
    "numConstOnes": 20,
    "UncondBranches": 3,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 19,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 8,
    "NumBitCastInst": 20,
    "NumBrInst": 5,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 20,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 123,
    "TotalMemInst": 81,
    "TotalFuncs": 12,
    "ArgsPhi": 2,
    "testUnary": 59
  },
  "baseline_oz_instcount": 64,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--licm",
    "--jump-threading",
    "--slp-vectorizer",
    "--adce",
    "--die",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--slp-vectorizer",
    "--newgvn",
    "--slp-vectorizer",
    "--dce",
    "--correlated-propagation",
    "--reassociate",
    "--mergefunc",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--ipsccp",
    "--loop-simplifycfg",
    "--dse",
    "--instsimplify",
    "--dse",
    "--newgvn",
    "--simplifycfg",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--sroa",
    "--bdce",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--newgvn",
    "--simplifycfg",
    "--loop-instsimplify",
    "--bdce",
    "--sccp",
    "--bdce",
    "--early-cse-memssa",
    "--early-cse",
    "--die",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--jump-threading",
    "--mergefunc",
    "--instcombine",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--licm",
          "--rpo-functionattrs",
          "--dce",
          "--loop-simplifycfg",
          "--instnamer",
          "--newgvn",
          "--coro-split",
          "--simplifycfg",
          "--early-cse-memssa",
          "--div-rem-pairs",
          "--load-store-vectorizer",
          "--called-value-propagation",
          "--strip-nondebug",
          "--globalopt",
          "--instcombine",
          "--simple-loop-unswitch",
          "--mergereturn",
          "--loop-predication",
          "--pgo-memop-opt",
          "--strip-debug-declare",
          "--hotcoldsplit",
          "--name-anon-globals",
          "--loop-guard-widening",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--licm",
      "--rpo-functionattrs",
      "--dce",
      "--loop-simplifycfg",
      "--instnamer",
      "--newgvn",
      "--coro-split",
      "--simplifycfg",
      "--early-cse-memssa",
      "--div-rem-pairs",
      "--load-store-vectorizer",
      "--called-value-propagation",
      "--strip-nondebug",
      "--globalopt",
      "--instcombine",
      "--simple-loop-unswitch",
      "--mergereturn",
      "--loop-predication",
      "--pgo-memop-opt",
      "--strip-debug-declare",
      "--hotcoldsplit",
      "--name-anon-globals",
      "--loop-guard-widening",
      "--early-cse"
    ],
    "performance_vs_Oz": "+9.4%"
  }
}