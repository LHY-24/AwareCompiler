{
  "program_id": "linux-v0_5921.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 62,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 17,
    "oneSuccessor": 57,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 21,
    "morePreds": 5,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 86,
    "BeginPhi": 2,
    "BranchCount": 77,
    "returnInt": 10,
    "CriticalCount": 17,
    "NumEdges": 99,
    "const32Bit": 414,
    "const64Bit": 15,
    "numConstZeroes": 185,
    "numConstOnes": 149,
    "UncondBranches": 57,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 112,
    "NumAndInst": 2,
    "BlockMid": 17,
    "BlockLow": 71,
    "NumBitCastInst": 36,
    "NumBrInst": 77,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 137,
    "NumICmpInst": 29,
    "NumLShrInst": 1,
    "NumLoadInst": 233,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 10,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 113,
    "NumSubInst": 3,
    "NumTruncInst": 6,
    "NumXorInst": 4,
    "NumZExtInst": 15,
    "TotalBlocks": 88,
    "TotalInsts": 823,
    "TotalMemInst": 623,
    "TotalFuncs": 19,
    "ArgsPhi": 4,
    "testUnary": 411
  },
  "baseline_oz_instcount": 825,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--gvn-hoist",
    "--mergefunc",
    "--correlated-propagation",
    "--lower-expect",
    "--correlated-propagation",
    "--nary-reassociate",
    "--instsimplify",
    "--inline",
    "--prune-eh",
    "--early-cse",
    "--bdce",
    "--inline",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--dce",
    "--lower-expect",
    "--correlated-propagation",
    "--nary-reassociate",
    "--instsimplify",
    "--inline",
    "--instcombine",
    "--newgvn",
    "--mldst-motion",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-dead-prototypes",
          "--add-discriminators",
          "--mergereturn",
          "--loop-distribute",
          "--elim-avail-extern",
          "--div-rem-pairs",
          "--globalsplit",
          "--gvn",
          "--loop-data-prefetch",
          "--gvn-hoist",
          "--slsr",
          "--lower-constant-intrinsics",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-dead-prototypes",
      "--add-discriminators",
      "--mergereturn",
      "--loop-distribute",
      "--elim-avail-extern",
      "--div-rem-pairs",
      "--globalsplit",
      "--gvn",
      "--loop-data-prefetch",
      "--gvn-hoist",
      "--slsr",
      "--lower-constant-intrinsics",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}