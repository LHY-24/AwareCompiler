{
  "program_id": "github-v0_8149.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 33,
    "const64Bit": 52,
    "numConstZeroes": 52,
    "numConstOnes": 26,
    "UncondBranches": 15,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 22,
    "NumBitCastInst": 12,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 56,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 27,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 33,
    "TotalBlocks": 27,
    "TotalInsts": 247,
    "TotalMemInst": 147,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 125
  },
  "baseline_oz_instcount": 247,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--loop-reroll",
    "--nary-reassociate",
    "--slsr",
    "--loop-reroll",
    "-loop-reduce",
    "--gvn",
    "--gvn-hoist",
    "--mem2reg",
    "--aggressive-instcombine",
    "--reassociate",
    "--early-cse",
    "--loop-instsimplify",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--mergefunc",
          "--strip-dead-prototypes",
          "--loop-deletion",
          "--strip-debug-declare",
          "--barrier",
          "--canonicalize-aliases",
          "--instcombine",
          "--lower-guard-intrinsic",
          "-loop-reduce",
          "--mldst-motion",
          "--sink",
          "--aggressive-instcombine",
          "--loop-simplifycfg",
          "--hotcoldsplit",
          "--irce",
          "--argpromotion",
          "--lowerinvoke",
          "--loop-unroll-and-jam",
          "--coro-cleanup",
          "--loop-rotate",
          "--strip-nondebug",
          "--loop-reroll",
          "--coro-split",
          "--loop-sink",
          "--strip",
          "--early-cse",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--mergefunc",
      "--strip-dead-prototypes",
      "--loop-deletion",
      "--strip-debug-declare",
      "--barrier",
      "--canonicalize-aliases",
      "--instcombine",
      "--lower-guard-intrinsic",
      "-loop-reduce",
      "--mldst-motion",
      "--sink",
      "--aggressive-instcombine",
      "--loop-simplifycfg",
      "--hotcoldsplit",
      "--irce",
      "--argpromotion",
      "--lowerinvoke",
      "--loop-unroll-and-jam",
      "--coro-cleanup",
      "--loop-rotate",
      "--strip-nondebug",
      "--loop-reroll",
      "--coro-split",
      "--loop-sink",
      "--strip",
      "--early-cse",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+6.1%"
  }
}