{
  "program_id": "linux-v0_2975.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 1,
    "CriticalCount": 1,
    "NumEdges": 17,
    "const32Bit": 44,
    "const64Bit": 15,
    "numConstZeroes": 21,
    "numConstOnes": 22,
    "UncondBranches": 9,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 15,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 16,
    "NumBitCastInst": 2,
    "NumBrInst": 13,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 17,
    "TotalInsts": 129,
    "TotalMemInst": 101,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 55
  },
  "baseline_oz_instcount": 130,
  "knowledge_base_entry": [
    "--ipsccp",
    "--ipsccp",
    "--dse",
    "--newgvn",
    "--dce",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--nary-reassociate",
    "--correlated-propagation",
    "--newgvn",
    "--aggressive-instcombine",
    "--instsimplify",
    "--mem2reg",
    "--globalopt",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-dead-prototypes",
          "--canonicalize-aliases",
          "--functionattrs",
          "--reassociate",
          "--float2int",
          "--gvn",
          "--add-discriminators",
          "--lower-expect",
          "--mem2reg",
          "--tailcallelim",
          "--deadargelim",
          "--coro-elide",
          "--forceattrs",
          "--partial-inliner",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-dead-prototypes",
      "--canonicalize-aliases",
      "--functionattrs",
      "--reassociate",
      "--float2int",
      "--gvn",
      "--add-discriminators",
      "--lower-expect",
      "--mem2reg",
      "--tailcallelim",
      "--deadargelim",
      "--coro-elide",
      "--forceattrs",
      "--partial-inliner",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}