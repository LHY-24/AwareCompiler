{
  "program_id": "github-v0_11415.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 102,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 52,
    "oneSuccessor": 92,
    "twoPred": 69,
    "twoPredOneSuc": 44,
    "twoEach": 20,
    "twoSuccessor": 74,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 177,
    "BeginPhi": 0,
    "BranchCount": 166,
    "returnInt": 78,
    "CriticalCount": 46,
    "NumEdges": 240,
    "const32Bit": 208,
    "const64Bit": 9,
    "numConstZeroes": 86,
    "numConstOnes": 81,
    "UncondBranches": 92,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 25,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 172,
    "NumBitCastInst": 0,
    "NumBrInst": 166,
    "NumCallInst": 135,
    "NumGetElementPtrInst": 46,
    "NumICmpInst": 75,
    "NumLShrInst": 0,
    "NumLoadInst": 227,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 26,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 71,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 177,
    "TotalInsts": 802,
    "TotalMemInst": 504,
    "TotalFuncs": 33,
    "ArgsPhi": 0,
    "testUnary": 281
  },
  "baseline_oz_instcount": 801,
  "knowledge_base_entry": [
    "--loweratomic",
    "--ipsccp",
    "--aggressive-instcombine",
    "--jump-threading",
    "--ipsccp",
    "--lower-expect",
    "--mem2reg",
    "--mergefunc",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-rotate",
          "--newgvn",
          "--insert-gcov-profiling",
          "--jump-threading",
          "--rpo-functionattrs",
          "--partial-inliner",
          "--instnamer",
          "-loop-reduce",
          "--gvn-hoist",
          "--inferattrs",
          "--loop-reroll",
          "--irce",
          "--coro-early",
          "--slsr",
          "--simplifycfg",
          "--lower-widenable-condition",
          "--adce",
          "--lower-constant-intrinsics",
          "--loop-unroll-and-jam",
          "--loop-unswitch",
          "--aggressive-instcombine",
          "--ipsccp",
          "--strip-nondebug",
          "--div-rem-pairs",
          "--always-inline",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-rotate",
      "--newgvn",
      "--insert-gcov-profiling",
      "--jump-threading",
      "--rpo-functionattrs",
      "--partial-inliner",
      "--instnamer",
      "-loop-reduce",
      "--gvn-hoist",
      "--inferattrs",
      "--loop-reroll",
      "--irce",
      "--coro-early",
      "--slsr",
      "--simplifycfg",
      "--lower-widenable-condition",
      "--adce",
      "--lower-constant-intrinsics",
      "--loop-unroll-and-jam",
      "--loop-unswitch",
      "--aggressive-instcombine",
      "--ipsccp",
      "--strip-nondebug",
      "--div-rem-pairs",
      "--always-inline",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}