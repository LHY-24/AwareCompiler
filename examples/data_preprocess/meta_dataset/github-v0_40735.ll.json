{
  "program_id": "github-v0_40735.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 34,
    "const64Bit": 27,
    "numConstZeroes": 29,
    "numConstOnes": 22,
    "UncondBranches": 11,
    "binaryConstArg": 13,
    "NumAShrInst": 3,
    "NumAddInst": 4,
    "NumAllocaInst": 12,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 31,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 17,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 1,
    "NumZExtInst": 16,
    "TotalBlocks": 21,
    "TotalInsts": 156,
    "TotalMemInst": 85,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 72
  },
  "baseline_oz_instcount": 156,
  "knowledge_base_entry": [
    "--instcombine",
    "--sccp",
    "--adce",
    "--early-cse",
    "--reassociate",
    "--adce",
    "--early-cse",
    "--elim-avail-extern",
    "--gvn",
    "--slsr",
    "--early-cse-memssa",
    "--jump-threading",
    "--early-cse",
    "--instcombine",
    "--sccp",
    "--gvn-hoist",
    "--lower-expect",
    "--aggressive-instcombine",
    "--mem2reg",
    "--mergefunc",
    "--elim-avail-extern",
    "--gvn",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--sroa",
    "--aggressive-instcombine",
    "--prune-eh",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--jump-threading",
    "--early-cse",
    "--instcombine",
    "--sccp",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--add-discriminators",
          "--speculative-execution",
          "--die",
          "--early-cse-memssa",
          "--always-inline",
          "--loop-instsimplify",
          "--newgvn",
          "--simplifycfg",
          "--slp-vectorizer",
          "--alignment-from-assumptions",
          "--inferattrs",
          "--loop-versioning",
          "--break-crit-edges",
          "--loop-versioning-licm",
          "--strip-dead-prototypes",
          "--memcpyopt",
          "--constprop",
          "--cross-dso-cfi",
          "--aggressive-instcombine",
          "--loop-load-elim",
          "--coro-elide",
          "--tailcallelim",
          "--bdce",
          "--prune-eh",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--add-discriminators",
      "--speculative-execution",
      "--die",
      "--early-cse-memssa",
      "--always-inline",
      "--loop-instsimplify",
      "--newgvn",
      "--simplifycfg",
      "--slp-vectorizer",
      "--alignment-from-assumptions",
      "--inferattrs",
      "--loop-versioning",
      "--break-crit-edges",
      "--loop-versioning-licm",
      "--strip-dead-prototypes",
      "--memcpyopt",
      "--constprop",
      "--cross-dso-cfi",
      "--aggressive-instcombine",
      "--loop-load-elim",
      "--coro-elide",
      "--tailcallelim",
      "--bdce",
      "--prune-eh",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+6.4%"
  }
}