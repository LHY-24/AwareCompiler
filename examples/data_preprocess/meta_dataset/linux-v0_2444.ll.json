{
  "program_id": "linux-v0_2444.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 4,
    "oneSuccessor": 18,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 4,
    "CriticalCount": 7,
    "NumEdges": 43,
    "const32Bit": 88,
    "const64Bit": 15,
    "numConstZeroes": 35,
    "numConstOnes": 33,
    "UncondBranches": 18,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 22,
    "NumAndInst": 1,
    "BlockMid": 2,
    "BlockLow": 34,
    "NumBitCastInst": 14,
    "NumBrInst": 26,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 61,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 36,
    "TotalInsts": 238,
    "TotalMemInst": 161,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 111
  },
  "baseline_oz_instcount": 238,
  "knowledge_base_entry": [
    "--loop-deletion",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--ipsccp",
    "--globaldce",
    "--mergefunc",
    "--gvn-hoist",
    "--bdce",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--sccp",
          "--insert-gcov-profiling",
          "--inferattrs",
          "--inject-tli-mappings",
          "--slsr",
          "--globalopt",
          "--loop-versioning-licm",
          "--canonicalize-aliases",
          "--slp-vectorizer",
          "--loop-data-prefetch",
          "--attributor",
          "--gvn-hoist",
          "-loop-reduce",
          "--loop-instsimplify",
          "--libcalls-shrinkwrap",
          "--aggressive-instcombine",
          "--rpo-functionattrs",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--sccp",
      "--insert-gcov-profiling",
      "--inferattrs",
      "--inject-tli-mappings",
      "--slsr",
      "--globalopt",
      "--loop-versioning-licm",
      "--canonicalize-aliases",
      "--slp-vectorizer",
      "--loop-data-prefetch",
      "--attributor",
      "--gvn-hoist",
      "-loop-reduce",
      "--loop-instsimplify",
      "--libcalls-shrinkwrap",
      "--aggressive-instcombine",
      "--rpo-functionattrs",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}