{
  "program_id": "linux-v0_9229.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 9,
    "onePred": 80,
    "onePredOneSuc": 59,
    "onePredTwoSuc": 21,
    "oneSuccessor": 72,
    "twoPred": 30,
    "twoPredOneSuc": 12,
    "twoEach": 9,
    "twoSuccessor": 43,
    "morePreds": 5,
    "BB03Phi": 9,
    "BBHiPhi": 0,
    "BBNoPhi": 132,
    "BeginPhi": 9,
    "BranchCount": 115,
    "returnInt": 29,
    "CriticalCount": 21,
    "NumEdges": 158,
    "const32Bit": 387,
    "const64Bit": 13,
    "numConstZeroes": 194,
    "numConstOnes": 126,
    "UncondBranches": 72,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 84,
    "NumAndInst": 10,
    "BlockMid": 17,
    "BlockLow": 124,
    "NumBitCastInst": 19,
    "NumBrInst": 115,
    "NumCallInst": 69,
    "NumGetElementPtrInst": 121,
    "NumICmpInst": 44,
    "NumLShrInst": 0,
    "NumLoadInst": 281,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 9,
    "NumRetInst": 26,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 133,
    "NumSubInst": 4,
    "NumTruncInst": 10,
    "NumXorInst": 11,
    "NumZExtInst": 8,
    "TotalBlocks": 141,
    "TotalInsts": 965,
    "TotalMemInst": 688,
    "TotalFuncs": 48,
    "ArgsPhi": 18,
    "testUnary": 417
  },
  "baseline_oz_instcount": 962,
  "knowledge_base_entry": [
    "--scalarizer",
    "--instcombine",
    "-loop-reduce",
    "--mergefunc",
    "--ipsccp",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--mergefunc",
    "--simplifycfg",
    "--lower-expect",
    "--die",
    "--loop-instsimplify",
    "--simplifycfg",
    "-loop-reduce",
    "--early-cse",
    "--licm",
    "--reassociate",
    "--load-store-vectorizer",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--post-inline-ee-instrument",
          "--aggressive-instcombine",
          "--dse",
          "--mergereturn",
          "--barrier",
          "--sink",
          "--inject-tli-mappings",
          "--strip-nondebug",
          "--constmerge",
          "--loop-interchange",
          "--loop-instsimplify",
          "--cross-dso-cfi",
          "--scalarizer",
          "--pgo-memop-opt",
          "--globalopt",
          "--gvn-hoist",
          "--loop-guard-widening",
          "--always-inline",
          "--slp-vectorizer",
          "--newgvn",
          "--loop-simplify",
          "--die",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--post-inline-ee-instrument",
      "--aggressive-instcombine",
      "--dse",
      "--mergereturn",
      "--barrier",
      "--sink",
      "--inject-tli-mappings",
      "--strip-nondebug",
      "--constmerge",
      "--loop-interchange",
      "--loop-instsimplify",
      "--cross-dso-cfi",
      "--scalarizer",
      "--pgo-memop-opt",
      "--globalopt",
      "--gvn-hoist",
      "--loop-guard-widening",
      "--always-inline",
      "--slp-vectorizer",
      "--newgvn",
      "--loop-simplify",
      "--die",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}