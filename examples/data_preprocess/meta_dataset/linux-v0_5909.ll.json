{
  "program_id": "linux-v0_5909.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 11,
    "onePred": 48,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 4,
    "oneSuccessor": 50,
    "twoPred": 24,
    "twoPredOneSuc": 7,
    "twoEach": 14,
    "twoSuccessor": 22,
    "morePreds": 1,
    "BB03Phi": 11,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 11,
    "BranchCount": 72,
    "returnInt": 8,
    "CriticalCount": 10,
    "NumEdges": 100,
    "const32Bit": 123,
    "const64Bit": 22,
    "numConstZeroes": 21,
    "numConstOnes": 70,
    "UncondBranches": 50,
    "binaryConstArg": 60,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 36,
    "NumAndInst": 8,
    "BlockMid": 2,
    "BlockLow": 80,
    "NumBitCastInst": 2,
    "NumBrInst": 72,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 85,
    "NumMulInst": 20,
    "NumOrInst": 3,
    "NumPHIInst": 11,
    "NumRetInst": 9,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 53,
    "NumSubInst": 10,
    "NumTruncInst": 6,
    "NumXorInst": 9,
    "NumZExtInst": 15,
    "TotalBlocks": 82,
    "TotalInsts": 412,
    "TotalMemInst": 201,
    "TotalFuncs": 12,
    "ArgsPhi": 22,
    "testUnary": 152
  },
  "baseline_oz_instcount": 415,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--simplifycfg",
    "--instcombine",
    "--prune-eh",
    "--mem2reg",
    "--elim-avail-extern",
    "--prune-eh",
    "--inline",
    "--slp-vectorizer",
    "--adce",
    "--sroa",
    "--globalopt",
    "--mem2reg",
    "--newgvn",
    "--flattencfg",
    "--inline",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--bdce",
    "--jump-threading",
    "--bdce",
    "--die",
    "--reassociate",
    "--instsimplify",
    "--lower-expect",
    "--sccp",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--lcssa",
          "--rewrite-statepoints-for-gc",
          "--load-store-vectorizer",
          "--constmerge",
          "--rpo-functionattrs",
          "--lower-expect",
          "--loop-unswitch",
          "--globalsplit",
          "--cross-dso-cfi",
          "--elim-avail-extern",
          "--dse",
          "--simplifycfg",
          "--lower-constant-intrinsics",
          "--canonicalize-aliases",
          "--forceattrs",
          "--strip",
          "--sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--lcssa",
      "--rewrite-statepoints-for-gc",
      "--load-store-vectorizer",
      "--constmerge",
      "--rpo-functionattrs",
      "--lower-expect",
      "--loop-unswitch",
      "--globalsplit",
      "--cross-dso-cfi",
      "--elim-avail-extern",
      "--dse",
      "--simplifycfg",
      "--lower-constant-intrinsics",
      "--canonicalize-aliases",
      "--forceattrs",
      "--strip",
      "--sink"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}