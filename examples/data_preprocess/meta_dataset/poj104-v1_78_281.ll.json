{
  "program_id": "poj104-v1_78_281.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 5,
    "oneSuccessor": 21,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 5,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 7,
    "CriticalCount": 5,
    "NumEdges": 47,
    "const32Bit": 56,
    "const64Bit": 24,
    "numConstZeroes": 15,
    "numConstOnes": 38,
    "UncondBranches": 21,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 27,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 47,
    "NumBitCastInst": 22,
    "NumBrInst": 34,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 68,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 36,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 50,
    "TotalInsts": 292,
    "TotalMemInst": 185,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 127
  },
  "baseline_oz_instcount": 127,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--sccp",
    "--early-cse",
    "--mldst-motion",
    "--instsimplify",
    "--elim-avail-extern",
    "--dce",
    "--die",
    "--newgvn",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--gvn",
    "--indvars",
    "--instcombine",
    "--inline",
    "--simplifycfg",
    "--loop-deletion",
    "--early-cse-memssa",
    "--prune-eh",
    "--mem2reg",
    "--jump-threading",
    "--mem2reg",
    "--bdce",
    "--correlated-propagation",
    "--lower-expect",
    "--early-cse-memssa",
    "--globalopt",
    "--globaldce",
    "--mergefunc",
    "--inline",
    "--die",
    "--licm",
    "--bdce",
    "--loop-instsimplify",
    "--dce",
    "--elim-avail-extern",
    "--loop-rotate",
    "--instcombine",
    "--loop-instsimplify",
    "--gvn",
    "--early-cse",
    "--loop-rotate",
    "--elim-avail-extern",
    "--mldst-motion",
    "--slp-vectorizer",
    "--instcombine",
    "--licm",
    "--dse",
    "--dse",
    "--instcombine",
    "--nary-reassociate",
    "--gvn",
    "--elim-avail-extern",
    "--gvn",
    "--globalopt",
    "--globaldce",
    "--aggressive-instcombine",
    "--instsimplify",
    "--elim-avail-extern",
    "--dce",
    "--die",
    "--inline",
    "--sroa",
    "--simplifycfg",
    "--gvn-hoist",
    "--gvn-hoist",
    "--memcpyopt",
    "--sroa",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--instcombine",
    "--simplifycfg",
    "--adce",
    "--elim-avail-extern",
    "--bdce",
    "--jump-threading",
    "--bdce",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--instsimplify",
    "--elim-avail-extern",
    "--inline",
    "--instsimplify",
    "--mem2reg",
    "--dse",
    "--newgvn",
    "--jump-threading",
    "--simplifycfg",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--attributor",
          "--barrier",
          "--mldst-motion",
          "--lower-guard-intrinsic",
          "--redundant-dbg-inst-elim",
          "--break-crit-edges",
          "--loop-versioning",
          "--sancov",
          "--loop-distribute",
          "--bdce",
          "--simplifycfg",
          "-loop-reduce",
          "--gvn-hoist",
          "--sroa",
          "--mergeicmps",
          "--loop-fusion",
          "--alignment-from-assumptions",
          "--elim-avail-extern",
          "--coro-early",
          "--coro-elide",
          "--globaldce",
          "--always-inline",
          "--loop-unroll-and-jam",
          "--simple-loop-unswitch",
          "--float2int",
          "--speculative-execution"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+32.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--attributor",
      "--barrier",
      "--mldst-motion",
      "--lower-guard-intrinsic",
      "--redundant-dbg-inst-elim",
      "--break-crit-edges",
      "--loop-versioning",
      "--sancov",
      "--loop-distribute",
      "--bdce",
      "--simplifycfg",
      "-loop-reduce",
      "--gvn-hoist",
      "--sroa",
      "--mergeicmps",
      "--loop-fusion",
      "--alignment-from-assumptions",
      "--elim-avail-extern",
      "--coro-early",
      "--coro-elide",
      "--globaldce",
      "--always-inline",
      "--loop-unroll-and-jam",
      "--simple-loop-unswitch",
      "--float2int",
      "--speculative-execution"
    ],
    "performance_vs_Oz": "+32.3%"
  }
}