{
  "program_id": "github-v0_44885.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 37,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 17,
    "oneSuccessor": 21,
    "twoPred": 14,
    "twoPredOneSuc": 6,
    "twoEach": 4,
    "twoSuccessor": 24,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 55,
    "BeginPhi": 1,
    "BranchCount": 45,
    "returnInt": 28,
    "CriticalCount": 11,
    "NumEdges": 69,
    "const32Bit": 81,
    "const64Bit": 23,
    "numConstZeroes": 13,
    "numConstOnes": 63,
    "UncondBranches": 21,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 24,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 51,
    "NumBitCastInst": 1,
    "NumBrInst": 45,
    "NumCallInst": 47,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 194,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 20,
    "NumSelectInst": 0,
    "NumShlInst": 11,
    "NumStoreInst": 64,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 56,
    "TotalInsts": 495,
    "TotalMemInst": 346,
    "TotalFuncs": 16,
    "ArgsPhi": 4,
    "testUnary": 254
  },
  "baseline_oz_instcount": 493,
  "knowledge_base_entry": [
    "--mergefunc",
    "--loop-instsimplify",
    "--dce",
    "--newgvn",
    "--gvn",
    "--mem2reg",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--globalopt",
    "--newgvn",
    "--early-cse-memssa",
    "--indvars",
    "--gvn-hoist",
    "--flattencfg",
    "--simplifycfg",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--flattencfg",
          "--strip-debug-declare",
          "--aggressive-instcombine",
          "--inferattrs",
          "--forceattrs",
          "--rewrite-statepoints-for-gc",
          "--rpo-functionattrs",
          "--always-inline",
          "--inline",
          "--sroa",
          "--strip-nondebug",
          "--ipsccp",
          "--infer-address-spaces",
          "--lowerinvoke",
          "--ee-instrument",
          "--hotcoldsplit",
          "--loop-unswitch",
          "--loop-load-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--flattencfg",
      "--strip-debug-declare",
      "--aggressive-instcombine",
      "--inferattrs",
      "--forceattrs",
      "--rewrite-statepoints-for-gc",
      "--rpo-functionattrs",
      "--always-inline",
      "--inline",
      "--sroa",
      "--strip-nondebug",
      "--ipsccp",
      "--infer-address-spaces",
      "--lowerinvoke",
      "--ee-instrument",
      "--hotcoldsplit",
      "--loop-unswitch",
      "--loop-load-elim"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}