{
  "program_id": "linux-v0_7519.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 3,
    "oneSuccessor": 21,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 51,
    "BeginPhi": 0,
    "BranchCount": 30,
    "returnInt": 8,
    "CriticalCount": 5,
    "NumEdges": 39,
    "const32Bit": 244,
    "const64Bit": 16,
    "numConstZeroes": 121,
    "numConstOnes": 96,
    "UncondBranches": 21,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 61,
    "NumAndInst": 6,
    "BlockMid": 8,
    "BlockLow": 43,
    "NumBitCastInst": 18,
    "NumBrInst": 30,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 85,
    "NumICmpInst": 11,
    "NumLShrInst": 4,
    "NumLoadInst": 134,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 82,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 8,
    "TotalBlocks": 51,
    "TotalInsts": 512,
    "TotalMemInst": 397,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 230
  },
  "baseline_oz_instcount": 512,
  "knowledge_base_entry": [
    "--sink",
    "--correlated-propagation",
    "--globalopt",
    "--gvn",
    "--mergefunc",
    "--simplifycfg",
    "--globalopt",
    "--loweratomic",
    "--instcombine",
    "--aggressive-instcombine",
    "--early-cse",
    "--loop-instsimplify",
    "--dce",
    "--gvn-hoist",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-deletion",
          "--functionattrs",
          "--simplifycfg",
          "--lower-constant-intrinsics",
          "--rpo-functionattrs",
          "--slsr",
          "--lowerinvoke",
          "--always-inline",
          "--loop-sink",
          "--coro-elide",
          "--gvn",
          "--globalopt",
          "--jump-threading",
          "--inline",
          "--mergefunc",
          "--loop-idiom",
          "--constmerge",
          "--consthoist",
          "--slp-vectorizer",
          "--bdce",
          "--coro-cleanup"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-deletion",
      "--functionattrs",
      "--simplifycfg",
      "--lower-constant-intrinsics",
      "--rpo-functionattrs",
      "--slsr",
      "--lowerinvoke",
      "--always-inline",
      "--loop-sink",
      "--coro-elide",
      "--gvn",
      "--globalopt",
      "--jump-threading",
      "--inline",
      "--mergefunc",
      "--loop-idiom",
      "--constmerge",
      "--consthoist",
      "--slp-vectorizer",
      "--bdce",
      "--coro-cleanup"
    ],
    "performance_vs_Oz": "+6.8%"
  }
}