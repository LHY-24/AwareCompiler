{
  "program_id": "github-v0_8447.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 60,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 6,
    "oneSuccessor": 56,
    "twoPred": 26,
    "twoPredOneSuc": 3,
    "twoEach": 20,
    "twoSuccessor": 28,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 108,
    "BeginPhi": 1,
    "BranchCount": 84,
    "returnInt": 10,
    "CriticalCount": 3,
    "NumEdges": 115,
    "const32Bit": 110,
    "const64Bit": 30,
    "numConstZeroes": 59,
    "numConstOnes": 37,
    "UncondBranches": 56,
    "binaryConstArg": 9,
    "NumAShrInst": 2,
    "NumAddInst": 6,
    "NumAllocaInst": 27,
    "NumAndInst": 4,
    "BlockMid": 2,
    "BlockLow": 107,
    "NumBitCastInst": 14,
    "NumBrInst": 84,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 31,
    "NumLShrInst": 0,
    "NumLoadInst": 72,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 5,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 36,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 109,
    "TotalInsts": 366,
    "TotalMemInst": 193,
    "TotalFuncs": 16,
    "ArgsPhi": 2,
    "testUnary": 119
  },
  "baseline_oz_instcount": 351,
  "knowledge_base_entry": [
    "--sccp",
    "--simplifycfg",
    "--ipsccp",
    "--lower-expect",
    "--early-cse-memssa",
    "--dce",
    "--slp-vectorizer",
    "--loop-reroll",
    "--sroa",
    "--correlated-propagation",
    "--newgvn",
    "--indvars",
    "--instcombine",
    "--ipsccp",
    "--instcombine",
    "--licm",
    "--licm",
    "--dse",
    "--dse",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--div-rem-pairs",
          "--reassociate",
          "--ipsccp",
          "--infer-address-spaces",
          "--irce",
          "--add-discriminators",
          "--attributor",
          "--inject-tli-mappings",
          "--constmerge",
          "--loweratomic",
          "--loop-simplifycfg",
          "--callsite-splitting",
          "--early-cse",
          "--loop-rotate",
          "--dce",
          "--memcpyopt",
          "--coro-elide",
          "--hotcoldsplit",
          "--canonicalize-aliases",
          "-loop-reduce",
          "--name-anon-globals",
          "--loop-unswitch",
          "--slp-vectorizer",
          "--sccp",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--div-rem-pairs",
      "--reassociate",
      "--ipsccp",
      "--infer-address-spaces",
      "--irce",
      "--add-discriminators",
      "--attributor",
      "--inject-tli-mappings",
      "--constmerge",
      "--loweratomic",
      "--loop-simplifycfg",
      "--callsite-splitting",
      "--early-cse",
      "--loop-rotate",
      "--dce",
      "--memcpyopt",
      "--coro-elide",
      "--hotcoldsplit",
      "--canonicalize-aliases",
      "-loop-reduce",
      "--name-anon-globals",
      "--loop-unswitch",
      "--slp-vectorizer",
      "--sccp",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}