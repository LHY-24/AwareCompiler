{
  "program_id": "github-v0_35962.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 6,
    "oneSuccessor": 22,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 13,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 0,
    "BranchCount": 35,
    "returnInt": 1,
    "CriticalCount": 6,
    "NumEdges": 48,
    "const32Bit": 88,
    "const64Bit": 26,
    "numConstZeroes": 37,
    "numConstOnes": 28,
    "UncondBranches": 22,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 24,
    "NumAndInst": 10,
    "BlockMid": 6,
    "BlockLow": 31,
    "NumBitCastInst": 0,
    "NumBrInst": 35,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 13,
    "NumLShrInst": 7,
    "NumLoadInst": 77,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 45,
    "NumSubInst": 1,
    "NumTruncInst": 16,
    "NumXorInst": 8,
    "NumZExtInst": 20,
    "TotalBlocks": 37,
    "TotalInsts": 308,
    "TotalMemInst": 188,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 137
  },
  "baseline_oz_instcount": 308,
  "knowledge_base_entry": [
    "--loweratomic",
    "--ipsccp",
    "--ipsccp",
    "--flattencfg",
    "--aggressive-instcombine",
    "--flattencfg",
    "--aggressive-instcombine",
    "--mem2reg",
    "--load-store-vectorizer",
    "--jump-threading",
    "--mergefunc",
    "--die",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partial-inliner",
          "--scalarizer",
          "--name-anon-globals",
          "--lcssa",
          "--elim-avail-extern",
          "--argpromotion",
          "--mergefunc",
          "--globalopt",
          "--flattencfg",
          "--indvars",
          "--early-cse-memssa",
          "--loop-simplifycfg",
          "--separate-const-offset-from-gep",
          "--simplifycfg",
          "--aggressive-instcombine",
          "--prune-eh",
          "--div-rem-pairs",
          "--functionattrs",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partial-inliner",
      "--scalarizer",
      "--name-anon-globals",
      "--lcssa",
      "--elim-avail-extern",
      "--argpromotion",
      "--mergefunc",
      "--globalopt",
      "--flattencfg",
      "--indvars",
      "--early-cse-memssa",
      "--loop-simplifycfg",
      "--separate-const-offset-from-gep",
      "--simplifycfg",
      "--aggressive-instcombine",
      "--prune-eh",
      "--div-rem-pairs",
      "--functionattrs",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+7.8%"
  }
}