{
  "program_id": "linux-v0_13677.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 12,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 1,
    "BranchCount": 17,
    "returnInt": 2,
    "CriticalCount": 1,
    "NumEdges": 23,
    "const32Bit": 22,
    "const64Bit": 5,
    "numConstZeroes": 9,
    "numConstOnes": 12,
    "UncondBranches": 11,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 12,
    "NumAndInst": 3,
    "BlockMid": 1,
    "BlockLow": 19,
    "NumBitCastInst": 2,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 4,
    "TotalBlocks": 20,
    "TotalInsts": 107,
    "TotalMemInst": 65,
    "TotalFuncs": 4,
    "ArgsPhi": 2,
    "testUnary": 47
  },
  "baseline_oz_instcount": 108,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--elim-avail-extern",
    "--mergefunc",
    "--elim-avail-extern",
    "--sroa",
    "--reassociate",
    "--jump-threading",
    "--newgvn",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn",
          "--mergeicmps",
          "--scalarizer",
          "--div-rem-pairs",
          "--guard-widening",
          "--ee-instrument",
          "--loop-unroll-and-jam",
          "--elim-avail-extern",
          "--functionattrs",
          "--lower-expect",
          "--loop-vectorize",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn",
      "--mergeicmps",
      "--scalarizer",
      "--div-rem-pairs",
      "--guard-widening",
      "--ee-instrument",
      "--loop-unroll-and-jam",
      "--elim-avail-extern",
      "--functionattrs",
      "--lower-expect",
      "--loop-vectorize",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}