{
  "program_id": "linux-v0_6632.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 76,
    "onePredOneSuc": 62,
    "onePredTwoSuc": 6,
    "oneSuccessor": 69,
    "twoPred": 23,
    "twoPredOneSuc": 2,
    "twoEach": 16,
    "twoSuccessor": 31,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 127,
    "BeginPhi": 2,
    "BranchCount": 100,
    "returnInt": 15,
    "CriticalCount": 7,
    "NumEdges": 131,
    "const32Bit": 184,
    "const64Bit": 52,
    "numConstZeroes": 55,
    "numConstOnes": 155,
    "UncondBranches": 69,
    "binaryConstArg": 43,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 123,
    "NumAndInst": 4,
    "BlockMid": 11,
    "BlockLow": 118,
    "NumBitCastInst": 0,
    "NumBrInst": 100,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 41,
    "NumLShrInst": 4,
    "NumLoadInst": 199,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 27,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 148,
    "NumSubInst": 3,
    "NumTruncInst": 1,
    "NumXorInst": 24,
    "NumZExtInst": 14,
    "TotalBlocks": 129,
    "TotalInsts": 796,
    "TotalMemInst": 546,
    "TotalFuncs": 45,
    "ArgsPhi": 4,
    "testUnary": 350
  },
  "baseline_oz_instcount": 797,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--licm",
    "--adce",
    "--instcombine",
    "--nary-reassociate",
    "--loop-reroll",
    "-loop-reduce",
    "--load-store-vectorizer",
    "--loop-fusion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--sink",
          "--attributor",
          "--dse",
          "--mem2reg",
          "--sancov",
          "--guard-widening",
          "--loop-rotate",
          "--alignment-from-assumptions",
          "--loop-simplifycfg",
          "--loop-data-prefetch",
          "--flattencfg",
          "--correlated-propagation",
          "--loop-unroll-and-jam",
          "--mergereturn",
          "--loweratomic",
          "--loop-idiom",
          "--load-store-vectorizer",
          "--inject-tli-mappings",
          "--loop-interchange"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--sink",
      "--attributor",
      "--dse",
      "--mem2reg",
      "--sancov",
      "--guard-widening",
      "--loop-rotate",
      "--alignment-from-assumptions",
      "--loop-simplifycfg",
      "--loop-data-prefetch",
      "--flattencfg",
      "--correlated-propagation",
      "--loop-unroll-and-jam",
      "--mergereturn",
      "--loweratomic",
      "--loop-idiom",
      "--load-store-vectorizer",
      "--inject-tli-mappings",
      "--loop-interchange"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}