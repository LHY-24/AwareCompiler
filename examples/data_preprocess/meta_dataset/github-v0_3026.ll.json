{
  "program_id": "github-v0_3026.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 35,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 9,
    "oneSuccessor": 28,
    "twoPred": 8,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 19,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 56,
    "BeginPhi": 0,
    "BranchCount": 47,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 66,
    "const32Bit": 97,
    "const64Bit": 13,
    "numConstZeroes": 61,
    "numConstOnes": 42,
    "UncondBranches": 28,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 30,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 53,
    "NumBitCastInst": 14,
    "NumBrInst": 47,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 30,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 77,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 55,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 56,
    "TotalInsts": 309,
    "TotalMemInst": 196,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 136
  },
  "baseline_oz_instcount": 309,
  "knowledge_base_entry": [
    "--loop-fusion",
    "--early-cse",
    "--mergefunc",
    "--loop-simplifycfg",
    "--bdce",
    "--reassociate",
    "--globalopt",
    "--inline",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--sccp",
    "--simplifycfg",
    "--sccp",
    "--early-cse",
    "--loop-simplifycfg",
    "--instsimplify",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--infer-address-spaces",
          "--loop-versioning",
          "--consthoist",
          "--simplifycfg",
          "--loop-guard-widening",
          "--loop-unswitch",
          "--partial-inliner",
          "--newgvn",
          "--instcombine",
          "--instnamer",
          "--rewrite-statepoints-for-gc",
          "--lowerinvoke",
          "--indvars",
          "--aggressive-instcombine",
          "--inferattrs",
          "--elim-avail-extern",
          "--loop-vectorize",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--infer-address-spaces",
      "--loop-versioning",
      "--consthoist",
      "--simplifycfg",
      "--loop-guard-widening",
      "--loop-unswitch",
      "--partial-inliner",
      "--newgvn",
      "--instcombine",
      "--instnamer",
      "--rewrite-statepoints-for-gc",
      "--lowerinvoke",
      "--indvars",
      "--aggressive-instcombine",
      "--inferattrs",
      "--elim-avail-extern",
      "--loop-vectorize",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}