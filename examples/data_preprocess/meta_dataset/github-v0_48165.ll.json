{
  "program_id": "github-v0_48165.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 34,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 13,
    "oneSuccessor": 25,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 20,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 0,
    "BranchCount": 45,
    "returnInt": 7,
    "CriticalCount": 8,
    "NumEdges": 65,
    "const32Bit": 42,
    "const64Bit": 4,
    "numConstZeroes": 12,
    "numConstOnes": 20,
    "UncondBranches": 25,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 45,
    "NumBitCastInst": 4,
    "NumBrInst": 45,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 66,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 36,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 47,
    "TotalInsts": 229,
    "TotalMemInst": 149,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 89
  },
  "baseline_oz_instcount": 230,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--newgvn",
    "--elim-avail-extern",
    "--mldst-motion",
    "--instcombine",
    "--early-cse-memssa",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--aggressive-instcombine",
          "--flattencfg",
          "--sancov",
          "--lower-expect",
          "--instnamer",
          "--early-cse-memssa",
          "--strip-dead-prototypes",
          "--callsite-splitting",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--aggressive-instcombine",
      "--flattencfg",
      "--sancov",
      "--lower-expect",
      "--instnamer",
      "--early-cse-memssa",
      "--strip-dead-prototypes",
      "--callsite-splitting",
      "--newgvn"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}