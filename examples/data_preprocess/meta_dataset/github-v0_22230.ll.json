{
  "program_id": "github-v0_22230.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 8,
    "onePred": 37,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 8,
    "oneSuccessor": 36,
    "twoPred": 15,
    "twoPredOneSuc": 7,
    "twoEach": 6,
    "twoSuccessor": 17,
    "morePreds": 1,
    "BB03Phi": 8,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 8,
    "BranchCount": 53,
    "returnInt": 2,
    "CriticalCount": 1,
    "NumEdges": 70,
    "const32Bit": 89,
    "const64Bit": 50,
    "numConstZeroes": 67,
    "numConstOnes": 49,
    "UncondBranches": 36,
    "binaryConstArg": 54,
    "NumAShrInst": 19,
    "NumAddInst": 19,
    "NumAllocaInst": 23,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 49,
    "NumBitCastInst": 1,
    "NumBrInst": 53,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 108,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 8,
    "NumRetInst": 3,
    "NumSExtInst": 23,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 41,
    "NumSubInst": 21,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 56,
    "TotalInsts": 392,
    "TotalMemInst": 213,
    "TotalFuncs": 7,
    "ArgsPhi": 16,
    "testUnary": 158
  },
  "baseline_oz_instcount": 393,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--prune-eh",
    "--gvn-hoist",
    "--globalopt",
    "--early-cse-memssa",
    "--dse",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-dead-prototypes",
          "--guard-widening",
          "--hotcoldsplit",
          "--adce",
          "--elim-avail-extern",
          "--scalarizer",
          "--mergereturn",
          "--globalopt",
          "--slp-vectorizer",
          "--partially-inline-libcalls",
          "--inject-tli-mappings",
          "--strip",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-dead-prototypes",
      "--guard-widening",
      "--hotcoldsplit",
      "--adce",
      "--elim-avail-extern",
      "--scalarizer",
      "--mergereturn",
      "--globalopt",
      "--slp-vectorizer",
      "--partially-inline-libcalls",
      "--inject-tli-mappings",
      "--strip",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}