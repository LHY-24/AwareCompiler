{
  "program_id": "tensorflow-v0_72.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 12,
    "onePred": 38,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 15,
    "oneSuccessor": 26,
    "twoPred": 18,
    "twoPredOneSuc": 5,
    "twoEach": 13,
    "twoSuccessor": 32,
    "morePreds": 6,
    "BB03Phi": 13,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 13,
    "BranchCount": 58,
    "returnInt": 10,
    "CriticalCount": 34,
    "NumEdges": 98,
    "const32Bit": 113,
    "const64Bit": 140,
    "numConstZeroes": 164,
    "numConstOnes": 56,
    "UncondBranches": 26,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 5,
    "NumAndInst": 14,
    "BlockMid": 3,
    "BlockLow": 69,
    "NumBitCastInst": 45,
    "NumBrInst": 58,
    "NumCallInst": 57,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 45,
    "NumLShrInst": 10,
    "NumLoadInst": 42,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 23,
    "NumRetInst": 10,
    "NumSExtInst": 1,
    "NumSelectInst": 13,
    "NumShlInst": 1,
    "NumStoreInst": 41,
    "NumSubInst": 4,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 72,
    "TotalInsts": 435,
    "TotalMemInst": 189,
    "TotalFuncs": 26,
    "ArgsPhi": 55,
    "testUnary": 108
  },
  "baseline_oz_instcount": 441,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--globalopt",
    "--loop-simplifycfg",
    "--licm",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--instcombine",
    "--newgvn",
    "--indvars",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--correlated-propagation",
          "--always-inline",
          "--bdce",
          "--add-discriminators",
          "--loop-deletion",
          "--libcalls-shrinkwrap",
          "--loop-fusion",
          "--callsite-splitting",
          "--lower-matrix-intrinsics",
          "--lower-widenable-condition",
          "--dse",
          "--coro-cleanup",
          "--loop-load-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--correlated-propagation",
      "--always-inline",
      "--bdce",
      "--add-discriminators",
      "--loop-deletion",
      "--libcalls-shrinkwrap",
      "--loop-fusion",
      "--callsite-splitting",
      "--lower-matrix-intrinsics",
      "--lower-widenable-condition",
      "--dse",
      "--coro-cleanup",
      "--loop-load-elim"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}