{
  "program_id": "linux-v0_10536.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 44,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 11,
    "oneSuccessor": 39,
    "twoPred": 12,
    "twoPredOneSuc": 6,
    "twoEach": 2,
    "twoSuccessor": 19,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 0,
    "BranchCount": 58,
    "returnInt": 15,
    "CriticalCount": 6,
    "NumEdges": 81,
    "const32Bit": 279,
    "const64Bit": 11,
    "numConstZeroes": 171,
    "numConstOnes": 69,
    "UncondBranches": 39,
    "binaryConstArg": 15,
    "NumAShrInst": 1,
    "NumAddInst": 3,
    "NumAllocaInst": 48,
    "NumAndInst": 2,
    "BlockMid": 6,
    "BlockLow": 71,
    "NumBitCastInst": 8,
    "NumBrInst": 58,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 115,
    "NumICmpInst": 22,
    "NumLShrInst": 1,
    "NumLoadInst": 150,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 79,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 6,
    "NumZExtInst": 31,
    "TotalBlocks": 77,
    "TotalInsts": 596,
    "TotalMemInst": 431,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 248
  },
  "baseline_oz_instcount": 597,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--gvn",
    "--nary-reassociate",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--adce",
    "--die",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rewrite-statepoints-for-gc",
          "--constprop",
          "--lower-matrix-intrinsics",
          "--barrier",
          "--gvn-hoist",
          "--load-store-vectorizer",
          "--lower-constant-intrinsics",
          "--partial-inliner",
          "--slp-vectorizer",
          "--strip",
          "--globalopt",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rewrite-statepoints-for-gc",
      "--constprop",
      "--lower-matrix-intrinsics",
      "--barrier",
      "--gvn-hoist",
      "--load-store-vectorizer",
      "--lower-constant-intrinsics",
      "--partial-inliner",
      "--slp-vectorizer",
      "--strip",
      "--globalopt",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}