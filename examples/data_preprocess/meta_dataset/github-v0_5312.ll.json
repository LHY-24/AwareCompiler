{
  "program_id": "github-v0_5312.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 3,
    "oneSuccessor": 15,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 6,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 25,
    "returnInt": 2,
    "CriticalCount": 8,
    "NumEdges": 35,
    "const32Bit": 29,
    "const64Bit": 20,
    "numConstZeroes": 14,
    "numConstOnes": 20,
    "UncondBranches": 15,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 23,
    "NumBitCastInst": 0,
    "NumBrInst": 25,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 4,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 26,
    "TotalInsts": 152,
    "TotalMemInst": 87,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 58
  },
  "baseline_oz_instcount": 153,
  "knowledge_base_entry": [
    "--loop-sink",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--reassociate",
    "--ipsccp",
    "--die",
    "--early-cse",
    "--sccp",
    "--simplifycfg",
    "--jump-threading",
    "--newgvn",
    "--licm",
    "--elim-avail-extern",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--coro-early",
          "--always-inline",
          "--slsr",
          "--loop-simplifycfg",
          "--div-rem-pairs",
          "--slp-vectorizer",
          "--loop-versioning",
          "--correlated-propagation",
          "--mem2reg",
          "--canonicalize-aliases",
          "--cross-dso-cfi",
          "--ipconstprop",
          "--loop-distribute",
          "--name-anon-globals",
          "--flattencfg",
          "--lower-expect",
          "--loop-versioning-licm",
          "--loop-unswitch",
          "--lcssa",
          "--sroa",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--coro-early",
      "--always-inline",
      "--slsr",
      "--loop-simplifycfg",
      "--div-rem-pairs",
      "--slp-vectorizer",
      "--loop-versioning",
      "--correlated-propagation",
      "--mem2reg",
      "--canonicalize-aliases",
      "--cross-dso-cfi",
      "--ipconstprop",
      "--loop-distribute",
      "--name-anon-globals",
      "--flattencfg",
      "--lower-expect",
      "--loop-versioning-licm",
      "--loop-unswitch",
      "--lcssa",
      "--sroa",
      "--constmerge"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}