{
  "program_id": "github-v0_29889.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 5,
    "oneSuccessor": 17,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 35,
    "const32Bit": 45,
    "const64Bit": 68,
    "numConstZeroes": 80,
    "numConstOnes": 23,
    "UncondBranches": 17,
    "binaryConstArg": 15,
    "NumAShrInst": 5,
    "NumAddInst": 12,
    "NumAllocaInst": 11,
    "NumAndInst": 5,
    "BlockMid": 9,
    "BlockLow": 21,
    "NumBitCastInst": 0,
    "NumBrInst": 26,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 39,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 47,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 1,
    "NumTruncInst": 15,
    "NumXorInst": 0,
    "NumZExtInst": 33,
    "TotalBlocks": 30,
    "TotalInsts": 246,
    "TotalMemInst": 129,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 109
  },
  "baseline_oz_instcount": 246,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--gvn",
    "--dse",
    "--loop-simplifycfg",
    "--prune-eh",
    "--aggressive-instcombine",
    "--early-cse",
    "--instsimplify",
    "--inline",
    "--load-store-vectorizer",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--nary-reassociate",
          "--loop-idiom",
          "--coro-early",
          "--slp-vectorizer",
          "--forceattrs",
          "--loop-data-prefetch",
          "--memcpyopt",
          "--ee-instrument",
          "--loop-simplify",
          "--lower-constant-intrinsics",
          "--instcombine",
          "--adce",
          "--globalsplit",
          "--sccp",
          "--break-crit-edges",
          "--rewrite-statepoints-for-gc",
          "--loop-versioning-licm",
          "--libcalls-shrinkwrap",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+16.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--nary-reassociate",
      "--loop-idiom",
      "--coro-early",
      "--slp-vectorizer",
      "--forceattrs",
      "--loop-data-prefetch",
      "--memcpyopt",
      "--ee-instrument",
      "--loop-simplify",
      "--lower-constant-intrinsics",
      "--instcombine",
      "--adce",
      "--globalsplit",
      "--sccp",
      "--break-crit-edges",
      "--rewrite-statepoints-for-gc",
      "--loop-versioning-licm",
      "--libcalls-shrinkwrap",
      "--coro-split"
    ],
    "performance_vs_Oz": "+16.3%"
  }
}