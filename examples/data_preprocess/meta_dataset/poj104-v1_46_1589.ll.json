{
  "program_id": "poj104-v1_46_1589.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 4,
    "oneSuccessor": 27,
    "twoPred": 8,
    "twoPredOneSuc": 1,
    "twoEach": 6,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 49,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 9,
    "CriticalCount": 0,
    "NumEdges": 51,
    "const32Bit": 46,
    "const64Bit": 27,
    "numConstZeroes": 21,
    "numConstOnes": 30,
    "UncondBranches": 27,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 18,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 44,
    "NumBitCastInst": 19,
    "NumBrInst": 39,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 79,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 31,
    "NumSubInst": 10,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 49,
    "TotalInsts": 303,
    "TotalMemInst": 186,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 127
  },
  "baseline_oz_instcount": 173,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--dse",
    "--globalopt",
    "--reassociate",
    "--sccp",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--licm",
    "--loop-instsimplify",
    "--gvn",
    "--early-cse-memssa",
    "--simplifycfg",
    "--mem2reg",
    "--bdce",
    "--gvn-hoist",
    "--prune-eh",
    "--instcombine",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--flattencfg",
    "--licm",
    "--adce",
    "--instsimplify",
    "--ipsccp",
    "--ipsccp",
    "--inline",
    "--globalopt",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--lower-expect",
    "--mergefunc",
    "--mergefunc",
    "--loop-reroll",
    "--early-cse",
    "--jump-threading",
    "--slsr",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--instcombine",
    "--bdce",
    "--loop-simplifycfg",
    "--inline",
    "--sroa",
    "--sccp",
    "--newgvn",
    "--lower-expect",
    "--prune-eh",
    "--newgvn",
    "--instcombine",
    "--jump-threading",
    "--lower-expect",
    "--elim-avail-extern",
    "--simplifycfg",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--elim-avail-extern",
          "--loop-distribute",
          "--strip-debug-declare",
          "--called-value-propagation",
          "--globaldce",
          "--loop-versioning",
          "--rpo-functionattrs",
          "--jump-threading",
          "--loop-deletion",
          "--loop-rotate",
          "--slsr",
          "--ee-instrument",
          "--barrier",
          "--sroa",
          "--loop-data-prefetch",
          "--loop-vectorize",
          "--constprop",
          "--correlated-propagation",
          "--strip-dead-prototypes",
          "--nary-reassociate",
          "--speculative-execution",
          "--lower-expect",
          "--sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--elim-avail-extern",
      "--loop-distribute",
      "--strip-debug-declare",
      "--called-value-propagation",
      "--globaldce",
      "--loop-versioning",
      "--rpo-functionattrs",
      "--jump-threading",
      "--loop-deletion",
      "--loop-rotate",
      "--slsr",
      "--ee-instrument",
      "--barrier",
      "--sroa",
      "--loop-data-prefetch",
      "--loop-vectorize",
      "--constprop",
      "--correlated-propagation",
      "--strip-dead-prototypes",
      "--nary-reassociate",
      "--speculative-execution",
      "--lower-expect",
      "--sink"
    ],
    "performance_vs_Oz": "+2.3%"
  }
}