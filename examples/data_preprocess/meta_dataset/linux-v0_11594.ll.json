{
  "program_id": "linux-v0_11594.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 30,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 6,
    "oneSuccessor": 28,
    "twoPred": 12,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 16,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 51,
    "BeginPhi": 2,
    "BranchCount": 44,
    "returnInt": 8,
    "CriticalCount": 11,
    "NumEdges": 60,
    "const32Bit": 124,
    "const64Bit": 12,
    "numConstZeroes": 53,
    "numConstOnes": 74,
    "UncondBranches": 28,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 50,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 47,
    "NumBitCastInst": 2,
    "NumBrInst": 44,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 80,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 9,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 57,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 4,
    "NumZExtInst": 7,
    "TotalBlocks": 53,
    "TotalInsts": 329,
    "TotalMemInst": 234,
    "TotalFuncs": 24,
    "ArgsPhi": 4,
    "testUnary": 148
  },
  "baseline_oz_instcount": 330,
  "knowledge_base_entry": [
    "--sink",
    "--jump-threading",
    "--aggressive-instcombine",
    "--jump-threading",
    "--adce",
    "--inline",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--lower-expect",
    "--prune-eh",
    "--gvn-hoist",
    "--flattencfg",
    "--gvn",
    "--sroa",
    "--reassociate",
    "--ipsccp",
    "--mergefunc",
    "--globaldce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--barrier",
          "--lowerinvoke",
          "--dce",
          "--consthoist",
          "--loop-guard-widening",
          "--libcalls-shrinkwrap",
          "--forceattrs",
          "--inferattrs",
          "--infer-address-spaces",
          "--insert-gcov-profiling",
          "--strip-nondebug",
          "--cross-dso-cfi",
          "--loop-reroll",
          "--licm",
          "--sink",
          "--slsr",
          "--aggressive-instcombine",
          "--elim-avail-extern",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--barrier",
      "--lowerinvoke",
      "--dce",
      "--consthoist",
      "--loop-guard-widening",
      "--libcalls-shrinkwrap",
      "--forceattrs",
      "--inferattrs",
      "--infer-address-spaces",
      "--insert-gcov-profiling",
      "--strip-nondebug",
      "--cross-dso-cfi",
      "--loop-reroll",
      "--licm",
      "--sink",
      "--slsr",
      "--aggressive-instcombine",
      "--elim-avail-extern",
      "--constmerge"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}