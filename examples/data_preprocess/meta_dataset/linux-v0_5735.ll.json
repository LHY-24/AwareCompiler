{
  "program_id": "linux-v0_5735.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 79,
    "onePredOneSuc": 61,
    "onePredTwoSuc": 16,
    "oneSuccessor": 77,
    "twoPred": 28,
    "twoPredOneSuc": 10,
    "twoEach": 12,
    "twoSuccessor": 32,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 130,
    "BeginPhi": 3,
    "BranchCount": 109,
    "returnInt": 11,
    "CriticalCount": 19,
    "NumEdges": 141,
    "const32Bit": 307,
    "const64Bit": 30,
    "numConstZeroes": 117,
    "numConstOnes": 172,
    "UncondBranches": 77,
    "binaryConstArg": 34,
    "NumAShrInst": 1,
    "NumAddInst": 5,
    "NumAllocaInst": 115,
    "NumAndInst": 6,
    "BlockMid": 21,
    "BlockLow": 112,
    "NumBitCastInst": 17,
    "NumBrInst": 109,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 80,
    "NumICmpInst": 39,
    "NumLShrInst": 1,
    "NumLoadInst": 251,
    "NumMulInst": 4,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 24,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 133,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 24,
    "NumZExtInst": 31,
    "TotalBlocks": 133,
    "TotalInsts": 911,
    "TotalMemInst": 630,
    "TotalFuncs": 39,
    "ArgsPhi": 6,
    "testUnary": 429
  },
  "baseline_oz_instcount": 898,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--mergefunc",
    "--jump-threading",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--instsimplify",
    "--ipsccp",
    "--globalopt",
    "--mem2reg",
    "--adce",
    "--gvn",
    "--aggressive-instcombine",
    "--ipsccp",
    "--correlated-propagation",
    "--instcombine",
    "--dce",
    "--newgvn",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--inject-tli-mappings",
          "--flattencfg",
          "--called-value-propagation",
          "--indvars",
          "--mergefunc",
          "--loop-reroll",
          "--loop-rotate",
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--loop-data-prefetch",
          "--mergereturn",
          "--loop-distribute",
          "--cross-dso-cfi",
          "--slp-vectorizer",
          "--loop-sink",
          "--adce",
          "--ipsccp",
          "--loop-simplify",
          "--prune-eh",
          "--coro-split",
          "--elim-avail-extern",
          "--gvn-hoist",
          "--strip-dead-prototypes",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--inject-tli-mappings",
      "--flattencfg",
      "--called-value-propagation",
      "--indvars",
      "--mergefunc",
      "--loop-reroll",
      "--loop-rotate",
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--loop-data-prefetch",
      "--mergereturn",
      "--loop-distribute",
      "--cross-dso-cfi",
      "--slp-vectorizer",
      "--loop-sink",
      "--adce",
      "--ipsccp",
      "--loop-simplify",
      "--prune-eh",
      "--coro-split",
      "--elim-avail-extern",
      "--gvn-hoist",
      "--strip-dead-prototypes",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}