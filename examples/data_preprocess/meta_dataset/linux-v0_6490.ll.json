{
  "program_id": "linux-v0_6490.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 5,
    "oneSuccessor": 13,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 9,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 22,
    "CriticalCount": 1,
    "NumEdges": 31,
    "const32Bit": 170,
    "const64Bit": 3,
    "numConstZeroes": 67,
    "numConstOnes": 68,
    "UncondBranches": 13,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 54,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 37,
    "NumBitCastInst": 14,
    "NumBrInst": 22,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 127,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 79,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 3,
    "NumZExtInst": 2,
    "TotalBlocks": 45,
    "TotalInsts": 430,
    "TotalMemInst": 349,
    "TotalFuncs": 45,
    "ArgsPhi": 0,
    "testUnary": 203
  },
  "baseline_oz_instcount": 430,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--licm",
    "--mldst-motion",
    "--instsimplify",
    "--dse",
    "--inline",
    "--adce",
    "--load-store-vectorizer",
    "--bdce",
    "--mergefunc",
    "--jump-threading",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--die",
    "--inline",
    "--sccp",
    "--die",
    "--slp-vectorizer",
    "--reassociate",
    "--simplifycfg",
    "--mergefunc",
    "--gvn",
    "--elim-avail-extern",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--attributor",
          "--constmerge",
          "--strip-nondebug",
          "--instcombine",
          "--strip-dead-prototypes",
          "--mergefunc",
          "--early-cse",
          "--float2int",
          "--inferattrs",
          "--lowerinvoke",
          "--mldst-motion",
          "--canonicalize-aliases",
          "--functionattrs",
          "--partial-inliner",
          "--loop-versioning",
          "--sancov",
          "--lower-expect",
          "--mergereturn",
          "--simplifycfg",
          "--hotcoldsplit",
          "--always-inline",
          "--inject-tli-mappings",
          "--mem2reg",
          "--loop-idiom",
          "--jump-threading",
          "--constprop",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--attributor",
      "--constmerge",
      "--strip-nondebug",
      "--instcombine",
      "--strip-dead-prototypes",
      "--mergefunc",
      "--early-cse",
      "--float2int",
      "--inferattrs",
      "--lowerinvoke",
      "--mldst-motion",
      "--canonicalize-aliases",
      "--functionattrs",
      "--partial-inliner",
      "--loop-versioning",
      "--sancov",
      "--lower-expect",
      "--mergereturn",
      "--simplifycfg",
      "--hotcoldsplit",
      "--always-inline",
      "--inject-tli-mappings",
      "--mem2reg",
      "--loop-idiom",
      "--jump-threading",
      "--constprop",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+6.0%"
  }
}