{
  "program_id": "poj104-v1_11_325.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 2,
    "oneSuccessor": 5,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 12,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 3,
    "CriticalCount": 4,
    "NumEdges": 13,
    "const32Bit": 33,
    "const64Bit": 42,
    "numConstZeroes": 23,
    "numConstOnes": 12,
    "UncondBranches": 5,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 10,
    "NumBitCastInst": 14,
    "NumBrInst": 9,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 12,
    "TotalInsts": 117,
    "TotalMemInst": 77,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 39
  },
  "baseline_oz_instcount": 71,
  "knowledge_base_entry": [
    "--die",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--early-cse",
    "-loop-reduce",
    "--early-cse-memssa",
    "--newgvn",
    "--gvn",
    "--indvars",
    "--early-cse-memssa",
    "--newgvn",
    "--gvn",
    "--simplifycfg",
    "--reassociate",
    "--inline",
    "--instcombine",
    "--mergefunc",
    "--early-cse",
    "--simplifycfg",
    "--dce",
    "--sccp",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse",
    "--licm",
    "--sccp",
    "--dse",
    "--jump-threading",
    "--slp-vectorizer",
    "--inline",
    "--mergefunc",
    "--globalopt",
    "--instcombine",
    "--instsimplify",
    "--slp-vectorizer",
    "--lower-expect",
    "--load-store-vectorizer",
    "--early-cse",
    "--memcpyopt",
    "--simplifycfg",
    "--prune-eh",
    "--inline",
    "--dse",
    "--gvn-hoist",
    "--instsimplify",
    "--bdce",
    "--instcombine",
    "--simplifycfg",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--sroa",
    "--correlated-propagation",
    "--die",
    "--jump-threading",
    "--memcpyopt",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--called-value-propagation",
          "--slp-vectorizer",
          "--constmerge",
          "--sroa",
          "--early-cse-memssa",
          "--speculative-execution",
          "--loop-distribute",
          "--loop-deletion",
          "--strip-nondebug",
          "--strip-dead-prototypes",
          "--licm",
          "--instnamer",
          "--loop-vectorize",
          "--constprop",
          "--loop-simplifycfg",
          "--load-store-vectorizer",
          "--insert-gcov-profiling",
          "--loop-interchange",
          "--inject-tli-mappings",
          "--strip-debug-declare",
          "--loop-unroll",
          "--mem2reg",
          "--loop-data-prefetch",
          "--lower-matrix-intrinsics",
          "--coro-early",
          "--add-discriminators",
          "--lower-expect",
          "--mergereturn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--called-value-propagation",
      "--slp-vectorizer",
      "--constmerge",
      "--sroa",
      "--early-cse-memssa",
      "--speculative-execution",
      "--loop-distribute",
      "--loop-deletion",
      "--strip-nondebug",
      "--strip-dead-prototypes",
      "--licm",
      "--instnamer",
      "--loop-vectorize",
      "--constprop",
      "--loop-simplifycfg",
      "--load-store-vectorizer",
      "--insert-gcov-profiling",
      "--loop-interchange",
      "--inject-tli-mappings",
      "--strip-debug-declare",
      "--loop-unroll",
      "--mem2reg",
      "--loop-data-prefetch",
      "--lower-matrix-intrinsics",
      "--coro-early",
      "--add-discriminators",
      "--lower-expect",
      "--mergereturn"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}