{
  "program_id": "poj104-v1_73_2359.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 4,
    "oneSuccessor": 19,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 4,
    "CriticalCount": 4,
    "NumEdges": 37,
    "const32Bit": 32,
    "const64Bit": 32,
    "numConstZeroes": 24,
    "numConstOnes": 19,
    "UncondBranches": 19,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 29,
    "NumBitCastInst": 16,
    "NumBrInst": 28,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 38,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 31,
    "TotalInsts": 178,
    "TotalMemInst": 102,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 75
  },
  "baseline_oz_instcount": 118,
  "knowledge_base_entry": [
    "--loop-deletion",
    "--elim-avail-extern",
    "--loop-rotate",
    "--licm",
    "--load-store-vectorizer",
    "--mergefunc",
    "--early-cse",
    "--gvn",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--adce",
    "--aggressive-instcombine",
    "--licm",
    "--adce",
    "--elim-avail-extern",
    "--inline",
    "--load-store-vectorizer",
    "--dse",
    "--correlated-propagation",
    "--adce",
    "--simplifycfg",
    "--prune-eh",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--prune-eh",
    "--mem2reg",
    "--memcpyopt",
    "--newgvn",
    "--instcombine",
    "--gvn",
    "--loop-rotate",
    "--mem2reg",
    "--sccp",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--memcpyopt",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--mem2reg",
    "--ipsccp",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--instcombine",
    "--globalopt",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--licm",
    "--load-store-vectorizer",
    "--instcombine",
    "--mergefunc",
    "--mergefunc",
    "--aggressive-instcombine",
    "--die",
    "--mem2reg",
    "--licm",
    "--instsimplify",
    "--licm",
    "--mem2reg",
    "--loop-rotate",
    "--sroa",
    "--load-store-vectorizer",
    "--dce",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--sroa",
    "--indvars",
    "--slsr",
    "--instcombine",
    "--flattencfg",
    "--load-store-vectorizer",
    "--licm",
    "--mem2reg",
    "--mergefunc",
    "--newgvn",
    "--early-cse-memssa",
    "--simplifycfg",
    "--instcombine",
    "--prune-eh",
    "--simplifycfg",
    "--sroa",
    "--correlated-propagation",
    "--lower-expect",
    "--load-store-vectorizer",
    "--instsimplify",
    "--globalopt",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--licm",
    "--load-store-vectorizer",
    "--instcombine",
    "--mergefunc",
    "--mergefunc",
    "--aggressive-instcombine",
    "--die",
    "--mem2reg",
    "--licm",
    "--instsimplify",
    "--licm",
    "--mem2reg",
    "--loop-rotate",
    "--licm",
    "--load-store-vectorizer",
    "--mergefunc",
    "--early-cse",
    "--gvn",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--adce",
    "--aggressive-instcombine",
    "--licm",
    "--adce",
    "--elim-avail-extern",
    "--inline",
    "--load-store-vectorizer",
    "--dse",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--prune-eh",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--prune-eh",
    "--mem2reg",
    "--memcpyopt",
    "--newgvn",
    "--instcombine",
    "--gvn",
    "--loop-rotate",
    "--mem2reg",
    "--sccp",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--memcpyopt",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--mem2reg",
    "--ipsccp",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--instcombine",
    "--globalopt",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--licm",
    "--load-store-vectorizer",
    "--instcombine",
    "--mergefunc",
    "--mergefunc",
    "--aggressive-instcombine",
    "--die",
    "--mem2reg",
    "--licm",
    "--instsimplify",
    "--licm",
    "--mem2reg",
    "--loop-rotate",
    "--sroa",
    "--load-store-vectorizer",
    "--dce",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--sroa",
    "--indvars",
    "--slsr",
    "--instcombine",
    "--flattencfg",
    "--load-store-vectorizer",
    "--licm",
    "--mem2reg",
    "--mergefunc",
    "--newgvn",
    "--early-cse-memssa",
    "--simplifycfg",
    "--instcombine",
    "--prune-eh",
    "--simplifycfg",
    "--sroa",
    "--correlated-propagation",
    "--lower-expect",
    "--load-store-vectorizer",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--loop-distribute",
          "--globaldce",
          "--deadargelim",
          "--nary-reassociate",
          "--mergefunc",
          "--flattencfg",
          "--die",
          "--redundant-dbg-inst-elim",
          "--guard-widening",
          "--loop-fusion",
          "--strip-debug-declare",
          "--partial-inliner",
          "--argpromotion",
          "--loop-guard-widening",
          "--callsite-splitting",
          "--separate-const-offset-from-gep",
          "--reg2mem",
          "--break-crit-edges",
          "-loop-reduce",
          "--sroa",
          "--name-anon-globals",
          "--sccp",
          "--early-cse-memssa",
          "--loop-reroll",
          "--instcombine",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+36.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--loop-distribute",
      "--globaldce",
      "--deadargelim",
      "--nary-reassociate",
      "--mergefunc",
      "--flattencfg",
      "--die",
      "--redundant-dbg-inst-elim",
      "--guard-widening",
      "--loop-fusion",
      "--strip-debug-declare",
      "--partial-inliner",
      "--argpromotion",
      "--loop-guard-widening",
      "--callsite-splitting",
      "--separate-const-offset-from-gep",
      "--reg2mem",
      "--break-crit-edges",
      "-loop-reduce",
      "--sroa",
      "--name-anon-globals",
      "--sccp",
      "--early-cse-memssa",
      "--loop-reroll",
      "--instcombine",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+36.4%"
  }
}