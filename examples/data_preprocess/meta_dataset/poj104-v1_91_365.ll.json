{
  "program_id": "poj104-v1_91_365.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 8,
    "BeginPhi": 0,
    "BranchCount": 4,
    "returnInt": 5,
    "CriticalCount": 0,
    "NumEdges": 5,
    "const32Bit": 11,
    "const64Bit": 30,
    "numConstZeroes": 22,
    "numConstOnes": 13,
    "UncondBranches": 3,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 5,
    "NumBitCastInst": 6,
    "NumBrInst": 4,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 13,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 7,
    "NumSubInst": 4,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 8,
    "TotalInsts": 90,
    "TotalMemInst": 56,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 36
  },
  "baseline_oz_instcount": 36,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--gvn",
    "--sroa",
    "--licm",
    "--bdce",
    "--inline",
    "--dce",
    "--newgvn",
    "--mldst-motion",
    "--simplifycfg",
    "--licm",
    "--mem2reg",
    "--mldst-motion",
    "--mem2reg",
    "--instcombine",
    "--slsr",
    "--indvars",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergeicmps",
          "--ipconstprop",
          "--constprop",
          "--loop-idiom",
          "--add-discriminators",
          "--elim-avail-extern",
          "--coro-cleanup",
          "--inferattrs",
          "--adce",
          "--prune-eh",
          "--irce",
          "--reassociate",
          "--memcpyopt",
          "--loop-predication",
          "--lower-widenable-condition",
          "--lower-guard-intrinsic",
          "--loop-data-prefetch",
          "--libcalls-shrinkwrap",
          "--newgvn",
          "--licm",
          "--speculative-execution",
          "--nary-reassociate",
          "--dce",
          "--instcombine",
          "--strip-debug-declare",
          "--callsite-splitting",
          "--redundant-dbg-inst-elim",
          "--lcssa",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergeicmps",
      "--ipconstprop",
      "--constprop",
      "--loop-idiom",
      "--add-discriminators",
      "--elim-avail-extern",
      "--coro-cleanup",
      "--inferattrs",
      "--adce",
      "--prune-eh",
      "--irce",
      "--reassociate",
      "--memcpyopt",
      "--loop-predication",
      "--lower-widenable-condition",
      "--lower-guard-intrinsic",
      "--loop-data-prefetch",
      "--libcalls-shrinkwrap",
      "--newgvn",
      "--licm",
      "--speculative-execution",
      "--nary-reassociate",
      "--dce",
      "--instcombine",
      "--strip-debug-declare",
      "--callsite-splitting",
      "--redundant-dbg-inst-elim",
      "--lcssa",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+2.8%"
  }
}