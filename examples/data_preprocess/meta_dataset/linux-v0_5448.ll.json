{
  "program_id": "linux-v0_5448.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 84,
    "onePredOneSuc": 70,
    "onePredTwoSuc": 14,
    "oneSuccessor": 81,
    "twoPred": 23,
    "twoPredOneSuc": 8,
    "twoEach": 10,
    "twoSuccessor": 29,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 124,
    "BeginPhi": 2,
    "BranchCount": 110,
    "returnInt": 6,
    "CriticalCount": 18,
    "NumEdges": 139,
    "const32Bit": 312,
    "const64Bit": 23,
    "numConstZeroes": 122,
    "numConstOnes": 161,
    "UncondBranches": 81,
    "binaryConstArg": 40,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 117,
    "NumAndInst": 4,
    "BlockMid": 17,
    "BlockLow": 109,
    "NumBitCastInst": 11,
    "NumBrInst": 110,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 75,
    "NumICmpInst": 44,
    "NumLShrInst": 0,
    "NumLoadInst": 235,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 16,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 128,
    "NumSubInst": 3,
    "NumTruncInst": 2,
    "NumXorInst": 22,
    "NumZExtInst": 25,
    "TotalBlocks": 126,
    "TotalInsts": 882,
    "TotalMemInst": 598,
    "TotalFuncs": 27,
    "ArgsPhi": 4,
    "testUnary": 412
  },
  "baseline_oz_instcount": 877,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--sccp",
    "--die",
    "--correlated-propagation",
    "--globalopt",
    "--mergefunc",
    "--instcombine",
    "--aggressive-instcombine",
    "--prune-eh",
    "--jump-threading",
    "--mldst-motion",
    "--inline",
    "--early-cse",
    "--gvn-hoist",
    "--bdce",
    "--dse",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--barrier",
          "--sancov",
          "--rpo-functionattrs",
          "--loop-instsimplify",
          "--flattencfg",
          "--mergefunc",
          "--aggressive-instcombine",
          "--inject-tli-mappings",
          "--globalopt",
          "--ipconstprop",
          "--loop-sink",
          "--licm",
          "--loweratomic",
          "--loop-unswitch",
          "--callsite-splitting",
          "--pgo-memop-opt",
          "--float2int",
          "--lower-guard-intrinsic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--barrier",
      "--sancov",
      "--rpo-functionattrs",
      "--loop-instsimplify",
      "--flattencfg",
      "--mergefunc",
      "--aggressive-instcombine",
      "--inject-tli-mappings",
      "--globalopt",
      "--ipconstprop",
      "--loop-sink",
      "--licm",
      "--loweratomic",
      "--loop-unswitch",
      "--callsite-splitting",
      "--pgo-memop-opt",
      "--float2int",
      "--lower-guard-intrinsic"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}