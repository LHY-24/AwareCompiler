{
  "program_id": "poj104-v1_34_1579.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 7,
    "CriticalCount": 1,
    "NumEdges": 22,
    "const32Bit": 39,
    "const64Bit": 8,
    "numConstZeroes": 8,
    "numConstOnes": 26,
    "UncondBranches": 10,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 21,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 30,
    "NumBitCastInst": 14,
    "NumBrInst": 16,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 46,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 31,
    "TotalInsts": 193,
    "TotalMemInst": 136,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 82
  },
  "baseline_oz_instcount": 48,
  "knowledge_base_entry": [
    "--sink",
    "--simplifycfg",
    "--mem2reg",
    "--instsimplify",
    "--mem2reg",
    "--instsimplify",
    "--elim-avail-extern",
    "--flattencfg",
    "--gvn",
    "--load-store-vectorizer",
    "--instsimplify",
    "--correlated-propagation",
    "--ipsccp",
    "--nary-reassociate",
    "--jump-threading",
    "--instcombine",
    "--simplifycfg",
    "--early-cse",
    "--inline",
    "--licm",
    "--bdce",
    "--newgvn",
    "--dse",
    "--newgvn",
    "--load-store-vectorizer",
    "--adce",
    "--reassociate",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--loop-fusion",
    "--indvars",
    "--gvn",
    "--nary-reassociate",
    "--ipsccp",
    "--instsimplify",
    "--ipsccp",
    "--sroa",
    "--simplifycfg",
    "--gvn-hoist",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--infer-address-spaces",
          "--mergereturn",
          "--dse",
          "--ipconstprop",
          "--gvn-hoist",
          "--alignment-from-assumptions",
          "--elim-avail-extern",
          "--reassociate",
          "--loop-rotate",
          "--ipsccp",
          "--mem2reg",
          "--loop-simplifycfg",
          "--partially-inline-libcalls",
          "--sancov",
          "--called-value-propagation",
          "--slsr",
          "--insert-gcov-profiling",
          "--inline",
          "--coro-cleanup",
          "--inject-tli-mappings",
          "--rpo-functionattrs",
          "--sroa",
          "--early-cse",
          "--instnamer",
          "--coro-early",
          "--separate-const-offset-from-gep",
          "--loop-idiom"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+14.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--infer-address-spaces",
      "--mergereturn",
      "--dse",
      "--ipconstprop",
      "--gvn-hoist",
      "--alignment-from-assumptions",
      "--elim-avail-extern",
      "--reassociate",
      "--loop-rotate",
      "--ipsccp",
      "--mem2reg",
      "--loop-simplifycfg",
      "--partially-inline-libcalls",
      "--sancov",
      "--called-value-propagation",
      "--slsr",
      "--insert-gcov-profiling",
      "--inline",
      "--coro-cleanup",
      "--inject-tli-mappings",
      "--rpo-functionattrs",
      "--sroa",
      "--early-cse",
      "--instnamer",
      "--coro-early",
      "--separate-const-offset-from-gep",
      "--loop-idiom"
    ],
    "performance_vs_Oz": "+14.6%"
  }
}