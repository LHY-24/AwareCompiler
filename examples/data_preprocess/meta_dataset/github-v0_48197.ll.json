{
  "program_id": "github-v0_48197.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 83,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 31,
    "oneSuccessor": 70,
    "twoPred": 32,
    "twoPredOneSuc": 17,
    "twoEach": 14,
    "twoSuccessor": 48,
    "morePreds": 5,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 123,
    "BeginPhi": 2,
    "BranchCount": 118,
    "returnInt": 21,
    "CriticalCount": 29,
    "NumEdges": 177,
    "const32Bit": 347,
    "const64Bit": 1,
    "numConstZeroes": 158,
    "numConstOnes": 36,
    "UncondBranches": 70,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 29,
    "NumAndInst": 7,
    "BlockMid": 13,
    "BlockLow": 112,
    "NumBitCastInst": 27,
    "NumBrInst": 118,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 123,
    "NumICmpInst": 48,
    "NumLShrInst": 2,
    "NumLoadInst": 316,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 119,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 20,
    "TotalBlocks": 125,
    "TotalInsts": 878,
    "TotalMemInst": 636,
    "TotalFuncs": 22,
    "ArgsPhi": 4,
    "testUnary": 398
  },
  "baseline_oz_instcount": 878,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--newgvn",
    "--instcombine",
    "--licm",
    "--elim-avail-extern",
    "--mergefunc",
    "--aggressive-instcombine",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--aggressive-instcombine",
          "--newgvn",
          "--lower-constant-intrinsics",
          "--lcssa",
          "--speculative-execution",
          "--jump-threading",
          "--coro-cleanup",
          "--mldst-motion",
          "--functionattrs",
          "-loop-reduce",
          "--called-value-propagation",
          "--add-discriminators",
          "--strip-nondebug",
          "--callsite-splitting",
          "--mergefunc",
          "--inline",
          "--mergeicmps",
          "--loop-versioning-licm",
          "--loop-reroll",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--aggressive-instcombine",
      "--newgvn",
      "--lower-constant-intrinsics",
      "--lcssa",
      "--speculative-execution",
      "--jump-threading",
      "--coro-cleanup",
      "--mldst-motion",
      "--functionattrs",
      "-loop-reduce",
      "--called-value-propagation",
      "--add-discriminators",
      "--strip-nondebug",
      "--callsite-splitting",
      "--mergefunc",
      "--inline",
      "--mergeicmps",
      "--loop-versioning-licm",
      "--loop-reroll",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}