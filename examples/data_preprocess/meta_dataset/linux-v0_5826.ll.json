{
  "program_id": "linux-v0_5826.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 1,
    "oneSuccessor": 17,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 43,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 10,
    "CriticalCount": 2,
    "NumEdges": 29,
    "const32Bit": 135,
    "const64Bit": 11,
    "numConstZeroes": 54,
    "numConstOnes": 59,
    "UncondBranches": 17,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 52,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 34,
    "NumBitCastInst": 10,
    "NumBrInst": 23,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 89,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 76,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 43,
    "TotalInsts": 349,
    "TotalMemInst": 274,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 160
  },
  "baseline_oz_instcount": 349,
  "knowledge_base_entry": [
    "--globaldce",
    "--ipsccp",
    "--nary-reassociate",
    "--gvn",
    "--mergefunc",
    "--early-cse-memssa",
    "--sroa",
    "--prune-eh",
    "--instsimplify",
    "--sroa",
    "-loop-reduce",
    "--mergefunc",
    "--early-cse",
    "--memcpyopt",
    "--instcombine",
    "--simplifycfg",
    "--correlated-propagation",
    "--lower-expect",
    "--mergefunc",
    "--correlated-propagation",
    "--die",
    "--gvn",
    "--lower-expect",
    "--dce",
    "--lower-constant-intrinsics",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--flattencfg",
          "--loop-load-elim",
          "--loop-fusion",
          "--inferattrs",
          "--guard-widening",
          "--loop-versioning",
          "--licm",
          "--ipconstprop",
          "--argpromotion",
          "--loweratomic",
          "--globalopt",
          "--lowerswitch",
          "--deadargelim",
          "--inject-tli-mappings",
          "--tailcallelim",
          "--infer-address-spaces",
          "--consthoist",
          "--adce",
          "--loop-unroll-and-jam",
          "--slsr",
          "--reg2mem",
          "--mergefunc",
          "--early-cse",
          "--break-crit-edges",
          "--lcssa",
          "--cross-dso-cfi",
          "--sroa",
          "--sink",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--flattencfg",
      "--loop-load-elim",
      "--loop-fusion",
      "--inferattrs",
      "--guard-widening",
      "--loop-versioning",
      "--licm",
      "--ipconstprop",
      "--argpromotion",
      "--loweratomic",
      "--globalopt",
      "--lowerswitch",
      "--deadargelim",
      "--inject-tli-mappings",
      "--tailcallelim",
      "--infer-address-spaces",
      "--consthoist",
      "--adce",
      "--loop-unroll-and-jam",
      "--slsr",
      "--reg2mem",
      "--mergefunc",
      "--early-cse",
      "--break-crit-edges",
      "--lcssa",
      "--cross-dso-cfi",
      "--sroa",
      "--sink",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}