{
  "program_id": "linux-v0_2336.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 31,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 7,
    "oneSuccessor": 28,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 15,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 55,
    "BeginPhi": 1,
    "BranchCount": 43,
    "returnInt": 15,
    "CriticalCount": 9,
    "NumEdges": 68,
    "const32Bit": 135,
    "const64Bit": 30,
    "numConstZeroes": 49,
    "numConstOnes": 38,
    "UncondBranches": 28,
    "binaryConstArg": 35,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 30,
    "NumAndInst": 19,
    "BlockMid": 6,
    "BlockLow": 50,
    "NumBitCastInst": 0,
    "NumBrInst": 43,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 18,
    "NumLShrInst": 3,
    "NumLoadInst": 97,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 11,
    "NumSExtInst": 5,
    "NumSelectInst": 3,
    "NumShlInst": 1,
    "NumStoreInst": 45,
    "NumSubInst": 1,
    "NumTruncInst": 11,
    "NumXorInst": 1,
    "NumZExtInst": 20,
    "TotalBlocks": 56,
    "TotalInsts": 390,
    "TotalMemInst": 236,
    "TotalFuncs": 26,
    "ArgsPhi": 2,
    "testUnary": 163
  },
  "baseline_oz_instcount": 390,
  "knowledge_base_entry": [
    "--mergefunc",
    "--aggressive-instcombine",
    "--die",
    "--licm",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inject-tli-mappings",
          "--libcalls-shrinkwrap",
          "--irce",
          "--globalsplit",
          "--tailcallelim",
          "--correlated-propagation",
          "--loop-sink",
          "--mergeicmps",
          "--aggressive-instcombine",
          "--loop-unroll-and-jam",
          "--sink",
          "--lower-matrix-intrinsics",
          "--add-discriminators",
          "--redundant-dbg-inst-elim",
          "--loop-rotate",
          "--deadargelim",
          "--loop-vectorize",
          "--die",
          "--sccp",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inject-tli-mappings",
      "--libcalls-shrinkwrap",
      "--irce",
      "--globalsplit",
      "--tailcallelim",
      "--correlated-propagation",
      "--loop-sink",
      "--mergeicmps",
      "--aggressive-instcombine",
      "--loop-unroll-and-jam",
      "--sink",
      "--lower-matrix-intrinsics",
      "--add-discriminators",
      "--redundant-dbg-inst-elim",
      "--loop-rotate",
      "--deadargelim",
      "--loop-vectorize",
      "--die",
      "--sccp",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}