{
  "program_id": "linux-v0_6414.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 34,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 0,
    "oneSuccessor": 38,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 17,
    "CriticalCount": 5,
    "NumEdges": 75,
    "const32Bit": 142,
    "const64Bit": 4,
    "numConstZeroes": 21,
    "numConstOnes": 49,
    "UncondBranches": 38,
    "binaryConstArg": 31,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 38,
    "NumAndInst": 6,
    "BlockMid": 4,
    "BlockLow": 54,
    "NumBitCastInst": 4,
    "NumBrInst": 39,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 79,
    "NumMulInst": 0,
    "NumOrInst": 22,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 72,
    "NumSubInst": 1,
    "NumTruncInst": 33,
    "NumXorInst": 2,
    "NumZExtInst": 33,
    "TotalBlocks": 58,
    "TotalInsts": 388,
    "TotalMemInst": 221,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 193
  },
  "baseline_oz_instcount": 388,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--early-cse",
    "--ipsccp",
    "--dse",
    "--newgvn",
    "--licm",
    "--aggressive-instcombine",
    "--prune-eh",
    "--reassociate",
    "--elim-avail-extern",
    "--sroa",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instcombine",
          "--prune-eh",
          "--loop-instsimplify",
          "--rewrite-statepoints-for-gc",
          "--aggressive-instcombine",
          "--lower-guard-intrinsic",
          "--strip-nondebug",
          "--gvn-hoist",
          "--simplifycfg",
          "--consthoist",
          "--alignment-from-assumptions",
          "--sroa",
          "--slsr",
          "--speculative-execution",
          "--instsimplify",
          "--loop-idiom",
          "--coro-cleanup",
          "--die",
          "--hotcoldsplit",
          "--loop-simplifycfg",
          "--redundant-dbg-inst-elim",
          "--gvn",
          "-loop-reduce",
          "--canonicalize-aliases",
          "--functionattrs",
          "--sccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+14.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instcombine",
      "--prune-eh",
      "--loop-instsimplify",
      "--rewrite-statepoints-for-gc",
      "--aggressive-instcombine",
      "--lower-guard-intrinsic",
      "--strip-nondebug",
      "--gvn-hoist",
      "--simplifycfg",
      "--consthoist",
      "--alignment-from-assumptions",
      "--sroa",
      "--slsr",
      "--speculative-execution",
      "--instsimplify",
      "--loop-idiom",
      "--coro-cleanup",
      "--die",
      "--hotcoldsplit",
      "--loop-simplifycfg",
      "--redundant-dbg-inst-elim",
      "--gvn",
      "-loop-reduce",
      "--canonicalize-aliases",
      "--functionattrs",
      "--sccp"
    ],
    "performance_vs_Oz": "+14.4%"
  }
}