{
  "program_id": "linux-v0_1939.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 52,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 16,
    "oneSuccessor": 45,
    "twoPred": 18,
    "twoPredOneSuc": 8,
    "twoEach": 2,
    "twoSuccessor": 30,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 101,
    "BeginPhi": 0,
    "BranchCount": 73,
    "returnInt": 16,
    "CriticalCount": 14,
    "NumEdges": 105,
    "const32Bit": 364,
    "const64Bit": 34,
    "numConstZeroes": 168,
    "numConstOnes": 108,
    "UncondBranches": 45,
    "binaryConstArg": 16,
    "NumAShrInst": 2,
    "NumAddInst": 4,
    "NumAllocaInst": 85,
    "NumAndInst": 5,
    "BlockMid": 16,
    "BlockLow": 85,
    "NumBitCastInst": 15,
    "NumBrInst": 73,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 138,
    "NumICmpInst": 27,
    "NumLShrInst": 1,
    "NumLoadInst": 239,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 26,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 119,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 101,
    "TotalInsts": 810,
    "TotalMemInst": 626,
    "TotalFuncs": 40,
    "ArgsPhi": 0,
    "testUnary": 362
  },
  "baseline_oz_instcount": 812,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--gvn-hoist",
    "--loop-rotate",
    "--newgvn",
    "--load-store-vectorizer",
    "--early-cse",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--gvn",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--loop-reroll",
          "--speculative-execution",
          "--partial-inliner",
          "--loop-idiom",
          "--bdce",
          "--cross-dso-cfi",
          "--early-cse",
          "--gvn-hoist",
          "--consthoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--loop-reroll",
      "--speculative-execution",
      "--partial-inliner",
      "--loop-idiom",
      "--bdce",
      "--cross-dso-cfi",
      "--early-cse",
      "--gvn-hoist",
      "--consthoist"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}