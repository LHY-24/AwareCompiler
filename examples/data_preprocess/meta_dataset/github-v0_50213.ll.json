{
  "program_id": "github-v0_50213.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 3,
    "BeginPhi": 4,
    "BranchCount": 6,
    "returnInt": 4,
    "CriticalCount": 6,
    "NumEdges": 10,
    "const32Bit": 17,
    "const64Bit": 10,
    "numConstZeroes": 14,
    "numConstOnes": 6,
    "UncondBranches": 2,
    "binaryConstArg": 7,
    "NumAShrInst": 2,
    "NumAddInst": 3,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 5,
    "NumBitCastInst": 0,
    "NumBrInst": 6,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 4,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 6,
    "NumRetInst": 1,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 3,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 7,
    "TotalInsts": 79,
    "TotalMemInst": 26,
    "TotalFuncs": 9,
    "ArgsPhi": 12,
    "testUnary": 9
  },
  "baseline_oz_instcount": 81,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--early-cse",
    "--simplifycfg",
    "--slp-vectorizer",
    "--sroa",
    "--nary-reassociate",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--adce",
          "--early-cse",
          "--loop-data-prefetch",
          "--inline",
          "--gvn-hoist",
          "--lower-guard-intrinsic",
          "--sroa",
          "--mergefunc",
          "--hotcoldsplit",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--adce",
      "--early-cse",
      "--loop-data-prefetch",
      "--inline",
      "--gvn-hoist",
      "--lower-guard-intrinsic",
      "--sroa",
      "--mergefunc",
      "--hotcoldsplit",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+3.7%"
  }
}