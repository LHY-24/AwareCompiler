{
  "program_id": "linux-v0_6567.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 26,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 4,
    "oneSuccessor": 24,
    "twoPred": 8,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 12,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 2,
    "BranchCount": 36,
    "returnInt": 3,
    "CriticalCount": 2,
    "NumEdges": 48,
    "const32Bit": 83,
    "const64Bit": 4,
    "numConstZeroes": 30,
    "numConstOnes": 47,
    "UncondBranches": 24,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 39,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 43,
    "NumBitCastInst": 7,
    "NumBrInst": 36,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 67,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 11,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 51,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 47,
    "TotalInsts": 262,
    "TotalMemInst": 189,
    "TotalFuncs": 20,
    "ArgsPhi": 4,
    "testUnary": 116
  },
  "baseline_oz_instcount": 263,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--gvn",
    "--gvn-hoist",
    "--gvn",
    "--dse",
    "--load-store-vectorizer",
    "--newgvn",
    "--memcpyopt",
    "--mergefunc",
    "--globaldce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--globalsplit",
          "--mergefunc",
          "--argpromotion",
          "--tailcallelim",
          "--instsimplify",
          "--name-anon-globals",
          "--dse",
          "--slsr",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--globalsplit",
      "--mergefunc",
      "--argpromotion",
      "--tailcallelim",
      "--instsimplify",
      "--name-anon-globals",
      "--dse",
      "--slsr",
      "--sancov"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}