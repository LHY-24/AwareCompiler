{
  "program_id": "linux-v0_11550.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 29,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 7,
    "oneSuccessor": 24,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 52,
    "BeginPhi": 1,
    "BranchCount": 37,
    "returnInt": 9,
    "CriticalCount": 2,
    "NumEdges": 50,
    "const32Bit": 99,
    "const64Bit": 22,
    "numConstZeroes": 48,
    "numConstOnes": 49,
    "UncondBranches": 24,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 36,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 50,
    "NumBitCastInst": 14,
    "NumBrInst": 37,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 83,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 16,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 53,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 8,
    "NumZExtInst": 6,
    "TotalBlocks": 53,
    "TotalInsts": 348,
    "TotalMemInst": 235,
    "TotalFuncs": 24,
    "ArgsPhi": 2,
    "testUnary": 153
  },
  "baseline_oz_instcount": 348,
  "knowledge_base_entry": [
    "--inline",
    "--early-cse-memssa",
    "--prune-eh",
    "--sroa",
    "--jump-threading",
    "--ipsccp",
    "--instcombine",
    "--dce",
    "--dse",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--lower-expect",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--dse",
    "--gvn",
    "--slsr",
    "--loop-reroll",
    "--loop-fusion",
    "--newgvn",
    "--reassociate",
    "--instsimplify",
    "--instcombine",
    "--mldst-motion",
    "--elim-avail-extern",
    "--simplifycfg",
    "-loop-reduce",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--sroa",
    "--jump-threading",
    "--ipsccp",
    "--instcombine",
    "--dce",
    "--dse",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--lower-expect",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--prune-eh",
          "--aggressive-instcombine",
          "--speculative-execution",
          "--partially-inline-libcalls",
          "--loop-data-prefetch",
          "--instsimplify",
          "--always-inline",
          "--separate-const-offset-from-gep",
          "--strip-nondebug",
          "--coro-split",
          "--mergeicmps",
          "--inject-tli-mappings",
          "--strip-dead-prototypes",
          "--alignment-from-assumptions",
          "--loop-unroll",
          "--sroa",
          "--loop-simplifycfg",
          "--loop-instsimplify",
          "--float2int",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--prune-eh",
      "--aggressive-instcombine",
      "--speculative-execution",
      "--partially-inline-libcalls",
      "--loop-data-prefetch",
      "--instsimplify",
      "--always-inline",
      "--separate-const-offset-from-gep",
      "--strip-nondebug",
      "--coro-split",
      "--mergeicmps",
      "--inject-tli-mappings",
      "--strip-dead-prototypes",
      "--alignment-from-assumptions",
      "--loop-unroll",
      "--sroa",
      "--loop-simplifycfg",
      "--loop-instsimplify",
      "--float2int",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}