{
  "program_id": "github-v0_23104.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 15,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 2,
    "oneSuccessor": 17,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 1,
    "BranchCount": 25,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 33,
    "const32Bit": 20,
    "const64Bit": 12,
    "numConstZeroes": 8,
    "numConstOnes": 15,
    "UncondBranches": 17,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 21,
    "NumBitCastInst": 3,
    "NumBrInst": 25,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 66,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 4,
    "NumZExtInst": 15,
    "TotalBlocks": 26,
    "TotalInsts": 191,
    "TotalMemInst": 120,
    "TotalFuncs": 1,
    "ArgsPhi": 2,
    "testUnary": 97
  },
  "baseline_oz_instcount": 148,
  "knowledge_base_entry": [
    "--loop-versioning-licm",
    "--gvn-hoist",
    "--instsimplify",
    "--bdce",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--licm",
    "--globalopt",
    "--loweratomic",
    "--early-cse-memssa",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--ipsccp",
          "--loop-load-elim",
          "--flattencfg",
          "--float2int",
          "--loop-idiom",
          "--mergeicmps",
          "--partially-inline-libcalls",
          "--separate-const-offset-from-gep",
          "--rewrite-statepoints-for-gc",
          "--aggressive-instcombine",
          "--inferattrs",
          "--lower-constant-intrinsics",
          "--forceattrs",
          "--loweratomic",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--ipsccp",
      "--loop-load-elim",
      "--flattencfg",
      "--float2int",
      "--loop-idiom",
      "--mergeicmps",
      "--partially-inline-libcalls",
      "--separate-const-offset-from-gep",
      "--rewrite-statepoints-for-gc",
      "--aggressive-instcombine",
      "--inferattrs",
      "--lower-constant-intrinsics",
      "--forceattrs",
      "--loweratomic",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+5.4%"
  }
}