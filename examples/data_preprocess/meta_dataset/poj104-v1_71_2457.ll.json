{
  "program_id": "poj104-v1_71_2457.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 5,
    "oneSuccessor": 9,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 8,
    "CriticalCount": 8,
    "NumEdges": 25,
    "const32Bit": 52,
    "const64Bit": 120,
    "numConstZeroes": 63,
    "numConstOnes": 18,
    "UncondBranches": 9,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 23,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 18,
    "NumBitCastInst": 20,
    "NumBrInst": 17,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 45,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 27,
    "NumSubInst": 4,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 20,
    "TotalInsts": 257,
    "TotalMemInst": 167,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 84
  },
  "baseline_oz_instcount": 132,
  "knowledge_base_entry": [
    "--inferattrs",
    "--newgvn",
    "--dse",
    "--dce",
    "--jump-threading",
    "--loop-instsimplify",
    "--jump-threading",
    "--loop-reroll",
    "--mergefunc",
    "--die",
    "--die",
    "--sroa",
    "--gvn",
    "--die",
    "--sccp",
    "--sroa",
    "--adce",
    "--inline",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--sroa",
    "--reassociate",
    "--die",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--instcombine",
    "--early-cse-memssa",
    "--simplifycfg",
    "--mldst-motion",
    "--gvn",
    "--flattencfg",
    "--instcombine",
    "--load-store-vectorizer",
    "--inline",
    "--simplifycfg",
    "--slp-vectorizer",
    "--inline",
    "--instsimplify",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--die",
    "--dse",
    "--lower-expect",
    "--licm",
    "--globalopt",
    "--sccp",
    "--jump-threading",
    "--bdce",
    "--ipsccp",
    "--dse",
    "--gvn-hoist",
    "--bdce",
    "--dse",
    "--dse",
    "--mergefunc",
    "--reassociate",
    "--dse",
    "--dce",
    "--jump-threading",
    "--loop-instsimplify",
    "--jump-threading",
    "--loop-reroll",
    "--mergefunc",
    "--die",
    "--loop-instsimplify",
    "--ipsccp",
    "--mem2reg",
    "--loop-deletion",
    "--jump-threading",
    "--instsimplify",
    "--inline",
    "--nary-reassociate",
    "--mem2reg",
    "--lower-expect",
    "--dse",
    "--ipsccp",
    "--flattencfg",
    "--adce",
    "--ipsccp",
    "--aggressive-instcombine",
    "--licm",
    "--mldst-motion",
    "--gvn",
    "--flattencfg",
    "--instcombine",
    "--load-store-vectorizer",
    "--inline",
    "--simplifycfg",
    "--slp-vectorizer",
    "--inline",
    "--instsimplify",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--die",
    "--dse",
    "--lower-expect",
    "--licm",
    "--globalopt",
    "--licm",
    "--prune-eh",
    "--sroa",
    "--mergefunc",
    "--slp-vectorizer",
    "--mem2reg",
    "--lower-expect",
    "--loop-instsimplify",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--elim-avail-extern",
          "--globalsplit",
          "--simplifycfg",
          "--gvn",
          "--correlated-propagation",
          "--name-anon-globals",
          "--rpo-functionattrs",
          "--loop-predication",
          "--add-discriminators",
          "--load-store-vectorizer",
          "--speculative-execution",
          "--break-crit-edges",
          "--strip-dead-prototypes",
          "--slp-vectorizer",
          "--alignment-from-assumptions",
          "--loop-unswitch",
          "--instcombine",
          "--loop-unroll-and-jam",
          "--callsite-splitting",
          "--lower-expect",
          "--slsr",
          "--loweratomic",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+12.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--elim-avail-extern",
      "--globalsplit",
      "--simplifycfg",
      "--gvn",
      "--correlated-propagation",
      "--name-anon-globals",
      "--rpo-functionattrs",
      "--loop-predication",
      "--add-discriminators",
      "--load-store-vectorizer",
      "--speculative-execution",
      "--break-crit-edges",
      "--strip-dead-prototypes",
      "--slp-vectorizer",
      "--alignment-from-assumptions",
      "--loop-unswitch",
      "--instcombine",
      "--loop-unroll-and-jam",
      "--callsite-splitting",
      "--lower-expect",
      "--slsr",
      "--loweratomic",
      "--adce"
    ],
    "performance_vs_Oz": "+12.1%"
  }
}