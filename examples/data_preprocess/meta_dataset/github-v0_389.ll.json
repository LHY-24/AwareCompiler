{
  "program_id": "github-v0_389.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 3,
    "oneSuccessor": 10,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 0,
    "CriticalCount": 4,
    "NumEdges": 22,
    "const32Bit": 28,
    "const64Bit": 0,
    "numConstZeroes": 6,
    "numConstOnes": 12,
    "UncondBranches": 10,
    "binaryConstArg": 13,
    "NumAShrInst": 1,
    "NumAddInst": 14,
    "NumAllocaInst": 8,
    "NumAndInst": 1,
    "BlockMid": 4,
    "BlockLow": 13,
    "NumBitCastInst": 0,
    "NumBrInst": 16,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 6,
    "NumLShrInst": 4,
    "NumLoadInst": 60,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 20,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 17,
    "TotalInsts": 171,
    "TotalMemInst": 105,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 88
  },
  "baseline_oz_instcount": 172,
  "knowledge_base_entry": [
    "--inferattrs",
    "--dse",
    "--instsimplify",
    "--sccp",
    "--elim-avail-extern",
    "--sccp",
    "--simplifycfg",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instcombine",
          "--gvn-hoist",
          "--early-cse-memssa",
          "--strip-dead-prototypes",
          "--lower-expect",
          "--deadargelim",
          "--loop-unroll-and-jam",
          "--reassociate",
          "--strip-debug-declare",
          "--speculative-execution",
          "--globalsplit",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instcombine",
      "--gvn-hoist",
      "--early-cse-memssa",
      "--strip-dead-prototypes",
      "--lower-expect",
      "--deadargelim",
      "--loop-unroll-and-jam",
      "--reassociate",
      "--strip-debug-declare",
      "--speculative-execution",
      "--globalsplit",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}