{
  "program_id": "github-v0_25108.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 37,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 11,
    "oneSuccessor": 31,
    "twoPred": 16,
    "twoPredOneSuc": 6,
    "twoEach": 5,
    "twoSuccessor": 22,
    "morePreds": 2,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 61,
    "BeginPhi": 6,
    "BranchCount": 53,
    "returnInt": 5,
    "CriticalCount": 11,
    "NumEdges": 75,
    "const32Bit": 197,
    "const64Bit": 24,
    "numConstZeroes": 87,
    "numConstOnes": 77,
    "UncondBranches": 31,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 51,
    "NumAndInst": 5,
    "BlockMid": 14,
    "BlockLow": 53,
    "NumBitCastInst": 33,
    "NumBrInst": 53,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 71,
    "NumICmpInst": 25,
    "NumLShrInst": 2,
    "NumLoadInst": 205,
    "NumMulInst": 8,
    "NumOrInst": 0,
    "NumPHIInst": 6,
    "NumRetInst": 10,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 77,
    "NumSubInst": 5,
    "NumTruncInst": 3,
    "NumXorInst": 5,
    "NumZExtInst": 13,
    "TotalBlocks": 67,
    "TotalInsts": 621,
    "TotalMemInst": 425,
    "TotalFuncs": 17,
    "ArgsPhi": 12,
    "testUnary": 316
  },
  "baseline_oz_instcount": 617,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--licm",
    "--ipsccp",
    "--loop-deletion",
    "--early-cse-memssa",
    "--jump-threading",
    "--lower-expect",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--indvars",
          "--nary-reassociate",
          "--name-anon-globals",
          "--lower-widenable-condition",
          "--sroa",
          "--lower-expect",
          "--irce",
          "--aggressive-instcombine",
          "--alignment-from-assumptions",
          "--correlated-propagation",
          "-loop-reduce",
          "--forceattrs",
          "--lower-matrix-intrinsics",
          "--lower-guard-intrinsic",
          "--ipsccp",
          "--load-store-vectorizer",
          "--barrier",
          "--instsimplify",
          "--consthoist",
          "--speculative-execution",
          "--partially-inline-libcalls",
          "--libcalls-shrinkwrap",
          "--loop-load-elim",
          "--instnamer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--indvars",
      "--nary-reassociate",
      "--name-anon-globals",
      "--lower-widenable-condition",
      "--sroa",
      "--lower-expect",
      "--irce",
      "--aggressive-instcombine",
      "--alignment-from-assumptions",
      "--correlated-propagation",
      "-loop-reduce",
      "--forceattrs",
      "--lower-matrix-intrinsics",
      "--lower-guard-intrinsic",
      "--ipsccp",
      "--load-store-vectorizer",
      "--barrier",
      "--instsimplify",
      "--consthoist",
      "--speculative-execution",
      "--partially-inline-libcalls",
      "--libcalls-shrinkwrap",
      "--loop-load-elim",
      "--instnamer"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}