{
  "program_id": "github-v0_19399.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 84,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 37,
    "oneSuccessor": 54,
    "twoPred": 20,
    "twoPredOneSuc": 6,
    "twoEach": 11,
    "twoSuccessor": 53,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 109,
    "BeginPhi": 1,
    "BranchCount": 107,
    "returnInt": 80,
    "CriticalCount": 22,
    "NumEdges": 160,
    "const32Bit": 158,
    "const64Bit": 26,
    "numConstZeroes": 89,
    "numConstOnes": 58,
    "UncondBranches": 54,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 39,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 103,
    "NumBitCastInst": 1,
    "NumBrInst": 107,
    "NumCallInst": 129,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 53,
    "NumLShrInst": 0,
    "NumLoadInst": 205,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 63,
    "NumSubInst": 3,
    "NumTruncInst": 16,
    "NumXorInst": 2,
    "NumZExtInst": 18,
    "TotalBlocks": 110,
    "TotalInsts": 686,
    "TotalMemInst": 471,
    "TotalFuncs": 52,
    "ArgsPhi": 2,
    "testUnary": 281
  },
  "baseline_oz_instcount": 686,
  "knowledge_base_entry": [
    "--gvn",
    "--gvn",
    "--licm",
    "--mem2reg",
    "--globalopt",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--flattencfg",
    "--newgvn",
    "--jump-threading",
    "--ipsccp",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--indvars",
    "--slsr",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--deadargelim",
          "--loop-simplifycfg",
          "--loop-fusion",
          "--loop-reroll",
          "--separate-const-offset-from-gep",
          "--loop-rotate",
          "--load-store-vectorizer",
          "--strip-debug-declare",
          "--slp-vectorizer",
          "--mldst-motion",
          "--simple-loop-unswitch",
          "--loop-data-prefetch",
          "--guard-widening",
          "--indvars",
          "--loop-unswitch",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--deadargelim",
      "--loop-simplifycfg",
      "--loop-fusion",
      "--loop-reroll",
      "--separate-const-offset-from-gep",
      "--loop-rotate",
      "--load-store-vectorizer",
      "--strip-debug-declare",
      "--slp-vectorizer",
      "--mldst-motion",
      "--simple-loop-unswitch",
      "--loop-data-prefetch",
      "--guard-widening",
      "--indvars",
      "--loop-unswitch",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}