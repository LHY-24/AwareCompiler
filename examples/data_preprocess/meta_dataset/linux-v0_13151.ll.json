{
  "program_id": "linux-v0_13151.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 0,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 5,
    "CriticalCount": 0,
    "NumEdges": 16,
    "const32Bit": 23,
    "const64Bit": 0,
    "numConstZeroes": 0,
    "numConstOnes": 15,
    "UncondBranches": 8,
    "binaryConstArg": 4,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 15,
    "NumAndInst": 2,
    "BlockMid": 0,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 12,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 21,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 19,
    "TotalInsts": 101,
    "TotalMemInst": 62,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 47
  },
  "baseline_oz_instcount": 101,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--early-cse",
    "--loop-deletion",
    "--instcombine",
    "--aggressive-instcombine",
    "--newgvn",
    "--inline",
    "--elim-avail-extern",
    "--lower-expect",
    "--ipsccp",
    "--instsimplify",
    "--loop-simplifycfg",
    "--sccp",
    "--early-cse-memssa",
    "--memcpyopt",
    "--inline",
    "--early-cse",
    "--mergefunc",
    "--jump-threading",
    "--ipsccp",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--instcombine",
    "--licm",
    "--inline",
    "--aggressive-instcombine",
    "--loweratomic",
    "--globalopt",
    "--early-cse",
    "--loop-instsimplify",
    "--reassociate",
    "--die",
    "--jump-threading",
    "--ipsccp",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--mergefunc",
    "--mergefunc",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--reassociate",
    "--slsr",
    "--loop-simplifycfg",
    "--slsr",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--reassociate",
    "--reassociate",
    "--lower-expect",
    "--early-cse-memssa",
    "--ipsccp",
    "--mem2reg",
    "--early-cse",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--instcombine",
    "--early-cse-memssa",
    "--mergefunc",
    "--gvn-hoist",
    "--ipsccp",
    "--simplifycfg",
    "--elim-avail-extern",
    "--lower-expect",
    "--ipsccp",
    "--instsimplify",
    "--reassociate",
    "--instsimplify",
    "--gvn",
    "--memcpyopt",
    "--inline",
    "--flattencfg",
    "--aggressive-instcombine",
    "--sroa",
    "--adce",
    "--early-cse-memssa",
    "--memcpyopt",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--mergefunc",
    "--flattencfg",
    "--simplifycfg",
    "--elim-avail-extern",
    "--lower-expect",
    "--ipsccp",
    "--instsimplify",
    "--reassociate",
    "--instsimplify",
    "--gvn",
    "--memcpyopt",
    "--inline",
    "--flattencfg",
    "--aggressive-instcombine",
    "--sroa",
    "--dse",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--mergefunc",
    "--flattencfg",
    "--simplifycfg",
    "--globalopt",
    "--instcombine",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--mem2reg",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--reassociate",
          "--licm",
          "--rewrite-statepoints-for-gc",
          "--newgvn",
          "--insert-gcov-profiling",
          "--globalsplit",
          "--aggressive-instcombine",
          "--canonicalize-aliases",
          "--partial-inliner",
          "--alignment-from-assumptions",
          "--loop-versioning-licm",
          "--separate-const-offset-from-gep",
          "--consthoist",
          "--dce",
          "--inferattrs",
          "--loop-vectorize",
          "--mergefunc",
          "--loop-unroll-and-jam",
          "--loop-unroll",
          "--hotcoldsplit",
          "--globalopt",
          "--loop-load-elim",
          "--loop-instsimplify",
          "--instsimplify",
          "--coro-elide",
          "--correlated-propagation",
          "--nary-reassociate",
          "--loop-unswitch",
          "--coro-early",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+35.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--reassociate",
      "--licm",
      "--rewrite-statepoints-for-gc",
      "--newgvn",
      "--insert-gcov-profiling",
      "--globalsplit",
      "--aggressive-instcombine",
      "--canonicalize-aliases",
      "--partial-inliner",
      "--alignment-from-assumptions",
      "--loop-versioning-licm",
      "--separate-const-offset-from-gep",
      "--consthoist",
      "--dce",
      "--inferattrs",
      "--loop-vectorize",
      "--mergefunc",
      "--loop-unroll-and-jam",
      "--loop-unroll",
      "--hotcoldsplit",
      "--globalopt",
      "--loop-load-elim",
      "--loop-instsimplify",
      "--instsimplify",
      "--coro-elide",
      "--correlated-propagation",
      "--nary-reassociate",
      "--loop-unswitch",
      "--coro-early",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+35.6%"
  }
}