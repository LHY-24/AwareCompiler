{
  "program_id": "github-v0_21047.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 1,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 0,
    "oneSuccessor": 1,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 3,
    "BeginPhi": 1,
    "BranchCount": 3,
    "returnInt": 3,
    "CriticalCount": 3,
    "NumEdges": 5,
    "const32Bit": 10,
    "const64Bit": 6,
    "numConstZeroes": 7,
    "numConstOnes": 2,
    "UncondBranches": 1,
    "binaryConstArg": 9,
    "NumAShrInst": 1,
    "NumAddInst": 4,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 3,
    "NumBitCastInst": 0,
    "NumBrInst": 3,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 1,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 0,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 4,
    "TotalInsts": 59,
    "TotalMemInst": 20,
    "TotalFuncs": 6,
    "ArgsPhi": 4,
    "testUnary": 12
  },
  "baseline_oz_instcount": 59,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--licm",
    "--sroa",
    "--early-cse",
    "--slsr",
    "--slp-vectorizer",
    "-loop-reduce",
    "--slsr",
    "--indvars",
    "--loop-fusion",
    "--newgvn",
    "--aggressive-instcombine",
    "--instsimplify",
    "--nary-reassociate",
    "--indvars",
    "--slsr",
    "-loop-reduce",
    "--indvars",
    "-loop-reduce",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--jump-threading",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--redundant-dbg-inst-elim",
          "--attributor",
          "--rpo-functionattrs",
          "--loweratomic",
          "--slp-vectorizer",
          "--mldst-motion",
          "--slsr",
          "--gvn",
          "--infer-address-spaces",
          "--globalsplit",
          "--globaldce",
          "--prune-eh",
          "--partially-inline-libcalls",
          "--loop-distribute",
          "--strip-debug-declare",
          "--alignment-from-assumptions",
          "--coro-early",
          "--constmerge",
          "--pgo-memop-opt",
          "--callsite-splitting",
          "--deadargelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+13.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--redundant-dbg-inst-elim",
      "--attributor",
      "--rpo-functionattrs",
      "--loweratomic",
      "--slp-vectorizer",
      "--mldst-motion",
      "--slsr",
      "--gvn",
      "--infer-address-spaces",
      "--globalsplit",
      "--globaldce",
      "--prune-eh",
      "--partially-inline-libcalls",
      "--loop-distribute",
      "--strip-debug-declare",
      "--alignment-from-assumptions",
      "--coro-early",
      "--constmerge",
      "--pgo-memop-opt",
      "--callsite-splitting",
      "--deadargelim"
    ],
    "performance_vs_Oz": "+13.6%"
  }
}