{
  "program_id": "linux-v0_11462.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 68,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 20,
    "oneSuccessor": 62,
    "twoPred": 31,
    "twoPredOneSuc": 14,
    "twoEach": 13,
    "twoSuccessor": 42,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 119,
    "BeginPhi": 0,
    "BranchCount": 104,
    "returnInt": 14,
    "CriticalCount": 20,
    "NumEdges": 146,
    "const32Bit": 341,
    "const64Bit": 34,
    "numConstZeroes": 162,
    "numConstOnes": 111,
    "UncondBranches": 62,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 71,
    "NumAndInst": 2,
    "BlockMid": 16,
    "BlockLow": 103,
    "NumBitCastInst": 16,
    "NumBrInst": 104,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 122,
    "NumICmpInst": 45,
    "NumLShrInst": 0,
    "NumLoadInst": 274,
    "NumMulInst": 4,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 125,
    "NumSubInst": 3,
    "NumTruncInst": 14,
    "NumXorInst": 4,
    "NumZExtInst": 5,
    "TotalBlocks": 119,
    "TotalInsts": 881,
    "TotalMemInst": 630,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 406
  },
  "baseline_oz_instcount": 884,
  "knowledge_base_entry": [
    "--dse",
    "--globalopt",
    "--jump-threading",
    "--adce",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--ipsccp",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--redundant-dbg-inst-elim",
          "--strip-debug-declare",
          "--consthoist",
          "--lower-constant-intrinsics",
          "--lowerinvoke",
          "--always-inline",
          "--die",
          "--speculative-execution",
          "--loweratomic",
          "--inferattrs",
          "--ipconstprop",
          "--libcalls-shrinkwrap",
          "--gvn",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--redundant-dbg-inst-elim",
      "--strip-debug-declare",
      "--consthoist",
      "--lower-constant-intrinsics",
      "--lowerinvoke",
      "--always-inline",
      "--die",
      "--speculative-execution",
      "--loweratomic",
      "--inferattrs",
      "--ipconstprop",
      "--libcalls-shrinkwrap",
      "--gvn",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}