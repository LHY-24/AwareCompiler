{
  "program_id": "linux-v0_13074.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 0,
    "oneSuccessor": 14,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 3,
    "CriticalCount": 4,
    "NumEdges": 24,
    "const32Bit": 103,
    "const64Bit": 26,
    "numConstZeroes": 67,
    "numConstOnes": 40,
    "UncondBranches": 14,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 24,
    "NumAndInst": 2,
    "BlockMid": 7,
    "BlockLow": 20,
    "NumBitCastInst": 7,
    "NumBrInst": 19,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 58,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 16,
    "NumZExtInst": 9,
    "TotalBlocks": 27,
    "TotalInsts": 261,
    "TotalMemInst": 168,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 107
  },
  "baseline_oz_instcount": 261,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--dce",
    "--aggressive-instcombine",
    "--early-cse",
    "--slsr",
    "--instcombine",
    "--bdce",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--ipsccp",
    "--newgvn",
    "--flattencfg",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--sroa",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--jump-threading",
          "--loweratomic",
          "--irce",
          "--globalopt",
          "--gvn-hoist",
          "--loop-reroll",
          "--callsite-splitting",
          "--post-inline-ee-instrument",
          "--rewrite-statepoints-for-gc",
          "--gvn",
          "--ipconstprop",
          "--strip-nondebug",
          "--instnamer",
          "--redundant-dbg-inst-elim",
          "--scalarizer",
          "--lower-guard-intrinsic",
          "--simplifycfg",
          "--libcalls-shrinkwrap",
          "--constmerge",
          "--ipsccp",
          "--loop-deletion",
          "--mergefunc",
          "--mldst-motion",
          "--flattencfg",
          "--strip-dead-prototypes",
          "--globaldce",
          "--loop-vectorize",
          "--loop-versioning",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--jump-threading",
      "--loweratomic",
      "--irce",
      "--globalopt",
      "--gvn-hoist",
      "--loop-reroll",
      "--callsite-splitting",
      "--post-inline-ee-instrument",
      "--rewrite-statepoints-for-gc",
      "--gvn",
      "--ipconstprop",
      "--strip-nondebug",
      "--instnamer",
      "--redundant-dbg-inst-elim",
      "--scalarizer",
      "--lower-guard-intrinsic",
      "--simplifycfg",
      "--libcalls-shrinkwrap",
      "--constmerge",
      "--ipsccp",
      "--loop-deletion",
      "--mergefunc",
      "--mldst-motion",
      "--flattencfg",
      "--strip-dead-prototypes",
      "--globaldce",
      "--loop-vectorize",
      "--loop-versioning",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}