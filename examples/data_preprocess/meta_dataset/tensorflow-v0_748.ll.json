{
  "program_id": "tensorflow-v0_748.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 6,
    "onePred": 27,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 9,
    "oneSuccessor": 21,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 19,
    "morePreds": 4,
    "BB03Phi": 8,
    "BBHiPhi": 0,
    "BBNoPhi": 35,
    "BeginPhi": 8,
    "BranchCount": 40,
    "returnInt": 0,
    "CriticalCount": 11,
    "NumEdges": 59,
    "const32Bit": 34,
    "const64Bit": 51,
    "numConstZeroes": 55,
    "numConstOnes": 21,
    "UncondBranches": 21,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 0,
    "NumAndInst": 4,
    "BlockMid": 0,
    "BlockLow": 43,
    "NumBitCastInst": 4,
    "NumBrInst": 40,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 19,
    "NumLShrInst": 3,
    "NumLoadInst": 13,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 14,
    "NumRetInst": 3,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 43,
    "TotalInsts": 175,
    "TotalMemInst": 65,
    "TotalFuncs": 6,
    "ArgsPhi": 34,
    "testUnary": 26
  },
  "baseline_oz_instcount": 166,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--simplifycfg",
    "--instcombine",
    "--dse",
    "--nary-reassociate",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--sccp",
    "--simplifycfg",
    "--slp-vectorizer",
    "--gvn",
    "--inline",
    "--mergefunc",
    "--aggressive-instcombine",
    "--die",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--licm",
    "--mem2reg",
    "--gvn",
    "--loop-deletion",
    "--sccp",
    "--early-cse",
    "--simplifycfg",
    "--instcombine",
    "--mergefunc",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--simplifycfg",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--licm",
    "--mem2reg",
    "--gvn",
    "--loop-deletion",
    "--sccp",
    "--early-cse",
    "--simplifycfg",
    "--instcombine",
    "--dse",
    "--nary-reassociate",
    "--gvn-hoist",
    "--newgvn",
    "--newgvn",
    "--ipsccp",
    "--gvn-hoist",
    "--sccp",
    "--inline",
    "--mergefunc",
    "--aggressive-instcombine",
    "--die",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--licm",
    "--mem2reg",
    "--gvn",
    "--loop-deletion",
    "--sccp",
    "--early-cse",
    "--simplifycfg",
    "--instcombine",
    "--dse",
    "--nary-reassociate",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--sccp",
    "--simplifycfg",
    "--slp-vectorizer",
    "--gvn",
    "--indvars",
    "--loop-fusion",
    "--instcombine",
    "--mergefunc",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--simplifycfg",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--licm",
    "--mem2reg",
    "--gvn",
    "--loop-deletion",
    "--sccp",
    "--early-cse",
    "--simplifycfg",
    "--instcombine",
    "--dse",
    "--nary-reassociate",
    "--gvn-hoist",
    "--die",
    "--early-cse",
    "--mergefunc",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--reassociate",
    "--slsr",
    "--early-cse",
    "--adce",
    "--reassociate",
    "--gvn-hoist",
    "--instcombine",
    "--loop-simplifycfg",
    "--ipsccp",
    "--newgvn",
    "--die",
    "--newgvn",
    "--flattencfg",
    "--aggressive-instcombine",
    "--dce",
    "--newgvn",
    "--ipsccp",
    "--mergefunc",
    "--jump-threading",
    "--early-cse-memssa",
    "--mldst-motion",
    "--slp-vectorizer",
    "--mergefunc",
    "--reassociate",
    "--gvn-hoist",
    "--die",
    "--early-cse",
    "--mergefunc",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--simplifycfg",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--licm",
    "--mem2reg",
    "--gvn",
    "--loop-deletion",
    "--sccp",
    "--early-cse",
    "--simplifycfg",
    "--instcombine",
    "--dse",
    "--nary-reassociate",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--strip-dead-prototypes",
          "--break-crit-edges",
          "--loop-versioning-licm",
          "--loop-unroll-and-jam",
          "--mergeicmps",
          "--gvn",
          "--scalarizer",
          "--loop-fusion",
          "--coro-early",
          "--loop-rotate",
          "--gvn-hoist",
          "--mldst-motion",
          "--newgvn",
          "--die",
          "--tailcallelim",
          "--mergefunc",
          "--partially-inline-libcalls",
          "--simplifycfg",
          "--constmerge",
          "--coro-elide",
          "--load-store-vectorizer",
          "--lower-expect",
          "--inferattrs",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+16.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--strip-dead-prototypes",
      "--break-crit-edges",
      "--loop-versioning-licm",
      "--loop-unroll-and-jam",
      "--mergeicmps",
      "--gvn",
      "--scalarizer",
      "--loop-fusion",
      "--coro-early",
      "--loop-rotate",
      "--gvn-hoist",
      "--mldst-motion",
      "--newgvn",
      "--die",
      "--tailcallelim",
      "--mergefunc",
      "--partially-inline-libcalls",
      "--simplifycfg",
      "--constmerge",
      "--coro-elide",
      "--load-store-vectorizer",
      "--lower-expect",
      "--inferattrs",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+16.3%"
  }
}