{
  "program_id": "linux-v0_5916.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 4,
    "oneSuccessor": 23,
    "twoPred": 10,
    "twoPredOneSuc": 7,
    "twoEach": 1,
    "twoSuccessor": 8,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 35,
    "BeginPhi": 0,
    "BranchCount": 31,
    "returnInt": 0,
    "CriticalCount": 11,
    "NumEdges": 54,
    "const32Bit": 109,
    "const64Bit": 10,
    "numConstZeroes": 57,
    "numConstOnes": 23,
    "UncondBranches": 23,
    "binaryConstArg": 10,
    "NumAShrInst": 1,
    "NumAddInst": 6,
    "NumAllocaInst": 12,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 31,
    "NumBitCastInst": 0,
    "NumBrInst": 31,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 76,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 49,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 15,
    "TotalBlocks": 35,
    "TotalInsts": 250,
    "TotalMemInst": 178,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 106
  },
  "baseline_oz_instcount": 250,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--instsimplify",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--gvn",
    "--slsr",
    "--jump-threading",
    "--sroa",
    "-loop-reduce",
    "--simplifycfg",
    "--die",
    "--ipsccp",
    "--flattencfg",
    "--newgvn",
    "--sccp",
    "--simplifycfg",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--deadargelim",
          "--coro-cleanup",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--guard-widening",
          "--partially-inline-libcalls",
          "--instsimplify",
          "--functionattrs",
          "--pgo-memop-opt",
          "--correlated-propagation",
          "--elim-avail-extern",
          "--sink",
          "--loop-simplify",
          "--loop-versioning",
          "--loop-sink",
          "--jump-threading",
          "--loop-data-prefetch",
          "--loop-versioning-licm",
          "--rpo-functionattrs",
          "--early-cse",
          "--loop-instsimplify",
          "--loop-unswitch",
          "--slsr",
          "-loop-reduce",
          "--instcombine",
          "--slp-vectorizer",
          "--dce",
          "--attributor",
          "--mem2reg",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--deadargelim",
      "--coro-cleanup",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--guard-widening",
      "--partially-inline-libcalls",
      "--instsimplify",
      "--functionattrs",
      "--pgo-memop-opt",
      "--correlated-propagation",
      "--elim-avail-extern",
      "--sink",
      "--loop-simplify",
      "--loop-versioning",
      "--loop-sink",
      "--jump-threading",
      "--loop-data-prefetch",
      "--loop-versioning-licm",
      "--rpo-functionattrs",
      "--early-cse",
      "--loop-instsimplify",
      "--loop-unswitch",
      "--slsr",
      "-loop-reduce",
      "--instcombine",
      "--slp-vectorizer",
      "--dce",
      "--attributor",
      "--mem2reg",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}