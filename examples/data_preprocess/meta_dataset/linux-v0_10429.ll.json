{
  "program_id": "linux-v0_10429.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 20,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 4,
    "oneSuccessor": 19,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 35,
    "BeginPhi": 1,
    "BranchCount": 24,
    "returnInt": 13,
    "CriticalCount": 0,
    "NumEdges": 29,
    "const32Bit": 78,
    "const64Bit": 6,
    "numConstZeroes": 25,
    "numConstOnes": 46,
    "UncondBranches": 19,
    "binaryConstArg": 8,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 45,
    "NumAndInst": 2,
    "BlockMid": 7,
    "BlockLow": 29,
    "NumBitCastInst": 10,
    "NumBrInst": 24,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 62,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 1,
    "NumRetInst": 12,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 53,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 36,
    "TotalInsts": 266,
    "TotalMemInst": 188,
    "TotalFuncs": 18,
    "ArgsPhi": 2,
    "testUnary": 134
  },
  "baseline_oz_instcount": 266,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--dce",
    "--jump-threading",
    "--simplifycfg",
    "--gvn",
    "--reassociate",
    "--adce",
    "--inline",
    "--mergefunc",
    "--newgvn",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--simplifycfg",
    "--ipsccp",
    "--correlated-propagation",
    "--nary-reassociate",
    "--sroa",
    "--loop-simplifycfg",
    "--prune-eh",
    "--lower-expect",
    "--aggressive-instcombine",
    "--gvn",
    "--aggressive-instcombine",
    "--dce",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--loop-predication",
          "--loop-simplify",
          "--lowerinvoke",
          "--loop-deletion",
          "--loop-instsimplify",
          "--slp-vectorizer",
          "--loop-load-elim",
          "--functionattrs",
          "--float2int",
          "--instsimplify",
          "--reassociate",
          "--inferattrs",
          "--instcombine",
          "--canonicalize-aliases",
          "--inline",
          "--gvn",
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--lower-matrix-intrinsics",
          "--sroa",
          "--loop-versioning-licm",
          "--loop-simplifycfg",
          "--pgo-memop-opt",
          "--constmerge",
          "--infer-address-spaces",
          "--simplifycfg",
          "--loweratomic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--loop-predication",
      "--loop-simplify",
      "--lowerinvoke",
      "--loop-deletion",
      "--loop-instsimplify",
      "--slp-vectorizer",
      "--loop-load-elim",
      "--functionattrs",
      "--float2int",
      "--instsimplify",
      "--reassociate",
      "--inferattrs",
      "--instcombine",
      "--canonicalize-aliases",
      "--inline",
      "--gvn",
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--lower-matrix-intrinsics",
      "--sroa",
      "--loop-versioning-licm",
      "--loop-simplifycfg",
      "--pgo-memop-opt",
      "--constmerge",
      "--infer-address-spaces",
      "--simplifycfg",
      "--loweratomic"
    ],
    "performance_vs_Oz": "+2.3%"
  }
}