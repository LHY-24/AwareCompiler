{
  "program_id": "tensorflow-v0_79.ll",
  "autophase_features": {
    "BBNumArgsHi": 4,
    "BBNumArgsLo": 14,
    "onePred": 51,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 16,
    "oneSuccessor": 40,
    "twoPred": 28,
    "twoPredOneSuc": 5,
    "twoEach": 21,
    "twoSuccessor": 44,
    "morePreds": 6,
    "BB03Phi": 17,
    "BBHiPhi": 1,
    "BBNoPhi": 84,
    "BeginPhi": 18,
    "BranchCount": 84,
    "returnInt": 4,
    "CriticalCount": 37,
    "NumEdges": 128,
    "const32Bit": 196,
    "const64Bit": 162,
    "numConstZeroes": 250,
    "numConstOnes": 80,
    "UncondBranches": 40,
    "binaryConstArg": 36,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 14,
    "NumAndInst": 19,
    "BlockMid": 8,
    "BlockLow": 94,
    "NumBitCastInst": 62,
    "NumBrInst": 84,
    "NumCallInst": 91,
    "NumGetElementPtrInst": 88,
    "NumICmpInst": 49,
    "NumLShrInst": 6,
    "NumLoadInst": 78,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 30,
    "NumRetInst": 17,
    "NumSExtInst": 1,
    "NumSelectInst": 12,
    "NumShlInst": 3,
    "NumStoreInst": 38,
    "NumSubInst": 6,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 8,
    "TotalBlocks": 102,
    "TotalInsts": 631,
    "TotalMemInst": 309,
    "TotalFuncs": 47,
    "ArgsPhi": 66,
    "testUnary": 178
  },
  "baseline_oz_instcount": 626,
  "knowledge_base_entry": [
    "--lower-expect",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--early-cse",
    "--licm",
    "--adce",
    "--inline",
    "--aggressive-instcombine",
    "--newgvn",
    "--memcpyopt",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--die",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--sroa",
    "--reassociate",
    "--newgvn",
    "--loop-rotate",
    "--dse",
    "--reassociate",
    "--mergefunc",
    "--dce",
    "--mem2reg",
    "--instsimplify",
    "--dse",
    "--adce",
    "--jump-threading",
    "--die",
    "--aggressive-instcombine",
    "--inline",
    "--early-cse-memssa",
    "--lower-expect",
    "--simplifycfg",
    "--instsimplify",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerswitch",
          "--loop-deletion",
          "--mergefunc",
          "--sccp",
          "--always-inline",
          "--loop-fusion",
          "--loop-idiom",
          "--loop-unroll",
          "--loop-versioning-licm",
          "--infer-address-spaces",
          "--jump-threading",
          "--inject-tli-mappings",
          "--instcombine",
          "--canonicalize-aliases",
          "--elim-avail-extern",
          "--insert-gcov-profiling",
          "--coro-cleanup",
          "--deadargelim",
          "--strip-debug-declare",
          "--scalarizer",
          "--mergereturn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerswitch",
      "--loop-deletion",
      "--mergefunc",
      "--sccp",
      "--always-inline",
      "--loop-fusion",
      "--loop-idiom",
      "--loop-unroll",
      "--loop-versioning-licm",
      "--infer-address-spaces",
      "--jump-threading",
      "--inject-tli-mappings",
      "--instcombine",
      "--canonicalize-aliases",
      "--elim-avail-extern",
      "--insert-gcov-profiling",
      "--coro-cleanup",
      "--deadargelim",
      "--strip-debug-declare",
      "--scalarizer",
      "--mergereturn"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}