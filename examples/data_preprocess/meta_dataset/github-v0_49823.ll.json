{
  "program_id": "github-v0_49823.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 8,
    "onePred": 14,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 18,
    "twoPredOneSuc": 1,
    "twoEach": 15,
    "twoSuccessor": 20,
    "morePreds": 1,
    "BB03Phi": 9,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 9,
    "BranchCount": 33,
    "returnInt": 45,
    "CriticalCount": 26,
    "NumEdges": 53,
    "const32Bit": 96,
    "const64Bit": 65,
    "numConstZeroes": 73,
    "numConstOnes": 38,
    "UncondBranches": 13,
    "binaryConstArg": 44,
    "NumAShrInst": 6,
    "NumAddInst": 93,
    "NumAllocaInst": 0,
    "NumAndInst": 5,
    "BlockMid": 13,
    "BlockLow": 23,
    "NumBitCastInst": 0,
    "NumBrInst": 33,
    "NumCallInst": 88,
    "NumGetElementPtrInst": 67,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 52,
    "NumMulInst": 36,
    "NumOrInst": 0,
    "NumPHIInst": 12,
    "NumRetInst": 3,
    "NumSExtInst": 46,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 25,
    "NumSubInst": 6,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 36,
    "TotalInsts": 611,
    "TotalMemInst": 232,
    "TotalFuncs": 16,
    "ArgsPhi": 25,
    "testUnary": 117
  },
  "baseline_oz_instcount": 627,
  "knowledge_base_entry": [
    "--globalopt",
    "--aggressive-instcombine",
    "--jump-threading",
    "--aggressive-instcombine",
    "--sroa",
    "--globalopt",
    "--early-cse-memssa",
    "--gvn",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--lower-expect",
    "--sroa",
    "--ipsccp",
    "--jump-threading",
    "--load-store-vectorizer",
    "--die",
    "--early-cse",
    "--loop-simplifycfg",
    "--mergefunc",
    "--bdce",
    "--sroa",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--instsimplify",
    "--lower-expect",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--dse",
    "--mergefunc",
    "--gvn-hoist",
    "--simplifycfg",
    "--adce",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--lower-matrix-intrinsics",
          "--constprop",
          "--sroa",
          "--adce",
          "--globalsplit",
          "--barrier",
          "--loop-guard-widening",
          "--loop-vectorize",
          "--prune-eh",
          "--strip-debug-declare",
          "--ipsccp",
          "--deadargelim",
          "--inferattrs",
          "--loop-simplify",
          "--forceattrs",
          "--simplifycfg",
          "--lower-constant-intrinsics",
          "--jump-threading",
          "--lowerinvoke",
          "--sink",
          "--name-anon-globals",
          "--mergeicmps",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--lower-matrix-intrinsics",
      "--constprop",
      "--sroa",
      "--adce",
      "--globalsplit",
      "--barrier",
      "--loop-guard-widening",
      "--loop-vectorize",
      "--prune-eh",
      "--strip-debug-declare",
      "--ipsccp",
      "--deadargelim",
      "--inferattrs",
      "--loop-simplify",
      "--forceattrs",
      "--simplifycfg",
      "--lower-constant-intrinsics",
      "--jump-threading",
      "--lowerinvoke",
      "--sink",
      "--name-anon-globals",
      "--mergeicmps",
      "--float2int"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}