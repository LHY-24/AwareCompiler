{
  "program_id": "linux-v0_12378.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 59,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 20,
    "oneSuccessor": 43,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 33,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 102,
    "BeginPhi": 0,
    "BranchCount": 76,
    "returnInt": 27,
    "CriticalCount": 15,
    "NumEdges": 109,
    "const32Bit": 201,
    "const64Bit": 22,
    "numConstZeroes": 71,
    "numConstOnes": 103,
    "UncondBranches": 43,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 92,
    "NumAndInst": 3,
    "BlockMid": 12,
    "BlockLow": 90,
    "NumBitCastInst": 10,
    "NumBrInst": 76,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 39,
    "NumICmpInst": 33,
    "NumLShrInst": 0,
    "NumLoadInst": 166,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 26,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 109,
    "NumSubInst": 0,
    "NumTruncInst": 22,
    "NumXorInst": 4,
    "NumZExtInst": 15,
    "TotalBlocks": 102,
    "TotalInsts": 672,
    "TotalMemInst": 456,
    "TotalFuncs": 36,
    "ArgsPhi": 0,
    "testUnary": 328
  },
  "baseline_oz_instcount": 673,
  "knowledge_base_entry": [
    "--ipsccp",
    "--mergefunc",
    "--globalopt",
    "--aggressive-instcombine",
    "--prune-eh",
    "--instsimplify",
    "--gvn-hoist",
    "--mergefunc",
    "--elim-avail-extern",
    "--inline",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--scalarizer",
          "--prune-eh",
          "--separate-const-offset-from-gep",
          "--globalsplit",
          "--bdce",
          "--loop-simplify",
          "--loop-simplifycfg",
          "--early-cse-memssa",
          "--loweratomic",
          "--alignment-from-assumptions",
          "--constmerge",
          "--lcssa",
          "--lower-constant-intrinsics",
          "--loop-sink",
          "--constprop",
          "--mergefunc",
          "--loop-guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--scalarizer",
      "--prune-eh",
      "--separate-const-offset-from-gep",
      "--globalsplit",
      "--bdce",
      "--loop-simplify",
      "--loop-simplifycfg",
      "--early-cse-memssa",
      "--loweratomic",
      "--alignment-from-assumptions",
      "--constmerge",
      "--lcssa",
      "--lower-constant-intrinsics",
      "--loop-sink",
      "--constprop",
      "--mergefunc",
      "--loop-guard-widening"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}