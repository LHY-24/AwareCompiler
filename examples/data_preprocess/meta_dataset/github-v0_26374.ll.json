{
  "program_id": "github-v0_26374.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 4,
    "returnInt": 10,
    "CriticalCount": 1,
    "NumEdges": 5,
    "const32Bit": 52,
    "const64Bit": 0,
    "numConstZeroes": 10,
    "numConstOnes": 41,
    "UncondBranches": 3,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 31,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 25,
    "NumBitCastInst": 0,
    "NumBrInst": 4,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 18,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 39,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 25,
    "TotalInsts": 158,
    "TotalMemInst": 118,
    "TotalFuncs": 26,
    "ArgsPhi": 0,
    "testUnary": 56
  },
  "baseline_oz_instcount": 158,
  "knowledge_base_entry": [
    "--inferattrs",
    "--instcombine",
    "--licm",
    "--simplifycfg",
    "-loop-reduce",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--mergefunc",
    "--correlated-propagation",
    "--loop-reroll",
    "--loop-fusion",
    "--early-cse",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--dse",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--coro-early",
          "--coro-cleanup",
          "--loop-rotate",
          "--sancov",
          "--deadargelim",
          "--inferattrs",
          "--redundant-dbg-inst-elim",
          "--coro-split",
          "--guard-widening",
          "--loop-data-prefetch",
          "--partially-inline-libcalls",
          "--bdce",
          "--sccp",
          "--simple-loop-unswitch",
          "--mergefunc",
          "--mergeicmps",
          "--cross-dso-cfi",
          "--lowerinvoke",
          "--irce",
          "--simplifycfg",
          "--lower-widenable-condition",
          "--loop-sink",
          "--early-cse",
          "--post-inline-ee-instrument",
          "--licm",
          "--argpromotion",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+29.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--coro-early",
      "--coro-cleanup",
      "--loop-rotate",
      "--sancov",
      "--deadargelim",
      "--inferattrs",
      "--redundant-dbg-inst-elim",
      "--coro-split",
      "--guard-widening",
      "--loop-data-prefetch",
      "--partially-inline-libcalls",
      "--bdce",
      "--sccp",
      "--simple-loop-unswitch",
      "--mergefunc",
      "--mergeicmps",
      "--cross-dso-cfi",
      "--lowerinvoke",
      "--irce",
      "--simplifycfg",
      "--lower-widenable-condition",
      "--loop-sink",
      "--early-cse",
      "--post-inline-ee-instrument",
      "--licm",
      "--argpromotion",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+29.7%"
  }
}