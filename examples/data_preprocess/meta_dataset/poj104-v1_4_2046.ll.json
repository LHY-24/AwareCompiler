{
  "program_id": "poj104-v1_4_2046.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 2,
    "oneSuccessor": 31,
    "twoPred": 11,
    "twoPredOneSuc": 2,
    "twoEach": 9,
    "twoSuccessor": 11,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 0,
    "BranchCount": 42,
    "returnInt": 7,
    "CriticalCount": 0,
    "NumEdges": 53,
    "const32Bit": 31,
    "const64Bit": 25,
    "numConstZeroes": 23,
    "numConstOnes": 20,
    "UncondBranches": 31,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 42,
    "NumBitCastInst": 13,
    "NumBrInst": 42,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 60,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 8,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 45,
    "TotalInsts": 229,
    "TotalMemInst": 126,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 92
  },
  "baseline_oz_instcount": 142,
  "knowledge_base_entry": [
    "--prune-eh",
    "--inline",
    "--gvn-hoist",
    "--adce",
    "--gvn",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--jump-threading",
    "--globalopt",
    "--gvn",
    "--mergefunc",
    "--jump-threading",
    "--loop-reroll",
    "--load-store-vectorizer",
    "--instcombine",
    "--aggressive-instcombine",
    "--gvn",
    "--newgvn",
    "--nary-reassociate",
    "--gvn",
    "--early-cse-memssa",
    "--lower-expect",
    "--loop-instsimplify",
    "--mergefunc",
    "--mergefunc",
    "--newgvn",
    "--sroa",
    "--aggressive-instcombine",
    "--gvn",
    "--newgvn",
    "--nary-reassociate",
    "--gvn",
    "--early-cse-memssa",
    "--lower-expect",
    "--loop-instsimplify",
    "--simplifycfg",
    "--instcombine",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--sccp",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--dce",
    "--sccp",
    "--reassociate",
    "--inline",
    "--sccp",
    "--jump-threading",
    "--slsr",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--dse",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--mergefunc",
    "--mergefunc",
    "--early-cse",
    "--simplifycfg",
    "--instcombine",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--sccp",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--dce",
    "--gvn-hoist",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--correlated-propagation",
    "--newgvn",
    "--loop-deletion",
    "--gvn",
    "--instcombine",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--sccp",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--dce",
    "--sccp",
    "--reassociate",
    "--inline",
    "--sccp",
    "--jump-threading",
    "--slsr",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--dse",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--simplifycfg",
    "--instcombine",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--sccp",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--dce",
    "--sccp",
    "--reassociate",
    "--inline",
    "--sccp",
    "--jump-threading",
    "--slsr",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--dse",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--instsimplify",
    "--globalopt",
    "--licm",
    "--die",
    "--simplifycfg",
    "--sccp",
    "--sroa",
    "--lower-expect",
    "--loop-instsimplify",
    "--simplifycfg",
    "--instcombine",
    "--inline",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--called-value-propagation",
          "--loop-unroll-and-jam",
          "--loop-reroll",
          "--hotcoldsplit",
          "--mergefunc",
          "--loop-distribute",
          "--barrier",
          "--loop-sink",
          "--ipconstprop",
          "--infer-address-spaces",
          "--sroa",
          "--separate-const-offset-from-gep",
          "--instcombine",
          "--rewrite-statepoints-for-gc",
          "--sancov",
          "--functionattrs",
          "--alignment-from-assumptions",
          "--early-cse-memssa",
          "--tailcallelim",
          "--loop-predication",
          "--div-rem-pairs",
          "--name-anon-globals",
          "--dse",
          "--lowerinvoke",
          "--early-cse",
          "--jump-threading"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--called-value-propagation",
      "--loop-unroll-and-jam",
      "--loop-reroll",
      "--hotcoldsplit",
      "--mergefunc",
      "--loop-distribute",
      "--barrier",
      "--loop-sink",
      "--ipconstprop",
      "--infer-address-spaces",
      "--sroa",
      "--separate-const-offset-from-gep",
      "--instcombine",
      "--rewrite-statepoints-for-gc",
      "--sancov",
      "--functionattrs",
      "--alignment-from-assumptions",
      "--early-cse-memssa",
      "--tailcallelim",
      "--loop-predication",
      "--div-rem-pairs",
      "--name-anon-globals",
      "--dse",
      "--lowerinvoke",
      "--early-cse",
      "--jump-threading"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}