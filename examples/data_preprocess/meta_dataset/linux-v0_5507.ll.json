{
  "program_id": "linux-v0_5507.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 10,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 18,
    "const32Bit": 49,
    "const64Bit": 10,
    "numConstZeroes": 8,
    "numConstOnes": 33,
    "UncondBranches": 10,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 27,
    "NumAndInst": 2,
    "BlockMid": 3,
    "BlockLow": 21,
    "NumBitCastInst": 0,
    "NumBrInst": 14,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 4,
    "NumLShrInst": 1,
    "NumLoadInst": 37,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 24,
    "TotalInsts": 170,
    "TotalMemInst": 123,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 77
  },
  "baseline_oz_instcount": 171,
  "knowledge_base_entry": [
    "--inline",
    "--dce",
    "--sroa",
    "--die",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--mergefunc",
    "--dce",
    "--load-store-vectorizer",
    "--instcombine",
    "--early-cse-memssa",
    "--newgvn",
    "--mem2reg",
    "--die",
    "--elim-avail-extern",
    "--prune-eh",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--strip-debug-declare",
          "--ipsccp",
          "--inject-tli-mappings",
          "--float2int",
          "--die",
          "--alignment-from-assumptions",
          "--mergereturn",
          "--inferattrs",
          "--barrier",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--strip-debug-declare",
      "--ipsccp",
      "--inject-tli-mappings",
      "--float2int",
      "--die",
      "--alignment-from-assumptions",
      "--mergereturn",
      "--inferattrs",
      "--barrier",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}