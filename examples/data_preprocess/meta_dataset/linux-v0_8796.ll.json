{
  "program_id": "linux-v0_8796.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 60,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 10,
    "oneSuccessor": 54,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 0,
    "twoSuccessor": 15,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 92,
    "BeginPhi": 0,
    "BranchCount": 69,
    "returnInt": 17,
    "CriticalCount": 2,
    "NumEdges": 93,
    "const32Bit": 228,
    "const64Bit": 15,
    "numConstZeroes": 99,
    "numConstOnes": 102,
    "UncondBranches": 54,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 74,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 83,
    "NumBitCastInst": 28,
    "NumBrInst": 69,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 66,
    "NumICmpInst": 15,
    "NumLShrInst": 2,
    "NumLoadInst": 152,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 103,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 4,
    "NumZExtInst": 5,
    "TotalBlocks": 92,
    "TotalInsts": 610,
    "TotalMemInst": 444,
    "TotalFuncs": 46,
    "ArgsPhi": 0,
    "testUnary": 270
  },
  "baseline_oz_instcount": 608,
  "knowledge_base_entry": [
    "--mem2reg",
    "--elim-avail-extern",
    "--ipsccp",
    "--early-cse",
    "--adce",
    "--sccp",
    "--loop-simplifycfg",
    "--die",
    "--mergefunc",
    "--early-cse-memssa",
    "--gvn",
    "--dse",
    "--slp-vectorizer",
    "--slsr",
    "--instcombine",
    "--ipsccp",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-guard-widening",
          "--infer-address-spaces",
          "--sink",
          "--loop-sink",
          "--inject-tli-mappings",
          "--mergefunc",
          "--simple-loop-unswitch",
          "--canonicalize-aliases",
          "--constprop",
          "--scalarizer",
          "--ee-instrument",
          "--early-cse",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-guard-widening",
      "--infer-address-spaces",
      "--sink",
      "--loop-sink",
      "--inject-tli-mappings",
      "--mergefunc",
      "--simple-loop-unswitch",
      "--canonicalize-aliases",
      "--constprop",
      "--scalarizer",
      "--ee-instrument",
      "--early-cse",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}