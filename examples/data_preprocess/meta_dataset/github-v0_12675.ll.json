{
  "program_id": "github-v0_12675.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 1,
    "oneSuccessor": 14,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 28,
    "const32Bit": 137,
    "const64Bit": 57,
    "numConstZeroes": 105,
    "numConstOnes": 50,
    "UncondBranches": 14,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 18,
    "NumAndInst": 1,
    "BlockMid": 8,
    "BlockLow": 17,
    "NumBitCastInst": 34,
    "NumBrInst": 21,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 133,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 56,
    "NumSubInst": 4,
    "NumTruncInst": 12,
    "NumXorInst": 14,
    "NumZExtInst": 44,
    "TotalBlocks": 25,
    "TotalInsts": 473,
    "TotalMemInst": 307,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 252
  },
  "baseline_oz_instcount": 473,
  "knowledge_base_entry": [
    "--scalarizer",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--newgvn",
    "--loop-deletion",
    "--instcombine",
    "--globalopt",
    "--newgvn",
    "--die",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--sccp",
    "--licm",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll",
          "--loop-unswitch",
          "--loop-versioning",
          "--separate-const-offset-from-gep",
          "--reassociate",
          "--loop-deletion",
          "--div-rem-pairs",
          "--constprop",
          "--slsr",
          "--partially-inline-libcalls",
          "--argpromotion",
          "--libcalls-shrinkwrap",
          "--sink",
          "--die",
          "--aggressive-instcombine",
          "--instsimplify",
          "--loop-interchange",
          "--loop-data-prefetch",
          "--loop-sink",
          "--name-anon-globals",
          "--bdce",
          "--early-cse-memssa",
          "--memcpyopt",
          "--instnamer",
          "--newgvn",
          "--loop-idiom"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll",
      "--loop-unswitch",
      "--loop-versioning",
      "--separate-const-offset-from-gep",
      "--reassociate",
      "--loop-deletion",
      "--div-rem-pairs",
      "--constprop",
      "--slsr",
      "--partially-inline-libcalls",
      "--argpromotion",
      "--libcalls-shrinkwrap",
      "--sink",
      "--die",
      "--aggressive-instcombine",
      "--instsimplify",
      "--loop-interchange",
      "--loop-data-prefetch",
      "--loop-sink",
      "--name-anon-globals",
      "--bdce",
      "--early-cse-memssa",
      "--memcpyopt",
      "--instnamer",
      "--newgvn",
      "--loop-idiom"
    ],
    "performance_vs_Oz": "+5.7%"
  }
}