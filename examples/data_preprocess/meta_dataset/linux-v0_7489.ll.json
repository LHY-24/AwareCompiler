{
  "program_id": "linux-v0_7489.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 22,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 2,
    "oneSuccessor": 22,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 3,
    "BranchCount": 29,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 36,
    "const32Bit": 86,
    "const64Bit": 7,
    "numConstZeroes": 27,
    "numConstOnes": 44,
    "UncondBranches": 22,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 42,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 34,
    "NumBitCastInst": 13,
    "NumBrInst": 29,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 63,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 10,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 52,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 39,
    "TotalInsts": 261,
    "TotalMemInst": 192,
    "TotalFuncs": 16,
    "ArgsPhi": 6,
    "testUnary": 125
  },
  "baseline_oz_instcount": 261,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--newgvn",
    "--aggressive-instcombine",
    "--licm",
    "--loop-instsimplify",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--licm",
    "--loop-instsimplify",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--gvn",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "-loop-reduce",
    "--indvars",
    "--loop-reroll",
    "--instsimplify",
    "--adce",
    "--jump-threading",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--lcssa",
          "--ee-instrument",
          "--loop-versioning",
          "--coro-early",
          "--irce",
          "--loop-predication",
          "--aggressive-instcombine",
          "--partially-inline-libcalls",
          "--licm",
          "--partial-inliner",
          "--hotcoldsplit",
          "--consthoist",
          "--called-value-propagation",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--lcssa",
      "--ee-instrument",
      "--loop-versioning",
      "--coro-early",
      "--irce",
      "--loop-predication",
      "--aggressive-instcombine",
      "--partially-inline-libcalls",
      "--licm",
      "--partial-inliner",
      "--hotcoldsplit",
      "--consthoist",
      "--called-value-propagation",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}