{
  "program_id": "linux-v0_3288.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 19,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 7,
    "oneSuccessor": 17,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 12,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 32,
    "BeginPhi": 1,
    "BranchCount": 29,
    "returnInt": 3,
    "CriticalCount": 7,
    "NumEdges": 41,
    "const32Bit": 124,
    "const64Bit": 4,
    "numConstZeroes": 68,
    "numConstOnes": 38,
    "UncondBranches": 17,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 26,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 28,
    "NumBitCastInst": 5,
    "NumBrInst": 29,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 91,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 43,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 4,
    "TotalBlocks": 33,
    "TotalInsts": 276,
    "TotalMemInst": 213,
    "TotalFuncs": 9,
    "ArgsPhi": 2,
    "testUnary": 127
  },
  "baseline_oz_instcount": 277,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--sroa",
    "--inline",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--dse",
    "--globalopt",
    "--correlated-propagation",
    "--dse",
    "--instsimplify",
    "--inline",
    "--mergefunc",
    "--sroa",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--mergereturn",
          "--nary-reassociate",
          "--barrier",
          "--callsite-splitting",
          "--globalsplit",
          "--guard-widening",
          "--instsimplify",
          "--pgo-memop-opt",
          "--scalarizer",
          "--div-rem-pairs",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--mergereturn",
      "--nary-reassociate",
      "--barrier",
      "--callsite-splitting",
      "--globalsplit",
      "--guard-widening",
      "--instsimplify",
      "--pgo-memop-opt",
      "--scalarizer",
      "--div-rem-pairs",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}