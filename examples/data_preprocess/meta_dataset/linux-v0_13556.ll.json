{
  "program_id": "linux-v0_13556.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 57,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 16,
    "oneSuccessor": 58,
    "twoPred": 26,
    "twoPredOneSuc": 11,
    "twoEach": 4,
    "twoSuccessor": 27,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 104,
    "BeginPhi": 0,
    "BranchCount": 85,
    "returnInt": 33,
    "CriticalCount": 25,
    "NumEdges": 123,
    "const32Bit": 281,
    "const64Bit": 20,
    "numConstZeroes": 89,
    "numConstOnes": 93,
    "UncondBranches": 58,
    "binaryConstArg": 44,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 65,
    "NumAndInst": 16,
    "BlockMid": 13,
    "BlockLow": 91,
    "NumBitCastInst": 10,
    "NumBrInst": 85,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 67,
    "NumICmpInst": 27,
    "NumLShrInst": 0,
    "NumLoadInst": 201,
    "NumMulInst": 7,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 3,
    "NumSelectInst": 1,
    "NumShlInst": 7,
    "NumStoreInst": 95,
    "NumSubInst": 5,
    "NumTruncInst": 12,
    "NumXorInst": 3,
    "NumZExtInst": 29,
    "TotalBlocks": 104,
    "TotalInsts": 720,
    "TotalMemInst": 476,
    "TotalFuncs": 48,
    "ArgsPhi": 0,
    "testUnary": 320
  },
  "baseline_oz_instcount": 716,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--prune-eh",
    "--sroa",
    "--elim-avail-extern",
    "--gvn",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--early-cse",
    "--licm",
    "--lower-expect",
    "--correlated-propagation",
    "--sroa",
    "--aggressive-instcombine",
    "--inline",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--ipsccp",
    "--newgvn",
    "--slp-vectorizer",
    "--sroa",
    "--elim-avail-extern",
    "--gvn",
    "--instcombine",
    "--mergefunc",
    "--early-cse",
    "--dse",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--rpo-functionattrs",
          "--coro-elide",
          "--add-discriminators",
          "--coro-split",
          "--post-inline-ee-instrument",
          "--loop-idiom",
          "--div-rem-pairs",
          "--sroa",
          "--loop-versioning-licm",
          "--loop-predication",
          "--bdce",
          "--lcssa",
          "--mergereturn",
          "--loop-simplify",
          "--argpromotion",
          "--deadargelim",
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--ipsccp",
          "--ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--rpo-functionattrs",
      "--coro-elide",
      "--add-discriminators",
      "--coro-split",
      "--post-inline-ee-instrument",
      "--loop-idiom",
      "--div-rem-pairs",
      "--sroa",
      "--loop-versioning-licm",
      "--loop-predication",
      "--bdce",
      "--lcssa",
      "--mergereturn",
      "--loop-simplify",
      "--argpromotion",
      "--deadargelim",
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--ipsccp",
      "--ee-instrument"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}