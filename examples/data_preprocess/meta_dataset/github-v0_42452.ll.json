{
  "program_id": "github-v0_42452.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 5,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 2,
    "BranchCount": 9,
    "returnInt": 4,
    "CriticalCount": 5,
    "NumEdges": 14,
    "const32Bit": 20,
    "const64Bit": 34,
    "numConstZeroes": 24,
    "numConstOnes": 10,
    "UncondBranches": 4,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 0,
    "NumAndInst": 3,
    "BlockMid": 3,
    "BlockLow": 10,
    "NumBitCastInst": 0,
    "NumBrInst": 9,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 19,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 8,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 13,
    "TotalInsts": 239,
    "TotalMemInst": 74,
    "TotalFuncs": 9,
    "ArgsPhi": 4,
    "testUnary": 26
  },
  "baseline_oz_instcount": 239,
  "knowledge_base_entry": [
    "--sroa",
    "--loop-simplifycfg",
    "--bdce",
    "--sroa",
    "--simplifycfg",
    "--nary-reassociate",
    "--ipsccp",
    "--early-cse-memssa",
    "--early-cse",
    "--instsimplify",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--instsimplify",
    "--globalopt",
    "--correlated-propagation",
    "--gvn",
    "--sccp",
    "--dse",
    "--die",
    "--gvn",
    "--ipsccp",
    "--mergefunc",
    "--flattencfg",
    "--mergefunc",
    "--jump-threading",
    "--dse",
    "--newgvn",
    "--load-store-vectorizer",
    "--dse",
    "--simplifycfg",
    "--ipsccp",
    "--early-cse-memssa",
    "--mem2reg",
    "--loop-deletion",
    "--sroa",
    "--globalopt",
    "--gvn-hoist",
    "--early-cse",
    "--correlated-propagation",
    "--newgvn",
    "--adce",
    "--bdce",
    "--sroa",
    "--simplifycfg",
    "--nary-reassociate",
    "--instcombine",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--tailcallelim",
          "--coro-split",
          "--float2int",
          "--nary-reassociate",
          "--bdce",
          "--ipconstprop",
          "--loop-unroll",
          "--slp-vectorizer",
          "--alignment-from-assumptions",
          "--loop-predication",
          "--loop-simplify",
          "--simple-loop-unswitch",
          "--early-cse",
          "--mergeicmps",
          "--hotcoldsplit",
          "--correlated-propagation",
          "--sancov",
          "--mem2reg",
          "--lower-matrix-intrinsics",
          "--loop-deletion",
          "--simplifycfg",
          "--inferattrs",
          "--consthoist",
          "--coro-cleanup",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--tailcallelim",
      "--coro-split",
      "--float2int",
      "--nary-reassociate",
      "--bdce",
      "--ipconstprop",
      "--loop-unroll",
      "--slp-vectorizer",
      "--alignment-from-assumptions",
      "--loop-predication",
      "--loop-simplify",
      "--simple-loop-unswitch",
      "--early-cse",
      "--mergeicmps",
      "--hotcoldsplit",
      "--correlated-propagation",
      "--sancov",
      "--mem2reg",
      "--lower-matrix-intrinsics",
      "--loop-deletion",
      "--simplifycfg",
      "--inferattrs",
      "--consthoist",
      "--coro-cleanup",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}