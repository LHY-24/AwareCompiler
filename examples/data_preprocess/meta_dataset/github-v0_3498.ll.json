{
  "program_id": "github-v0_3498.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 9,
    "oneSuccessor": 20,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 16,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 0,
    "BranchCount": 36,
    "returnInt": 5,
    "CriticalCount": 6,
    "NumEdges": 52,
    "const32Bit": 42,
    "const64Bit": 11,
    "numConstZeroes": 14,
    "numConstOnes": 24,
    "UncondBranches": 20,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 22,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 41,
    "NumBitCastInst": 2,
    "NumBrInst": 36,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 43,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 33,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 41,
    "TotalInsts": 178,
    "TotalMemInst": 111,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 71
  },
  "baseline_oz_instcount": 179,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--early-cse",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--gvn",
    "--newgvn",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mldst-motion",
          "--rewrite-statepoints-for-gc",
          "--strip",
          "--consthoist",
          "--argpromotion",
          "--lowerswitch",
          "--ee-instrument",
          "--lower-widenable-condition",
          "--hotcoldsplit",
          "--insert-gcov-profiling",
          "--bdce",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mldst-motion",
      "--rewrite-statepoints-for-gc",
      "--strip",
      "--consthoist",
      "--argpromotion",
      "--lowerswitch",
      "--ee-instrument",
      "--lower-widenable-condition",
      "--hotcoldsplit",
      "--insert-gcov-profiling",
      "--bdce",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}