{
  "program_id": "github-v0_682.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 2,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 2,
    "const64Bit": 0,
    "numConstZeroes": 0,
    "numConstOnes": 2,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 2,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 2,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 2,
    "NumLoadInst": 4,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 2,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 2,
    "TotalInsts": 14,
    "TotalMemInst": 8,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 8
  },
  "baseline_oz_instcount": 10,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--dce",
    "--reassociate",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--sroa",
    "--bdce",
    "--newgvn",
    "--mergefunc",
    "--inline",
    "--flattencfg",
    "--aggressive-instcombine",
    "--jump-threading",
    "--mem2reg",
    "--die",
    "--elim-avail-extern",
    "--bdce",
    "--dse",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--inline",
    "--memcpyopt",
    "--early-cse-memssa",
    "--prune-eh",
    "--sroa",
    "--inline",
    "--mem2reg",
    "--loop-instsimplify",
    "--ipsccp",
    "--flattencfg",
    "--simplifycfg",
    "--mergefunc",
    "--adce",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--reassociate",
    "--correlated-propagation",
    "--simplifycfg",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--reassociate",
    "--die",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--early-cse-memssa",
    "--indvars",
    "--simplifycfg",
    "--elim-avail-extern",
    "--ipsccp",
    "--early-cse",
    "--ipsccp",
    "--mem2reg",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--reassociate",
          "--dce",
          "--lcssa",
          "--strip-dead-prototypes",
          "--flattencfg",
          "--load-store-vectorizer",
          "--forceattrs",
          "--alignment-from-assumptions",
          "--hotcoldsplit",
          "--inline",
          "--nary-reassociate",
          "--ipsccp",
          "--lower-expect",
          "--loop-sink",
          "--called-value-propagation",
          "--mergeicmps",
          "--coro-elide",
          "--insert-gcov-profiling",
          "--deadargelim",
          "--lower-constant-intrinsics",
          "--loop-simplifycfg",
          "--break-crit-edges",
          "--lower-widenable-condition",
          "--loop-reroll",
          "--mergefunc",
          "--barrier",
          "--loop-guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+30.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--reassociate",
      "--dce",
      "--lcssa",
      "--strip-dead-prototypes",
      "--flattencfg",
      "--load-store-vectorizer",
      "--forceattrs",
      "--alignment-from-assumptions",
      "--hotcoldsplit",
      "--inline",
      "--nary-reassociate",
      "--ipsccp",
      "--lower-expect",
      "--loop-sink",
      "--called-value-propagation",
      "--mergeicmps",
      "--coro-elide",
      "--insert-gcov-profiling",
      "--deadargelim",
      "--lower-constant-intrinsics",
      "--loop-simplifycfg",
      "--break-crit-edges",
      "--lower-widenable-condition",
      "--loop-reroll",
      "--mergefunc",
      "--barrier",
      "--loop-guard-widening"
    ],
    "performance_vs_Oz": "+30.0%"
  }
}