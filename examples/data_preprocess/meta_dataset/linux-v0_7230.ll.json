{
  "program_id": "linux-v0_7230.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 39,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 10,
    "oneSuccessor": 32,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 9,
    "twoSuccessor": 21,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 0,
    "BranchCount": 53,
    "returnInt": 11,
    "CriticalCount": 7,
    "NumEdges": 74,
    "const32Bit": 132,
    "const64Bit": 14,
    "numConstZeroes": 94,
    "numConstOnes": 28,
    "UncondBranches": 32,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 17,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 59,
    "NumBitCastInst": 1,
    "NumBrInst": 53,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 90,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 40,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 60,
    "TotalInsts": 322,
    "TotalMemInst": 221,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 118
  },
  "baseline_oz_instcount": 324,
  "knowledge_base_entry": [
    "--bdce",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--reassociate",
    "--gvn-hoist",
    "--adce",
    "--ipsccp",
    "--globalopt",
    "--mergefunc",
    "--bdce",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--die",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loweratomic",
          "--lower-guard-intrinsic",
          "--mem2reg",
          "--sccp",
          "--aggressive-instcombine",
          "--ipconstprop",
          "--reassociate",
          "--constmerge",
          "--memcpyopt",
          "--partial-inliner",
          "--bdce",
          "--inferattrs",
          "--add-discriminators",
          "--mergefunc",
          "--rpo-functionattrs",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loweratomic",
      "--lower-guard-intrinsic",
      "--mem2reg",
      "--sccp",
      "--aggressive-instcombine",
      "--ipconstprop",
      "--reassociate",
      "--constmerge",
      "--memcpyopt",
      "--partial-inliner",
      "--bdce",
      "--inferattrs",
      "--add-discriminators",
      "--mergefunc",
      "--rpo-functionattrs",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}