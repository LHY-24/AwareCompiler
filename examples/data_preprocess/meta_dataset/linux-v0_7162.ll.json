{
  "program_id": "linux-v0_7162.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 36,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 10,
    "oneSuccessor": 31,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 6,
    "twoSuccessor": 21,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 0,
    "BranchCount": 52,
    "returnInt": 2,
    "CriticalCount": 11,
    "NumEdges": 73,
    "const32Bit": 230,
    "const64Bit": 26,
    "numConstZeroes": 98,
    "numConstOnes": 90,
    "UncondBranches": 31,
    "binaryConstArg": 34,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 56,
    "NumAndInst": 12,
    "BlockMid": 13,
    "BlockLow": 47,
    "NumBitCastInst": 15,
    "NumBrInst": 52,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 73,
    "NumICmpInst": 23,
    "NumLShrInst": 1,
    "NumLoadInst": 175,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 96,
    "NumSubInst": 4,
    "NumTruncInst": 8,
    "NumXorInst": 3,
    "NumZExtInst": 21,
    "TotalBlocks": 60,
    "TotalInsts": 596,
    "TotalMemInst": 421,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 282
  },
  "baseline_oz_instcount": 596,
  "knowledge_base_entry": [
    "--mem2reg",
    "--gvn",
    "--aggressive-instcombine",
    "--inline",
    "--die",
    "--aggressive-instcombine",
    "--adce",
    "--mergefunc",
    "--bdce",
    "--load-store-vectorizer",
    "--sroa",
    "--bdce",
    "--slp-vectorizer",
    "--licm",
    "--jump-threading",
    "--early-cse-memssa",
    "--mem2reg",
    "--early-cse",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--strip",
          "--libcalls-shrinkwrap",
          "--simple-loop-unswitch",
          "--loop-guard-widening",
          "--mem2reg",
          "--inject-tli-mappings",
          "--mergereturn",
          "--loop-deletion",
          "--bdce",
          "--speculative-execution",
          "--callsite-splitting",
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--guard-widening",
          "--slp-vectorizer",
          "--nary-reassociate",
          "--memcpyopt",
          "--elim-avail-extern",
          "--loop-versioning-licm",
          "--loop-idiom",
          "--always-inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--strip",
      "--libcalls-shrinkwrap",
      "--simple-loop-unswitch",
      "--loop-guard-widening",
      "--mem2reg",
      "--inject-tli-mappings",
      "--mergereturn",
      "--loop-deletion",
      "--bdce",
      "--speculative-execution",
      "--callsite-splitting",
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--guard-widening",
      "--slp-vectorizer",
      "--nary-reassociate",
      "--memcpyopt",
      "--elim-avail-extern",
      "--loop-versioning-licm",
      "--loop-idiom",
      "--always-inline"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}