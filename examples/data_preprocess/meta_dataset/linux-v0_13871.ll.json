{
  "program_id": "linux-v0_13871.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 10,
    "oneSuccessor": 33,
    "twoPred": 11,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 21,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 75,
    "BeginPhi": 0,
    "BranchCount": 54,
    "returnInt": 19,
    "CriticalCount": 6,
    "NumEdges": 75,
    "const32Bit": 172,
    "const64Bit": 34,
    "numConstZeroes": 80,
    "numConstOnes": 66,
    "UncondBranches": 33,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 53,
    "NumAndInst": 5,
    "BlockMid": 6,
    "BlockLow": 69,
    "NumBitCastInst": 9,
    "NumBrInst": 54,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 51,
    "NumICmpInst": 22,
    "NumLShrInst": 1,
    "NumLoadInst": 125,
    "NumMulInst": 1,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 6,
    "NumSelectInst": 1,
    "NumShlInst": 5,
    "NumStoreInst": 76,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 3,
    "NumZExtInst": 7,
    "TotalBlocks": 75,
    "TotalInsts": 501,
    "TotalMemInst": 348,
    "TotalFuncs": 34,
    "ArgsPhi": 0,
    "testUnary": 208
  },
  "baseline_oz_instcount": 501,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--gvn",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--sroa",
    "--indvars",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--die",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--dse",
    "--correlated-propagation",
    "--jump-threading",
    "--loop-reroll",
    "--slp-vectorizer",
    "--newgvn",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--flattencfg",
          "--lowerinvoke",
          "--scalarizer",
          "--strip",
          "--alignment-from-assumptions",
          "--jump-threading",
          "--globalsplit",
          "--loop-versioning-licm",
          "--sroa",
          "--insert-gcov-profiling",
          "--slp-vectorizer",
          "--loop-versioning",
          "--irce",
          "--loop-guard-widening",
          "--loop-unroll-and-jam",
          "--callsite-splitting",
          "--gvn",
          "--consthoist",
          "--early-cse-memssa",
          "--globaldce",
          "--loop-simplifycfg",
          "--instsimplify",
          "--div-rem-pairs",
          "--redundant-dbg-inst-elim",
          "--partially-inline-libcalls",
          "--loop-unroll",
          "--aggressive-instcombine",
          "--loop-simplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--flattencfg",
      "--lowerinvoke",
      "--scalarizer",
      "--strip",
      "--alignment-from-assumptions",
      "--jump-threading",
      "--globalsplit",
      "--loop-versioning-licm",
      "--sroa",
      "--insert-gcov-profiling",
      "--slp-vectorizer",
      "--loop-versioning",
      "--irce",
      "--loop-guard-widening",
      "--loop-unroll-and-jam",
      "--callsite-splitting",
      "--gvn",
      "--consthoist",
      "--early-cse-memssa",
      "--globaldce",
      "--loop-simplifycfg",
      "--instsimplify",
      "--div-rem-pairs",
      "--redundant-dbg-inst-elim",
      "--partially-inline-libcalls",
      "--loop-unroll",
      "--aggressive-instcombine",
      "--loop-simplify"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}