{
  "program_id": "linux-v0_4769.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 71,
    "onePredOneSuc": 54,
    "onePredTwoSuc": 14,
    "oneSuccessor": 69,
    "twoPred": 21,
    "twoPredOneSuc": 11,
    "twoEach": 4,
    "twoSuccessor": 25,
    "morePreds": 4,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 109,
    "BeginPhi": 2,
    "BranchCount": 94,
    "returnInt": 20,
    "CriticalCount": 15,
    "NumEdges": 129,
    "const32Bit": 228,
    "const64Bit": 11,
    "numConstZeroes": 88,
    "numConstOnes": 121,
    "UncondBranches": 69,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 86,
    "NumAndInst": 7,
    "BlockMid": 11,
    "BlockLow": 100,
    "NumBitCastInst": 25,
    "NumBrInst": 94,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 36,
    "NumLShrInst": 0,
    "NumLoadInst": 191,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 15,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 101,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 6,
    "NumZExtInst": 17,
    "TotalBlocks": 111,
    "TotalInsts": 697,
    "TotalMemInst": 476,
    "TotalFuncs": 25,
    "ArgsPhi": 4,
    "testUnary": 329
  },
  "baseline_oz_instcount": 696,
  "knowledge_base_entry": [
    "--ipsccp",
    "--dce",
    "--die",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--aggressive-instcombine",
    "--gvn",
    "--reassociate",
    "--jump-threading",
    "--reassociate",
    "--prune-eh",
    "--elim-avail-extern",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--libcalls-shrinkwrap",
          "--reassociate",
          "--scalarizer",
          "--mergeicmps",
          "--memcpyopt",
          "--lower-constant-intrinsics",
          "--coro-elide",
          "--slsr",
          "--aggressive-instcombine",
          "--callsite-splitting",
          "--loop-data-prefetch",
          "--called-value-propagation",
          "--loop-simplify",
          "--loop-simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--libcalls-shrinkwrap",
      "--reassociate",
      "--scalarizer",
      "--mergeicmps",
      "--memcpyopt",
      "--lower-constant-intrinsics",
      "--coro-elide",
      "--slsr",
      "--aggressive-instcombine",
      "--callsite-splitting",
      "--loop-data-prefetch",
      "--called-value-propagation",
      "--loop-simplify",
      "--loop-simplifycfg"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}