{
  "program_id": "poj104-v1_32_326.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 2,
    "oneSuccessor": 15,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 6,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 25,
    "const64Bit": 49,
    "numConstZeroes": 34,
    "numConstOnes": 15,
    "UncondBranches": 15,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 19,
    "NumBitCastInst": 20,
    "NumBrInst": 21,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 48,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 26,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 9,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 24,
    "TotalInsts": 226,
    "TotalMemInst": 129,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 109
  },
  "baseline_oz_instcount": 99,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--instcombine",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--dse",
    "--mem2reg",
    "--die",
    "--inline",
    "--reassociate",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--early-cse",
    "--newgvn",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--simplifycfg",
    "--prune-eh",
    "--inline",
    "--reassociate",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--early-cse",
    "--newgvn",
    "--load-store-vectorizer",
    "--dce",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--bdce",
    "--jump-threading",
    "--bdce",
    "--sroa",
    "--instcombine",
    "--adce",
    "--mergefunc",
    "--bdce",
    "--ipsccp",
    "--gvn-hoist",
    "--mem2reg",
    "--gvn-hoist",
    "--dse",
    "--instcombine",
    "--mem2reg",
    "--reassociate",
    "--instsimplify",
    "--globalopt",
    "--jump-threading",
    "--nary-reassociate",
    "--licm",
    "--dce",
    "--early-cse",
    "--instsimplify",
    "--simplifycfg",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--dse",
    "--mem2reg",
    "--die",
    "--inline",
    "--reassociate",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--early-cse",
    "--newgvn",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--simplifycfg",
    "--prune-eh",
    "--inline",
    "--reassociate",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--early-cse",
    "--newgvn",
    "--load-store-vectorizer",
    "--dce",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--bdce",
    "--instcombine",
    "--memcpyopt",
    "--mergefunc",
    "--dce",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--adce",
    "--correlated-propagation",
    "--adce",
    "--ipsccp",
    "--gvn-hoist",
    "--mem2reg",
    "--gvn-hoist",
    "--dse",
    "--instcombine",
    "--mem2reg",
    "--reassociate",
    "--instsimplify",
    "--globalopt",
    "--jump-threading",
    "--nary-reassociate",
    "--licm",
    "--dce",
    "--early-cse",
    "--instsimplify",
    "--simplifycfg",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--dce",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--inject-tli-mappings",
          "--loop-versioning",
          "--nary-reassociate",
          "--rpo-functionattrs",
          "--lower-guard-intrinsic",
          "--canonicalize-aliases",
          "--forceattrs",
          "--early-cse-memssa",
          "--lowerswitch",
          "--loop-interchange",
          "--instcombine",
          "--instsimplify",
          "--bdce",
          "--loop-unswitch",
          "--consthoist",
          "--loop-simplify",
          "--break-crit-edges",
          "--callsite-splitting",
          "--loop-reroll",
          "--coro-cleanup",
          "--separate-const-offset-from-gep",
          "--loop-predication",
          "--slp-vectorizer",
          "--loop-unroll",
          "--redundant-dbg-inst-elim",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--inject-tli-mappings",
      "--loop-versioning",
      "--nary-reassociate",
      "--rpo-functionattrs",
      "--lower-guard-intrinsic",
      "--canonicalize-aliases",
      "--forceattrs",
      "--early-cse-memssa",
      "--lowerswitch",
      "--loop-interchange",
      "--instcombine",
      "--instsimplify",
      "--bdce",
      "--loop-unswitch",
      "--consthoist",
      "--loop-simplify",
      "--break-crit-edges",
      "--callsite-splitting",
      "--loop-reroll",
      "--coro-cleanup",
      "--separate-const-offset-from-gep",
      "--loop-predication",
      "--slp-vectorizer",
      "--loop-unroll",
      "--redundant-dbg-inst-elim",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}