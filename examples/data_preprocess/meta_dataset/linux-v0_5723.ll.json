{
  "program_id": "linux-v0_5723.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 72,
    "onePredOneSuc": 60,
    "onePredTwoSuc": 10,
    "oneSuccessor": 69,
    "twoPred": 22,
    "twoPredOneSuc": 6,
    "twoEach": 7,
    "twoSuccessor": 25,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 129,
    "BeginPhi": 2,
    "BranchCount": 94,
    "returnInt": 17,
    "CriticalCount": 18,
    "NumEdges": 124,
    "const32Bit": 292,
    "const64Bit": 25,
    "numConstZeroes": 118,
    "numConstOnes": 150,
    "UncondBranches": 69,
    "binaryConstArg": 33,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 101,
    "NumAndInst": 5,
    "BlockMid": 14,
    "BlockLow": 117,
    "NumBitCastInst": 29,
    "NumBrInst": 94,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 32,
    "NumLShrInst": 0,
    "NumLoadInst": 205,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 35,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 144,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 26,
    "NumZExtInst": 15,
    "TotalBlocks": 131,
    "TotalInsts": 846,
    "TotalMemInst": 575,
    "TotalFuncs": 47,
    "ArgsPhi": 5,
    "testUnary": 373
  },
  "baseline_oz_instcount": 826,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--simplifycfg",
    "--gvn",
    "--dse",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--inline",
    "--simplifycfg",
    "--bdce",
    "--jump-threading",
    "--reassociate",
    "--mem2reg",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--ipsccp",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--flattencfg",
          "--load-store-vectorizer",
          "--always-inline",
          "--dse",
          "--mergeicmps",
          "--strip-dead-prototypes",
          "--tailcallelim",
          "--functionattrs",
          "--rewrite-statepoints-for-gc",
          "--argpromotion",
          "--loop-versioning",
          "--insert-gcov-profiling",
          "--lower-constant-intrinsics",
          "--mergefunc",
          "--cross-dso-cfi",
          "--forceattrs",
          "--add-discriminators",
          "--called-value-propagation",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--flattencfg",
      "--load-store-vectorizer",
      "--always-inline",
      "--dse",
      "--mergeicmps",
      "--strip-dead-prototypes",
      "--tailcallelim",
      "--functionattrs",
      "--rewrite-statepoints-for-gc",
      "--argpromotion",
      "--loop-versioning",
      "--insert-gcov-profiling",
      "--lower-constant-intrinsics",
      "--mergefunc",
      "--cross-dso-cfi",
      "--forceattrs",
      "--add-discriminators",
      "--called-value-propagation",
      "--globalopt"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}