{
  "program_id": "linux-v0_11366.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 53,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 14,
    "oneSuccessor": 47,
    "twoPred": 18,
    "twoPredOneSuc": 6,
    "twoEach": 9,
    "twoSuccessor": 29,
    "morePreds": 5,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 97,
    "BeginPhi": 2,
    "BranchCount": 76,
    "returnInt": 17,
    "CriticalCount": 16,
    "NumEdges": 105,
    "const32Bit": 246,
    "const64Bit": 38,
    "numConstZeroes": 79,
    "numConstOnes": 122,
    "UncondBranches": 47,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 90,
    "NumAndInst": 12,
    "BlockMid": 12,
    "BlockLow": 87,
    "NumBitCastInst": 6,
    "NumBrInst": 76,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 35,
    "NumLShrInst": 3,
    "NumLoadInst": 188,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 23,
    "NumSExtInst": 9,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 142,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 8,
    "NumZExtInst": 16,
    "TotalBlocks": 99,
    "TotalInsts": 747,
    "TotalMemInst": 536,
    "TotalFuncs": 38,
    "ArgsPhi": 4,
    "testUnary": 321
  },
  "baseline_oz_instcount": 747,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--licm",
    "--reassociate",
    "--loop-simplifycfg",
    "--early-cse-memssa",
    "--loop-fusion",
    "--simplifycfg",
    "--loop-reroll",
    "--indvars",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--die",
          "--hotcoldsplit",
          "--loop-unroll",
          "--inferattrs",
          "--forceattrs",
          "--dse",
          "--mergefunc",
          "--strip-debug-declare",
          "--gvn",
          "--strip",
          "--barrier",
          "--correlated-propagation",
          "--reassociate",
          "--early-cse-memssa",
          "--mergereturn",
          "--nary-reassociate",
          "--globalopt",
          "--flattencfg",
          "--alignment-from-assumptions",
          "--guard-widening",
          "--rewrite-statepoints-for-gc",
          "--add-discriminators",
          "--mergeicmps",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--die",
      "--hotcoldsplit",
      "--loop-unroll",
      "--inferattrs",
      "--forceattrs",
      "--dse",
      "--mergefunc",
      "--strip-debug-declare",
      "--gvn",
      "--strip",
      "--barrier",
      "--correlated-propagation",
      "--reassociate",
      "--early-cse-memssa",
      "--mergereturn",
      "--nary-reassociate",
      "--globalopt",
      "--flattencfg",
      "--alignment-from-assumptions",
      "--guard-widening",
      "--rewrite-statepoints-for-gc",
      "--add-discriminators",
      "--mergeicmps",
      "--early-cse"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}