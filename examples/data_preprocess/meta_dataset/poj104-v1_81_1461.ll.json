{
  "program_id": "poj104-v1_81_1461.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 5,
    "oneSuccessor": 21,
    "twoPred": 9,
    "twoPredOneSuc": 1,
    "twoEach": 6,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 7,
    "CriticalCount": 6,
    "NumEdges": 45,
    "const32Bit": 42,
    "const64Bit": 29,
    "numConstZeroes": 28,
    "numConstOnes": 21,
    "UncondBranches": 21,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 35,
    "NumBitCastInst": 15,
    "NumBrInst": 33,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 38,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 37,
    "TotalInsts": 193,
    "TotalMemInst": 110,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 79
  },
  "baseline_oz_instcount": 134,
  "knowledge_base_entry": [
    "--mem2reg",
    "--die",
    "--gvn-hoist",
    "--jump-threading",
    "--inline",
    "--sroa",
    "--early-cse-memssa",
    "--sroa",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--gvn",
    "--instcombine",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--mem2reg",
    "--loop-simplifycfg",
    "--dce",
    "--ipsccp",
    "--instcombine",
    "--slsr",
    "--indvars",
    "--newgvn",
    "--slsr",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--early-cse",
    "--reassociate",
    "--globalopt",
    "--loop-deletion",
    "--elim-avail-extern",
    "--prune-eh",
    "--aggressive-instcombine",
    "--reassociate",
    "--aggressive-instcombine",
    "--lower-expect",
    "--jump-threading",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--alignment-from-assumptions",
          "--cross-dso-cfi",
          "--mem2reg",
          "--loop-interchange",
          "--lowerswitch",
          "--loop-unroll-and-jam",
          "--simplifycfg",
          "--coro-split",
          "--mldst-motion",
          "--loop-rotate",
          "--loop-simplify",
          "--globalsplit",
          "--constmerge",
          "--lower-widenable-condition",
          "--separate-const-offset-from-gep",
          "--globaldce",
          "--simple-loop-unswitch",
          "--functionattrs",
          "--instsimplify",
          "--ipsccp",
          "--post-inline-ee-instrument",
          "--break-crit-edges",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+29.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--alignment-from-assumptions",
      "--cross-dso-cfi",
      "--mem2reg",
      "--loop-interchange",
      "--lowerswitch",
      "--loop-unroll-and-jam",
      "--simplifycfg",
      "--coro-split",
      "--mldst-motion",
      "--loop-rotate",
      "--loop-simplify",
      "--globalsplit",
      "--constmerge",
      "--lower-widenable-condition",
      "--separate-const-offset-from-gep",
      "--globaldce",
      "--simple-loop-unswitch",
      "--functionattrs",
      "--instsimplify",
      "--ipsccp",
      "--post-inline-ee-instrument",
      "--break-crit-edges",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+29.9%"
  }
}