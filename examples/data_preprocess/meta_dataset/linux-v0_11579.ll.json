{
  "program_id": "linux-v0_11579.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 71,
    "onePredOneSuc": 53,
    "onePredTwoSuc": 16,
    "oneSuccessor": 64,
    "twoPred": 16,
    "twoPredOneSuc": 8,
    "twoEach": 3,
    "twoSuccessor": 27,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 127,
    "BeginPhi": 0,
    "BranchCount": 91,
    "returnInt": 18,
    "CriticalCount": 10,
    "NumEdges": 128,
    "const32Bit": 337,
    "const64Bit": 15,
    "numConstZeroes": 146,
    "numConstOnes": 131,
    "UncondBranches": 64,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 94,
    "NumAndInst": 10,
    "BlockMid": 14,
    "BlockLow": 113,
    "NumBitCastInst": 43,
    "NumBrInst": 91,
    "NumCallInst": 74,
    "NumGetElementPtrInst": 95,
    "NumICmpInst": 30,
    "NumLShrInst": 5,
    "NumLoadInst": 232,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 34,
    "NumSExtInst": 8,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 136,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 12,
    "NumZExtInst": 8,
    "TotalBlocks": 127,
    "TotalInsts": 889,
    "TotalMemInst": 631,
    "TotalFuncs": 53,
    "ArgsPhi": 0,
    "testUnary": 396
  },
  "baseline_oz_instcount": 888,
  "knowledge_base_entry": [
    "--adce",
    "--mem2reg",
    "--inline",
    "--mergefunc",
    "--elim-avail-extern",
    "--early-cse",
    "--ipsccp",
    "--die",
    "--reassociate",
    "--aggressive-instcombine",
    "--ipsccp",
    "--elim-avail-extern",
    "--globalopt",
    "--gvn",
    "--dse",
    "--instsimplify",
    "--inline",
    "--aggressive-instcombine",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--loop-unroll-and-jam",
          "--slsr",
          "--globalopt",
          "--coro-elide",
          "--adce",
          "--ipsccp",
          "--early-cse",
          "--functionattrs",
          "--scalarizer",
          "--lower-matrix-intrinsics",
          "--lower-constant-intrinsics",
          "--loop-data-prefetch",
          "--instnamer",
          "--loweratomic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--loop-unroll-and-jam",
      "--slsr",
      "--globalopt",
      "--coro-elide",
      "--adce",
      "--ipsccp",
      "--early-cse",
      "--functionattrs",
      "--scalarizer",
      "--lower-matrix-intrinsics",
      "--lower-constant-intrinsics",
      "--loop-data-prefetch",
      "--instnamer",
      "--loweratomic"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}