{
  "program_id": "linux-v0_4553.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 3,
    "oneSuccessor": 7,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 17,
    "const32Bit": 80,
    "const64Bit": 3,
    "numConstZeroes": 32,
    "numConstOnes": 25,
    "UncondBranches": 7,
    "binaryConstArg": 2,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 23,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 14,
    "NumBitCastInst": 5,
    "NumBrInst": 11,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 50,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 38,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 19,
    "TotalInsts": 184,
    "TotalMemInst": 149,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 83
  },
  "baseline_oz_instcount": 185,
  "knowledge_base_entry": [
    "--mergefunc",
    "--slp-vectorizer",
    "--lower-expect",
    "--loop-rotate",
    "--early-cse",
    "--sroa",
    "--reassociate",
    "--newgvn",
    "--aggressive-instcombine",
    "--mem2reg",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-matrix-intrinsics",
          "--pgo-memop-opt",
          "--functionattrs",
          "--inline",
          "--mem2reg",
          "--attributor",
          "--reg2mem",
          "--loop-predication",
          "--loop-reroll",
          "--name-anon-globals",
          "--slp-vectorizer",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-matrix-intrinsics",
      "--pgo-memop-opt",
      "--functionattrs",
      "--inline",
      "--mem2reg",
      "--attributor",
      "--reg2mem",
      "--loop-predication",
      "--loop-reroll",
      "--name-anon-globals",
      "--slp-vectorizer",
      "--dce"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}