{
  "program_id": "github-v0_48731.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 32,
    "const64Bit": 20,
    "numConstZeroes": 23,
    "numConstOnes": 20,
    "UncondBranches": 11,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 16,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 21,
    "TotalInsts": 139,
    "TotalMemInst": 88,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 60
  },
  "baseline_oz_instcount": 139,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--instcombine",
    "--adce",
    "--load-store-vectorizer",
    "--dse",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--jump-threading",
    "--prune-eh",
    "--instsimplify",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--separate-const-offset-from-gep",
          "--early-cse-memssa",
          "--simple-loop-unswitch",
          "--aggressive-instcombine",
          "--licm",
          "--partial-inliner",
          "--coro-cleanup",
          "--loop-rotate",
          "--rpo-functionattrs",
          "--mergeicmps"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--separate-const-offset-from-gep",
      "--early-cse-memssa",
      "--simple-loop-unswitch",
      "--aggressive-instcombine",
      "--licm",
      "--partial-inliner",
      "--coro-cleanup",
      "--loop-rotate",
      "--rpo-functionattrs",
      "--mergeicmps"
    ],
    "performance_vs_Oz": "+4.3%"
  }
}