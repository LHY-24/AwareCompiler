{
  "program_id": "github-v0_37343.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 13,
    "CriticalCount": 0,
    "NumEdges": 4,
    "const32Bit": 45,
    "const64Bit": 1,
    "numConstZeroes": 6,
    "numConstOnes": 39,
    "UncondBranches": 2,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 37,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 24,
    "NumBitCastInst": 1,
    "NumBrInst": 3,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 17,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 24,
    "TotalInsts": 150,
    "TotalMemInst": 117,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 62
  },
  "baseline_oz_instcount": 150,
  "knowledge_base_entry": [
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--dce",
    "--sccp",
    "--reassociate",
    "--gvn",
    "--gvn-hoist",
    "--simplifycfg",
    "--adce",
    "--die",
    "--inline",
    "--newgvn",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--sroa",
    "--elim-avail-extern",
    "--dse",
    "--aggressive-instcombine",
    "--ipsccp",
    "--loop-instsimplify",
    "--mem2reg",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--redundant-dbg-inst-elim",
          "--simple-loop-unswitch",
          "--mergefunc",
          "--strip-dead-prototypes",
          "--consthoist",
          "--nary-reassociate",
          "--rpo-functionattrs",
          "--rewrite-statepoints-for-gc",
          "--coro-early",
          "--attributor",
          "--scalarizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+31.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--redundant-dbg-inst-elim",
      "--simple-loop-unswitch",
      "--mergefunc",
      "--strip-dead-prototypes",
      "--consthoist",
      "--nary-reassociate",
      "--rpo-functionattrs",
      "--rewrite-statepoints-for-gc",
      "--coro-early",
      "--attributor",
      "--scalarizer"
    ],
    "performance_vs_Oz": "+31.3%"
  }
}