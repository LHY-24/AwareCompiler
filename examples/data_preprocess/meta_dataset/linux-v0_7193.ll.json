{
  "program_id": "linux-v0_7193.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 61,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 11,
    "oneSuccessor": 57,
    "twoPred": 15,
    "twoPredOneSuc": 8,
    "twoEach": 5,
    "twoSuccessor": 23,
    "morePreds": 5,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 4,
    "BranchCount": 80,
    "returnInt": 14,
    "CriticalCount": 9,
    "NumEdges": 116,
    "const32Bit": 258,
    "const64Bit": 49,
    "numConstZeroes": 93,
    "numConstOnes": 125,
    "UncondBranches": 57,
    "binaryConstArg": 31,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 94,
    "NumAndInst": 12,
    "BlockMid": 16,
    "BlockLow": 82,
    "NumBitCastInst": 33,
    "NumBrInst": 80,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 63,
    "NumICmpInst": 25,
    "NumLShrInst": 3,
    "NumLoadInst": 195,
    "NumMulInst": 5,
    "NumOrInst": 3,
    "NumPHIInst": 4,
    "NumRetInst": 17,
    "NumSExtInst": 2,
    "NumSelectInst": 2,
    "NumShlInst": 1,
    "NumStoreInst": 154,
    "NumSubInst": 2,
    "NumTruncInst": 8,
    "NumXorInst": 4,
    "NumZExtInst": 16,
    "TotalBlocks": 98,
    "TotalInsts": 788,
    "TotalMemInst": 558,
    "TotalFuncs": 27,
    "ArgsPhi": 8,
    "testUnary": 354
  },
  "baseline_oz_instcount": 788,
  "knowledge_base_entry": [
    "--sccp",
    "--lower-constant-intrinsics",
    "--loop-simplifycfg",
    "--inline",
    "--gvn",
    "--lower-expect",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--licm",
    "--slp-vectorizer",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--tailcallelim",
          "--lower-constant-intrinsics",
          "--loop-unroll",
          "--inferattrs",
          "--ee-instrument",
          "--correlated-propagation",
          "--globaldce",
          "--attributor",
          "--mldst-motion",
          "--loop-reroll",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--tailcallelim",
      "--lower-constant-intrinsics",
      "--loop-unroll",
      "--inferattrs",
      "--ee-instrument",
      "--correlated-propagation",
      "--globaldce",
      "--attributor",
      "--mldst-motion",
      "--loop-reroll",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}