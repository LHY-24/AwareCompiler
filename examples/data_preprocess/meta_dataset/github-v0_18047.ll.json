{
  "program_id": "github-v0_18047.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 79,
    "onePredOneSuc": 44,
    "onePredTwoSuc": 35,
    "oneSuccessor": 51,
    "twoPred": 13,
    "twoPredOneSuc": 4,
    "twoEach": 8,
    "twoSuccessor": 47,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 104,
    "BeginPhi": 0,
    "BranchCount": 98,
    "returnInt": 22,
    "CriticalCount": 19,
    "NumEdges": 148,
    "const32Bit": 218,
    "const64Bit": 26,
    "numConstZeroes": 98,
    "numConstOnes": 65,
    "UncondBranches": 51,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 42,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 95,
    "NumBitCastInst": 48,
    "NumBrInst": 98,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 65,
    "NumICmpInst": 47,
    "NumLShrInst": 0,
    "NumLoadInst": 206,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 99,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 104,
    "TotalInsts": 687,
    "TotalMemInst": 461,
    "TotalFuncs": 33,
    "ArgsPhi": 0,
    "testUnary": 316
  },
  "baseline_oz_instcount": 687,
  "knowledge_base_entry": [
    "--indvars",
    "--early-cse",
    "--aggressive-instcombine",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--slsr",
          "--aggressive-instcombine",
          "-loop-reduce",
          "--sroa",
          "--elim-avail-extern",
          "--early-cse-memssa",
          "--instcombine",
          "--lower-expect",
          "--float2int",
          "--instnamer",
          "--consthoist",
          "--infer-address-spaces",
          "--mergeicmps",
          "--loop-versioning-licm",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--slsr",
      "--aggressive-instcombine",
      "-loop-reduce",
      "--sroa",
      "--elim-avail-extern",
      "--early-cse-memssa",
      "--instcombine",
      "--lower-expect",
      "--float2int",
      "--instnamer",
      "--consthoist",
      "--infer-address-spaces",
      "--mergeicmps",
      "--loop-versioning-licm",
      "--sancov"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}