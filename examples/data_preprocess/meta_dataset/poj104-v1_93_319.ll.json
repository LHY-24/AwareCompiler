{
  "program_id": "poj104-v1_93_319.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 3,
    "oneSuccessor": 8,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 3,
    "CriticalCount": 3,
    "NumEdges": 20,
    "const32Bit": 36,
    "const64Bit": 12,
    "numConstZeroes": 12,
    "numConstOnes": 22,
    "UncondBranches": 8,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 17,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 23,
    "NumBitCastInst": 13,
    "NumBrInst": 14,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 30,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 25,
    "TotalInsts": 151,
    "TotalMemInst": 102,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 61
  },
  "baseline_oz_instcount": 64,
  "knowledge_base_entry": [
    "--loop-rotate",
    "--early-cse",
    "--mem2reg",
    "--aggressive-instcombine",
    "--instcombine",
    "--die",
    "--sccp",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--jump-threading",
    "--sroa",
    "--licm",
    "--flattencfg",
    "--simplifycfg",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--adce",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--gvn",
    "--elim-avail-extern",
    "--inline",
    "--memcpyopt",
    "--slp-vectorizer",
    "--bdce",
    "--ipsccp",
    "--dce",
    "--gvn-hoist",
    "--dse",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--coro-elide",
          "--instsimplify",
          "--reassociate",
          "--ipsccp",
          "--called-value-propagation",
          "--elim-avail-extern",
          "--slsr",
          "--globaldce",
          "--speculative-execution",
          "--instcombine",
          "--add-discriminators",
          "--consthoist",
          "--barrier",
          "--die",
          "--strip-debug-declare",
          "--ee-instrument",
          "--globalsplit",
          "--loop-unroll-and-jam",
          "--newgvn",
          "--mergereturn",
          "--loop-idiom",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+12.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--coro-elide",
      "--instsimplify",
      "--reassociate",
      "--ipsccp",
      "--called-value-propagation",
      "--elim-avail-extern",
      "--slsr",
      "--globaldce",
      "--speculative-execution",
      "--instcombine",
      "--add-discriminators",
      "--consthoist",
      "--barrier",
      "--die",
      "--strip-debug-declare",
      "--ee-instrument",
      "--globalsplit",
      "--loop-unroll-and-jam",
      "--newgvn",
      "--mergereturn",
      "--loop-idiom",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+12.5%"
  }
}