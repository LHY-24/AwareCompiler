{
  "program_id": "linux-v0_5893.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 28,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 5,
    "oneSuccessor": 28,
    "twoPred": 16,
    "twoPredOneSuc": 5,
    "twoEach": 10,
    "twoSuccessor": 16,
    "morePreds": 0,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 40,
    "BeginPhi": 6,
    "BranchCount": 44,
    "returnInt": 0,
    "CriticalCount": 7,
    "NumEdges": 60,
    "const32Bit": 137,
    "const64Bit": 7,
    "numConstZeroes": 87,
    "numConstOnes": 31,
    "UncondBranches": 28,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 13,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 42,
    "NumBitCastInst": 0,
    "NumBrInst": 44,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 112,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 6,
    "NumRetInst": 2,
    "NumSExtInst": 10,
    "NumSelectInst": 3,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 2,
    "NumTruncInst": 18,
    "NumXorInst": 0,
    "NumZExtInst": 23,
    "TotalBlocks": 46,
    "TotalInsts": 352,
    "TotalMemInst": 222,
    "TotalFuncs": 2,
    "ArgsPhi": 12,
    "testUnary": 176
  },
  "baseline_oz_instcount": 353,
  "knowledge_base_entry": [
    "--slsr",
    "--jump-threading",
    "--correlated-propagation",
    "--bdce",
    "--sccp",
    "--sroa",
    "--mem2reg",
    "--aggressive-instcombine",
    "--dce",
    "--gvn-hoist",
    "--instcombine",
    "--gvn",
    "--adce",
    "--gvn-hoist",
    "--mergefunc",
    "--dse",
    "--ipsccp",
    "--early-cse-memssa",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn-hoist",
          "--ipconstprop",
          "--ee-instrument",
          "--partial-inliner",
          "--infer-address-spaces",
          "--attributor",
          "--constprop",
          "--insert-gcov-profiling",
          "--dce",
          "--add-discriminators",
          "--lower-matrix-intrinsics",
          "--lowerswitch",
          "--loop-simplifycfg",
          "--strip-debug-declare",
          "--rewrite-statepoints-for-gc",
          "--dse",
          "--redundant-dbg-inst-elim",
          "--die",
          "--lower-guard-intrinsic",
          "--coro-elide",
          "--sroa",
          "--always-inline",
          "--aggressive-instcombine",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn-hoist",
      "--ipconstprop",
      "--ee-instrument",
      "--partial-inliner",
      "--infer-address-spaces",
      "--attributor",
      "--constprop",
      "--insert-gcov-profiling",
      "--dce",
      "--add-discriminators",
      "--lower-matrix-intrinsics",
      "--lowerswitch",
      "--loop-simplifycfg",
      "--strip-debug-declare",
      "--rewrite-statepoints-for-gc",
      "--dse",
      "--redundant-dbg-inst-elim",
      "--die",
      "--lower-guard-intrinsic",
      "--coro-elide",
      "--sroa",
      "--always-inline",
      "--aggressive-instcombine",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}