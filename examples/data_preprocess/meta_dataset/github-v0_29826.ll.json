{
  "program_id": "github-v0_29826.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 39,
    "const64Bit": 92,
    "numConstZeroes": 74,
    "numConstOnes": 36,
    "UncondBranches": 15,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 18,
    "NumAndInst": 1,
    "BlockMid": 7,
    "BlockLow": 20,
    "NumBitCastInst": 28,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 75,
    "NumICmpInst": 8,
    "NumLShrInst": 1,
    "NumLoadInst": 75,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 38,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 28,
    "TotalBlocks": 27,
    "TotalInsts": 322,
    "TotalMemInst": 213,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 156
  },
  "baseline_oz_instcount": 322,
  "knowledge_base_entry": [
    "--ipsccp",
    "--adce",
    "--ipsccp",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--adce",
    "--instsimplify",
    "--licm",
    "--instcombine",
    "--loop-deletion",
    "--newgvn",
    "--jump-threading",
    "--slsr",
    "--early-cse",
    "--inline",
    "--bdce",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--separate-const-offset-from-gep",
          "--inject-tli-mappings",
          "--slsr",
          "--slp-vectorizer",
          "--coro-split",
          "--always-inline",
          "--partially-inline-libcalls",
          "--sccp",
          "--loop-simplify",
          "--bdce",
          "--loop-predication",
          "--flattencfg",
          "--loweratomic",
          "--aggressive-instcombine",
          "--loop-distribute",
          "--memcpyopt",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--separate-const-offset-from-gep",
      "--inject-tli-mappings",
      "--slsr",
      "--slp-vectorizer",
      "--coro-split",
      "--always-inline",
      "--partially-inline-libcalls",
      "--sccp",
      "--loop-simplify",
      "--bdce",
      "--loop-predication",
      "--flattencfg",
      "--loweratomic",
      "--aggressive-instcombine",
      "--loop-distribute",
      "--memcpyopt",
      "--constmerge"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}