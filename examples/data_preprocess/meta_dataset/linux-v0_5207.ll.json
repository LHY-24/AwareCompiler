{
  "program_id": "linux-v0_5207.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 38,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 10,
    "oneSuccessor": 31,
    "twoPred": 10,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 20,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 75,
    "BeginPhi": 1,
    "BranchCount": 51,
    "returnInt": 24,
    "CriticalCount": 8,
    "NumEdges": 71,
    "const32Bit": 233,
    "const64Bit": 9,
    "numConstZeroes": 81,
    "numConstOnes": 110,
    "UncondBranches": 31,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 93,
    "NumAndInst": 2,
    "BlockMid": 12,
    "BlockLow": 64,
    "NumBitCastInst": 19,
    "NumBrInst": 51,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 56,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 175,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 25,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 113,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 3,
    "NumZExtInst": 6,
    "TotalBlocks": 76,
    "TotalInsts": 637,
    "TotalMemInst": 500,
    "TotalFuncs": 42,
    "ArgsPhi": 2,
    "testUnary": 301
  },
  "baseline_oz_instcount": 637,
  "knowledge_base_entry": [
    "--sroa",
    "--aggressive-instcombine",
    "--globalopt",
    "--mem2reg",
    "--loop-rotate",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--constmerge",
          "--tailcallelim",
          "--ipsccp",
          "--sroa",
          "--globaldce",
          "--loop-unroll-and-jam",
          "--flattencfg",
          "--gvn-hoist",
          "--scalarizer",
          "--adce",
          "--loop-load-elim",
          "--ee-instrument",
          "--guard-widening",
          "--loop-fusion",
          "--aggressive-instcombine",
          "--always-inline",
          "--instsimplify",
          "--sancov",
          "--loop-versioning",
          "--coro-split",
          "--loop-idiom",
          "--elim-avail-extern",
          "--loop-distribute",
          "--argpromotion",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--constmerge",
      "--tailcallelim",
      "--ipsccp",
      "--sroa",
      "--globaldce",
      "--loop-unroll-and-jam",
      "--flattencfg",
      "--gvn-hoist",
      "--scalarizer",
      "--adce",
      "--loop-load-elim",
      "--ee-instrument",
      "--guard-widening",
      "--loop-fusion",
      "--aggressive-instcombine",
      "--always-inline",
      "--instsimplify",
      "--sancov",
      "--loop-versioning",
      "--coro-split",
      "--loop-idiom",
      "--elim-avail-extern",
      "--loop-distribute",
      "--argpromotion",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}