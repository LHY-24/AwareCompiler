{
  "program_id": "linux-v0_94.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 14,
    "onePred": 98,
    "onePredOneSuc": 78,
    "onePredTwoSuc": 19,
    "oneSuccessor": 105,
    "twoPred": 50,
    "twoPredOneSuc": 23,
    "twoEach": 25,
    "twoSuccessor": 46,
    "morePreds": 7,
    "BB03Phi": 14,
    "BBHiPhi": 0,
    "BBNoPhi": 143,
    "BeginPhi": 14,
    "BranchCount": 151,
    "returnInt": 46,
    "CriticalCount": 34,
    "NumEdges": 229,
    "const32Bit": 203,
    "const64Bit": 5,
    "numConstZeroes": 57,
    "numConstOnes": 67,
    "UncondBranches": 105,
    "binaryConstArg": 55,
    "NumAShrInst": 0,
    "NumAddInst": 51,
    "NumAllocaInst": 26,
    "NumAndInst": 1,
    "BlockMid": 6,
    "BlockLow": 151,
    "NumBitCastInst": 0,
    "NumBrInst": 151,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 48,
    "NumLShrInst": 0,
    "NumLoadInst": 325,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 14,
    "NumRetInst": 2,
    "NumSExtInst": 29,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 87,
    "NumSubInst": 20,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 157,
    "TotalInsts": 863,
    "TotalMemInst": 532,
    "TotalFuncs": 21,
    "ArgsPhi": 28,
    "testUnary": 386
  },
  "baseline_oz_instcount": 868,
  "knowledge_base_entry": [
    "--prune-eh",
    "--instcombine",
    "--globalopt",
    "--jump-threading",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-elide",
          "--div-rem-pairs",
          "--lower-expect",
          "--speculative-execution",
          "--gvn-hoist",
          "--alignment-from-assumptions",
          "--add-discriminators",
          "--mem2reg",
          "--constmerge",
          "--loop-unroll-and-jam",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-elide",
      "--div-rem-pairs",
      "--lower-expect",
      "--speculative-execution",
      "--gvn-hoist",
      "--alignment-from-assumptions",
      "--add-discriminators",
      "--mem2reg",
      "--constmerge",
      "--loop-unroll-and-jam",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}