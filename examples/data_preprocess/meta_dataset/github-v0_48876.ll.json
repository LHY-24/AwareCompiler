{
  "program_id": "github-v0_48876.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 69,
    "const64Bit": 99,
    "numConstZeroes": 95,
    "numConstOnes": 30,
    "UncondBranches": 15,
    "binaryConstArg": 55,
    "NumAShrInst": 12,
    "NumAddInst": 3,
    "NumAllocaInst": 11,
    "NumAndInst": 21,
    "BlockMid": 8,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 47,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 53,
    "NumMulInst": 0,
    "NumOrInst": 21,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 12,
    "NumStoreInst": 23,
    "NumSubInst": 7,
    "NumTruncInst": 22,
    "NumXorInst": 0,
    "NumZExtInst": 39,
    "TotalBlocks": 27,
    "TotalInsts": 325,
    "TotalMemInst": 141,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 137
  },
  "baseline_oz_instcount": 325,
  "knowledge_base_entry": [
    "--newgvn",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--elim-avail-extern",
    "--reassociate",
    "--early-cse",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--break-crit-edges",
          "--post-inline-ee-instrument",
          "--loop-unswitch",
          "--loop-versioning-licm",
          "--libcalls-shrinkwrap",
          "--inject-tli-mappings",
          "--mergefunc",
          "--separate-const-offset-from-gep",
          "--strip-dead-prototypes",
          "--loop-interchange",
          "--loop-unroll",
          "--forceattrs",
          "--loop-sink",
          "--rewrite-statepoints-for-gc",
          "--constprop",
          "--argpromotion",
          "--partial-inliner",
          "--jump-threading",
          "--loweratomic",
          "--correlated-propagation",
          "--slsr",
          "--instnamer",
          "--newgvn",
          "--aggressive-instcombine",
          "--tailcallelim",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--break-crit-edges",
      "--post-inline-ee-instrument",
      "--loop-unswitch",
      "--loop-versioning-licm",
      "--libcalls-shrinkwrap",
      "--inject-tli-mappings",
      "--mergefunc",
      "--separate-const-offset-from-gep",
      "--strip-dead-prototypes",
      "--loop-interchange",
      "--loop-unroll",
      "--forceattrs",
      "--loop-sink",
      "--rewrite-statepoints-for-gc",
      "--constprop",
      "--argpromotion",
      "--partial-inliner",
      "--jump-threading",
      "--loweratomic",
      "--correlated-propagation",
      "--slsr",
      "--instnamer",
      "--newgvn",
      "--aggressive-instcombine",
      "--tailcallelim",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+6.8%"
  }
}