{
  "program_id": "linux-v0_2880.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 28,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 1,
    "oneSuccessor": 27,
    "twoPred": 9,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 73,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 25,
    "CriticalCount": 6,
    "NumEdges": 59,
    "const32Bit": 219,
    "const64Bit": 13,
    "numConstZeroes": 68,
    "numConstOnes": 114,
    "UncondBranches": 27,
    "binaryConstArg": 23,
    "NumAShrInst": 1,
    "NumAddInst": 4,
    "NumAllocaInst": 100,
    "NumAndInst": 8,
    "BlockMid": 14,
    "BlockLow": 59,
    "NumBitCastInst": 39,
    "NumBrInst": 38,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 10,
    "NumLShrInst": 4,
    "NumLoadInst": 186,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 33,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 138,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 73,
    "TotalInsts": 683,
    "TotalMemInst": 515,
    "TotalFuncs": 42,
    "ArgsPhi": 0,
    "testUnary": 347
  },
  "baseline_oz_instcount": 682,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--ipsccp",
    "--sroa",
    "--licm",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--newgvn",
    "--lower-expect",
    "--newgvn",
    "--dce",
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--mergefunc",
    "--load-store-vectorizer",
    "--die",
    "--elim-avail-extern",
    "--globalopt",
    "--reassociate",
    "--loop-instsimplify",
    "--adce",
    "--elim-avail-extern",
    "--mem2reg",
    "--newgvn",
    "--jump-threading",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--canonicalize-aliases",
          "--coro-early",
          "--functionattrs",
          "--early-cse",
          "--loop-unswitch",
          "--irce",
          "--load-store-vectorizer",
          "--ipsccp",
          "--called-value-propagation",
          "--aggressive-instcombine",
          "--die",
          "--loop-load-elim",
          "--dce",
          "--constprop",
          "--newgvn",
          "--loweratomic",
          "--loop-versioning",
          "--reassociate",
          "--inject-tli-mappings",
          "--hotcoldsplit",
          "--coro-elide",
          "--constmerge",
          "--libcalls-shrinkwrap",
          "--gvn",
          "--sccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--canonicalize-aliases",
      "--coro-early",
      "--functionattrs",
      "--early-cse",
      "--loop-unswitch",
      "--irce",
      "--load-store-vectorizer",
      "--ipsccp",
      "--called-value-propagation",
      "--aggressive-instcombine",
      "--die",
      "--loop-load-elim",
      "--dce",
      "--constprop",
      "--newgvn",
      "--loweratomic",
      "--loop-versioning",
      "--reassociate",
      "--inject-tli-mappings",
      "--hotcoldsplit",
      "--coro-elide",
      "--constmerge",
      "--libcalls-shrinkwrap",
      "--gvn",
      "--sccp"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}