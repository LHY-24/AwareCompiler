{
  "program_id": "poj104-v1_73_1985.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 36,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 5,
    "oneSuccessor": 33,
    "twoPred": 13,
    "twoPredOneSuc": 2,
    "twoEach": 8,
    "twoSuccessor": 16,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 0,
    "BranchCount": 49,
    "returnInt": 7,
    "CriticalCount": 4,
    "NumEdges": 65,
    "const32Bit": 66,
    "const64Bit": 50,
    "numConstZeroes": 48,
    "numConstOnes": 38,
    "UncondBranches": 33,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 27,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 60,
    "NumBitCastInst": 26,
    "NumBrInst": 49,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 96,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 26,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 44,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 64,
    "TotalInsts": 394,
    "TotalMemInst": 250,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 176
  },
  "baseline_oz_instcount": 370,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--mem2reg",
    "--globalopt",
    "--reassociate",
    "--licm",
    "--early-cse-memssa",
    "--indvars",
    "--instcombine",
    "--simplifycfg",
    "--bdce",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--jump-threading",
    "--instcombine",
    "--licm",
    "--reassociate",
    "--lower-expect",
    "--instcombine",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--loop-rotate",
    "--dse",
    "--slp-vectorizer",
    "--dce",
    "--loop-instsimplify",
    "--early-cse",
    "--dse",
    "--correlated-propagation",
    "--lower-expect",
    "--early-cse",
    "--licm",
    "--mergefunc",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--licm",
    "--instcombine",
    "--mem2reg",
    "--jump-threading",
    "--dce",
    "--elim-avail-extern",
    "--globalopt",
    "--mem2reg",
    "--mergefunc",
    "--bdce",
    "--early-cse",
    "--dse",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--early-cse",
    "--loop-fusion",
    "--early-cse",
    "--mldst-motion",
    "--inline",
    "--mem2reg",
    "--jump-threading",
    "--simplifycfg",
    "--gvn-hoist",
    "--loop-rotate",
    "--gvn-hoist",
    "--slsr",
    "--loop-reroll",
    "--newgvn",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--loop-rotate",
    "--jump-threading",
    "--simplifycfg",
    "--slp-vectorizer",
    "--early-cse",
    "--loop-fusion",
    "--jump-threading",
    "--bdce",
    "--die",
    "--newgvn",
    "--early-cse-memssa",
    "--mldst-motion",
    "--inline",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--licm",
    "--nary-reassociate",
    "--instcombine",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--licm",
    "--lower-expect",
    "--globalopt",
    "--reassociate",
    "--licm",
    "--early-cse-memssa",
    "--indvars",
    "--instcombine",
    "--simplifycfg",
    "--bdce",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--jump-threading",
    "--mergefunc",
    "--instsimplify",
    "--simplifycfg",
    "--mem2reg",
    "--loop-rotate",
    "--instcombine",
    "--loop-reroll",
    "--newgvn",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--loop-rotate",
    "--jump-threading",
    "--simplifycfg",
    "--slp-vectorizer",
    "--early-cse",
    "--loop-fusion",
    "--nary-reassociate",
    "--ipsccp",
    "--instsimplify",
    "--simplifycfg",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--consthoist",
          "--newgvn",
          "--coro-cleanup",
          "--elim-avail-extern",
          "--always-inline",
          "--early-cse-memssa",
          "--inline",
          "--mergereturn",
          "--functionattrs",
          "--infer-address-spaces",
          "--callsite-splitting",
          "--loop-unroll-and-jam",
          "--add-discriminators",
          "--ipconstprop",
          "--redundant-dbg-inst-elim",
          "--div-rem-pairs",
          "--name-anon-globals",
          "-loop-reduce",
          "--loop-guard-widening",
          "--tailcallelim",
          "--lower-guard-intrinsic",
          "--reassociate",
          "--sroa",
          "--libcalls-shrinkwrap",
          "--gvn-hoist",
          "--loweratomic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+61.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--consthoist",
      "--newgvn",
      "--coro-cleanup",
      "--elim-avail-extern",
      "--always-inline",
      "--early-cse-memssa",
      "--inline",
      "--mergereturn",
      "--functionattrs",
      "--infer-address-spaces",
      "--callsite-splitting",
      "--loop-unroll-and-jam",
      "--add-discriminators",
      "--ipconstprop",
      "--redundant-dbg-inst-elim",
      "--div-rem-pairs",
      "--name-anon-globals",
      "-loop-reduce",
      "--loop-guard-widening",
      "--tailcallelim",
      "--lower-guard-intrinsic",
      "--reassociate",
      "--sroa",
      "--libcalls-shrinkwrap",
      "--gvn-hoist",
      "--loweratomic"
    ],
    "performance_vs_Oz": "+61.4%"
  }
}