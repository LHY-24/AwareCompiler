{
  "program_id": "linux-v0_13538.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 79,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 26,
    "oneSuccessor": 68,
    "twoPred": 20,
    "twoPredOneSuc": 12,
    "twoEach": 6,
    "twoSuccessor": 41,
    "morePreds": 10,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 122,
    "BeginPhi": 0,
    "BranchCount": 109,
    "returnInt": 27,
    "CriticalCount": 8,
    "NumEdges": 150,
    "const32Bit": 253,
    "const64Bit": 69,
    "numConstZeroes": 132,
    "numConstOnes": 105,
    "UncondBranches": 68,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 92,
    "NumAndInst": 2,
    "BlockMid": 17,
    "BlockLow": 105,
    "NumBitCastInst": 6,
    "NumBrInst": 109,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 69,
    "NumICmpInst": 41,
    "NumLShrInst": 0,
    "NumLoadInst": 153,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 137,
    "NumSubInst": 9,
    "NumTruncInst": 9,
    "NumXorInst": 1,
    "NumZExtInst": 19,
    "TotalBlocks": 122,
    "TotalInsts": 734,
    "TotalMemInst": 505,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 290
  },
  "baseline_oz_instcount": 740,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse",
    "--adce",
    "--slp-vectorizer",
    "--dse",
    "--mldst-motion",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--globalopt",
          "--dse",
          "--loweratomic",
          "--die",
          "--coro-cleanup",
          "--pgo-memop-opt",
          "--alignment-from-assumptions",
          "--globaldce",
          "--div-rem-pairs",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--globalopt",
      "--dse",
      "--loweratomic",
      "--die",
      "--coro-cleanup",
      "--pgo-memop-opt",
      "--alignment-from-assumptions",
      "--globaldce",
      "--div-rem-pairs",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}