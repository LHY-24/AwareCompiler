{
  "program_id": "linux-v0_1214.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 48,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 11,
    "oneSuccessor": 44,
    "twoPred": 14,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 22,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 1,
    "BranchCount": 66,
    "returnInt": 2,
    "CriticalCount": 11,
    "NumEdges": 88,
    "const32Bit": 208,
    "const64Bit": 17,
    "numConstZeroes": 97,
    "numConstOnes": 78,
    "UncondBranches": 44,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 49,
    "NumAndInst": 13,
    "BlockMid": 12,
    "BlockLow": 61,
    "NumBitCastInst": 16,
    "NumBrInst": 66,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 59,
    "NumICmpInst": 26,
    "NumLShrInst": 1,
    "NumLoadInst": 162,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 7,
    "NumSExtInst": 3,
    "NumSelectInst": 2,
    "NumShlInst": 8,
    "NumStoreInst": 63,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 10,
    "NumZExtInst": 27,
    "TotalBlocks": 73,
    "TotalInsts": 554,
    "TotalMemInst": 364,
    "TotalFuncs": 15,
    "ArgsPhi": 2,
    "testUnary": 263
  },
  "baseline_oz_instcount": 555,
  "knowledge_base_entry": [
    "--reassociate",
    "--mergefunc",
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--instsimplify",
          "--newgvn",
          "--loop-instsimplify",
          "--irce",
          "--dce",
          "--float2int",
          "--strip",
          "--globaldce",
          "--inject-tli-mappings",
          "--aggressive-instcombine",
          "--jump-threading",
          "--scalarizer",
          "--mergefunc",
          "--canonicalize-aliases",
          "--redundant-dbg-inst-elim",
          "--loop-guard-widening",
          "--loop-distribute",
          "--called-value-propagation",
          "--loop-unswitch",
          "--early-cse",
          "--loop-data-prefetch",
          "--globalopt",
          "--simplifycfg",
          "--attributor",
          "--partial-inliner",
          "--lower-widenable-condition",
          "--hotcoldsplit",
          "--loop-vectorize",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--instsimplify",
      "--newgvn",
      "--loop-instsimplify",
      "--irce",
      "--dce",
      "--float2int",
      "--strip",
      "--globaldce",
      "--inject-tli-mappings",
      "--aggressive-instcombine",
      "--jump-threading",
      "--scalarizer",
      "--mergefunc",
      "--canonicalize-aliases",
      "--redundant-dbg-inst-elim",
      "--loop-guard-widening",
      "--loop-distribute",
      "--called-value-propagation",
      "--loop-unswitch",
      "--early-cse",
      "--loop-data-prefetch",
      "--globalopt",
      "--simplifycfg",
      "--attributor",
      "--partial-inliner",
      "--lower-widenable-condition",
      "--hotcoldsplit",
      "--loop-vectorize",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}