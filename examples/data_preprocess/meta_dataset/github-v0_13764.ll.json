{
  "program_id": "github-v0_13764.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 10,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 10,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 2,
    "BranchCount": 16,
    "returnInt": 0,
    "CriticalCount": 4,
    "NumEdges": 22,
    "const32Bit": 79,
    "const64Bit": 1,
    "numConstZeroes": 42,
    "numConstOnes": 19,
    "UncondBranches": 10,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 12,
    "NumBitCastInst": 2,
    "NumBrInst": 16,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 69,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 1,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 17,
    "TotalInsts": 197,
    "TotalMemInst": 136,
    "TotalFuncs": 3,
    "ArgsPhi": 4,
    "testUnary": 83
  },
  "baseline_oz_instcount": 198,
  "knowledge_base_entry": [
    "--lower-expect",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--jump-threading",
    "--simplifycfg",
    "--early-cse",
    "--gvn",
    "--correlated-propagation",
    "--sroa",
    "--flattencfg",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--reassociate",
          "--globalsplit",
          "--lowerswitch",
          "--nary-reassociate",
          "--div-rem-pairs",
          "--flattencfg",
          "--float2int",
          "--coro-cleanup",
          "--early-cse",
          "--tailcallelim",
          "--constprop",
          "--alignment-from-assumptions",
          "--mergefunc",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--reassociate",
      "--globalsplit",
      "--lowerswitch",
      "--nary-reassociate",
      "--div-rem-pairs",
      "--flattencfg",
      "--float2int",
      "--coro-cleanup",
      "--early-cse",
      "--tailcallelim",
      "--constprop",
      "--alignment-from-assumptions",
      "--mergefunc",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}