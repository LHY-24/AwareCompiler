{
  "program_id": "linux-v0_3533.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 60,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 10,
    "oneSuccessor": 55,
    "twoPred": 14,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 22,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 113,
    "BeginPhi": 0,
    "BranchCount": 77,
    "returnInt": 25,
    "CriticalCount": 4,
    "NumEdges": 109,
    "const32Bit": 451,
    "const64Bit": 19,
    "numConstZeroes": 193,
    "numConstOnes": 152,
    "UncondBranches": 55,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 114,
    "NumAndInst": 2,
    "BlockMid": 19,
    "BlockLow": 94,
    "NumBitCastInst": 40,
    "NumBrInst": 77,
    "NumCallInst": 64,
    "NumGetElementPtrInst": 128,
    "NumICmpInst": 22,
    "NumLShrInst": 1,
    "NumLoadInst": 288,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 34,
    "NumSExtInst": 7,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 168,
    "NumSubInst": 5,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 113,
    "TotalInsts": 961,
    "TotalMemInst": 762,
    "TotalFuncs": 55,
    "ArgsPhi": 0,
    "testUnary": 453
  },
  "baseline_oz_instcount": 960,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--elim-avail-extern",
    "--reassociate",
    "--gvn",
    "--ipsccp",
    "--instcombine",
    "--jump-threading",
    "--loop-deletion",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--loop-instsimplify",
          "--early-cse",
          "--loop-distribute",
          "--bdce",
          "--loop-vectorize",
          "--callsite-splitting",
          "--strip-debug-declare",
          "--cross-dso-cfi",
          "--elim-avail-extern",
          "--lowerinvoke",
          "--loop-simplifycfg",
          "--loop-sink",
          "--strip-nondebug",
          "--inferattrs",
          "--instnamer",
          "--attributor",
          "--post-inline-ee-instrument",
          "--ee-instrument",
          "--always-inline",
          "--coro-early",
          "--loop-fusion",
          "--globaldce",
          "--constmerge",
          "--load-store-vectorizer",
          "--loop-load-elim",
          "--scalarizer",
          "--mergefunc",
          "--nary-reassociate",
          "--loop-simplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--loop-instsimplify",
      "--early-cse",
      "--loop-distribute",
      "--bdce",
      "--loop-vectorize",
      "--callsite-splitting",
      "--strip-debug-declare",
      "--cross-dso-cfi",
      "--elim-avail-extern",
      "--lowerinvoke",
      "--loop-simplifycfg",
      "--loop-sink",
      "--strip-nondebug",
      "--inferattrs",
      "--instnamer",
      "--attributor",
      "--post-inline-ee-instrument",
      "--ee-instrument",
      "--always-inline",
      "--coro-early",
      "--loop-fusion",
      "--globaldce",
      "--constmerge",
      "--load-store-vectorizer",
      "--loop-load-elim",
      "--scalarizer",
      "--mergefunc",
      "--nary-reassociate",
      "--loop-simplify"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}