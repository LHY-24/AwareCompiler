{
  "program_id": "linux-v0_12798.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 3,
    "oneSuccessor": 28,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 9,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 0,
    "BranchCount": 37,
    "returnInt": 7,
    "CriticalCount": 1,
    "NumEdges": 56,
    "const32Bit": 74,
    "const64Bit": 7,
    "numConstZeroes": 23,
    "numConstOnes": 43,
    "UncondBranches": 28,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 34,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 42,
    "NumBitCastInst": 21,
    "NumBrInst": 37,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 68,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 49,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 6,
    "NumZExtInst": 3,
    "TotalBlocks": 46,
    "TotalInsts": 269,
    "TotalMemInst": 175,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 130
  },
  "baseline_oz_instcount": 269,
  "knowledge_base_entry": [
    "--dce",
    "--gvn-hoist",
    "--reassociate",
    "--mem2reg",
    "--sccp",
    "--dse",
    "--sroa",
    "--lower-expect",
    "--mem2reg",
    "--sccp",
    "--dse",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--mem2reg",
    "--mergefunc",
    "--die",
    "--mergefunc",
    "--dce",
    "--loop-instsimplify",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--loop-instsimplify",
          "--post-inline-ee-instrument",
          "--barrier",
          "--lower-guard-intrinsic",
          "--flattencfg",
          "--mem2reg",
          "--dce",
          "--coro-elide",
          "--instcombine",
          "--mergefunc",
          "--globalopt",
          "--alignment-from-assumptions",
          "--coro-cleanup",
          "--indvars",
          "--name-anon-globals",
          "--deadargelim",
          "--loop-versioning-licm",
          "--load-store-vectorizer",
          "--loop-sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--loop-instsimplify",
      "--post-inline-ee-instrument",
      "--barrier",
      "--lower-guard-intrinsic",
      "--flattencfg",
      "--mem2reg",
      "--dce",
      "--coro-elide",
      "--instcombine",
      "--mergefunc",
      "--globalopt",
      "--alignment-from-assumptions",
      "--coro-cleanup",
      "--indvars",
      "--name-anon-globals",
      "--deadargelim",
      "--loop-versioning-licm",
      "--load-store-vectorizer",
      "--loop-sink"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}