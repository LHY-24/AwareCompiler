{
  "program_id": "tensorflow-v0_537.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 9,
    "onePred": 24,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 9,
    "oneSuccessor": 17,
    "twoPred": 13,
    "twoPredOneSuc": 1,
    "twoEach": 9,
    "twoSuccessor": 25,
    "morePreds": 5,
    "BB03Phi": 9,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 9,
    "BranchCount": 42,
    "returnInt": 5,
    "CriticalCount": 26,
    "NumEdges": 67,
    "const32Bit": 104,
    "const64Bit": 25,
    "numConstZeroes": 65,
    "numConstOnes": 28,
    "UncondBranches": 17,
    "binaryConstArg": 38,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 1,
    "NumAndInst": 20,
    "BlockMid": 0,
    "BlockLow": 55,
    "NumBitCastInst": 5,
    "NumBrInst": 42,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 29,
    "NumLShrInst": 1,
    "NumLoadInst": 13,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 10,
    "NumRetInst": 13,
    "NumSExtInst": 0,
    "NumSelectInst": 12,
    "NumShlInst": 7,
    "NumStoreInst": 7,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 55,
    "TotalInsts": 239,
    "TotalMemInst": 52,
    "TotalFuncs": 19,
    "ArgsPhi": 21,
    "testUnary": 43
  },
  "baseline_oz_instcount": 223,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--elim-avail-extern",
    "--memcpyopt",
    "--gvn",
    "--mergefunc",
    "--memcpyopt",
    "--gvn",
    "--mergefunc",
    "--instcombine",
    "--reassociate",
    "--licm",
    "--mldst-motion",
    "--mem2reg",
    "--slp-vectorizer",
    "--mergefunc",
    "--inline",
    "--globalopt",
    "--loweratomic",
    "--instcombine",
    "--adce",
    "--correlated-propagation",
    "--simplifycfg",
    "--gvn",
    "--newgvn",
    "--adce",
    "--ipsccp",
    "--jump-threading",
    "--loop-reroll",
    "--gvn",
    "--instcombine",
    "--reassociate",
    "--licm",
    "--mldst-motion",
    "--mem2reg",
    "--slp-vectorizer",
    "--mergefunc",
    "--inline",
    "--globalopt",
    "--loweratomic",
    "--instcombine",
    "--adce",
    "--die",
    "--sroa",
    "--loop-deletion",
    "--early-cse",
    "--prune-eh",
    "--jump-threading",
    "--dse",
    "--mergefunc",
    "--licm",
    "--instsimplify",
    "--simplifycfg",
    "--die",
    "--licm",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--adce",
    "--slp-vectorizer",
    "-loop-reduce",
    "--reassociate",
    "--ipsccp",
    "--globalopt",
    "--lower-expect",
    "--gvn-hoist",
    "--globalopt",
    "--gvn",
    "--load-store-vectorizer",
    "--gvn",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--mem2reg",
    "--instsimplify",
    "--jump-threading",
    "--prune-eh",
    "--instcombine",
    "--dce",
    "--aggressive-instcombine",
    "--lower-expect",
    "--nary-reassociate",
    "--instcombine",
    "--reassociate",
    "--early-cse-memssa",
    "--gvn",
    "--simplifycfg",
    "--jump-threading",
    "--nary-reassociate",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--mergefunc",
          "--loop-simplifycfg",
          "--lowerinvoke",
          "--coro-early",
          "--mldst-motion",
          "--redundant-dbg-inst-elim",
          "--slp-vectorizer",
          "--elim-avail-extern",
          "--infer-address-spaces",
          "--instcombine",
          "--sroa",
          "--float2int",
          "--canonicalize-aliases",
          "--gvn",
          "--die",
          "--tailcallelim",
          "--globaldce",
          "--coro-elide",
          "--mem2reg",
          "--cross-dso-cfi",
          "--loop-fusion",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+13.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--mergefunc",
      "--loop-simplifycfg",
      "--lowerinvoke",
      "--coro-early",
      "--mldst-motion",
      "--redundant-dbg-inst-elim",
      "--slp-vectorizer",
      "--elim-avail-extern",
      "--infer-address-spaces",
      "--instcombine",
      "--sroa",
      "--float2int",
      "--canonicalize-aliases",
      "--gvn",
      "--die",
      "--tailcallelim",
      "--globaldce",
      "--coro-elide",
      "--mem2reg",
      "--cross-dso-cfi",
      "--loop-fusion",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+13.9%"
  }
}