{
  "program_id": "github-v0_13421.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 6,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 10,
    "CriticalCount": 1,
    "NumEdges": 13,
    "const32Bit": 20,
    "const64Bit": 0,
    "numConstZeroes": 10,
    "numConstOnes": 12,
    "UncondBranches": 6,
    "binaryConstArg": 3,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 7,
    "NumBitCastInst": 1,
    "NumBrInst": 7,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 45,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 8,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 9,
    "TotalInsts": 99,
    "TotalMemInst": 79,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 58
  },
  "baseline_oz_instcount": 99,
  "knowledge_base_entry": [
    "--loop-versioning-licm",
    "--gvn-hoist",
    "-loop-reduce",
    "--jump-threading",
    "--sroa",
    "--reassociate",
    "--aggressive-instcombine",
    "--instsimplify",
    "--prune-eh",
    "--jump-threading",
    "--slsr",
    "--simplifycfg",
    "--mem2reg",
    "--loop-simplifycfg",
    "--mem2reg",
    "--mergefunc",
    "--newgvn",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-matrix-intrinsics",
          "--inferattrs",
          "--div-rem-pairs",
          "--rewrite-statepoints-for-gc",
          "--callsite-splitting",
          "--functionattrs",
          "--dce",
          "--loweratomic",
          "--loop-versioning",
          "--barrier",
          "--loop-unswitch",
          "--scalarizer",
          "--dse",
          "--ipconstprop",
          "--aggressive-instcombine",
          "--memcpyopt",
          "--early-cse",
          "--load-store-vectorizer",
          "--simple-loop-unswitch",
          "--strip",
          "--mergereturn",
          "--strip-debug-declare",
          "--loop-predication",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-matrix-intrinsics",
      "--inferattrs",
      "--div-rem-pairs",
      "--rewrite-statepoints-for-gc",
      "--callsite-splitting",
      "--functionattrs",
      "--dce",
      "--loweratomic",
      "--loop-versioning",
      "--barrier",
      "--loop-unswitch",
      "--scalarizer",
      "--dse",
      "--ipconstprop",
      "--aggressive-instcombine",
      "--memcpyopt",
      "--early-cse",
      "--load-store-vectorizer",
      "--simple-loop-unswitch",
      "--strip",
      "--mergereturn",
      "--strip-debug-declare",
      "--loop-predication",
      "--reassociate"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}