{
  "program_id": "linux-v0_9538.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 49,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 13,
    "oneSuccessor": 43,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 22,
    "morePreds": 8,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 82,
    "BeginPhi": 4,
    "BranchCount": 65,
    "returnInt": 23,
    "CriticalCount": 13,
    "NumEdges": 101,
    "const32Bit": 249,
    "const64Bit": 15,
    "numConstZeroes": 125,
    "numConstOnes": 99,
    "UncondBranches": 43,
    "binaryConstArg": 17,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 61,
    "NumAndInst": 4,
    "BlockMid": 11,
    "BlockLow": 75,
    "NumBitCastInst": 25,
    "NumBrInst": 65,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 80,
    "NumICmpInst": 26,
    "NumLShrInst": 1,
    "NumLoadInst": 172,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 4,
    "NumRetInst": 18,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 85,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 6,
    "NumZExtInst": 20,
    "TotalBlocks": 86,
    "TotalInsts": 641,
    "TotalMemInst": 442,
    "TotalFuncs": 26,
    "ArgsPhi": 10,
    "testUnary": 295
  },
  "baseline_oz_instcount": 641,
  "knowledge_base_entry": [
    "--loop-predication",
    "--gvn-hoist",
    "--die",
    "--mergefunc",
    "--ipsccp",
    "--inline",
    "--licm",
    "--aggressive-instcombine",
    "--jump-threading",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--instsimplify",
    "--early-cse",
    "--loop-reroll",
    "--instcombine",
    "--mergefunc",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--sroa",
    "--mem2reg",
    "--licm",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--mergefunc",
    "--jump-threading",
    "--newgvn",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--adce",
    "--gvn",
    "--mergefunc",
    "--adce",
    "--mergefunc",
    "--dce",
    "--load-store-vectorizer",
    "--dse",
    "--bdce",
    "--inline",
    "--aggressive-instcombine",
    "--flattencfg",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--redundant-dbg-inst-elim",
          "--die",
          "--libcalls-shrinkwrap",
          "--always-inline",
          "--slp-vectorizer",
          "--guard-widening",
          "--gvn-hoist",
          "--ee-instrument",
          "--coro-elide",
          "--instnamer",
          "--loop-interchange",
          "--loop-load-elim",
          "--aggressive-instcombine",
          "--mergereturn",
          "--elim-avail-extern",
          "--constmerge",
          "--separate-const-offset-from-gep"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--redundant-dbg-inst-elim",
      "--die",
      "--libcalls-shrinkwrap",
      "--always-inline",
      "--slp-vectorizer",
      "--guard-widening",
      "--gvn-hoist",
      "--ee-instrument",
      "--coro-elide",
      "--instnamer",
      "--loop-interchange",
      "--loop-load-elim",
      "--aggressive-instcombine",
      "--mergereturn",
      "--elim-avail-extern",
      "--constmerge",
      "--separate-const-offset-from-gep"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}