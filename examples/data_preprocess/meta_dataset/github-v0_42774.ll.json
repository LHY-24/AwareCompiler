{
  "program_id": "github-v0_42774.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 3,
    "onePred": 36,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 3,
    "oneSuccessor": 35,
    "twoPred": 37,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 39,
    "morePreds": 1,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 100,
    "BeginPhi": 6,
    "BranchCount": 74,
    "returnInt": 32,
    "CriticalCount": 42,
    "NumEdges": 113,
    "const32Bit": 51,
    "const64Bit": 62,
    "numConstZeroes": 40,
    "numConstOnes": 3,
    "UncondBranches": 35,
    "binaryConstArg": 72,
    "NumAShrInst": 31,
    "NumAddInst": 21,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 10,
    "BlockLow": 96,
    "NumBitCastInst": 0,
    "NumBrInst": 74,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 135,
    "NumICmpInst": 39,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 12,
    "NumOrInst": 3,
    "NumPHIInst": 13,
    "NumRetInst": 32,
    "NumSExtInst": 70,
    "NumSelectInst": 0,
    "NumShlInst": 31,
    "NumStoreInst": 32,
    "NumSubInst": 5,
    "NumTruncInst": 32,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 106,
    "TotalInsts": 650,
    "TotalMemInst": 262,
    "TotalFuncs": 49,
    "ArgsPhi": 27,
    "testUnary": 146
  },
  "baseline_oz_instcount": 655,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--licm",
    "--early-cse",
    "--prune-eh",
    "--sroa",
    "--reassociate",
    "--instsimplify",
    "--nary-reassociate",
    "-loop-reduce",
    "--gvn-hoist",
    "--instsimplify",
    "--elim-avail-extern",
    "--reassociate",
    "--instcombine",
    "--dse",
    "--die",
    "--mem2reg",
    "--simplifycfg",
    "--dce",
    "--newgvn",
    "--prune-eh",
    "--loop-simplifycfg",
    "--newgvn",
    "--gvn-hoist",
    "--gvn",
    "-loop-reduce",
    "--early-cse-memssa",
    "--prune-eh",
    "--jump-threading",
    "--mergefunc",
    "--die",
    "--sccp",
    "--early-cse-memssa",
    "--instcombine",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--early-cse",
    "--slsr",
    "--jump-threading",
    "--inline",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--mergefunc",
    "--instsimplify",
    "--jump-threading",
    "--dce",
    "--load-store-vectorizer",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--called-value-propagation",
          "--loop-unroll-and-jam",
          "--early-cse",
          "--flattencfg",
          "--load-store-vectorizer",
          "--infer-address-spaces",
          "--globalopt",
          "--mergefunc",
          "--lower-guard-intrinsic",
          "--simple-loop-unswitch",
          "--loop-guard-widening",
          "--globalsplit",
          "--lower-constant-intrinsics",
          "--correlated-propagation",
          "--separate-const-offset-from-gep",
          "--gvn-hoist",
          "--loweratomic",
          "--constmerge",
          "--irce",
          "--sink",
          "--loop-load-elim",
          "--scalarizer",
          "--prune-eh",
          "--inline",
          "--loop-distribute",
          "--rewrite-statepoints-for-gc",
          "--partially-inline-libcalls",
          "--simplifycfg",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--called-value-propagation",
      "--loop-unroll-and-jam",
      "--early-cse",
      "--flattencfg",
      "--load-store-vectorizer",
      "--infer-address-spaces",
      "--globalopt",
      "--mergefunc",
      "--lower-guard-intrinsic",
      "--simple-loop-unswitch",
      "--loop-guard-widening",
      "--globalsplit",
      "--lower-constant-intrinsics",
      "--correlated-propagation",
      "--separate-const-offset-from-gep",
      "--gvn-hoist",
      "--loweratomic",
      "--constmerge",
      "--irce",
      "--sink",
      "--loop-load-elim",
      "--scalarizer",
      "--prune-eh",
      "--inline",
      "--loop-distribute",
      "--rewrite-statepoints-for-gc",
      "--partially-inline-libcalls",
      "--simplifycfg",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}