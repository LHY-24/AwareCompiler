{
  "program_id": "github-v0_48789.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 5,
    "oneSuccessor": 16,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 25,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 34,
    "const32Bit": 60,
    "const64Bit": 111,
    "numConstZeroes": 108,
    "numConstOnes": 39,
    "UncondBranches": 16,
    "binaryConstArg": 31,
    "NumAShrInst": 6,
    "NumAddInst": 4,
    "NumAllocaInst": 15,
    "NumAndInst": 12,
    "BlockMid": 8,
    "BlockLow": 21,
    "NumBitCastInst": 20,
    "NumBrInst": 25,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 51,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 33,
    "NumSubInst": 2,
    "NumTruncInst": 10,
    "NumXorInst": 1,
    "NumZExtInst": 22,
    "TotalBlocks": 29,
    "TotalInsts": 308,
    "TotalMemInst": 174,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 123
  },
  "baseline_oz_instcount": 308,
  "knowledge_base_entry": [
    "--dce",
    "--loop-instsimplify",
    "--die",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--early-cse-memssa",
    "--mem2reg",
    "--aggressive-instcombine",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--instcombine",
          "--coro-early",
          "--lower-constant-intrinsics",
          "--loop-distribute",
          "--infer-address-spaces",
          "-loop-reduce",
          "--early-cse",
          "--slp-vectorizer",
          "--flattencfg",
          "--constprop",
          "--aggressive-instcombine",
          "--jump-threading",
          "--sink",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--instcombine",
      "--coro-early",
      "--lower-constant-intrinsics",
      "--loop-distribute",
      "--infer-address-spaces",
      "-loop-reduce",
      "--early-cse",
      "--slp-vectorizer",
      "--flattencfg",
      "--constprop",
      "--aggressive-instcombine",
      "--jump-threading",
      "--sink",
      "--barrier"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}