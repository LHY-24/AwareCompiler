{
  "program_id": "github-v0_25717.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 5,
    "oneSuccessor": 10,
    "twoPred": 3,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 3,
    "CriticalCount": 3,
    "NumEdges": 24,
    "const32Bit": 26,
    "const64Bit": 5,
    "numConstZeroes": 12,
    "numConstOnes": 14,
    "UncondBranches": 10,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 18,
    "NumBitCastInst": 2,
    "NumBrInst": 17,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 17,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 15,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 19,
    "TotalInsts": 81,
    "TotalMemInst": 50,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 28
  },
  "baseline_oz_instcount": 84,
  "knowledge_base_entry": [
    "--dse",
    "--licm",
    "--instsimplify",
    "--bdce",
    "--die",
    "--gvn-hoist",
    "--lower-expect",
    "--elim-avail-extern",
    "--inline",
    "--aggressive-instcombine",
    "--mergefunc",
    "--memcpyopt",
    "--licm",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--hotcoldsplit",
          "--lower-expect",
          "--constmerge",
          "--barrier",
          "--rpo-functionattrs",
          "--simplifycfg",
          "--dce",
          "--prune-eh",
          "--instsimplify",
          "--deadargelim",
          "--loop-interchange",
          "--float2int",
          "--memcpyopt",
          "--loop-instsimplify",
          "--mergefunc",
          "--gvn-hoist",
          "--simple-loop-unswitch",
          "--ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--hotcoldsplit",
      "--lower-expect",
      "--constmerge",
      "--barrier",
      "--rpo-functionattrs",
      "--simplifycfg",
      "--dce",
      "--prune-eh",
      "--instsimplify",
      "--deadargelim",
      "--loop-interchange",
      "--float2int",
      "--memcpyopt",
      "--loop-instsimplify",
      "--mergefunc",
      "--gvn-hoist",
      "--simple-loop-unswitch",
      "--ee-instrument"
    ],
    "performance_vs_Oz": "+3.6%"
  }
}