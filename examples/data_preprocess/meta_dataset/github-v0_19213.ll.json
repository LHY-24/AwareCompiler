{
  "program_id": "github-v0_19213.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 30,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 7,
    "oneSuccessor": 27,
    "twoPred": 16,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 21,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 62,
    "BeginPhi": 0,
    "BranchCount": 48,
    "returnInt": 9,
    "CriticalCount": 12,
    "NumEdges": 69,
    "const32Bit": 205,
    "const64Bit": 13,
    "numConstZeroes": 98,
    "numConstOnes": 69,
    "UncondBranches": 27,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 49,
    "NumAndInst": 2,
    "BlockMid": 14,
    "BlockLow": 48,
    "NumBitCastInst": 19,
    "NumBrInst": 48,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 71,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 168,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 81,
    "NumSubInst": 7,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 8,
    "TotalBlocks": 62,
    "TotalInsts": 533,
    "TotalMemInst": 398,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 250
  },
  "baseline_oz_instcount": 533,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--simplifycfg",
    "--loop-deletion",
    "--jump-threading",
    "--die",
    "--early-cse-memssa",
    "--gvn",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--loop-reroll",
          "--loop-vectorize",
          "--deadargelim",
          "--infer-address-spaces",
          "--aggressive-instcombine",
          "--ipsccp",
          "--inline",
          "--loop-idiom",
          "--functionattrs",
          "--scalarizer",
          "--rpo-functionattrs",
          "--loop-versioning",
          "--argpromotion",
          "--insert-gcov-profiling",
          "--sccp",
          "--mergefunc",
          "--ee-instrument",
          "--libcalls-shrinkwrap",
          "--newgvn",
          "--globaldce",
          "--loop-simplify",
          "--lowerinvoke",
          "--strip-debug-declare",
          "--dse",
          "--lower-matrix-intrinsics",
          "--lower-guard-intrinsic",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--loop-reroll",
      "--loop-vectorize",
      "--deadargelim",
      "--infer-address-spaces",
      "--aggressive-instcombine",
      "--ipsccp",
      "--inline",
      "--loop-idiom",
      "--functionattrs",
      "--scalarizer",
      "--rpo-functionattrs",
      "--loop-versioning",
      "--argpromotion",
      "--insert-gcov-profiling",
      "--sccp",
      "--mergefunc",
      "--ee-instrument",
      "--libcalls-shrinkwrap",
      "--newgvn",
      "--globaldce",
      "--loop-simplify",
      "--lowerinvoke",
      "--strip-debug-declare",
      "--dse",
      "--lower-matrix-intrinsics",
      "--lower-guard-intrinsic",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}