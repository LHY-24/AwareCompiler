{
  "program_id": "linux-v0_3170.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 56,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 17,
    "oneSuccessor": 47,
    "twoPred": 14,
    "twoPredOneSuc": 5,
    "twoEach": 6,
    "twoSuccessor": 27,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 88,
    "BeginPhi": 1,
    "BranchCount": 74,
    "returnInt": 21,
    "CriticalCount": 8,
    "NumEdges": 101,
    "const32Bit": 348,
    "const64Bit": 26,
    "numConstZeroes": 202,
    "numConstOnes": 106,
    "UncondBranches": 47,
    "binaryConstArg": 23,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 68,
    "NumAndInst": 9,
    "BlockMid": 17,
    "BlockLow": 72,
    "NumBitCastInst": 26,
    "NumBrInst": 74,
    "NumCallInst": 66,
    "NumGetElementPtrInst": 126,
    "NumICmpInst": 28,
    "NumLShrInst": 3,
    "NumLoadInst": 214,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 15,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 99,
    "NumSubInst": 3,
    "NumTruncInst": 9,
    "NumXorInst": 8,
    "NumZExtInst": 26,
    "TotalBlocks": 89,
    "TotalInsts": 794,
    "TotalMemInst": 573,
    "TotalFuncs": 46,
    "ArgsPhi": 2,
    "testUnary": 357
  },
  "baseline_oz_instcount": 785,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--nary-reassociate",
    "--gvn-hoist",
    "--ipsccp",
    "--sroa",
    "--sccp",
    "--globalopt",
    "--ipsccp",
    "--lower-expect",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--globalsplit",
          "--lowerinvoke",
          "--add-discriminators",
          "--separate-const-offset-from-gep",
          "--sancov",
          "--strip-nondebug",
          "--inferattrs",
          "--globalopt",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--globalsplit",
      "--lowerinvoke",
      "--add-discriminators",
      "--separate-const-offset-from-gep",
      "--sancov",
      "--strip-nondebug",
      "--inferattrs",
      "--globalopt",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}