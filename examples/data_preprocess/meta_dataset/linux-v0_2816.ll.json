{
  "program_id": "linux-v0_2816.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 62,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 24,
    "oneSuccessor": 45,
    "twoPred": 21,
    "twoPredOneSuc": 7,
    "twoEach": 14,
    "twoSuccessor": 40,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 85,
    "BeginPhi": 2,
    "BranchCount": 85,
    "returnInt": 24,
    "CriticalCount": 22,
    "NumEdges": 125,
    "const32Bit": 321,
    "const64Bit": 11,
    "numConstZeroes": 122,
    "numConstOnes": 65,
    "UncondBranches": 45,
    "binaryConstArg": 42,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 59,
    "NumAndInst": 28,
    "BlockMid": 12,
    "BlockLow": 75,
    "NumBitCastInst": 49,
    "NumBrInst": 85,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 105,
    "NumICmpInst": 40,
    "NumLShrInst": 0,
    "NumLoadInst": 169,
    "NumMulInst": 9,
    "NumOrInst": 4,
    "NumPHIInst": 2,
    "NumRetInst": 2,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 100,
    "NumSubInst": 0,
    "NumTruncInst": 23,
    "NumXorInst": 1,
    "NumZExtInst": 48,
    "TotalBlocks": 87,
    "TotalInsts": 797,
    "TotalMemInst": 482,
    "TotalFuncs": 13,
    "ArgsPhi": 4,
    "testUnary": 363
  },
  "baseline_oz_instcount": 797,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unswitch",
          "--barrier",
          "--sroa",
          "--load-store-vectorizer",
          "--early-cse",
          "--ipsccp",
          "--name-anon-globals",
          "--lowerinvoke",
          "--loop-distribute",
          "--alignment-from-assumptions",
          "--lower-widenable-condition",
          "--slp-vectorizer",
          "--sancov",
          "--licm",
          "--simplifycfg",
          "--aggressive-instcombine",
          "--inline",
          "--rpo-functionattrs",
          "--globaldce",
          "--speculative-execution",
          "--div-rem-pairs",
          "--lower-expect",
          "--add-discriminators",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unswitch",
      "--barrier",
      "--sroa",
      "--load-store-vectorizer",
      "--early-cse",
      "--ipsccp",
      "--name-anon-globals",
      "--lowerinvoke",
      "--loop-distribute",
      "--alignment-from-assumptions",
      "--lower-widenable-condition",
      "--slp-vectorizer",
      "--sancov",
      "--licm",
      "--simplifycfg",
      "--aggressive-instcombine",
      "--inline",
      "--rpo-functionattrs",
      "--globaldce",
      "--speculative-execution",
      "--div-rem-pairs",
      "--lower-expect",
      "--add-discriminators",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+3.1%"
  }
}