{
  "program_id": "github-v0_48250.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 38,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 1,
    "oneSuccessor": 38,
    "twoPred": 14,
    "twoPredOneSuc": 1,
    "twoEach": 13,
    "twoSuccessor": 14,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 56,
    "BeginPhi": 0,
    "BranchCount": 52,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 66,
    "const32Bit": 178,
    "const64Bit": 91,
    "numConstZeroes": 99,
    "numConstOnes": 67,
    "UncondBranches": 38,
    "binaryConstArg": 105,
    "NumAShrInst": 7,
    "NumAddInst": 41,
    "NumAllocaInst": 25,
    "NumAndInst": 22,
    "BlockMid": 8,
    "BlockLow": 48,
    "NumBitCastInst": 0,
    "NumBrInst": 52,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 98,
    "NumICmpInst": 14,
    "NumLShrInst": 3,
    "NumLoadInst": 158,
    "NumMulInst": 23,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 78,
    "NumSubInst": 10,
    "NumTruncInst": 16,
    "NumXorInst": 12,
    "NumZExtInst": 63,
    "TotalBlocks": 56,
    "TotalInsts": 657,
    "TotalMemInst": 371,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 278
  },
  "baseline_oz_instcount": 657,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--globalopt",
    "--loop-deletion",
    "--mem2reg",
    "--aggressive-instcombine",
    "--newgvn",
    "--bdce",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--newgvn",
    "--mem2reg",
    "--aggressive-instcombine",
    "--reassociate",
    "--prune-eh",
    "--licm",
    "--gvn",
    "--inline",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--loop-guard-widening",
          "--jump-threading",
          "--loop-unroll-and-jam",
          "--dce",
          "--guard-widening",
          "--sink",
          "--slsr",
          "--sccp",
          "--indvars",
          "--loop-versioning-licm",
          "--coro-early",
          "--name-anon-globals",
          "--simple-loop-unswitch",
          "--nary-reassociate",
          "--loop-data-prefetch",
          "--loop-load-elim",
          "--functionattrs",
          "--coro-elide",
          "--aggressive-instcombine",
          "--mldst-motion",
          "--constmerge",
          "--loop-instsimplify",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--loop-guard-widening",
      "--jump-threading",
      "--loop-unroll-and-jam",
      "--dce",
      "--guard-widening",
      "--sink",
      "--slsr",
      "--sccp",
      "--indvars",
      "--loop-versioning-licm",
      "--coro-early",
      "--name-anon-globals",
      "--simple-loop-unswitch",
      "--nary-reassociate",
      "--loop-data-prefetch",
      "--loop-load-elim",
      "--functionattrs",
      "--coro-elide",
      "--aggressive-instcombine",
      "--mldst-motion",
      "--constmerge",
      "--loop-instsimplify",
      "--bdce"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}