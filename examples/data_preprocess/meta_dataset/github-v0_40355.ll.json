{
  "program_id": "github-v0_40355.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 34,
    "const64Bit": 39,
    "numConstZeroes": 39,
    "numConstOnes": 25,
    "UncondBranches": 13,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 19,
    "NumBitCastInst": 4,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 24,
    "TotalInsts": 181,
    "TotalMemInst": 113,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 80
  },
  "baseline_oz_instcount": 181,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--loweratomic",
    "--instcombine",
    "--dse",
    "--inline",
    "--newgvn",
    "-loop-reduce",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--bdce",
    "--gvn",
    "--dce",
    "--sroa",
    "--mldst-motion",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--loop-load-elim",
          "--inline",
          "--aggressive-instcombine",
          "--mergereturn",
          "--loop-data-prefetch",
          "--nary-reassociate",
          "--loop-instsimplify",
          "--loop-reroll",
          "--lower-guard-intrinsic",
          "--ipconstprop",
          "--callsite-splitting",
          "--forceattrs",
          "--always-inline",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--loop-load-elim",
      "--inline",
      "--aggressive-instcombine",
      "--mergereturn",
      "--loop-data-prefetch",
      "--nary-reassociate",
      "--loop-instsimplify",
      "--loop-reroll",
      "--lower-guard-intrinsic",
      "--ipconstprop",
      "--callsite-splitting",
      "--forceattrs",
      "--always-inline",
      "--barrier"
    ],
    "performance_vs_Oz": "+3.3%"
  }
}