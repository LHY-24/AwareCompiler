{
  "program_id": "poj104-v1_62_2350.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 2,
    "oneSuccessor": 5,
    "twoPred": 3,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 11,
    "const32Bit": 13,
    "const64Bit": 5,
    "numConstZeroes": 4,
    "numConstOnes": 10,
    "UncondBranches": 5,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 13,
    "NumBitCastInst": 2,
    "NumBrInst": 8,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 7,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 8,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 13,
    "TotalInsts": 53,
    "TotalMemInst": 32,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 17
  },
  "baseline_oz_instcount": 27,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--licm",
    "--lower-expect",
    "--prune-eh",
    "--jump-threading",
    "--adce",
    "--die",
    "--elim-avail-extern",
    "--instcombine",
    "--correlated-propagation",
    "--simplifycfg",
    "--ipsccp",
    "--correlated-propagation",
    "--adce",
    "--slp-vectorizer",
    "-loop-reduce",
    "--newgvn",
    "--mergefunc",
    "--early-cse",
    "--sroa",
    "--slp-vectorizer",
    "--sroa",
    "--loop-instsimplify",
    "--mergefunc",
    "--instsimplify",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--die",
    "--elim-avail-extern",
    "--simplifycfg",
    "--mldst-motion",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--instsimplify",
    "--jump-threading",
    "-loop-reduce",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--bdce",
    "--simplifycfg",
    "--elim-avail-extern",
    "--simplifycfg",
    "--instsimplify",
    "--inline",
    "--die",
    "--newgvn",
    "--mergefunc",
    "--early-cse",
    "--sroa",
    "--slp-vectorizer",
    "--sroa",
    "--loop-instsimplify",
    "--mergefunc",
    "--instsimplify",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--die",
    "--elim-avail-extern",
    "--jump-threading",
    "--adce",
    "--gvn",
    "--globalopt",
    "--early-cse",
    "--elim-avail-extern",
    "--reassociate",
    "--early-cse",
    "--sccp",
    "--instcombine",
    "--correlated-propagation",
    "--simplifycfg",
    "--ipsccp",
    "--correlated-propagation",
    "--adce",
    "--slp-vectorizer",
    "-loop-reduce",
    "--newgvn",
    "--mergefunc",
    "--early-cse",
    "--sroa",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "-loop-reduce",
          "--partially-inline-libcalls",
          "--elim-avail-extern",
          "--newgvn",
          "--lower-matrix-intrinsics",
          "--mem2reg",
          "--ipconstprop",
          "--reg2mem",
          "--deadargelim",
          "--guard-widening",
          "--sroa",
          "--break-crit-edges",
          "--lcssa",
          "--alignment-from-assumptions",
          "--irce",
          "--loop-fusion",
          "--slp-vectorizer",
          "--partial-inliner",
          "--loop-unroll",
          "--indvars",
          "--loop-unroll-and-jam",
          "--inject-tli-mappings",
          "--jump-threading",
          "--speculative-execution",
          "--gvn",
          "--licm",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+14.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "-loop-reduce",
      "--partially-inline-libcalls",
      "--elim-avail-extern",
      "--newgvn",
      "--lower-matrix-intrinsics",
      "--mem2reg",
      "--ipconstprop",
      "--reg2mem",
      "--deadargelim",
      "--guard-widening",
      "--sroa",
      "--break-crit-edges",
      "--lcssa",
      "--alignment-from-assumptions",
      "--irce",
      "--loop-fusion",
      "--slp-vectorizer",
      "--partial-inliner",
      "--loop-unroll",
      "--indvars",
      "--loop-unroll-and-jam",
      "--inject-tli-mappings",
      "--jump-threading",
      "--speculative-execution",
      "--gvn",
      "--licm",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+14.8%"
  }
}