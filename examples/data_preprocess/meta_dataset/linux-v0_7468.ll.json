{
  "program_id": "linux-v0_7468.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 5,
    "oneSuccessor": 21,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 11,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 0,
    "BranchCount": 31,
    "returnInt": 14,
    "CriticalCount": 1,
    "NumEdges": 46,
    "const32Bit": 203,
    "const64Bit": 14,
    "numConstZeroes": 83,
    "numConstOnes": 70,
    "UncondBranches": 21,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 63,
    "NumAndInst": 4,
    "BlockMid": 10,
    "BlockLow": 48,
    "NumBitCastInst": 18,
    "NumBrInst": 31,
    "NumCallInst": 60,
    "NumGetElementPtrInst": 62,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 142,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 95,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 1,
    "TotalBlocks": 58,
    "TotalInsts": 529,
    "TotalMemInst": 422,
    "TotalFuncs": 42,
    "ArgsPhi": 0,
    "testUnary": 237
  },
  "baseline_oz_instcount": 530,
  "knowledge_base_entry": [
    "--loop-predication",
    "--instcombine",
    "--dse",
    "--newgvn",
    "--gvn",
    "--flattencfg",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--newgvn",
    "--aggressive-instcombine",
    "--early-cse",
    "--gvn",
    "-loop-reduce",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--reassociate",
    "--mem2reg",
    "--mldst-motion",
    "--simplifycfg",
    "--loop-instsimplify",
    "--licm",
    "--memcpyopt",
    "--early-cse",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--aggressive-instcombine",
          "--simplifycfg",
          "--memcpyopt",
          "--post-inline-ee-instrument",
          "--coro-elide",
          "--scalarizer",
          "--ipconstprop",
          "--separate-const-offset-from-gep",
          "--libcalls-shrinkwrap",
          "--coro-early",
          "--callsite-splitting",
          "--loop-interchange",
          "--gvn",
          "--loop-idiom",
          "--loop-load-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--aggressive-instcombine",
      "--simplifycfg",
      "--memcpyopt",
      "--post-inline-ee-instrument",
      "--coro-elide",
      "--scalarizer",
      "--ipconstprop",
      "--separate-const-offset-from-gep",
      "--libcalls-shrinkwrap",
      "--coro-early",
      "--callsite-splitting",
      "--loop-interchange",
      "--gvn",
      "--loop-idiom",
      "--loop-load-elim"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}