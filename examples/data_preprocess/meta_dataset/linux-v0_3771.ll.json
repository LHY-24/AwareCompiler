{
  "program_id": "linux-v0_3771.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 28,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 7,
    "oneSuccessor": 24,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 0,
    "BranchCount": 37,
    "returnInt": 8,
    "CriticalCount": 2,
    "NumEdges": 50,
    "const32Bit": 44,
    "const64Bit": 29,
    "numConstZeroes": 25,
    "numConstOnes": 28,
    "UncondBranches": 24,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 41,
    "NumBitCastInst": 0,
    "NumBrInst": 37,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 38,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 31,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 41,
    "TotalInsts": 169,
    "TotalMemInst": 105,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 57
  },
  "baseline_oz_instcount": 171,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--elim-avail-extern",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globaldce",
          "--inline",
          "--post-inline-ee-instrument",
          "--prune-eh",
          "--globalopt",
          "--called-value-propagation",
          "--forceattrs",
          "--argpromotion",
          "--loop-distribute",
          "--mergeicmps",
          "--infer-address-spaces",
          "--dce",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globaldce",
      "--inline",
      "--post-inline-ee-instrument",
      "--prune-eh",
      "--globalopt",
      "--called-value-propagation",
      "--forceattrs",
      "--argpromotion",
      "--loop-distribute",
      "--mergeicmps",
      "--infer-address-spaces",
      "--dce",
      "--strip"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}