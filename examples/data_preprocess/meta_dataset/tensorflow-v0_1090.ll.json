{
  "program_id": "tensorflow-v0_1090.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 2,
    "oneSuccessor": 1,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 1,
    "CriticalCount": 2,
    "NumEdges": 7,
    "const32Bit": 1,
    "const64Bit": 2,
    "numConstZeroes": 4,
    "numConstOnes": 0,
    "UncondBranches": 1,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 6,
    "NumBitCastInst": 0,
    "NumBrInst": 3,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 2,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 1,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 6,
    "TotalInsts": 16,
    "TotalMemInst": 8,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 2
  },
  "baseline_oz_instcount": 16,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--ipsccp",
    "--loop-simplifycfg",
    "--die",
    "--elim-avail-extern",
    "--gvn",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--loop-unroll-and-jam",
          "--sancov",
          "--loop-interchange",
          "--insert-gcov-profiling",
          "--loop-rotate",
          "--irce",
          "--ipsccp",
          "--loop-load-elim",
          "--loop-distribute",
          "--scalarizer",
          "--lower-guard-intrinsic",
          "--partially-inline-libcalls",
          "--loop-unswitch",
          "--lcssa",
          "--strip-debug-declare",
          "--simplifycfg",
          "--mergefunc",
          "--libcalls-shrinkwrap",
          "--mergeicmps",
          "--slsr"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+18.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--loop-unroll-and-jam",
      "--sancov",
      "--loop-interchange",
      "--insert-gcov-profiling",
      "--loop-rotate",
      "--irce",
      "--ipsccp",
      "--loop-load-elim",
      "--loop-distribute",
      "--scalarizer",
      "--lower-guard-intrinsic",
      "--partially-inline-libcalls",
      "--loop-unswitch",
      "--lcssa",
      "--strip-debug-declare",
      "--simplifycfg",
      "--mergefunc",
      "--libcalls-shrinkwrap",
      "--mergeicmps",
      "--slsr"
    ],
    "performance_vs_Oz": "+18.8%"
  }
}