{
  "program_id": "github-v0_19016.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 3,
    "oneSuccessor": 12,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 26,
    "const32Bit": 32,
    "const64Bit": 38,
    "numConstZeroes": 40,
    "numConstOnes": 24,
    "UncondBranches": 12,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 19,
    "NumBitCastInst": 8,
    "NumBrInst": 19,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 24,
    "TotalBlocks": 23,
    "TotalInsts": 198,
    "TotalMemInst": 119,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 98
  },
  "baseline_oz_instcount": 198,
  "knowledge_base_entry": [
    "--loop-versioning-licm",
    "--jump-threading",
    "--sccp",
    "--mem2reg",
    "--aggressive-instcombine",
    "--dce",
    "--aggressive-instcombine",
    "--adce",
    "--slp-vectorizer",
    "--lower-expect",
    "--newgvn",
    "--loop-fusion",
    "--jump-threading",
    "--sccp",
    "--mem2reg",
    "--aggressive-instcombine",
    "--mem2reg",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--cross-dso-cfi",
          "--partially-inline-libcalls",
          "--infer-address-spaces",
          "--attributor",
          "--adce",
          "--argpromotion",
          "--early-cse-memssa",
          "--globaldce",
          "--loop-idiom",
          "--coro-elide",
          "--memcpyopt",
          "--mem2reg",
          "--gvn-hoist",
          "--alignment-from-assumptions",
          "--guard-widening",
          "--aggressive-instcombine",
          "--loop-load-elim",
          "--loop-simplify",
          "--barrier",
          "--speculative-execution",
          "--loop-versioning",
          "--coro-cleanup",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--cross-dso-cfi",
      "--partially-inline-libcalls",
      "--infer-address-spaces",
      "--attributor",
      "--adce",
      "--argpromotion",
      "--early-cse-memssa",
      "--globaldce",
      "--loop-idiom",
      "--coro-elide",
      "--memcpyopt",
      "--mem2reg",
      "--gvn-hoist",
      "--alignment-from-assumptions",
      "--guard-widening",
      "--aggressive-instcombine",
      "--loop-load-elim",
      "--loop-simplify",
      "--barrier",
      "--speculative-execution",
      "--loop-versioning",
      "--coro-cleanup",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+6.1%"
  }
}