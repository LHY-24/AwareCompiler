{
  "program_id": "linux-v0_4043.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 76,
    "onePredOneSuc": 50,
    "onePredTwoSuc": 23,
    "oneSuccessor": 67,
    "twoPred": 33,
    "twoPredOneSuc": 12,
    "twoEach": 16,
    "twoSuccessor": 47,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 127,
    "BeginPhi": 0,
    "BranchCount": 114,
    "returnInt": 13,
    "CriticalCount": 25,
    "NumEdges": 161,
    "const32Bit": 260,
    "const64Bit": 66,
    "numConstZeroes": 148,
    "numConstOnes": 112,
    "UncondBranches": 67,
    "binaryConstArg": 49,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 66,
    "NumAndInst": 20,
    "BlockMid": 10,
    "BlockLow": 117,
    "NumBitCastInst": 13,
    "NumBrInst": 114,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 67,
    "NumICmpInst": 46,
    "NumLShrInst": 10,
    "NumLoadInst": 244,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 148,
    "NumSubInst": 11,
    "NumTruncInst": 3,
    "NumXorInst": 13,
    "NumZExtInst": 18,
    "TotalBlocks": 127,
    "TotalInsts": 844,
    "TotalMemInst": 555,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 345
  },
  "baseline_oz_instcount": 845,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--instcombine",
    "--mergefunc",
    "--flattencfg",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--lower-expect",
    "--instsimplify",
    "--dce",
    "--ipsccp",
    "--aggressive-instcombine",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalopt",
          "--inject-tli-mappings",
          "--loop-unroll-and-jam",
          "--die",
          "--aggressive-instcombine",
          "--loop-vectorize",
          "--insert-gcov-profiling",
          "--consthoist",
          "--loop-reroll",
          "--simplifycfg",
          "--always-inline",
          "--sink",
          "--nary-reassociate",
          "--deadargelim",
          "--indvars",
          "--partial-inliner",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalopt",
      "--inject-tli-mappings",
      "--loop-unroll-and-jam",
      "--die",
      "--aggressive-instcombine",
      "--loop-vectorize",
      "--insert-gcov-profiling",
      "--consthoist",
      "--loop-reroll",
      "--simplifycfg",
      "--always-inline",
      "--sink",
      "--nary-reassociate",
      "--deadargelim",
      "--indvars",
      "--partial-inliner",
      "--gvn"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}