{
  "program_id": "linux-v0_9490.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 35,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 10,
    "oneSuccessor": 32,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 1,
    "twoSuccessor": 18,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 75,
    "BeginPhi": 1,
    "BranchCount": 50,
    "returnInt": 25,
    "CriticalCount": 14,
    "NumEdges": 75,
    "const32Bit": 258,
    "const64Bit": 19,
    "numConstZeroes": 97,
    "numConstOnes": 95,
    "UncondBranches": 32,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 74,
    "NumAndInst": 2,
    "BlockMid": 15,
    "BlockLow": 61,
    "NumBitCastInst": 12,
    "NumBrInst": 50,
    "NumCallInst": 81,
    "NumGetElementPtrInst": 57,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 169,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 1,
    "NumRetInst": 25,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 98,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 4,
    "NumZExtInst": 17,
    "TotalBlocks": 76,
    "TotalInsts": 634,
    "TotalMemInst": 479,
    "TotalFuncs": 45,
    "ArgsPhi": 2,
    "testUnary": 285
  },
  "baseline_oz_instcount": 635,
  "knowledge_base_entry": [
    "--dse",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--jump-threading",
    "--prune-eh",
    "--gvn",
    "--correlated-propagation",
    "--early-cse",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-sink",
          "--elim-avail-extern",
          "--infer-address-spaces",
          "--instcombine",
          "--loop-deletion",
          "--slp-vectorizer",
          "--newgvn",
          "--aggressive-instcombine",
          "--instsimplify",
          "--cross-dso-cfi",
          "--prune-eh",
          "--alignment-from-assumptions",
          "--loop-rotate",
          "--forceattrs",
          "--loop-versioning",
          "--partial-inliner",
          "--globalopt",
          "--mergereturn",
          "--called-value-propagation",
          "--sccp",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-sink",
      "--elim-avail-extern",
      "--infer-address-spaces",
      "--instcombine",
      "--loop-deletion",
      "--slp-vectorizer",
      "--newgvn",
      "--aggressive-instcombine",
      "--instsimplify",
      "--cross-dso-cfi",
      "--prune-eh",
      "--alignment-from-assumptions",
      "--loop-rotate",
      "--forceattrs",
      "--loop-versioning",
      "--partial-inliner",
      "--globalopt",
      "--mergereturn",
      "--called-value-propagation",
      "--sccp",
      "--early-cse"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}