{
  "program_id": "linux-v0_7226.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 60,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 22,
    "oneSuccessor": 55,
    "twoPred": 19,
    "twoPredOneSuc": 14,
    "twoEach": 3,
    "twoSuccessor": 26,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 103,
    "BeginPhi": 1,
    "BranchCount": 81,
    "returnInt": 15,
    "CriticalCount": 4,
    "NumEdges": 107,
    "const32Bit": 234,
    "const64Bit": 22,
    "numConstZeroes": 100,
    "numConstOnes": 90,
    "UncondBranches": 55,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 78,
    "NumAndInst": 4,
    "BlockMid": 13,
    "BlockLow": 91,
    "NumBitCastInst": 17,
    "NumBrInst": 81,
    "NumCallInst": 47,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 186,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 23,
    "NumSExtInst": 22,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 111,
    "NumSubInst": 6,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 11,
    "TotalBlocks": 104,
    "TotalInsts": 707,
    "TotalMemInst": 492,
    "TotalFuncs": 36,
    "ArgsPhi": 2,
    "testUnary": 328
  },
  "baseline_oz_instcount": 707,
  "knowledge_base_entry": [
    "--loop-predication",
    "--gvn",
    "--correlated-propagation",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--mergefunc",
    "--instcombine",
    "--jump-threading",
    "--sccp",
    "--bdce",
    "--aggressive-instcombine",
    "--globalopt",
    "--elim-avail-extern",
    "--globalopt",
    "--inline",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--flattencfg",
          "-loop-reduce",
          "--mergefunc",
          "--name-anon-globals",
          "--simplifycfg",
          "--rpo-functionattrs",
          "--consthoist",
          "--licm",
          "--partial-inliner",
          "--lower-expect",
          "--loop-deletion",
          "--strip-debug-declare",
          "--div-rem-pairs",
          "--lower-widenable-condition",
          "--loop-sink",
          "--sink",
          "--inline",
          "--jump-threading",
          "--loop-reroll",
          "--barrier",
          "--elim-avail-extern",
          "--canonicalize-aliases",
          "--early-cse-memssa",
          "--lowerswitch",
          "--slsr",
          "--loop-simplify",
          "--gvn-hoist",
          "--callsite-splitting",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--flattencfg",
      "-loop-reduce",
      "--mergefunc",
      "--name-anon-globals",
      "--simplifycfg",
      "--rpo-functionattrs",
      "--consthoist",
      "--licm",
      "--partial-inliner",
      "--lower-expect",
      "--loop-deletion",
      "--strip-debug-declare",
      "--div-rem-pairs",
      "--lower-widenable-condition",
      "--loop-sink",
      "--sink",
      "--inline",
      "--jump-threading",
      "--loop-reroll",
      "--barrier",
      "--elim-avail-extern",
      "--canonicalize-aliases",
      "--early-cse-memssa",
      "--lowerswitch",
      "--slsr",
      "--loop-simplify",
      "--gvn-hoist",
      "--callsite-splitting",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}