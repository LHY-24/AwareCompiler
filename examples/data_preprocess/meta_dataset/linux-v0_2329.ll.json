{
  "program_id": "linux-v0_2329.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 47,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 15,
    "oneSuccessor": 40,
    "twoPred": 20,
    "twoPredOneSuc": 8,
    "twoEach": 9,
    "twoSuccessor": 30,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 89,
    "BeginPhi": 0,
    "BranchCount": 70,
    "returnInt": 12,
    "CriticalCount": 19,
    "NumEdges": 100,
    "const32Bit": 253,
    "const64Bit": 9,
    "numConstZeroes": 124,
    "numConstOnes": 87,
    "UncondBranches": 40,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 52,
    "NumAndInst": 8,
    "BlockMid": 6,
    "BlockLow": 83,
    "NumBitCastInst": 12,
    "NumBrInst": 70,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 72,
    "NumICmpInst": 33,
    "NumLShrInst": 3,
    "NumLoadInst": 160,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 81,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 8,
    "NumZExtInst": 10,
    "TotalBlocks": 89,
    "TotalInsts": 589,
    "TotalMemInst": 404,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 249
  },
  "baseline_oz_instcount": 524,
  "knowledge_base_entry": [
    "--sink",
    "--gvn",
    "--flattencfg",
    "--globalopt",
    "--aggressive-instcombine",
    "--die",
    "--sroa",
    "--mldst-motion",
    "--instsimplify",
    "--inline",
    "--bdce",
    "--dse",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--inline",
          "--inject-tli-mappings",
          "--inferattrs",
          "--loop-simplify",
          "--aggressive-instcombine",
          "--load-store-vectorizer",
          "--scalarizer",
          "--rpo-functionattrs",
          "--canonicalize-aliases",
          "--strip",
          "--newgvn",
          "--globalopt",
          "--loop-unswitch",
          "--correlated-propagation",
          "--loop-data-prefetch",
          "--coro-early",
          "--lowerinvoke",
          "--loop-fusion",
          "--memcpyopt",
          "--speculative-execution",
          "--reassociate",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--inline",
      "--inject-tli-mappings",
      "--inferattrs",
      "--loop-simplify",
      "--aggressive-instcombine",
      "--load-store-vectorizer",
      "--scalarizer",
      "--rpo-functionattrs",
      "--canonicalize-aliases",
      "--strip",
      "--newgvn",
      "--globalopt",
      "--loop-unswitch",
      "--correlated-propagation",
      "--loop-data-prefetch",
      "--coro-early",
      "--lowerinvoke",
      "--loop-fusion",
      "--memcpyopt",
      "--speculative-execution",
      "--reassociate",
      "--barrier"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}