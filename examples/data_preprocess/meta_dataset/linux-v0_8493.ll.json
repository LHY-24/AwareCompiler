{
  "program_id": "linux-v0_8493.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 73,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 26,
    "oneSuccessor": 55,
    "twoPred": 22,
    "twoPredOneSuc": 8,
    "twoEach": 7,
    "twoSuccessor": 46,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 130,
    "BeginPhi": 1,
    "BranchCount": 101,
    "returnInt": 38,
    "CriticalCount": 20,
    "NumEdges": 147,
    "const32Bit": 261,
    "const64Bit": 19,
    "numConstZeroes": 104,
    "numConstOnes": 106,
    "UncondBranches": 55,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 83,
    "NumAndInst": 2,
    "BlockMid": 9,
    "BlockLow": 122,
    "NumBitCastInst": 18,
    "NumBrInst": 101,
    "NumCallInst": 95,
    "NumGetElementPtrInst": 67,
    "NumICmpInst": 35,
    "NumLShrInst": 0,
    "NumLoadInst": 241,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 30,
    "NumSExtInst": 1,
    "NumSelectInst": 3,
    "NumShlInst": 1,
    "NumStoreInst": 125,
    "NumSubInst": 1,
    "NumTruncInst": 18,
    "NumXorInst": 4,
    "NumZExtInst": 12,
    "TotalBlocks": 131,
    "TotalInsts": 847,
    "TotalMemInst": 611,
    "TotalFuncs": 51,
    "ArgsPhi": 3,
    "testUnary": 378
  },
  "baseline_oz_instcount": 848,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--loweratomic",
    "--aggressive-instcombine",
    "--flattencfg",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--gvn",
    "--die",
    "--newgvn",
    "--ipsccp",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--globalopt",
          "--ipconstprop",
          "--loop-rotate",
          "--lower-expect",
          "--float2int",
          "--barrier",
          "--gvn",
          "--aggressive-instcombine",
          "--reassociate",
          "--nary-reassociate",
          "--partial-inliner",
          "--loop-unroll-and-jam",
          "--argpromotion",
          "--loop-simplify",
          "--consthoist",
          "--jump-threading",
          "--mergereturn",
          "--redundant-dbg-inst-elim",
          "--canonicalize-aliases",
          "--early-cse",
          "--sccp",
          "--hotcoldsplit",
          "--mergefunc",
          "--lowerswitch",
          "--alignment-from-assumptions",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--globalopt",
      "--ipconstprop",
      "--loop-rotate",
      "--lower-expect",
      "--float2int",
      "--barrier",
      "--gvn",
      "--aggressive-instcombine",
      "--reassociate",
      "--nary-reassociate",
      "--partial-inliner",
      "--loop-unroll-and-jam",
      "--argpromotion",
      "--loop-simplify",
      "--consthoist",
      "--jump-threading",
      "--mergereturn",
      "--redundant-dbg-inst-elim",
      "--canonicalize-aliases",
      "--early-cse",
      "--sccp",
      "--hotcoldsplit",
      "--mergefunc",
      "--lowerswitch",
      "--alignment-from-assumptions",
      "--coro-split"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}