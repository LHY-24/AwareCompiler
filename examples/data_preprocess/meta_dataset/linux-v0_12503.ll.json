{
  "program_id": "linux-v0_12503.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 58,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 25,
    "oneSuccessor": 44,
    "twoPred": 16,
    "twoPredOneSuc": 11,
    "twoEach": 2,
    "twoSuccessor": 39,
    "morePreds": 10,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 114,
    "BeginPhi": 2,
    "BranchCount": 83,
    "returnInt": 37,
    "CriticalCount": 25,
    "NumEdges": 127,
    "const32Bit": 254,
    "const64Bit": 17,
    "numConstZeroes": 90,
    "numConstOnes": 89,
    "UncondBranches": 44,
    "binaryConstArg": 53,
    "NumAShrInst": 1,
    "NumAddInst": 9,
    "NumAllocaInst": 72,
    "NumAndInst": 20,
    "BlockMid": 15,
    "BlockLow": 101,
    "NumBitCastInst": 9,
    "NumBrInst": 83,
    "NumCallInst": 58,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 42,
    "NumLShrInst": 9,
    "NumLoadInst": 209,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 2,
    "NumRetInst": 32,
    "NumSExtInst": 8,
    "NumSelectInst": 1,
    "NumShlInst": 4,
    "NumStoreInst": 113,
    "NumSubInst": 9,
    "NumTruncInst": 27,
    "NumXorInst": 9,
    "NumZExtInst": 33,
    "TotalBlocks": 116,
    "TotalInsts": 820,
    "TotalMemInst": 506,
    "TotalFuncs": 39,
    "ArgsPhi": 5,
    "testUnary": 366
  },
  "baseline_oz_instcount": 818,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--simplifycfg",
    "--prune-eh",
    "--early-cse",
    "--gvn",
    "--die",
    "--mem2reg",
    "--aggressive-instcombine",
    "--early-cse",
    "--licm",
    "--jump-threading",
    "--ipsccp",
    "--adce",
    "--instsimplify",
    "--elim-avail-extern",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--strip-dead-prototypes",
          "--mergeicmps",
          "--ipsccp",
          "--loop-interchange",
          "--loop-versioning-licm",
          "--aggressive-instcombine",
          "--jump-threading",
          "--libcalls-shrinkwrap",
          "--loweratomic",
          "--div-rem-pairs",
          "--reassociate",
          "--simple-loop-unswitch",
          "--inject-tli-mappings",
          "--post-inline-ee-instrument",
          "--partially-inline-libcalls",
          "--nary-reassociate",
          "--licm",
          "--elim-avail-extern",
          "--called-value-propagation",
          "--irce",
          "--pgo-memop-opt",
          "--slsr"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--strip-dead-prototypes",
      "--mergeicmps",
      "--ipsccp",
      "--loop-interchange",
      "--loop-versioning-licm",
      "--aggressive-instcombine",
      "--jump-threading",
      "--libcalls-shrinkwrap",
      "--loweratomic",
      "--div-rem-pairs",
      "--reassociate",
      "--simple-loop-unswitch",
      "--inject-tli-mappings",
      "--post-inline-ee-instrument",
      "--partially-inline-libcalls",
      "--nary-reassociate",
      "--licm",
      "--elim-avail-extern",
      "--called-value-propagation",
      "--irce",
      "--pgo-memop-opt",
      "--slsr"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}