{
  "program_id": "tensorflow-v0_737.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 40,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 20,
    "oneSuccessor": 14,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 28,
    "morePreds": 3,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 6,
    "BranchCount": 42,
    "returnInt": 13,
    "CriticalCount": 16,
    "NumEdges": 70,
    "const32Bit": 73,
    "const64Bit": 52,
    "numConstZeroes": 32,
    "numConstOnes": 24,
    "UncondBranches": 14,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 10,
    "NumAndInst": 1,
    "BlockMid": 2,
    "BlockLow": 51,
    "NumBitCastInst": 22,
    "NumBrInst": 42,
    "NumCallInst": 76,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 31,
    "NumLShrInst": 0,
    "NumLoadInst": 20,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 6,
    "NumRetInst": 3,
    "NumSExtInst": 1,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 30,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 53,
    "TotalInsts": 279,
    "TotalMemInst": 159,
    "TotalFuncs": 40,
    "ArgsPhi": 12,
    "testUnary": 55
  },
  "baseline_oz_instcount": 279,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse-memssa",
    "--dse",
    "--jump-threading",
    "--load-store-vectorizer",
    "--indvars",
    "--correlated-propagation",
    "--nary-reassociate",
    "-loop-reduce",
    "--slp-vectorizer",
    "--bdce",
    "--dse",
    "--early-cse",
    "--memcpyopt",
    "--instcombine",
    "--gvn-hoist",
    "--instcombine",
    "--newgvn",
    "--instsimplify",
    "--adce",
    "--correlated-propagation",
    "--early-cse",
    "--flattencfg",
    "--gvn-hoist",
    "--mem2reg",
    "--globalopt",
    "--ipsccp",
    "--early-cse-memssa",
    "--prune-eh",
    "--elim-avail-extern",
    "--simplifycfg",
    "--dce",
    "--reassociate",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--licm",
          "--loop-guard-widening",
          "--coro-cleanup",
          "--simplifycfg",
          "--globaldce",
          "--constmerge",
          "--coro-elide",
          "--mem2reg",
          "--consthoist",
          "--mergefunc",
          "--ipconstprop",
          "--early-cse-memssa",
          "--rewrite-statepoints-for-gc",
          "--loop-predication",
          "--load-store-vectorizer",
          "--deadargelim",
          "--inline",
          "--infer-address-spaces",
          "--aggressive-instcombine",
          "--loop-unswitch",
          "--mergeicmps",
          "--strip-nondebug",
          "--instcombine",
          "--strip",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--licm",
      "--loop-guard-widening",
      "--coro-cleanup",
      "--simplifycfg",
      "--globaldce",
      "--constmerge",
      "--coro-elide",
      "--mem2reg",
      "--consthoist",
      "--mergefunc",
      "--ipconstprop",
      "--early-cse-memssa",
      "--rewrite-statepoints-for-gc",
      "--loop-predication",
      "--load-store-vectorizer",
      "--deadargelim",
      "--inline",
      "--infer-address-spaces",
      "--aggressive-instcombine",
      "--loop-unswitch",
      "--mergeicmps",
      "--strip-nondebug",
      "--instcombine",
      "--strip",
      "--die"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}