{
  "program_id": "linux-v0_8439.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 48,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 11,
    "oneSuccessor": 42,
    "twoPred": 17,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 25,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 103,
    "BeginPhi": 1,
    "BranchCount": 67,
    "returnInt": 39,
    "CriticalCount": 12,
    "NumEdges": 92,
    "const32Bit": 349,
    "const64Bit": 40,
    "numConstZeroes": 170,
    "numConstOnes": 131,
    "UncondBranches": 42,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 108,
    "NumAndInst": 13,
    "BlockMid": 16,
    "BlockLow": 88,
    "NumBitCastInst": 34,
    "NumBrInst": 67,
    "NumCallInst": 108,
    "NumGetElementPtrInst": 105,
    "NumICmpInst": 25,
    "NumLShrInst": 1,
    "NumLoadInst": 255,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 1,
    "NumRetInst": 37,
    "NumSExtInst": 1,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 141,
    "NumSubInst": 0,
    "NumTruncInst": 15,
    "NumXorInst": 4,
    "NumZExtInst": 19,
    "TotalBlocks": 104,
    "TotalInsts": 950,
    "TotalMemInst": 717,
    "TotalFuncs": 63,
    "ArgsPhi": 2,
    "testUnary": 441
  },
  "baseline_oz_instcount": 928,
  "knowledge_base_entry": [
    "--slsr",
    "--gvn-hoist",
    "-loop-reduce",
    "--early-cse-memssa",
    "--loop-fusion",
    "--gvn-hoist",
    "-loop-reduce",
    "--gvn-hoist",
    "--jump-threading",
    "--elim-avail-extern",
    "--mldst-motion",
    "--simplifycfg",
    "--ipsccp",
    "--inline",
    "--ipsccp",
    "--aggressive-instcombine",
    "--licm",
    "--dce",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--adce",
    "--early-cse-memssa",
    "--newgvn",
    "--loop-fusion",
    "--gvn-hoist",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--coro-split",
          "--pgo-memop-opt",
          "--coro-early",
          "--insert-gcov-profiling",
          "--memcpyopt",
          "--ipsccp",
          "--loop-interchange",
          "--float2int",
          "--reassociate",
          "--bdce",
          "--loop-reroll",
          "--dse",
          "--aggressive-instcombine",
          "--gvn-hoist",
          "--hotcoldsplit",
          "--constmerge",
          "--called-value-propagation",
          "--name-anon-globals",
          "--loop-deletion",
          "--libcalls-shrinkwrap",
          "--loop-fusion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--coro-split",
      "--pgo-memop-opt",
      "--coro-early",
      "--insert-gcov-profiling",
      "--memcpyopt",
      "--ipsccp",
      "--loop-interchange",
      "--float2int",
      "--reassociate",
      "--bdce",
      "--loop-reroll",
      "--dse",
      "--aggressive-instcombine",
      "--gvn-hoist",
      "--hotcoldsplit",
      "--constmerge",
      "--called-value-propagation",
      "--name-anon-globals",
      "--loop-deletion",
      "--libcalls-shrinkwrap",
      "--loop-fusion"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}