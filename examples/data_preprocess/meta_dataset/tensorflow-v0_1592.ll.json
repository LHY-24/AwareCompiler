{
  "program_id": "tensorflow-v0_1592.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 4,
    "onePred": 30,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 10,
    "oneSuccessor": 15,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 5,
    "twoSuccessor": 20,
    "morePreds": 3,
    "BB03Phi": 7,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 7,
    "BranchCount": 33,
    "returnInt": 3,
    "CriticalCount": 10,
    "NumEdges": 55,
    "const32Bit": 62,
    "const64Bit": 58,
    "numConstZeroes": 59,
    "numConstOnes": 18,
    "UncondBranches": 15,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 6,
    "NumAndInst": 1,
    "BlockMid": 2,
    "BlockLow": 41,
    "NumBitCastInst": 14,
    "NumBrInst": 33,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 20,
    "NumLShrInst": 6,
    "NumLoadInst": 27,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 12,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 25,
    "NumSubInst": 2,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 43,
    "TotalInsts": 261,
    "TotalMemInst": 129,
    "TotalFuncs": 21,
    "ArgsPhi": 30,
    "testUnary": 67
  },
  "baseline_oz_instcount": 254,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--sroa",
    "--die",
    "--ipsccp",
    "--newgvn",
    "--load-store-vectorizer",
    "--inline",
    "--flattencfg",
    "--newgvn",
    "--mem2reg",
    "--slp-vectorizer",
    "--newgvn",
    "--dse",
    "--simplifycfg",
    "--ipsccp",
    "--instcombine",
    "--early-cse",
    "--inline",
    "--flattencfg",
    "--newgvn",
    "--mem2reg",
    "--simplifycfg",
    "--early-cse-memssa",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--partial-inliner",
          "--newgvn",
          "--forceattrs",
          "--loop-distribute",
          "--lowerinvoke",
          "--always-inline",
          "--globaldce",
          "--sancov",
          "--loop-load-elim",
          "--hotcoldsplit",
          "--consthoist",
          "--early-cse-memssa",
          "--licm",
          "--lowerswitch",
          "--lower-widenable-condition",
          "--loop-unswitch",
          "--name-anon-globals",
          "--strip",
          "--loop-interchange",
          "--constprop",
          "--loop-unroll",
          "--slsr",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--partial-inliner",
      "--newgvn",
      "--forceattrs",
      "--loop-distribute",
      "--lowerinvoke",
      "--always-inline",
      "--globaldce",
      "--sancov",
      "--loop-load-elim",
      "--hotcoldsplit",
      "--consthoist",
      "--early-cse-memssa",
      "--licm",
      "--lowerswitch",
      "--lower-widenable-condition",
      "--loop-unswitch",
      "--name-anon-globals",
      "--strip",
      "--loop-interchange",
      "--constprop",
      "--loop-unroll",
      "--slsr",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+3.1%"
  }
}