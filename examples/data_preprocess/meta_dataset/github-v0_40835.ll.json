{
  "program_id": "github-v0_40835.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 38,
    "const64Bit": 34,
    "numConstZeroes": 42,
    "numConstOnes": 20,
    "UncondBranches": 13,
    "binaryConstArg": 12,
    "NumAShrInst": 3,
    "NumAddInst": 8,
    "NumAllocaInst": 11,
    "NumAndInst": 3,
    "BlockMid": 3,
    "BlockLow": 21,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 2,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 15,
    "TotalBlocks": 24,
    "TotalInsts": 157,
    "TotalMemInst": 85,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 65
  },
  "baseline_oz_instcount": 157,
  "knowledge_base_entry": [
    "--sroa",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--globalopt",
    "--jump-threading",
    "--slp-vectorizer",
    "--early-cse",
    "--nary-reassociate",
    "--dse",
    "--reassociate",
    "--mem2reg",
    "--dce",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--inferattrs",
          "--consthoist",
          "--lcssa",
          "--dse",
          "--dce",
          "-loop-reduce",
          "--lowerinvoke",
          "--mem2reg",
          "--guard-widening",
          "--mergereturn",
          "--loop-distribute",
          "--infer-address-spaces",
          "--float2int",
          "--licm",
          "--loop-deletion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+10.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--inferattrs",
      "--consthoist",
      "--lcssa",
      "--dse",
      "--dce",
      "-loop-reduce",
      "--lowerinvoke",
      "--mem2reg",
      "--guard-widening",
      "--mergereturn",
      "--loop-distribute",
      "--infer-address-spaces",
      "--float2int",
      "--licm",
      "--loop-deletion"
    ],
    "performance_vs_Oz": "+10.2%"
  }
}