{
  "program_id": "linux-v0_8691.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 55,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 10,
    "oneSuccessor": 53,
    "twoPred": 27,
    "twoPredOneSuc": 7,
    "twoEach": 17,
    "twoSuccessor": 30,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 88,
    "BeginPhi": 0,
    "BranchCount": 83,
    "returnInt": 31,
    "CriticalCount": 9,
    "NumEdges": 113,
    "const32Bit": 300,
    "const64Bit": 39,
    "numConstZeroes": 184,
    "numConstOnes": 55,
    "UncondBranches": 53,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 46,
    "NumAndInst": 14,
    "BlockMid": 7,
    "BlockLow": 81,
    "NumBitCastInst": 26,
    "NumBrInst": 83,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 109,
    "NumICmpInst": 30,
    "NumLShrInst": 1,
    "NumLoadInst": 196,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 95,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 15,
    "TotalBlocks": 88,
    "TotalInsts": 694,
    "TotalMemInst": 502,
    "TotalFuncs": 34,
    "ArgsPhi": 0,
    "testUnary": 292
  },
  "baseline_oz_instcount": 697,
  "knowledge_base_entry": [
    "--dce",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--gvn",
    "--inline",
    "--aggressive-instcombine",
    "--jump-threading",
    "--die",
    "--die",
    "--gvn",
    "--die",
    "--elim-avail-extern",
    "--sroa",
    "--adce",
    "--reassociate",
    "--inline",
    "--dse",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn-hoist",
          "--jump-threading",
          "--rewrite-statepoints-for-gc",
          "--libcalls-shrinkwrap",
          "--lower-widenable-condition",
          "--lower-expect",
          "--loop-interchange",
          "--aggressive-instcombine",
          "--bdce",
          "--called-value-propagation",
          "--inferattrs",
          "--loop-vectorize",
          "--loop-load-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn-hoist",
      "--jump-threading",
      "--rewrite-statepoints-for-gc",
      "--libcalls-shrinkwrap",
      "--lower-widenable-condition",
      "--lower-expect",
      "--loop-interchange",
      "--aggressive-instcombine",
      "--bdce",
      "--called-value-propagation",
      "--inferattrs",
      "--loop-vectorize",
      "--loop-load-elim"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}