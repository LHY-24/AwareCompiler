{
  "program_id": "linux-v0_10623.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 44,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 14,
    "oneSuccessor": 35,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 26,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 0,
    "BranchCount": 61,
    "returnInt": 8,
    "CriticalCount": 11,
    "NumEdges": 87,
    "const32Bit": 387,
    "const64Bit": 11,
    "numConstZeroes": 190,
    "numConstOnes": 77,
    "UncondBranches": 35,
    "binaryConstArg": 17,
    "NumAShrInst": 2,
    "NumAddInst": 1,
    "NumAllocaInst": 60,
    "NumAndInst": 5,
    "BlockMid": 15,
    "BlockLow": 66,
    "NumBitCastInst": 12,
    "NumBrInst": 61,
    "NumCallInst": 75,
    "NumGetElementPtrInst": 132,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 299,
    "NumMulInst": 3,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 99,
    "NumSubInst": 3,
    "NumTruncInst": 16,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 81,
    "TotalInsts": 832,
    "TotalMemInst": 665,
    "TotalFuncs": 40,
    "ArgsPhi": 0,
    "testUnary": 403
  },
  "baseline_oz_instcount": 832,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--dse",
    "--early-cse",
    "--loop-instsimplify",
    "--globalopt",
    "--inline",
    "--licm",
    "--jump-threading",
    "--lower-expect",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--sccp",
          "--strip",
          "--argpromotion",
          "--ipconstprop",
          "--globalopt",
          "--instcombine",
          "--memcpyopt",
          "--load-store-vectorizer",
          "--aggressive-instcombine",
          "--bdce",
          "--coro-early",
          "--coro-split",
          "--mem2reg",
          "--prune-eh",
          "--constmerge",
          "--pgo-memop-opt",
          "--early-cse",
          "--loop-simplifycfg",
          "--redundant-dbg-inst-elim",
          "--lowerinvoke",
          "--loop-versioning-licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--sccp",
      "--strip",
      "--argpromotion",
      "--ipconstprop",
      "--globalopt",
      "--instcombine",
      "--memcpyopt",
      "--load-store-vectorizer",
      "--aggressive-instcombine",
      "--bdce",
      "--coro-early",
      "--coro-split",
      "--mem2reg",
      "--prune-eh",
      "--constmerge",
      "--pgo-memop-opt",
      "--early-cse",
      "--loop-simplifycfg",
      "--redundant-dbg-inst-elim",
      "--lowerinvoke",
      "--loop-versioning-licm"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}