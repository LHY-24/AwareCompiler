{
  "program_id": "github-v0_40940.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 37,
    "const64Bit": 22,
    "numConstZeroes": 27,
    "numConstOnes": 24,
    "UncondBranches": 11,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 4,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 21,
    "TotalInsts": 140,
    "TotalMemInst": 88,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 59
  },
  "baseline_oz_instcount": 140,
  "knowledge_base_entry": [
    "--sccp",
    "--newgvn",
    "--instcombine",
    "--die",
    "--early-cse",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--loop-reroll",
    "-loop-reduce",
    "--reassociate",
    "--sroa",
    "--gvn",
    "--correlated-propagation",
    "--sroa",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--constmerge",
          "--prune-eh",
          "--aggressive-instcombine",
          "--lower-matrix-intrinsics",
          "--loop-reroll",
          "--early-cse",
          "--sink",
          "--coro-split",
          "--irce",
          "--lowerswitch",
          "--loop-predication",
          "--bdce",
          "--load-store-vectorizer",
          "--simple-loop-unswitch",
          "--strip-debug-declare",
          "--globaldce",
          "--sancov",
          "--called-value-propagation",
          "--coro-early",
          "--dce",
          "--pgo-memop-opt",
          "--speculative-execution",
          "--instcombine",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--constmerge",
      "--prune-eh",
      "--aggressive-instcombine",
      "--lower-matrix-intrinsics",
      "--loop-reroll",
      "--early-cse",
      "--sink",
      "--coro-split",
      "--irce",
      "--lowerswitch",
      "--loop-predication",
      "--bdce",
      "--load-store-vectorizer",
      "--simple-loop-unswitch",
      "--strip-debug-declare",
      "--globaldce",
      "--sancov",
      "--called-value-propagation",
      "--coro-early",
      "--dce",
      "--pgo-memop-opt",
      "--speculative-execution",
      "--instcombine",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}