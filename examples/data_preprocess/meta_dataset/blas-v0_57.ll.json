{
  "program_id": "blas-v0_57.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 4,
    "onePred": 12,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 8,
    "oneSuccessor": 6,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 14,
    "morePreds": 2,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 6,
    "BranchCount": 20,
    "returnInt": 0,
    "CriticalCount": 16,
    "NumEdges": 34,
    "const32Bit": 35,
    "const64Bit": 26,
    "numConstZeroes": 11,
    "numConstOnes": 28,
    "UncondBranches": 6,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 22,
    "NumBrInst": 20,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 21,
    "NumMulInst": 2,
    "NumOrInst": 2,
    "NumPHIInst": 11,
    "NumRetInst": 1,
    "NumSExtInst": 4,
    "NumSelectInst": 2,
    "NumShlInst": 2,
    "NumStoreInst": 5,
    "NumSubInst": 4,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 4,
    "TotalBlocks": 21,
    "TotalInsts": 193,
    "TotalMemInst": 46,
    "TotalFuncs": 2,
    "ArgsPhi": 24,
    "testUnary": 54
  },
  "baseline_oz_instcount": 178,
  "knowledge_base_entry": [
    "--loop-predication",
    "--newgvn",
    "--aggressive-instcombine",
    "--dse",
    "--loop-rotate",
    "--early-cse-memssa",
    "--flattencfg",
    "--jump-threading",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--licm",
    "--memcpyopt",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--dse",
    "--gvn-hoist",
    "--mldst-motion",
    "--jump-threading",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--licm",
    "--memcpyopt",
    "--early-cse",
    "--flattencfg",
    "--newgvn",
    "--memcpyopt",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--instcombine",
    "-loop-reduce",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--instcombine",
    "--sroa",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--sroa",
    "--instsimplify",
    "--sccp",
    "--inline",
    "--mergefunc",
    "--lower-expect",
    "--loop-instsimplify",
    "--sccp",
    "--gvn",
    "--simplifycfg",
    "--ipsccp",
    "--bdce",
    "--load-store-vectorizer",
    "--reassociate",
    "--ipsccp",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--adce",
    "--simplifycfg",
    "--sccp",
    "--early-cse",
    "--loop-fusion",
    "--newgvn",
    "--dce",
    "--early-cse",
    "--loop-simplifycfg",
    "--early-cse",
    "--instcombine",
    "--nary-reassociate",
    "--indvars",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--bdce",
    "--slp-vectorizer",
    "--adce",
    "--simplifycfg",
    "--flattencfg",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--libcalls-shrinkwrap",
          "--coro-cleanup",
          "--gvn",
          "--speculative-execution",
          "--sancov",
          "--lower-widenable-condition",
          "--loop-idiom",
          "--loop-unroll",
          "--coro-elide",
          "--argpromotion",
          "--loop-predication",
          "--scalarizer",
          "--mldst-motion",
          "--canonicalize-aliases",
          "--loop-interchange",
          "--dse",
          "--lower-constant-intrinsics",
          "--alignment-from-assumptions",
          "--loop-simplify",
          "--loop-simplifycfg",
          "--slp-vectorizer",
          "--instcombine",
          "--reassociate",
          "--mem2reg",
          "--correlated-propagation",
          "--ee-instrument",
          "--name-anon-globals",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--libcalls-shrinkwrap",
      "--coro-cleanup",
      "--gvn",
      "--speculative-execution",
      "--sancov",
      "--lower-widenable-condition",
      "--loop-idiom",
      "--loop-unroll",
      "--coro-elide",
      "--argpromotion",
      "--loop-predication",
      "--scalarizer",
      "--mldst-motion",
      "--canonicalize-aliases",
      "--loop-interchange",
      "--dse",
      "--lower-constant-intrinsics",
      "--alignment-from-assumptions",
      "--loop-simplify",
      "--loop-simplifycfg",
      "--slp-vectorizer",
      "--instcombine",
      "--reassociate",
      "--mem2reg",
      "--correlated-propagation",
      "--ee-instrument",
      "--name-anon-globals",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}