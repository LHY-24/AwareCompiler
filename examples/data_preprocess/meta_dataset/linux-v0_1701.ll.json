{
  "program_id": "linux-v0_1701.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 39,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 12,
    "oneSuccessor": 31,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 17,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 1,
    "BranchCount": 46,
    "returnInt": 11,
    "CriticalCount": 4,
    "NumEdges": 72,
    "const32Bit": 148,
    "const64Bit": 4,
    "numConstZeroes": 56,
    "numConstOnes": 42,
    "UncondBranches": 31,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 32,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 56,
    "NumBitCastInst": 23,
    "NumBrInst": 46,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 114,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 12,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 75,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 61,
    "TotalInsts": 402,
    "TotalMemInst": 282,
    "TotalFuncs": 23,
    "ArgsPhi": 2,
    "testUnary": 177
  },
  "baseline_oz_instcount": 404,
  "knowledge_base_entry": [
    "--adce",
    "--ipsccp",
    "--instsimplify",
    "--simplifycfg",
    "--correlated-propagation",
    "--instcombine",
    "-loop-reduce",
    "--newgvn",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--correlated-propagation",
          "--attributor",
          "--lower-matrix-intrinsics",
          "--coro-early",
          "--separate-const-offset-from-gep",
          "--loop-instsimplify",
          "--loop-idiom",
          "--lower-expect",
          "--sccp",
          "--partial-inliner",
          "--indvars",
          "--slp-vectorizer",
          "--ipsccp",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--correlated-propagation",
      "--attributor",
      "--lower-matrix-intrinsics",
      "--coro-early",
      "--separate-const-offset-from-gep",
      "--loop-instsimplify",
      "--loop-idiom",
      "--lower-expect",
      "--sccp",
      "--partial-inliner",
      "--indvars",
      "--slp-vectorizer",
      "--ipsccp",
      "--early-cse"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}