{
  "program_id": "github-v0_15478.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 0,
    "oneSuccessor": 7,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 16,
    "CriticalCount": 0,
    "NumEdges": 7,
    "const32Bit": 87,
    "const64Bit": 4,
    "numConstZeroes": 23,
    "numConstOnes": 58,
    "UncondBranches": 7,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 36,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 29,
    "NumBitCastInst": 2,
    "NumBrInst": 7,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 24,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 51,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 31,
    "TotalInsts": 245,
    "TotalMemInst": 187,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 83
  },
  "baseline_oz_instcount": 245,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--early-cse",
    "--gvn",
    "--mergefunc",
    "--simplifycfg",
    "--slsr",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--infer-address-spaces",
          "--simplifycfg",
          "--loop-deletion",
          "--inferattrs",
          "--loop-vectorize",
          "--load-store-vectorizer",
          "--loop-sink",
          "--dce",
          "--sroa",
          "--mergeicmps",
          "--sccp",
          "--loop-unswitch",
          "--correlated-propagation",
          "--globaldce",
          "--lower-expect",
          "--bdce",
          "--strip-nondebug",
          "--indvars",
          "--die",
          "--loop-load-elim",
          "--lowerinvoke",
          "--strip-debug-declare",
          "--break-crit-edges",
          "--always-inline",
          "--ee-instrument",
          "--consthoist",
          "--loop-instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+19.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--infer-address-spaces",
      "--simplifycfg",
      "--loop-deletion",
      "--inferattrs",
      "--loop-vectorize",
      "--load-store-vectorizer",
      "--loop-sink",
      "--dce",
      "--sroa",
      "--mergeicmps",
      "--sccp",
      "--loop-unswitch",
      "--correlated-propagation",
      "--globaldce",
      "--lower-expect",
      "--bdce",
      "--strip-nondebug",
      "--indvars",
      "--die",
      "--loop-load-elim",
      "--lowerinvoke",
      "--strip-debug-declare",
      "--break-crit-edges",
      "--always-inline",
      "--ee-instrument",
      "--consthoist",
      "--loop-instsimplify"
    ],
    "performance_vs_Oz": "+19.2%"
  }
}