{
  "program_id": "linux-v0_539.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 3,
    "oneSuccessor": 15,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 9,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 2,
    "CriticalCount": 2,
    "NumEdges": 33,
    "const32Bit": 98,
    "const64Bit": 7,
    "numConstZeroes": 56,
    "numConstOnes": 28,
    "UncondBranches": 15,
    "binaryConstArg": 4,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 23,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 21,
    "NumBitCastInst": 10,
    "NumBrInst": 24,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 89,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 29,
    "TotalInsts": 262,
    "TotalMemInst": 197,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 135
  },
  "baseline_oz_instcount": 263,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--elim-avail-extern",
    "--mem2reg",
    "--slp-vectorizer",
    "--newgvn",
    "--dce",
    "--aggressive-instcombine",
    "--ipsccp",
    "--correlated-propagation",
    "--gvn",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--gvn-hoist",
          "--sink",
          "--lower-matrix-intrinsics",
          "--lower-constant-intrinsics",
          "--load-store-vectorizer",
          "--barrier",
          "--hotcoldsplit",
          "--inferattrs",
          "--loweratomic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--gvn-hoist",
      "--sink",
      "--lower-matrix-intrinsics",
      "--lower-constant-intrinsics",
      "--load-store-vectorizer",
      "--barrier",
      "--hotcoldsplit",
      "--inferattrs",
      "--loweratomic"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}