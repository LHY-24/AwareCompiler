{
  "program_id": "linux-v0_2125.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 49,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 15,
    "oneSuccessor": 41,
    "twoPred": 11,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 21,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 84,
    "BeginPhi": 1,
    "BranchCount": 62,
    "returnInt": 24,
    "CriticalCount": 4,
    "NumEdges": 83,
    "const32Bit": 249,
    "const64Bit": 12,
    "numConstZeroes": 106,
    "numConstOnes": 88,
    "UncondBranches": 41,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 75,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 76,
    "NumBitCastInst": 26,
    "NumBrInst": 62,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 77,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 184,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 23,
    "NumSExtInst": 5,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 106,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 85,
    "TotalInsts": 650,
    "TotalMemInst": 493,
    "TotalFuncs": 40,
    "ArgsPhi": 2,
    "testUnary": 302
  },
  "baseline_oz_instcount": 651,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--newgvn",
    "--prune-eh",
    "--gvn",
    "--early-cse",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--speculative-execution",
          "--consthoist",
          "--aggressive-instcombine",
          "--functionattrs",
          "--coro-early",
          "--insert-gcov-profiling",
          "--lower-expect",
          "--infer-address-spaces",
          "--strip",
          "--separate-const-offset-from-gep",
          "--mergefunc",
          "--partial-inliner",
          "--ipconstprop",
          "--loop-distribute",
          "--loop-versioning",
          "--attributor",
          "--simplifycfg",
          "--canonicalize-aliases",
          "--slp-vectorizer",
          "--coro-split",
          "--lower-constant-intrinsics",
          "--constprop",
          "--sancov",
          "--dce",
          "--deadargelim",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--speculative-execution",
      "--consthoist",
      "--aggressive-instcombine",
      "--functionattrs",
      "--coro-early",
      "--insert-gcov-profiling",
      "--lower-expect",
      "--infer-address-spaces",
      "--strip",
      "--separate-const-offset-from-gep",
      "--mergefunc",
      "--partial-inliner",
      "--ipconstprop",
      "--loop-distribute",
      "--loop-versioning",
      "--attributor",
      "--simplifycfg",
      "--canonicalize-aliases",
      "--slp-vectorizer",
      "--coro-split",
      "--lower-constant-intrinsics",
      "--constprop",
      "--sancov",
      "--dce",
      "--deadargelim",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}