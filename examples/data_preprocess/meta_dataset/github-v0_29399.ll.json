{
  "program_id": "github-v0_29399.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 36,
    "const64Bit": 36,
    "numConstZeroes": 36,
    "numConstOnes": 25,
    "UncondBranches": 11,
    "binaryConstArg": 17,
    "NumAShrInst": 3,
    "NumAddInst": 5,
    "NumAllocaInst": 12,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 12,
    "NumXorInst": 2,
    "NumZExtInst": 19,
    "TotalBlocks": 21,
    "TotalInsts": 178,
    "TotalMemInst": 93,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 82
  },
  "baseline_oz_instcount": 178,
  "knowledge_base_entry": [
    "--die",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--sroa",
    "--simplifycfg",
    "--gvn",
    "--reassociate",
    "--aggressive-instcombine",
    "--dce",
    "--die",
    "--ipsccp",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--loop-rotate",
          "--loop-simplifycfg",
          "--strip",
          "--prune-eh",
          "--load-store-vectorizer",
          "--coro-split",
          "--ipconstprop",
          "--aggressive-instcombine",
          "--newgvn",
          "--bdce",
          "--loop-distribute",
          "--loop-load-elim",
          "--post-inline-ee-instrument",
          "--speculative-execution",
          "--mem2reg",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--loop-rotate",
      "--loop-simplifycfg",
      "--strip",
      "--prune-eh",
      "--load-store-vectorizer",
      "--coro-split",
      "--ipconstprop",
      "--aggressive-instcombine",
      "--newgvn",
      "--bdce",
      "--loop-distribute",
      "--loop-load-elim",
      "--post-inline-ee-instrument",
      "--speculative-execution",
      "--mem2reg",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+9.6%"
  }
}