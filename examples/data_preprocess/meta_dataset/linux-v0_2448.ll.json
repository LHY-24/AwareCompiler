{
  "program_id": "linux-v0_2448.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 65,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 14,
    "oneSuccessor": 56,
    "twoPred": 14,
    "twoPredOneSuc": 6,
    "twoEach": 6,
    "twoSuccessor": 28,
    "morePreds": 13,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 111,
    "BeginPhi": 0,
    "BranchCount": 84,
    "returnInt": 7,
    "CriticalCount": 29,
    "NumEdges": 150,
    "const32Bit": 322,
    "const64Bit": 42,
    "numConstZeroes": 119,
    "numConstOnes": 130,
    "UncondBranches": 56,
    "binaryConstArg": 32,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 100,
    "NumAndInst": 24,
    "BlockMid": 14,
    "BlockLow": 97,
    "NumBitCastInst": 0,
    "NumBrInst": 84,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 64,
    "NumICmpInst": 30,
    "NumLShrInst": 0,
    "NumLoadInst": 245,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 140,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 111,
    "TotalInsts": 794,
    "TotalMemInst": 600,
    "TotalFuncs": 26,
    "ArgsPhi": 0,
    "testUnary": 365
  },
  "baseline_oz_instcount": 794,
  "knowledge_base_entry": [
    "--indvars",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--instcombine",
    "--die",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--early-cse-memssa",
    "--gvn",
    "--ipsccp",
    "--loop-deletion",
    "--early-cse",
    "--inline",
    "--dce",
    "--gvn",
    "--simplifycfg",
    "--loop-rotate",
    "--licm",
    "--instsimplify",
    "--correlated-propagation",
    "--globalopt",
    "--loop-instsimplify",
    "--sroa",
    "--lower-expect",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--loop-guard-widening",
          "--attributor",
          "--simplifycfg",
          "--loop-versioning-licm",
          "--aggressive-instcombine",
          "-loop-reduce",
          "--loop-deletion",
          "--loop-unroll",
          "--tailcallelim",
          "--mergereturn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--loop-guard-widening",
      "--attributor",
      "--simplifycfg",
      "--loop-versioning-licm",
      "--aggressive-instcombine",
      "-loop-reduce",
      "--loop-deletion",
      "--loop-unroll",
      "--tailcallelim",
      "--mergereturn"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}