{
  "program_id": "linux-v0_6126.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 62,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 18,
    "oneSuccessor": 53,
    "twoPred": 17,
    "twoPredOneSuc": 7,
    "twoEach": 7,
    "twoSuccessor": 35,
    "morePreds": 9,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 106,
    "BeginPhi": 0,
    "BranchCount": 88,
    "returnInt": 7,
    "CriticalCount": 16,
    "NumEdges": 123,
    "const32Bit": 280,
    "const64Bit": 15,
    "numConstZeroes": 118,
    "numConstOnes": 115,
    "UncondBranches": 53,
    "binaryConstArg": 17,
    "NumAShrInst": 1,
    "NumAddInst": 12,
    "NumAllocaInst": 78,
    "NumAndInst": 0,
    "BlockMid": 15,
    "BlockLow": 91,
    "NumBitCastInst": 16,
    "NumBrInst": 88,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 78,
    "NumICmpInst": 34,
    "NumLShrInst": 2,
    "NumLoadInst": 200,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 25,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 107,
    "NumSubInst": 3,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 106,
    "TotalInsts": 719,
    "TotalMemInst": 499,
    "TotalFuncs": 26,
    "ArgsPhi": 0,
    "testUnary": 337
  },
  "baseline_oz_instcount": 721,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--globalopt",
    "--mergefunc",
    "--aggressive-instcombine",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--loweratomic",
          "--aggressive-instcombine",
          "--ipsccp",
          "--loop-distribute",
          "--coro-cleanup",
          "--lower-constant-intrinsics",
          "--separate-const-offset-from-gep",
          "--load-store-vectorizer",
          "--mergeicmps",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--loweratomic",
      "--aggressive-instcombine",
      "--ipsccp",
      "--loop-distribute",
      "--coro-cleanup",
      "--lower-constant-intrinsics",
      "--separate-const-offset-from-gep",
      "--load-store-vectorizer",
      "--mergeicmps",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}