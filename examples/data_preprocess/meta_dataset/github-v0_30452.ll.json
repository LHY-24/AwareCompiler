{
  "program_id": "github-v0_30452.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 41,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 9,
    "oneSuccessor": 38,
    "twoPred": 19,
    "twoPredOneSuc": 6,
    "twoEach": 10,
    "twoSuccessor": 23,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 1,
    "BranchCount": 61,
    "returnInt": 2,
    "CriticalCount": 8,
    "NumEdges": 84,
    "const32Bit": 127,
    "const64Bit": 17,
    "numConstZeroes": 58,
    "numConstOnes": 39,
    "UncondBranches": 38,
    "binaryConstArg": 14,
    "NumAShrInst": 1,
    "NumAddInst": 7,
    "NumAllocaInst": 23,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 62,
    "NumBitCastInst": 0,
    "NumBrInst": 61,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 23,
    "NumLShrInst": 0,
    "NumLoadInst": 94,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 4,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 52,
    "NumSubInst": 3,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 65,
    "TotalInsts": 327,
    "TotalMemInst": 214,
    "TotalFuncs": 14,
    "ArgsPhi": 2,
    "testUnary": 126
  },
  "baseline_oz_instcount": 328,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--flattencfg",
    "--aggressive-instcombine",
    "--prune-eh",
    "--lower-expect",
    "--adce",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--guard-widening",
          "--lower-widenable-condition",
          "--mergefunc",
          "--sccp",
          "--barrier",
          "--ee-instrument",
          "--simplifycfg",
          "--hotcoldsplit",
          "--strip",
          "--insert-gcov-profiling",
          "--loop-predication",
          "--dce",
          "--loop-load-elim",
          "--canonicalize-aliases",
          "--coro-early",
          "--reassociate",
          "--licm",
          "-loop-reduce",
          "--loop-fusion",
          "--elim-avail-extern",
          "--forceattrs",
          "--loop-vectorize",
          "--lowerinvoke",
          "--instcombine",
          "--loop-interchange"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--guard-widening",
      "--lower-widenable-condition",
      "--mergefunc",
      "--sccp",
      "--barrier",
      "--ee-instrument",
      "--simplifycfg",
      "--hotcoldsplit",
      "--strip",
      "--insert-gcov-profiling",
      "--loop-predication",
      "--dce",
      "--loop-load-elim",
      "--canonicalize-aliases",
      "--coro-early",
      "--reassociate",
      "--licm",
      "-loop-reduce",
      "--loop-fusion",
      "--elim-avail-extern",
      "--forceattrs",
      "--loop-vectorize",
      "--lowerinvoke",
      "--instcombine",
      "--loop-interchange"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}