{
  "program_id": "linux-v0_12175.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 17,
    "oneSuccessor": 18,
    "twoPred": 5,
    "twoPredOneSuc": 4,
    "twoEach": 1,
    "twoSuccessor": 21,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 43,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 2,
    "CriticalCount": 12,
    "NumEdges": 60,
    "const32Bit": 60,
    "const64Bit": 25,
    "numConstZeroes": 28,
    "numConstOnes": 25,
    "UncondBranches": 18,
    "binaryConstArg": 11,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 14,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 39,
    "NumBitCastInst": 0,
    "NumBrInst": 39,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 69,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 3,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 27,
    "TotalBlocks": 43,
    "TotalInsts": 258,
    "TotalMemInst": 148,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 118
  },
  "baseline_oz_instcount": 258,
  "knowledge_base_entry": [
    "--sroa",
    "--aggressive-instcombine",
    "--reassociate",
    "--prune-eh",
    "--sroa",
    "--prune-eh",
    "--gvn",
    "--simplifycfg",
    "--flattencfg",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--name-anon-globals",
          "--loop-load-elim",
          "--inline",
          "--lower-expect",
          "--partial-inliner",
          "--sccp",
          "--loop-simplify",
          "--globalopt",
          "--elim-avail-extern",
          "--pgo-memop-opt",
          "--aggressive-instcombine",
          "--functionattrs",
          "--slp-vectorizer",
          "--constmerge",
          "--early-cse",
          "--coro-cleanup",
          "--consthoist",
          "--ipconstprop",
          "--loop-predication",
          "--lowerinvoke",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--name-anon-globals",
      "--loop-load-elim",
      "--inline",
      "--lower-expect",
      "--partial-inliner",
      "--sccp",
      "--loop-simplify",
      "--globalopt",
      "--elim-avail-extern",
      "--pgo-memop-opt",
      "--aggressive-instcombine",
      "--functionattrs",
      "--slp-vectorizer",
      "--constmerge",
      "--early-cse",
      "--coro-cleanup",
      "--consthoist",
      "--ipconstprop",
      "--loop-predication",
      "--lowerinvoke",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}