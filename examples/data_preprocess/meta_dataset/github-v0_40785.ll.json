{
  "program_id": "github-v0_40785.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 36,
    "const64Bit": 44,
    "numConstZeroes": 47,
    "numConstOnes": 23,
    "UncondBranches": 13,
    "binaryConstArg": 15,
    "NumAShrInst": 3,
    "NumAddInst": 4,
    "NumAllocaInst": 12,
    "NumAndInst": 3,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 7,
    "NumLShrInst": 1,
    "NumLoadInst": 44,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 13,
    "NumXorInst": 1,
    "NumZExtInst": 30,
    "TotalBlocks": 24,
    "TotalInsts": 213,
    "TotalMemInst": 112,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 105
  },
  "baseline_oz_instcount": 213,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--inline",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--ipsccp",
    "--newgvn",
    "--prune-eh",
    "--early-cse-memssa",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--add-discriminators",
          "--hotcoldsplit",
          "--slsr",
          "--sancov",
          "--mem2reg",
          "--adce",
          "--strip-debug-declare",
          "--scalarizer",
          "--lower-guard-intrinsic",
          "--aggressive-instcombine",
          "--loop-unroll",
          "--coro-early",
          "--separate-const-offset-from-gep",
          "--deadargelim",
          "--jump-threading",
          "--loop-idiom",
          "--loop-fusion",
          "--irce",
          "--pgo-memop-opt",
          "--infer-address-spaces",
          "-loop-reduce",
          "--inferattrs",
          "--partially-inline-libcalls",
          "--loop-unswitch",
          "--lcssa",
          "--constprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--add-discriminators",
      "--hotcoldsplit",
      "--slsr",
      "--sancov",
      "--mem2reg",
      "--adce",
      "--strip-debug-declare",
      "--scalarizer",
      "--lower-guard-intrinsic",
      "--aggressive-instcombine",
      "--loop-unroll",
      "--coro-early",
      "--separate-const-offset-from-gep",
      "--deadargelim",
      "--jump-threading",
      "--loop-idiom",
      "--loop-fusion",
      "--irce",
      "--pgo-memop-opt",
      "--infer-address-spaces",
      "-loop-reduce",
      "--inferattrs",
      "--partially-inline-libcalls",
      "--loop-unswitch",
      "--lcssa",
      "--constprop"
    ],
    "performance_vs_Oz": "+8.0%"
  }
}