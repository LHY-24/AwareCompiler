{
  "program_id": "github-v0_48537.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 52,
    "const64Bit": 45,
    "numConstZeroes": 53,
    "numConstOnes": 23,
    "UncondBranches": 15,
    "binaryConstArg": 26,
    "NumAShrInst": 4,
    "NumAddInst": 5,
    "NumAllocaInst": 11,
    "NumAndInst": 10,
    "BlockMid": 5,
    "BlockLow": 22,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 1,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 18,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 1,
    "NumZExtInst": 20,
    "TotalBlocks": 27,
    "TotalInsts": 197,
    "TotalMemInst": 96,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 78
  },
  "baseline_oz_instcount": 197,
  "knowledge_base_entry": [
    "--mem2reg",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--newgvn",
    "--elim-avail-extern",
    "--gvn",
    "--jump-threading",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--jump-threading",
          "--partial-inliner",
          "--loop-interchange",
          "--die",
          "--aggressive-instcombine",
          "--consthoist",
          "--simple-loop-unswitch",
          "--simplifycfg",
          "--name-anon-globals",
          "--loop-load-elim",
          "--libcalls-shrinkwrap",
          "--div-rem-pairs",
          "--mergeicmps",
          "--mergereturn",
          "--loop-vectorize",
          "--loop-instsimplify",
          "--strip-debug-declare",
          "--gvn",
          "--alignment-from-assumptions",
          "--instcombine",
          "--strip",
          "--loop-data-prefetch",
          "--loop-versioning",
          "--loop-reroll",
          "--ipsccp",
          "--loop-versioning-licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--jump-threading",
      "--partial-inliner",
      "--loop-interchange",
      "--die",
      "--aggressive-instcombine",
      "--consthoist",
      "--simple-loop-unswitch",
      "--simplifycfg",
      "--name-anon-globals",
      "--loop-load-elim",
      "--libcalls-shrinkwrap",
      "--div-rem-pairs",
      "--mergeicmps",
      "--mergereturn",
      "--loop-vectorize",
      "--loop-instsimplify",
      "--strip-debug-declare",
      "--gvn",
      "--alignment-from-assumptions",
      "--instcombine",
      "--strip",
      "--loop-data-prefetch",
      "--loop-versioning",
      "--loop-reroll",
      "--ipsccp",
      "--loop-versioning-licm"
    ],
    "performance_vs_Oz": "+3.0%"
  }
}