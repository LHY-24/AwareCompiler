{
  "program_id": "linux-v0_13700.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 50,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 11,
    "oneSuccessor": 47,
    "twoPred": 14,
    "twoPredOneSuc": 7,
    "twoEach": 4,
    "twoSuccessor": 20,
    "morePreds": 3,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 73,
    "BeginPhi": 4,
    "BranchCount": 67,
    "returnInt": 4,
    "CriticalCount": 7,
    "NumEdges": 87,
    "const32Bit": 269,
    "const64Bit": 21,
    "numConstZeroes": 160,
    "numConstOnes": 64,
    "UncondBranches": 47,
    "binaryConstArg": 27,
    "NumAShrInst": 1,
    "NumAddInst": 6,
    "NumAllocaInst": 48,
    "NumAndInst": 13,
    "BlockMid": 13,
    "BlockLow": 64,
    "NumBitCastInst": 16,
    "NumBrInst": 67,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 105,
    "NumICmpInst": 19,
    "NumLShrInst": 2,
    "NumLoadInst": 161,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 4,
    "NumRetInst": 10,
    "NumSExtInst": 34,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 68,
    "NumSubInst": 2,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 77,
    "TotalInsts": 600,
    "TotalMemInst": 397,
    "TotalFuncs": 17,
    "ArgsPhi": 8,
    "testUnary": 282
  },
  "baseline_oz_instcount": 600,
  "knowledge_base_entry": [
    "--die",
    "--lower-constant-intrinsics",
    "--gvn",
    "--dce",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--loop-simplifycfg",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--loop-sink",
          "--strip",
          "--aggressive-instcombine",
          "--ipconstprop",
          "--prune-eh",
          "--sccp",
          "--div-rem-pairs",
          "--callsite-splitting",
          "--indvars",
          "--mldst-motion",
          "--called-value-propagation",
          "--loop-distribute",
          "--loop-interchange",
          "--lowerswitch",
          "--loop-fusion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--loop-sink",
      "--strip",
      "--aggressive-instcombine",
      "--ipconstprop",
      "--prune-eh",
      "--sccp",
      "--div-rem-pairs",
      "--callsite-splitting",
      "--indvars",
      "--mldst-motion",
      "--called-value-propagation",
      "--loop-distribute",
      "--loop-interchange",
      "--lowerswitch",
      "--loop-fusion"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}