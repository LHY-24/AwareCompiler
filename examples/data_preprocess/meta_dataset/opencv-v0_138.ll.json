{
  "program_id": "opencv-v0_138.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 2,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 3,
    "BeginPhi": 2,
    "BranchCount": 4,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 6,
    "const32Bit": 14,
    "const64Bit": 36,
    "numConstZeroes": 2,
    "numConstOnes": 4,
    "UncondBranches": 2,
    "binaryConstArg": 23,
    "NumAShrInst": 5,
    "NumAddInst": 36,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 3,
    "NumBitCastInst": 0,
    "NumBrInst": 4,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 2,
    "NumLShrInst": 5,
    "NumLoadInst": 17,
    "NumMulInst": 10,
    "NumOrInst": 1,
    "NumPHIInst": 4,
    "NumRetInst": 1,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 24,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 5,
    "TotalInsts": 169,
    "TotalMemInst": 58,
    "TotalFuncs": 1,
    "ArgsPhi": 8,
    "testUnary": 36
  },
  "baseline_oz_instcount": 168,
  "knowledge_base_entry": [
    "--ipsccp",
    "--ipsccp",
    "--globalopt",
    "--dse",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--loop-reroll",
    "--simplifycfg",
    "--early-cse",
    "--mergefunc",
    "--bdce",
    "--early-cse",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--load-store-vectorizer",
          "--early-cse-memssa",
          "--inject-tli-mappings",
          "--flattencfg",
          "--forceattrs",
          "--lower-matrix-intrinsics",
          "--mergeicmps",
          "--simplifycfg",
          "--lower-expect",
          "--coro-elide",
          "--aggressive-instcombine",
          "--gvn",
          "--scalarizer",
          "--add-discriminators",
          "--pgo-memop-opt",
          "--mergereturn",
          "--loop-sink",
          "--functionattrs",
          "--name-anon-globals",
          "--irce",
          "--called-value-propagation",
          "--bdce",
          "--die",
          "--consthoist",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--load-store-vectorizer",
      "--early-cse-memssa",
      "--inject-tli-mappings",
      "--flattencfg",
      "--forceattrs",
      "--lower-matrix-intrinsics",
      "--mergeicmps",
      "--simplifycfg",
      "--lower-expect",
      "--coro-elide",
      "--aggressive-instcombine",
      "--gvn",
      "--scalarizer",
      "--add-discriminators",
      "--pgo-memop-opt",
      "--mergereturn",
      "--loop-sink",
      "--functionattrs",
      "--name-anon-globals",
      "--irce",
      "--called-value-propagation",
      "--bdce",
      "--die",
      "--consthoist",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+3.6%"
  }
}