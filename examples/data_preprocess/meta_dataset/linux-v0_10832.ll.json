{
  "program_id": "linux-v0_10832.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 65,
    "onePredOneSuc": 55,
    "onePredTwoSuc": 10,
    "oneSuccessor": 55,
    "twoPred": 10,
    "twoPredOneSuc": 0,
    "twoEach": 10,
    "twoSuccessor": 24,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 1,
    "BranchCount": 79,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 103,
    "const32Bit": 171,
    "const64Bit": 68,
    "numConstZeroes": 95,
    "numConstOnes": 70,
    "UncondBranches": 55,
    "binaryConstArg": 47,
    "NumAShrInst": 1,
    "NumAddInst": 26,
    "NumAllocaInst": 51,
    "NumAndInst": 18,
    "BlockMid": 16,
    "BlockLow": 66,
    "NumBitCastInst": 0,
    "NumBrInst": 79,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 76,
    "NumICmpInst": 24,
    "NumLShrInst": 8,
    "NumLoadInst": 202,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 124,
    "NumSubInst": 1,
    "NumTruncInst": 17,
    "NumXorInst": 10,
    "NumZExtInst": 66,
    "TotalBlocks": 82,
    "TotalInsts": 726,
    "TotalMemInst": 458,
    "TotalFuncs": 5,
    "ArgsPhi": 3,
    "testUnary": 345
  },
  "baseline_oz_instcount": 726,
  "knowledge_base_entry": [
    "--sink",
    "--load-store-vectorizer",
    "--instsimplify",
    "--gvn",
    "--elim-avail-extern",
    "--loop-deletion",
    "--elim-avail-extern",
    "--loop-deletion",
    "--mem2reg",
    "--prune-eh",
    "--aggressive-instcombine",
    "--newgvn",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--newgvn",
    "--loop-fusion",
    "--loop-reroll",
    "--indvars",
    "-loop-reduce",
    "--instcombine",
    "--load-store-vectorizer",
    "--jump-threading",
    "--mldst-motion",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simple-loop-unswitch",
          "--globalopt",
          "--ee-instrument",
          "--loop-instsimplify",
          "--mem2reg",
          "--ipsccp",
          "--coro-early",
          "--strip-nondebug",
          "--loop-fusion",
          "--loop-data-prefetch",
          "--instnamer",
          "--early-cse-memssa",
          "--mldst-motion",
          "--strip-dead-prototypes",
          "--loop-simplify",
          "--aggressive-instcombine",
          "--slp-vectorizer",
          "--loop-versioning-licm",
          "--elim-avail-extern",
          "--strip",
          "-loop-reduce",
          "--instcombine",
          "--lower-expect",
          "--flattencfg",
          "--mergereturn",
          "--die",
          "--forceattrs",
          "--consthoist",
          "--insert-gcov-profiling",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simple-loop-unswitch",
      "--globalopt",
      "--ee-instrument",
      "--loop-instsimplify",
      "--mem2reg",
      "--ipsccp",
      "--coro-early",
      "--strip-nondebug",
      "--loop-fusion",
      "--loop-data-prefetch",
      "--instnamer",
      "--early-cse-memssa",
      "--mldst-motion",
      "--strip-dead-prototypes",
      "--loop-simplify",
      "--aggressive-instcombine",
      "--slp-vectorizer",
      "--loop-versioning-licm",
      "--elim-avail-extern",
      "--strip",
      "-loop-reduce",
      "--instcombine",
      "--lower-expect",
      "--flattencfg",
      "--mergereturn",
      "--die",
      "--forceattrs",
      "--consthoist",
      "--insert-gcov-profiling",
      "--inline"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}