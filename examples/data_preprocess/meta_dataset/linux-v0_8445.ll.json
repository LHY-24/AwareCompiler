{
  "program_id": "linux-v0_8445.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 33,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 7,
    "oneSuccessor": 28,
    "twoPred": 12,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 18,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 75,
    "BeginPhi": 1,
    "BranchCount": 46,
    "returnInt": 34,
    "CriticalCount": 3,
    "NumEdges": 64,
    "const32Bit": 252,
    "const64Bit": 35,
    "numConstZeroes": 107,
    "numConstOnes": 108,
    "UncondBranches": 28,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 73,
    "NumAndInst": 7,
    "BlockMid": 13,
    "BlockLow": 63,
    "NumBitCastInst": 15,
    "NumBrInst": 46,
    "NumCallInst": 72,
    "NumGetElementPtrInst": 86,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 180,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 30,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 96,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 4,
    "NumZExtInst": 11,
    "TotalBlocks": 76,
    "TotalInsts": 653,
    "TotalMemInst": 507,
    "TotalFuncs": 44,
    "ArgsPhi": 2,
    "testUnary": 290
  },
  "baseline_oz_instcount": 653,
  "knowledge_base_entry": [
    "--lower-expect",
    "--globalopt",
    "--inline",
    "--aggressive-instcombine",
    "--adce",
    "--early-cse",
    "--dse",
    "--loop-rotate",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--loop-load-elim",
          "--elim-avail-extern",
          "--insert-gcov-profiling",
          "--always-inline",
          "--loop-unswitch",
          "--mergeicmps",
          "--inline",
          "--post-inline-ee-instrument",
          "--sroa",
          "--pgo-memop-opt",
          "--flattencfg",
          "--ee-instrument",
          "--loop-data-prefetch",
          "--scalarizer",
          "--coro-elide",
          "--globalsplit",
          "--rewrite-statepoints-for-gc",
          "--aggressive-instcombine",
          "--prune-eh",
          "--loop-versioning-licm",
          "--called-value-propagation",
          "--loweratomic",
          "--strip-debug-declare",
          "--loop-interchange",
          "--nary-reassociate",
          "--slsr",
          "--load-store-vectorizer",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--loop-load-elim",
      "--elim-avail-extern",
      "--insert-gcov-profiling",
      "--always-inline",
      "--loop-unswitch",
      "--mergeicmps",
      "--inline",
      "--post-inline-ee-instrument",
      "--sroa",
      "--pgo-memop-opt",
      "--flattencfg",
      "--ee-instrument",
      "--loop-data-prefetch",
      "--scalarizer",
      "--coro-elide",
      "--globalsplit",
      "--rewrite-statepoints-for-gc",
      "--aggressive-instcombine",
      "--prune-eh",
      "--loop-versioning-licm",
      "--called-value-propagation",
      "--loweratomic",
      "--strip-debug-declare",
      "--loop-interchange",
      "--nary-reassociate",
      "--slsr",
      "--load-store-vectorizer",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}