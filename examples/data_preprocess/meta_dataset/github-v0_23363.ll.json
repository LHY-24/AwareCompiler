{
  "program_id": "github-v0_23363.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 7,
    "onePred": 89,
    "onePredOneSuc": 56,
    "onePredTwoSuc": 30,
    "oneSuccessor": 70,
    "twoPred": 22,
    "twoPredOneSuc": 11,
    "twoEach": 10,
    "twoSuccessor": 50,
    "morePreds": 11,
    "BB03Phi": 7,
    "BBHiPhi": 0,
    "BBNoPhi": 127,
    "BeginPhi": 7,
    "BranchCount": 120,
    "returnInt": 24,
    "CriticalCount": 21,
    "NumEdges": 177,
    "const32Bit": 223,
    "const64Bit": 32,
    "numConstZeroes": 95,
    "numConstOnes": 75,
    "UncondBranches": 70,
    "binaryConstArg": 66,
    "NumAShrInst": 3,
    "NumAddInst": 20,
    "NumAllocaInst": 46,
    "NumAndInst": 28,
    "BlockMid": 6,
    "BlockLow": 128,
    "NumBitCastInst": 0,
    "NumBrInst": 120,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 52,
    "NumLShrInst": 0,
    "NumLoadInst": 178,
    "NumMulInst": 0,
    "NumOrInst": 10,
    "NumPHIInst": 7,
    "NumRetInst": 12,
    "NumSExtInst": 13,
    "NumSelectInst": 2,
    "NumShlInst": 3,
    "NumStoreInst": 111,
    "NumSubInst": 11,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 49,
    "TotalBlocks": 134,
    "TotalInsts": 748,
    "TotalMemInst": 401,
    "TotalFuncs": 23,
    "ArgsPhi": 14,
    "testUnary": 298
  },
  "baseline_oz_instcount": 748,
  "knowledge_base_entry": [
    "--simple-loop-unswitch",
    "--jump-threading",
    "--licm",
    "--dce",
    "--inline",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--reassociate",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simple-loop-unswitch",
          "--dse",
          "--mergefunc",
          "--strip",
          "--globalopt",
          "--argpromotion",
          "--loop-deletion",
          "--aggressive-instcombine",
          "--reassociate",
          "--adce",
          "--lower-matrix-intrinsics",
          "--coro-split",
          "--tailcallelim",
          "--lower-guard-intrinsic",
          "--die",
          "--bdce",
          "--mem2reg",
          "--deadargelim",
          "--loop-simplifycfg",
          "--indvars",
          "--loop-load-elim",
          "--post-inline-ee-instrument",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simple-loop-unswitch",
      "--dse",
      "--mergefunc",
      "--strip",
      "--globalopt",
      "--argpromotion",
      "--loop-deletion",
      "--aggressive-instcombine",
      "--reassociate",
      "--adce",
      "--lower-matrix-intrinsics",
      "--coro-split",
      "--tailcallelim",
      "--lower-guard-intrinsic",
      "--die",
      "--bdce",
      "--mem2reg",
      "--deadargelim",
      "--loop-simplifycfg",
      "--indvars",
      "--loop-load-elim",
      "--post-inline-ee-instrument",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+2.4%"
  }
}