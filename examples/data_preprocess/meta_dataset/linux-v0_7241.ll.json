{
  "program_id": "linux-v0_7241.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 41,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 9,
    "oneSuccessor": 40,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 14,
    "morePreds": 8,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 1,
    "BranchCount": 54,
    "returnInt": 19,
    "CriticalCount": 17,
    "NumEdges": 90,
    "const32Bit": 176,
    "const64Bit": 37,
    "numConstZeroes": 68,
    "numConstOnes": 90,
    "UncondBranches": 40,
    "binaryConstArg": 33,
    "NumAShrInst": 4,
    "NumAddInst": 1,
    "NumAllocaInst": 60,
    "NumAndInst": 9,
    "BlockMid": 8,
    "BlockLow": 65,
    "NumBitCastInst": 13,
    "NumBrInst": 54,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 119,
    "NumMulInst": 4,
    "NumOrInst": 4,
    "NumPHIInst": 1,
    "NumRetInst": 17,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 87,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 9,
    "NumZExtInst": 14,
    "TotalBlocks": 73,
    "TotalInsts": 516,
    "TotalMemInst": 335,
    "TotalFuncs": 26,
    "ArgsPhi": 2,
    "testUnary": 227
  },
  "baseline_oz_instcount": 516,
  "knowledge_base_entry": [
    "--dse",
    "--gvn-hoist",
    "--globalopt",
    "--aggressive-instcombine",
    "--sroa",
    "--dse",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--die",
    "--jump-threading",
    "--simplifycfg",
    "--globalopt",
    "--aggressive-instcombine",
    "--sroa",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "-loop-reduce",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inject-tli-mappings",
          "--ee-instrument",
          "--coro-early",
          "--add-discriminators",
          "--globalsplit",
          "--slsr",
          "--early-cse-memssa",
          "--simplifycfg",
          "--lcssa",
          "--globalopt",
          "--barrier",
          "--loop-unroll-and-jam",
          "--forceattrs",
          "--inline",
          "--aggressive-instcombine",
          "--always-inline",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inject-tli-mappings",
      "--ee-instrument",
      "--coro-early",
      "--add-discriminators",
      "--globalsplit",
      "--slsr",
      "--early-cse-memssa",
      "--simplifycfg",
      "--lcssa",
      "--globalopt",
      "--barrier",
      "--loop-unroll-and-jam",
      "--forceattrs",
      "--inline",
      "--aggressive-instcombine",
      "--always-inline",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}