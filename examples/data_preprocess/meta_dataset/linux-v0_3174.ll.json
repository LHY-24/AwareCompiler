{
  "program_id": "linux-v0_3174.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 4,
    "oneSuccessor": 18,
    "twoPred": 7,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 9,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 0,
    "BranchCount": 27,
    "returnInt": 3,
    "CriticalCount": 3,
    "NumEdges": 40,
    "const32Bit": 163,
    "const64Bit": 6,
    "numConstZeroes": 71,
    "numConstOnes": 54,
    "UncondBranches": 18,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 43,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 37,
    "NumBitCastInst": 13,
    "NumBrInst": 27,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 111,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 70,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 3,
    "NumZExtInst": 3,
    "TotalBlocks": 45,
    "TotalInsts": 391,
    "TotalMemInst": 302,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 176
  },
  "baseline_oz_instcount": 391,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--mergefunc",
    "--flattencfg",
    "--adce",
    "--slp-vectorizer",
    "--newgvn",
    "--loop-deletion",
    "--jump-threading",
    "--licm",
    "--sccp",
    "--early-cse-memssa",
    "--reassociate",
    "--lower-expect",
    "--load-store-vectorizer",
    "--indvars",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--deadargelim",
          "--adce",
          "--hotcoldsplit",
          "--mldst-motion",
          "--loop-simplifycfg",
          "--loop-load-elim",
          "--coro-elide",
          "--forceattrs",
          "--sancov",
          "--loop-versioning",
          "--loop-versioning-licm",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--deadargelim",
      "--adce",
      "--hotcoldsplit",
      "--mldst-motion",
      "--loop-simplifycfg",
      "--loop-load-elim",
      "--coro-elide",
      "--forceattrs",
      "--sancov",
      "--loop-versioning",
      "--loop-versioning-licm",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}