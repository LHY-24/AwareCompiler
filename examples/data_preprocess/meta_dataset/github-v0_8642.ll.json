{
  "program_id": "github-v0_8642.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 154,
    "const64Bit": 18,
    "numConstZeroes": 6,
    "numConstOnes": 60,
    "UncondBranches": 0,
    "binaryConstArg": 108,
    "NumAShrInst": 9,
    "NumAddInst": 0,
    "NumAllocaInst": 28,
    "NumAndInst": 52,
    "BlockMid": 16,
    "BlockLow": 0,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 0,
    "NumLShrInst": 19,
    "NumLoadInst": 122,
    "NumMulInst": 0,
    "NumOrInst": 29,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 28,
    "NumStoreInst": 81,
    "NumSubInst": 0,
    "NumTruncInst": 27,
    "NumXorInst": 0,
    "NumZExtInst": 36,
    "TotalBlocks": 16,
    "TotalInsts": 483,
    "TotalMemInst": 267,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 213
  },
  "baseline_oz_instcount": 483,
  "knowledge_base_entry": [
    "--loweratomic",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--loop-rotate",
    "--early-cse",
    "--bdce",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--die",
          "--early-cse",
          "--coro-cleanup",
          "--adce",
          "--nary-reassociate",
          "--early-cse-memssa",
          "--loop-vectorize",
          "--globalopt",
          "--simplifycfg",
          "--aggressive-instcombine",
          "--pgo-memop-opt",
          "--irce",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--die",
      "--early-cse",
      "--coro-cleanup",
      "--adce",
      "--nary-reassociate",
      "--early-cse-memssa",
      "--loop-vectorize",
      "--globalopt",
      "--simplifycfg",
      "--aggressive-instcombine",
      "--pgo-memop-opt",
      "--irce",
      "--barrier"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}