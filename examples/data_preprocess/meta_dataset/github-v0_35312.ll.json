{
  "program_id": "github-v0_35312.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 7,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 13,
    "const32Bit": 13,
    "const64Bit": 0,
    "numConstZeroes": 3,
    "numConstOnes": 8,
    "UncondBranches": 7,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 11,
    "NumBitCastInst": 0,
    "NumBrInst": 10,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 11,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 9,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 11,
    "TotalInsts": 46,
    "TotalMemInst": 26,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 18
  },
  "baseline_oz_instcount": 47,
  "knowledge_base_entry": [
    "--reassociate",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--reassociate",
    "--early-cse",
    "--dse",
    "--dce",
    "--elim-avail-extern",
    "--globalopt",
    "--ipsccp",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--constmerge",
          "--instcombine",
          "--ee-instrument",
          "--consthoist",
          "--elim-avail-extern",
          "--barrier",
          "--name-anon-globals",
          "--dce",
          "--lowerswitch",
          "--scalarizer",
          "--add-discriminators",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--constmerge",
      "--instcombine",
      "--ee-instrument",
      "--consthoist",
      "--elim-avail-extern",
      "--barrier",
      "--name-anon-globals",
      "--dce",
      "--lowerswitch",
      "--scalarizer",
      "--add-discriminators",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}