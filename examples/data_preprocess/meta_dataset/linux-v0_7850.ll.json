{
  "program_id": "linux-v0_7850.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 7,
    "oneSuccessor": 37,
    "twoPred": 17,
    "twoPredOneSuc": 6,
    "twoEach": 5,
    "twoSuccessor": 17,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 0,
    "BranchCount": 52,
    "returnInt": 9,
    "CriticalCount": 7,
    "NumEdges": 71,
    "const32Bit": 191,
    "const64Bit": 31,
    "numConstZeroes": 111,
    "numConstOnes": 75,
    "UncondBranches": 37,
    "binaryConstArg": 23,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 40,
    "NumAndInst": 10,
    "BlockMid": 7,
    "BlockLow": 57,
    "NumBitCastInst": 8,
    "NumBrInst": 52,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 69,
    "NumICmpInst": 17,
    "NumLShrInst": 2,
    "NumLoadInst": 112,
    "NumMulInst": 2,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 52,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 4,
    "NumZExtInst": 6,
    "TotalBlocks": 64,
    "TotalInsts": 428,
    "TotalMemInst": 298,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 177
  },
  "baseline_oz_instcount": 430,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--early-cse",
    "--correlated-propagation",
    "--simplifycfg",
    "--early-cse",
    "--memcpyopt",
    "--gvn-hoist",
    "-loop-reduce",
    "--simplifycfg",
    "--reassociate",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--instsimplify",
    "--licm",
    "--adce",
    "--sroa",
    "--instcombine",
    "--loop-simplifycfg",
    "--dse",
    "--bdce",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--infer-address-spaces",
          "--constmerge",
          "--functionattrs",
          "--lower-guard-intrinsic",
          "--early-cse",
          "--insert-gcov-profiling",
          "--speculative-execution",
          "--loop-unroll-and-jam",
          "--flattencfg",
          "--loop-idiom",
          "--deadargelim",
          "--strip-dead-prototypes",
          "--loweratomic",
          "--scalarizer",
          "--rewrite-statepoints-for-gc",
          "--instcombine",
          "--called-value-propagation",
          "--slp-vectorizer",
          "--consthoist",
          "--mldst-motion",
          "--div-rem-pairs",
          "--constprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--infer-address-spaces",
      "--constmerge",
      "--functionattrs",
      "--lower-guard-intrinsic",
      "--early-cse",
      "--insert-gcov-profiling",
      "--speculative-execution",
      "--loop-unroll-and-jam",
      "--flattencfg",
      "--loop-idiom",
      "--deadargelim",
      "--strip-dead-prototypes",
      "--loweratomic",
      "--scalarizer",
      "--rewrite-statepoints-for-gc",
      "--instcombine",
      "--called-value-propagation",
      "--slp-vectorizer",
      "--consthoist",
      "--mldst-motion",
      "--div-rem-pairs",
      "--constprop"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}