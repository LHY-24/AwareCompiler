{
  "program_id": "tensorflow-v0_1633.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 28,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 4,
    "const32Bit": 49,
    "const64Bit": 35,
    "numConstZeroes": 78,
    "numConstOnes": 8,
    "UncondBranches": 0,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 2,
    "BlockLow": 26,
    "NumBitCastInst": 8,
    "NumBrInst": 0,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 2,
    "NumLShrInst": 2,
    "NumLoadInst": 6,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 0,
    "NumSelectInst": 4,
    "NumShlInst": 0,
    "NumStoreInst": 0,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 28,
    "TotalInsts": 112,
    "TotalMemInst": 62,
    "TotalFuncs": 36,
    "ArgsPhi": 0,
    "testUnary": 18
  },
  "baseline_oz_instcount": 112,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--slp-vectorizer",
    "--mergefunc",
    "--newgvn",
    "--reassociate",
    "--licm",
    "--lower-expect",
    "--early-cse-memssa",
    "--globalopt",
    "--jump-threading",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--flattencfg",
    "--aggressive-instcombine",
    "--sroa",
    "--bdce",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--lowerinvoke",
          "--deadargelim",
          "--ipconstprop",
          "--alignment-from-assumptions",
          "--partial-inliner",
          "--lower-matrix-intrinsics",
          "--mem2reg",
          "--globalsplit",
          "--forceattrs",
          "--loop-versioning",
          "--reg2mem",
          "--gvn-hoist",
          "--reassociate",
          "--sccp",
          "--mergefunc",
          "--instnamer",
          "--indvars",
          "--infer-address-spaces",
          "--constprop",
          "--elim-avail-extern",
          "--adce",
          "--rewrite-statepoints-for-gc",
          "--tailcallelim",
          "--lcssa",
          "--slp-vectorizer",
          "--globalopt",
          "--canonicalize-aliases"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+27.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--lowerinvoke",
      "--deadargelim",
      "--ipconstprop",
      "--alignment-from-assumptions",
      "--partial-inliner",
      "--lower-matrix-intrinsics",
      "--mem2reg",
      "--globalsplit",
      "--forceattrs",
      "--loop-versioning",
      "--reg2mem",
      "--gvn-hoist",
      "--reassociate",
      "--sccp",
      "--mergefunc",
      "--instnamer",
      "--indvars",
      "--infer-address-spaces",
      "--constprop",
      "--elim-avail-extern",
      "--adce",
      "--rewrite-statepoints-for-gc",
      "--tailcallelim",
      "--lcssa",
      "--slp-vectorizer",
      "--globalopt",
      "--canonicalize-aliases"
    ],
    "performance_vs_Oz": "+27.7%"
  }
}