{
  "program_id": "linux-v0_7666.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 39,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 13,
    "oneSuccessor": 35,
    "twoPred": 19,
    "twoPredOneSuc": 8,
    "twoEach": 9,
    "twoSuccessor": 25,
    "morePreds": 2,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 5,
    "BranchCount": 60,
    "returnInt": 13,
    "CriticalCount": 16,
    "NumEdges": 85,
    "const32Bit": 198,
    "const64Bit": 8,
    "numConstZeroes": 93,
    "numConstOnes": 69,
    "UncondBranches": 35,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 54,
    "NumAndInst": 6,
    "BlockMid": 8,
    "BlockLow": 69,
    "NumBitCastInst": 10,
    "NumBrInst": 60,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 47,
    "NumICmpInst": 27,
    "NumLShrInst": 0,
    "NumLoadInst": 135,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 5,
    "NumRetInst": 17,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 71,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 77,
    "TotalInsts": 506,
    "TotalMemInst": 348,
    "TotalFuncs": 36,
    "ArgsPhi": 10,
    "testUnary": 221
  },
  "baseline_oz_instcount": 506,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--inline",
    "--nary-reassociate",
    "-loop-reduce",
    "--jump-threading",
    "--licm",
    "--newgvn",
    "--loop-fusion",
    "--early-cse",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--strip-dead-prototypes",
          "--loop-simplify",
          "--libcalls-shrinkwrap",
          "--aggressive-instcombine",
          "--reassociate",
          "--inline",
          "--memcpyopt",
          "--ee-instrument",
          "--strip-nondebug",
          "--hotcoldsplit",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--strip-dead-prototypes",
      "--loop-simplify",
      "--libcalls-shrinkwrap",
      "--aggressive-instcombine",
      "--reassociate",
      "--inline",
      "--memcpyopt",
      "--ee-instrument",
      "--strip-nondebug",
      "--hotcoldsplit",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}