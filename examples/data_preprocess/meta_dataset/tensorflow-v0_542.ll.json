{
  "program_id": "tensorflow-v0_542.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 4,
    "oneSuccessor": 11,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 5,
    "BranchCount": 21,
    "returnInt": 1,
    "CriticalCount": 7,
    "NumEdges": 31,
    "const32Bit": 75,
    "const64Bit": 66,
    "numConstZeroes": 84,
    "numConstOnes": 15,
    "UncondBranches": 11,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 25,
    "NumBitCastInst": 18,
    "NumBrInst": 21,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 56,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 38,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 7,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 29,
    "TotalInsts": 206,
    "TotalMemInst": 138,
    "TotalFuncs": 11,
    "ArgsPhi": 15,
    "testUnary": 56
  },
  "baseline_oz_instcount": 205,
  "knowledge_base_entry": [
    "--loweratomic",
    "--globalopt",
    "--gvn-hoist",
    "--prune-eh",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--licm",
    "--instcombine",
    "--jump-threading",
    "--adce",
    "--reassociate",
    "--sroa",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--gvn",
          "--prune-eh",
          "--inject-tli-mappings",
          "--speculative-execution",
          "--aggressive-instcombine",
          "--redundant-dbg-inst-elim",
          "--break-crit-edges",
          "--loop-vectorize",
          "--slp-vectorizer",
          "--instnamer",
          "--deadargelim",
          "--slsr",
          "--separate-const-offset-from-gep",
          "--pgo-memop-opt",
          "--early-cse",
          "--loop-simplify",
          "--ipconstprop",
          "--gvn-hoist",
          "--adce",
          "--irce",
          "--lower-matrix-intrinsics",
          "--simplifycfg",
          "--coro-elide",
          "--constmerge",
          "--loweratomic",
          "--loop-data-prefetch",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--gvn",
      "--prune-eh",
      "--inject-tli-mappings",
      "--speculative-execution",
      "--aggressive-instcombine",
      "--redundant-dbg-inst-elim",
      "--break-crit-edges",
      "--loop-vectorize",
      "--slp-vectorizer",
      "--instnamer",
      "--deadargelim",
      "--slsr",
      "--separate-const-offset-from-gep",
      "--pgo-memop-opt",
      "--early-cse",
      "--loop-simplify",
      "--ipconstprop",
      "--gvn-hoist",
      "--adce",
      "--irce",
      "--lower-matrix-intrinsics",
      "--simplifycfg",
      "--coro-elide",
      "--constmerge",
      "--loweratomic",
      "--loop-data-prefetch",
      "--strip"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}