{
  "program_id": "linux-v0_7282.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 91,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 34,
    "oneSuccessor": 64,
    "twoPred": 21,
    "twoPredOneSuc": 1,
    "twoEach": 13,
    "twoSuccessor": 73,
    "morePreds": 25,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 149,
    "BeginPhi": 0,
    "BranchCount": 137,
    "returnInt": 61,
    "CriticalCount": 55,
    "NumEdges": 210,
    "const32Bit": 258,
    "const64Bit": 1,
    "numConstZeroes": 106,
    "numConstOnes": 95,
    "UncondBranches": 64,
    "binaryConstArg": 43,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 84,
    "NumAndInst": 34,
    "BlockMid": 10,
    "BlockLow": 139,
    "NumBitCastInst": 1,
    "NumBrInst": 137,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 99,
    "NumLShrInst": 0,
    "NumLoadInst": 236,
    "NumMulInst": 0,
    "NumOrInst": 11,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 0,
    "NumSelectInst": 4,
    "NumShlInst": 0,
    "NumStoreInst": 117,
    "NumSubInst": 0,
    "NumTruncInst": 26,
    "NumXorInst": 0,
    "NumZExtInst": 56,
    "TotalBlocks": 149,
    "TotalInsts": 881,
    "TotalMemInst": 501,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 403
  },
  "baseline_oz_instcount": 881,
  "knowledge_base_entry": [
    "--newgvn",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--loop-reroll",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--redundant-dbg-inst-elim",
          "--alignment-from-assumptions",
          "--partial-inliner",
          "--coro-elide",
          "--constprop",
          "--gvn-hoist",
          "--die",
          "--mergereturn",
          "--loop-unroll",
          "--float2int",
          "--canonicalize-aliases",
          "--consthoist",
          "--sroa",
          "--libcalls-shrinkwrap",
          "--name-anon-globals",
          "--insert-gcov-profiling",
          "--aggressive-instcombine",
          "--lower-widenable-condition",
          "--loop-instsimplify",
          "--strip-nondebug",
          "--callsite-splitting"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--redundant-dbg-inst-elim",
      "--alignment-from-assumptions",
      "--partial-inliner",
      "--coro-elide",
      "--constprop",
      "--gvn-hoist",
      "--die",
      "--mergereturn",
      "--loop-unroll",
      "--float2int",
      "--canonicalize-aliases",
      "--consthoist",
      "--sroa",
      "--libcalls-shrinkwrap",
      "--name-anon-globals",
      "--insert-gcov-profiling",
      "--aggressive-instcombine",
      "--lower-widenable-condition",
      "--loop-instsimplify",
      "--strip-nondebug",
      "--callsite-splitting"
    ],
    "performance_vs_Oz": "+5.4%"
  }
}