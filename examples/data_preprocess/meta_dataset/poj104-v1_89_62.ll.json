{
  "program_id": "poj104-v1_89_62.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 12,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 9,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 35,
    "BeginPhi": 1,
    "BranchCount": 21,
    "returnInt": 7,
    "CriticalCount": 4,
    "NumEdges": 30,
    "const32Bit": 42,
    "const64Bit": 12,
    "numConstZeroes": 17,
    "numConstOnes": 28,
    "UncondBranches": 12,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 21,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 35,
    "NumBitCastInst": 14,
    "NumBrInst": 21,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 50,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 14,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 36,
    "TotalInsts": 212,
    "TotalMemInst": 143,
    "TotalFuncs": 28,
    "ArgsPhi": 2,
    "testUnary": 90
  },
  "baseline_oz_instcount": 71,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--early-cse-memssa",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--sroa",
    "--ipsccp",
    "--mergefunc",
    "--licm",
    "--newgvn",
    "--elim-avail-extern",
    "--jump-threading",
    "--simplifycfg",
    "--gvn",
    "--mldst-motion",
    "--dse",
    "--gvn-hoist",
    "--mem2reg",
    "--early-cse",
    "--newgvn",
    "--instcombine",
    "--early-cse-memssa",
    "--mem2reg",
    "--jump-threading",
    "--loop-instsimplify",
    "--inline",
    "--dce",
    "--newgvn",
    "--instcombine",
    "--gvn-hoist",
    "--memcpyopt",
    "--slp-vectorizer",
    "--dse",
    "--reassociate",
    "--simplifycfg",
    "--sroa",
    "--memcpyopt",
    "--elim-avail-extern",
    "--gvn",
    "--mergefunc",
    "--dse",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-cleanup",
          "--newgvn",
          "--alignment-from-assumptions",
          "--loop-deletion",
          "--add-discriminators",
          "--deadargelim",
          "--div-rem-pairs",
          "--loop-versioning",
          "--elim-avail-extern",
          "--jump-threading",
          "-loop-reduce",
          "--slsr",
          "--globaldce",
          "--aggressive-instcombine",
          "--early-cse-memssa",
          "--mergefunc",
          "--inferattrs",
          "--tailcallelim",
          "--loop-load-elim",
          "--load-store-vectorizer",
          "--instsimplify",
          "--ee-instrument",
          "--forceattrs",
          "--strip-nondebug",
          "--name-anon-globals",
          "--globalopt",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-cleanup",
      "--newgvn",
      "--alignment-from-assumptions",
      "--loop-deletion",
      "--add-discriminators",
      "--deadargelim",
      "--div-rem-pairs",
      "--loop-versioning",
      "--elim-avail-extern",
      "--jump-threading",
      "-loop-reduce",
      "--slsr",
      "--globaldce",
      "--aggressive-instcombine",
      "--early-cse-memssa",
      "--mergefunc",
      "--inferattrs",
      "--tailcallelim",
      "--loop-load-elim",
      "--load-store-vectorizer",
      "--instsimplify",
      "--ee-instrument",
      "--forceattrs",
      "--strip-nondebug",
      "--name-anon-globals",
      "--globalopt",
      "--strip"
    ],
    "performance_vs_Oz": "+5.6%"
  }
}