{
  "program_id": "github-v0_31507.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 2,
    "BBNoPhi": 6,
    "BeginPhi": 2,
    "BranchCount": 7,
    "returnInt": 56,
    "CriticalCount": 2,
    "NumEdges": 10,
    "const32Bit": 18,
    "const64Bit": 280,
    "numConstZeroes": 39,
    "numConstOnes": 56,
    "UncondBranches": 4,
    "binaryConstArg": 145,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 0,
    "NumAndInst": 3,
    "BlockMid": 6,
    "BlockLow": 2,
    "NumBitCastInst": 0,
    "NumBrInst": 7,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 3,
    "NumLShrInst": 67,
    "NumLoadInst": 60,
    "NumMulInst": 30,
    "NumOrInst": 69,
    "NumPHIInst": 16,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 68,
    "NumStoreInst": 2,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 207,
    "NumZExtInst": 1,
    "TotalBlocks": 8,
    "TotalInsts": 836,
    "TotalMemInst": 178,
    "TotalFuncs": 3,
    "ArgsPhi": 32,
    "testUnary": 61
  },
  "baseline_oz_instcount": 836,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--sroa",
    "--die",
    "--early-cse-memssa",
    "--reassociate",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--bdce",
    "--lower-expect",
    "--gvn",
    "--die",
    "--correlated-propagation",
    "--ipsccp",
    "--licm",
    "--sroa",
    "--slp-vectorizer",
    "-loop-reduce",
    "--indvars",
    "--instcombine",
    "--mergefunc",
    "--dce",
    "--aggressive-instcombine",
    "--globalopt",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--instsimplify",
    "--dce",
    "--gvn",
    "--simplifycfg",
    "--inline",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--coro-early",
          "--sroa",
          "--reassociate",
          "--slsr",
          "--loop-vectorize",
          "--loop-unswitch",
          "--early-cse",
          "--strip",
          "--loop-data-prefetch",
          "--sink",
          "--loop-guard-widening",
          "--infer-address-spaces",
          "--forceattrs",
          "--strip-debug-declare",
          "--deadargelim",
          "--instcombine",
          "--gvn-hoist",
          "--strip-dead-prototypes",
          "--loop-versioning",
          "--callsite-splitting",
          "--loop-sink",
          "--partial-inliner",
          "--simplifycfg",
          "--lowerswitch",
          "--canonicalize-aliases",
          "--ipconstprop",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--coro-early",
      "--sroa",
      "--reassociate",
      "--slsr",
      "--loop-vectorize",
      "--loop-unswitch",
      "--early-cse",
      "--strip",
      "--loop-data-prefetch",
      "--sink",
      "--loop-guard-widening",
      "--infer-address-spaces",
      "--forceattrs",
      "--strip-debug-declare",
      "--deadargelim",
      "--instcombine",
      "--gvn-hoist",
      "--strip-dead-prototypes",
      "--loop-versioning",
      "--callsite-splitting",
      "--loop-sink",
      "--partial-inliner",
      "--simplifycfg",
      "--lowerswitch",
      "--canonicalize-aliases",
      "--ipconstprop",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}