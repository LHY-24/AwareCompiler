{
  "program_id": "github-v0_27299.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 15,
    "oneSuccessor": 13,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 22,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 49,
    "BeginPhi": 0,
    "BranchCount": 35,
    "returnInt": 20,
    "CriticalCount": 9,
    "NumEdges": 57,
    "const32Bit": 90,
    "const64Bit": 18,
    "numConstZeroes": 41,
    "numConstOnes": 43,
    "UncondBranches": 13,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 25,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 41,
    "NumBitCastInst": 6,
    "NumBrInst": 35,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 105,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 49,
    "TotalInsts": 342,
    "TotalMemInst": 244,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 149
  },
  "baseline_oz_instcount": 343,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--aggressive-instcombine",
    "--dce",
    "--newgvn",
    "--instcombine",
    "--die",
    "--gvn",
    "--dse",
    "--lower-expect",
    "--sccp",
    "--simplifycfg",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--constprop",
          "--coro-split",
          "--functionattrs",
          "--elim-avail-extern",
          "--lower-matrix-intrinsics",
          "--load-store-vectorizer",
          "--nary-reassociate",
          "--libcalls-shrinkwrap",
          "--loop-unroll-and-jam",
          "--gvn",
          "--bdce",
          "--hotcoldsplit",
          "--globalopt",
          "--always-inline",
          "--partial-inliner",
          "--deadargelim",
          "--aggressive-instcombine",
          "--lower-expect"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--constprop",
      "--coro-split",
      "--functionattrs",
      "--elim-avail-extern",
      "--lower-matrix-intrinsics",
      "--load-store-vectorizer",
      "--nary-reassociate",
      "--libcalls-shrinkwrap",
      "--loop-unroll-and-jam",
      "--gvn",
      "--bdce",
      "--hotcoldsplit",
      "--globalopt",
      "--always-inline",
      "--partial-inliner",
      "--deadargelim",
      "--aggressive-instcombine",
      "--lower-expect"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}