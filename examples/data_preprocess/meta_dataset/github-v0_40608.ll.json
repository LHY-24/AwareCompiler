{
  "program_id": "github-v0_40608.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 42,
    "const64Bit": 35,
    "numConstZeroes": 39,
    "numConstOnes": 25,
    "UncondBranches": 13,
    "binaryConstArg": 21,
    "NumAShrInst": 6,
    "NumAddInst": 6,
    "NumAllocaInst": 12,
    "NumAndInst": 5,
    "BlockMid": 7,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 43,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 19,
    "NumSubInst": 1,
    "NumTruncInst": 11,
    "NumXorInst": 0,
    "NumZExtInst": 28,
    "TotalBlocks": 24,
    "TotalInsts": 210,
    "TotalMemInst": 105,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 101
  },
  "baseline_oz_instcount": 210,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--simplifycfg",
    "--licm",
    "--mldst-motion",
    "--gvn",
    "--licm",
    "--licm",
    "--adce",
    "--gvn",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--argpromotion",
          "--float2int",
          "--instsimplify",
          "--flattencfg",
          "--die",
          "--lcssa",
          "--dse",
          "--aggressive-instcombine",
          "--loop-rotate",
          "--slsr",
          "--early-cse-memssa",
          "--redundant-dbg-inst-elim",
          "--alignment-from-assumptions",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--argpromotion",
      "--float2int",
      "--instsimplify",
      "--flattencfg",
      "--die",
      "--lcssa",
      "--dse",
      "--aggressive-instcombine",
      "--loop-rotate",
      "--slsr",
      "--early-cse-memssa",
      "--redundant-dbg-inst-elim",
      "--alignment-from-assumptions",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+7.1%"
  }
}