{
  "program_id": "linux-v0_7286.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 80,
    "onePredOneSuc": 69,
    "onePredTwoSuc": 9,
    "oneSuccessor": 80,
    "twoPred": 14,
    "twoPredOneSuc": 8,
    "twoEach": 2,
    "twoSuccessor": 15,
    "morePreds": 14,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 121,
    "BeginPhi": 0,
    "BranchCount": 95,
    "returnInt": 3,
    "CriticalCount": 18,
    "NumEdges": 172,
    "const32Bit": 440,
    "const64Bit": 14,
    "numConstZeroes": 207,
    "numConstOnes": 107,
    "UncondBranches": 80,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 51,
    "NumAndInst": 8,
    "BlockMid": 14,
    "BlockLow": 107,
    "NumBitCastInst": 19,
    "NumBrInst": 95,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 136,
    "NumICmpInst": 21,
    "NumLShrInst": 3,
    "NumLoadInst": 184,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 4,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 128,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 6,
    "NumZExtInst": 25,
    "TotalBlocks": 121,
    "TotalInsts": 738,
    "TotalMemInst": 522,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 285
  },
  "baseline_oz_instcount": 738,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--bdce",
    "--early-cse-memssa",
    "--mldst-motion",
    "--mem2reg",
    "--aggressive-instcombine",
    "--dce",
    "--newgvn",
    "--flattencfg",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--dce",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--instcombine",
    "--mem2reg",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--newgvn",
    "--bdce",
    "--reassociate",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--flattencfg",
    "--load-store-vectorizer",
    "--bdce",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "-loop-reduce",
          "--globalsplit",
          "--inline",
          "--libcalls-shrinkwrap",
          "--licm",
          "--adce",
          "--jump-threading",
          "--partially-inline-libcalls",
          "--pgo-memop-opt",
          "--aggressive-instcombine",
          "--infer-address-spaces"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "-loop-reduce",
      "--globalsplit",
      "--inline",
      "--libcalls-shrinkwrap",
      "--licm",
      "--adce",
      "--jump-threading",
      "--partially-inline-libcalls",
      "--pgo-memop-opt",
      "--aggressive-instcombine",
      "--infer-address-spaces"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}