{
  "program_id": "linux-v0_2098.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 102,
    "onePredOneSuc": 79,
    "onePredTwoSuc": 17,
    "oneSuccessor": 96,
    "twoPred": 24,
    "twoPredOneSuc": 9,
    "twoEach": 8,
    "twoSuccessor": 35,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 150,
    "BeginPhi": 0,
    "BranchCount": 131,
    "returnInt": 27,
    "CriticalCount": 19,
    "NumEdges": 180,
    "const32Bit": 296,
    "const64Bit": 10,
    "numConstZeroes": 87,
    "numConstOnes": 139,
    "UncondBranches": 96,
    "binaryConstArg": 44,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 120,
    "NumAndInst": 14,
    "BlockMid": 15,
    "BlockLow": 135,
    "NumBitCastInst": 10,
    "NumBrInst": 131,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 39,
    "NumICmpInst": 34,
    "NumLShrInst": 2,
    "NumLoadInst": 239,
    "NumMulInst": 1,
    "NumOrInst": 11,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 10,
    "NumStoreInst": 208,
    "NumSubInst": 4,
    "NumTruncInst": 7,
    "NumXorInst": 1,
    "NumZExtInst": 47,
    "TotalBlocks": 150,
    "TotalInsts": 963,
    "TotalMemInst": 658,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 423
  },
  "baseline_oz_instcount": 960,
  "knowledge_base_entry": [
    "--sccp",
    "--simplifycfg",
    "--bdce",
    "--ipsccp",
    "--gvn",
    "--jump-threading",
    "--flattencfg",
    "--jump-threading",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--flattencfg",
    "--aggressive-instcombine",
    "--jump-threading",
    "--early-cse-memssa",
    "--early-cse",
    "--adce",
    "--ipsccp",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--flattencfg",
    "--aggressive-instcombine",
    "--jump-threading",
    "--early-cse-memssa",
    "--early-cse",
    "--adce",
    "--ipsccp",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instcombine",
          "--loop-distribute",
          "--bdce",
          "--slp-vectorizer",
          "--dce",
          "--loop-guard-widening",
          "--loop-unroll",
          "--gvn-hoist",
          "--name-anon-globals",
          "--globalopt",
          "--loweratomic",
          "--aggressive-instcombine",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instcombine",
      "--loop-distribute",
      "--bdce",
      "--slp-vectorizer",
      "--dce",
      "--loop-guard-widening",
      "--loop-unroll",
      "--gvn-hoist",
      "--name-anon-globals",
      "--globalopt",
      "--loweratomic",
      "--aggressive-instcombine",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}