{
  "program_id": "tensorflow-v0_1797.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 13,
    "onePred": 62,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 33,
    "oneSuccessor": 23,
    "twoPred": 28,
    "twoPredOneSuc": 6,
    "twoEach": 17,
    "twoSuccessor": 58,
    "morePreds": 4,
    "BB03Phi": 14,
    "BBHiPhi": 0,
    "BBNoPhi": 87,
    "BeginPhi": 14,
    "BranchCount": 72,
    "returnInt": 9,
    "CriticalCount": 54,
    "NumEdges": 139,
    "const32Bit": 118,
    "const64Bit": 66,
    "numConstZeroes": 66,
    "numConstOnes": 42,
    "UncondBranches": 23,
    "binaryConstArg": 50,
    "NumAShrInst": 6,
    "NumAddInst": 4,
    "NumAllocaInst": 7,
    "NumAndInst": 20,
    "BlockMid": 2,
    "BlockLow": 99,
    "NumBitCastInst": 27,
    "NumBrInst": 72,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 49,
    "NumLShrInst": 1,
    "NumLoadInst": 40,
    "NumMulInst": 0,
    "NumOrInst": 11,
    "NumPHIInst": 16,
    "NumRetInst": 6,
    "NumSExtInst": 1,
    "NumSelectInst": 6,
    "NumShlInst": 14,
    "NumStoreInst": 34,
    "NumSubInst": 6,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 0,
    "TotalBlocks": 101,
    "TotalInsts": 474,
    "TotalMemInst": 166,
    "TotalFuncs": 33,
    "ArgsPhi": 39,
    "testUnary": 109
  },
  "baseline_oz_instcount": 506,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--instcombine",
    "--sccp",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--dse",
    "--inline",
    "--gvn",
    "--lower-expect",
    "--gvn-hoist",
    "--mem2reg",
    "--lower-expect",
    "--nary-reassociate",
    "--newgvn",
    "--lower-expect",
    "--dse",
    "--ipsccp",
    "--sroa",
    "--mldst-motion",
    "--simplifycfg",
    "--mergefunc",
    "--correlated-propagation",
    "--newgvn",
    "--lower-expect",
    "--gvn",
    "--simplifycfg",
    "--slsr",
    "--newgvn",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--lower-expect",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--licm",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--instcombine",
    "--newgvn",
    "--mem2reg",
    "--dce",
    "--correlated-propagation",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--irce",
          "--loop-fusion",
          "--lowerinvoke",
          "--sancov",
          "--break-crit-edges",
          "--add-discriminators",
          "--infer-address-spaces",
          "--loop-unswitch",
          "--redundant-dbg-inst-elim",
          "--loop-rotate",
          "--loop-simplifycfg",
          "--partially-inline-libcalls",
          "--barrier",
          "--ee-instrument",
          "--indvars",
          "--loop-vectorize",
          "--aggressive-instcombine",
          "--loop-versioning-licm",
          "--loop-distribute",
          "--simplifycfg",
          "--lowerswitch",
          "--correlated-propagation",
          "--mldst-motion",
          "--loop-instsimplify",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+17.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--irce",
      "--loop-fusion",
      "--lowerinvoke",
      "--sancov",
      "--break-crit-edges",
      "--add-discriminators",
      "--infer-address-spaces",
      "--loop-unswitch",
      "--redundant-dbg-inst-elim",
      "--loop-rotate",
      "--loop-simplifycfg",
      "--partially-inline-libcalls",
      "--barrier",
      "--ee-instrument",
      "--indvars",
      "--loop-vectorize",
      "--aggressive-instcombine",
      "--loop-versioning-licm",
      "--loop-distribute",
      "--simplifycfg",
      "--lowerswitch",
      "--correlated-propagation",
      "--mldst-motion",
      "--loop-instsimplify",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+17.8%"
  }
}