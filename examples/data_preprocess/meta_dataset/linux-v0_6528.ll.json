{
  "program_id": "linux-v0_6528.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 30,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 4,
    "oneSuccessor": 30,
    "twoPred": 8,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 10,
    "CriticalCount": 4,
    "NumEdges": 46,
    "const32Bit": 236,
    "const64Bit": 16,
    "numConstZeroes": 128,
    "numConstOnes": 64,
    "UncondBranches": 30,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 53,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 43,
    "NumBitCastInst": 17,
    "NumBrInst": 38,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 92,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 127,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 58,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 50,
    "TotalInsts": 436,
    "TotalMemInst": 347,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 205
  },
  "baseline_oz_instcount": 436,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--inline",
    "--nary-reassociate",
    "--dse",
    "--gvn-hoist",
    "--sccp",
    "--die",
    "--load-store-vectorizer",
    "--bdce",
    "--loop-instsimplify",
    "--licm",
    "--simplifycfg",
    "--instcombine",
    "--memcpyopt",
    "--gvn",
    "--elim-avail-extern",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--reassociate",
          "--mem2reg",
          "--sink",
          "--forceattrs",
          "--strip",
          "--lowerinvoke",
          "--loop-deletion",
          "--sccp",
          "--ipconstprop",
          "--loop-distribute",
          "--inject-tli-mappings",
          "--mergereturn",
          "--mergefunc",
          "--memcpyopt",
          "--float2int",
          "--lowerswitch",
          "--instsimplify",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--reassociate",
      "--mem2reg",
      "--sink",
      "--forceattrs",
      "--strip",
      "--lowerinvoke",
      "--loop-deletion",
      "--sccp",
      "--ipconstprop",
      "--loop-distribute",
      "--inject-tli-mappings",
      "--mergereturn",
      "--mergefunc",
      "--memcpyopt",
      "--float2int",
      "--lowerswitch",
      "--instsimplify",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}