{
  "program_id": "poj104-v1_47_3135.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 0,
    "oneSuccessor": 11,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 7,
    "CriticalCount": 0,
    "NumEdges": 21,
    "const32Bit": 42,
    "const64Bit": 15,
    "numConstZeroes": 10,
    "numConstOnes": 28,
    "UncondBranches": 11,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 27,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 29,
    "NumBitCastInst": 20,
    "NumBrInst": 16,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 51,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 31,
    "TotalInsts": 223,
    "TotalMemInst": 158,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 103
  },
  "baseline_oz_instcount": 50,
  "knowledge_base_entry": [
    "--loop-interchange",
    "--newgvn",
    "--elim-avail-extern",
    "--licm",
    "--bdce",
    "--inline",
    "--gvn",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--newgvn",
    "--loop-simplifycfg",
    "--slsr",
    "--indvars",
    "--gvn",
    "--loop-reroll",
    "--instsimplify",
    "--instcombine",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipconstprop",
          "--elim-avail-extern",
          "--add-discriminators",
          "--mem2reg",
          "--inferattrs",
          "--strip-nondebug",
          "--loop-fusion",
          "--loop-unroll-and-jam",
          "--redundant-dbg-inst-elim",
          "--infer-address-spaces",
          "--irce",
          "--partial-inliner",
          "--pgo-memop-opt",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipconstprop",
      "--elim-avail-extern",
      "--add-discriminators",
      "--mem2reg",
      "--inferattrs",
      "--strip-nondebug",
      "--loop-fusion",
      "--loop-unroll-and-jam",
      "--redundant-dbg-inst-elim",
      "--infer-address-spaces",
      "--irce",
      "--partial-inliner",
      "--pgo-memop-opt",
      "--inline"
    ],
    "performance_vs_Oz": "+4.0%"
  }
}