{
  "program_id": "linux-v0_9353.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 29,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 3,
    "oneSuccessor": 27,
    "twoPred": 11,
    "twoPredOneSuc": 1,
    "twoEach": 7,
    "twoSuccessor": 15,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 2,
    "BranchCount": 42,
    "returnInt": 3,
    "CriticalCount": 7,
    "NumEdges": 57,
    "const32Bit": 123,
    "const64Bit": 10,
    "numConstZeroes": 42,
    "numConstOnes": 68,
    "UncondBranches": 27,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 53,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 41,
    "NumBitCastInst": 6,
    "NumBrInst": 42,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 104,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 8,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 73,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 8,
    "NumZExtInst": 9,
    "TotalBlocks": 50,
    "TotalInsts": 389,
    "TotalMemInst": 281,
    "TotalFuncs": 20,
    "ArgsPhi": 4,
    "testUnary": 187
  },
  "baseline_oz_instcount": 389,
  "knowledge_base_entry": [
    "--gvn",
    "--instsimplify",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--gvn",
    "--flattencfg",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-deletion",
          "--hotcoldsplit",
          "--consthoist",
          "--strip-debug-declare",
          "--flattencfg",
          "--jump-threading",
          "--always-inline",
          "--lowerinvoke",
          "--cross-dso-cfi",
          "--irce",
          "--nary-reassociate",
          "--globalopt",
          "--sroa",
          "--loop-data-prefetch",
          "--separate-const-offset-from-gep",
          "--called-value-propagation",
          "--mergeicmps",
          "--pgo-memop-opt",
          "--aggressive-instcombine",
          "--partial-inliner",
          "--sink",
          "--loop-guard-widening",
          "--load-store-vectorizer",
          "--loop-unroll",
          "--constmerge",
          "--loop-instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-deletion",
      "--hotcoldsplit",
      "--consthoist",
      "--strip-debug-declare",
      "--flattencfg",
      "--jump-threading",
      "--always-inline",
      "--lowerinvoke",
      "--cross-dso-cfi",
      "--irce",
      "--nary-reassociate",
      "--globalopt",
      "--sroa",
      "--loop-data-prefetch",
      "--separate-const-offset-from-gep",
      "--called-value-propagation",
      "--mergeicmps",
      "--pgo-memop-opt",
      "--aggressive-instcombine",
      "--partial-inliner",
      "--sink",
      "--loop-guard-widening",
      "--load-store-vectorizer",
      "--loop-unroll",
      "--constmerge",
      "--loop-instsimplify"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}