{
  "program_id": "github-v0_29172.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 6,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 2,
    "oneSuccessor": 6,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 1,
    "BranchCount": 11,
    "returnInt": 0,
    "CriticalCount": 4,
    "NumEdges": 16,
    "const32Bit": 14,
    "const64Bit": 0,
    "numConstZeroes": 6,
    "numConstOnes": 8,
    "UncondBranches": 6,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 12,
    "NumBitCastInst": 0,
    "NumBrInst": 11,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 12,
    "TotalInsts": 54,
    "TotalMemInst": 33,
    "TotalFuncs": 2,
    "ArgsPhi": 2,
    "testUnary": 20
  },
  "baseline_oz_instcount": 55,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--reassociate",
    "--lower-expect",
    "--adce",
    "--aggressive-instcombine",
    "--instcombine",
    "--memcpyopt",
    "--mem2reg",
    "--bdce",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--bdce",
    "--load-store-vectorizer",
    "--inline",
    "--gvn-hoist",
    "--newgvn",
    "--memcpyopt",
    "--instsimplify",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--gvn",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse-memssa",
          "--coro-early",
          "--consthoist",
          "--div-rem-pairs",
          "--rewrite-statepoints-for-gc",
          "--globalopt",
          "--lowerswitch",
          "--lcssa",
          "--always-inline",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse-memssa",
      "--coro-early",
      "--consthoist",
      "--div-rem-pairs",
      "--rewrite-statepoints-for-gc",
      "--globalopt",
      "--lowerswitch",
      "--lcssa",
      "--always-inline",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}