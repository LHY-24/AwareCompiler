{
  "program_id": "linux-v0_11888.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 41,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 11,
    "oneSuccessor": 37,
    "twoPred": 15,
    "twoPredOneSuc": 5,
    "twoEach": 8,
    "twoSuccessor": 21,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 0,
    "BranchCount": 58,
    "returnInt": 22,
    "CriticalCount": 9,
    "NumEdges": 79,
    "const32Bit": 158,
    "const64Bit": 38,
    "numConstZeroes": 67,
    "numConstOnes": 60,
    "UncondBranches": 37,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 50,
    "NumAndInst": 8,
    "BlockMid": 4,
    "BlockLow": 68,
    "NumBitCastInst": 5,
    "NumBrInst": 58,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 22,
    "NumLShrInst": 3,
    "NumLoadInst": 113,
    "NumMulInst": 1,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 3,
    "NumSelectInst": 2,
    "NumShlInst": 5,
    "NumStoreInst": 72,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 7,
    "TotalBlocks": 72,
    "TotalInsts": 463,
    "TotalMemInst": 322,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 180
  },
  "baseline_oz_instcount": 463,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--prune-eh",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--irce",
          "--rewrite-statepoints-for-gc",
          "--partially-inline-libcalls",
          "--cross-dso-cfi",
          "--ipsccp",
          "--lower-constant-intrinsics",
          "--callsite-splitting",
          "--lowerswitch",
          "--die",
          "--lower-widenable-condition",
          "--lower-guard-intrinsic",
          "--name-anon-globals",
          "--mergereturn",
          "--canonicalize-aliases",
          "--simple-loop-unswitch",
          "--aggressive-instcombine",
          "--scalarizer",
          "--loop-instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--irce",
      "--rewrite-statepoints-for-gc",
      "--partially-inline-libcalls",
      "--cross-dso-cfi",
      "--ipsccp",
      "--lower-constant-intrinsics",
      "--callsite-splitting",
      "--lowerswitch",
      "--die",
      "--lower-widenable-condition",
      "--lower-guard-intrinsic",
      "--name-anon-globals",
      "--mergereturn",
      "--canonicalize-aliases",
      "--simple-loop-unswitch",
      "--aggressive-instcombine",
      "--scalarizer",
      "--loop-instsimplify"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}