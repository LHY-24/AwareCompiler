{
  "program_id": "linux-v0_13511.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 41,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 10,
    "oneSuccessor": 34,
    "twoPred": 12,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 24,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 1,
    "BranchCount": 58,
    "returnInt": 27,
    "CriticalCount": 9,
    "NumEdges": 82,
    "const32Bit": 243,
    "const64Bit": 58,
    "numConstZeroes": 117,
    "numConstOnes": 102,
    "UncondBranches": 34,
    "binaryConstArg": 32,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 71,
    "NumAndInst": 9,
    "BlockMid": 10,
    "BlockLow": 72,
    "NumBitCastInst": 9,
    "NumBrInst": 58,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 71,
    "NumICmpInst": 22,
    "NumLShrInst": 9,
    "NumLoadInst": 187,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 1,
    "NumRetInst": 24,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 109,
    "NumSubInst": 2,
    "NumTruncInst": 11,
    "NumXorInst": 4,
    "NumZExtInst": 8,
    "TotalBlocks": 82,
    "TotalInsts": 680,
    "TotalMemInst": 500,
    "TotalFuncs": 45,
    "ArgsPhi": 2,
    "testUnary": 296
  },
  "baseline_oz_instcount": 680,
  "knowledge_base_entry": [
    "--loop-versioning-licm",
    "--newgvn",
    "--dse",
    "--instsimplify",
    "--early-cse",
    "--mergefunc",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--reassociate",
    "--gvn-hoist",
    "--inline",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--elim-avail-extern",
          "--mergefunc",
          "--loop-load-elim",
          "--consthoist",
          "--lower-matrix-intrinsics",
          "--slp-vectorizer",
          "--speculative-execution",
          "--memcpyopt",
          "--newgvn",
          "--name-anon-globals",
          "--coro-split",
          "--slsr",
          "--loop-deletion",
          "--lower-widenable-condition",
          "--mem2reg",
          "--separate-const-offset-from-gep",
          "--scalarizer",
          "--functionattrs",
          "--jump-threading",
          "--lower-guard-intrinsic",
          "--inferattrs",
          "--loop-distribute",
          "--lcssa",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--elim-avail-extern",
      "--mergefunc",
      "--loop-load-elim",
      "--consthoist",
      "--lower-matrix-intrinsics",
      "--slp-vectorizer",
      "--speculative-execution",
      "--memcpyopt",
      "--newgvn",
      "--name-anon-globals",
      "--coro-split",
      "--slsr",
      "--loop-deletion",
      "--lower-widenable-condition",
      "--mem2reg",
      "--separate-const-offset-from-gep",
      "--scalarizer",
      "--functionattrs",
      "--jump-threading",
      "--lower-guard-intrinsic",
      "--inferattrs",
      "--loop-distribute",
      "--lcssa",
      "--float2int"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}