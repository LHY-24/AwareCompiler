{
  "program_id": "poj104-v1_43_1082.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 3,
    "oneSuccessor": 8,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 5,
    "CriticalCount": 3,
    "NumEdges": 18,
    "const32Bit": 20,
    "const64Bit": 12,
    "numConstZeroes": 4,
    "numConstOnes": 13,
    "UncondBranches": 8,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 16,
    "NumBitCastInst": 12,
    "NumBrInst": 13,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 18,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 17,
    "TotalInsts": 96,
    "TotalMemInst": 55,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 38
  },
  "baseline_oz_instcount": 51,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--slp-vectorizer",
    "--mergefunc",
    "--mem2reg",
    "--prune-eh",
    "--newgvn",
    "--mem2reg",
    "--jump-threading",
    "--reassociate",
    "--gvn",
    "--gvn-hoist",
    "--simplifycfg",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--mergefunc",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--irce",
          "--reg2mem",
          "--sroa",
          "--instcombine",
          "--constprop",
          "--jump-threading",
          "--instnamer",
          "--lower-matrix-intrinsics",
          "--simple-loop-unswitch",
          "--lower-expect",
          "--sccp",
          "--gvn",
          "--add-discriminators",
          "--slp-vectorizer",
          "--strip-nondebug",
          "--functionattrs",
          "--loweratomic",
          "--coro-cleanup",
          "--loop-distribute",
          "--partially-inline-libcalls",
          "--loop-simplify",
          "--cross-dso-cfi",
          "--bdce",
          "--strip-dead-prototypes",
          "--mergereturn",
          "--globaldce",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+15.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--irce",
      "--reg2mem",
      "--sroa",
      "--instcombine",
      "--constprop",
      "--jump-threading",
      "--instnamer",
      "--lower-matrix-intrinsics",
      "--simple-loop-unswitch",
      "--lower-expect",
      "--sccp",
      "--gvn",
      "--add-discriminators",
      "--slp-vectorizer",
      "--strip-nondebug",
      "--functionattrs",
      "--loweratomic",
      "--coro-cleanup",
      "--loop-distribute",
      "--partially-inline-libcalls",
      "--loop-simplify",
      "--cross-dso-cfi",
      "--bdce",
      "--strip-dead-prototypes",
      "--mergereturn",
      "--globaldce",
      "--coro-split"
    ],
    "performance_vs_Oz": "+15.7%"
  }
}