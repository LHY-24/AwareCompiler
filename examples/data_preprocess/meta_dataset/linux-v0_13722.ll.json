{
  "program_id": "linux-v0_13722.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 89,
    "onePredOneSuc": 56,
    "onePredTwoSuc": 31,
    "oneSuccessor": 80,
    "twoPred": 35,
    "twoPredOneSuc": 20,
    "twoEach": 11,
    "twoSuccessor": 49,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 142,
    "BeginPhi": 0,
    "BranchCount": 129,
    "returnInt": 11,
    "CriticalCount": 33,
    "NumEdges": 186,
    "const32Bit": 363,
    "const64Bit": 12,
    "numConstZeroes": 169,
    "numConstOnes": 93,
    "UncondBranches": 80,
    "binaryConstArg": 44,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 47,
    "NumAndInst": 18,
    "BlockMid": 12,
    "BlockLow": 130,
    "NumBitCastInst": 7,
    "NumBrInst": 129,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 107,
    "NumICmpInst": 51,
    "NumLShrInst": 9,
    "NumLoadInst": 210,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 110,
    "NumSubInst": 1,
    "NumTruncInst": 10,
    "NumXorInst": 7,
    "NumZExtInst": 22,
    "TotalBlocks": 142,
    "TotalInsts": 790,
    "TotalMemInst": 505,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 303
  },
  "baseline_oz_instcount": 787,
  "knowledge_base_entry": [
    "--adce",
    "--bdce",
    "--slp-vectorizer",
    "--slsr",
    "--early-cse",
    "--loop-reroll",
    "--early-cse",
    "--die",
    "--inline",
    "--adce",
    "--aggressive-instcombine",
    "--flattencfg",
    "--inline",
    "--globalopt",
    "--jump-threading",
    "--simplifycfg",
    "--sroa",
    "--elim-avail-extern",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-rotate",
          "--bdce",
          "--ipsccp",
          "--newgvn",
          "--mergeicmps",
          "--strip-nondebug",
          "--always-inline",
          "--loop-versioning-licm",
          "--lower-widenable-condition",
          "--instnamer",
          "--aggressive-instcombine",
          "--scalarizer",
          "--lowerinvoke",
          "--sink",
          "--loop-unroll",
          "--indvars",
          "--loop-simplify",
          "--early-cse-memssa",
          "--globalsplit",
          "--gvn-hoist",
          "--functionattrs",
          "--rpo-functionattrs",
          "--loop-vectorize",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-rotate",
      "--bdce",
      "--ipsccp",
      "--newgvn",
      "--mergeicmps",
      "--strip-nondebug",
      "--always-inline",
      "--loop-versioning-licm",
      "--lower-widenable-condition",
      "--instnamer",
      "--aggressive-instcombine",
      "--scalarizer",
      "--lowerinvoke",
      "--sink",
      "--loop-unroll",
      "--indvars",
      "--loop-simplify",
      "--early-cse-memssa",
      "--globalsplit",
      "--gvn-hoist",
      "--functionattrs",
      "--rpo-functionattrs",
      "--loop-vectorize",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}