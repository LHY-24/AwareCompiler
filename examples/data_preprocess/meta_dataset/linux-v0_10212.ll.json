{
  "program_id": "linux-v0_10212.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 85,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 26,
    "oneSuccessor": 66,
    "twoPred": 13,
    "twoPredOneSuc": 7,
    "twoEach": 5,
    "twoSuccessor": 36,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 125,
    "BeginPhi": 0,
    "BranchCount": 98,
    "returnInt": 13,
    "CriticalCount": 8,
    "NumEdges": 150,
    "const32Bit": 355,
    "const64Bit": 24,
    "numConstZeroes": 175,
    "numConstOnes": 111,
    "UncondBranches": 66,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 77,
    "NumAndInst": 0,
    "BlockMid": 12,
    "BlockLow": 113,
    "NumBitCastInst": 23,
    "NumBrInst": 98,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 113,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 241,
    "NumMulInst": 4,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 141,
    "NumSubInst": 1,
    "NumTruncInst": 12,
    "NumXorInst": 5,
    "NumZExtInst": 7,
    "TotalBlocks": 125,
    "TotalInsts": 856,
    "TotalMemInst": 612,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 378
  },
  "baseline_oz_instcount": 860,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--early-cse-memssa",
    "--sccp",
    "--loop-deletion",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--ipsccp",
    "--loop-simplifycfg",
    "--jump-threading",
    "--mergefunc",
    "--mem2reg",
    "--loop-deletion",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--instsimplify",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--slsr",
          "--irce",
          "--constprop",
          "--callsite-splitting",
          "--ipconstprop",
          "--flattencfg",
          "--loop-unroll",
          "--loop-rotate",
          "--loop-distribute",
          "--globalsplit",
          "--canonicalize-aliases",
          "--mergeicmps",
          "--add-discriminators",
          "--tailcallelim",
          "--cross-dso-cfi",
          "--lower-constant-intrinsics",
          "--loop-interchange",
          "--lcssa",
          "--early-cse-memssa",
          "--rewrite-statepoints-for-gc",
          "--loop-deletion",
          "--dse",
          "--loop-idiom",
          "--pgo-memop-opt",
          "--loop-simplifycfg",
          "--infer-address-spaces"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--slsr",
      "--irce",
      "--constprop",
      "--callsite-splitting",
      "--ipconstprop",
      "--flattencfg",
      "--loop-unroll",
      "--loop-rotate",
      "--loop-distribute",
      "--globalsplit",
      "--canonicalize-aliases",
      "--mergeicmps",
      "--add-discriminators",
      "--tailcallelim",
      "--cross-dso-cfi",
      "--lower-constant-intrinsics",
      "--loop-interchange",
      "--lcssa",
      "--early-cse-memssa",
      "--rewrite-statepoints-for-gc",
      "--loop-deletion",
      "--dse",
      "--loop-idiom",
      "--pgo-memop-opt",
      "--loop-simplifycfg",
      "--infer-address-spaces"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}