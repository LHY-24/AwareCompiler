{
  "program_id": "linux-v0_4409.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 46,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 8,
    "oneSuccessor": 44,
    "twoPred": 13,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 17,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 0,
    "BranchCount": 61,
    "returnInt": 23,
    "CriticalCount": 8,
    "NumEdges": 83,
    "const32Bit": 249,
    "const64Bit": 16,
    "numConstZeroes": 84,
    "numConstOnes": 120,
    "UncondBranches": 44,
    "binaryConstArg": 21,
    "NumAShrInst": 1,
    "NumAddInst": 3,
    "NumAllocaInst": 97,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 85,
    "NumBitCastInst": 26,
    "NumBrInst": 61,
    "NumCallInst": 60,
    "NumGetElementPtrInst": 53,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 176,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 32,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 116,
    "NumSubInst": 2,
    "NumTruncInst": 9,
    "NumXorInst": 6,
    "NumZExtInst": 10,
    "TotalBlocks": 94,
    "TotalInsts": 686,
    "TotalMemInst": 502,
    "TotalFuncs": 52,
    "ArgsPhi": 0,
    "testUnary": 323
  },
  "baseline_oz_instcount": 688,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--early-cse-memssa",
    "--globalopt",
    "--globaldce",
    "--mergefunc",
    "--die",
    "--slp-vectorizer",
    "--sroa",
    "--jump-threading",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--jump-threading",
    "--gvn",
    "--reassociate",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--mergefunc",
          "--dse",
          "--guard-widening",
          "--div-rem-pairs",
          "--loop-vectorize",
          "--instnamer",
          "--jump-threading",
          "--aggressive-instcombine",
          "--rpo-functionattrs",
          "--mergereturn",
          "--redundant-dbg-inst-elim",
          "--post-inline-ee-instrument",
          "--consthoist",
          "--tailcallelim",
          "--lowerinvoke",
          "--instsimplify",
          "--cross-dso-cfi",
          "--strip-nondebug",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--mergefunc",
      "--dse",
      "--guard-widening",
      "--div-rem-pairs",
      "--loop-vectorize",
      "--instnamer",
      "--jump-threading",
      "--aggressive-instcombine",
      "--rpo-functionattrs",
      "--mergereturn",
      "--redundant-dbg-inst-elim",
      "--post-inline-ee-instrument",
      "--consthoist",
      "--tailcallelim",
      "--lowerinvoke",
      "--instsimplify",
      "--cross-dso-cfi",
      "--strip-nondebug",
      "--gvn"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}