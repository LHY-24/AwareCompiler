{
  "program_id": "poj104-v1_73_1426.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 11,
    "oneSuccessor": 19,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 15,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 4,
    "CriticalCount": 11,
    "NumEdges": 49,
    "const32Bit": 34,
    "const64Bit": 70,
    "numConstZeroes": 54,
    "numConstOnes": 20,
    "UncondBranches": 19,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 35,
    "NumBitCastInst": 16,
    "NumBrInst": 34,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 68,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 34,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 37,
    "TotalInsts": 270,
    "TotalMemInst": 161,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 128
  },
  "baseline_oz_instcount": 124,
  "knowledge_base_entry": [
    "--sink",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--licm",
    "--mldst-motion",
    "--gvn-hoist",
    "--sccp",
    "--gvn-hoist",
    "--instsimplify",
    "--loop-rotate",
    "--lower-expect",
    "--sccp",
    "--licm",
    "--memcpyopt",
    "--mergefunc",
    "--lower-expect",
    "--early-cse-memssa",
    "--slsr",
    "--indvars",
    "--instcombine",
    "--ipsccp",
    "--jump-threading",
    "--die",
    "--early-cse-memssa",
    "--loop-rotate",
    "--sroa",
    "--loop-reroll",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--ipsccp",
    "--jump-threading",
    "--die",
    "--early-cse-memssa",
    "--loop-rotate",
    "--sroa",
    "--instsimplify",
    "--sroa",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--sccp",
    "--inline",
    "--loop-rotate",
    "--mem2reg",
    "--newgvn",
    "--instcombine",
    "--aggressive-instcombine",
    "--lower-expect",
    "--dce",
    "--mem2reg",
    "--mergefunc",
    "--jump-threading",
    "--early-cse",
    "--indvars",
    "--slsr",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--instcombine",
    "--mem2reg",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--early-cse",
    "--sroa",
    "--loop-reroll",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--ipsccp",
    "--gvn-hoist",
    "--lower-expect",
    "--sccp",
    "--licm",
    "--memcpyopt",
    "--mergefunc",
    "--lower-expect",
    "--early-cse-memssa",
    "--slsr",
    "--indvars",
    "--instcombine",
    "--ipsccp",
    "--jump-threading",
    "--instcombine",
    "--lower-expect",
    "--sccp",
    "--dce",
    "--lower-expect",
    "--slp-vectorizer",
    "--instcombine",
    "--gvn",
    "--instsimplify",
    "--loop-rotate",
    "--lower-expect",
    "--sccp",
    "--licm",
    "--memcpyopt",
    "--mergefunc",
    "--lower-expect",
    "--early-cse-memssa",
    "--slsr",
    "--indvars",
    "--instcombine",
    "--ipsccp",
    "--jump-threading",
    "--die",
    "--early-cse-memssa",
    "--loop-rotate",
    "--sroa",
    "--instsimplify",
    "--sroa",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--instcombine",
    "--mem2reg",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--early-cse",
    "--sroa",
    "--loop-reroll",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--ipsccp",
    "--gvn-hoist",
    "--lower-expect",
    "--sccp",
    "--licm",
    "--memcpyopt",
    "--mergefunc",
    "--lower-expect",
    "--early-cse-memssa",
    "--slsr",
    "--indvars",
    "--instcombine",
    "--ipsccp",
    "--jump-threading",
    "--die",
    "--early-cse-memssa",
    "--loop-rotate",
    "--sroa",
    "--instsimplify",
    "--sroa",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--sccp",
    "--inline",
    "--loop-rotate",
    "--mem2reg",
    "--newgvn",
    "--instcombine",
    "--aggressive-instcombine",
    "--lower-expect",
    "--dce",
    "--mem2reg",
    "--mergefunc",
    "--jump-threading",
    "--early-cse",
    "--indvars",
    "--slsr",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--jump-threading",
    "--lower-expect",
    "--adce",
    "--aggressive-instcombine",
    "--die",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--jump-threading",
          "--lower-widenable-condition",
          "--canonicalize-aliases",
          "--mergereturn",
          "--deadargelim",
          "--dce",
          "--pgo-memop-opt",
          "--instnamer",
          "--newgvn",
          "--loop-data-prefetch",
          "--loop-simplify",
          "--ipconstprop",
          "--loop-unroll-and-jam",
          "--rpo-functionattrs",
          "--partially-inline-libcalls",
          "--globalopt",
          "--simple-loop-unswitch",
          "--rewrite-statepoints-for-gc",
          "--bdce",
          "--loop-reroll",
          "--strip",
          "--ipsccp",
          "--coro-elide",
          "--constmerge",
          "--callsite-splitting",
          "--early-cse-memssa",
          "--tailcallelim",
          "--mem2reg",
          "--constprop",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+21.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--jump-threading",
      "--lower-widenable-condition",
      "--canonicalize-aliases",
      "--mergereturn",
      "--deadargelim",
      "--dce",
      "--pgo-memop-opt",
      "--instnamer",
      "--newgvn",
      "--loop-data-prefetch",
      "--loop-simplify",
      "--ipconstprop",
      "--loop-unroll-and-jam",
      "--rpo-functionattrs",
      "--partially-inline-libcalls",
      "--globalopt",
      "--simple-loop-unswitch",
      "--rewrite-statepoints-for-gc",
      "--bdce",
      "--loop-reroll",
      "--strip",
      "--ipsccp",
      "--coro-elide",
      "--constmerge",
      "--callsite-splitting",
      "--early-cse-memssa",
      "--tailcallelim",
      "--mem2reg",
      "--constprop",
      "--instcombine"
    ],
    "performance_vs_Oz": "+21.0%"
  }
}