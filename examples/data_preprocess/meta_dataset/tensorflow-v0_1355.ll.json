{
  "program_id": "tensorflow-v0_1355.ll",
  "autophase_features": {
    "BBNumArgsHi": 5,
    "BBNumArgsLo": 16,
    "onePred": 80,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 36,
    "oneSuccessor": 38,
    "twoPred": 35,
    "twoPredOneSuc": 7,
    "twoEach": 21,
    "twoSuccessor": 68,
    "morePreds": 6,
    "BB03Phi": 21,
    "BBHiPhi": 0,
    "BBNoPhi": 112,
    "BeginPhi": 21,
    "BranchCount": 81,
    "returnInt": 0,
    "CriticalCount": 56,
    "NumEdges": 174,
    "const32Bit": 168,
    "const64Bit": 301,
    "numConstZeroes": 178,
    "numConstOnes": 81,
    "UncondBranches": 38,
    "binaryConstArg": 158,
    "NumAShrInst": 3,
    "NumAddInst": 38,
    "NumAllocaInst": 23,
    "NumAndInst": 30,
    "BlockMid": 12,
    "BlockLow": 121,
    "NumBitCastInst": 74,
    "NumBrInst": 81,
    "NumCallInst": 120,
    "NumGetElementPtrInst": 91,
    "NumICmpInst": 50,
    "NumLShrInst": 37,
    "NumLoadInst": 101,
    "NumMulInst": 40,
    "NumOrInst": 4,
    "NumPHIInst": 33,
    "NumRetInst": 11,
    "NumSExtInst": 4,
    "NumSelectInst": 10,
    "NumShlInst": 3,
    "NumStoreInst": 33,
    "NumSubInst": 8,
    "NumTruncInst": 5,
    "NumXorInst": 43,
    "NumZExtInst": 4,
    "TotalBlocks": 133,
    "TotalInsts": 949,
    "TotalMemInst": 393,
    "TotalFuncs": 46,
    "ArgsPhi": 69,
    "testUnary": 230
  },
  "baseline_oz_instcount": 933,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--instcombine",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--instcombine",
    "--loop-simplifycfg",
    "--globalopt",
    "--sccp",
    "--gvn",
    "--licm",
    "--die",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--adce",
    "--jump-threading",
    "--loop-reroll",
    "--mergefunc",
    "--flattencfg",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--reassociate",
    "--lower-expect",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--pgo-memop-opt",
          "--called-value-propagation",
          "--gvn-hoist",
          "--post-inline-ee-instrument",
          "--lowerinvoke",
          "--inject-tli-mappings",
          "--canonicalize-aliases",
          "--load-store-vectorizer",
          "--sancov",
          "--loop-simplifycfg",
          "--speculative-execution",
          "--lcssa",
          "--loop-deletion",
          "--instcombine",
          "--simplifycfg",
          "--aggressive-instcombine",
          "--rpo-functionattrs",
          "--name-anon-globals",
          "--coro-elide",
          "--globalopt",
          "--dse",
          "--libcalls-shrinkwrap",
          "--loop-reroll",
          "--mergereturn",
          "--float2int",
          "--instnamer",
          "--jump-threading",
          "--scalarizer",
          "--loop-sink",
          "--loweratomic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--pgo-memop-opt",
      "--called-value-propagation",
      "--gvn-hoist",
      "--post-inline-ee-instrument",
      "--lowerinvoke",
      "--inject-tli-mappings",
      "--canonicalize-aliases",
      "--load-store-vectorizer",
      "--sancov",
      "--loop-simplifycfg",
      "--speculative-execution",
      "--lcssa",
      "--loop-deletion",
      "--instcombine",
      "--simplifycfg",
      "--aggressive-instcombine",
      "--rpo-functionattrs",
      "--name-anon-globals",
      "--coro-elide",
      "--globalopt",
      "--dse",
      "--libcalls-shrinkwrap",
      "--loop-reroll",
      "--mergereturn",
      "--float2int",
      "--instnamer",
      "--jump-threading",
      "--scalarizer",
      "--loop-sink",
      "--loweratomic"
    ],
    "performance_vs_Oz": "+7.9%"
  }
}