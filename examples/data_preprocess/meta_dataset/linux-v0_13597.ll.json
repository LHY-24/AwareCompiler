{
  "program_id": "linux-v0_13597.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 6,
    "oneSuccessor": 24,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 11,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 13,
    "CriticalCount": 6,
    "NumEdges": 55,
    "const32Bit": 145,
    "const64Bit": 9,
    "numConstZeroes": 58,
    "numConstOnes": 64,
    "UncondBranches": 24,
    "binaryConstArg": 8,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 50,
    "NumAndInst": 4,
    "BlockMid": 10,
    "BlockLow": 43,
    "NumBitCastInst": 8,
    "NumBrInst": 34,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 42,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 110,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 68,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 53,
    "TotalInsts": 401,
    "TotalMemInst": 294,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 193
  },
  "baseline_oz_instcount": 402,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--early-cse",
    "--mergefunc",
    "--gvn-hoist",
    "--lower-expect",
    "--gvn",
    "--newgvn",
    "--loop-simplifycfg",
    "--newgvn",
    "-loop-reduce",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--licm",
    "--prune-eh",
    "--licm",
    "--flattencfg",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--gvn-hoist",
    "--lower-expect",
    "--gvn",
    "--newgvn",
    "--loop-simplifycfg",
    "--mergefunc",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--licm",
    "--prune-eh",
    "--early-cse",
    "--sccp",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--lower-matrix-intrinsics",
          "--loop-load-elim",
          "--called-value-propagation",
          "--lower-guard-intrinsic",
          "--hotcoldsplit",
          "--loop-data-prefetch",
          "--instcombine",
          "--add-discriminators",
          "--load-store-vectorizer",
          "--ee-instrument",
          "--canonicalize-aliases",
          "--loop-predication",
          "--dse",
          "--licm",
          "--partially-inline-libcalls",
          "--mergeicmps",
          "--early-cse",
          "--die",
          "--forceattrs",
          "--loop-distribute",
          "--loop-unroll",
          "--mergefunc",
          "--dce",
          "--loop-deletion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--lower-matrix-intrinsics",
      "--loop-load-elim",
      "--called-value-propagation",
      "--lower-guard-intrinsic",
      "--hotcoldsplit",
      "--loop-data-prefetch",
      "--instcombine",
      "--add-discriminators",
      "--load-store-vectorizer",
      "--ee-instrument",
      "--canonicalize-aliases",
      "--loop-predication",
      "--dse",
      "--licm",
      "--partially-inline-libcalls",
      "--mergeicmps",
      "--early-cse",
      "--die",
      "--forceattrs",
      "--loop-distribute",
      "--loop-unroll",
      "--mergefunc",
      "--dce",
      "--loop-deletion"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}