{
  "program_id": "github-v0_8284.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 15,
    "const64Bit": 1,
    "numConstZeroes": 5,
    "numConstOnes": 11,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 6,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 11,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 6,
    "TotalInsts": 28,
    "TotalMemInst": 22,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 11
  },
  "baseline_oz_instcount": 28,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--jump-threading",
    "--gvn-hoist",
    "--mergefunc",
    "--licm",
    "--nary-reassociate",
    "--loop-reroll",
    "--slp-vectorizer",
    "--simplifycfg",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--globalsplit",
          "--instnamer",
          "--inferattrs",
          "--irce",
          "--infer-address-spaces",
          "--aggressive-instcombine",
          "--loop-reroll",
          "--coro-early",
          "--indvars",
          "--globaldce",
          "--lowerinvoke",
          "--lower-widenable-condition",
          "--mergefunc",
          "--partially-inline-libcalls",
          "--sink",
          "--functionattrs",
          "--loop-simplify",
          "--bdce",
          "--loop-instsimplify",
          "--early-cse-memssa",
          "--instsimplify",
          "--attributor",
          "--loop-rotate",
          "--gvn",
          "--barrier",
          "--speculative-execution",
          "--loop-deletion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+32.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--globalsplit",
      "--instnamer",
      "--inferattrs",
      "--irce",
      "--infer-address-spaces",
      "--aggressive-instcombine",
      "--loop-reroll",
      "--coro-early",
      "--indvars",
      "--globaldce",
      "--lowerinvoke",
      "--lower-widenable-condition",
      "--mergefunc",
      "--partially-inline-libcalls",
      "--sink",
      "--functionattrs",
      "--loop-simplify",
      "--bdce",
      "--loop-instsimplify",
      "--early-cse-memssa",
      "--instsimplify",
      "--attributor",
      "--loop-rotate",
      "--gvn",
      "--barrier",
      "--speculative-execution",
      "--loop-deletion"
    ],
    "performance_vs_Oz": "+32.1%"
  }
}