{
  "program_id": "linux-v0_1924.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 52,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 10,
    "oneSuccessor": 52,
    "twoPred": 16,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 16,
    "morePreds": 0,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 79,
    "BeginPhi": 4,
    "BranchCount": 68,
    "returnInt": 13,
    "CriticalCount": 0,
    "NumEdges": 84,
    "const32Bit": 201,
    "const64Bit": 15,
    "numConstZeroes": 54,
    "numConstOnes": 123,
    "UncondBranches": 52,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 114,
    "NumAndInst": 1,
    "BlockMid": 19,
    "BlockLow": 64,
    "NumBitCastInst": 30,
    "NumBrInst": 68,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 174,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 4,
    "NumRetInst": 15,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 123,
    "NumSubInst": 0,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 83,
    "TotalInsts": 661,
    "TotalMemInst": 496,
    "TotalFuncs": 24,
    "ArgsPhi": 8,
    "testUnary": 348
  },
  "baseline_oz_instcount": 660,
  "knowledge_base_entry": [
    "--indvars",
    "--nary-reassociate",
    "--gvn",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--slp-vectorizer",
    "--dce",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--instsimplify",
    "--adce",
    "--ipsccp",
    "--inline",
    "--prune-eh",
    "--simplifycfg",
    "--early-cse-memssa",
    "--ipsccp",
    "--simplifycfg",
    "--dse",
    "--jump-threading",
    "--licm",
    "--sccp",
    "--lower-expect",
    "--loop-instsimplify",
    "--sccp",
    "--gvn-hoist",
    "--newgvn",
    "--flattencfg",
    "--mem2reg",
    "--mldst-motion",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--coro-early",
          "--loop-reroll",
          "--slsr",
          "--load-store-vectorizer",
          "--partial-inliner",
          "--strip",
          "--ipsccp",
          "--guard-widening",
          "--elim-avail-extern",
          "--aggressive-instcombine",
          "--coro-cleanup",
          "--loop-guard-widening",
          "--infer-address-spaces",
          "--nary-reassociate",
          "--early-cse-memssa",
          "--div-rem-pairs",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--coro-early",
      "--loop-reroll",
      "--slsr",
      "--load-store-vectorizer",
      "--partial-inliner",
      "--strip",
      "--ipsccp",
      "--guard-widening",
      "--elim-avail-extern",
      "--aggressive-instcombine",
      "--coro-cleanup",
      "--loop-guard-widening",
      "--infer-address-spaces",
      "--nary-reassociate",
      "--early-cse-memssa",
      "--div-rem-pairs",
      "--adce"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}