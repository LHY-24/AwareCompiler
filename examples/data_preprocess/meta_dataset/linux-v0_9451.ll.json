{
  "program_id": "linux-v0_9451.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 60,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 10,
    "oneSuccessor": 63,
    "twoPred": 20,
    "twoPredOneSuc": 7,
    "twoEach": 5,
    "twoSuccessor": 17,
    "morePreds": 9,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 119,
    "BeginPhi": 0,
    "BranchCount": 80,
    "returnInt": 53,
    "CriticalCount": 27,
    "NumEdges": 144,
    "const32Bit": 463,
    "const64Bit": 21,
    "numConstZeroes": 221,
    "numConstOnes": 117,
    "UncondBranches": 63,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 91,
    "NumAndInst": 8,
    "BlockMid": 13,
    "BlockLow": 106,
    "NumBitCastInst": 10,
    "NumBrInst": 80,
    "NumCallInst": 83,
    "NumGetElementPtrInst": 100,
    "NumICmpInst": 20,
    "NumLShrInst": 4,
    "NumLoadInst": 246,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 30,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 132,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 6,
    "NumZExtInst": 4,
    "TotalBlocks": 119,
    "TotalInsts": 856,
    "TotalMemInst": 652,
    "TotalFuncs": 51,
    "ArgsPhi": 0,
    "testUnary": 372
  },
  "baseline_oz_instcount": 829,
  "knowledge_base_entry": [
    "--bdce",
    "--early-cse",
    "--sroa",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--adce",
    "--gvn-hoist",
    "--nary-reassociate",
    "--dse",
    "--mldst-motion",
    "--early-cse-memssa",
    "--simplifycfg",
    "--memcpyopt",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--div-rem-pairs",
          "--mergeicmps",
          "--strip-debug-declare",
          "--instnamer",
          "--redundant-dbg-inst-elim",
          "--sccp",
          "--gvn",
          "--gvn-hoist",
          "--lower-guard-intrinsic",
          "--pgo-memop-opt",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--div-rem-pairs",
      "--mergeicmps",
      "--strip-debug-declare",
      "--instnamer",
      "--redundant-dbg-inst-elim",
      "--sccp",
      "--gvn",
      "--gvn-hoist",
      "--lower-guard-intrinsic",
      "--pgo-memop-opt",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}