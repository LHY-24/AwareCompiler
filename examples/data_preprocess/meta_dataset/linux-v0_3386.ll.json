{
  "program_id": "linux-v0_3386.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 58,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 18,
    "oneSuccessor": 49,
    "twoPred": 18,
    "twoPredOneSuc": 7,
    "twoEach": 5,
    "twoSuccessor": 31,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 106,
    "BeginPhi": 0,
    "BranchCount": 80,
    "returnInt": 15,
    "CriticalCount": 8,
    "NumEdges": 111,
    "const32Bit": 394,
    "const64Bit": 43,
    "numConstZeroes": 184,
    "numConstOnes": 126,
    "UncondBranches": 49,
    "binaryConstArg": 34,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 98,
    "NumAndInst": 14,
    "BlockMid": 19,
    "BlockLow": 87,
    "NumBitCastInst": 30,
    "NumBrInst": 80,
    "NumCallInst": 57,
    "NumGetElementPtrInst": 125,
    "NumICmpInst": 37,
    "NumLShrInst": 0,
    "NumLoadInst": 276,
    "NumMulInst": 0,
    "NumOrInst": 12,
    "NumPHIInst": 0,
    "NumRetInst": 26,
    "NumSExtInst": 9,
    "NumSelectInst": 3,
    "NumShlInst": 1,
    "NumStoreInst": 150,
    "NumSubInst": 0,
    "NumTruncInst": 14,
    "NumXorInst": 5,
    "NumZExtInst": 16,
    "TotalBlocks": 106,
    "TotalInsts": 962,
    "TotalMemInst": 706,
    "TotalFuncs": 50,
    "ArgsPhi": 0,
    "testUnary": 444
  },
  "baseline_oz_instcount": 962,
  "knowledge_base_entry": [
    "--prune-eh",
    "--aggressive-instcombine",
    "--mergefunc",
    "--loop-instsimplify",
    "--simplifycfg",
    "--sroa",
    "--inline",
    "--reassociate",
    "--die",
    "--correlated-propagation",
    "--nary-reassociate",
    "--loop-reroll",
    "--early-cse-memssa",
    "--ipsccp",
    "--gvn",
    "--flattencfg",
    "--mem2reg",
    "--newgvn",
    "--loop-simplifycfg",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--sccp",
          "--load-store-vectorizer",
          "--early-cse-memssa",
          "--consthoist",
          "--early-cse",
          "--licm",
          "--mem2reg",
          "--ipsccp",
          "--aggressive-instcombine",
          "--bdce",
          "--globaldce",
          "--die",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--sccp",
      "--load-store-vectorizer",
      "--early-cse-memssa",
      "--consthoist",
      "--early-cse",
      "--licm",
      "--mem2reg",
      "--ipsccp",
      "--aggressive-instcombine",
      "--bdce",
      "--globaldce",
      "--die",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}