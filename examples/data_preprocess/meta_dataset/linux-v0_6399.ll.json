{
  "program_id": "linux-v0_6399.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 13,
    "oneSuccessor": 42,
    "twoPred": 17,
    "twoPredOneSuc": 7,
    "twoEach": 5,
    "twoSuccessor": 22,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 105,
    "BeginPhi": 0,
    "BranchCount": 64,
    "returnInt": 40,
    "CriticalCount": 13,
    "NumEdges": 99,
    "const32Bit": 297,
    "const64Bit": 17,
    "numConstZeroes": 115,
    "numConstOnes": 104,
    "UncondBranches": 42,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 87,
    "NumAndInst": 5,
    "BlockMid": 14,
    "BlockLow": 91,
    "NumBitCastInst": 21,
    "NumBrInst": 64,
    "NumCallInst": 89,
    "NumGetElementPtrInst": 76,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 201,
    "NumMulInst": 1,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 38,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 124,
    "NumSubInst": 2,
    "NumTruncInst": 11,
    "NumXorInst": 3,
    "NumZExtInst": 14,
    "TotalBlocks": 105,
    "TotalInsts": 778,
    "TotalMemInst": 577,
    "TotalFuncs": 59,
    "ArgsPhi": 0,
    "testUnary": 344
  },
  "baseline_oz_instcount": 778,
  "knowledge_base_entry": [
    "--sink",
    "--gvn",
    "--slp-vectorizer",
    "-loop-reduce",
    "--instcombine",
    "--slp-vectorizer",
    "--loop-reroll",
    "--early-cse",
    "--sccp",
    "--newgvn",
    "--lower-expect",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--licm",
    "--lower-expect",
    "--reassociate",
    "--gvn",
    "--ipsccp",
    "--correlated-propagation",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--loop-versioning",
          "--attributor",
          "--rewrite-statepoints-for-gc",
          "--strip-nondebug",
          "--add-discriminators",
          "--speculative-execution",
          "--deadargelim",
          "--loop-interchange",
          "--gvn-hoist",
          "--correlated-propagation",
          "--loop-load-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--loop-versioning",
      "--attributor",
      "--rewrite-statepoints-for-gc",
      "--strip-nondebug",
      "--add-discriminators",
      "--speculative-execution",
      "--deadargelim",
      "--loop-interchange",
      "--gvn-hoist",
      "--correlated-propagation",
      "--loop-load-elim"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}