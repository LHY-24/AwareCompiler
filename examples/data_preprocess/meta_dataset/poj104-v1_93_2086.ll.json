{
  "program_id": "poj104-v1_93_2086.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 6,
    "oneSuccessor": 9,
    "twoPred": 8,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 9,
    "CriticalCount": 11,
    "NumEdges": 31,
    "const32Bit": 26,
    "const64Bit": 2,
    "numConstZeroes": 13,
    "numConstOnes": 2,
    "UncondBranches": 9,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 2,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 23,
    "NumBitCastInst": 2,
    "NumBrInst": 20,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 11,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 1,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 23,
    "TotalInsts": 74,
    "TotalMemInst": 27,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 15
  },
  "baseline_oz_instcount": 65,
  "knowledge_base_entry": [
    "--jump-threading",
    "--simplifycfg",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--simplifycfg",
    "--instsimplify",
    "--instcombine",
    "-loop-reduce",
    "--early-cse",
    "--loop-reroll",
    "--instcombine",
    "--ipsccp",
    "--inline",
    "--bdce",
    "--loop-instsimplify",
    "--dce",
    "--early-cse",
    "--flattencfg",
    "--early-cse-memssa",
    "--loop-rotate",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--simplifycfg",
          "--lower-constant-intrinsics",
          "--partially-inline-libcalls",
          "--inline",
          "--instnamer",
          "--tailcallelim",
          "--always-inline",
          "--separate-const-offset-from-gep",
          "--loop-versioning-licm",
          "--slsr",
          "--prune-eh",
          "--loop-guard-widening",
          "--loop-vectorize",
          "--loop-interchange",
          "--loop-sink",
          "--lowerswitch",
          "--instcombine",
          "--sancov",
          "--aggressive-instcombine",
          "--infer-address-spaces",
          "--jump-threading",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--simplifycfg",
      "--lower-constant-intrinsics",
      "--partially-inline-libcalls",
      "--inline",
      "--instnamer",
      "--tailcallelim",
      "--always-inline",
      "--separate-const-offset-from-gep",
      "--loop-versioning-licm",
      "--slsr",
      "--prune-eh",
      "--loop-guard-widening",
      "--loop-vectorize",
      "--loop-interchange",
      "--loop-sink",
      "--lowerswitch",
      "--instcombine",
      "--sancov",
      "--aggressive-instcombine",
      "--infer-address-spaces",
      "--jump-threading",
      "--early-cse"
    ],
    "performance_vs_Oz": "+6.2%"
  }
}