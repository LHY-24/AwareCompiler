{
  "program_id": "github-v0_1110.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 44,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 7,
    "oneSuccessor": 44,
    "twoPred": 21,
    "twoPredOneSuc": 7,
    "twoEach": 13,
    "twoSuccessor": 21,
    "morePreds": 0,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 67,
    "BeginPhi": 3,
    "BranchCount": 65,
    "returnInt": 1,
    "CriticalCount": 7,
    "NumEdges": 86,
    "const32Bit": 234,
    "const64Bit": 9,
    "numConstZeroes": 125,
    "numConstOnes": 61,
    "UncondBranches": 44,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 33,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 59,
    "NumBitCastInst": 6,
    "NumBrInst": 65,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 100,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 175,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 5,
    "NumSExtInst": 22,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 61,
    "NumSubInst": 3,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 70,
    "TotalInsts": 538,
    "TotalMemInst": 389,
    "TotalFuncs": 16,
    "ArgsPhi": 6,
    "testUnary": 242
  },
  "baseline_oz_instcount": 539,
  "knowledge_base_entry": [
    "--instcombine",
    "--reassociate",
    "--newgvn",
    "--slp-vectorizer",
    "--adce",
    "--slp-vectorizer",
    "--bdce",
    "--die",
    "--sroa",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--insert-gcov-profiling",
          "--always-inline",
          "--ee-instrument",
          "--post-inline-ee-instrument",
          "--strip-nondebug",
          "--jump-threading",
          "--lowerinvoke",
          "--sccp",
          "--scalarizer",
          "--coro-cleanup"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--insert-gcov-profiling",
      "--always-inline",
      "--ee-instrument",
      "--post-inline-ee-instrument",
      "--strip-nondebug",
      "--jump-threading",
      "--lowerinvoke",
      "--sccp",
      "--scalarizer",
      "--coro-cleanup"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}