{
  "program_id": "linux-v0_10440.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 38,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 11,
    "oneSuccessor": 30,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 17,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 62,
    "BeginPhi": 1,
    "BranchCount": 47,
    "returnInt": 17,
    "CriticalCount": 4,
    "NumEdges": 67,
    "const32Bit": 119,
    "const64Bit": 9,
    "numConstZeroes": 53,
    "numConstOnes": 50,
    "UncondBranches": 30,
    "binaryConstArg": 6,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 43,
    "NumAndInst": 5,
    "BlockMid": 6,
    "BlockLow": 57,
    "NumBitCastInst": 9,
    "NumBrInst": 47,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 103,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 15,
    "NumSExtInst": 5,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 78,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 1,
    "NumZExtInst": 11,
    "TotalBlocks": 63,
    "TotalInsts": 402,
    "TotalMemInst": 277,
    "TotalFuncs": 24,
    "ArgsPhi": 2,
    "testUnary": 180
  },
  "baseline_oz_instcount": 402,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--instsimplify",
    "--aggressive-instcombine",
    "--loweratomic",
    "--aggressive-instcombine",
    "--loweratomic",
    "--aggressive-instcombine",
    "--ipsccp",
    "--die",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--loop-guard-widening",
          "--gvn",
          "--prune-eh",
          "--post-inline-ee-instrument",
          "--irce",
          "--loop-instsimplify",
          "--scalarizer",
          "--loop-simplify",
          "--speculative-execution",
          "--mem2reg",
          "--aggressive-instcombine",
          "--licm",
          "--rewrite-statepoints-for-gc",
          "--reassociate",
          "--barrier",
          "--die",
          "--nary-reassociate",
          "--slp-vectorizer",
          "--jump-threading",
          "--strip-dead-prototypes",
          "--libcalls-shrinkwrap"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--loop-guard-widening",
      "--gvn",
      "--prune-eh",
      "--post-inline-ee-instrument",
      "--irce",
      "--loop-instsimplify",
      "--scalarizer",
      "--loop-simplify",
      "--speculative-execution",
      "--mem2reg",
      "--aggressive-instcombine",
      "--licm",
      "--rewrite-statepoints-for-gc",
      "--reassociate",
      "--barrier",
      "--die",
      "--nary-reassociate",
      "--slp-vectorizer",
      "--jump-threading",
      "--strip-dead-prototypes",
      "--libcalls-shrinkwrap"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}