{
  "program_id": "linux-v0_4959.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 64,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 11,
    "oneSuccessor": 59,
    "twoPred": 28,
    "twoPredOneSuc": 5,
    "twoEach": 15,
    "twoSuccessor": 33,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 110,
    "BeginPhi": 1,
    "BranchCount": 92,
    "returnInt": 21,
    "CriticalCount": 11,
    "NumEdges": 132,
    "const32Bit": 339,
    "const64Bit": 71,
    "numConstZeroes": 126,
    "numConstOnes": 97,
    "UncondBranches": 59,
    "binaryConstArg": 72,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 74,
    "NumAndInst": 38,
    "BlockMid": 24,
    "BlockLow": 87,
    "NumBitCastInst": 0,
    "NumBrInst": 92,
    "NumCallInst": 57,
    "NumGetElementPtrInst": 116,
    "NumICmpInst": 35,
    "NumLShrInst": 7,
    "NumLoadInst": 285,
    "NumMulInst": 4,
    "NumOrInst": 16,
    "NumPHIInst": 1,
    "NumRetInst": 17,
    "NumSExtInst": 3,
    "NumSelectInst": 3,
    "NumShlInst": 6,
    "NumStoreInst": 156,
    "NumSubInst": 0,
    "NumTruncInst": 32,
    "NumXorInst": 2,
    "NumZExtInst": 47,
    "TotalBlocks": 111,
    "TotalInsts": 999,
    "TotalMemInst": 688,
    "TotalFuncs": 29,
    "ArgsPhi": 2,
    "testUnary": 441
  },
  "baseline_oz_instcount": 999,
  "knowledge_base_entry": [
    "--loweratomic",
    "--aggressive-instcombine",
    "--bdce",
    "--correlated-propagation",
    "--lower-expect",
    "--dce",
    "--sroa",
    "--indvars",
    "--instcombine",
    "--loop-simplifycfg",
    "--jump-threading",
    "--mergefunc",
    "--reassociate",
    "--globalopt",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--ipsccp",
          "--strip",
          "--inject-tli-mappings",
          "--constprop",
          "--redundant-dbg-inst-elim",
          "--libcalls-shrinkwrap",
          "--loop-unroll",
          "--forceattrs",
          "-loop-reduce",
          "--lcssa",
          "--loop-fusion",
          "--aggressive-instcombine",
          "--cross-dso-cfi",
          "--mldst-motion",
          "--irce",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--ipsccp",
      "--strip",
      "--inject-tli-mappings",
      "--constprop",
      "--redundant-dbg-inst-elim",
      "--libcalls-shrinkwrap",
      "--loop-unroll",
      "--forceattrs",
      "-loop-reduce",
      "--lcssa",
      "--loop-fusion",
      "--aggressive-instcombine",
      "--cross-dso-cfi",
      "--mldst-motion",
      "--irce",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+4.5%"
  }
}