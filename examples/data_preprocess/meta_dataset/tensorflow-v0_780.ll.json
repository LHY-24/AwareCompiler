{
  "program_id": "tensorflow-v0_780.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 4,
    "onePred": 116,
    "onePredOneSuc": 58,
    "onePredTwoSuc": 44,
    "oneSuccessor": 66,
    "twoPred": 7,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 53,
    "morePreds": 16,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 137,
    "BeginPhi": 5,
    "BranchCount": 119,
    "returnInt": 0,
    "CriticalCount": 146,
    "NumEdges": 328,
    "const32Bit": 390,
    "const64Bit": 54,
    "numConstZeroes": 109,
    "numConstOnes": 43,
    "UncondBranches": 66,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 0,
    "NumAndInst": 3,
    "BlockMid": 0,
    "BlockLow": 142,
    "NumBitCastInst": 1,
    "NumBrInst": 119,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 53,
    "NumICmpInst": 57,
    "NumLShrInst": 0,
    "NumLoadInst": 143,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 5,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 2,
    "NumShlInst": 2,
    "NumStoreInst": 69,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 142,
    "TotalInsts": 542,
    "TotalMemInst": 311,
    "TotalFuncs": 6,
    "ArgsPhi": 64,
    "testUnary": 148
  },
  "baseline_oz_instcount": 540,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--adce",
    "--early-cse-memssa",
    "--reassociate",
    "--instcombine",
    "--prune-eh",
    "--early-cse",
    "--mergefunc",
    "--instcombine",
    "--sccp",
    "--instcombine",
    "--newgvn",
    "--reassociate",
    "--early-cse-memssa",
    "--newgvn",
    "--dse",
    "--early-cse",
    "--loop-reroll",
    "--gvn-hoist",
    "--sccp",
    "--simplifycfg",
    "--loop-deletion",
    "--early-cse",
    "--jump-threading",
    "--lower-expect",
    "--elim-avail-extern",
    "--instsimplify",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-guard-intrinsic",
          "--coro-early",
          "--loop-unswitch",
          "--sccp",
          "--argpromotion",
          "--reassociate",
          "--loop-unroll-and-jam",
          "--loop-sink",
          "--scalarizer",
          "--rewrite-statepoints-for-gc",
          "--callsite-splitting",
          "--gvn-hoist",
          "--attributor",
          "--always-inline",
          "--bdce",
          "--loop-versioning",
          "--adce",
          "--sroa",
          "--loop-fusion",
          "--strip-dead-prototypes",
          "--guard-widening",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-guard-intrinsic",
      "--coro-early",
      "--loop-unswitch",
      "--sccp",
      "--argpromotion",
      "--reassociate",
      "--loop-unroll-and-jam",
      "--loop-sink",
      "--scalarizer",
      "--rewrite-statepoints-for-gc",
      "--callsite-splitting",
      "--gvn-hoist",
      "--attributor",
      "--always-inline",
      "--bdce",
      "--loop-versioning",
      "--adce",
      "--sroa",
      "--loop-fusion",
      "--strip-dead-prototypes",
      "--guard-widening",
      "--gvn"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}