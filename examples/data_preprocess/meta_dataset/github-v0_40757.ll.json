{
  "program_id": "github-v0_40757.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 43,
    "const64Bit": 49,
    "numConstZeroes": 49,
    "numConstOnes": 25,
    "UncondBranches": 11,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 12,
    "NumAndInst": 6,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 4,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 6,
    "NumLShrInst": 9,
    "NumLoadInst": 31,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 21,
    "TotalInsts": 171,
    "TotalMemInst": 98,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 63
  },
  "baseline_oz_instcount": 171,
  "knowledge_base_entry": [
    "--reg2mem",
    "--simplifycfg",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--mergefunc",
    "--newgvn",
    "--early-cse-memssa",
    "--sroa",
    "--instcombine",
    "--loop-reroll",
    "--early-cse",
    "--nary-reassociate",
    "--loop-instsimplify",
    "--dce",
    "--dse",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--licm",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalsplit",
          "--irce",
          "--jump-threading",
          "--dse",
          "--inject-tli-mappings",
          "--instnamer",
          "--globaldce",
          "--reassociate",
          "--float2int",
          "--argpromotion",
          "--loop-simplifycfg",
          "--loop-distribute",
          "--loop-unroll",
          "--loop-deletion",
          "--loop-instsimplify",
          "--hotcoldsplit",
          "--strip",
          "--aggressive-instcombine",
          "--pgo-memop-opt",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalsplit",
      "--irce",
      "--jump-threading",
      "--dse",
      "--inject-tli-mappings",
      "--instnamer",
      "--globaldce",
      "--reassociate",
      "--float2int",
      "--argpromotion",
      "--loop-simplifycfg",
      "--loop-distribute",
      "--loop-unroll",
      "--loop-deletion",
      "--loop-instsimplify",
      "--hotcoldsplit",
      "--strip",
      "--aggressive-instcombine",
      "--pgo-memop-opt",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+5.8%"
  }
}