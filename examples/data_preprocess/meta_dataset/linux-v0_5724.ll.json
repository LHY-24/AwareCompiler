{
  "program_id": "linux-v0_5724.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 56,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 14,
    "oneSuccessor": 47,
    "twoPred": 15,
    "twoPredOneSuc": 1,
    "twoEach": 9,
    "twoSuccessor": 27,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 86,
    "BeginPhi": 1,
    "BranchCount": 74,
    "returnInt": 36,
    "CriticalCount": 5,
    "NumEdges": 101,
    "const32Bit": 234,
    "const64Bit": 23,
    "numConstZeroes": 92,
    "numConstOnes": 95,
    "UncondBranches": 47,
    "binaryConstArg": 32,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 80,
    "NumAndInst": 11,
    "BlockMid": 12,
    "BlockLow": 75,
    "NumBitCastInst": 4,
    "NumBrInst": 74,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 47,
    "NumICmpInst": 30,
    "NumLShrInst": 0,
    "NumLoadInst": 202,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 1,
    "NumRetInst": 13,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 105,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 6,
    "NumZExtInst": 13,
    "TotalBlocks": 87,
    "TotalInsts": 675,
    "TotalMemInst": 489,
    "TotalFuncs": 15,
    "ArgsPhi": 2,
    "testUnary": 313
  },
  "baseline_oz_instcount": 678,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--instcombine",
    "--gvn-hoist",
    "--mergefunc",
    "--mergefunc",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--lower-expect",
    "--simplifycfg",
    "--correlated-propagation",
    "--sroa",
    "--instsimplify",
    "--correlated-propagation",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--argpromotion",
          "--early-cse-memssa",
          "--dse",
          "--barrier",
          "--forceattrs",
          "--coro-early",
          "--newgvn",
          "--gvn",
          "--globaldce",
          "--infer-address-spaces",
          "--mergeicmps",
          "--licm",
          "--irce",
          "--called-value-propagation",
          "--add-discriminators",
          "--separate-const-offset-from-gep",
          "--loweratomic",
          "--aggressive-instcombine",
          "--reassociate",
          "--early-cse",
          "--slsr",
          "--float2int",
          "--post-inline-ee-instrument",
          "--constprop",
          "--loop-deletion",
          "--adce",
          "--simple-loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--argpromotion",
      "--early-cse-memssa",
      "--dse",
      "--barrier",
      "--forceattrs",
      "--coro-early",
      "--newgvn",
      "--gvn",
      "--globaldce",
      "--infer-address-spaces",
      "--mergeicmps",
      "--licm",
      "--irce",
      "--called-value-propagation",
      "--add-discriminators",
      "--separate-const-offset-from-gep",
      "--loweratomic",
      "--aggressive-instcombine",
      "--reassociate",
      "--early-cse",
      "--slsr",
      "--float2int",
      "--post-inline-ee-instrument",
      "--constprop",
      "--loop-deletion",
      "--adce",
      "--simple-loop-unswitch"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}