{
  "program_id": "linux-v0_2161.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 98,
    "onePredOneSuc": 67,
    "onePredTwoSuc": 30,
    "oneSuccessor": 83,
    "twoPred": 35,
    "twoPredOneSuc": 13,
    "twoEach": 8,
    "twoSuccessor": 60,
    "morePreds": 10,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 180,
    "BeginPhi": 1,
    "BranchCount": 143,
    "returnInt": 54,
    "CriticalCount": 31,
    "NumEdges": 203,
    "const32Bit": 346,
    "const64Bit": 11,
    "numConstZeroes": 179,
    "numConstOnes": 120,
    "UncondBranches": 83,
    "binaryConstArg": 32,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 86,
    "NumAndInst": 11,
    "BlockMid": 12,
    "BlockLow": 169,
    "NumBitCastInst": 9,
    "NumBrInst": 143,
    "NumCallInst": 110,
    "NumGetElementPtrInst": 96,
    "NumICmpInst": 46,
    "NumLShrInst": 7,
    "NumLoadInst": 215,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 38,
    "NumSExtInst": 6,
    "NumSelectInst": 5,
    "NumShlInst": 0,
    "NumStoreInst": 125,
    "NumSubInst": 1,
    "NumTruncInst": 12,
    "NumXorInst": 10,
    "NumZExtInst": 13,
    "TotalBlocks": 181,
    "TotalInsts": 937,
    "TotalMemInst": 632,
    "TotalFuncs": 74,
    "ArgsPhi": 2,
    "testUnary": 341
  },
  "baseline_oz_instcount": 938,
  "knowledge_base_entry": [
    "--mergefunc",
    "--inline",
    "--aggressive-instcombine",
    "--dce",
    "--aggressive-instcombine",
    "--newgvn",
    "--slsr",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--bdce",
    "--gvn",
    "--early-cse",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--reassociate",
          "--attributor",
          "--nary-reassociate",
          "--early-cse-memssa",
          "--elim-avail-extern",
          "--globalopt",
          "--ee-instrument",
          "--scalarizer",
          "--speculative-execution",
          "--tailcallelim",
          "--loop-unswitch",
          "--mergefunc",
          "--newgvn",
          "--infer-address-spaces",
          "--inject-tli-mappings",
          "--flattencfg",
          "--aggressive-instcombine",
          "--dce",
          "--callsite-splitting",
          "--instsimplify",
          "--float2int",
          "--partial-inliner",
          "--lower-expect",
          "--ipconstprop",
          "--hotcoldsplit",
          "--called-value-propagation",
          "--argpromotion",
          "--loweratomic",
          "--loop-unroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--reassociate",
      "--attributor",
      "--nary-reassociate",
      "--early-cse-memssa",
      "--elim-avail-extern",
      "--globalopt",
      "--ee-instrument",
      "--scalarizer",
      "--speculative-execution",
      "--tailcallelim",
      "--loop-unswitch",
      "--mergefunc",
      "--newgvn",
      "--infer-address-spaces",
      "--inject-tli-mappings",
      "--flattencfg",
      "--aggressive-instcombine",
      "--dce",
      "--callsite-splitting",
      "--instsimplify",
      "--float2int",
      "--partial-inliner",
      "--lower-expect",
      "--ipconstprop",
      "--hotcoldsplit",
      "--called-value-propagation",
      "--argpromotion",
      "--loweratomic",
      "--loop-unroll"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}