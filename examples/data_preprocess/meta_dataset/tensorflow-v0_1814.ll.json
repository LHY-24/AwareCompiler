{
  "program_id": "tensorflow-v0_1814.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 8,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 3,
    "oneSuccessor": 5,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 1,
    "BranchCount": 9,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 13,
    "const32Bit": 12,
    "const64Bit": 28,
    "numConstZeroes": 14,
    "numConstOnes": 5,
    "UncondBranches": 5,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 1,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 9,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 4,
    "NumLShrInst": 7,
    "NumLoadInst": 0,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 1,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 1,
    "NumTruncInst": 11,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 72,
    "TotalMemInst": 29,
    "TotalFuncs": 4,
    "ArgsPhi": 5,
    "testUnary": 14
  },
  "baseline_oz_instcount": 72,
  "knowledge_base_entry": [
    "--simple-loop-unswitch",
    "--jump-threading",
    "--gvn",
    "--loop-simplifycfg",
    "--globalopt",
    "--ipsccp",
    "--bdce",
    "--loop-instsimplify",
    "--mem2reg",
    "--mldst-motion",
    "--gvn-hoist",
    "--mergefunc",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mldst-motion",
          "--rewrite-statepoints-for-gc",
          "-loop-reduce",
          "--gvn-hoist",
          "--speculative-execution",
          "--instcombine",
          "--loop-unroll-and-jam",
          "--loop-reroll",
          "--loop-distribute",
          "--mem2reg",
          "--called-value-propagation",
          "--add-discriminators",
          "--lower-expect",
          "--libcalls-shrinkwrap",
          "--loop-versioning",
          "--hotcoldsplit",
          "--inferattrs",
          "--loop-guard-widening",
          "--partial-inliner",
          "--instnamer",
          "--strip-nondebug",
          "--sink",
          "--correlated-propagation",
          "--barrier",
          "--loop-simplifycfg",
          "--guard-widening",
          "--loop-idiom"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+22.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mldst-motion",
      "--rewrite-statepoints-for-gc",
      "-loop-reduce",
      "--gvn-hoist",
      "--speculative-execution",
      "--instcombine",
      "--loop-unroll-and-jam",
      "--loop-reroll",
      "--loop-distribute",
      "--mem2reg",
      "--called-value-propagation",
      "--add-discriminators",
      "--lower-expect",
      "--libcalls-shrinkwrap",
      "--loop-versioning",
      "--hotcoldsplit",
      "--inferattrs",
      "--loop-guard-widening",
      "--partial-inliner",
      "--instnamer",
      "--strip-nondebug",
      "--sink",
      "--correlated-propagation",
      "--barrier",
      "--loop-simplifycfg",
      "--guard-widening",
      "--loop-idiom"
    ],
    "performance_vs_Oz": "+22.2%"
  }
}