{
  "program_id": "github-v0_1500.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 4,
    "oneSuccessor": 25,
    "twoPred": 5,
    "twoPredOneSuc": 4,
    "twoEach": 0,
    "twoSuccessor": 6,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 0,
    "BranchCount": 31,
    "returnInt": 13,
    "CriticalCount": 1,
    "NumEdges": 49,
    "const32Bit": 74,
    "const64Bit": 0,
    "numConstZeroes": 32,
    "numConstOnes": 24,
    "UncondBranches": 25,
    "binaryConstArg": 8,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 18,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 32,
    "NumBitCastInst": 4,
    "NumBrInst": 31,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 75,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 30,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 16,
    "TotalBlocks": 37,
    "TotalInsts": 243,
    "TotalMemInst": 165,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 119
  },
  "baseline_oz_instcount": 243,
  "knowledge_base_entry": [
    "--loop-interchange",
    "--gvn",
    "--early-cse-memssa",
    "--loop-deletion",
    "--gvn",
    "--loop-rotate",
    "--instsimplify",
    "--aggressive-instcombine",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slp-vectorizer",
          "--loop-versioning-licm",
          "--inferattrs",
          "--aggressive-instcombine",
          "--partial-inliner",
          "--ipconstprop",
          "--early-cse",
          "--slsr",
          "--loop-predication",
          "--consthoist",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slp-vectorizer",
      "--loop-versioning-licm",
      "--inferattrs",
      "--aggressive-instcombine",
      "--partial-inliner",
      "--ipconstprop",
      "--early-cse",
      "--slsr",
      "--loop-predication",
      "--consthoist",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+4.5%"
  }
}