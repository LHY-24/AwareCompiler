{
  "program_id": "github-v0_29410.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 56,
    "const64Bit": 64,
    "numConstZeroes": 70,
    "numConstOnes": 23,
    "UncondBranches": 13,
    "binaryConstArg": 32,
    "NumAShrInst": 6,
    "NumAddInst": 5,
    "NumAllocaInst": 11,
    "NumAndInst": 12,
    "BlockMid": 7,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 1,
    "NumOrInst": 11,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 9,
    "NumStoreInst": 21,
    "NumSubInst": 1,
    "NumTruncInst": 14,
    "NumXorInst": 0,
    "NumZExtInst": 28,
    "TotalBlocks": 24,
    "TotalInsts": 240,
    "TotalMemInst": 116,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 101
  },
  "baseline_oz_instcount": 240,
  "knowledge_base_entry": [
    "--bdce",
    "--licm",
    "--sccp",
    "--gvn",
    "--aggressive-instcombine",
    "--jump-threading",
    "--loop-rotate",
    "--sroa",
    "--memcpyopt",
    "--instcombine",
    "--ipsccp",
    "--correlated-propagation",
    "--gvn-hoist",
    "--early-cse",
    "--slsr",
    "--instcombine",
    "--elim-avail-extern",
    "--flattencfg",
    "--globalopt",
    "--globaldce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--inline",
          "--loop-unswitch",
          "--irce",
          "--loop-instsimplify",
          "--globalsplit",
          "--sink",
          "--scalarizer",
          "--rewrite-statepoints-for-gc",
          "--div-rem-pairs",
          "--partial-inliner",
          "--globaldce",
          "--sccp",
          "--loop-unroll-and-jam",
          "--lowerswitch",
          "--lower-widenable-condition",
          "--coro-cleanup",
          "--strip-dead-prototypes",
          "--instnamer",
          "--lower-matrix-intrinsics",
          "--jump-threading",
          "--coro-elide",
          "--simple-loop-unswitch",
          "--aggressive-instcombine",
          "--mldst-motion",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--inline",
      "--loop-unswitch",
      "--irce",
      "--loop-instsimplify",
      "--globalsplit",
      "--sink",
      "--scalarizer",
      "--rewrite-statepoints-for-gc",
      "--div-rem-pairs",
      "--partial-inliner",
      "--globaldce",
      "--sccp",
      "--loop-unroll-and-jam",
      "--lowerswitch",
      "--lower-widenable-condition",
      "--coro-cleanup",
      "--strip-dead-prototypes",
      "--instnamer",
      "--lower-matrix-intrinsics",
      "--jump-threading",
      "--coro-elide",
      "--simple-loop-unswitch",
      "--aggressive-instcombine",
      "--mldst-motion",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+4.6%"
  }
}