{
  "program_id": "linux-v0_206.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 24,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 6,
    "oneSuccessor": 23,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 2,
    "BranchCount": 34,
    "returnInt": 2,
    "CriticalCount": 2,
    "NumEdges": 45,
    "const32Bit": 100,
    "const64Bit": 9,
    "numConstZeroes": 34,
    "numConstOnes": 58,
    "UncondBranches": 23,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 51,
    "NumAndInst": 1,
    "BlockMid": 6,
    "BlockLow": 38,
    "NumBitCastInst": 7,
    "NumBrInst": 34,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 114,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 10,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 66,
    "NumSubInst": 3,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 44,
    "TotalInsts": 370,
    "TotalMemInst": 283,
    "TotalFuncs": 19,
    "ArgsPhi": 4,
    "testUnary": 188
  },
  "baseline_oz_instcount": 371,
  "knowledge_base_entry": [
    "--functionattrs",
    "--instsimplify",
    "--mem2reg",
    "--aggressive-instcombine",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lcssa",
          "--scalarizer",
          "--partial-inliner",
          "--loop-vectorize",
          "--mergefunc",
          "--flattencfg",
          "--instcombine",
          "--loop-guard-widening",
          "--aggressive-instcombine",
          "--loop-reroll",
          "--forceattrs",
          "--guard-widening",
          "--lower-matrix-intrinsics",
          "--rewrite-statepoints-for-gc",
          "--sccp",
          "--globalsplit",
          "--attributor",
          "--functionattrs",
          "--inline",
          "--name-anon-globals",
          "--irce",
          "--float2int",
          "--coro-cleanup",
          "--bdce",
          "--loop-simplifycfg",
          "-loop-reduce",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lcssa",
      "--scalarizer",
      "--partial-inliner",
      "--loop-vectorize",
      "--mergefunc",
      "--flattencfg",
      "--instcombine",
      "--loop-guard-widening",
      "--aggressive-instcombine",
      "--loop-reroll",
      "--forceattrs",
      "--guard-widening",
      "--lower-matrix-intrinsics",
      "--rewrite-statepoints-for-gc",
      "--sccp",
      "--globalsplit",
      "--attributor",
      "--functionattrs",
      "--inline",
      "--name-anon-globals",
      "--irce",
      "--float2int",
      "--coro-cleanup",
      "--bdce",
      "--loop-simplifycfg",
      "-loop-reduce",
      "--dse"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}