{
  "program_id": "github-v0_31460.ll",
  "autophase_features": {
    "BBNumArgsHi": 4,
    "BBNumArgsLo": 4,
    "onePred": 14,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 15,
    "twoPredOneSuc": 2,
    "twoEach": 11,
    "twoSuccessor": 17,
    "morePreds": 1,
    "BB03Phi": 8,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 8,
    "BranchCount": 30,
    "returnInt": 4,
    "CriticalCount": 20,
    "NumEdges": 47,
    "const32Bit": 55,
    "const64Bit": 4,
    "numConstZeroes": 12,
    "numConstOnes": 30,
    "UncondBranches": 13,
    "binaryConstArg": 56,
    "NumAShrInst": 10,
    "NumAddInst": 27,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 9,
    "BlockLow": 23,
    "NumBitCastInst": 40,
    "NumBrInst": 30,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 108,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 81,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 16,
    "NumRetInst": 2,
    "NumSExtInst": 24,
    "NumSelectInst": 0,
    "NumShlInst": 8,
    "NumStoreInst": 38,
    "NumSubInst": 4,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 32,
    "TotalInsts": 492,
    "TotalMemInst": 259,
    "TotalFuncs": 6,
    "ArgsPhi": 32,
    "testUnary": 149
  },
  "baseline_oz_instcount": 487,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--dse",
    "--early-cse",
    "--ipsccp",
    "--sccp",
    "--gvn-hoist",
    "--adce",
    "--instcombine",
    "--simplifycfg",
    "--correlated-propagation",
    "--dce",
    "--gvn",
    "--nary-reassociate",
    "--lower-expect",
    "--mergefunc",
    "--licm",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--flattencfg",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--licm",
    "--dce",
    "--reassociate",
    "--instcombine",
    "--simplifycfg",
    "--correlated-propagation",
    "--dce",
    "--gvn",
    "--nary-reassociate",
    "--lower-expect",
    "--mergefunc",
    "--licm",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--flattencfg",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse",
    "--early-cse",
    "--lower-expect",
    "--early-cse-memssa",
    "--slsr",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--reassociate",
    "--instsimplify",
    "--sroa",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--licm",
          "--aggressive-instcombine",
          "--tailcallelim",
          "--loop-interchange",
          "--rewrite-statepoints-for-gc",
          "--loop-deletion",
          "--sancov",
          "--gvn",
          "--early-cse-memssa",
          "--strip",
          "--mergefunc",
          "--name-anon-globals",
          "--inject-tli-mappings",
          "--gvn-hoist",
          "--lcssa",
          "--loop-simplifycfg",
          "--jump-threading",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--licm",
      "--aggressive-instcombine",
      "--tailcallelim",
      "--loop-interchange",
      "--rewrite-statepoints-for-gc",
      "--loop-deletion",
      "--sancov",
      "--gvn",
      "--early-cse-memssa",
      "--strip",
      "--mergefunc",
      "--name-anon-globals",
      "--inject-tli-mappings",
      "--gvn-hoist",
      "--lcssa",
      "--loop-simplifycfg",
      "--jump-threading",
      "--newgvn"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}