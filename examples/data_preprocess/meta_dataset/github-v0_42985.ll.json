{
  "program_id": "github-v0_42985.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 9,
    "onePred": 12,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 10,
    "twoPred": 9,
    "twoPredOneSuc": 0,
    "twoEach": 8,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 9,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 9,
    "BranchCount": 23,
    "returnInt": 6,
    "CriticalCount": 14,
    "NumEdges": 36,
    "const32Bit": 39,
    "const64Bit": 18,
    "numConstZeroes": 26,
    "numConstOnes": 18,
    "UncondBranches": 10,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 0,
    "NumAndInst": 15,
    "BlockMid": 2,
    "BlockLow": 22,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 15,
    "NumLShrInst": 3,
    "NumLoadInst": 1,
    "NumMulInst": 7,
    "NumOrInst": 1,
    "NumPHIInst": 10,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 6,
    "NumStoreInst": 2,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 15,
    "TotalBlocks": 24,
    "TotalInsts": 193,
    "TotalMemInst": 45,
    "TotalFuncs": 14,
    "ArgsPhi": 22,
    "testUnary": 19
  },
  "baseline_oz_instcount": 193,
  "knowledge_base_entry": [
    "--reassociate",
    "--instcombine",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--dse",
    "--loop-simplifycfg",
    "--sccp",
    "--bdce",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--mergeicmps",
          "--newgvn",
          "--speculative-execution",
          "--lower-matrix-intrinsics",
          "--redundant-dbg-inst-elim",
          "--gvn",
          "--lower-guard-intrinsic",
          "--simplifycfg",
          "--simple-loop-unswitch",
          "--loop-predication",
          "--adce",
          "--alignment-from-assumptions",
          "--strip",
          "--loop-vectorize",
          "--mldst-motion",
          "--slp-vectorizer",
          "--aggressive-instcombine",
          "--tailcallelim",
          "--attributor",
          "--separate-const-offset-from-gep",
          "--ipsccp",
          "--inferattrs",
          "--loop-sink",
          "--add-discriminators",
          "--early-cse-memssa",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--mergeicmps",
      "--newgvn",
      "--speculative-execution",
      "--lower-matrix-intrinsics",
      "--redundant-dbg-inst-elim",
      "--gvn",
      "--lower-guard-intrinsic",
      "--simplifycfg",
      "--simple-loop-unswitch",
      "--loop-predication",
      "--adce",
      "--alignment-from-assumptions",
      "--strip",
      "--loop-vectorize",
      "--mldst-motion",
      "--slp-vectorizer",
      "--aggressive-instcombine",
      "--tailcallelim",
      "--attributor",
      "--separate-const-offset-from-gep",
      "--ipsccp",
      "--inferattrs",
      "--loop-sink",
      "--add-discriminators",
      "--early-cse-memssa",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}