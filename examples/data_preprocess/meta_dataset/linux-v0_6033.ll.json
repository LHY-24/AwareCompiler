{
  "program_id": "linux-v0_6033.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 2,
    "oneSuccessor": 7,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 5,
    "CriticalCount": 1,
    "NumEdges": 17,
    "const32Bit": 57,
    "const64Bit": 2,
    "numConstZeroes": 20,
    "numConstOnes": 22,
    "UncondBranches": 7,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 18,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 16,
    "NumBitCastInst": 3,
    "NumBrInst": 12,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 30,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 27,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 18,
    "TotalInsts": 131,
    "TotalMemInst": 99,
    "TotalFuncs": 14,
    "ArgsPhi": 0,
    "testUnary": 55
  },
  "baseline_oz_instcount": 131,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--aggressive-instcombine",
    "--mergefunc",
    "--adce",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--early-cse",
    "--gvn-hoist",
    "--instcombine",
    "-loop-reduce",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--strip-debug-declare",
          "--slp-vectorizer",
          "--loop-predication",
          "--aggressive-instcombine",
          "--inject-tli-mappings",
          "--newgvn",
          "--ipconstprop",
          "--lower-constant-intrinsics",
          "--speculative-execution"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--strip-debug-declare",
      "--slp-vectorizer",
      "--loop-predication",
      "--aggressive-instcombine",
      "--inject-tli-mappings",
      "--newgvn",
      "--ipconstprop",
      "--lower-constant-intrinsics",
      "--speculative-execution"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}