{
  "program_id": "linux-v0_13533.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 52,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 9,
    "oneSuccessor": 51,
    "twoPred": 22,
    "twoPredOneSuc": 8,
    "twoEach": 8,
    "twoSuccessor": 24,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 108,
    "BeginPhi": 1,
    "BranchCount": 74,
    "returnInt": 24,
    "CriticalCount": 8,
    "NumEdges": 99,
    "const32Bit": 145,
    "const64Bit": 83,
    "numConstZeroes": 87,
    "numConstOnes": 89,
    "UncondBranches": 51,
    "binaryConstArg": 56,
    "NumAShrInst": 0,
    "NumAddInst": 50,
    "NumAllocaInst": 76,
    "NumAndInst": 12,
    "BlockMid": 18,
    "BlockLow": 91,
    "NumBitCastInst": 24,
    "NumBrInst": 74,
    "NumCallInst": 80,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 19,
    "NumLShrInst": 10,
    "NumLoadInst": 238,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 34,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 142,
    "NumSubInst": 16,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 109,
    "TotalInsts": 912,
    "TotalMemInst": 590,
    "TotalFuncs": 46,
    "ArgsPhi": 2,
    "testUnary": 411
  },
  "baseline_oz_instcount": 886,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--globaldce",
    "--ipsccp",
    "--globaldce",
    "--ipsccp",
    "--sccp",
    "--lower-expect",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--libcalls-shrinkwrap",
          "--early-cse-memssa",
          "--correlated-propagation",
          "--separate-const-offset-from-gep",
          "--mldst-motion",
          "--barrier",
          "--die",
          "--ipconstprop",
          "--coro-cleanup",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--libcalls-shrinkwrap",
      "--early-cse-memssa",
      "--correlated-propagation",
      "--separate-const-offset-from-gep",
      "--mldst-motion",
      "--barrier",
      "--die",
      "--ipconstprop",
      "--coro-cleanup",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}