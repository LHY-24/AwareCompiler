{
  "program_id": "linux-v0_4781.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 48,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 9,
    "oneSuccessor": 47,
    "twoPred": 14,
    "twoPredOneSuc": 7,
    "twoEach": 3,
    "twoSuccessor": 16,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 0,
    "BranchCount": 63,
    "returnInt": 10,
    "CriticalCount": 8,
    "NumEdges": 84,
    "const32Bit": 434,
    "const64Bit": 23,
    "numConstZeroes": 213,
    "numConstOnes": 106,
    "UncondBranches": 47,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 62,
    "NumAndInst": 5,
    "BlockMid": 13,
    "BlockLow": 58,
    "NumBitCastInst": 58,
    "NumBrInst": 63,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 156,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 218,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 83,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 23,
    "TotalBlocks": 71,
    "TotalInsts": 771,
    "TotalMemInst": 573,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 370
  },
  "baseline_oz_instcount": 770,
  "knowledge_base_entry": [
    "--inline",
    "--gvn",
    "--early-cse-memssa",
    "--flattencfg",
    "--newgvn",
    "--nary-reassociate",
    "--ipsccp",
    "--aggressive-instcombine",
    "--dse",
    "--correlated-propagation",
    "--simplifycfg",
    "--sroa",
    "--lower-expect",
    "--sroa",
    "--lower-expect",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--inline",
    "--globalopt",
    "--loop-simplifycfg",
    "--bdce",
    "--mem2reg",
    "--load-store-vectorizer",
    "--jump-threading",
    "--loop-deletion",
    "--jump-threading",
    "--prune-eh",
    "--gvn",
    "--aggressive-instcombine",
    "--bdce",
    "--load-store-vectorizer",
    "--dse",
    "--nary-reassociate",
    "--ipsccp",
    "--inline",
    "--slp-vectorizer",
    "--mergefunc",
    "--lower-expect",
    "--sroa",
    "--lower-expect",
    "--elim-avail-extern",
    "--flattencfg",
    "--load-store-vectorizer",
    "--dse",
    "--instcombine",
    "--ipsccp",
    "--inline",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--loweratomic",
          "--loop-simplify",
          "--loop-guard-widening",
          "--strip-nondebug",
          "--newgvn",
          "--hotcoldsplit",
          "--loop-unswitch",
          "--lower-constant-intrinsics",
          "--prune-eh",
          "--add-discriminators",
          "--reassociate",
          "--ee-instrument",
          "--post-inline-ee-instrument",
          "--loop-idiom",
          "--aggressive-instcombine",
          "--lowerinvoke",
          "--argpromotion",
          "--slp-vectorizer",
          "--adce",
          "--loop-load-elim",
          "--ipsccp",
          "--dse",
          "--inline",
          "--loop-deletion",
          "--mergereturn",
          "--canonicalize-aliases",
          "--loop-distribute",
          "--instsimplify",
          "--inject-tli-mappings"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--loweratomic",
      "--loop-simplify",
      "--loop-guard-widening",
      "--strip-nondebug",
      "--newgvn",
      "--hotcoldsplit",
      "--loop-unswitch",
      "--lower-constant-intrinsics",
      "--prune-eh",
      "--add-discriminators",
      "--reassociate",
      "--ee-instrument",
      "--post-inline-ee-instrument",
      "--loop-idiom",
      "--aggressive-instcombine",
      "--lowerinvoke",
      "--argpromotion",
      "--slp-vectorizer",
      "--adce",
      "--loop-load-elim",
      "--ipsccp",
      "--dse",
      "--inline",
      "--loop-deletion",
      "--mergereturn",
      "--canonicalize-aliases",
      "--loop-distribute",
      "--instsimplify",
      "--inject-tli-mappings"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}