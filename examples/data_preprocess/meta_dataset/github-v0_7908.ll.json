{
  "program_id": "github-v0_7908.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 30,
    "const64Bit": 50,
    "numConstZeroes": 55,
    "numConstOnes": 19,
    "UncondBranches": 15,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 20,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 51,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 3,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 37,
    "TotalBlocks": 27,
    "TotalInsts": 227,
    "TotalMemInst": 126,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 115
  },
  "baseline_oz_instcount": 227,
  "knowledge_base_entry": [
    "--instsimplify",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--loop-deletion",
    "--early-cse-memssa",
    "--dse",
    "--globalopt",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--mergefunc",
    "--instcombine",
    "--prune-eh",
    "--mem2reg",
    "--load-store-vectorizer",
    "--loop-reroll",
    "--sroa",
    "--adce",
    "--correlated-propagation",
    "--bdce",
    "--newgvn",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--newgvn",
    "--instcombine",
    "--early-cse",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mldst-motion",
          "--aggressive-instcombine",
          "--canonicalize-aliases",
          "--loop-interchange",
          "--barrier",
          "--argpromotion",
          "--loop-versioning",
          "--add-discriminators",
          "--loop-simplifycfg",
          "--loop-fusion",
          "--cross-dso-cfi",
          "--attributor",
          "--sccp",
          "--loop-distribute",
          "--loop-idiom",
          "--loop-sink",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+13.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mldst-motion",
      "--aggressive-instcombine",
      "--canonicalize-aliases",
      "--loop-interchange",
      "--barrier",
      "--argpromotion",
      "--loop-versioning",
      "--add-discriminators",
      "--loop-simplifycfg",
      "--loop-fusion",
      "--cross-dso-cfi",
      "--attributor",
      "--sccp",
      "--loop-distribute",
      "--loop-idiom",
      "--loop-sink",
      "--instcombine"
    ],
    "performance_vs_Oz": "+13.2%"
  }
}