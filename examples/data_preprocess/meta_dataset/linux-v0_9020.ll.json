{
  "program_id": "linux-v0_9020.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 4,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 35,
    "const64Bit": 4,
    "numConstZeroes": 6,
    "numConstOnes": 17,
    "UncondBranches": 0,
    "binaryConstArg": 17,
    "NumAShrInst": 2,
    "NumAddInst": 0,
    "NumAllocaInst": 14,
    "NumAndInst": 6,
    "BlockMid": 2,
    "BlockLow": 2,
    "NumBitCastInst": 2,
    "NumBrInst": 0,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 30,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 17,
    "NumSubInst": 4,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 9,
    "TotalBlocks": 4,
    "TotalInsts": 121,
    "TotalMemInst": 75,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 66
  },
  "baseline_oz_instcount": 119,
  "knowledge_base_entry": [
    "--instsimplify",
    "--slp-vectorizer",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--instsimplify",
    "--reassociate",
    "--dce",
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--globalopt",
    "--licm",
    "--lower-expect",
    "--loop-rotate",
    "--newgvn",
    "--mldst-motion",
    "--slp-vectorizer",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simple-loop-unswitch",
          "--dse",
          "--instcombine",
          "--post-inline-ee-instrument",
          "--aggressive-instcombine",
          "--loop-interchange",
          "--loop-simplify",
          "--reassociate",
          "--float2int",
          "--loop-distribute",
          "--sancov",
          "--div-rem-pairs",
          "--newgvn",
          "--lower-expect",
          "--loop-vectorize",
          "--coro-cleanup",
          "--add-discriminators",
          "--pgo-memop-opt",
          "--functionattrs",
          "--ee-instrument",
          "-loop-reduce",
          "--loop-sink",
          "--strip",
          "--slp-vectorizer",
          "--tailcallelim",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simple-loop-unswitch",
      "--dse",
      "--instcombine",
      "--post-inline-ee-instrument",
      "--aggressive-instcombine",
      "--loop-interchange",
      "--loop-simplify",
      "--reassociate",
      "--float2int",
      "--loop-distribute",
      "--sancov",
      "--div-rem-pairs",
      "--newgvn",
      "--lower-expect",
      "--loop-vectorize",
      "--coro-cleanup",
      "--add-discriminators",
      "--pgo-memop-opt",
      "--functionattrs",
      "--ee-instrument",
      "-loop-reduce",
      "--loop-sink",
      "--strip",
      "--slp-vectorizer",
      "--tailcallelim",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+5.0%"
  }
}