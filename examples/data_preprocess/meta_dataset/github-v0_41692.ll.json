{
  "program_id": "github-v0_41692.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 9,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 3,
    "oneSuccessor": 9,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 1,
    "BranchCount": 15,
    "returnInt": 1,
    "CriticalCount": 4,
    "NumEdges": 21,
    "const32Bit": 24,
    "const64Bit": 1,
    "numConstZeroes": 8,
    "numConstOnes": 19,
    "UncondBranches": 9,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 15,
    "NumBitCastInst": 1,
    "NumBrInst": 15,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 2,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 17,
    "TotalInsts": 125,
    "TotalMemInst": 77,
    "TotalFuncs": 4,
    "ArgsPhi": 2,
    "testUnary": 64
  },
  "baseline_oz_instcount": 126,
  "knowledge_base_entry": [
    "--sccp",
    "--gvn",
    "--instsimplify",
    "--newgvn",
    "--memcpyopt",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--bdce",
    "--jump-threading",
    "--globalopt",
    "--sroa",
    "--adce",
    "--ipsccp",
    "--gvn-hoist",
    "--sccp",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--dce",
          "--redundant-dbg-inst-elim",
          "--strip-debug-declare",
          "--die",
          "--cross-dso-cfi",
          "--lowerinvoke",
          "--coro-split",
          "--libcalls-shrinkwrap",
          "--reassociate",
          "--always-inline",
          "--pgo-memop-opt",
          "--sink",
          "--forceattrs",
          "--scalarizer",
          "--gvn-hoist",
          "--simplifycfg",
          "--callsite-splitting",
          "--sccp",
          "--inferattrs",
          "--flattencfg",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--dce",
      "--redundant-dbg-inst-elim",
      "--strip-debug-declare",
      "--die",
      "--cross-dso-cfi",
      "--lowerinvoke",
      "--coro-split",
      "--libcalls-shrinkwrap",
      "--reassociate",
      "--always-inline",
      "--pgo-memop-opt",
      "--sink",
      "--forceattrs",
      "--scalarizer",
      "--gvn-hoist",
      "--simplifycfg",
      "--callsite-splitting",
      "--sccp",
      "--inferattrs",
      "--flattencfg",
      "--adce"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}