{
  "program_id": "github-v0_40159.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 16,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 3,
    "oneSuccessor": 16,
    "twoPred": 11,
    "twoPredOneSuc": 2,
    "twoEach": 8,
    "twoSuccessor": 11,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 2,
    "BranchCount": 27,
    "returnInt": 3,
    "CriticalCount": 7,
    "NumEdges": 38,
    "const32Bit": 23,
    "const64Bit": 4,
    "numConstZeroes": 18,
    "numConstOnes": 15,
    "UncondBranches": 16,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 3,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 27,
    "NumBitCastInst": 0,
    "NumBrInst": 27,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 1,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 28,
    "TotalInsts": 141,
    "TotalMemInst": 78,
    "TotalFuncs": 2,
    "ArgsPhi": 4,
    "testUnary": 61
  },
  "baseline_oz_instcount": 142,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--ipsccp",
    "--simplifycfg",
    "--prune-eh",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--dce",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inject-tli-mappings",
          "--elim-avail-extern",
          "--name-anon-globals",
          "--load-store-vectorizer",
          "--nary-reassociate",
          "--instcombine",
          "--mem2reg",
          "--add-discriminators",
          "--alignment-from-assumptions",
          "--strip",
          "--lcssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inject-tli-mappings",
      "--elim-avail-extern",
      "--name-anon-globals",
      "--load-store-vectorizer",
      "--nary-reassociate",
      "--instcombine",
      "--mem2reg",
      "--add-discriminators",
      "--alignment-from-assumptions",
      "--strip",
      "--lcssa"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}