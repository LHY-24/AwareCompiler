{
  "program_id": "github-v0_15534.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 79,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 32,
    "oneSuccessor": 60,
    "twoPred": 24,
    "twoPredOneSuc": 9,
    "twoEach": 11,
    "twoSuccessor": 50,
    "morePreds": 8,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 118,
    "BeginPhi": 2,
    "BranchCount": 110,
    "returnInt": 10,
    "CriticalCount": 28,
    "NumEdges": 167,
    "const32Bit": 425,
    "const64Bit": 17,
    "numConstZeroes": 208,
    "numConstOnes": 105,
    "UncondBranches": 60,
    "binaryConstArg": 26,
    "NumAShrInst": 2,
    "NumAddInst": 13,
    "NumAllocaInst": 75,
    "NumAndInst": 8,
    "BlockMid": 19,
    "BlockLow": 101,
    "NumBitCastInst": 0,
    "NumBrInst": 110,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 130,
    "NumICmpInst": 49,
    "NumLShrInst": 3,
    "NumLoadInst": 324,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 2,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 3,
    "NumShlInst": 4,
    "NumStoreInst": 174,
    "NumSubInst": 11,
    "NumTruncInst": 19,
    "NumXorInst": 0,
    "NumZExtInst": 33,
    "TotalBlocks": 120,
    "TotalInsts": 996,
    "TotalMemInst": 720,
    "TotalFuncs": 16,
    "ArgsPhi": 4,
    "testUnary": 451
  },
  "baseline_oz_instcount": 997,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--instcombine",
    "--flattencfg",
    "--jump-threading",
    "--mldst-motion",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--bdce",
          "--early-cse",
          "--loop-unroll-and-jam",
          "--gvn-hoist",
          "--ipsccp",
          "--callsite-splitting",
          "--nary-reassociate",
          "--partial-inliner",
          "--hotcoldsplit",
          "--elim-avail-extern",
          "--globalopt",
          "--instnamer",
          "--coro-split",
          "--lower-guard-intrinsic",
          "--always-inline",
          "--early-cse-memssa",
          "--loop-vectorize"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--bdce",
      "--early-cse",
      "--loop-unroll-and-jam",
      "--gvn-hoist",
      "--ipsccp",
      "--callsite-splitting",
      "--nary-reassociate",
      "--partial-inliner",
      "--hotcoldsplit",
      "--elim-avail-extern",
      "--globalopt",
      "--instnamer",
      "--coro-split",
      "--lower-guard-intrinsic",
      "--always-inline",
      "--early-cse-memssa",
      "--loop-vectorize"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}