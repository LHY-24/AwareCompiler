{
  "program_id": "linux-v0_2011.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 42,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 6,
    "oneSuccessor": 40,
    "twoPred": 17,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 21,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 78,
    "BeginPhi": 0,
    "BranchCount": 61,
    "returnInt": 9,
    "CriticalCount": 7,
    "NumEdges": 82,
    "const32Bit": 332,
    "const64Bit": 42,
    "numConstZeroes": 155,
    "numConstOnes": 85,
    "UncondBranches": 40,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 64,
    "NumAndInst": 8,
    "BlockMid": 18,
    "BlockLow": 60,
    "NumBitCastInst": 9,
    "NumBrInst": 61,
    "NumCallInst": 64,
    "NumGetElementPtrInst": 143,
    "NumICmpInst": 14,
    "NumLShrInst": 3,
    "NumLoadInst": 235,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 96,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 78,
    "TotalInsts": 750,
    "TotalMemInst": 602,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 332
  },
  "baseline_oz_instcount": 750,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--mergefunc",
    "--instcombine",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--die",
          "--aggressive-instcombine",
          "--loop-predication",
          "--loop-sink",
          "--strip-nondebug",
          "--inject-tli-mappings",
          "--correlated-propagation",
          "--loweratomic",
          "--tailcallelim",
          "--early-cse",
          "--instcombine",
          "--alignment-from-assumptions",
          "--post-inline-ee-instrument",
          "--gvn",
          "--indvars",
          "--name-anon-globals",
          "--lowerinvoke",
          "--lower-matrix-intrinsics",
          "--slp-vectorizer",
          "--ipsccp",
          "--insert-gcov-profiling",
          "--float2int",
          "--redundant-dbg-inst-elim",
          "--strip-debug-declare",
          "--loop-load-elim",
          "--rewrite-statepoints-for-gc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--die",
      "--aggressive-instcombine",
      "--loop-predication",
      "--loop-sink",
      "--strip-nondebug",
      "--inject-tli-mappings",
      "--correlated-propagation",
      "--loweratomic",
      "--tailcallelim",
      "--early-cse",
      "--instcombine",
      "--alignment-from-assumptions",
      "--post-inline-ee-instrument",
      "--gvn",
      "--indvars",
      "--name-anon-globals",
      "--lowerinvoke",
      "--lower-matrix-intrinsics",
      "--slp-vectorizer",
      "--ipsccp",
      "--insert-gcov-profiling",
      "--float2int",
      "--redundant-dbg-inst-elim",
      "--strip-debug-declare",
      "--loop-load-elim",
      "--rewrite-statepoints-for-gc"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}