{
  "program_id": "linux-v0_11813.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 10,
    "onePred": 77,
    "onePredOneSuc": 54,
    "onePredTwoSuc": 23,
    "oneSuccessor": 74,
    "twoPred": 27,
    "twoPredOneSuc": 15,
    "twoEach": 8,
    "twoSuccessor": 32,
    "morePreds": 2,
    "BB03Phi": 10,
    "BBHiPhi": 0,
    "BBNoPhi": 104,
    "BeginPhi": 10,
    "BranchCount": 106,
    "returnInt": 19,
    "CriticalCount": 8,
    "NumEdges": 138,
    "const32Bit": 199,
    "const64Bit": 11,
    "numConstZeroes": 105,
    "numConstOnes": 49,
    "UncondBranches": 74,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 39,
    "NumAndInst": 3,
    "BlockMid": 4,
    "BlockLow": 110,
    "NumBitCastInst": 3,
    "NumBrInst": 106,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 63,
    "NumICmpInst": 35,
    "NumLShrInst": 0,
    "NumLoadInst": 135,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 10,
    "NumRetInst": 8,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 63,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 5,
    "NumZExtInst": 13,
    "TotalBlocks": 114,
    "TotalInsts": 531,
    "TotalMemInst": 332,
    "TotalFuncs": 21,
    "ArgsPhi": 20,
    "testUnary": 197
  },
  "baseline_oz_instcount": 533,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--flattencfg",
    "--mem2reg",
    "--mergefunc",
    "--die",
    "--sroa",
    "--simplifycfg",
    "--lower-expect",
    "--gvn",
    "--correlated-propagation",
    "--nary-reassociate",
    "--gvn-hoist",
    "--jump-threading",
    "--prune-eh",
    "--newgvn",
    "--mldst-motion",
    "--gvn-hoist",
    "--bdce",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--flattencfg",
          "--sroa",
          "--dse",
          "--slp-vectorizer",
          "--gvn",
          "--consthoist",
          "--globaldce",
          "--lower-constant-intrinsics",
          "--pgo-memop-opt",
          "--add-discriminators",
          "--memcpyopt",
          "--coro-split",
          "--called-value-propagation",
          "--strip-nondebug",
          "--inject-tli-mappings",
          "--libcalls-shrinkwrap",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--flattencfg",
      "--sroa",
      "--dse",
      "--slp-vectorizer",
      "--gvn",
      "--consthoist",
      "--globaldce",
      "--lower-constant-intrinsics",
      "--pgo-memop-opt",
      "--add-discriminators",
      "--memcpyopt",
      "--coro-split",
      "--called-value-propagation",
      "--strip-nondebug",
      "--inject-tli-mappings",
      "--libcalls-shrinkwrap",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+7.1%"
  }
}