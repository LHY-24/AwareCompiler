{
  "program_id": "github-v0_39805.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 11,
    "oneSuccessor": 34,
    "twoPred": 19,
    "twoPredOneSuc": 6,
    "twoEach": 10,
    "twoSuccessor": 25,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 68,
    "BeginPhi": 0,
    "BranchCount": 59,
    "returnInt": 5,
    "CriticalCount": 17,
    "NumEdges": 84,
    "const32Bit": 129,
    "const64Bit": 11,
    "numConstZeroes": 54,
    "numConstOnes": 38,
    "UncondBranches": 34,
    "binaryConstArg": 15,
    "NumAShrInst": 1,
    "NumAddInst": 6,
    "NumAllocaInst": 24,
    "NumAndInst": 6,
    "BlockMid": 5,
    "BlockLow": 63,
    "NumBitCastInst": 5,
    "NumBrInst": 59,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 101,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 45,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 22,
    "TotalBlocks": 68,
    "TotalInsts": 398,
    "TotalMemInst": 249,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 163
  },
  "baseline_oz_instcount": 396,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--ipsccp",
    "--reassociate",
    "--early-cse-memssa",
    "--inline",
    "--sccp",
    "--reassociate",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--early-cse",
    "--instsimplify",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--adce",
    "--reassociate",
    "--prune-eh",
    "--early-cse-memssa",
    "--memcpyopt",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--separate-const-offset-from-gep",
          "--slsr",
          "--mergereturn",
          "--indvars",
          "--loop-predication",
          "--die",
          "--flattencfg",
          "--mem2reg",
          "--aggressive-instcombine",
          "--barrier",
          "--loop-versioning-licm",
          "-loop-reduce",
          "--instnamer",
          "--speculative-execution",
          "--loop-idiom",
          "--strip-debug-declare",
          "--nary-reassociate",
          "--simplifycfg",
          "--ipconstprop",
          "--ipsccp",
          "--loop-deletion",
          "--correlated-propagation",
          "--redundant-dbg-inst-elim",
          "--partial-inliner",
          "--globalsplit",
          "--rewrite-statepoints-for-gc",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--separate-const-offset-from-gep",
      "--slsr",
      "--mergereturn",
      "--indvars",
      "--loop-predication",
      "--die",
      "--flattencfg",
      "--mem2reg",
      "--aggressive-instcombine",
      "--barrier",
      "--loop-versioning-licm",
      "-loop-reduce",
      "--instnamer",
      "--speculative-execution",
      "--loop-idiom",
      "--strip-debug-declare",
      "--nary-reassociate",
      "--simplifycfg",
      "--ipconstprop",
      "--ipsccp",
      "--loop-deletion",
      "--correlated-propagation",
      "--redundant-dbg-inst-elim",
      "--partial-inliner",
      "--globalsplit",
      "--rewrite-statepoints-for-gc",
      "--adce"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}