{
  "program_id": "linux-v0_5615.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 11,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 8,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 35,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 14,
    "CriticalCount": 2,
    "NumEdges": 27,
    "const32Bit": 115,
    "const64Bit": 32,
    "numConstZeroes": 62,
    "numConstOnes": 48,
    "UncondBranches": 11,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 35,
    "NumAndInst": 7,
    "BlockMid": 5,
    "BlockLow": 30,
    "NumBitCastInst": 9,
    "NumBrInst": 19,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 106,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 60,
    "NumSubInst": 1,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 9,
    "TotalBlocks": 35,
    "TotalInsts": 380,
    "TotalMemInst": 285,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 174
  },
  "baseline_oz_instcount": 380,
  "knowledge_base_entry": [
    "--early-cse",
    "--mergefunc",
    "--aggressive-instcombine",
    "--instsimplify",
    "--dse",
    "--ipsccp",
    "--loop-instsimplify",
    "--sccp",
    "--inline",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--ipsccp",
          "--loop-data-prefetch",
          "--consthoist",
          "--loop-load-elim",
          "--aggressive-instcombine",
          "--scalarizer",
          "--constprop",
          "--mergefunc",
          "--float2int",
          "--sancov",
          "--slp-vectorizer",
          "--sroa",
          "--forceattrs",
          "--add-discriminators",
          "--memcpyopt",
          "--loop-interchange",
          "--constmerge",
          "--strip-debug-declare",
          "--sccp",
          "--loop-fusion",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--ipsccp",
      "--loop-data-prefetch",
      "--consthoist",
      "--loop-load-elim",
      "--aggressive-instcombine",
      "--scalarizer",
      "--constprop",
      "--mergefunc",
      "--float2int",
      "--sancov",
      "--slp-vectorizer",
      "--sroa",
      "--forceattrs",
      "--add-discriminators",
      "--memcpyopt",
      "--loop-interchange",
      "--constmerge",
      "--strip-debug-declare",
      "--sccp",
      "--loop-fusion",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+3.2%"
  }
}