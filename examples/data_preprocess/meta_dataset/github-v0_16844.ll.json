{
  "program_id": "github-v0_16844.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 17,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 1,
    "oneSuccessor": 17,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 6,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 1,
    "BranchCount": 24,
    "returnInt": 14,
    "CriticalCount": 1,
    "NumEdges": 31,
    "const32Bit": 23,
    "const64Bit": 13,
    "numConstZeroes": 10,
    "numConstOnes": 20,
    "UncondBranches": 17,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 11,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 23,
    "NumBitCastInst": 0,
    "NumBrInst": 24,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 40,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 2,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 6,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 1,
    "TotalBlocks": 26,
    "TotalInsts": 166,
    "TotalMemInst": 95,
    "TotalFuncs": 8,
    "ArgsPhi": 2,
    "testUnary": 67
  },
  "baseline_oz_instcount": 166,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--bdce",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--loop-deletion",
    "--instcombine",
    "--flattencfg",
    "--gvn-hoist",
    "--globalopt",
    "--reassociate",
    "--sroa",
    "--indvars",
    "--correlated-propagation",
    "--ipsccp",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--loop-instsimplify",
          "--globalopt",
          "--lower-guard-intrinsic",
          "--guard-widening",
          "--sccp",
          "--loop-deletion",
          "--aggressive-instcombine",
          "--memcpyopt",
          "--called-value-propagation",
          "--globaldce",
          "--callsite-splitting",
          "--coro-elide",
          "--load-store-vectorizer",
          "--lower-constant-intrinsics",
          "--ipsccp",
          "--sroa",
          "--lowerswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--loop-instsimplify",
      "--globalopt",
      "--lower-guard-intrinsic",
      "--guard-widening",
      "--sccp",
      "--loop-deletion",
      "--aggressive-instcombine",
      "--memcpyopt",
      "--called-value-propagation",
      "--globaldce",
      "--callsite-splitting",
      "--coro-elide",
      "--load-store-vectorizer",
      "--lower-constant-intrinsics",
      "--ipsccp",
      "--sroa",
      "--lowerswitch"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}