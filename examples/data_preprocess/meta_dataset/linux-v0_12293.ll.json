{
  "program_id": "linux-v0_12293.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 34,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 3,
    "oneSuccessor": 32,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 10,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 0,
    "BranchCount": 42,
    "returnInt": 18,
    "CriticalCount": 1,
    "NumEdges": 62,
    "const32Bit": 294,
    "const64Bit": 13,
    "numConstZeroes": 125,
    "numConstOnes": 107,
    "UncondBranches": 32,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 82,
    "NumAndInst": 1,
    "BlockMid": 14,
    "BlockLow": 57,
    "NumBitCastInst": 31,
    "NumBrInst": 42,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 9,
    "NumLShrInst": 1,
    "NumLoadInst": 187,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 27,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 119,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 71,
    "TotalInsts": 641,
    "TotalMemInst": 512,
    "TotalFuncs": 46,
    "ArgsPhi": 0,
    "testUnary": 308
  },
  "baseline_oz_instcount": 640,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--loop-instsimplify",
    "--ipsccp",
    "--loop-deletion",
    "--gvn-hoist",
    "--prune-eh",
    "--loop-simplifycfg",
    "--dse",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--loop-distribute",
          "--float2int",
          "--constmerge",
          "--sroa",
          "--sancov",
          "--globaldce",
          "--deadargelim",
          "--gvn-hoist",
          "--inferattrs",
          "--consthoist",
          "--mergefunc",
          "--separate-const-offset-from-gep",
          "--alignment-from-assumptions",
          "--slp-vectorizer",
          "--lower-matrix-intrinsics",
          "--globalsplit",
          "--tailcallelim",
          "--die",
          "--loop-vectorize",
          "--ipsccp",
          "--forceattrs",
          "--loop-guard-widening",
          "--mem2reg",
          "--indvars",
          "--licm",
          "--instnamer",
          "--instsimplify",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--loop-distribute",
      "--float2int",
      "--constmerge",
      "--sroa",
      "--sancov",
      "--globaldce",
      "--deadargelim",
      "--gvn-hoist",
      "--inferattrs",
      "--consthoist",
      "--mergefunc",
      "--separate-const-offset-from-gep",
      "--alignment-from-assumptions",
      "--slp-vectorizer",
      "--lower-matrix-intrinsics",
      "--globalsplit",
      "--tailcallelim",
      "--die",
      "--loop-vectorize",
      "--ipsccp",
      "--forceattrs",
      "--loop-guard-widening",
      "--mem2reg",
      "--indvars",
      "--licm",
      "--instnamer",
      "--instsimplify",
      "--instcombine"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}