{
  "program_id": "linux-v0_2808.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 4,
    "oneSuccessor": 24,
    "twoPred": 15,
    "twoPredOneSuc": 4,
    "twoEach": 8,
    "twoSuccessor": 15,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 7,
    "CriticalCount": 6,
    "NumEdges": 54,
    "const32Bit": 198,
    "const64Bit": 47,
    "numConstZeroes": 129,
    "numConstOnes": 77,
    "UncondBranches": 24,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 40,
    "NumAndInst": 3,
    "BlockMid": 12,
    "BlockLow": 33,
    "NumBitCastInst": 8,
    "NumBrInst": 39,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 74,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 104,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 80,
    "NumSubInst": 9,
    "NumTruncInst": 11,
    "NumXorInst": 4,
    "NumZExtInst": 12,
    "TotalBlocks": 45,
    "TotalInsts": 470,
    "TotalMemInst": 335,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 186
  },
  "baseline_oz_instcount": 470,
  "knowledge_base_entry": [
    "--instcombine",
    "--jump-threading",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--instsimplify",
    "--gvn-hoist",
    "--dce",
    "--mem2reg",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--loop-simplifycfg",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--load-store-vectorizer",
          "--hotcoldsplit",
          "--correlated-propagation",
          "--loop-data-prefetch",
          "--mem2reg",
          "--aggressive-instcombine",
          "--speculative-execution",
          "--loop-simplifycfg",
          "--adce",
          "--loop-instsimplify",
          "--argpromotion",
          "--functionattrs",
          "--libcalls-shrinkwrap",
          "--gvn",
          "--coro-cleanup",
          "--bdce",
          "--post-inline-ee-instrument",
          "--memcpyopt",
          "--reassociate",
          "--tailcallelim",
          "--strip-nondebug"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--load-store-vectorizer",
      "--hotcoldsplit",
      "--correlated-propagation",
      "--loop-data-prefetch",
      "--mem2reg",
      "--aggressive-instcombine",
      "--speculative-execution",
      "--loop-simplifycfg",
      "--adce",
      "--loop-instsimplify",
      "--argpromotion",
      "--functionattrs",
      "--libcalls-shrinkwrap",
      "--gvn",
      "--coro-cleanup",
      "--bdce",
      "--post-inline-ee-instrument",
      "--memcpyopt",
      "--reassociate",
      "--tailcallelim",
      "--strip-nondebug"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}