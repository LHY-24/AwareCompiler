{
  "program_id": "github-v0_27460.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 10,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 1,
    "BranchCount": 15,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 23,
    "const32Bit": 19,
    "const64Bit": 10,
    "numConstZeroes": 13,
    "numConstOnes": 10,
    "UncondBranches": 10,
    "binaryConstArg": 5,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 6,
    "NumAndInst": 2,
    "BlockMid": 1,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 15,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 1,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 17,
    "TotalInsts": 110,
    "TotalMemInst": 66,
    "TotalFuncs": 3,
    "ArgsPhi": 2,
    "testUnary": 54
  },
  "baseline_oz_instcount": 111,
  "knowledge_base_entry": [
    "--loweratomic",
    "--instcombine",
    "--sroa",
    "--elim-avail-extern",
    "--mergefunc",
    "--gvn",
    "--aggressive-instcombine",
    "--inline",
    "--sccp",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--loop-vectorize",
          "--bdce",
          "--partially-inline-libcalls",
          "--instnamer",
          "--pgo-memop-opt",
          "--loop-unroll-and-jam",
          "--early-cse",
          "--forceattrs",
          "--mergeicmps",
          "--canonicalize-aliases",
          "--die",
          "--coro-split",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--loop-vectorize",
      "--bdce",
      "--partially-inline-libcalls",
      "--instnamer",
      "--pgo-memop-opt",
      "--loop-unroll-and-jam",
      "--early-cse",
      "--forceattrs",
      "--mergeicmps",
      "--canonicalize-aliases",
      "--die",
      "--coro-split",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}