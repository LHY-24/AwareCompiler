{
  "program_id": "github-v0_23137.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 55,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 19,
    "oneSuccessor": 52,
    "twoPred": 27,
    "twoPredOneSuc": 15,
    "twoEach": 4,
    "twoSuccessor": 32,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 3,
    "BranchCount": 84,
    "returnInt": 8,
    "CriticalCount": 23,
    "NumEdges": 116,
    "const32Bit": 141,
    "const64Bit": 30,
    "numConstZeroes": 113,
    "numConstOnes": 45,
    "UncondBranches": 52,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 28,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 93,
    "NumBitCastInst": 15,
    "NumBrInst": 84,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 37,
    "NumLShrInst": 0,
    "NumLoadInst": 84,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 13,
    "NumSExtInst": 4,
    "NumSelectInst": 2,
    "NumShlInst": 1,
    "NumStoreInst": 42,
    "NumSubInst": 1,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 32,
    "TotalBlocks": 97,
    "TotalInsts": 435,
    "TotalMemInst": 234,
    "TotalFuncs": 26,
    "ArgsPhi": 8,
    "testUnary": 168
  },
  "baseline_oz_instcount": 435,
  "knowledge_base_entry": [
    "--instcombine",
    "--die",
    "--aggressive-instcombine",
    "--mergefunc",
    "--loop-reroll",
    "--slp-vectorizer",
    "--gvn",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--inline",
    "--mergefunc",
    "--early-cse",
    "--load-store-vectorizer",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--insert-gcov-profiling",
          "--infer-address-spaces",
          "--redundant-dbg-inst-elim",
          "--aggressive-instcombine",
          "--hotcoldsplit",
          "--ee-instrument",
          "--load-store-vectorizer",
          "--pgo-memop-opt",
          "--loop-load-elim",
          "--canonicalize-aliases",
          "--slp-vectorizer",
          "--loop-unswitch",
          "--loop-unroll",
          "--jump-threading",
          "--loop-predication",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--insert-gcov-profiling",
      "--infer-address-spaces",
      "--redundant-dbg-inst-elim",
      "--aggressive-instcombine",
      "--hotcoldsplit",
      "--ee-instrument",
      "--load-store-vectorizer",
      "--pgo-memop-opt",
      "--loop-load-elim",
      "--canonicalize-aliases",
      "--slp-vectorizer",
      "--loop-unswitch",
      "--loop-unroll",
      "--jump-threading",
      "--loop-predication",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}