{
  "program_id": "linux-v0_2310.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 4,
    "oneSuccessor": 27,
    "twoPred": 9,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 9,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 49,
    "BeginPhi": 0,
    "BranchCount": 35,
    "returnInt": 7,
    "CriticalCount": 2,
    "NumEdges": 54,
    "const32Bit": 161,
    "const64Bit": 8,
    "numConstZeroes": 53,
    "numConstOnes": 75,
    "UncondBranches": 27,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 66,
    "NumAndInst": 4,
    "BlockMid": 9,
    "BlockLow": 40,
    "NumBitCastInst": 19,
    "NumBrInst": 35,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 8,
    "NumLShrInst": 3,
    "NumLoadInst": 164,
    "NumMulInst": 5,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 98,
    "NumSubInst": 4,
    "NumTruncInst": 0,
    "NumXorInst": 6,
    "NumZExtInst": 20,
    "TotalBlocks": 49,
    "TotalInsts": 542,
    "TotalMemInst": 404,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 273
  },
  "baseline_oz_instcount": 543,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--dse",
    "--mergefunc",
    "--early-cse-memssa",
    "--lower-expect",
    "--nary-reassociate",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergeicmps",
          "--inject-tli-mappings",
          "--simple-loop-unswitch",
          "--loop-unswitch",
          "--alignment-from-assumptions",
          "--lower-matrix-intrinsics",
          "--loop-sink",
          "--argpromotion",
          "--sroa",
          "--ipconstprop",
          "--slsr",
          "--sink",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergeicmps",
      "--inject-tli-mappings",
      "--simple-loop-unswitch",
      "--loop-unswitch",
      "--alignment-from-assumptions",
      "--lower-matrix-intrinsics",
      "--loop-sink",
      "--argpromotion",
      "--sroa",
      "--ipconstprop",
      "--slsr",
      "--sink",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}