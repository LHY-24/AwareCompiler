{
  "program_id": "poj104-v1_16_719.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 0,
    "oneSuccessor": 6,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 8,
    "CriticalCount": 2,
    "NumEdges": 14,
    "const32Bit": 24,
    "const64Bit": 14,
    "numConstZeroes": 4,
    "numConstOnes": 9,
    "UncondBranches": 6,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 8,
    "NumBitCastInst": 14,
    "NumBrInst": 7,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 30,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 4,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 11,
    "TotalInsts": 113,
    "TotalMemInst": 73,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 54
  },
  "baseline_oz_instcount": 44,
  "knowledge_base_entry": [
    "--lower-expect",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--lower-expect",
    "--licm",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--licm",
    "--inline",
    "--gvn-hoist",
    "--instcombine",
    "--prune-eh",
    "--early-cse-memssa",
    "--jump-threading",
    "--sccp",
    "--early-cse",
    "--dce",
    "--simplifycfg",
    "--slp-vectorizer",
    "--jump-threading",
    "--early-cse-memssa",
    "--loop-deletion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--mem2reg",
          "--inferattrs",
          "--loweratomic",
          "--insert-gcov-profiling",
          "--hotcoldsplit",
          "--loop-instsimplify",
          "--sancov",
          "--slsr",
          "--sroa",
          "--reassociate",
          "--lower-guard-intrinsic",
          "--aggressive-instcombine",
          "--coro-elide",
          "--rpo-functionattrs",
          "--indvars",
          "--infer-address-spaces",
          "--lower-expect",
          "--always-inline",
          "--early-cse",
          "--argpromotion",
          "--dce",
          "--sccp",
          "--instsimplify",
          "--lower-matrix-intrinsics",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--mem2reg",
      "--inferattrs",
      "--loweratomic",
      "--insert-gcov-profiling",
      "--hotcoldsplit",
      "--loop-instsimplify",
      "--sancov",
      "--slsr",
      "--sroa",
      "--reassociate",
      "--lower-guard-intrinsic",
      "--aggressive-instcombine",
      "--coro-elide",
      "--rpo-functionattrs",
      "--indvars",
      "--infer-address-spaces",
      "--lower-expect",
      "--always-inline",
      "--early-cse",
      "--argpromotion",
      "--dce",
      "--sccp",
      "--instsimplify",
      "--lower-matrix-intrinsics",
      "--inline"
    ],
    "performance_vs_Oz": "+2.3%"
  }
}