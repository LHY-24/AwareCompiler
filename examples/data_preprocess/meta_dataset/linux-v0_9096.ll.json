{
  "program_id": "linux-v0_9096.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 70,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 23,
    "oneSuccessor": 61,
    "twoPred": 25,
    "twoPredOneSuc": 11,
    "twoEach": 10,
    "twoSuccessor": 40,
    "morePreds": 6,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 111,
    "BeginPhi": 2,
    "BranchCount": 101,
    "returnInt": 12,
    "CriticalCount": 17,
    "NumEdges": 141,
    "const32Bit": 476,
    "const64Bit": 87,
    "numConstZeroes": 288,
    "numConstOnes": 132,
    "UncondBranches": 61,
    "binaryConstArg": 43,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 73,
    "NumAndInst": 23,
    "BlockMid": 22,
    "BlockLow": 91,
    "NumBitCastInst": 14,
    "NumBrInst": 101,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 195,
    "NumICmpInst": 46,
    "NumLShrInst": 3,
    "NumLoadInst": 277,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 2,
    "NumRetInst": 12,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 132,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 7,
    "NumZExtInst": 35,
    "TotalBlocks": 113,
    "TotalInsts": 977,
    "TotalMemInst": 711,
    "TotalFuncs": 22,
    "ArgsPhi": 4,
    "testUnary": 411
  },
  "baseline_oz_instcount": 978,
  "knowledge_base_entry": [
    "--mergefunc",
    "--mem2reg",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--adce",
    "--sccp",
    "--adce",
    "--slp-vectorizer",
    "--lower-expect",
    "--reassociate",
    "--ipsccp",
    "--correlated-propagation",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--globalopt",
          "--hotcoldsplit",
          "--cross-dso-cfi",
          "--scalarizer",
          "--partial-inliner",
          "--speculative-execution",
          "--deadargelim",
          "--div-rem-pairs",
          "--forceattrs",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--globalopt",
      "--hotcoldsplit",
      "--cross-dso-cfi",
      "--scalarizer",
      "--partial-inliner",
      "--speculative-execution",
      "--deadargelim",
      "--div-rem-pairs",
      "--forceattrs",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}