{
  "program_id": "linux-v0_8475.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 48,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 15,
    "oneSuccessor": 42,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 0,
    "twoSuccessor": 23,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 85,
    "BeginPhi": 0,
    "BranchCount": 64,
    "returnInt": 22,
    "CriticalCount": 5,
    "NumEdges": 91,
    "const32Bit": 249,
    "const64Bit": 8,
    "numConstZeroes": 88,
    "numConstOnes": 107,
    "UncondBranches": 42,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 85,
    "NumAndInst": 2,
    "BlockMid": 13,
    "BlockLow": 72,
    "NumBitCastInst": 15,
    "NumBrInst": 64,
    "NumCallInst": 58,
    "NumGetElementPtrInst": 58,
    "NumICmpInst": 23,
    "NumLShrInst": 1,
    "NumLoadInst": 170,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 109,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 5,
    "TotalBlocks": 85,
    "TotalInsts": 615,
    "TotalMemInst": 480,
    "TotalFuncs": 36,
    "ArgsPhi": 0,
    "testUnary": 277
  },
  "baseline_oz_instcount": 616,
  "knowledge_base_entry": [
    "--instcombine",
    "--instsimplify",
    "--bdce",
    "--newgvn",
    "--adce",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--sroa",
    "--loop-rotate",
    "--instcombine",
    "--jump-threading",
    "--flattencfg",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--inline",
    "--instsimplify",
    "--aggressive-instcombine",
    "--loweratomic"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--tailcallelim",
          "--simple-loop-unswitch",
          "--early-cse-memssa",
          "--loop-predication",
          "--loop-versioning",
          "--ipconstprop",
          "--always-inline",
          "--gvn",
          "--die",
          "--newgvn",
          "--gvn-hoist",
          "--inject-tli-mappings",
          "--reassociate",
          "--mldst-motion",
          "--coro-elide",
          "--sink",
          "--dce",
          "--lower-widenable-condition",
          "--loop-reroll",
          "--prune-eh",
          "--strip-debug-declare",
          "--dse",
          "--loop-distribute",
          "--constmerge",
          "--indvars",
          "--slsr"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--tailcallelim",
      "--simple-loop-unswitch",
      "--early-cse-memssa",
      "--loop-predication",
      "--loop-versioning",
      "--ipconstprop",
      "--always-inline",
      "--gvn",
      "--die",
      "--newgvn",
      "--gvn-hoist",
      "--inject-tli-mappings",
      "--reassociate",
      "--mldst-motion",
      "--coro-elide",
      "--sink",
      "--dce",
      "--lower-widenable-condition",
      "--loop-reroll",
      "--prune-eh",
      "--strip-debug-declare",
      "--dse",
      "--loop-distribute",
      "--constmerge",
      "--indvars",
      "--slsr"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}