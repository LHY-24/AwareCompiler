{
  "program_id": "tensorflow-v0_754.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 43,
    "onePred": 120,
    "onePredOneSuc": 76,
    "onePredTwoSuc": 43,
    "oneSuccessor": 85,
    "twoPred": 50,
    "twoPredOneSuc": 5,
    "twoEach": 39,
    "twoSuccessor": 94,
    "morePreds": 14,
    "BB03Phi": 44,
    "BBHiPhi": 0,
    "BBNoPhi": 153,
    "BeginPhi": 44,
    "BranchCount": 179,
    "returnInt": 1,
    "CriticalCount": 71,
    "NumEdges": 276,
    "const32Bit": 158,
    "const64Bit": 296,
    "numConstZeroes": 222,
    "numConstOnes": 49,
    "UncondBranches": 85,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 18,
    "BlockLow": 179,
    "NumBitCastInst": 89,
    "NumBrInst": 179,
    "NumCallInst": 101,
    "NumGetElementPtrInst": 209,
    "NumICmpInst": 66,
    "NumLShrInst": 0,
    "NumLoadInst": 147,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 44,
    "NumRetInst": 17,
    "NumSExtInst": 0,
    "NumSelectInst": 8,
    "NumShlInst": 0,
    "NumStoreInst": 69,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 197,
    "TotalInsts": 955,
    "TotalMemInst": 526,
    "TotalFuncs": 19,
    "ArgsPhi": 116,
    "testUnary": 237
  },
  "baseline_oz_instcount": 946,
  "knowledge_base_entry": [
    "--scalarizer",
    "--instcombine",
    "--loop-instsimplify",
    "--simplifycfg",
    "--loop-deletion",
    "--early-cse",
    "--early-cse",
    "--ipsccp",
    "--instcombine",
    "--newgvn",
    "--mem2reg",
    "--simplifycfg",
    "--sccp",
    "--reassociate",
    "--inline",
    "--die",
    "--mem2reg",
    "--simplifycfg",
    "--early-cse",
    "--flattencfg",
    "--globalopt",
    "--gvn",
    "--adce",
    "--gvn-hoist",
    "--instsimplify",
    "--elim-avail-extern",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--inject-tli-mappings",
          "--cross-dso-cfi",
          "--lcssa",
          "--loop-data-prefetch",
          "--mergeicmps",
          "--coro-split",
          "--slp-vectorizer",
          "--speculative-execution",
          "--lower-expect",
          "-loop-reduce",
          "--correlated-propagation",
          "--newgvn",
          "--gvn-hoist",
          "--libcalls-shrinkwrap",
          "--coro-elide",
          "--sancov",
          "--constmerge",
          "--partially-inline-libcalls",
          "--called-value-propagation",
          "--coro-early",
          "--flattencfg",
          "--ipconstprop",
          "--barrier",
          "--separate-const-offset-from-gep",
          "--dce",
          "--rpo-functionattrs",
          "--forceattrs",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--inject-tli-mappings",
      "--cross-dso-cfi",
      "--lcssa",
      "--loop-data-prefetch",
      "--mergeicmps",
      "--coro-split",
      "--slp-vectorizer",
      "--speculative-execution",
      "--lower-expect",
      "-loop-reduce",
      "--correlated-propagation",
      "--newgvn",
      "--gvn-hoist",
      "--libcalls-shrinkwrap",
      "--coro-elide",
      "--sancov",
      "--constmerge",
      "--partially-inline-libcalls",
      "--called-value-propagation",
      "--coro-early",
      "--flattencfg",
      "--ipconstprop",
      "--barrier",
      "--separate-const-offset-from-gep",
      "--dce",
      "--rpo-functionattrs",
      "--forceattrs",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}