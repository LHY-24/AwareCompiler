{
  "program_id": "github-v0_43869.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 78,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 28,
    "oneSuccessor": 63,
    "twoPred": 27,
    "twoPredOneSuc": 11,
    "twoEach": 15,
    "twoSuccessor": 50,
    "morePreds": 9,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 117,
    "BeginPhi": 2,
    "BranchCount": 113,
    "returnInt": 30,
    "CriticalCount": 30,
    "NumEdges": 167,
    "const32Bit": 305,
    "const64Bit": 28,
    "numConstZeroes": 164,
    "numConstOnes": 82,
    "UncondBranches": 63,
    "binaryConstArg": 15,
    "NumAShrInst": 1,
    "NumAddInst": 4,
    "NumAllocaInst": 41,
    "NumAndInst": 3,
    "BlockMid": 10,
    "BlockLow": 109,
    "NumBitCastInst": 9,
    "NumBrInst": 113,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 99,
    "NumICmpInst": 53,
    "NumLShrInst": 0,
    "NumLoadInst": 195,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 5,
    "NumSExtInst": 6,
    "NumSelectInst": 3,
    "NumShlInst": 2,
    "NumStoreInst": 109,
    "NumSubInst": 11,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 119,
    "TotalInsts": 718,
    "TotalMemInst": 488,
    "TotalFuncs": 22,
    "ArgsPhi": 4,
    "testUnary": 265
  },
  "baseline_oz_instcount": 721,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--globalopt",
    "--instcombine",
    "--lower-expect",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--correlated-propagation",
          "--mergeicmps",
          "--slp-vectorizer",
          "--sink",
          "--strip",
          "--barrier",
          "--lower-constant-intrinsics",
          "--partially-inline-libcalls",
          "--instsimplify",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--correlated-propagation",
      "--mergeicmps",
      "--slp-vectorizer",
      "--sink",
      "--strip",
      "--barrier",
      "--lower-constant-intrinsics",
      "--partially-inline-libcalls",
      "--instsimplify",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}