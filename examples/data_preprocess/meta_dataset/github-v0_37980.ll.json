{
  "program_id": "github-v0_37980.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 30,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 2,
    "oneSuccessor": 30,
    "twoPred": 15,
    "twoPredOneSuc": 2,
    "twoEach": 11,
    "twoSuccessor": 15,
    "morePreds": 0,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 4,
    "BranchCount": 45,
    "returnInt": 2,
    "CriticalCount": 4,
    "NumEdges": 60,
    "const32Bit": 80,
    "const64Bit": 8,
    "numConstZeroes": 30,
    "numConstOnes": 52,
    "UncondBranches": 30,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 37,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 58,
    "NumBitCastInst": 5,
    "NumBrInst": 45,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 99,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 16,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 59,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 62,
    "TotalInsts": 328,
    "TotalMemInst": 229,
    "TotalFuncs": 20,
    "ArgsPhi": 8,
    "testUnary": 146
  },
  "baseline_oz_instcount": 327,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--gvn",
    "--lower-expect",
    "--load-store-vectorizer",
    "--newgvn",
    "--flattencfg",
    "--ipsccp",
    "--bdce",
    "--instcombine",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--globalopt",
    "--early-cse",
    "--slsr",
    "--loop-simplifycfg",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--separate-const-offset-from-gep",
          "--aggressive-instcombine",
          "--lower-expect",
          "--loop-unroll-and-jam",
          "--ipsccp",
          "--irce",
          "--strip-debug-declare",
          "--globaldce",
          "--dce",
          "--barrier",
          "--callsite-splitting",
          "--slsr",
          "--sancov",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--separate-const-offset-from-gep",
      "--aggressive-instcombine",
      "--lower-expect",
      "--loop-unroll-and-jam",
      "--ipsccp",
      "--irce",
      "--strip-debug-declare",
      "--globaldce",
      "--dce",
      "--barrier",
      "--callsite-splitting",
      "--slsr",
      "--sancov",
      "--die"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}