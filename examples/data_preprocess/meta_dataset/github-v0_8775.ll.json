{
  "program_id": "github-v0_8775.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 4,
    "oneSuccessor": 23,
    "twoPred": 11,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 11,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 4,
    "CriticalCount": 4,
    "NumEdges": 45,
    "const32Bit": 98,
    "const64Bit": 14,
    "numConstZeroes": 36,
    "numConstOnes": 63,
    "UncondBranches": 23,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 45,
    "NumAndInst": 6,
    "BlockMid": 7,
    "BlockLow": 34,
    "NumBitCastInst": 2,
    "NumBrInst": 34,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 11,
    "NumLShrInst": 2,
    "NumLoadInst": 92,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 9,
    "NumStoreInst": 59,
    "NumSubInst": 7,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 27,
    "TotalBlocks": 41,
    "TotalInsts": 357,
    "TotalMemInst": 223,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 176
  },
  "baseline_oz_instcount": 358,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--mem2reg",
    "--nary-reassociate",
    "--instsimplify",
    "--die",
    "--reassociate",
    "--reassociate",
    "--mergefunc",
    "--inline",
    "--mem2reg",
    "--jump-threading",
    "--slsr",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--aggressive-instcombine",
          "--memcpyopt",
          "--globalsplit",
          "--reassociate",
          "--dce",
          "--loop-data-prefetch",
          "--instsimplify",
          "--cross-dso-cfi",
          "--adce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--aggressive-instcombine",
      "--memcpyopt",
      "--globalsplit",
      "--reassociate",
      "--dce",
      "--loop-data-prefetch",
      "--instsimplify",
      "--cross-dso-cfi",
      "--adce"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}