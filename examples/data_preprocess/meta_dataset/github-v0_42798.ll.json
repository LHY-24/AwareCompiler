{
  "program_id": "github-v0_42798.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 12,
    "onePred": 12,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 6,
    "oneSuccessor": 12,
    "twoPred": 12,
    "twoPredOneSuc": 6,
    "twoEach": 6,
    "twoSuccessor": 12,
    "morePreds": 0,
    "BB03Phi": 12,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 12,
    "BranchCount": 24,
    "returnInt": 0,
    "CriticalCount": 12,
    "NumEdges": 36,
    "const32Bit": 62,
    "const64Bit": 20,
    "numConstZeroes": 28,
    "numConstOnes": 14,
    "UncondBranches": 12,
    "binaryConstArg": 36,
    "NumAShrInst": 0,
    "NumAddInst": 36,
    "NumAllocaInst": 2,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 22,
    "NumBitCastInst": 2,
    "NumBrInst": 24,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 24,
    "NumMulInst": 8,
    "NumOrInst": 18,
    "NumPHIInst": 12,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 24,
    "TotalBlocks": 28,
    "TotalInsts": 248,
    "TotalMemInst": 102,
    "TotalFuncs": 6,
    "ArgsPhi": 24,
    "testUnary": 52
  },
  "baseline_oz_instcount": 222,
  "knowledge_base_entry": [
    "--loop-deletion",
    "--early-cse-memssa",
    "--dse",
    "--globalopt",
    "--instsimplify",
    "--loop-reroll",
    "--newgvn",
    "--sroa",
    "--loop-deletion",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--indvars",
    "--correlated-propagation",
    "--reassociate",
    "--mem2reg",
    "--lower-expect",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--jump-threading",
    "--instsimplify",
    "--inline",
    "--early-cse",
    "--gvn-hoist",
    "--prune-eh",
    "--instsimplify",
    "--dce",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--indvars",
    "--correlated-propagation",
    "--reassociate",
    "--mem2reg",
    "--lower-expect",
    "--loop-simplifycfg",
    "--globalopt",
    "--instsimplify",
    "--loop-reroll",
    "--newgvn",
    "--sroa",
    "--loop-deletion",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--early-cse",
    "--indvars",
    "--gvn-hoist",
    "--prune-eh",
    "--instsimplify",
    "--dce",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--indvars",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--jump-threading",
    "--instcombine",
    "--die",
    "--reassociate",
    "--early-cse",
    "--inline",
    "--elim-avail-extern",
    "--adce",
    "--jump-threading",
    "--loop-reroll",
    "--indvars",
    "--instcombine",
    "--jump-threading",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--jump-threading",
    "--instsimplify",
    "--inline",
    "--early-cse",
    "--gvn-hoist",
    "--prune-eh",
    "--instsimplify",
    "--dce",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--indvars",
    "--correlated-propagation",
    "--reassociate",
    "--mem2reg",
    "--lower-expect",
    "--loop-simplifycfg",
    "--globalopt",
    "--lower-expect",
    "--gvn-hoist",
    "--nary-reassociate",
    "--dse",
    "--newgvn",
    "--early-cse",
    "--loop-instsimplify",
    "--bdce",
    "--aggressive-instcombine",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--mldst-motion",
    "--jump-threading",
    "--loop-rotate",
    "--sroa",
    "--early-cse",
    "--flattencfg",
    "--sroa",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--loop-deletion",
    "--jump-threading",
    "--instsimplify",
    "--loop-reroll",
    "--newgvn",
    "--sroa",
    "--loop-deletion",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--early-cse",
    "--indvars",
    "--gvn-hoist",
    "--prune-eh",
    "--instsimplify",
    "--dce",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--indvars",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--jump-threading",
    "--instcombine",
    "--die",
    "--reassociate",
    "--mem2reg",
    "--lower-expect",
    "--loop-simplifycfg",
    "--globalopt",
    "--lower-expect",
    "--gvn-hoist",
    "--nary-reassociate",
    "--dse",
    "--newgvn",
    "--early-cse",
    "--loop-instsimplify",
    "--bdce",
    "--aggressive-instcombine",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--memcpyopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mldst-motion",
          "--lowerswitch",
          "--loop-load-elim",
          "--loop-idiom",
          "--loop-interchange",
          "--loop-reroll",
          "--speculative-execution",
          "--separate-const-offset-from-gep",
          "--inline",
          "--inject-tli-mappings",
          "--cross-dso-cfi",
          "--libcalls-shrinkwrap",
          "--correlated-propagation",
          "--sroa",
          "--globalsplit",
          "--loop-distribute",
          "--loop-simplifycfg",
          "--called-value-propagation",
          "--slsr",
          "--callsite-splitting",
          "--rpo-functionattrs",
          "--simple-loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+47.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mldst-motion",
      "--lowerswitch",
      "--loop-load-elim",
      "--loop-idiom",
      "--loop-interchange",
      "--loop-reroll",
      "--speculative-execution",
      "--separate-const-offset-from-gep",
      "--inline",
      "--inject-tli-mappings",
      "--cross-dso-cfi",
      "--libcalls-shrinkwrap",
      "--correlated-propagation",
      "--sroa",
      "--globalsplit",
      "--loop-distribute",
      "--loop-simplifycfg",
      "--called-value-propagation",
      "--slsr",
      "--callsite-splitting",
      "--rpo-functionattrs",
      "--simple-loop-unswitch"
    ],
    "performance_vs_Oz": "+47.7%"
  }
}