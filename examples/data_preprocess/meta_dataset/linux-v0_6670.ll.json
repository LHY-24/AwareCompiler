{
  "program_id": "linux-v0_6670.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 74,
    "onePredOneSuc": 52,
    "onePredTwoSuc": 18,
    "oneSuccessor": 68,
    "twoPred": 16,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 26,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 122,
    "BeginPhi": 1,
    "BranchCount": 94,
    "returnInt": 32,
    "CriticalCount": 8,
    "NumEdges": 125,
    "const32Bit": 339,
    "const64Bit": 21,
    "numConstZeroes": 161,
    "numConstOnes": 139,
    "UncondBranches": 68,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 125,
    "NumAndInst": 2,
    "BlockMid": 16,
    "BlockLow": 107,
    "NumBitCastInst": 29,
    "NumBrInst": 94,
    "NumCallInst": 72,
    "NumGetElementPtrInst": 93,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 229,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 28,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 147,
    "NumSubInst": 1,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 123,
    "TotalInsts": 891,
    "TotalMemInst": 666,
    "TotalFuncs": 42,
    "ArgsPhi": 2,
    "testUnary": 424
  },
  "baseline_oz_instcount": 891,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--gvn",
    "--aggressive-instcombine",
    "--adce",
    "--lower-expect",
    "--newgvn",
    "--prune-eh",
    "--loop-simplifycfg",
    "--bdce",
    "--ipsccp",
    "--flattencfg",
    "--licm",
    "--gvn-hoist",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--slsr",
    "-loop-reduce",
    "--slsr",
    "--loop-simplifycfg",
    "--slsr",
    "--load-store-vectorizer",
    "--gvn",
    "--aggressive-instcombine",
    "--loweratomic",
    "--instcombine",
    "--loop-deletion",
    "--gvn-hoist",
    "--lower-expect",
    "--newgvn",
    "--prune-eh",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-expect",
          "--loop-simplify",
          "--loop-reroll",
          "--aggressive-instcombine",
          "--strip-dead-prototypes",
          "--sancov",
          "--insert-gcov-profiling",
          "--lower-guard-intrinsic",
          "--simple-loop-unswitch",
          "--loop-rotate",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-expect",
      "--loop-simplify",
      "--loop-reroll",
      "--aggressive-instcombine",
      "--strip-dead-prototypes",
      "--sancov",
      "--insert-gcov-profiling",
      "--lower-guard-intrinsic",
      "--simple-loop-unswitch",
      "--loop-rotate",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}