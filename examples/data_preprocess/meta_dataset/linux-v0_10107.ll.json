{
  "program_id": "linux-v0_10107.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 44,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 10,
    "oneSuccessor": 39,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 14,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 0,
    "BranchCount": 53,
    "returnInt": 17,
    "CriticalCount": 1,
    "NumEdges": 67,
    "const32Bit": 213,
    "const64Bit": 59,
    "numConstZeroes": 101,
    "numConstOnes": 121,
    "UncondBranches": 39,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 82,
    "NumAndInst": 9,
    "BlockMid": 11,
    "BlockLow": 60,
    "NumBitCastInst": 23,
    "NumBrInst": 53,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 57,
    "NumICmpInst": 18,
    "NumLShrInst": 3,
    "NumLoadInst": 140,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 117,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 8,
    "NumZExtInst": 10,
    "TotalBlocks": 71,
    "TotalInsts": 601,
    "TotalMemInst": 436,
    "TotalFuncs": 37,
    "ArgsPhi": 0,
    "testUnary": 270
  },
  "baseline_oz_instcount": 584,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--globalopt",
    "--dse",
    "--newgvn",
    "--loop-instsimplify",
    "--lower-expect",
    "--mergefunc",
    "--bdce",
    "--slp-vectorizer",
    "--mergefunc",
    "--bdce",
    "--gvn",
    "--lower-constant-intrinsics",
    "--dse",
    "--jump-threading",
    "--adce",
    "--early-cse-memssa",
    "--ipsccp",
    "--loop-deletion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-sink",
          "--loop-versioning",
          "--strip-nondebug",
          "--inject-tli-mappings",
          "--tailcallelim",
          "--loweratomic",
          "--newgvn",
          "--mergeicmps",
          "--loop-reroll",
          "--gvn",
          "--loop-predication",
          "--lowerswitch",
          "--memcpyopt",
          "--div-rem-pairs",
          "--dse",
          "--float2int",
          "--mergefunc",
          "--die",
          "--ipsccp",
          "--loop-idiom",
          "--cross-dso-cfi",
          "--speculative-execution",
          "--strip",
          "--loop-data-prefetch",
          "--irce",
          "--gvn-hoist",
          "--libcalls-shrinkwrap",
          "--slp-vectorizer",
          "--constmerge",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-sink",
      "--loop-versioning",
      "--strip-nondebug",
      "--inject-tli-mappings",
      "--tailcallelim",
      "--loweratomic",
      "--newgvn",
      "--mergeicmps",
      "--loop-reroll",
      "--gvn",
      "--loop-predication",
      "--lowerswitch",
      "--memcpyopt",
      "--div-rem-pairs",
      "--dse",
      "--float2int",
      "--mergefunc",
      "--die",
      "--ipsccp",
      "--loop-idiom",
      "--cross-dso-cfi",
      "--speculative-execution",
      "--strip",
      "--loop-data-prefetch",
      "--irce",
      "--gvn-hoist",
      "--libcalls-shrinkwrap",
      "--slp-vectorizer",
      "--constmerge",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}