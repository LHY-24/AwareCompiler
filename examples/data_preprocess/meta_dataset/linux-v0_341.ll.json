{
  "program_id": "linux-v0_341.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 6,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 0,
    "CriticalCount": 4,
    "NumEdges": 31,
    "const32Bit": 130,
    "const64Bit": 9,
    "numConstZeroes": 58,
    "numConstOnes": 29,
    "UncondBranches": 13,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 25,
    "NumAndInst": 4,
    "BlockMid": 6,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 19,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 128,
    "NumMulInst": 0,
    "NumOrInst": 12,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 42,
    "NumSubInst": 1,
    "NumTruncInst": 18,
    "NumXorInst": 1,
    "NumZExtInst": 21,
    "TotalBlocks": 25,
    "TotalInsts": 361,
    "TotalMemInst": 258,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 197
  },
  "baseline_oz_instcount": 361,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--early-cse-memssa",
    "--reassociate",
    "--licm",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--early-cse",
    "--nary-reassociate",
    "--mem2reg",
    "--die",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--div-rem-pairs",
          "--instnamer",
          "--loop-simplify",
          "--loop-vectorize",
          "--dse",
          "--aggressive-instcombine",
          "--globalopt",
          "--loweratomic",
          "--infer-address-spaces",
          "--loop-interchange",
          "--barrier",
          "--nary-reassociate",
          "--lowerinvoke",
          "--functionattrs",
          "--loop-deletion",
          "--strip-dead-prototypes",
          "--gvn",
          "--mem2reg",
          "--attributor",
          "--lower-widenable-condition",
          "--coro-elide",
          "--deadargelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--div-rem-pairs",
      "--instnamer",
      "--loop-simplify",
      "--loop-vectorize",
      "--dse",
      "--aggressive-instcombine",
      "--globalopt",
      "--loweratomic",
      "--infer-address-spaces",
      "--loop-interchange",
      "--barrier",
      "--nary-reassociate",
      "--lowerinvoke",
      "--functionattrs",
      "--loop-deletion",
      "--strip-dead-prototypes",
      "--gvn",
      "--mem2reg",
      "--attributor",
      "--lower-widenable-condition",
      "--coro-elide",
      "--deadargelim"
    ],
    "performance_vs_Oz": "+6.1%"
  }
}