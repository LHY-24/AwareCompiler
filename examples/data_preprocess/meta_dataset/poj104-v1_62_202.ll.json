{
  "program_id": "poj104-v1_62_202.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 2,
    "oneSuccessor": 5,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 12,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 5,
    "CriticalCount": 2,
    "NumEdges": 13,
    "const32Bit": 12,
    "const64Bit": 4,
    "numConstZeroes": 5,
    "numConstOnes": 6,
    "UncondBranches": 5,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 3,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 12,
    "NumBitCastInst": 2,
    "NumBrInst": 9,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 6,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 5,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 12,
    "TotalInsts": 47,
    "TotalMemInst": 25,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 14
  },
  "baseline_oz_instcount": 25,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--sroa",
    "--memcpyopt",
    "--slp-vectorizer",
    "--reassociate",
    "--gvn",
    "--ipsccp",
    "--inline",
    "--bdce",
    "--simplifycfg",
    "--lower-expect",
    "--mem2reg",
    "--bdce",
    "--jump-threading",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn-hoist",
          "--partially-inline-libcalls",
          "--coro-cleanup",
          "--float2int",
          "--infer-address-spaces",
          "--loop-idiom",
          "--mergereturn",
          "--hotcoldsplit",
          "--sccp",
          "--rpo-functionattrs",
          "--sroa",
          "-loop-reduce",
          "--insert-gcov-profiling",
          "--strip-nondebug",
          "--coro-elide",
          "--flattencfg",
          "--loop-fusion",
          "--dse",
          "--inline",
          "--load-store-vectorizer",
          "--sink",
          "--inject-tli-mappings",
          "--rewrite-statepoints-for-gc",
          "--canonicalize-aliases",
          "--deadargelim",
          "--strip",
          "--lower-expect",
          "--gvn",
          "--lower-constant-intrinsics",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn-hoist",
      "--partially-inline-libcalls",
      "--coro-cleanup",
      "--float2int",
      "--infer-address-spaces",
      "--loop-idiom",
      "--mergereturn",
      "--hotcoldsplit",
      "--sccp",
      "--rpo-functionattrs",
      "--sroa",
      "-loop-reduce",
      "--insert-gcov-profiling",
      "--strip-nondebug",
      "--coro-elide",
      "--flattencfg",
      "--loop-fusion",
      "--dse",
      "--inline",
      "--load-store-vectorizer",
      "--sink",
      "--inject-tli-mappings",
      "--rewrite-statepoints-for-gc",
      "--canonicalize-aliases",
      "--deadargelim",
      "--strip",
      "--lower-expect",
      "--gvn",
      "--lower-constant-intrinsics",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+4.0%"
  }
}