{
  "program_id": "github-v0_17769.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 28,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 4,
    "oneSuccessor": 28,
    "twoPred": 18,
    "twoPredOneSuc": 2,
    "twoEach": 10,
    "twoSuccessor": 18,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 54,
    "BeginPhi": 0,
    "BranchCount": 46,
    "returnInt": 4,
    "CriticalCount": 10,
    "NumEdges": 64,
    "const32Bit": 90,
    "const64Bit": 0,
    "numConstZeroes": 18,
    "numConstOnes": 62,
    "UncondBranches": 28,
    "binaryConstArg": 34,
    "NumAShrInst": 4,
    "NumAddInst": 22,
    "NumAllocaInst": 48,
    "NumAndInst": 2,
    "BlockMid": 14,
    "BlockLow": 40,
    "NumBitCastInst": 0,
    "NumBrInst": 46,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 128,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 86,
    "NumSubInst": 4,
    "NumTruncInst": 18,
    "NumXorInst": 0,
    "NumZExtInst": 40,
    "TotalBlocks": 54,
    "TotalInsts": 452,
    "TotalMemInst": 284,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 238
  },
  "baseline_oz_instcount": 456,
  "knowledge_base_entry": [
    "--globalopt",
    "--sroa",
    "--load-store-vectorizer",
    "--jump-threading",
    "--aggressive-instcombine",
    "--die",
    "--lower-expect",
    "--mergefunc",
    "--flattencfg",
    "--adce",
    "--mergefunc",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--infer-address-spaces",
          "--div-rem-pairs",
          "--strip-debug-declare",
          "--dce",
          "--lowerinvoke",
          "--instcombine",
          "--redundant-dbg-inst-elim",
          "--ipsccp",
          "--loop-vectorize",
          "--loop-idiom",
          "--lower-widenable-condition",
          "--loop-unroll",
          "--rewrite-statepoints-for-gc",
          "--loop-distribute",
          "--mergereturn",
          "--loop-data-prefetch",
          "--reassociate",
          "--aggressive-instcombine",
          "--argpromotion",
          "--loop-unswitch",
          "--separate-const-offset-from-gep",
          "--mergefunc",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+51.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--infer-address-spaces",
      "--div-rem-pairs",
      "--strip-debug-declare",
      "--dce",
      "--lowerinvoke",
      "--instcombine",
      "--redundant-dbg-inst-elim",
      "--ipsccp",
      "--loop-vectorize",
      "--loop-idiom",
      "--lower-widenable-condition",
      "--loop-unroll",
      "--rewrite-statepoints-for-gc",
      "--loop-distribute",
      "--mergereturn",
      "--loop-data-prefetch",
      "--reassociate",
      "--aggressive-instcombine",
      "--argpromotion",
      "--loop-unswitch",
      "--separate-const-offset-from-gep",
      "--mergefunc",
      "--indvars"
    ],
    "performance_vs_Oz": "+51.8%"
  }
}