{
  "program_id": "linux-v0_221.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 77,
    "onePredOneSuc": 55,
    "onePredTwoSuc": 20,
    "oneSuccessor": 68,
    "twoPred": 21,
    "twoPredOneSuc": 10,
    "twoEach": 4,
    "twoSuccessor": 36,
    "morePreds": 9,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 135,
    "BeginPhi": 1,
    "BranchCount": 104,
    "returnInt": 32,
    "CriticalCount": 15,
    "NumEdges": 154,
    "const32Bit": 268,
    "const64Bit": 20,
    "numConstZeroes": 107,
    "numConstOnes": 133,
    "UncondBranches": 68,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 113,
    "NumAndInst": 4,
    "BlockMid": 18,
    "BlockLow": 118,
    "NumBitCastInst": 49,
    "NumBrInst": 104,
    "NumCallInst": 106,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 36,
    "NumLShrInst": 1,
    "NumLoadInst": 260,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 29,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 156,
    "NumSubInst": 2,
    "NumTruncInst": 8,
    "NumXorInst": 6,
    "NumZExtInst": 12,
    "TotalBlocks": 136,
    "TotalInsts": 963,
    "TotalMemInst": 689,
    "TotalFuncs": 56,
    "ArgsPhi": 2,
    "testUnary": 459
  },
  "baseline_oz_instcount": 963,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--gvn",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--jump-threading",
    "--slsr",
    "--gvn",
    "--sccp",
    "--reassociate",
    "--sroa",
    "-loop-reduce",
    "--mergefunc",
    "--licm",
    "--inline",
    "--dce",
    "--load-store-vectorizer",
    "--dce",
    "--die",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--bdce",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--bdce",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--prune-eh",
    "--licm",
    "--inline",
    "--dce",
    "--die",
    "--newgvn",
    "--mergefunc",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--mem2reg",
    "--early-cse-memssa",
    "--lower-expect",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--loop-simplifycfg",
          "--div-rem-pairs",
          "--mergereturn",
          "--aggressive-instcombine",
          "--infer-address-spaces",
          "--pgo-memop-opt",
          "--jump-threading",
          "--dse",
          "--indvars",
          "--partial-inliner",
          "--lowerinvoke",
          "--strip",
          "-loop-reduce",
          "--instsimplify",
          "--sink",
          "--instcombine",
          "--lower-matrix-intrinsics",
          "--loop-unroll-and-jam",
          "--mergefunc",
          "--loop-predication",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--loop-simplifycfg",
      "--div-rem-pairs",
      "--mergereturn",
      "--aggressive-instcombine",
      "--infer-address-spaces",
      "--pgo-memop-opt",
      "--jump-threading",
      "--dse",
      "--indvars",
      "--partial-inliner",
      "--lowerinvoke",
      "--strip",
      "-loop-reduce",
      "--instsimplify",
      "--sink",
      "--instcombine",
      "--lower-matrix-intrinsics",
      "--loop-unroll-and-jam",
      "--mergefunc",
      "--loop-predication",
      "--float2int"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}