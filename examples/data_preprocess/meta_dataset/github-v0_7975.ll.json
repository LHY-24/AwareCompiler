{
  "program_id": "github-v0_7975.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 32,
    "const64Bit": 29,
    "numConstZeroes": 36,
    "numConstOnes": 18,
    "UncondBranches": 9,
    "binaryConstArg": 7,
    "NumAShrInst": 1,
    "NumAddInst": 8,
    "NumAllocaInst": 11,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 13,
    "NumBitCastInst": 0,
    "NumBrInst": 14,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 18,
    "TotalInsts": 138,
    "TotalMemInst": 81,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 61
  },
  "baseline_oz_instcount": 138,
  "knowledge_base_entry": [
    "--prune-eh",
    "--instsimplify",
    "--newgvn",
    "--flattencfg",
    "--simplifycfg",
    "--lower-expect",
    "--aggressive-instcombine",
    "--sroa",
    "--early-cse-memssa",
    "--inline",
    "--early-cse",
    "--die",
    "--loop-instsimplify",
    "--bdce",
    "--loop-instsimplify",
    "--inline",
    "--slp-vectorizer",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simplifycfg",
          "--prune-eh",
          "--forceattrs",
          "--aggressive-instcombine",
          "--loop-distribute",
          "--loop-deletion",
          "--lower-constant-intrinsics",
          "--loop-sink",
          "--mergefunc",
          "--barrier",
          "--lower-matrix-intrinsics",
          "--die",
          "--ipsccp",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simplifycfg",
      "--prune-eh",
      "--forceattrs",
      "--aggressive-instcombine",
      "--loop-distribute",
      "--loop-deletion",
      "--lower-constant-intrinsics",
      "--loop-sink",
      "--mergefunc",
      "--barrier",
      "--lower-matrix-intrinsics",
      "--die",
      "--ipsccp",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+11.6%"
  }
}