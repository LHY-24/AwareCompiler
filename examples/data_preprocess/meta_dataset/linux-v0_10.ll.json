{
  "program_id": "linux-v0_10.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 6,
    "CriticalCount": 0,
    "NumEdges": 17,
    "const32Bit": 81,
    "const64Bit": 1,
    "numConstZeroes": 30,
    "numConstOnes": 35,
    "UncondBranches": 9,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 28,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 22,
    "NumBitCastInst": 7,
    "NumBrInst": 12,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 53,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 38,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 1,
    "TotalBlocks": 26,
    "TotalInsts": 200,
    "TotalMemInst": 159,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 90
  },
  "baseline_oz_instcount": 201,
  "knowledge_base_entry": [
    "--instcombine",
    "--memcpyopt",
    "--early-cse-memssa",
    "--licm",
    "--ipsccp",
    "--gvn-hoist",
    "--prune-eh",
    "--newgvn",
    "--bdce",
    "--licm",
    "--jump-threading",
    "--mldst-motion",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--inject-tli-mappings",
          "--rpo-functionattrs",
          "--constprop",
          "--lcssa",
          "--loop-vectorize",
          "--slp-vectorizer",
          "--loop-load-elim",
          "--mem2reg",
          "--prune-eh",
          "--slsr",
          "--indvars",
          "--functionattrs",
          "--lower-widenable-condition",
          "--coro-split",
          "--lower-matrix-intrinsics",
          "--strip-debug-declare",
          "--ipconstprop",
          "--loop-unroll-and-jam",
          "--called-value-propagation",
          "--loop-predication",
          "--canonicalize-aliases"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--inject-tli-mappings",
      "--rpo-functionattrs",
      "--constprop",
      "--lcssa",
      "--loop-vectorize",
      "--slp-vectorizer",
      "--loop-load-elim",
      "--mem2reg",
      "--prune-eh",
      "--slsr",
      "--indvars",
      "--functionattrs",
      "--lower-widenable-condition",
      "--coro-split",
      "--lower-matrix-intrinsics",
      "--strip-debug-declare",
      "--ipconstprop",
      "--loop-unroll-and-jam",
      "--called-value-propagation",
      "--loop-predication",
      "--canonicalize-aliases"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}