{
  "program_id": "github-v0_34436.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 54,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 20,
    "oneSuccessor": 38,
    "twoPred": 27,
    "twoPredOneSuc": 13,
    "twoEach": 10,
    "twoSuccessor": 38,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 93,
    "BeginPhi": 1,
    "BranchCount": 76,
    "returnInt": 23,
    "CriticalCount": 22,
    "NumEdges": 114,
    "const32Bit": 203,
    "const64Bit": 37,
    "numConstZeroes": 81,
    "numConstOnes": 28,
    "UncondBranches": 38,
    "binaryConstArg": 80,
    "NumAShrInst": 8,
    "NumAddInst": 13,
    "NumAllocaInst": 24,
    "NumAndInst": 33,
    "BlockMid": 11,
    "BlockLow": 83,
    "NumBitCastInst": 8,
    "NumBrInst": 76,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 49,
    "NumLShrInst": 6,
    "NumLoadInst": 151,
    "NumMulInst": 20,
    "NumOrInst": 11,
    "NumPHIInst": 1,
    "NumRetInst": 11,
    "NumSExtInst": 17,
    "NumSelectInst": 7,
    "NumShlInst": 0,
    "NumStoreInst": 56,
    "NumSubInst": 2,
    "NumTruncInst": 8,
    "NumXorInst": 1,
    "NumZExtInst": 19,
    "TotalBlocks": 94,
    "TotalInsts": 601,
    "TotalMemInst": 304,
    "TotalFuncs": 22,
    "ArgsPhi": 2,
    "testUnary": 227
  },
  "baseline_oz_instcount": 601,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--gvn-hoist",
    "--loop-deletion",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--jump-threading",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--licm",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--loop-interchange",
          "--early-cse-memssa",
          "--simplifycfg",
          "--pgo-memop-opt",
          "--scalarizer",
          "--speculative-execution",
          "--lowerswitch",
          "--libcalls-shrinkwrap",
          "--licm",
          "--coro-split",
          "--tailcallelim",
          "--div-rem-pairs",
          "--name-anon-globals",
          "--flattencfg",
          "--canonicalize-aliases",
          "--sink",
          "--loop-versioning-licm",
          "--globalopt",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--loop-interchange",
      "--early-cse-memssa",
      "--simplifycfg",
      "--pgo-memop-opt",
      "--scalarizer",
      "--speculative-execution",
      "--lowerswitch",
      "--libcalls-shrinkwrap",
      "--licm",
      "--coro-split",
      "--tailcallelim",
      "--div-rem-pairs",
      "--name-anon-globals",
      "--flattencfg",
      "--canonicalize-aliases",
      "--sink",
      "--loop-versioning-licm",
      "--globalopt",
      "--dce"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}