{
  "program_id": "github-v0_12409.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 38,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 8,
    "oneSuccessor": 36,
    "twoPred": 16,
    "twoPredOneSuc": 5,
    "twoEach": 10,
    "twoSuccessor": 20,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 1,
    "BranchCount": 56,
    "returnInt": 19,
    "CriticalCount": 5,
    "NumEdges": 76,
    "const32Bit": 147,
    "const64Bit": 26,
    "numConstZeroes": 85,
    "numConstOnes": 70,
    "UncondBranches": 36,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 21,
    "NumAllocaInst": 32,
    "NumAndInst": 1,
    "BlockMid": 10,
    "BlockLow": 51,
    "NumBitCastInst": 6,
    "NumBrInst": 56,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 65,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 174,
    "NumMulInst": 5,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 5,
    "NumSExtInst": 24,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 84,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 15,
    "TotalBlocks": 61,
    "TotalInsts": 545,
    "TotalMemInst": 385,
    "TotalFuncs": 13,
    "ArgsPhi": 2,
    "testUnary": 254
  },
  "baseline_oz_instcount": 545,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--globalopt",
    "--instcombine",
    "--adce",
    "--aggressive-instcombine",
    "--prune-eh",
    "--mem2reg",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--globalopt",
    "--loweratomic",
    "--ipsccp",
    "--elim-avail-extern",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--coro-cleanup",
          "--strip",
          "--mem2reg",
          "--die",
          "--dce",
          "--loweratomic",
          "--scalarizer",
          "--early-cse",
          "--functionattrs",
          "--globalopt",
          "--loop-reroll",
          "--strip-debug-declare",
          "--inferattrs",
          "--coro-elide",
          "--nary-reassociate",
          "--constmerge",
          "--barrier",
          "--early-cse-memssa",
          "--mldst-motion",
          "--argpromotion",
          "--slsr",
          "--lower-matrix-intrinsics",
          "--called-value-propagation",
          "--forceattrs",
          "--memcpyopt",
          "--loop-unroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--coro-cleanup",
      "--strip",
      "--mem2reg",
      "--die",
      "--dce",
      "--loweratomic",
      "--scalarizer",
      "--early-cse",
      "--functionattrs",
      "--globalopt",
      "--loop-reroll",
      "--strip-debug-declare",
      "--inferattrs",
      "--coro-elide",
      "--nary-reassociate",
      "--constmerge",
      "--barrier",
      "--early-cse-memssa",
      "--mldst-motion",
      "--argpromotion",
      "--slsr",
      "--lower-matrix-intrinsics",
      "--called-value-propagation",
      "--forceattrs",
      "--memcpyopt",
      "--loop-unroll"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}