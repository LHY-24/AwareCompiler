{
  "program_id": "linux-v0_12265.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 59,
    "onePredOneSuc": 53,
    "onePredTwoSuc": 6,
    "oneSuccessor": 61,
    "twoPred": 19,
    "twoPredOneSuc": 5,
    "twoEach": 5,
    "twoSuccessor": 19,
    "morePreds": 9,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 118,
    "BeginPhi": 0,
    "BranchCount": 79,
    "returnInt": 59,
    "CriticalCount": 17,
    "NumEdges": 136,
    "const32Bit": 306,
    "const64Bit": 14,
    "numConstZeroes": 79,
    "numConstOnes": 110,
    "UncondBranches": 61,
    "binaryConstArg": 65,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 86,
    "NumAndInst": 23,
    "BlockMid": 12,
    "BlockLow": 106,
    "NumBitCastInst": 9,
    "NumBrInst": 79,
    "NumCallInst": 79,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 18,
    "NumLShrInst": 4,
    "NumLoadInst": 218,
    "NumMulInst": 2,
    "NumOrInst": 31,
    "NumPHIInst": 0,
    "NumRetInst": 31,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 139,
    "NumSubInst": 2,
    "NumTruncInst": 38,
    "NumXorInst": 2,
    "NumZExtInst": 44,
    "TotalBlocks": 118,
    "TotalInsts": 870,
    "TotalMemInst": 555,
    "TotalFuncs": 53,
    "ArgsPhi": 0,
    "testUnary": 405
  },
  "baseline_oz_instcount": 871,
  "knowledge_base_entry": [
    "--sccp",
    "--early-cse",
    "--adce",
    "--aggressive-instcombine",
    "--instcombine",
    "--instsimplify",
    "--adce",
    "--loop-simplifycfg",
    "--instsimplify",
    "--newgvn",
    "--dce",
    "--mem2reg",
    "--prune-eh",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--early-cse",
          "--loop-simplifycfg",
          "--licm",
          "--loop-reroll",
          "--consthoist",
          "--early-cse-memssa",
          "--loop-fusion",
          "--forceattrs",
          "--strip",
          "--separate-const-offset-from-gep",
          "--loop-predication",
          "--aggressive-instcombine",
          "--flattencfg",
          "--libcalls-shrinkwrap",
          "--partially-inline-libcalls",
          "--correlated-propagation",
          "--called-value-propagation",
          "--redundant-dbg-inst-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--early-cse",
      "--loop-simplifycfg",
      "--licm",
      "--loop-reroll",
      "--consthoist",
      "--early-cse-memssa",
      "--loop-fusion",
      "--forceattrs",
      "--strip",
      "--separate-const-offset-from-gep",
      "--loop-predication",
      "--aggressive-instcombine",
      "--flattencfg",
      "--libcalls-shrinkwrap",
      "--partially-inline-libcalls",
      "--correlated-propagation",
      "--called-value-propagation",
      "--redundant-dbg-inst-elim"
    ],
    "performance_vs_Oz": "+4.2%"
  }
}