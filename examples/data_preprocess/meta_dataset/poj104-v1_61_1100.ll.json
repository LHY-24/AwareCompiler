{
  "program_id": "poj104-v1_61_1100.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 13,
    "returnInt": 6,
    "CriticalCount": 0,
    "NumEdges": 18,
    "const32Bit": 33,
    "const64Bit": 13,
    "numConstZeroes": 10,
    "numConstOnes": 22,
    "UncondBranches": 8,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 17,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 22,
    "NumBitCastInst": 13,
    "NumBrInst": 13,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 24,
    "TotalInsts": 154,
    "TotalMemInst": 105,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 65
  },
  "baseline_oz_instcount": 48,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--gvn",
    "--die",
    "--gvn",
    "--instcombine",
    "--die",
    "--newgvn",
    "--simplifycfg",
    "--loop-reroll",
    "--early-cse-memssa",
    "--jump-threading",
    "--instsimplify",
    "--elim-avail-extern",
    "--early-cse",
    "--gvn",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--inline",
    "--adce",
    "--dce",
    "--early-cse",
    "--lower-expect",
    "--instcombine",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--early-cse-memssa",
          "--loop-simplify",
          "--adce",
          "--called-value-propagation",
          "--loop-rotate",
          "--nary-reassociate",
          "--tailcallelim",
          "--inject-tli-mappings",
          "--load-store-vectorizer",
          "--elim-avail-extern",
          "--slp-vectorizer",
          "--simplifycfg",
          "--deadargelim",
          "--dce",
          "--loweratomic",
          "--inline",
          "--mem2reg",
          "--hotcoldsplit",
          "--forceattrs",
          "--inferattrs",
          "--coro-elide",
          "--libcalls-shrinkwrap",
          "--loop-distribute",
          "--lcssa",
          "--add-discriminators"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+18.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--early-cse-memssa",
      "--loop-simplify",
      "--adce",
      "--called-value-propagation",
      "--loop-rotate",
      "--nary-reassociate",
      "--tailcallelim",
      "--inject-tli-mappings",
      "--load-store-vectorizer",
      "--elim-avail-extern",
      "--slp-vectorizer",
      "--simplifycfg",
      "--deadargelim",
      "--dce",
      "--loweratomic",
      "--inline",
      "--mem2reg",
      "--hotcoldsplit",
      "--forceattrs",
      "--inferattrs",
      "--coro-elide",
      "--libcalls-shrinkwrap",
      "--loop-distribute",
      "--lcssa",
      "--add-discriminators"
    ],
    "performance_vs_Oz": "+18.8%"
  }
}