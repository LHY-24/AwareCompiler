{
  "program_id": "github-v0_37563.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 55,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 24,
    "oneSuccessor": 52,
    "twoPred": 30,
    "twoPredOneSuc": 19,
    "twoEach": 9,
    "twoSuccessor": 36,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 93,
    "BeginPhi": 0,
    "BranchCount": 88,
    "returnInt": 13,
    "CriticalCount": 19,
    "NumEdges": 124,
    "const32Bit": 359,
    "const64Bit": 19,
    "numConstZeroes": 175,
    "numConstOnes": 103,
    "UncondBranches": 52,
    "binaryConstArg": 89,
    "NumAShrInst": 0,
    "NumAddInst": 24,
    "NumAllocaInst": 55,
    "NumAndInst": 3,
    "BlockMid": 14,
    "BlockLow": 79,
    "NumBitCastInst": 46,
    "NumBrInst": 88,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 119,
    "NumICmpInst": 37,
    "NumLShrInst": 0,
    "NumLoadInst": 206,
    "NumMulInst": 25,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 20,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 97,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 15,
    "TotalBlocks": 93,
    "TotalInsts": 901,
    "TotalMemInst": 540,
    "TotalFuncs": 36,
    "ArgsPhi": 0,
    "testUnary": 379
  },
  "baseline_oz_instcount": 901,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--gvn-hoist",
    "--die",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--sroa",
    "--aggressive-instcombine",
    "--flattencfg",
    "--adce",
    "--gvn-hoist",
    "--bdce",
    "--mergefunc",
    "--early-cse-memssa",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--loop-load-elim",
          "--mergereturn",
          "--infer-address-spaces",
          "--scalarizer",
          "--elim-avail-extern",
          "--gvn-hoist",
          "--indvars",
          "--aggressive-instcombine",
          "--loop-unroll-and-jam",
          "--name-anon-globals",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--loop-load-elim",
      "--mergereturn",
      "--infer-address-spaces",
      "--scalarizer",
      "--elim-avail-extern",
      "--gvn-hoist",
      "--indvars",
      "--aggressive-instcombine",
      "--loop-unroll-and-jam",
      "--name-anon-globals",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}