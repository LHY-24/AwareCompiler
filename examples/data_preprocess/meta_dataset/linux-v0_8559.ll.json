{
  "program_id": "linux-v0_8559.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 64,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 21,
    "oneSuccessor": 58,
    "twoPred": 24,
    "twoPredOneSuc": 10,
    "twoEach": 9,
    "twoSuccessor": 39,
    "morePreds": 12,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 121,
    "BeginPhi": 0,
    "BranchCount": 97,
    "returnInt": 18,
    "CriticalCount": 35,
    "NumEdges": 154,
    "const32Bit": 332,
    "const64Bit": 15,
    "numConstZeroes": 147,
    "numConstOnes": 114,
    "UncondBranches": 58,
    "binaryConstArg": 30,
    "NumAShrInst": 2,
    "NumAddInst": 12,
    "NumAllocaInst": 84,
    "NumAndInst": 2,
    "BlockMid": 15,
    "BlockLow": 106,
    "NumBitCastInst": 14,
    "NumBrInst": 97,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 91,
    "NumICmpInst": 40,
    "NumLShrInst": 0,
    "NumLoadInst": 251,
    "NumMulInst": 4,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 128,
    "NumSubInst": 6,
    "NumTruncInst": 9,
    "NumXorInst": 2,
    "NumZExtInst": 10,
    "TotalBlocks": 121,
    "TotalInsts": 842,
    "TotalMemInst": 593,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 384
  },
  "baseline_oz_instcount": 843,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--jump-threading",
    "--mldst-motion",
    "--gvn-hoist",
    "--die",
    "--mem2reg",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--gvn-hoist",
          "--partial-inliner",
          "--name-anon-globals",
          "--lowerinvoke",
          "--globaldce",
          "--inject-tli-mappings",
          "--slp-vectorizer",
          "--argpromotion",
          "--speculative-execution",
          "--partially-inline-libcalls",
          "--ipsccp",
          "--consthoist",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--gvn-hoist",
      "--partial-inliner",
      "--name-anon-globals",
      "--lowerinvoke",
      "--globaldce",
      "--inject-tli-mappings",
      "--slp-vectorizer",
      "--argpromotion",
      "--speculative-execution",
      "--partially-inline-libcalls",
      "--ipsccp",
      "--consthoist",
      "--constmerge"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}