{
  "program_id": "github-v0_50230.ll",
  "autophase_features": {
    "BBNumArgsHi": 7,
    "BBNumArgsLo": 3,
    "onePred": 9,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 3,
    "oneSuccessor": 6,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 7,
    "twoSuccessor": 13,
    "morePreds": 3,
    "BB03Phi": 10,
    "BBHiPhi": 0,
    "BBNoPhi": 12,
    "BeginPhi": 10,
    "BranchCount": 19,
    "returnInt": 5,
    "CriticalCount": 17,
    "NumEdges": 32,
    "const32Bit": 41,
    "const64Bit": 2,
    "numConstZeroes": 19,
    "numConstOnes": 10,
    "UncondBranches": 6,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 28,
    "NumAllocaInst": 0,
    "NumAndInst": 5,
    "BlockMid": 3,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 19,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 18,
    "NumMulInst": 13,
    "NumOrInst": 5,
    "NumPHIInst": 24,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 3,
    "NumSubInst": 3,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 19,
    "TotalBlocks": 22,
    "TotalInsts": 198,
    "TotalMemInst": 53,
    "TotalFuncs": 5,
    "ArgsPhi": 51,
    "testUnary": 42
  },
  "baseline_oz_instcount": 198,
  "knowledge_base_entry": [
    "--dce",
    "--early-cse",
    "-loop-reduce",
    "--mergefunc",
    "--reassociate",
    "--jump-threading",
    "--slsr",
    "--simplifycfg",
    "--globalopt",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--newgvn",
    "--dce",
    "--mem2reg",
    "--flattencfg",
    "--instcombine",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--reassociate",
          "--lcssa",
          "--loop-deletion",
          "--ipsccp",
          "--tailcallelim",
          "--jump-threading",
          "--slp-vectorizer",
          "--gvn",
          "--strip-nondebug",
          "--sroa",
          "--coro-elide",
          "--slsr",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--reassociate",
      "--lcssa",
      "--loop-deletion",
      "--ipsccp",
      "--tailcallelim",
      "--jump-threading",
      "--slp-vectorizer",
      "--gvn",
      "--strip-nondebug",
      "--sroa",
      "--coro-elide",
      "--slsr",
      "--strip"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}