{
  "program_id": "github-v0_26235.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 51,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 7,
    "oneSuccessor": 46,
    "twoPred": 27,
    "twoPredOneSuc": 5,
    "twoEach": 8,
    "twoSuccessor": 31,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 110,
    "BeginPhi": 0,
    "BranchCount": 77,
    "returnInt": 11,
    "CriticalCount": 16,
    "NumEdges": 108,
    "const32Bit": 336,
    "const64Bit": 19,
    "numConstZeroes": 173,
    "numConstOnes": 141,
    "UncondBranches": 46,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 22,
    "NumAllocaInst": 102,
    "NumAndInst": 0,
    "BlockMid": 20,
    "BlockLow": 90,
    "NumBitCastInst": 8,
    "NumBrInst": 77,
    "NumCallInst": 75,
    "NumGetElementPtrInst": 107,
    "NumICmpInst": 32,
    "NumLShrInst": 0,
    "NumLoadInst": 268,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 30,
    "NumSExtInst": 16,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 131,
    "NumSubInst": 3,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 110,
    "TotalInsts": 887,
    "TotalMemInst": 683,
    "TotalFuncs": 48,
    "ArgsPhi": 0,
    "testUnary": 399
  },
  "baseline_oz_instcount": 887,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--instsimplify",
    "--prune-eh",
    "--gvn",
    "--instcombine",
    "--aggressive-instcombine",
    "--loweratomic",
    "--ipsccp",
    "--newgvn",
    "--loop-reroll",
    "--correlated-propagation",
    "--die",
    "--correlated-propagation",
    "--ipsccp",
    "--newgvn",
    "--loop-deletion",
    "--newgvn",
    "--correlated-propagation",
    "--newgvn",
    "--loop-rotate",
    "--dse",
    "--newgvn",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--mem2reg",
    "--flattencfg",
    "--mem2reg",
    "--load-store-vectorizer",
    "--slsr",
    "--newgvn",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--sroa",
    "--slp-vectorizer",
    "--adce",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--mergereturn",
          "--coro-elide",
          "--mem2reg",
          "--prune-eh",
          "--guard-widening",
          "--lower-guard-intrinsic",
          "--instcombine",
          "--scalarizer",
          "--functionattrs",
          "--canonicalize-aliases",
          "--insert-gcov-profiling",
          "--add-discriminators",
          "--load-store-vectorizer",
          "--indvars",
          "--pgo-memop-opt",
          "--callsite-splitting",
          "--constmerge",
          "--ipsccp",
          "--separate-const-offset-from-gep",
          "--early-cse",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--mergereturn",
      "--coro-elide",
      "--mem2reg",
      "--prune-eh",
      "--guard-widening",
      "--lower-guard-intrinsic",
      "--instcombine",
      "--scalarizer",
      "--functionattrs",
      "--canonicalize-aliases",
      "--insert-gcov-profiling",
      "--add-discriminators",
      "--load-store-vectorizer",
      "--indvars",
      "--pgo-memop-opt",
      "--callsite-splitting",
      "--constmerge",
      "--ipsccp",
      "--separate-const-offset-from-gep",
      "--early-cse",
      "--reassociate"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}