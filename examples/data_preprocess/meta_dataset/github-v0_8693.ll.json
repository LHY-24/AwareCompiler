{
  "program_id": "github-v0_8693.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 46,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 12,
    "oneSuccessor": 35,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 23,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 73,
    "BeginPhi": 0,
    "BranchCount": 58,
    "returnInt": 29,
    "CriticalCount": 0,
    "NumEdges": 81,
    "const32Bit": 143,
    "const64Bit": 4,
    "numConstZeroes": 22,
    "numConstOnes": 96,
    "UncondBranches": 35,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 85,
    "NumAndInst": 4,
    "BlockMid": 15,
    "BlockLow": 58,
    "NumBitCastInst": 10,
    "NumBrInst": 58,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 23,
    "NumLShrInst": 4,
    "NumLoadInst": 141,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 28,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 124,
    "NumSubInst": 10,
    "NumTruncInst": 13,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 73,
    "TotalInsts": 603,
    "TotalMemInst": 414,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 301
  },
  "baseline_oz_instcount": 603,
  "knowledge_base_entry": [
    "--dse",
    "--correlated-propagation",
    "--sroa",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--licm",
    "--adce",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simple-loop-unswitch",
          "--loop-reroll",
          "--instsimplify",
          "--dse",
          "--loop-data-prefetch",
          "--slsr",
          "--loweratomic",
          "--lower-constant-intrinsics",
          "--aggressive-instcombine",
          "--strip",
          "--loop-distribute",
          "--correlated-propagation",
          "--loop-predication",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simple-loop-unswitch",
      "--loop-reroll",
      "--instsimplify",
      "--dse",
      "--loop-data-prefetch",
      "--slsr",
      "--loweratomic",
      "--lower-constant-intrinsics",
      "--aggressive-instcombine",
      "--strip",
      "--loop-distribute",
      "--correlated-propagation",
      "--loop-predication",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}