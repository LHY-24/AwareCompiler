{
  "program_id": "github-v0_40441.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 30,
    "const64Bit": 43,
    "numConstZeroes": 41,
    "numConstOnes": 25,
    "UncondBranches": 11,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 8,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 30,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 21,
    "TotalInsts": 177,
    "TotalMemInst": 110,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 80
  },
  "baseline_oz_instcount": 177,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--sroa",
    "--mem2reg",
    "--loop-rotate",
    "--gvn-hoist",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--mergereturn",
          "--name-anon-globals",
          "--globalsplit",
          "--lower-widenable-condition",
          "--memcpyopt",
          "--lower-matrix-intrinsics",
          "--loop-guard-widening",
          "--functionattrs",
          "--aggressive-instcombine",
          "--adce",
          "--indvars",
          "--strip-nondebug",
          "--strip",
          "--mergefunc",
          "--gvn",
          "--inline",
          "--forceattrs",
          "--always-inline",
          "--cross-dso-cfi"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--mergereturn",
      "--name-anon-globals",
      "--globalsplit",
      "--lower-widenable-condition",
      "--memcpyopt",
      "--lower-matrix-intrinsics",
      "--loop-guard-widening",
      "--functionattrs",
      "--aggressive-instcombine",
      "--adce",
      "--indvars",
      "--strip-nondebug",
      "--strip",
      "--mergefunc",
      "--gvn",
      "--inline",
      "--forceattrs",
      "--always-inline",
      "--cross-dso-cfi"
    ],
    "performance_vs_Oz": "+6.2%"
  }
}