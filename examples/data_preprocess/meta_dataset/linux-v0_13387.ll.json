{
  "program_id": "linux-v0_13387.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 2,
    "oneSuccessor": 15,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 30,
    "const32Bit": 103,
    "const64Bit": 6,
    "numConstZeroes": 44,
    "numConstOnes": 25,
    "UncondBranches": 15,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 19,
    "NumAndInst": 4,
    "BlockMid": 7,
    "BlockLow": 16,
    "NumBitCastInst": 4,
    "NumBrInst": 21,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 7,
    "NumLShrInst": 1,
    "NumLoadInst": 97,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 31,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 3,
    "NumZExtInst": 12,
    "TotalBlocks": 23,
    "TotalInsts": 268,
    "TotalMemInst": 195,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 140
  },
  "baseline_oz_instcount": 268,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--aggressive-instcombine",
    "--dse",
    "--sccp",
    "--gvn",
    "--instcombine",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--aggressive-instcombine",
          "--correlated-propagation",
          "--mergereturn",
          "--loop-interchange",
          "--speculative-execution",
          "--partially-inline-libcalls",
          "--early-cse-memssa",
          "--lcssa",
          "--lower-guard-intrinsic",
          "--scalarizer",
          "--loop-instsimplify",
          "--gvn-hoist",
          "--deadargelim",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--aggressive-instcombine",
      "--correlated-propagation",
      "--mergereturn",
      "--loop-interchange",
      "--speculative-execution",
      "--partially-inline-libcalls",
      "--early-cse-memssa",
      "--lcssa",
      "--lower-guard-intrinsic",
      "--scalarizer",
      "--loop-instsimplify",
      "--gvn-hoist",
      "--deadargelim",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+3.0%"
  }
}