{
  "program_id": "linux-v0_8285.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 6,
    "oneSuccessor": 12,
    "twoPred": 5,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 2,
    "CriticalCount": 9,
    "NumEdges": 35,
    "const32Bit": 40,
    "const64Bit": 0,
    "numConstZeroes": 7,
    "numConstOnes": 30,
    "UncondBranches": 12,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 20,
    "NumAndInst": 2,
    "BlockMid": 6,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 22,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 78,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 35,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 25,
    "TotalInsts": 203,
    "TotalMemInst": 143,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 109
  },
  "baseline_oz_instcount": 203,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--inline",
    "--aggressive-instcombine",
    "--dce",
    "--aggressive-instcombine",
    "--die",
    "--lower-expect",
    "--mergefunc",
    "--loop-reroll",
    "--lower-constant-intrinsics",
    "--bdce",
    "--gvn",
    "--early-cse",
    "--prune-eh",
    "--sroa",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-distribute",
          "--lower-expect",
          "--loop-simplify",
          "--loop-unroll",
          "--loop-deletion",
          "--aggressive-instcombine",
          "--loop-reroll",
          "--attributor",
          "--loop-versioning",
          "--prune-eh",
          "--mergereturn",
          "--sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-distribute",
      "--lower-expect",
      "--loop-simplify",
      "--loop-unroll",
      "--loop-deletion",
      "--aggressive-instcombine",
      "--loop-reroll",
      "--attributor",
      "--loop-versioning",
      "--prune-eh",
      "--mergereturn",
      "--sink"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}