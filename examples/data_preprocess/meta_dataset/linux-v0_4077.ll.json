{
  "program_id": "linux-v0_4077.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 7,
    "oneSuccessor": 28,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 15,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 54,
    "BeginPhi": 0,
    "BranchCount": 43,
    "returnInt": 6,
    "CriticalCount": 2,
    "NumEdges": 58,
    "const32Bit": 200,
    "const64Bit": 103,
    "numConstZeroes": 142,
    "numConstOnes": 58,
    "UncondBranches": 28,
    "binaryConstArg": 20,
    "NumAShrInst": 4,
    "NumAddInst": 1,
    "NumAllocaInst": 43,
    "NumAndInst": 10,
    "BlockMid": 6,
    "BlockLow": 48,
    "NumBitCastInst": 3,
    "NumBrInst": 43,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 106,
    "NumICmpInst": 16,
    "NumLShrInst": 1,
    "NumLoadInst": 163,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 92,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 2,
    "NumZExtInst": 9,
    "TotalBlocks": 54,
    "TotalInsts": 552,
    "TotalMemInst": 438,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 230
  },
  "baseline_oz_instcount": 552,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--loop-deletion",
    "--early-cse",
    "--loop-deletion",
    "--gvn",
    "--sroa",
    "--dse",
    "--instcombine",
    "--early-cse",
    "--newgvn",
    "--aggressive-instcombine",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--adce",
    "--licm",
    "--adce",
    "--lower-expect",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-predication",
          "--called-value-propagation",
          "--dce",
          "--loop-guard-widening",
          "--lower-guard-intrinsic",
          "--alignment-from-assumptions",
          "--loop-fusion",
          "--globalsplit",
          "--loop-simplify",
          "--aggressive-instcombine",
          "--argpromotion",
          "--forceattrs",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-predication",
      "--called-value-propagation",
      "--dce",
      "--loop-guard-widening",
      "--lower-guard-intrinsic",
      "--alignment-from-assumptions",
      "--loop-fusion",
      "--globalsplit",
      "--loop-simplify",
      "--aggressive-instcombine",
      "--argpromotion",
      "--forceattrs",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}