{
  "program_id": "linux-v0_11567.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 6,
    "oneSuccessor": 23,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 0,
    "BranchCount": 34,
    "returnInt": 18,
    "CriticalCount": 2,
    "NumEdges": 45,
    "const32Bit": 189,
    "const64Bit": 13,
    "numConstZeroes": 66,
    "numConstOnes": 84,
    "UncondBranches": 23,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 75,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 56,
    "NumBitCastInst": 5,
    "NumBrInst": 34,
    "NumCallInst": 53,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 126,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 30,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 93,
    "NumSubInst": 2,
    "NumTruncInst": 7,
    "NumXorInst": 2,
    "NumZExtInst": 7,
    "TotalBlocks": 64,
    "TotalInsts": 518,
    "TotalMemInst": 390,
    "TotalFuncs": 51,
    "ArgsPhi": 0,
    "testUnary": 233
  },
  "baseline_oz_instcount": 518,
  "knowledge_base_entry": [
    "--sroa",
    "--aggressive-instcombine",
    "--loweratomic",
    "--aggressive-instcombine",
    "--flattencfg",
    "--elim-avail-extern",
    "--mldst-motion",
    "--sroa",
    "--licm",
    "--mem2reg",
    "--loop-simplifycfg",
    "--slsr",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--simplifycfg",
    "-loop-reduce",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--gvn-hoist",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--tailcallelim",
          "--gvn-hoist",
          "--mem2reg",
          "--loop-simplify",
          "--functionattrs",
          "--aggressive-instcombine",
          "--indvars",
          "--strip-dead-prototypes",
          "--globalopt",
          "--scalarizer",
          "--guard-widening",
          "--sroa",
          "--coro-split",
          "--prune-eh",
          "--lower-matrix-intrinsics",
          "--inject-tli-mappings",
          "--rewrite-statepoints-for-gc",
          "--globaldce",
          "--cross-dso-cfi",
          "--loop-reroll",
          "--irce",
          "--early-cse",
          "--coro-elide",
          "--rpo-functionattrs",
          "--loop-fusion",
          "--jump-threading",
          "--name-anon-globals",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--tailcallelim",
      "--gvn-hoist",
      "--mem2reg",
      "--loop-simplify",
      "--functionattrs",
      "--aggressive-instcombine",
      "--indvars",
      "--strip-dead-prototypes",
      "--globalopt",
      "--scalarizer",
      "--guard-widening",
      "--sroa",
      "--coro-split",
      "--prune-eh",
      "--lower-matrix-intrinsics",
      "--inject-tli-mappings",
      "--rewrite-statepoints-for-gc",
      "--globaldce",
      "--cross-dso-cfi",
      "--loop-reroll",
      "--irce",
      "--early-cse",
      "--coro-elide",
      "--rpo-functionattrs",
      "--loop-fusion",
      "--jump-threading",
      "--name-anon-globals",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}