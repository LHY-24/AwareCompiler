{
  "program_id": "github-v0_5894.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 4,
    "oneSuccessor": 6,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 2,
    "CriticalCount": 4,
    "NumEdges": 18,
    "const32Bit": 24,
    "const64Bit": 1,
    "numConstZeroes": 13,
    "numConstOnes": 6,
    "UncondBranches": 6,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 15,
    "NumBitCastInst": 1,
    "NumBrInst": 12,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 18,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 7,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 15,
    "TotalInsts": 74,
    "TotalMemInst": 40,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 33
  },
  "baseline_oz_instcount": 74,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--bdce",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--gvn",
    "--sroa",
    "--die",
    "--loop-simplifycfg",
    "--dce",
    "--ipsccp",
    "--bdce",
    "--early-cse-memssa",
    "--licm",
    "--early-cse",
    "--loop-deletion",
    "--jump-threading",
    "--adce",
    "--lower-expect",
    "--ipsccp",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lcssa",
          "--mldst-motion",
          "--aggressive-instcombine",
          "--strip",
          "--forceattrs",
          "--mem2reg",
          "--libcalls-shrinkwrap",
          "--barrier",
          "--hotcoldsplit",
          "--simple-loop-unswitch",
          "--loop-interchange",
          "--separate-const-offset-from-gep",
          "--loop-data-prefetch",
          "--inline",
          "--die",
          "--early-cse-memssa",
          "--loop-unswitch",
          "--callsite-splitting",
          "--coro-split",
          "--dce",
          "--loop-versioning",
          "--newgvn",
          "--correlated-propagation",
          "--coro-early",
          "--rpo-functionattrs",
          "--early-cse",
          "--prune-eh",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lcssa",
      "--mldst-motion",
      "--aggressive-instcombine",
      "--strip",
      "--forceattrs",
      "--mem2reg",
      "--libcalls-shrinkwrap",
      "--barrier",
      "--hotcoldsplit",
      "--simple-loop-unswitch",
      "--loop-interchange",
      "--separate-const-offset-from-gep",
      "--loop-data-prefetch",
      "--inline",
      "--die",
      "--early-cse-memssa",
      "--loop-unswitch",
      "--callsite-splitting",
      "--coro-split",
      "--dce",
      "--loop-versioning",
      "--newgvn",
      "--correlated-propagation",
      "--coro-early",
      "--rpo-functionattrs",
      "--early-cse",
      "--prune-eh",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+5.4%"
  }
}