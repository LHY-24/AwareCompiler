{
  "program_id": "github-v0_1674.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 10,
    "const32Bit": 21,
    "const64Bit": 12,
    "numConstZeroes": 3,
    "numConstOnes": 18,
    "UncondBranches": 8,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 17,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 7,
    "NumBitCastInst": 8,
    "NumBrInst": 9,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 11,
    "TotalInsts": 116,
    "TotalMemInst": 91,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 65
  },
  "baseline_oz_instcount": 114,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--early-cse",
    "--gvn",
    "--instsimplify",
    "--bdce",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--instsimplify",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--lower-expect",
    "--adce",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--lower-expect",
    "--ipsccp",
    "--globaldce",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalopt",
          "--ee-instrument",
          "--die",
          "--gvn-hoist",
          "--early-cse",
          "--break-crit-edges",
          "--loop-load-elim",
          "--correlated-propagation",
          "--lower-expect",
          "--lower-guard-intrinsic",
          "--loop-interchange",
          "--aggressive-instcombine",
          "--alignment-from-assumptions",
          "--sroa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalopt",
      "--ee-instrument",
      "--die",
      "--gvn-hoist",
      "--early-cse",
      "--break-crit-edges",
      "--loop-load-elim",
      "--correlated-propagation",
      "--lower-expect",
      "--lower-guard-intrinsic",
      "--loop-interchange",
      "--aggressive-instcombine",
      "--alignment-from-assumptions",
      "--sroa"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}