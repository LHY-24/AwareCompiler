{
  "program_id": "github-v0_24491.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 77,
    "onePredOneSuc": 52,
    "onePredTwoSuc": 25,
    "oneSuccessor": 73,
    "twoPred": 41,
    "twoPredOneSuc": 19,
    "twoEach": 9,
    "twoSuccessor": 49,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 141,
    "BeginPhi": 0,
    "BranchCount": 122,
    "returnInt": 22,
    "CriticalCount": 23,
    "NumEdges": 171,
    "const32Bit": 224,
    "const64Bit": 20,
    "numConstZeroes": 132,
    "numConstOnes": 113,
    "UncondBranches": 73,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 92,
    "NumAndInst": 0,
    "BlockMid": 13,
    "BlockLow": 128,
    "NumBitCastInst": 32,
    "NumBrInst": 122,
    "NumCallInst": 58,
    "NumGetElementPtrInst": 65,
    "NumICmpInst": 51,
    "NumLShrInst": 0,
    "NumLoadInst": 236,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 11,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 147,
    "NumSubInst": 8,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 141,
    "TotalInsts": 856,
    "TotalMemInst": 598,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 380
  },
  "baseline_oz_instcount": 857,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--early-cse",
    "--correlated-propagation",
    "--lower-expect",
    "--newgvn",
    "--memcpyopt",
    "--sroa",
    "--elim-avail-extern",
    "--flattencfg",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--lower-expect",
          "--mergeicmps",
          "--lower-matrix-intrinsics",
          "--strip-debug-declare",
          "--partial-inliner",
          "--callsite-splitting",
          "--insert-gcov-profiling",
          "--inferattrs",
          "--functionattrs",
          "--lower-guard-intrinsic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--lower-expect",
      "--mergeicmps",
      "--lower-matrix-intrinsics",
      "--strip-debug-declare",
      "--partial-inliner",
      "--callsite-splitting",
      "--insert-gcov-profiling",
      "--inferattrs",
      "--functionattrs",
      "--lower-guard-intrinsic"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}