{
  "program_id": "poj104-v1_28_1928.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 7,
    "CriticalCount": 0,
    "NumEdges": 4,
    "const32Bit": 6,
    "const64Bit": 12,
    "numConstZeroes": 10,
    "numConstOnes": 4,
    "UncondBranches": 2,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 3,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 5,
    "NumBitCastInst": 4,
    "NumBrInst": 3,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 2,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 3,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 6,
    "TotalInsts": 38,
    "TotalMemInst": 25,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 11
  },
  "baseline_oz_instcount": 21,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--inline",
    "--loop-simplifycfg",
    "--slsr",
    "--instcombine",
    "--early-cse",
    "--sroa",
    "--elim-avail-extern",
    "--early-cse",
    "--indvars",
    "--slsr",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--early-cse",
    "--nary-reassociate",
    "--dse",
    "--ipsccp",
    "--loweratomic",
    "--globalopt",
    "--mem2reg",
    "--lower-expect",
    "--instcombine",
    "--mem2reg",
    "--globalopt",
    "--jump-threading",
    "--simplifycfg",
    "--licm",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--slp-vectorizer",
          "--strip-debug-declare",
          "--gvn",
          "--instsimplify",
          "--jump-threading",
          "--rpo-functionattrs",
          "--loop-simplify",
          "--instcombine",
          "--loop-instsimplify",
          "--strip-dead-prototypes",
          "--speculative-execution",
          "--dse",
          "--inject-tli-mappings",
          "--callsite-splitting",
          "--early-cse-memssa",
          "--lower-expect",
          "--loop-reroll",
          "--memcpyopt",
          "--partially-inline-libcalls",
          "--strip-nondebug",
          "--lowerswitch",
          "--forceattrs",
          "--loop-sink",
          "--post-inline-ee-instrument",
          "--lowerinvoke",
          "--loop-unswitch",
          "--name-anon-globals",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--slp-vectorizer",
      "--strip-debug-declare",
      "--gvn",
      "--instsimplify",
      "--jump-threading",
      "--rpo-functionattrs",
      "--loop-simplify",
      "--instcombine",
      "--loop-instsimplify",
      "--strip-dead-prototypes",
      "--speculative-execution",
      "--dse",
      "--inject-tli-mappings",
      "--callsite-splitting",
      "--early-cse-memssa",
      "--lower-expect",
      "--loop-reroll",
      "--memcpyopt",
      "--partially-inline-libcalls",
      "--strip-nondebug",
      "--lowerswitch",
      "--forceattrs",
      "--loop-sink",
      "--post-inline-ee-instrument",
      "--lowerinvoke",
      "--loop-unswitch",
      "--name-anon-globals",
      "--constmerge"
    ],
    "performance_vs_Oz": "+4.8%"
  }
}