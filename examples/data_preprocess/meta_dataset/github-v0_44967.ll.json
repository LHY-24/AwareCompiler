{
  "program_id": "github-v0_44967.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 5,
    "oneSuccessor": 28,
    "twoPred": 18,
    "twoPredOneSuc": 4,
    "twoEach": 11,
    "twoSuccessor": 20,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 62,
    "BeginPhi": 0,
    "BranchCount": 48,
    "returnInt": 2,
    "CriticalCount": 17,
    "NumEdges": 71,
    "const32Bit": 280,
    "const64Bit": 28,
    "numConstZeroes": 138,
    "numConstOnes": 80,
    "UncondBranches": 28,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 56,
    "NumAndInst": 1,
    "BlockMid": 10,
    "BlockLow": 52,
    "NumBitCastInst": 19,
    "NumBrInst": 48,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 116,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 253,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 104,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 62,
    "TotalInsts": 698,
    "TotalMemInst": 570,
    "TotalFuncs": 34,
    "ArgsPhi": 0,
    "testUnary": 339
  },
  "baseline_oz_instcount": 698,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "-loop-reduce",
    "--slsr",
    "--loop-simplifycfg",
    "--newgvn",
    "--reassociate",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--die",
    "--inline",
    "--flattencfg",
    "--load-store-vectorizer",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-split",
          "--called-value-propagation",
          "--consthoist",
          "--loop-unroll-and-jam",
          "--coro-cleanup",
          "--lower-guard-intrinsic",
          "--mergefunc",
          "--globaldce",
          "--slsr",
          "--infer-address-spaces",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-split",
      "--called-value-propagation",
      "--consthoist",
      "--loop-unroll-and-jam",
      "--coro-cleanup",
      "--lower-guard-intrinsic",
      "--mergefunc",
      "--globaldce",
      "--slsr",
      "--infer-address-spaces",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}