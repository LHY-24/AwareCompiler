{
  "program_id": "linux-v0_4297.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 5,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 21,
    "const64Bit": 15,
    "numConstZeroes": 0,
    "numConstOnes": 18,
    "UncondBranches": 0,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 18,
    "NumAndInst": 7,
    "BlockMid": 4,
    "BlockLow": 1,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 7,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 26,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 5,
    "TotalInsts": 138,
    "TotalMemInst": 80,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 70
  },
  "baseline_oz_instcount": 138,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--gvn",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--inline",
    "--gvn-hoist",
    "--instsimplify",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--guard-widening",
          "--loop-guard-widening",
          "--memcpyopt",
          "--infer-address-spaces",
          "--loop-unswitch",
          "--loop-reroll",
          "--correlated-propagation",
          "--lcssa",
          "--loop-interchange",
          "--loop-load-elim",
          "--post-inline-ee-instrument",
          "--loop-sink",
          "--name-anon-globals",
          "--sink",
          "--rpo-functionattrs",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--guard-widening",
      "--loop-guard-widening",
      "--memcpyopt",
      "--infer-address-spaces",
      "--loop-unswitch",
      "--loop-reroll",
      "--correlated-propagation",
      "--lcssa",
      "--loop-interchange",
      "--loop-load-elim",
      "--post-inline-ee-instrument",
      "--loop-sink",
      "--name-anon-globals",
      "--sink",
      "--rpo-functionattrs",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}