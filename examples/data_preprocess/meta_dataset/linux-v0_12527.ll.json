{
  "program_id": "linux-v0_12527.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 16,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 4,
    "oneSuccessor": 16,
    "twoPred": 12,
    "twoPredOneSuc": 4,
    "twoEach": 0,
    "twoSuccessor": 12,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 12,
    "CriticalCount": 8,
    "NumEdges": 40,
    "const32Bit": 308,
    "const64Bit": 13,
    "numConstZeroes": 150,
    "numConstOnes": 119,
    "UncondBranches": 16,
    "binaryConstArg": 32,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 83,
    "NumAndInst": 3,
    "BlockMid": 15,
    "BlockLow": 38,
    "NumBitCastInst": 11,
    "NumBrInst": 28,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 100,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 189,
    "NumMulInst": 0,
    "NumOrInst": 10,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 8,
    "NumSelectInst": 1,
    "NumShlInst": 3,
    "NumStoreInst": 111,
    "NumSubInst": 3,
    "NumTruncInst": 15,
    "NumXorInst": 15,
    "NumZExtInst": 30,
    "TotalBlocks": 53,
    "TotalInsts": 718,
    "TotalMemInst": 545,
    "TotalFuncs": 33,
    "ArgsPhi": 0,
    "testUnary": 338
  },
  "baseline_oz_instcount": 718,
  "knowledge_base_entry": [
    "--instsimplify",
    "--mergefunc",
    "--die",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--instsimplify",
    "--dce",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--flattencfg",
    "--gvn",
    "--mergefunc",
    "--jump-threading",
    "--dce",
    "--sroa",
    "--loop-reroll",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--load-store-vectorizer",
          "--lower-matrix-intrinsics",
          "--instcombine",
          "--loop-simplify",
          "--lowerinvoke",
          "--lowerswitch",
          "--dce",
          "--instnamer",
          "--lower-widenable-condition",
          "--dse",
          "--mergefunc",
          "--mem2reg",
          "--early-cse-memssa",
          "--add-discriminators",
          "--inferattrs",
          "--barrier",
          "--lower-constant-intrinsics",
          "--deadargelim",
          "--loop-reroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--load-store-vectorizer",
      "--lower-matrix-intrinsics",
      "--instcombine",
      "--loop-simplify",
      "--lowerinvoke",
      "--lowerswitch",
      "--dce",
      "--instnamer",
      "--lower-widenable-condition",
      "--dse",
      "--mergefunc",
      "--mem2reg",
      "--early-cse-memssa",
      "--add-discriminators",
      "--inferattrs",
      "--barrier",
      "--lower-constant-intrinsics",
      "--deadargelim",
      "--loop-reroll"
    ],
    "performance_vs_Oz": "+8.6%"
  }
}