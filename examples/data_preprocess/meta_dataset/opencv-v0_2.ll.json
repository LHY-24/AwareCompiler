{
  "program_id": "opencv-v0_2.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 23,
    "onePred": 89,
    "onePredOneSuc": 46,
    "onePredTwoSuc": 38,
    "oneSuccessor": 55,
    "twoPred": 36,
    "twoPredOneSuc": 6,
    "twoEach": 18,
    "twoSuccessor": 69,
    "morePreds": 10,
    "BB03Phi": 25,
    "BBHiPhi": 0,
    "BBNoPhi": 127,
    "BeginPhi": 25,
    "BranchCount": 108,
    "returnInt": 1,
    "CriticalCount": 49,
    "NumEdges": 193,
    "const32Bit": 264,
    "const64Bit": 193,
    "numConstZeroes": 331,
    "numConstOnes": 78,
    "UncondBranches": 55,
    "binaryConstArg": 59,
    "NumAShrInst": 0,
    "NumAddInst": 19,
    "NumAllocaInst": 3,
    "NumAndInst": 31,
    "BlockMid": 5,
    "BlockLow": 147,
    "NumBitCastInst": 76,
    "NumBrInst": 108,
    "NumCallInst": 61,
    "NumGetElementPtrInst": 144,
    "NumICmpInst": 57,
    "NumLShrInst": 3,
    "NumLoadInst": 74,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 31,
    "NumRetInst": 17,
    "NumSExtInst": 0,
    "NumSelectInst": 3,
    "NumShlInst": 3,
    "NumStoreInst": 52,
    "NumSubInst": 6,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 152,
    "TotalInsts": 758,
    "TotalMemInst": 350,
    "TotalFuncs": 32,
    "ArgsPhi": 77,
    "testUnary": 178
  },
  "baseline_oz_instcount": 729,
  "knowledge_base_entry": [
    "--loop-predication",
    "--jump-threading",
    "--loop-reroll",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--die",
    "--licm",
    "--instcombine",
    "--memcpyopt",
    "--gvn",
    "--instcombine",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--simplifycfg",
    "--gvn-hoist",
    "--instcombine",
    "--jump-threading",
    "--sroa",
    "--correlated-propagation",
    "--bdce",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--sroa",
          "--slp-vectorizer",
          "--loop-load-elim",
          "--instcombine",
          "--sancov",
          "--loop-interchange",
          "--loop-guard-widening",
          "--prune-eh",
          "--rewrite-statepoints-for-gc",
          "--memcpyopt",
          "--lower-expect",
          "--slsr",
          "--aggressive-instcombine",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--sroa",
      "--slp-vectorizer",
      "--loop-load-elim",
      "--instcombine",
      "--sancov",
      "--loop-interchange",
      "--loop-guard-widening",
      "--prune-eh",
      "--rewrite-statepoints-for-gc",
      "--memcpyopt",
      "--lower-expect",
      "--slsr",
      "--aggressive-instcombine",
      "--dce"
    ],
    "performance_vs_Oz": "+8.8%"
  }
}