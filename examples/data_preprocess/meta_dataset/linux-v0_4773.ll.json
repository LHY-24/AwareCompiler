{
  "program_id": "linux-v0_4773.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 70,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 30,
    "oneSuccessor": 64,
    "twoPred": 39,
    "twoPredOneSuc": 20,
    "twoEach": 16,
    "twoSuccessor": 49,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 116,
    "BeginPhi": 1,
    "BranchCount": 113,
    "returnInt": 14,
    "CriticalCount": 39,
    "NumEdges": 166,
    "const32Bit": 291,
    "const64Bit": 57,
    "numConstZeroes": 178,
    "numConstOnes": 46,
    "UncondBranches": 64,
    "binaryConstArg": 39,
    "NumAShrInst": 7,
    "NumAddInst": 13,
    "NumAllocaInst": 25,
    "NumAndInst": 7,
    "BlockMid": 10,
    "BlockLow": 107,
    "NumBitCastInst": 1,
    "NumBrInst": 113,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 118,
    "NumICmpInst": 50,
    "NumLShrInst": 2,
    "NumLoadInst": 194,
    "NumMulInst": 9,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 26,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 83,
    "NumSubInst": 5,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 9,
    "TotalBlocks": 117,
    "TotalInsts": 704,
    "TotalMemInst": 434,
    "TotalFuncs": 5,
    "ArgsPhi": 2,
    "testUnary": 259
  },
  "baseline_oz_instcount": 705,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--instsimplify",
    "--early-cse",
    "--mldst-motion",
    "--sroa",
    "--load-store-vectorizer",
    "--inline",
    "--mem2reg",
    "--slp-vectorizer",
    "--reassociate",
    "--dse",
    "--correlated-propagation",
    "--instcombine",
    "--sccp",
    "--early-cse-memssa",
    "--ipsccp",
    "--instsimplify",
    "--early-cse",
    "--die",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globaldce",
          "--add-discriminators",
          "--gvn-hoist",
          "--loweratomic",
          "--functionattrs",
          "--inferattrs",
          "--lower-matrix-intrinsics",
          "--lowerinvoke",
          "--ipsccp",
          "--libcalls-shrinkwrap",
          "--partially-inline-libcalls",
          "--load-store-vectorizer",
          "--sroa",
          "--loop-data-prefetch",
          "--reassociate",
          "--rpo-functionattrs",
          "--insert-gcov-profiling",
          "--ipconstprop",
          "--coro-cleanup",
          "--mldst-motion",
          "--inject-tli-mappings",
          "--instnamer",
          "--strip",
          "--flattencfg",
          "--mergeicmps"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globaldce",
      "--add-discriminators",
      "--gvn-hoist",
      "--loweratomic",
      "--functionattrs",
      "--inferattrs",
      "--lower-matrix-intrinsics",
      "--lowerinvoke",
      "--ipsccp",
      "--libcalls-shrinkwrap",
      "--partially-inline-libcalls",
      "--load-store-vectorizer",
      "--sroa",
      "--loop-data-prefetch",
      "--reassociate",
      "--rpo-functionattrs",
      "--insert-gcov-profiling",
      "--ipconstprop",
      "--coro-cleanup",
      "--mldst-motion",
      "--inject-tli-mappings",
      "--instnamer",
      "--strip",
      "--flattencfg",
      "--mergeicmps"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}