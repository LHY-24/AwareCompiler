{
  "program_id": "linux-v0_5716.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 39,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 10,
    "oneSuccessor": 35,
    "twoPred": 18,
    "twoPredOneSuc": 6,
    "twoEach": 11,
    "twoSuccessor": 23,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 3,
    "BranchCount": 58,
    "returnInt": 21,
    "CriticalCount": 9,
    "NumEdges": 81,
    "const32Bit": 245,
    "const64Bit": 37,
    "numConstZeroes": 102,
    "numConstOnes": 98,
    "UncondBranches": 35,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 71,
    "NumAndInst": 6,
    "BlockMid": 11,
    "BlockLow": 68,
    "NumBitCastInst": 6,
    "NumBrInst": 58,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 78,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 172,
    "NumMulInst": 3,
    "NumOrInst": 12,
    "NumPHIInst": 3,
    "NumRetInst": 21,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 101,
    "NumSubInst": 1,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 13,
    "TotalBlocks": 79,
    "TotalInsts": 639,
    "TotalMemInst": 474,
    "TotalFuncs": 32,
    "ArgsPhi": 6,
    "testUnary": 277
  },
  "baseline_oz_instcount": 526,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--gvn",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--inline",
    "--instcombine",
    "--ipsccp",
    "--mem2reg",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--dse",
    "--ipsccp",
    "--dce",
    "--correlated-propagation",
    "--reassociate",
    "--instsimplify",
    "--load-store-vectorizer",
    "--mem2reg",
    "--flattencfg",
    "--jump-threading",
    "--aggressive-instcombine",
    "--ipsccp",
    "--correlated-propagation",
    "--simplifycfg",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--loop-predication",
          "--div-rem-pairs",
          "--alignment-from-assumptions",
          "--ee-instrument",
          "--rewrite-statepoints-for-gc",
          "--redundant-dbg-inst-elim",
          "--prune-eh",
          "--slsr",
          "--aggressive-instcombine",
          "--lower-matrix-intrinsics",
          "--sccp",
          "--coro-split",
          "--partial-inliner",
          "--slp-vectorizer",
          "--float2int",
          "--simplifycfg",
          "--ipsccp",
          "--flattencfg",
          "--loop-interchange",
          "--gvn",
          "--lowerinvoke",
          "--loop-instsimplify",
          "--bdce",
          "--strip-nondebug",
          "--loop-unroll-and-jam",
          "--simple-loop-unswitch",
          "--lower-widenable-condition"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--loop-predication",
      "--div-rem-pairs",
      "--alignment-from-assumptions",
      "--ee-instrument",
      "--rewrite-statepoints-for-gc",
      "--redundant-dbg-inst-elim",
      "--prune-eh",
      "--slsr",
      "--aggressive-instcombine",
      "--lower-matrix-intrinsics",
      "--sccp",
      "--coro-split",
      "--partial-inliner",
      "--slp-vectorizer",
      "--float2int",
      "--simplifycfg",
      "--ipsccp",
      "--flattencfg",
      "--loop-interchange",
      "--gvn",
      "--lowerinvoke",
      "--loop-instsimplify",
      "--bdce",
      "--strip-nondebug",
      "--loop-unroll-and-jam",
      "--simple-loop-unswitch",
      "--lower-widenable-condition"
    ],
    "performance_vs_Oz": "+3.4%"
  }
}