{
  "program_id": "linux-v0_1246.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 41,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 14,
    "oneSuccessor": 34,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 20,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 78,
    "BeginPhi": 1,
    "BranchCount": 54,
    "returnInt": 17,
    "CriticalCount": 7,
    "NumEdges": 77,
    "const32Bit": 210,
    "const64Bit": 12,
    "numConstZeroes": 93,
    "numConstOnes": 94,
    "UncondBranches": 34,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 75,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 73,
    "NumBitCastInst": 8,
    "NumBrInst": 54,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 57,
    "NumICmpInst": 18,
    "NumLShrInst": 1,
    "NumLoadInst": 157,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 24,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 104,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 2,
    "NumZExtInst": 8,
    "TotalBlocks": 79,
    "TotalInsts": 579,
    "TotalMemInst": 432,
    "TotalFuncs": 33,
    "ArgsPhi": 2,
    "testUnary": 267
  },
  "baseline_oz_instcount": 576,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--bdce",
    "--elim-avail-extern",
    "--mergefunc",
    "--aggressive-instcombine",
    "--reassociate",
    "--slsr",
    "--gvn",
    "--adce",
    "--sccp",
    "--licm",
    "--elim-avail-extern",
    "--ipsccp",
    "--newgvn",
    "--loop-fusion",
    "--gvn",
    "--loop-instsimplify",
    "--lower-constant-intrinsics",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--loop-unswitch",
          "--correlated-propagation",
          "--loop-rotate",
          "--gvn-hoist",
          "--canonicalize-aliases",
          "--mergefunc",
          "--adce",
          "--loop-deletion",
          "--constprop",
          "--separate-const-offset-from-gep",
          "--dce",
          "--prune-eh",
          "--globaldce",
          "--coro-cleanup",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--loop-unswitch",
      "--correlated-propagation",
      "--loop-rotate",
      "--gvn-hoist",
      "--canonicalize-aliases",
      "--mergefunc",
      "--adce",
      "--loop-deletion",
      "--constprop",
      "--separate-const-offset-from-gep",
      "--dce",
      "--prune-eh",
      "--globaldce",
      "--coro-cleanup",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}