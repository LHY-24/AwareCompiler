{
  "program_id": "poj104-v1_27_1044.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 2,
    "oneSuccessor": 18,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 57,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 17,
    "CriticalCount": 3,
    "NumEdges": 38,
    "const32Bit": 121,
    "const64Bit": 18,
    "numConstZeroes": 40,
    "numConstOnes": 69,
    "UncondBranches": 18,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 70,
    "NumAndInst": 1,
    "BlockMid": 13,
    "BlockLow": 44,
    "NumBitCastInst": 30,
    "NumBrInst": 28,
    "NumCallInst": 94,
    "NumGetElementPtrInst": 73,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 173,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 28,
    "NumSExtInst": 43,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 85,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 8,
    "TotalBlocks": 57,
    "TotalInsts": 672,
    "TotalMemInst": 495,
    "TotalFuncs": 47,
    "ArgsPhi": 0,
    "testUnary": 330
  },
  "baseline_oz_instcount": 200,
  "knowledge_base_entry": [
    "--sink",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--jump-threading",
    "--globalopt",
    "--mergefunc",
    "--sroa",
    "--globalopt",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--lower-expect",
    "--adce",
    "--gvn",
    "--mldst-motion",
    "--jump-threading",
    "--flattencfg",
    "--loop-simplifycfg",
    "--prune-eh",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--lower-expect",
    "--early-cse",
    "--slp-vectorizer",
    "--lower-expect",
    "--die",
    "--slp-vectorizer",
    "--slsr",
    "--gvn",
    "--prune-eh",
    "--sroa",
    "--ipsccp",
    "--inline",
    "--prune-eh",
    "--licm",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--slsr",
    "--gvn-hoist",
    "--loop-rotate",
    "--instcombine",
    "--loop-rotate",
    "--licm",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--slsr",
    "--gvn-hoist",
    "--loop-rotate",
    "--gvn-hoist",
    "--gvn",
    "--reassociate",
    "--licm",
    "--licm",
    "--sroa",
    "--ipsccp",
    "--inline",
    "--prune-eh",
    "--licm",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--die",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--jump-threading",
    "--globalopt",
    "--mem2reg",
    "--early-cse",
    "--flattencfg",
    "--elim-avail-extern",
    "--instsimplify",
    "--early-cse-memssa",
    "--dse",
    "--instsimplify",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--die",
    "--elim-avail-extern",
    "--loop-simplifycfg",
    "--jump-threading",
    "--globalopt",
    "--mem2reg",
    "--early-cse",
    "--flattencfg",
    "--loop-simplifycfg",
    "--prune-eh",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--lower-expect",
    "--early-cse",
    "--slp-vectorizer",
    "--bdce",
    "--mergefunc",
    "--correlated-propagation",
    "--nary-reassociate",
    "--sroa",
    "--indvars",
    "--gvn",
    "--early-cse",
    "--newgvn",
    "--inline",
    "--instcombine",
    "--simplifycfg",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--die",
          "--pgo-memop-opt",
          "--indvars",
          "--loop-unroll-and-jam",
          "--instsimplify",
          "--functionattrs",
          "--reg2mem",
          "--simplifycfg",
          "--loop-unswitch",
          "--rpo-functionattrs",
          "--speculative-execution",
          "--redundant-dbg-inst-elim",
          "--guard-widening",
          "--correlated-propagation",
          "--instcombine",
          "--loop-data-prefetch",
          "--lcssa",
          "--loop-idiom",
          "--hotcoldsplit",
          "--dse",
          "--slsr",
          "--mem2reg",
          "--globaldce",
          "--called-value-propagation",
          "--loop-versioning-licm",
          "--irce",
          "--instnamer",
          "--loop-load-elim",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--die",
      "--pgo-memop-opt",
      "--indvars",
      "--loop-unroll-and-jam",
      "--instsimplify",
      "--functionattrs",
      "--reg2mem",
      "--simplifycfg",
      "--loop-unswitch",
      "--rpo-functionattrs",
      "--speculative-execution",
      "--redundant-dbg-inst-elim",
      "--guard-widening",
      "--correlated-propagation",
      "--instcombine",
      "--loop-data-prefetch",
      "--lcssa",
      "--loop-idiom",
      "--hotcoldsplit",
      "--dse",
      "--slsr",
      "--mem2reg",
      "--globaldce",
      "--called-value-propagation",
      "--loop-versioning-licm",
      "--irce",
      "--instnamer",
      "--loop-load-elim",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+3.5%"
  }
}