{
  "program_id": "github-v0_26747.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 5,
    "oneSuccessor": 22,
    "twoPred": 9,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 35,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 2,
    "CriticalCount": 3,
    "NumEdges": 44,
    "const32Bit": 61,
    "const64Bit": 20,
    "numConstZeroes": 47,
    "numConstOnes": 32,
    "UncondBranches": 22,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 30,
    "NumBitCastInst": 6,
    "NumBrInst": 33,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 30,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 69,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 35,
    "TotalInsts": 221,
    "TotalMemInst": 156,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 96
  },
  "baseline_oz_instcount": 222,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--newgvn",
    "--simplifycfg",
    "--early-cse-memssa",
    "--memcpyopt",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--always-inline",
          "--pgo-memop-opt",
          "--lower-expect",
          "--simplifycfg",
          "--functionattrs",
          "--argpromotion",
          "--globalopt",
          "--constmerge",
          "--attributor",
          "--gvn-hoist",
          "--coro-early",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--always-inline",
      "--pgo-memop-opt",
      "--lower-expect",
      "--simplifycfg",
      "--functionattrs",
      "--argpromotion",
      "--globalopt",
      "--constmerge",
      "--attributor",
      "--gvn-hoist",
      "--coro-early",
      "--strip"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}