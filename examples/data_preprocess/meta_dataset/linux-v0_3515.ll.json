{
  "program_id": "linux-v0_3515.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 52,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 18,
    "oneSuccessor": 37,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 27,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 83,
    "BeginPhi": 1,
    "BranchCount": 64,
    "returnInt": 22,
    "CriticalCount": 4,
    "NumEdges": 91,
    "const32Bit": 275,
    "const64Bit": 4,
    "numConstZeroes": 114,
    "numConstOnes": 93,
    "UncondBranches": 37,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 80,
    "NumAndInst": 6,
    "BlockMid": 14,
    "BlockLow": 70,
    "NumBitCastInst": 11,
    "NumBrInst": 64,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 84,
    "NumICmpInst": 28,
    "NumLShrInst": 1,
    "NumLoadInst": 241,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 141,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 8,
    "TotalBlocks": 84,
    "TotalInsts": 756,
    "TotalMemInst": 594,
    "TotalFuncs": 44,
    "ArgsPhi": 2,
    "testUnary": 352
  },
  "baseline_oz_instcount": 756,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--correlated-propagation",
    "--early-cse",
    "--mem2reg",
    "--adce",
    "--reassociate",
    "--loop-instsimplify",
    "--sccp",
    "--dse",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--ipsccp",
    "--flattencfg",
    "--globalopt",
    "--instcombine",
    "--sroa",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--slp-vectorizer",
          "--inject-tli-mappings",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--float2int",
          "-loop-reduce",
          "--ee-instrument",
          "--always-inline",
          "--mergeicmps",
          "--hotcoldsplit",
          "--globaldce",
          "--globalsplit",
          "--ipconstprop",
          "--lower-expect",
          "--loop-unroll-and-jam",
          "--lowerinvoke",
          "--inline",
          "--loop-unswitch",
          "--constprop",
          "--tailcallelim",
          "--forceattrs",
          "--name-anon-globals",
          "--loop-vectorize"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--slp-vectorizer",
      "--inject-tli-mappings",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--float2int",
      "-loop-reduce",
      "--ee-instrument",
      "--always-inline",
      "--mergeicmps",
      "--hotcoldsplit",
      "--globaldce",
      "--globalsplit",
      "--ipconstprop",
      "--lower-expect",
      "--loop-unroll-and-jam",
      "--lowerinvoke",
      "--inline",
      "--loop-unswitch",
      "--constprop",
      "--tailcallelim",
      "--forceattrs",
      "--name-anon-globals",
      "--loop-vectorize"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}