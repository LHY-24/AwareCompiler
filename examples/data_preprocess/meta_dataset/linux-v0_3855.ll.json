{
  "program_id": "linux-v0_3855.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 0,
    "onePred": 70,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 37,
    "oneSuccessor": 50,
    "twoPred": 23,
    "twoPredOneSuc": 12,
    "twoEach": 10,
    "twoSuccessor": 51,
    "morePreds": 8,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 112,
    "BeginPhi": 1,
    "BranchCount": 100,
    "returnInt": 9,
    "CriticalCount": 33,
    "NumEdges": 152,
    "const32Bit": 168,
    "const64Bit": 4,
    "numConstZeroes": 42,
    "numConstOnes": 74,
    "UncondBranches": 50,
    "binaryConstArg": 30,
    "NumAShrInst": 1,
    "NumAddInst": 17,
    "NumAllocaInst": 57,
    "NumAndInst": 6,
    "BlockMid": 6,
    "BlockLow": 107,
    "NumBitCastInst": 15,
    "NumBrInst": 100,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 45,
    "NumLShrInst": 1,
    "NumLoadInst": 183,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 12,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 89,
    "NumSubInst": 6,
    "NumTruncInst": 12,
    "NumXorInst": 1,
    "NumZExtInst": 35,
    "TotalBlocks": 113,
    "TotalInsts": 650,
    "TotalMemInst": 378,
    "TotalFuncs": 14,
    "ArgsPhi": 6,
    "testUnary": 313
  },
  "baseline_oz_instcount": 653,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--simplifycfg",
    "--adce",
    "--lower-expect",
    "--prune-eh",
    "--newgvn",
    "--mergefunc",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse",
    "--dce",
    "--sccp",
    "--die",
    "--aggressive-instcombine",
    "--jump-threading",
    "--elim-avail-extern",
    "--bdce",
    "--load-store-vectorizer",
    "--reassociate",
    "--inline",
    "--bdce",
    "--gvn-hoist",
    "--mldst-motion",
    "--mem2reg",
    "--inline",
    "--instsimplify",
    "--jump-threading",
    "--dce",
    "--sccp",
    "--die",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--reassociate",
          "--pgo-memop-opt",
          "--inline",
          "--jump-threading",
          "--mergereturn",
          "--loop-simplify",
          "--mergeicmps",
          "--simplifycfg",
          "--called-value-propagation",
          "--loop-unroll-and-jam",
          "--globalsplit",
          "--indvars",
          "--ee-instrument",
          "--lowerinvoke",
          "--partially-inline-libcalls",
          "--aggressive-instcombine",
          "--consthoist",
          "--loop-vectorize",
          "--loop-deletion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--reassociate",
      "--pgo-memop-opt",
      "--inline",
      "--jump-threading",
      "--mergereturn",
      "--loop-simplify",
      "--mergeicmps",
      "--simplifycfg",
      "--called-value-propagation",
      "--loop-unroll-and-jam",
      "--globalsplit",
      "--indvars",
      "--ee-instrument",
      "--lowerinvoke",
      "--partially-inline-libcalls",
      "--aggressive-instcombine",
      "--consthoist",
      "--loop-vectorize",
      "--loop-deletion"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}