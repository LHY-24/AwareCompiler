{
  "program_id": "poj104-v1_103_177.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 8,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 3,
    "oneSuccessor": 6,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 1,
    "BranchCount": 12,
    "returnInt": 16,
    "CriticalCount": 4,
    "NumEdges": 18,
    "const32Bit": 20,
    "const64Bit": 20,
    "numConstZeroes": 17,
    "numConstOnes": 14,
    "UncondBranches": 6,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 14,
    "NumBitCastInst": 6,
    "NumBrInst": 12,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 4,
    "NumSExtInst": 23,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 8,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 16,
    "TotalInsts": 141,
    "TotalMemInst": 79,
    "TotalFuncs": 12,
    "ArgsPhi": 3,
    "testUnary": 63
  },
  "baseline_oz_instcount": 73,
  "knowledge_base_entry": [
    "--break-crit-edges",
    "--gvn",
    "-loop-reduce",
    "--load-store-vectorizer",
    "--simplifycfg",
    "--dse",
    "--nary-reassociate",
    "--sroa",
    "--flattencfg",
    "--jump-threading",
    "--die",
    "--loop-simplifycfg",
    "--slsr",
    "-loop-reduce",
    "--reassociate",
    "--dce",
    "--aggressive-instcombine",
    "--globalopt",
    "--loop-deletion",
    "--instcombine",
    "--dce",
    "--lower-expect",
    "--dce",
    "--gvn",
    "--loop-simplifycfg",
    "--slsr",
    "--gvn",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--bdce",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--nary-reassociate",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--lower-expect",
    "--prune-eh",
    "--early-cse",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--sccp",
    "--inline",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--sccp",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--adce",
    "--inline",
    "--flattencfg",
    "--globalopt",
    "--dse",
    "--mem2reg",
    "--slp-vectorizer",
    "--dse",
    "--die",
    "--sroa",
    "--early-cse-memssa",
    "--gvn",
    "--load-store-vectorizer",
    "--dce",
    "--aggressive-instcombine",
    "--globalopt",
    "--loop-deletion",
    "--instcombine",
    "--dce",
    "--lower-expect",
    "--dce",
    "--gvn",
    "--loop-simplifycfg",
    "--slsr",
    "--gvn",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--bdce",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--nary-reassociate",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--lower-expect",
    "--prune-eh",
    "--early-cse",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--sccp",
    "--inline",
    "--ipsccp",
    "--gvn-hoist",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn-hoist",
          "--loop-vectorize",
          "--hotcoldsplit",
          "--lcssa",
          "--loop-unswitch",
          "--speculative-execution",
          "--ipsccp",
          "--nary-reassociate",
          "--break-crit-edges",
          "--elim-avail-extern",
          "--sccp",
          "--memcpyopt",
          "--redundant-dbg-inst-elim",
          "--mldst-motion",
          "--lowerinvoke",
          "--licm",
          "--coro-early",
          "--instcombine",
          "--mergereturn",
          "--mergefunc",
          "--simplifycfg",
          "--lowerswitch",
          "--lower-matrix-intrinsics",
          "--gvn",
          "--sroa",
          "--called-value-propagation",
          "--name-anon-globals",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+12.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn-hoist",
      "--loop-vectorize",
      "--hotcoldsplit",
      "--lcssa",
      "--loop-unswitch",
      "--speculative-execution",
      "--ipsccp",
      "--nary-reassociate",
      "--break-crit-edges",
      "--elim-avail-extern",
      "--sccp",
      "--memcpyopt",
      "--redundant-dbg-inst-elim",
      "--mldst-motion",
      "--lowerinvoke",
      "--licm",
      "--coro-early",
      "--instcombine",
      "--mergereturn",
      "--mergefunc",
      "--simplifycfg",
      "--lowerswitch",
      "--lower-matrix-intrinsics",
      "--gvn",
      "--sroa",
      "--called-value-propagation",
      "--name-anon-globals",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+12.3%"
  }
}