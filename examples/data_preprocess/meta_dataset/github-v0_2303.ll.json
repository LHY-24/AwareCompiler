{
  "program_id": "github-v0_2303.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 5,
    "oneSuccessor": 25,
    "twoPred": 17,
    "twoPredOneSuc": 4,
    "twoEach": 12,
    "twoSuccessor": 17,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 43,
    "BeginPhi": 0,
    "BranchCount": 42,
    "returnInt": 19,
    "CriticalCount": 10,
    "NumEdges": 59,
    "const32Bit": 92,
    "const64Bit": 1,
    "numConstZeroes": 68,
    "numConstOnes": 24,
    "UncondBranches": 25,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 43,
    "NumBitCastInst": 4,
    "NumBrInst": 42,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 30,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 43,
    "TotalInsts": 210,
    "TotalMemInst": 144,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 62
  },
  "baseline_oz_instcount": 212,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--instcombine",
    "--bdce",
    "--sroa",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--correlated-propagation",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--barrier",
          "--inline",
          "--sccp",
          "--early-cse",
          "--functionattrs",
          "--scalarizer",
          "--lowerswitch",
          "--dse",
          "--redundant-dbg-inst-elim",
          "--forceattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--barrier",
      "--inline",
      "--sccp",
      "--early-cse",
      "--functionattrs",
      "--scalarizer",
      "--lowerswitch",
      "--dse",
      "--redundant-dbg-inst-elim",
      "--forceattrs"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}