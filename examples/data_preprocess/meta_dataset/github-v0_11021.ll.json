{
  "program_id": "github-v0_11021.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 11,
    "onePred": 33,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 6,
    "oneSuccessor": 28,
    "twoPred": 17,
    "twoPredOneSuc": 1,
    "twoEach": 9,
    "twoSuccessor": 24,
    "morePreds": 2,
    "BB03Phi": 11,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 11,
    "BranchCount": 52,
    "returnInt": 0,
    "CriticalCount": 17,
    "NumEdges": 76,
    "const32Bit": 153,
    "const64Bit": 14,
    "numConstZeroes": 85,
    "numConstOnes": 52,
    "UncondBranches": 28,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 20,
    "NumAndInst": 12,
    "BlockMid": 6,
    "BlockLow": 63,
    "NumBitCastInst": 0,
    "NumBrInst": 52,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 36,
    "NumLShrInst": 1,
    "NumLoadInst": 120,
    "NumMulInst": 0,
    "NumOrInst": 11,
    "NumPHIInst": 11,
    "NumRetInst": 17,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 65,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 3,
    "NumZExtInst": 42,
    "TotalBlocks": 69,
    "TotalInsts": 450,
    "TotalMemInst": 260,
    "TotalFuncs": 19,
    "ArgsPhi": 27,
    "testUnary": 185
  },
  "baseline_oz_instcount": 450,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--newgvn",
    "--simplifycfg",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--mem2reg",
    "--mergefunc",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--dce",
    "--dse",
    "--adce",
    "--dse",
    "--load-store-vectorizer",
    "--die",
    "--lower-expect",
    "--jump-threading",
    "--aggressive-instcombine",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--always-inline",
          "--mldst-motion",
          "--rpo-functionattrs",
          "--slsr",
          "--mergereturn",
          "--hotcoldsplit",
          "--constprop",
          "--irce",
          "--aggressive-instcombine",
          "--loop-versioning-licm",
          "--correlated-propagation",
          "--loop-unswitch",
          "--called-value-propagation",
          "--loop-versioning",
          "--loop-deletion",
          "--tailcallelim",
          "--mem2reg",
          "--inferattrs",
          "--sccp",
          "--lcssa",
          "--prune-eh",
          "--loop-simplifycfg",
          "--lower-widenable-condition"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--always-inline",
      "--mldst-motion",
      "--rpo-functionattrs",
      "--slsr",
      "--mergereturn",
      "--hotcoldsplit",
      "--constprop",
      "--irce",
      "--aggressive-instcombine",
      "--loop-versioning-licm",
      "--correlated-propagation",
      "--loop-unswitch",
      "--called-value-propagation",
      "--loop-versioning",
      "--loop-deletion",
      "--tailcallelim",
      "--mem2reg",
      "--inferattrs",
      "--sccp",
      "--lcssa",
      "--prune-eh",
      "--loop-simplifycfg",
      "--lower-widenable-condition"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}