{
  "program_id": "linux-v0_13204.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 2,
    "oneSuccessor": 7,
    "twoPred": 2,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 15,
    "CriticalCount": 1,
    "NumEdges": 11,
    "const32Bit": 111,
    "const64Bit": 53,
    "numConstZeroes": 96,
    "numConstOnes": 71,
    "UncondBranches": 7,
    "binaryConstArg": 10,
    "NumAShrInst": 2,
    "NumAddInst": 1,
    "NumAllocaInst": 52,
    "NumAndInst": 4,
    "BlockMid": 8,
    "BlockLow": 17,
    "NumBitCastInst": 13,
    "NumBrInst": 9,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 51,
    "NumICmpInst": 3,
    "NumLShrInst": 1,
    "NumLoadInst": 57,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 68,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 11,
    "TotalBlocks": 25,
    "TotalInsts": 317,
    "TotalMemInst": 247,
    "TotalFuncs": 20,
    "ArgsPhi": 0,
    "testUnary": 140
  },
  "baseline_oz_instcount": 317,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--simplifycfg",
    "--correlated-propagation",
    "--newgvn",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--simplifycfg",
    "--adce",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--dce",
    "--sroa",
    "--gvn-hoist",
    "--slsr",
    "--instcombine",
    "--aggressive-instcombine",
    "--inline",
    "--newgvn",
    "--simplifycfg",
    "--die",
    "--mem2reg",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "--loop-reroll",
          "--gvn",
          "--globaldce",
          "--mem2reg",
          "--lowerswitch",
          "--coro-split",
          "--aggressive-instcombine",
          "--loop-rotate",
          "--loop-distribute",
          "--loop-instsimplify",
          "--mldst-motion",
          "--scalarizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "--loop-reroll",
      "--gvn",
      "--globaldce",
      "--mem2reg",
      "--lowerswitch",
      "--coro-split",
      "--aggressive-instcombine",
      "--loop-rotate",
      "--loop-distribute",
      "--loop-instsimplify",
      "--mldst-motion",
      "--scalarizer"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}