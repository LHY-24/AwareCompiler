{
  "program_id": "github-v0_42306.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 1,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 12,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 74,
    "const64Bit": 33,
    "numConstZeroes": 35,
    "numConstOnes": 2,
    "UncondBranches": 0,
    "binaryConstArg": 62,
    "NumAShrInst": 0,
    "NumAddInst": 60,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 0,
    "NumBitCastInst": 64,
    "NumBrInst": 0,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 64,
    "NumICmpInst": 0,
    "NumLShrInst": 1,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 64,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 1,
    "TotalInsts": 336,
    "TotalMemInst": 141,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 164
  },
  "baseline_oz_instcount": 336,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--loop-deletion",
    "--jump-threading",
    "--ipsccp",
    "--aggressive-instcombine",
    "--mergefunc",
    "--adce",
    "--loop-instsimplify",
    "--licm",
    "--early-cse",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globaldce",
          "--sink",
          "--rpo-functionattrs",
          "--memcpyopt",
          "--rewrite-statepoints-for-gc",
          "--lower-matrix-intrinsics",
          "--dse",
          "--mergeicmps",
          "--correlated-propagation",
          "--lower-expect",
          "--loop-interchange",
          "--coro-early",
          "--loop-simplifycfg",
          "--loop-deletion",
          "--inject-tli-mappings",
          "--gvn-hoist",
          "--strip",
          "--loop-rotate",
          "--called-value-propagation",
          "--lower-guard-intrinsic",
          "--loop-sink",
          "--loop-unswitch",
          "--consthoist",
          "--load-store-vectorizer",
          "--add-discriminators",
          "--nary-reassociate",
          "-loop-reduce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+35.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globaldce",
      "--sink",
      "--rpo-functionattrs",
      "--memcpyopt",
      "--rewrite-statepoints-for-gc",
      "--lower-matrix-intrinsics",
      "--dse",
      "--mergeicmps",
      "--correlated-propagation",
      "--lower-expect",
      "--loop-interchange",
      "--coro-early",
      "--loop-simplifycfg",
      "--loop-deletion",
      "--inject-tli-mappings",
      "--gvn-hoist",
      "--strip",
      "--loop-rotate",
      "--called-value-propagation",
      "--lower-guard-intrinsic",
      "--loop-sink",
      "--loop-unswitch",
      "--consthoist",
      "--load-store-vectorizer",
      "--add-discriminators",
      "--nary-reassociate",
      "-loop-reduce"
    ],
    "performance_vs_Oz": "+35.7%"
  }
}