{
  "program_id": "linux-v0_496.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 52,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 10,
    "oneSuccessor": 49,
    "twoPred": 13,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 18,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 100,
    "BeginPhi": 0,
    "BranchCount": 67,
    "returnInt": 27,
    "CriticalCount": 4,
    "NumEdges": 95,
    "const32Bit": 392,
    "const64Bit": 15,
    "numConstZeroes": 169,
    "numConstOnes": 132,
    "UncondBranches": 49,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 100,
    "NumAndInst": 3,
    "BlockMid": 17,
    "BlockLow": 83,
    "NumBitCastInst": 35,
    "NumBrInst": 67,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 107,
    "NumICmpInst": 17,
    "NumLShrInst": 1,
    "NumLoadInst": 252,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 31,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 147,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 100,
    "TotalInsts": 840,
    "TotalMemInst": 668,
    "TotalFuncs": 53,
    "ArgsPhi": 0,
    "testUnary": 396
  },
  "baseline_oz_instcount": 839,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--ipsccp",
    "--gvn",
    "--early-cse-memssa",
    "--instcombine",
    "--lower-expect",
    "--early-cse-memssa",
    "--die",
    "--early-cse",
    "--sroa",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--loop-fusion",
          "--adce",
          "--tailcallelim",
          "--reassociate",
          "--flattencfg",
          "--loop-deletion",
          "--mergefunc",
          "--strip-debug-declare",
          "--globaldce",
          "--redundant-dbg-inst-elim",
          "--newgvn",
          "--loop-sink",
          "--loop-reroll",
          "--ipsccp",
          "--loop-unroll-and-jam",
          "--canonicalize-aliases",
          "--gvn",
          "--strip",
          "--loop-unroll",
          "--inline",
          "--mergeicmps",
          "--ee-instrument",
          "--instcombine",
          "--loop-guard-widening",
          "--sccp",
          "--early-cse",
          "--die",
          "--dce",
          "--jump-threading"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--loop-fusion",
      "--adce",
      "--tailcallelim",
      "--reassociate",
      "--flattencfg",
      "--loop-deletion",
      "--mergefunc",
      "--strip-debug-declare",
      "--globaldce",
      "--redundant-dbg-inst-elim",
      "--newgvn",
      "--loop-sink",
      "--loop-reroll",
      "--ipsccp",
      "--loop-unroll-and-jam",
      "--canonicalize-aliases",
      "--gvn",
      "--strip",
      "--loop-unroll",
      "--inline",
      "--mergeicmps",
      "--ee-instrument",
      "--instcombine",
      "--loop-guard-widening",
      "--sccp",
      "--early-cse",
      "--die",
      "--dce",
      "--jump-threading"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}