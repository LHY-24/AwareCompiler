{
  "program_id": "github-v0_39656.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 3,
    "oneSuccessor": 41,
    "twoPred": 8,
    "twoPredOneSuc": 0,
    "twoEach": 6,
    "twoSuccessor": 9,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 0,
    "BranchCount": 50,
    "returnInt": 53,
    "CriticalCount": 4,
    "NumEdges": 79,
    "const32Bit": 164,
    "const64Bit": 3,
    "numConstZeroes": 63,
    "numConstOnes": 69,
    "UncondBranches": 41,
    "binaryConstArg": 43,
    "NumAShrInst": 7,
    "NumAddInst": 11,
    "NumAllocaInst": 30,
    "NumAndInst": 4,
    "BlockMid": 17,
    "BlockLow": 42,
    "NumBitCastInst": 4,
    "NumBrInst": 50,
    "NumCallInst": 78,
    "NumGetElementPtrInst": 39,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 254,
    "NumMulInst": 8,
    "NumOrInst": 13,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 58,
    "NumSubInst": 0,
    "NumTruncInst": 27,
    "NumXorInst": 0,
    "NumZExtInst": 38,
    "TotalBlocks": 59,
    "TotalInsts": 649,
    "TotalMemInst": 459,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 359
  },
  "baseline_oz_instcount": 649,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--globalopt",
    "--jump-threading",
    "--instsimplify",
    "--simplifycfg",
    "--gvn",
    "--mem2reg",
    "--early-cse-memssa",
    "--bdce",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--inline",
    "--prune-eh",
    "--elim-avail-extern",
    "--adce",
    "--sroa",
    "--newgvn",
    "--gvn-hoist",
    "--dce",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--aggressive-instcombine",
          "--float2int",
          "--early-cse",
          "--gvn-hoist",
          "--sccp",
          "--loop-predication",
          "--insert-gcov-profiling",
          "--globalsplit",
          "--instsimplify",
          "--alignment-from-assumptions",
          "--lower-widenable-condition",
          "--callsite-splitting",
          "--consthoist",
          "--libcalls-shrinkwrap",
          "-loop-reduce",
          "--adce",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--aggressive-instcombine",
      "--float2int",
      "--early-cse",
      "--gvn-hoist",
      "--sccp",
      "--loop-predication",
      "--insert-gcov-profiling",
      "--globalsplit",
      "--instsimplify",
      "--alignment-from-assumptions",
      "--lower-widenable-condition",
      "--callsite-splitting",
      "--consthoist",
      "--libcalls-shrinkwrap",
      "-loop-reduce",
      "--adce",
      "--die"
    ],
    "performance_vs_Oz": "+5.4%"
  }
}