{
  "program_id": "linux-v0_8750.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 101,
    "onePredOneSuc": 79,
    "onePredTwoSuc": 21,
    "oneSuccessor": 92,
    "twoPred": 15,
    "twoPredOneSuc": 8,
    "twoEach": 4,
    "twoSuccessor": 30,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 137,
    "BeginPhi": 0,
    "BranchCount": 122,
    "returnInt": 22,
    "CriticalCount": 14,
    "NumEdges": 163,
    "const32Bit": 265,
    "const64Bit": 10,
    "numConstZeroes": 124,
    "numConstOnes": 82,
    "UncondBranches": 92,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 59,
    "NumAndInst": 11,
    "BlockMid": 8,
    "BlockLow": 129,
    "NumBitCastInst": 3,
    "NumBrInst": 122,
    "NumCallInst": 65,
    "NumGetElementPtrInst": 46,
    "NumICmpInst": 30,
    "NumLShrInst": 4,
    "NumLoadInst": 211,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 4,
    "NumSelectInst": 2,
    "NumShlInst": 5,
    "NumStoreInst": 96,
    "NumSubInst": 0,
    "NumTruncInst": 14,
    "NumXorInst": 0,
    "NumZExtInst": 29,
    "TotalBlocks": 137,
    "TotalInsts": 729,
    "TotalMemInst": 477,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 321
  },
  "baseline_oz_instcount": 729,
  "knowledge_base_entry": [
    "--loop-versioning-licm",
    "--instcombine",
    "--die",
    "--aggressive-instcombine",
    "--lower-expect",
    "--die",
    "--dse",
    "--mldst-motion",
    "--early-cse-memssa",
    "--simplifycfg",
    "--reassociate",
    "-loop-reduce",
    "--gvn-hoist",
    "--loop-deletion",
    "--sroa",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--guard-widening",
          "--loop-unroll",
          "--mergereturn",
          "--adce",
          "--nary-reassociate",
          "--loop-rotate",
          "--hotcoldsplit",
          "--slsr",
          "--memcpyopt",
          "--sroa",
          "--mergefunc",
          "--mem2reg",
          "--loop-instsimplify",
          "--aggressive-instcombine",
          "--loweratomic",
          "--dse",
          "--simple-loop-unswitch",
          "--partially-inline-libcalls",
          "--loop-interchange",
          "--loop-versioning-licm",
          "--attributor",
          "--instnamer",
          "--alignment-from-assumptions",
          "--sancov",
          "--loop-guard-widening",
          "--rewrite-statepoints-for-gc",
          "--lower-constant-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--guard-widening",
      "--loop-unroll",
      "--mergereturn",
      "--adce",
      "--nary-reassociate",
      "--loop-rotate",
      "--hotcoldsplit",
      "--slsr",
      "--memcpyopt",
      "--sroa",
      "--mergefunc",
      "--mem2reg",
      "--loop-instsimplify",
      "--aggressive-instcombine",
      "--loweratomic",
      "--dse",
      "--simple-loop-unswitch",
      "--partially-inline-libcalls",
      "--loop-interchange",
      "--loop-versioning-licm",
      "--attributor",
      "--instnamer",
      "--alignment-from-assumptions",
      "--sancov",
      "--loop-guard-widening",
      "--rewrite-statepoints-for-gc",
      "--lower-constant-intrinsics"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}