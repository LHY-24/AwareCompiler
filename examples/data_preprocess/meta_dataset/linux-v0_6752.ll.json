{
  "program_id": "linux-v0_6752.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 48,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 12,
    "oneSuccessor": 47,
    "twoPred": 23,
    "twoPredOneSuc": 11,
    "twoEach": 6,
    "twoSuccessor": 25,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 80,
    "BeginPhi": 0,
    "BranchCount": 72,
    "returnInt": 1,
    "CriticalCount": 6,
    "NumEdges": 97,
    "const32Bit": 254,
    "const64Bit": 33,
    "numConstZeroes": 147,
    "numConstOnes": 104,
    "UncondBranches": 47,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 74,
    "NumAndInst": 1,
    "BlockMid": 12,
    "BlockLow": 68,
    "NumBitCastInst": 37,
    "NumBrInst": 72,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 97,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 181,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 18,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 101,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 10,
    "TotalBlocks": 80,
    "TotalInsts": 665,
    "TotalMemInst": 483,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 322
  },
  "baseline_oz_instcount": 665,
  "knowledge_base_entry": [
    "--loop-rotate",
    "--mem2reg",
    "--aggressive-instcombine",
    "--instcombine",
    "--simplifycfg",
    "--loop-reroll",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--adce",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mem2reg",
          "--deadargelim",
          "--aggressive-instcombine",
          "--loop-vectorize",
          "--loweratomic",
          "--instnamer",
          "--loop-instsimplify",
          "--bdce",
          "--loop-distribute",
          "--reassociate",
          "--lower-expect",
          "--correlated-propagation",
          "--rpo-functionattrs",
          "--irce",
          "--mergefunc",
          "--sink",
          "--sancov",
          "--loop-simplify",
          "--early-cse",
          "--ee-instrument",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mem2reg",
      "--deadargelim",
      "--aggressive-instcombine",
      "--loop-vectorize",
      "--loweratomic",
      "--instnamer",
      "--loop-instsimplify",
      "--bdce",
      "--loop-distribute",
      "--reassociate",
      "--lower-expect",
      "--correlated-propagation",
      "--rpo-functionattrs",
      "--irce",
      "--mergefunc",
      "--sink",
      "--sancov",
      "--loop-simplify",
      "--early-cse",
      "--ee-instrument",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}