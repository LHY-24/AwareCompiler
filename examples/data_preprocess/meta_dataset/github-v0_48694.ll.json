{
  "program_id": "github-v0_48694.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 33,
    "const64Bit": 74,
    "numConstZeroes": 69,
    "numConstOnes": 32,
    "UncondBranches": 13,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 19,
    "NumBitCastInst": 20,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 56,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 55,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 25,
    "TotalBlocks": 24,
    "TotalInsts": 259,
    "TotalMemInst": 165,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 123
  },
  "baseline_oz_instcount": 259,
  "knowledge_base_entry": [
    "--ipsccp",
    "--ipsccp",
    "--loweratomic",
    "--instcombine",
    "--loop-rotate",
    "--mem2reg",
    "--reassociate",
    "--lower-expect",
    "--newgvn",
    "--memcpyopt",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--die",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn-hoist",
          "--aggressive-instcombine",
          "--loweratomic",
          "--slp-vectorizer",
          "--mergereturn",
          "--lower-matrix-intrinsics",
          "--hotcoldsplit",
          "--loop-data-prefetch",
          "--coro-cleanup",
          "--partial-inliner",
          "--loop-guard-widening",
          "--partially-inline-libcalls",
          "--loop-simplifycfg",
          "--dse",
          "--instcombine",
          "--loop-sink",
          "--argpromotion",
          "--loop-versioning",
          "--correlated-propagation",
          "--sink",
          "--loop-simplify",
          "--pgo-memop-opt",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn-hoist",
      "--aggressive-instcombine",
      "--loweratomic",
      "--slp-vectorizer",
      "--mergereturn",
      "--lower-matrix-intrinsics",
      "--hotcoldsplit",
      "--loop-data-prefetch",
      "--coro-cleanup",
      "--partial-inliner",
      "--loop-guard-widening",
      "--partially-inline-libcalls",
      "--loop-simplifycfg",
      "--dse",
      "--instcombine",
      "--loop-sink",
      "--argpromotion",
      "--loop-versioning",
      "--correlated-propagation",
      "--sink",
      "--loop-simplify",
      "--pgo-memop-opt",
      "--early-cse"
    ],
    "performance_vs_Oz": "+3.9%"
  }
}