{
  "program_id": "linux-v0_10742.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 28,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 16,
    "oneSuccessor": 14,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 6,
    "twoSuccessor": 24,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 40,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 0,
    "CriticalCount": 22,
    "NumEdges": 62,
    "const32Bit": 120,
    "const64Bit": 24,
    "numConstZeroes": 74,
    "numConstOnes": 31,
    "UncondBranches": 14,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 36,
    "NumBitCastInst": 2,
    "NumBrInst": 38,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 52,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 84,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 26,
    "TotalBlocks": 40,
    "TotalInsts": 274,
    "TotalMemInst": 174,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 128
  },
  "baseline_oz_instcount": 276,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--simplifycfg",
    "--mldst-motion",
    "--jump-threading",
    "--bdce",
    "--mergefunc",
    "--newgvn",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--strip-nondebug",
          "--instsimplify",
          "--attributor",
          "--barrier",
          "--ipconstprop",
          "--loop-unroll-and-jam",
          "--strip-dead-prototypes",
          "--float2int",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--strip-nondebug",
      "--instsimplify",
      "--attributor",
      "--barrier",
      "--ipconstprop",
      "--loop-unroll-and-jam",
      "--strip-dead-prototypes",
      "--float2int",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}