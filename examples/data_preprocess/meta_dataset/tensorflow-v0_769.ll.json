{
  "program_id": "tensorflow-v0_769.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 1,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 0,
    "oneSuccessor": 1,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 2,
    "BeginPhi": 1,
    "BranchCount": 2,
    "returnInt": 1,
    "CriticalCount": 1,
    "NumEdges": 3,
    "const32Bit": 14,
    "const64Bit": 10,
    "numConstZeroes": 9,
    "numConstOnes": 3,
    "UncondBranches": 1,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 1,
    "NumAndInst": 6,
    "BlockMid": 2,
    "BlockLow": 1,
    "NumBitCastInst": 3,
    "NumBrInst": 2,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 4,
    "NumLShrInst": 3,
    "NumLoadInst": 0,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 6,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 3,
    "TotalInsts": 45,
    "TotalMemInst": 16,
    "TotalFuncs": 4,
    "ArgsPhi": 4,
    "testUnary": 11
  },
  "baseline_oz_instcount": 45,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--load-store-vectorizer",
    "--lower-expect",
    "--dse",
    "--early-cse-memssa",
    "--loop-deletion",
    "--instcombine",
    "--dce",
    "--newgvn",
    "--indvars",
    "--instcombine",
    "--mergefunc",
    "--mem2reg",
    "--newgvn",
    "--globalopt",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-rotate",
          "--loop-data-prefetch",
          "--flattencfg",
          "--reassociate",
          "--slsr",
          "--loop-deletion",
          "--loop-reroll",
          "--indvars",
          "--alignment-from-assumptions",
          "--speculative-execution",
          "--adce",
          "--constmerge",
          "--loop-simplify",
          "--simplifycfg",
          "--coro-split",
          "--strip-nondebug",
          "--lower-matrix-intrinsics",
          "--mergeicmps",
          "--lower-constant-intrinsics",
          "--strip-dead-prototypes",
          "--mem2reg",
          "--libcalls-shrinkwrap",
          "--early-cse-memssa",
          "--instnamer",
          "--memcpyopt",
          "--loop-versioning",
          "--aggressive-instcombine",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-rotate",
      "--loop-data-prefetch",
      "--flattencfg",
      "--reassociate",
      "--slsr",
      "--loop-deletion",
      "--loop-reroll",
      "--indvars",
      "--alignment-from-assumptions",
      "--speculative-execution",
      "--adce",
      "--constmerge",
      "--loop-simplify",
      "--simplifycfg",
      "--coro-split",
      "--strip-nondebug",
      "--lower-matrix-intrinsics",
      "--mergeicmps",
      "--lower-constant-intrinsics",
      "--strip-dead-prototypes",
      "--mem2reg",
      "--libcalls-shrinkwrap",
      "--early-cse-memssa",
      "--instnamer",
      "--memcpyopt",
      "--loop-versioning",
      "--aggressive-instcombine",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+4.4%"
  }
}