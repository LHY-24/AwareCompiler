{
  "program_id": "poj104-v1_1_354.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 2,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 3,
    "CriticalCount": 2,
    "NumEdges": 22,
    "const32Bit": 33,
    "const64Bit": 11,
    "numConstZeroes": 10,
    "numConstOnes": 21,
    "UncondBranches": 10,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 26,
    "NumBitCastInst": 13,
    "NumBrInst": 16,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 39,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 27,
    "TotalInsts": 166,
    "TotalMemInst": 111,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 69
  },
  "baseline_oz_instcount": 62,
  "knowledge_base_entry": [
    "--sink",
    "--early-cse",
    "--indvars",
    "--correlated-propagation",
    "--ipsccp",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--inline",
    "--instcombine",
    "--lower-expect",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--dse",
    "--dse",
    "--sroa",
    "--simplifycfg",
    "--prune-eh",
    "--early-cse",
    "--dse",
    "--early-cse",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--newgvn",
    "--licm",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--mergefunc",
    "--memcpyopt",
    "--inline",
    "--jump-threading",
    "--dce",
    "--gvn-hoist",
    "--sroa",
    "--ipsccp",
    "--bdce",
    "--instcombine",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--loop-reroll",
    "--newgvn",
    "--licm",
    "--licm",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--ee-instrument",
          "--rpo-functionattrs",
          "--callsite-splitting",
          "--reassociate",
          "--lower-guard-intrinsic",
          "--strip-debug-declare",
          "--loop-vectorize",
          "--correlated-propagation",
          "--loop-predication",
          "--loop-unroll",
          "--loop-simplify",
          "--pgo-memop-opt",
          "--canonicalize-aliases",
          "--indvars",
          "--strip",
          "--prune-eh",
          "--lower-expect",
          "--globaldce",
          "--adce",
          "--gvn-hoist",
          "--mergefunc",
          "--sroa",
          "--irce",
          "--loop-fusion",
          "--slp-vectorizer",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--ee-instrument",
      "--rpo-functionattrs",
      "--callsite-splitting",
      "--reassociate",
      "--lower-guard-intrinsic",
      "--strip-debug-declare",
      "--loop-vectorize",
      "--correlated-propagation",
      "--loop-predication",
      "--loop-unroll",
      "--loop-simplify",
      "--pgo-memop-opt",
      "--canonicalize-aliases",
      "--indvars",
      "--strip",
      "--prune-eh",
      "--lower-expect",
      "--globaldce",
      "--adce",
      "--gvn-hoist",
      "--mergefunc",
      "--sroa",
      "--irce",
      "--loop-fusion",
      "--slp-vectorizer",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+3.2%"
  }
}