{
  "program_id": "linux-v0_5794.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 65,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 20,
    "oneSuccessor": 55,
    "twoPred": 21,
    "twoPredOneSuc": 7,
    "twoEach": 13,
    "twoSuccessor": 36,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 0,
    "BranchCount": 91,
    "returnInt": 8,
    "CriticalCount": 40,
    "NumEdges": 127,
    "const32Bit": 356,
    "const64Bit": 56,
    "numConstZeroes": 160,
    "numConstOnes": 142,
    "UncondBranches": 55,
    "binaryConstArg": 66,
    "NumAShrInst": 7,
    "NumAddInst": 4,
    "NumAllocaInst": 72,
    "NumAndInst": 16,
    "BlockMid": 22,
    "BlockLow": 72,
    "NumBitCastInst": 6,
    "NumBrInst": 91,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 120,
    "NumICmpInst": 43,
    "NumLShrInst": 0,
    "NumLoadInst": 250,
    "NumMulInst": 2,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 8,
    "NumStoreInst": 98,
    "NumSubInst": 3,
    "NumTruncInst": 16,
    "NumXorInst": 36,
    "NumZExtInst": 51,
    "TotalBlocks": 94,
    "TotalInsts": 898,
    "TotalMemInst": 591,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 408
  },
  "baseline_oz_instcount": 838,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--dse",
    "--instsimplify",
    "--mergefunc",
    "--simplifycfg",
    "-loop-reduce",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--early-cse-memssa",
    "--loop-fusion",
    "--gvn",
    "--ipsccp",
    "--early-cse-memssa",
    "--instsimplify",
    "--aggressive-instcombine",
    "--lower-expect",
    "--correlated-propagation",
    "--adce",
    "--sroa",
    "--simplifycfg",
    "--elim-avail-extern",
    "--memcpyopt",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalopt",
          "--coro-elide",
          "--loop-versioning",
          "--adce",
          "--speculative-execution",
          "--loop-fusion",
          "--aggressive-instcombine",
          "--globalsplit",
          "--strip-nondebug",
          "--loop-interchange",
          "--ipconstprop",
          "--sccp",
          "--memcpyopt",
          "--mergefunc",
          "--ipsccp",
          "--add-discriminators",
          "--cross-dso-cfi",
          "--always-inline",
          "--newgvn",
          "--nary-reassociate",
          "--consthoist",
          "--argpromotion",
          "--instcombine",
          "--constmerge",
          "--alignment-from-assumptions",
          "--name-anon-globals",
          "--simple-loop-unswitch",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalopt",
      "--coro-elide",
      "--loop-versioning",
      "--adce",
      "--speculative-execution",
      "--loop-fusion",
      "--aggressive-instcombine",
      "--globalsplit",
      "--strip-nondebug",
      "--loop-interchange",
      "--ipconstprop",
      "--sccp",
      "--memcpyopt",
      "--mergefunc",
      "--ipsccp",
      "--add-discriminators",
      "--cross-dso-cfi",
      "--always-inline",
      "--newgvn",
      "--nary-reassociate",
      "--consthoist",
      "--argpromotion",
      "--instcombine",
      "--constmerge",
      "--alignment-from-assumptions",
      "--name-anon-globals",
      "--simple-loop-unswitch",
      "--early-cse"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}