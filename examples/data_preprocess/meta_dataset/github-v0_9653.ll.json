{
  "program_id": "github-v0_9653.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 1,
    "onePred": 3,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 1,
    "oneSuccessor": 2,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 4,
    "BeginPhi": 3,
    "BranchCount": 6,
    "returnInt": 2,
    "CriticalCount": 5,
    "NumEdges": 10,
    "const32Bit": 12,
    "const64Bit": 0,
    "numConstZeroes": 6,
    "numConstOnes": 4,
    "UncondBranches": 2,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 6,
    "NumBitCastInst": 0,
    "NumBrInst": 6,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 7,
    "NumMulInst": 7,
    "NumOrInst": 1,
    "NumPHIInst": 7,
    "NumRetInst": 1,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 1,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 7,
    "TotalInsts": 68,
    "TotalMemInst": 21,
    "TotalFuncs": 3,
    "ArgsPhi": 15,
    "testUnary": 16
  },
  "baseline_oz_instcount": 70,
  "knowledge_base_entry": [
    "--gvn",
    "--sccp",
    "--bdce",
    "--reassociate",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--licm",
    "--loop-instsimplify",
    "--bdce",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--correlated-propagation",
    "--mergefunc",
    "--instsimplify",
    "--load-store-vectorizer",
    "--slsr",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--adce",
    "--simplifycfg",
    "--mergefunc",
    "--jump-threading",
    "--dse",
    "--gvn",
    "--lower-expect",
    "--early-cse-memssa",
    "--prune-eh",
    "--simplifycfg",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--loop-instsimplify",
    "--ipsccp",
    "--dce",
    "--load-store-vectorizer",
    "--reassociate",
    "--instcombine",
    "--gvn",
    "--nary-reassociate",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--slsr",
    "--loop-reroll",
    "--instcombine",
    "--gvn",
    "--nary-reassociate",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--slsr",
    "--loop-reroll",
    "--instcombine",
    "--load-store-vectorizer",
    "--newgvn",
    "--memcpyopt",
    "--mem2reg",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-reroll",
          "--jump-threading",
          "--load-store-vectorizer",
          "--lowerswitch",
          "--adce",
          "--die",
          "--loop-load-elim",
          "--loop-vectorize",
          "--called-value-propagation",
          "--lower-expect",
          "--coro-elide",
          "--speculative-execution",
          "--tailcallelim",
          "--mem2reg",
          "--flattencfg",
          "--inferattrs",
          "--sink",
          "--loop-predication",
          "--coro-split",
          "--loop-simplify",
          "--simple-loop-unswitch",
          "--lower-constant-intrinsics",
          "--early-cse",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-reroll",
      "--jump-threading",
      "--load-store-vectorizer",
      "--lowerswitch",
      "--adce",
      "--die",
      "--loop-load-elim",
      "--loop-vectorize",
      "--called-value-propagation",
      "--lower-expect",
      "--coro-elide",
      "--speculative-execution",
      "--tailcallelim",
      "--mem2reg",
      "--flattencfg",
      "--inferattrs",
      "--sink",
      "--loop-predication",
      "--coro-split",
      "--loop-simplify",
      "--simple-loop-unswitch",
      "--lower-constant-intrinsics",
      "--early-cse",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+4.3%"
  }
}