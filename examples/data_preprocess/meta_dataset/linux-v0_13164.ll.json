{
  "program_id": "linux-v0_13164.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 18,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 1,
    "oneSuccessor": 18,
    "twoPred": 5,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 21,
    "CriticalCount": 3,
    "NumEdges": 38,
    "const32Bit": 296,
    "const64Bit": 2,
    "numConstZeroes": 159,
    "numConstOnes": 137,
    "UncondBranches": 18,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 96,
    "NumAndInst": 0,
    "BlockMid": 16,
    "BlockLow": 32,
    "NumBitCastInst": 35,
    "NumBrInst": 23,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 90,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 140,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 129,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 6,
    "NumZExtInst": 3,
    "TotalBlocks": 48,
    "TotalInsts": 595,
    "TotalMemInst": 489,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 281
  },
  "baseline_oz_instcount": 596,
  "knowledge_base_entry": [
    "--mergefunc",
    "--instcombine",
    "--flattencfg",
    "--ipsccp",
    "--lower-expect",
    "--simplifycfg",
    "--sroa",
    "--globalopt",
    "--instcombine",
    "--dse",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--libcalls-shrinkwrap",
          "--mergefunc",
          "--strip-debug-declare",
          "--loop-rotate",
          "--loop-data-prefetch",
          "--instcombine",
          "--strip",
          "--loop-unroll-and-jam",
          "--ipsccp",
          "--partial-inliner",
          "--constprop",
          "--attributor",
          "--loop-distribute",
          "--deadargelim",
          "--slp-vectorizer",
          "--slsr",
          "--adce",
          "--argpromotion",
          "--float2int",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--libcalls-shrinkwrap",
      "--mergefunc",
      "--strip-debug-declare",
      "--loop-rotate",
      "--loop-data-prefetch",
      "--instcombine",
      "--strip",
      "--loop-unroll-and-jam",
      "--ipsccp",
      "--partial-inliner",
      "--constprop",
      "--attributor",
      "--loop-distribute",
      "--deadargelim",
      "--slp-vectorizer",
      "--slsr",
      "--adce",
      "--argpromotion",
      "--float2int",
      "--die"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}