{
  "program_id": "linux-v0_10168.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 7,
    "oneSuccessor": 19,
    "twoPred": 10,
    "twoPredOneSuc": 5,
    "twoEach": 0,
    "twoSuccessor": 10,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 0,
    "BranchCount": 29,
    "returnInt": 15,
    "CriticalCount": 7,
    "NumEdges": 43,
    "const32Bit": 164,
    "const64Bit": 15,
    "numConstZeroes": 65,
    "numConstOnes": 69,
    "UncondBranches": 19,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 54,
    "NumAndInst": 1,
    "BlockMid": 10,
    "BlockLow": 34,
    "NumBitCastInst": 10,
    "NumBrInst": 29,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 110,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 75,
    "NumSubInst": 3,
    "NumTruncInst": 4,
    "NumXorInst": 4,
    "NumZExtInst": 4,
    "TotalBlocks": 44,
    "TotalInsts": 414,
    "TotalMemInst": 313,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 190
  },
  "baseline_oz_instcount": 415,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "-loop-reduce",
    "--newgvn",
    "--indvars",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--div-rem-pairs",
          "--loop-simplify",
          "--sancov",
          "--strip-dead-prototypes",
          "--tailcallelim",
          "--loop-fusion",
          "--deadargelim",
          "--correlated-propagation",
          "--loop-interchange",
          "--coro-early",
          "--loop-predication",
          "--separate-const-offset-from-gep",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--div-rem-pairs",
      "--loop-simplify",
      "--sancov",
      "--strip-dead-prototypes",
      "--tailcallelim",
      "--loop-fusion",
      "--deadargelim",
      "--correlated-propagation",
      "--loop-interchange",
      "--coro-early",
      "--loop-predication",
      "--separate-const-offset-from-gep",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}