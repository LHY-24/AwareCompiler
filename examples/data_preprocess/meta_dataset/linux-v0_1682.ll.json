{
  "program_id": "linux-v0_1682.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 36,
    "onePredOneSuc": 28,
    "onePredTwoSuc": 8,
    "oneSuccessor": 36,
    "twoPred": 12,
    "twoPredOneSuc": 7,
    "twoEach": 2,
    "twoSuccessor": 13,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 70,
    "BeginPhi": 0,
    "BranchCount": 49,
    "returnInt": 27,
    "CriticalCount": 3,
    "NumEdges": 73,
    "const32Bit": 213,
    "const64Bit": 10,
    "numConstZeroes": 97,
    "numConstOnes": 65,
    "UncondBranches": 36,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 43,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 62,
    "NumBitCastInst": 31,
    "NumBrInst": 49,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 74,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 171,
    "NumMulInst": 7,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 26,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 72,
    "NumSubInst": 5,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 2,
    "TotalBlocks": 70,
    "TotalInsts": 586,
    "TotalMemInst": 410,
    "TotalFuncs": 32,
    "ArgsPhi": 0,
    "testUnary": 282
  },
  "baseline_oz_instcount": 587,
  "knowledge_base_entry": [
    "--loweratomic",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--newgvn",
    "--aggressive-instcombine",
    "--sroa",
    "--early-cse",
    "--gvn-hoist",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--pgo-memop-opt",
          "--sink",
          "--insert-gcov-profiling",
          "--lower-expect",
          "--aggressive-instcombine",
          "--globalopt",
          "--constprop",
          "--gvn-hoist",
          "--load-store-vectorizer",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--pgo-memop-opt",
      "--sink",
      "--insert-gcov-profiling",
      "--lower-expect",
      "--aggressive-instcombine",
      "--globalopt",
      "--constprop",
      "--gvn-hoist",
      "--load-store-vectorizer",
      "--dse"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}