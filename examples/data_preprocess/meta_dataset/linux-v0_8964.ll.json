{
  "program_id": "linux-v0_8964.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 7,
    "oneSuccessor": 24,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 14,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 57,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 14,
    "CriticalCount": 5,
    "NumEdges": 52,
    "const32Bit": 124,
    "const64Bit": 31,
    "numConstZeroes": 56,
    "numConstOnes": 71,
    "UncondBranches": 24,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 52,
    "NumAndInst": 4,
    "BlockMid": 5,
    "BlockLow": 52,
    "NumBitCastInst": 7,
    "NumBrInst": 38,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 16,
    "NumLShrInst": 1,
    "NumLoadInst": 99,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 69,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 3,
    "NumZExtInst": 7,
    "TotalBlocks": 57,
    "TotalInsts": 403,
    "TotalMemInst": 292,
    "TotalFuncs": 33,
    "ArgsPhi": 0,
    "testUnary": 173
  },
  "baseline_oz_instcount": 403,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--instcombine",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--loweratomic",
    "--instcombine",
    "--slp-vectorizer",
    "--mergefunc",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--sroa",
    "--nary-reassociate",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--called-value-propagation",
          "--early-cse-memssa",
          "--loop-vectorize",
          "--loop-distribute",
          "--lower-expect",
          "--reassociate",
          "--sccp",
          "--attributor",
          "--irce",
          "--aggressive-instcombine",
          "--loop-simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--called-value-propagation",
      "--early-cse-memssa",
      "--loop-vectorize",
      "--loop-distribute",
      "--lower-expect",
      "--reassociate",
      "--sccp",
      "--attributor",
      "--irce",
      "--aggressive-instcombine",
      "--loop-simplifycfg"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}