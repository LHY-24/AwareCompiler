{
  "program_id": "poj104-v1_104_39.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 5,
    "oneSuccessor": 27,
    "twoPred": 13,
    "twoPredOneSuc": 4,
    "twoEach": 8,
    "twoSuccessor": 13,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 0,
    "BranchCount": 40,
    "returnInt": 11,
    "CriticalCount": 6,
    "NumEdges": 53,
    "const32Bit": 48,
    "const64Bit": 37,
    "numConstZeroes": 21,
    "numConstOnes": 43,
    "UncondBranches": 27,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 40,
    "NumBitCastInst": 20,
    "NumBrInst": 40,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 59,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 18,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 44,
    "TotalInsts": 267,
    "TotalMemInst": 143,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 104
  },
  "baseline_oz_instcount": 189,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--elim-avail-extern",
    "--instsimplify",
    "--sccp",
    "--dse",
    "--mergefunc",
    "--jump-threading",
    "--newgvn",
    "--loop-deletion",
    "--early-cse",
    "--mem2reg",
    "--loop-rotate",
    "--newgvn",
    "--ipsccp",
    "--ipsccp",
    "--dse",
    "--mldst-motion",
    "--sroa",
    "--lower-expect",
    "--mem2reg",
    "--instcombine",
    "--nary-reassociate",
    "--newgvn",
    "--load-store-vectorizer",
    "--gvn",
    "--simplifycfg",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--adce",
    "--reassociate",
    "--instcombine",
    "--sroa",
    "--correlated-propagation",
    "--dce",
    "--elim-avail-extern",
    "--prune-eh",
    "--instsimplify",
    "--jump-threading",
    "--loop-rotate",
    "--instcombine",
    "--load-store-vectorizer",
    "--lower-expect",
    "--mem2reg",
    "--instcombine",
    "--nary-reassociate",
    "--newgvn",
    "--load-store-vectorizer",
    "--gvn",
    "--simplifycfg",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--loop-simplifycfg",
    "--loop-instsimplify",
    "--adce",
    "--reassociate",
    "--instcombine",
    "--sroa",
    "--correlated-propagation",
    "--dce",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--jump-threading",
    "--loop-simplifycfg",
    "--correlated-propagation",
    "--gvn",
    "--slp-vectorizer",
    "--mergefunc",
    "--mem2reg",
    "--instcombine",
    "--elim-avail-extern",
    "--mem2reg",
    "--globalopt",
    "--loop-instsimplify",
    "--gvn",
    "--reassociate",
    "--instsimplify",
    "--loop-instsimplify",
    "--instcombine",
    "--gvn-hoist",
    "--newgvn",
    "--bdce",
    "--load-store-vectorizer",
    "--die",
    "--simplifycfg",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--loop-fusion",
          "--loop-interchange",
          "--slsr",
          "--partial-inliner",
          "--lowerinvoke",
          "--lower-widenable-condition",
          "--jump-threading",
          "--mergeicmps",
          "--loop-rotate",
          "--mem2reg",
          "--infer-address-spaces",
          "--flattencfg",
          "--loop-versioning",
          "--indvars",
          "--aggressive-instcombine",
          "--coro-split",
          "--correlated-propagation",
          "--early-cse-memssa",
          "--forceattrs",
          "--mergefunc",
          "--loop-unswitch",
          "--simplifycfg",
          "--strip-debug-declare",
          "--gvn",
          "--rpo-functionattrs",
          "--loop-unroll",
          "--cross-dso-cfi",
          "--lower-guard-intrinsic",
          "--loop-simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+22.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--loop-fusion",
      "--loop-interchange",
      "--slsr",
      "--partial-inliner",
      "--lowerinvoke",
      "--lower-widenable-condition",
      "--jump-threading",
      "--mergeicmps",
      "--loop-rotate",
      "--mem2reg",
      "--infer-address-spaces",
      "--flattencfg",
      "--loop-versioning",
      "--indvars",
      "--aggressive-instcombine",
      "--coro-split",
      "--correlated-propagation",
      "--early-cse-memssa",
      "--forceattrs",
      "--mergefunc",
      "--loop-unswitch",
      "--simplifycfg",
      "--strip-debug-declare",
      "--gvn",
      "--rpo-functionattrs",
      "--loop-unroll",
      "--cross-dso-cfi",
      "--lower-guard-intrinsic",
      "--loop-simplifycfg"
    ],
    "performance_vs_Oz": "+22.2%"
  }
}