{
  "program_id": "github-v0_33088.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 1,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 0,
    "oneSuccessor": 1,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 5,
    "BeginPhi": 0,
    "BranchCount": 2,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 3,
    "const32Bit": 9,
    "const64Bit": 11,
    "numConstZeroes": 10,
    "numConstOnes": 10,
    "UncondBranches": 1,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 4,
    "NumBitCastInst": 0,
    "NumBrInst": 2,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 10,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 5,
    "TotalInsts": 45,
    "TotalMemInst": 37,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 19
  },
  "baseline_oz_instcount": 46,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--reassociate",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--instcombine",
    "--loop-deletion",
    "--elim-avail-extern",
    "--inline",
    "--loop-rotate",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--pgo-memop-opt",
          "--gvn",
          "--globalsplit",
          "--loop-versioning",
          "--inject-tli-mappings",
          "--constprop",
          "--div-rem-pairs",
          "--called-value-propagation",
          "--loop-data-prefetch",
          "--canonicalize-aliases",
          "--loop-reroll",
          "--forceattrs",
          "--dse",
          "--mergefunc",
          "--loop-deletion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--pgo-memop-opt",
      "--gvn",
      "--globalsplit",
      "--loop-versioning",
      "--inject-tli-mappings",
      "--constprop",
      "--div-rem-pairs",
      "--called-value-propagation",
      "--loop-data-prefetch",
      "--canonicalize-aliases",
      "--loop-reroll",
      "--forceattrs",
      "--dse",
      "--mergefunc",
      "--loop-deletion"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}