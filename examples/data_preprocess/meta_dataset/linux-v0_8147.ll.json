{
  "program_id": "linux-v0_8147.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 22,
    "oneSuccessor": 45,
    "twoPred": 25,
    "twoPredOneSuc": 19,
    "twoEach": 0,
    "twoSuccessor": 23,
    "morePreds": 16,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 78,
    "BeginPhi": 0,
    "BranchCount": 67,
    "returnInt": 3,
    "CriticalCount": 954,
    "NumEdges": 1029,
    "const32Bit": 1000,
    "const64Bit": 0,
    "numConstZeroes": 9,
    "numConstOnes": 23,
    "UncondBranches": 44,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 78,
    "NumBitCastInst": 0,
    "NumBrInst": 67,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 23,
    "NumLShrInst": 0,
    "NumLoadInst": 19,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 22,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 78,
    "TotalInsts": 185,
    "TotalMemInst": 62,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 35
  },
  "baseline_oz_instcount": 185,
  "knowledge_base_entry": [
    "--dce",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--early-cse",
    "--memcpyopt",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--bdce",
    "--die",
    "--mergefunc",
    "--dse",
    "--ipsccp",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--dce",
    "--correlated-propagation",
    "--gvn-hoist",
    "--jump-threading",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--gvn",
    "--bdce",
    "--newgvn",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--scalarizer",
          "--ipsccp",
          "--instsimplify",
          "--barrier",
          "--correlated-propagation",
          "--load-store-vectorizer",
          "--licm",
          "--post-inline-ee-instrument",
          "--hotcoldsplit",
          "--dce",
          "--die",
          "--float2int",
          "-loop-reduce",
          "--inferattrs",
          "--mergefunc",
          "--newgvn",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+15.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--scalarizer",
      "--ipsccp",
      "--instsimplify",
      "--barrier",
      "--correlated-propagation",
      "--load-store-vectorizer",
      "--licm",
      "--post-inline-ee-instrument",
      "--hotcoldsplit",
      "--dce",
      "--die",
      "--float2int",
      "-loop-reduce",
      "--inferattrs",
      "--mergefunc",
      "--newgvn",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+15.7%"
  }
}