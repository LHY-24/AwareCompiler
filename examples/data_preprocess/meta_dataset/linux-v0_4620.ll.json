{
  "program_id": "linux-v0_4620.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 66,
    "onePredOneSuc": 52,
    "onePredTwoSuc": 11,
    "oneSuccessor": 61,
    "twoPred": 19,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 28,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 113,
    "BeginPhi": 0,
    "BranchCount": 89,
    "returnInt": 11,
    "CriticalCount": 7,
    "NumEdges": 117,
    "const32Bit": 183,
    "const64Bit": 25,
    "numConstZeroes": 78,
    "numConstOnes": 92,
    "UncondBranches": 61,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 83,
    "NumAndInst": 0,
    "BlockMid": 10,
    "BlockLow": 103,
    "NumBitCastInst": 26,
    "NumBrInst": 89,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 51,
    "NumICmpInst": 28,
    "NumLShrInst": 0,
    "NumLoadInst": 174,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 24,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 113,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 113,
    "TotalInsts": 634,
    "TotalMemInst": 455,
    "TotalFuncs": 39,
    "ArgsPhi": 0,
    "testUnary": 286
  },
  "baseline_oz_instcount": 634,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--early-cse-memssa",
    "--newgvn",
    "--slsr",
    "--gvn",
    "--adce",
    "--instcombine",
    "--mergefunc",
    "--ipsccp",
    "--mergefunc",
    "--newgvn",
    "--gvn",
    "--adce",
    "--instcombine",
    "--mergefunc",
    "--loop-reroll",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--die",
          "--float2int",
          "--loop-instsimplify",
          "--coro-early",
          "--sroa",
          "--callsite-splitting",
          "--rewrite-statepoints-for-gc",
          "--elim-avail-extern",
          "--forceattrs",
          "--loop-rotate",
          "--consthoist",
          "--slp-vectorizer",
          "--coro-cleanup",
          "--libcalls-shrinkwrap",
          "--cross-dso-cfi",
          "--loop-interchange",
          "--inline",
          "--lower-guard-intrinsic",
          "--div-rem-pairs",
          "--loop-predication",
          "--simplifycfg",
          "--strip-nondebug",
          "--lowerswitch",
          "--loop-distribute",
          "--deadargelim",
          "--partially-inline-libcalls",
          "--flattencfg",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--die",
      "--float2int",
      "--loop-instsimplify",
      "--coro-early",
      "--sroa",
      "--callsite-splitting",
      "--rewrite-statepoints-for-gc",
      "--elim-avail-extern",
      "--forceattrs",
      "--loop-rotate",
      "--consthoist",
      "--slp-vectorizer",
      "--coro-cleanup",
      "--libcalls-shrinkwrap",
      "--cross-dso-cfi",
      "--loop-interchange",
      "--inline",
      "--lower-guard-intrinsic",
      "--div-rem-pairs",
      "--loop-predication",
      "--simplifycfg",
      "--strip-nondebug",
      "--lowerswitch",
      "--loop-distribute",
      "--deadargelim",
      "--partially-inline-libcalls",
      "--flattencfg",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}