{
  "program_id": "github-v0_38713.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 43,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 2,
    "oneSuccessor": 43,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 7,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 61,
    "BeginPhi": 0,
    "BranchCount": 50,
    "returnInt": 14,
    "CriticalCount": 5,
    "NumEdges": 70,
    "const32Bit": 96,
    "const64Bit": 5,
    "numConstZeroes": 36,
    "numConstOnes": 42,
    "UncondBranches": 43,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 26,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 59,
    "NumBitCastInst": 0,
    "NumBrInst": 50,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 76,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 44,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 20,
    "TotalBlocks": 61,
    "TotalInsts": 291,
    "TotalMemInst": 196,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 126
  },
  "baseline_oz_instcount": 293,
  "knowledge_base_entry": [
    "--sroa",
    "--gvn-hoist",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--gvn",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--dse",
    "--jump-threading",
    "--memcpyopt",
    "--newgvn",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--slp-vectorizer",
          "--add-discriminators",
          "--mergeicmps",
          "--instnamer",
          "--bdce",
          "--simple-loop-unswitch",
          "--newgvn",
          "--sink",
          "--cross-dso-cfi",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--slp-vectorizer",
      "--add-discriminators",
      "--mergeicmps",
      "--instnamer",
      "--bdce",
      "--simple-loop-unswitch",
      "--newgvn",
      "--sink",
      "--cross-dso-cfi",
      "--inline"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}