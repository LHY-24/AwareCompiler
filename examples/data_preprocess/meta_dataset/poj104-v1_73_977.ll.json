{
  "program_id": "poj104-v1_73_977.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 8,
    "oneSuccessor": 22,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 39,
    "BeginPhi": 0,
    "BranchCount": 36,
    "returnInt": 4,
    "CriticalCount": 8,
    "NumEdges": 50,
    "const32Bit": 35,
    "const64Bit": 69,
    "numConstZeroes": 56,
    "numConstOnes": 21,
    "UncondBranches": 22,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 35,
    "NumBitCastInst": 14,
    "NumBrInst": 36,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 68,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 33,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 39,
    "TotalInsts": 270,
    "TotalMemInst": 159,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 123
  },
  "baseline_oz_instcount": 135,
  "knowledge_base_entry": [
    "--early-cse",
    "--memcpyopt",
    "--sroa",
    "--inline",
    "--die",
    "--licm",
    "--early-cse",
    "--lower-expect",
    "--loop-rotate",
    "--early-cse",
    "--loop-instsimplify",
    "--mem2reg",
    "--nary-reassociate",
    "--ipsccp",
    "--simplifycfg",
    "--nary-reassociate",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--loop-rotate",
    "--elim-avail-extern",
    "--dse",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--globalopt",
    "--inline",
    "--instcombine",
    "--aggressive-instcombine",
    "--early-cse",
    "--dse",
    "--gvn",
    "--adce",
    "--ipsccp",
    "--flattencfg",
    "--early-cse",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--licm",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--dce",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--prune-eh",
    "--early-cse-memssa",
    "--indvars",
    "--gvn",
    "--die",
    "--licm",
    "--early-cse",
    "--lower-expect",
    "--loop-rotate",
    "--early-cse",
    "--loop-instsimplify",
    "--mem2reg",
    "--nary-reassociate",
    "--ipsccp",
    "--simplifycfg",
    "--nary-reassociate",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--loop-rotate",
    "--elim-avail-extern",
    "--dse",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--correlated-propagation",
    "--jump-threading",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--lower-expect",
    "--prune-eh",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--globalopt",
    "--inline",
    "--instcombine",
    "--aggressive-instcombine",
    "--early-cse",
    "--dse",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--mergeicmps",
          "--cross-dso-cfi",
          "--loop-unswitch",
          "--globaldce",
          "--mergefunc",
          "--pgo-memop-opt",
          "--prune-eh",
          "--partial-inliner",
          "--adce",
          "--name-anon-globals",
          "--separate-const-offset-from-gep",
          "--lower-guard-intrinsic",
          "--licm",
          "--loop-vectorize",
          "--dce",
          "--loop-interchange",
          "--loop-instsimplify",
          "--deadargelim",
          "--lower-expect",
          "--rpo-functionattrs",
          "--libcalls-shrinkwrap",
          "--strip",
          "--correlated-propagation",
          "--instcombine",
          "--mem2reg",
          "--simple-loop-unswitch",
          "--newgvn",
          "--called-value-propagation",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+15.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--mergeicmps",
      "--cross-dso-cfi",
      "--loop-unswitch",
      "--globaldce",
      "--mergefunc",
      "--pgo-memop-opt",
      "--prune-eh",
      "--partial-inliner",
      "--adce",
      "--name-anon-globals",
      "--separate-const-offset-from-gep",
      "--lower-guard-intrinsic",
      "--licm",
      "--loop-vectorize",
      "--dce",
      "--loop-interchange",
      "--loop-instsimplify",
      "--deadargelim",
      "--lower-expect",
      "--rpo-functionattrs",
      "--libcalls-shrinkwrap",
      "--strip",
      "--correlated-propagation",
      "--instcombine",
      "--mem2reg",
      "--simple-loop-unswitch",
      "--newgvn",
      "--called-value-propagation",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+15.6%"
  }
}