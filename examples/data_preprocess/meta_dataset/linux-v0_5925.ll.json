{
  "program_id": "linux-v0_5925.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 4,
    "oneSuccessor": 21,
    "twoPred": 17,
    "twoPredOneSuc": 3,
    "twoEach": 11,
    "twoSuccessor": 17,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 56,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 15,
    "CriticalCount": 13,
    "NumEdges": 55,
    "const32Bit": 162,
    "const64Bit": 89,
    "numConstZeroes": 53,
    "numConstOnes": 103,
    "UncondBranches": 21,
    "binaryConstArg": 132,
    "NumAShrInst": 0,
    "NumAddInst": 48,
    "NumAllocaInst": 59,
    "NumAndInst": 25,
    "BlockMid": 14,
    "BlockLow": 42,
    "NumBitCastInst": 2,
    "NumBrInst": 38,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 57,
    "NumICmpInst": 28,
    "NumLShrInst": 4,
    "NumLoadInst": 154,
    "NumMulInst": 18,
    "NumOrInst": 13,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 99,
    "NumSubInst": 0,
    "NumTruncInst": 20,
    "NumXorInst": 24,
    "NumZExtInst": 65,
    "TotalBlocks": 56,
    "TotalInsts": 728,
    "TotalMemInst": 407,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 314
  },
  "baseline_oz_instcount": 729,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--mergefunc",
    "--globaldce",
    "--ipsccp",
    "--mem2reg",
    "--dce",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--mem2reg",
    "--lower-expect",
    "--instsimplify",
    "--prune-eh",
    "--instcombine",
    "--aggressive-instcombine",
    "--bdce",
    "--elim-avail-extern",
    "--mldst-motion",
    "--instcombine",
    "--newgvn",
    "--sccp",
    "--inline",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-rotate",
          "--loop-sink",
          "--die",
          "--flattencfg",
          "--loop-distribute",
          "--separate-const-offset-from-gep",
          "--licm",
          "--add-discriminators",
          "--strip",
          "--loop-predication",
          "--loop-deletion",
          "--aggressive-instcombine",
          "--infer-address-spaces",
          "--memcpyopt",
          "--sink",
          "--sroa",
          "--libcalls-shrinkwrap",
          "--always-inline",
          "--sancov",
          "--scalarizer",
          "--forceattrs",
          "--float2int",
          "--coro-cleanup",
          "--elim-avail-extern",
          "--strip-dead-prototypes",
          "--loop-versioning",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-rotate",
      "--loop-sink",
      "--die",
      "--flattencfg",
      "--loop-distribute",
      "--separate-const-offset-from-gep",
      "--licm",
      "--add-discriminators",
      "--strip",
      "--loop-predication",
      "--loop-deletion",
      "--aggressive-instcombine",
      "--infer-address-spaces",
      "--memcpyopt",
      "--sink",
      "--sroa",
      "--libcalls-shrinkwrap",
      "--always-inline",
      "--sancov",
      "--scalarizer",
      "--forceattrs",
      "--float2int",
      "--coro-cleanup",
      "--elim-avail-extern",
      "--strip-dead-prototypes",
      "--loop-versioning",
      "--dce"
    ],
    "performance_vs_Oz": "+3.0%"
  }
}