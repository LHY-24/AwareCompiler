{
  "program_id": "github-v0_12630.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 14,
    "twoPred": 2,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 20,
    "const32Bit": 90,
    "const64Bit": 28,
    "numConstZeroes": 25,
    "numConstOnes": 52,
    "UncondBranches": 14,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 42,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 13,
    "NumBitCastInst": 16,
    "NumBrInst": 17,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 85,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 62,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 19,
    "TotalInsts": 296,
    "TotalMemInst": 233,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 158
  },
  "baseline_oz_instcount": 294,
  "knowledge_base_entry": [
    "--loop-predication",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--aggressive-instcombine",
    "--loweratomic",
    "--ipsccp",
    "--globaldce",
    "--mergefunc",
    "--instcombine",
    "--slsr",
    "--simplifycfg",
    "--prune-eh",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--simplifycfg",
          "--reassociate",
          "--strip",
          "--globalopt",
          "--lower-guard-intrinsic",
          "--loop-simplifycfg",
          "--strip-nondebug",
          "--globaldce",
          "--coro-cleanup",
          "--dce",
          "--functionattrs",
          "--loop-idiom",
          "--early-cse",
          "--dse",
          "--aggressive-instcombine",
          "--adce",
          "--correlated-propagation",
          "--loop-sink",
          "--break-crit-edges",
          "--loop-unroll-and-jam",
          "--post-inline-ee-instrument",
          "--inject-tli-mappings"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--simplifycfg",
      "--reassociate",
      "--strip",
      "--globalopt",
      "--lower-guard-intrinsic",
      "--loop-simplifycfg",
      "--strip-nondebug",
      "--globaldce",
      "--coro-cleanup",
      "--dce",
      "--functionattrs",
      "--loop-idiom",
      "--early-cse",
      "--dse",
      "--aggressive-instcombine",
      "--adce",
      "--correlated-propagation",
      "--loop-sink",
      "--break-crit-edges",
      "--loop-unroll-and-jam",
      "--post-inline-ee-instrument",
      "--inject-tli-mappings"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}