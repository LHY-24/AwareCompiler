{
  "program_id": "linux-v0_2286.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 26,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 14,
    "oneSuccessor": 22,
    "twoPred": 15,
    "twoPredOneSuc": 9,
    "twoEach": 3,
    "twoSuccessor": 22,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 1,
    "BranchCount": 44,
    "returnInt": 17,
    "CriticalCount": 18,
    "NumEdges": 66,
    "const32Bit": 253,
    "const64Bit": 14,
    "numConstZeroes": 132,
    "numConstOnes": 45,
    "UncondBranches": 22,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 31,
    "NumAndInst": 15,
    "BlockMid": 10,
    "BlockLow": 44,
    "NumBitCastInst": 10,
    "NumBrInst": 44,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 89,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 168,
    "NumMulInst": 1,
    "NumOrInst": 10,
    "NumPHIInst": 1,
    "NumRetInst": 10,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 64,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 7,
    "TotalBlocks": 54,
    "TotalInsts": 532,
    "TotalMemInst": 393,
    "TotalFuncs": 29,
    "ArgsPhi": 4,
    "testUnary": 223
  },
  "baseline_oz_instcount": 532,
  "knowledge_base_entry": [
    "--indvars",
    "--correlated-propagation",
    "--bdce",
    "--aggressive-instcombine",
    "--lower-expect",
    "--licm",
    "--licm",
    "--jump-threading",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--early-cse",
    "--loop-rotate",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--argpromotion",
          "--instnamer",
          "--attributor",
          "--sroa",
          "--strip-nondebug",
          "--slsr",
          "--sccp",
          "--bdce",
          "--sink",
          "--constmerge",
          "--partial-inliner",
          "--loop-unroll",
          "--loop-idiom",
          "--inline",
          "--aggressive-instcombine",
          "--add-discriminators",
          "--inject-tli-mappings",
          "--rewrite-statepoints-for-gc",
          "--coro-early",
          "--libcalls-shrinkwrap",
          "--loop-unroll-and-jam",
          "--div-rem-pairs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--argpromotion",
      "--instnamer",
      "--attributor",
      "--sroa",
      "--strip-nondebug",
      "--slsr",
      "--sccp",
      "--bdce",
      "--sink",
      "--constmerge",
      "--partial-inliner",
      "--loop-unroll",
      "--loop-idiom",
      "--inline",
      "--aggressive-instcombine",
      "--add-discriminators",
      "--inject-tli-mappings",
      "--rewrite-statepoints-for-gc",
      "--coro-early",
      "--libcalls-shrinkwrap",
      "--loop-unroll-and-jam",
      "--div-rem-pairs"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}