{
  "program_id": "linux-v0_5579.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 16,
    "oneSuccessor": 33,
    "twoPred": 16,
    "twoPredOneSuc": 6,
    "twoEach": 6,
    "twoSuccessor": 26,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 78,
    "BeginPhi": 0,
    "BranchCount": 59,
    "returnInt": 11,
    "CriticalCount": 32,
    "NumEdges": 105,
    "const32Bit": 290,
    "const64Bit": 5,
    "numConstZeroes": 122,
    "numConstOnes": 77,
    "UncondBranches": 33,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 44,
    "NumAndInst": 1,
    "BlockMid": 7,
    "BlockLow": 71,
    "NumBitCastInst": 10,
    "NumBrInst": 59,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 155,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 87,
    "NumSubInst": 6,
    "NumTruncInst": 9,
    "NumXorInst": 2,
    "NumZExtInst": 5,
    "TotalBlocks": 78,
    "TotalInsts": 558,
    "TotalMemInst": 408,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 228
  },
  "baseline_oz_instcount": 558,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--newgvn",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--reassociate",
    "--aggressive-instcombine",
    "--globalopt",
    "--globaldce",
    "--mergefunc",
    "--memcpyopt",
    "--instcombine",
    "--gvn",
    "--licm",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--gvn-hoist",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-matrix-intrinsics",
          "--lowerinvoke",
          "--lcssa",
          "--mergefunc",
          "--separate-const-offset-from-gep",
          "--lower-constant-intrinsics",
          "--coro-early",
          "--strip",
          "--loop-interchange",
          "--coro-cleanup",
          "--aggressive-instcombine",
          "--post-inline-ee-instrument",
          "--callsite-splitting",
          "--constmerge",
          "--tailcallelim",
          "--inferattrs",
          "--always-inline",
          "--indvars",
          "--globaldce",
          "--lower-widenable-condition",
          "--gvn-hoist",
          "--coro-elide",
          "--simple-loop-unswitch",
          "--loop-simplify",
          "--loop-guard-widening",
          "--canonicalize-aliases",
          "--licm",
          "--alignment-from-assumptions",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-matrix-intrinsics",
      "--lowerinvoke",
      "--lcssa",
      "--mergefunc",
      "--separate-const-offset-from-gep",
      "--lower-constant-intrinsics",
      "--coro-early",
      "--strip",
      "--loop-interchange",
      "--coro-cleanup",
      "--aggressive-instcombine",
      "--post-inline-ee-instrument",
      "--callsite-splitting",
      "--constmerge",
      "--tailcallelim",
      "--inferattrs",
      "--always-inline",
      "--indvars",
      "--globaldce",
      "--lower-widenable-condition",
      "--gvn-hoist",
      "--coro-elide",
      "--simple-loop-unswitch",
      "--loop-simplify",
      "--loop-guard-widening",
      "--canonicalize-aliases",
      "--licm",
      "--alignment-from-assumptions",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}