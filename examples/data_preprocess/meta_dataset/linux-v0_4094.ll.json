{
  "program_id": "linux-v0_4094.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 73,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 13,
    "oneSuccessor": 68,
    "twoPred": 18,
    "twoPredOneSuc": 5,
    "twoEach": 7,
    "twoSuccessor": 28,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 126,
    "BeginPhi": 0,
    "BranchCount": 96,
    "returnInt": 23,
    "CriticalCount": 10,
    "NumEdges": 140,
    "const32Bit": 323,
    "const64Bit": 26,
    "numConstZeroes": 137,
    "numConstOnes": 124,
    "UncondBranches": 68,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 96,
    "NumAndInst": 1,
    "BlockMid": 15,
    "BlockLow": 111,
    "NumBitCastInst": 49,
    "NumBrInst": 96,
    "NumCallInst": 65,
    "NumGetElementPtrInst": 95,
    "NumICmpInst": 28,
    "NumLShrInst": 3,
    "NumLoadInst": 258,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 27,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 145,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 4,
    "NumZExtInst": 9,
    "TotalBlocks": 126,
    "TotalInsts": 908,
    "TotalMemInst": 659,
    "TotalFuncs": 46,
    "ArgsPhi": 0,
    "testUnary": 427
  },
  "baseline_oz_instcount": 904,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--newgvn",
    "--memcpyopt",
    "--mergefunc",
    "--ipsccp",
    "--die",
    "--newgvn",
    "--loop-fusion",
    "--instcombine",
    "--lower-expect",
    "--globalopt",
    "--early-cse-memssa",
    "--gvn",
    "--load-store-vectorizer",
    "--mergefunc",
    "--ipsccp",
    "--loop-simplifycfg",
    "--mem2reg",
    "--globalopt",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-guard-intrinsic",
          "--scalarizer",
          "--tailcallelim",
          "--argpromotion",
          "--strip",
          "--loop-simplify",
          "--dce",
          "--libcalls-shrinkwrap",
          "--loop-data-prefetch",
          "--early-cse-memssa",
          "--partial-inliner",
          "--coro-cleanup",
          "--mergefunc",
          "--attributor",
          "--ipsccp",
          "--coro-elide",
          "--instcombine",
          "--sccp",
          "--indvars",
          "--loop-predication",
          "--callsite-splitting",
          "--loop-deletion",
          "--float2int",
          "--mldst-motion",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-guard-intrinsic",
      "--scalarizer",
      "--tailcallelim",
      "--argpromotion",
      "--strip",
      "--loop-simplify",
      "--dce",
      "--libcalls-shrinkwrap",
      "--loop-data-prefetch",
      "--early-cse-memssa",
      "--partial-inliner",
      "--coro-cleanup",
      "--mergefunc",
      "--attributor",
      "--ipsccp",
      "--coro-elide",
      "--instcombine",
      "--sccp",
      "--indvars",
      "--loop-predication",
      "--callsite-splitting",
      "--loop-deletion",
      "--float2int",
      "--mldst-motion",
      "--bdce"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}