{
  "program_id": "linux-v0_8704.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 62,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 20,
    "oneSuccessor": 55,
    "twoPred": 13,
    "twoPredOneSuc": 7,
    "twoEach": 2,
    "twoSuccessor": 25,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 100,
    "BeginPhi": 0,
    "BranchCount": 80,
    "returnInt": 18,
    "CriticalCount": 11,
    "NumEdges": 115,
    "const32Bit": 239,
    "const64Bit": 26,
    "numConstZeroes": 91,
    "numConstOnes": 107,
    "UncondBranches": 55,
    "binaryConstArg": 37,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 78,
    "NumAndInst": 9,
    "BlockMid": 10,
    "BlockLow": 90,
    "NumBitCastInst": 29,
    "NumBrInst": 80,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 59,
    "NumICmpInst": 35,
    "NumLShrInst": 3,
    "NumLoadInst": 188,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 105,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 24,
    "NumZExtInst": 13,
    "TotalBlocks": 100,
    "TotalInsts": 714,
    "TotalMemInst": 481,
    "TotalFuncs": 26,
    "ArgsPhi": 0,
    "testUnary": 326
  },
  "baseline_oz_instcount": 715,
  "knowledge_base_entry": [
    "--sink",
    "--ipsccp",
    "--globaldce",
    "--mergefunc",
    "--aggressive-instcombine",
    "--adce",
    "--early-cse-memssa",
    "--die",
    "--reassociate",
    "--simplifycfg",
    "--mergefunc",
    "--aggressive-instcombine",
    "--adce",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-matrix-intrinsics",
          "--loop-guard-widening",
          "--early-cse",
          "--loop-instsimplify",
          "--rewrite-statepoints-for-gc",
          "--flattencfg",
          "--elim-avail-extern",
          "--add-discriminators",
          "--loop-versioning",
          "--sancov",
          "--strip-debug-declare",
          "--infer-address-spaces",
          "--rpo-functionattrs",
          "--bdce",
          "--mergefunc",
          "--lower-guard-intrinsic",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-matrix-intrinsics",
      "--loop-guard-widening",
      "--early-cse",
      "--loop-instsimplify",
      "--rewrite-statepoints-for-gc",
      "--flattencfg",
      "--elim-avail-extern",
      "--add-discriminators",
      "--loop-versioning",
      "--sancov",
      "--strip-debug-declare",
      "--infer-address-spaces",
      "--rpo-functionattrs",
      "--bdce",
      "--mergefunc",
      "--lower-guard-intrinsic",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}