{
  "program_id": "linux-v0_13421.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 44,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 5,
    "oneSuccessor": 44,
    "twoPred": 14,
    "twoPredOneSuc": 3,
    "twoEach": 6,
    "twoSuccessor": 14,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 78,
    "BeginPhi": 1,
    "BranchCount": 58,
    "returnInt": 30,
    "CriticalCount": 8,
    "NumEdges": 72,
    "const32Bit": 256,
    "const64Bit": 12,
    "numConstZeroes": 80,
    "numConstOnes": 112,
    "UncondBranches": 44,
    "binaryConstArg": 35,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 98,
    "NumAndInst": 12,
    "BlockMid": 13,
    "BlockLow": 66,
    "NumBitCastInst": 13,
    "NumBrInst": 58,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 51,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 193,
    "NumMulInst": 10,
    "NumOrInst": 12,
    "NumPHIInst": 1,
    "NumRetInst": 21,
    "NumSExtInst": 0,
    "NumSelectInst": 3,
    "NumShlInst": 9,
    "NumStoreInst": 113,
    "NumSubInst": 0,
    "NumTruncInst": 13,
    "NumXorInst": 4,
    "NumZExtInst": 47,
    "TotalBlocks": 79,
    "TotalInsts": 738,
    "TotalMemInst": 507,
    "TotalFuncs": 37,
    "ArgsPhi": 2,
    "testUnary": 370
  },
  "baseline_oz_instcount": 738,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--lower-expect",
    "--dce",
    "--inline",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--flattencfg",
    "--aggressive-instcombine",
    "--lower-expect",
    "--newgvn",
    "--bdce",
    "--lower-constant-intrinsics",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--loweratomic",
          "--scalarizer",
          "--instnamer",
          "--coro-split",
          "--jump-threading",
          "--loop-idiom",
          "--pgo-memop-opt",
          "--aggressive-instcombine",
          "--elim-avail-extern",
          "--gvn-hoist",
          "--lower-expect",
          "--nary-reassociate",
          "--strip-nondebug",
          "--loop-reroll",
          "--mergereturn",
          "--ee-instrument",
          "--functionattrs",
          "--canonicalize-aliases",
          "--alignment-from-assumptions",
          "--sroa",
          "--ipsccp",
          "--coro-elide",
          "--name-anon-globals",
          "--forceattrs",
          "--mem2reg",
          "--slp-vectorizer",
          "--indvars",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--loweratomic",
      "--scalarizer",
      "--instnamer",
      "--coro-split",
      "--jump-threading",
      "--loop-idiom",
      "--pgo-memop-opt",
      "--aggressive-instcombine",
      "--elim-avail-extern",
      "--gvn-hoist",
      "--lower-expect",
      "--nary-reassociate",
      "--strip-nondebug",
      "--loop-reroll",
      "--mergereturn",
      "--ee-instrument",
      "--functionattrs",
      "--canonicalize-aliases",
      "--alignment-from-assumptions",
      "--sroa",
      "--ipsccp",
      "--coro-elide",
      "--name-anon-globals",
      "--forceattrs",
      "--mem2reg",
      "--slp-vectorizer",
      "--indvars",
      "--float2int"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}