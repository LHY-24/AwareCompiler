{
  "program_id": "github-v0_14131.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 6,
    "onePred": 86,
    "onePredOneSuc": 62,
    "onePredTwoSuc": 24,
    "oneSuccessor": 76,
    "twoPred": 45,
    "twoPredOneSuc": 10,
    "twoEach": 19,
    "twoSuccessor": 65,
    "morePreds": 10,
    "BB03Phi": 6,
    "BBHiPhi": 0,
    "BBNoPhi": 161,
    "BeginPhi": 6,
    "BranchCount": 141,
    "returnInt": 0,
    "CriticalCount": 44,
    "NumEdges": 206,
    "const32Bit": 130,
    "const64Bit": 3,
    "numConstZeroes": 32,
    "numConstOnes": 99,
    "UncondBranches": 76,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 85,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 164,
    "NumBitCastInst": 0,
    "NumBrInst": 141,
    "NumCallInst": 33,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 65,
    "NumLShrInst": 0,
    "NumLoadInst": 237,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 6,
    "NumRetInst": 26,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 160,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 167,
    "TotalInsts": 761,
    "TotalMemInst": 517,
    "TotalFuncs": 31,
    "ArgsPhi": 12,
    "testUnary": 328
  },
  "baseline_oz_instcount": 766,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--reassociate",
    "--lower-expect",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--jump-threading",
    "--slsr",
    "--nary-reassociate",
    "--early-cse",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--loop-versioning-licm",
          "--loop-simplify",
          "--memcpyopt",
          "--coro-elide",
          "--redundant-dbg-inst-elim",
          "--constprop",
          "--insert-gcov-profiling",
          "--jump-threading",
          "--newgvn",
          "--mergeicmps",
          "--inject-tli-mappings",
          "--lowerswitch",
          "--loop-deletion",
          "--loop-interchange",
          "--always-inline",
          "--attributor",
          "--guard-widening",
          "--loop-load-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--loop-versioning-licm",
      "--loop-simplify",
      "--memcpyopt",
      "--coro-elide",
      "--redundant-dbg-inst-elim",
      "--constprop",
      "--insert-gcov-profiling",
      "--jump-threading",
      "--newgvn",
      "--mergeicmps",
      "--inject-tli-mappings",
      "--lowerswitch",
      "--loop-deletion",
      "--loop-interchange",
      "--always-inline",
      "--attributor",
      "--guard-widening",
      "--loop-load-elim"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}