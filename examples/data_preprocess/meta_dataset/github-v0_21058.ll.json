{
  "program_id": "github-v0_21058.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 11,
    "onePred": 13,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 1,
    "oneSuccessor": 12,
    "twoPred": 12,
    "twoPredOneSuc": 0,
    "twoEach": 11,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 12,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 12,
    "BranchCount": 26,
    "returnInt": 6,
    "CriticalCount": 15,
    "NumEdges": 40,
    "const32Bit": 38,
    "const64Bit": 12,
    "numConstZeroes": 24,
    "numConstOnes": 19,
    "UncondBranches": 12,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 0,
    "NumAndInst": 13,
    "BlockMid": 2,
    "BlockLow": 25,
    "NumBitCastInst": 0,
    "NumBrInst": 26,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 17,
    "NumLShrInst": 4,
    "NumLoadInst": 0,
    "NumMulInst": 8,
    "NumOrInst": 3,
    "NumPHIInst": 17,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 5,
    "NumStoreInst": 1,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 3,
    "NumZExtInst": 13,
    "TotalBlocks": 27,
    "TotalInsts": 180,
    "TotalMemInst": 38,
    "TotalFuncs": 17,
    "ArgsPhi": 35,
    "testUnary": 16
  },
  "baseline_oz_instcount": 177,
  "knowledge_base_entry": [
    "--sroa",
    "--early-cse",
    "--loop-rotate",
    "--gvn-hoist",
    "--die",
    "--sroa",
    "--slp-vectorizer",
    "--early-cse",
    "--dse",
    "--sroa",
    "--licm",
    "--jump-threading",
    "--reassociate",
    "--simplifycfg",
    "--lower-expect",
    "--load-store-vectorizer",
    "--licm",
    "--newgvn",
    "--simplifycfg",
    "--bdce",
    "--sccp",
    "--mem2reg",
    "--newgvn",
    "--instcombine",
    "--load-store-vectorizer",
    "--die",
    "--mem2reg",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--hotcoldsplit",
          "--loop-load-elim",
          "--sccp",
          "--loop-versioning-licm",
          "--die",
          "--instcombine",
          "--libcalls-shrinkwrap",
          "--loop-simplify",
          "--ipsccp",
          "--lowerswitch",
          "--adce",
          "--post-inline-ee-instrument",
          "--redundant-dbg-inst-elim",
          "--lower-widenable-condition",
          "--lower-matrix-intrinsics",
          "--memcpyopt",
          "--loop-reroll",
          "--early-cse-memssa",
          "--inject-tli-mappings",
          "--gvn-hoist",
          "--canonicalize-aliases",
          "--bdce",
          "--name-anon-globals",
          "--div-rem-pairs",
          "--mergereturn",
          "--called-value-propagation",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--hotcoldsplit",
      "--loop-load-elim",
      "--sccp",
      "--loop-versioning-licm",
      "--die",
      "--instcombine",
      "--libcalls-shrinkwrap",
      "--loop-simplify",
      "--ipsccp",
      "--lowerswitch",
      "--adce",
      "--post-inline-ee-instrument",
      "--redundant-dbg-inst-elim",
      "--lower-widenable-condition",
      "--lower-matrix-intrinsics",
      "--memcpyopt",
      "--loop-reroll",
      "--early-cse-memssa",
      "--inject-tli-mappings",
      "--gvn-hoist",
      "--canonicalize-aliases",
      "--bdce",
      "--name-anon-globals",
      "--div-rem-pairs",
      "--mergereturn",
      "--called-value-propagation",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}