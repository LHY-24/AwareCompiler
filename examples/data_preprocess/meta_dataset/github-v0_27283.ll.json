{
  "program_id": "github-v0_27283.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 3,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 6,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 1,
    "CriticalCount": 6,
    "NumEdges": 16,
    "const32Bit": 94,
    "const64Bit": 4,
    "numConstZeroes": 44,
    "numConstOnes": 21,
    "UncondBranches": 4,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 10,
    "NumAndInst": 1,
    "BlockMid": 7,
    "BlockLow": 4,
    "NumBitCastInst": 3,
    "NumBrInst": 10,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 80,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 6,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 11,
    "TotalInsts": 213,
    "TotalMemInst": 158,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 113
  },
  "baseline_oz_instcount": 213,
  "knowledge_base_entry": [
    "--indvars",
    "--slp-vectorizer",
    "--reassociate",
    "--aggressive-instcombine",
    "--die",
    "--loop-instsimplify",
    "--early-cse",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--loop-distribute",
          "--barrier",
          "--loop-guard-widening",
          "--tailcallelim",
          "--sink",
          "--mergereturn",
          "--coro-cleanup",
          "--aggressive-instcombine",
          "--mem2reg",
          "--ipsccp",
          "--canonicalize-aliases",
          "--early-cse",
          "--lower-widenable-condition",
          "--rpo-functionattrs",
          "--instcombine",
          "--loop-unroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--loop-distribute",
      "--barrier",
      "--loop-guard-widening",
      "--tailcallelim",
      "--sink",
      "--mergereturn",
      "--coro-cleanup",
      "--aggressive-instcombine",
      "--mem2reg",
      "--ipsccp",
      "--canonicalize-aliases",
      "--early-cse",
      "--lower-widenable-condition",
      "--rpo-functionattrs",
      "--instcombine",
      "--loop-unroll"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}