{
  "program_id": "linux-v0_11742.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 4,
    "oneSuccessor": 20,
    "twoPred": 19,
    "twoPredOneSuc": 4,
    "twoEach": 13,
    "twoSuccessor": 19,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 8,
    "CriticalCount": 19,
    "NumEdges": 58,
    "const32Bit": 260,
    "const64Bit": 80,
    "numConstZeroes": 169,
    "numConstOnes": 72,
    "UncondBranches": 20,
    "binaryConstArg": 49,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 26,
    "NumAndInst": 13,
    "BlockMid": 10,
    "BlockLow": 34,
    "NumBitCastInst": 16,
    "NumBrInst": 39,
    "NumCallInst": 73,
    "NumGetElementPtrInst": 115,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 120,
    "NumMulInst": 6,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 82,
    "NumSubInst": 17,
    "NumTruncInst": 11,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 44,
    "TotalInsts": 581,
    "TotalMemInst": 416,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 188
  },
  "baseline_oz_instcount": 581,
  "knowledge_base_entry": [
    "--gvn",
    "--loop-rotate",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--dce",
    "--reassociate",
    "-loop-reduce",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--instsimplify",
    "--prune-eh",
    "--jump-threading",
    "--instcombine",
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--prune-eh",
    "--loop-simplifycfg",
    "--flattencfg",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--newgvn",
    "--lower-expect",
    "--sroa",
    "--prune-eh",
    "--jump-threading",
    "--instcombine",
    "--ipsccp",
    "--sroa",
    "--loop-deletion",
    "--gvn-hoist",
    "-loop-reduce",
    "--slp-vectorizer",
    "--die",
    "--loop-simplifycfg",
    "--inline",
    "--sccp",
    "--inline",
    "--sccp",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--dce",
    "--reassociate",
    "-loop-reduce",
    "--mergefunc",
    "--bdce",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mldst-motion",
          "--loop-fusion",
          "--sroa",
          "--post-inline-ee-instrument",
          "--lower-widenable-condition",
          "--aggressive-instcombine",
          "--globalopt",
          "--alignment-from-assumptions",
          "--irce",
          "--constprop",
          "--adce",
          "--sancov",
          "--loop-vectorize",
          "--float2int",
          "--nary-reassociate",
          "--canonicalize-aliases",
          "--loop-unroll",
          "--coro-early",
          "--simple-loop-unswitch",
          "--infer-address-spaces",
          "--loop-unroll-and-jam",
          "--lower-constant-intrinsics",
          "--scalarizer",
          "--loop-load-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mldst-motion",
      "--loop-fusion",
      "--sroa",
      "--post-inline-ee-instrument",
      "--lower-widenable-condition",
      "--aggressive-instcombine",
      "--globalopt",
      "--alignment-from-assumptions",
      "--irce",
      "--constprop",
      "--adce",
      "--sancov",
      "--loop-vectorize",
      "--float2int",
      "--nary-reassociate",
      "--canonicalize-aliases",
      "--loop-unroll",
      "--coro-early",
      "--simple-loop-unswitch",
      "--infer-address-spaces",
      "--loop-unroll-and-jam",
      "--lower-constant-intrinsics",
      "--scalarizer",
      "--loop-load-elim"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}