{
  "program_id": "opencv-v0_137.ll",
  "autophase_features": {
    "BBNumArgsHi": 4,
    "BBNumArgsLo": 3,
    "onePred": 16,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 1,
    "oneSuccessor": 16,
    "twoPred": 13,
    "twoPredOneSuc": 1,
    "twoEach": 8,
    "twoSuccessor": 13,
    "morePreds": 0,
    "BB03Phi": 3,
    "BBHiPhi": 4,
    "BBNoPhi": 28,
    "BeginPhi": 7,
    "BranchCount": 29,
    "returnInt": 0,
    "CriticalCount": 10,
    "NumEdges": 42,
    "const32Bit": 81,
    "const64Bit": 145,
    "numConstZeroes": 68,
    "numConstOnes": 51,
    "UncondBranches": 16,
    "binaryConstArg": 52,
    "NumAShrInst": 0,
    "NumAddInst": 58,
    "NumAllocaInst": 1,
    "NumAndInst": 2,
    "BlockMid": 14,
    "BlockLow": 21,
    "NumBitCastInst": 28,
    "NumBrInst": 29,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 165,
    "NumICmpInst": 15,
    "NumLShrInst": 10,
    "NumLoadInst": 137,
    "NumMulInst": 11,
    "NumOrInst": 1,
    "NumPHIInst": 29,
    "NumRetInst": 6,
    "NumSExtInst": 27,
    "NumSelectInst": 2,
    "NumShlInst": 3,
    "NumStoreInst": 63,
    "NumSubInst": 2,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 28,
    "TotalBlocks": 35,
    "TotalInsts": 636,
    "TotalMemInst": 377,
    "TotalFuncs": 9,
    "ArgsPhi": 58,
    "testUnary": 229
  },
  "baseline_oz_instcount": 632,
  "knowledge_base_entry": [
    "--correlated-propagation",
    "--instcombine",
    "--mldst-motion",
    "--jump-threading",
    "--licm",
    "--mergefunc",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--loop-reroll",
    "--slsr",
    "--instcombine",
    "--mldst-motion",
    "--jump-threading",
    "--licm",
    "--mergefunc",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--adce",
    "--gvn-hoist",
    "--die",
    "--lower-constant-intrinsics",
    "--sroa",
    "--loop-rotate",
    "--sroa",
    "--inline",
    "--mergefunc",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--memcpyopt",
    "--mem2reg",
    "--loop-instsimplify",
    "--nary-reassociate",
    "--indvars",
    "--nary-reassociate",
    "--early-cse",
    "--mldst-motion",
    "--sroa",
    "--inline",
    "--flattencfg",
    "--licm",
    "--dse",
    "--bdce",
    "--inline",
    "--simplifycfg",
    "--bdce",
    "--inline",
    "--early-cse",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--gvn-hoist",
          "--memcpyopt",
          "--insert-gcov-profiling",
          "--canonicalize-aliases",
          "--coro-early",
          "--mergereturn",
          "--cross-dso-cfi",
          "--speculative-execution",
          "--called-value-propagation",
          "--instsimplify",
          "--lower-guard-intrinsic",
          "--loop-simplify",
          "--callsite-splitting",
          "--flattencfg",
          "--loop-unroll",
          "--loop-rotate",
          "--libcalls-shrinkwrap",
          "--slsr",
          "--partial-inliner",
          "--loop-fusion",
          "--indvars",
          "--inline",
          "--loop-idiom",
          "--loop-guard-widening",
          "--newgvn",
          "--dce",
          "--sroa",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--gvn-hoist",
      "--memcpyopt",
      "--insert-gcov-profiling",
      "--canonicalize-aliases",
      "--coro-early",
      "--mergereturn",
      "--cross-dso-cfi",
      "--speculative-execution",
      "--called-value-propagation",
      "--instsimplify",
      "--lower-guard-intrinsic",
      "--loop-simplify",
      "--callsite-splitting",
      "--flattencfg",
      "--loop-unroll",
      "--loop-rotate",
      "--libcalls-shrinkwrap",
      "--slsr",
      "--partial-inliner",
      "--loop-fusion",
      "--indvars",
      "--inline",
      "--loop-idiom",
      "--loop-guard-widening",
      "--newgvn",
      "--dce",
      "--sroa",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}