{
  "program_id": "poj104-v1_50_1112.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 11,
    "oneSuccessor": 6,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 15,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 3,
    "CriticalCount": 17,
    "NumEdges": 36,
    "const32Bit": 26,
    "const64Bit": 0,
    "numConstZeroes": 2,
    "numConstOnes": 4,
    "UncondBranches": 6,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 1,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 24,
    "NumBitCastInst": 0,
    "NumBrInst": 21,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 22,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 7,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 24,
    "TotalInsts": 82,
    "TotalMemInst": 35,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 23
  },
  "baseline_oz_instcount": 41,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--instcombine",
    "--early-cse-memssa",
    "--inline",
    "--loop-instsimplify",
    "--newgvn",
    "--prune-eh",
    "--simplifycfg",
    "--loop-reroll",
    "--instsimplify",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--licm",
    "--die",
    "--inline",
    "--jump-threading",
    "--dce",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--jump-threading",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--lower-guard-intrinsic",
          "--loop-deletion",
          "--gvn",
          "--loop-versioning-licm",
          "--strip-nondebug",
          "--alignment-from-assumptions",
          "--lower-constant-intrinsics",
          "--inline",
          "--partial-inliner",
          "--correlated-propagation",
          "--functionattrs",
          "--add-discriminators",
          "--simplifycfg",
          "--mem2reg",
          "--ipconstprop",
          "--newgvn",
          "--lcssa",
          "--strip",
          "--loop-unswitch",
          "--lower-expect",
          "--loop-data-prefetch",
          "--forceattrs",
          "--elim-avail-extern",
          "--deadargelim",
          "--constprop",
          "--loop-rotate",
          "--speculative-execution"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--lower-guard-intrinsic",
      "--loop-deletion",
      "--gvn",
      "--loop-versioning-licm",
      "--strip-nondebug",
      "--alignment-from-assumptions",
      "--lower-constant-intrinsics",
      "--inline",
      "--partial-inliner",
      "--correlated-propagation",
      "--functionattrs",
      "--add-discriminators",
      "--simplifycfg",
      "--mem2reg",
      "--ipconstprop",
      "--newgvn",
      "--lcssa",
      "--strip",
      "--loop-unswitch",
      "--lower-expect",
      "--loop-data-prefetch",
      "--forceattrs",
      "--elim-avail-extern",
      "--deadargelim",
      "--constprop",
      "--loop-rotate",
      "--speculative-execution"
    ],
    "performance_vs_Oz": "+2.4%"
  }
}