{
  "program_id": "linux-v0_2796.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 7,
    "oneSuccessor": 39,
    "twoPred": 17,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 19,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 70,
    "BeginPhi": 0,
    "BranchCount": 56,
    "returnInt": 4,
    "CriticalCount": 14,
    "NumEdges": 88,
    "const32Bit": 224,
    "const64Bit": 13,
    "numConstZeroes": 94,
    "numConstOnes": 64,
    "UncondBranches": 37,
    "binaryConstArg": 34,
    "NumAShrInst": 1,
    "NumAddInst": 6,
    "NumAllocaInst": 41,
    "NumAndInst": 9,
    "BlockMid": 7,
    "BlockLow": 63,
    "NumBitCastInst": 8,
    "NumBrInst": 56,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 65,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 158,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 72,
    "NumSubInst": 4,
    "NumTruncInst": 6,
    "NumXorInst": 9,
    "NumZExtInst": 29,
    "TotalBlocks": 70,
    "TotalInsts": 540,
    "TotalMemInst": 364,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 246
  },
  "baseline_oz_instcount": 538,
  "knowledge_base_entry": [
    "--sroa",
    "--globalopt",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--dse",
    "--loop-simplifycfg",
    "--globalopt",
    "--jump-threading",
    "--prune-eh",
    "--sroa",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--ipsccp",
    "--aggressive-instcombine",
    "--gvn",
    "--loop-reroll",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--bdce",
    "--jump-threading",
    "--slsr",
    "--gvn",
    "--loop-deletion",
    "--mem2reg",
    "--inline",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--redundant-dbg-inst-elim",
          "--simplifycfg",
          "--always-inline",
          "--loop-guard-widening",
          "--mergefunc",
          "--barrier",
          "--lcssa",
          "--guard-widening",
          "--aggressive-instcombine",
          "--mem2reg",
          "--flattencfg",
          "--prune-eh",
          "--ipsccp",
          "--instnamer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--redundant-dbg-inst-elim",
      "--simplifycfg",
      "--always-inline",
      "--loop-guard-widening",
      "--mergefunc",
      "--barrier",
      "--lcssa",
      "--guard-widening",
      "--aggressive-instcombine",
      "--mem2reg",
      "--flattencfg",
      "--prune-eh",
      "--ipsccp",
      "--instnamer"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}