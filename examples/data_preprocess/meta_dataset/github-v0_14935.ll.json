{
  "program_id": "github-v0_14935.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 73,
    "onePredOneSuc": 69,
    "onePredTwoSuc": 1,
    "oneSuccessor": 73,
    "twoPred": 27,
    "twoPredOneSuc": 1,
    "twoEach": 26,
    "twoSuccessor": 27,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 103,
    "BeginPhi": 0,
    "BranchCount": 100,
    "returnInt": 1,
    "CriticalCount": 4,
    "NumEdges": 127,
    "const32Bit": 213,
    "const64Bit": 13,
    "numConstZeroes": 29,
    "numConstOnes": 91,
    "UncondBranches": 73,
    "binaryConstArg": 100,
    "NumAShrInst": 0,
    "NumAddInst": 53,
    "NumAllocaInst": 40,
    "NumAndInst": 0,
    "BlockMid": 20,
    "BlockLow": 83,
    "NumBitCastInst": 0,
    "NumBrInst": 100,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 81,
    "NumICmpInst": 27,
    "NumLShrInst": 0,
    "NumLoadInst": 212,
    "NumMulInst": 78,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 43,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 134,
    "NumSubInst": 3,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 20,
    "TotalBlocks": 103,
    "TotalInsts": 805,
    "TotalMemInst": 469,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 324
  },
  "baseline_oz_instcount": 805,
  "knowledge_base_entry": [
    "--early-cse",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--reassociate",
    "--slsr",
    "--gvn",
    "--globalopt",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--dce",
    "--elim-avail-extern",
    "--loop-deletion",
    "--instcombine",
    "--simplifycfg",
    "--instsimplify",
    "--die",
    "--inline",
    "--loop-simplifycfg",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--constprop",
          "--strip-nondebug",
          "--loop-data-prefetch",
          "--callsite-splitting",
          "--instnamer",
          "--aggressive-instcombine",
          "--post-inline-ee-instrument",
          "--flattencfg",
          "--loop-rotate",
          "--loop-simplify",
          "--functionattrs",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--constprop",
      "--strip-nondebug",
      "--loop-data-prefetch",
      "--callsite-splitting",
      "--instnamer",
      "--aggressive-instcombine",
      "--post-inline-ee-instrument",
      "--flattencfg",
      "--loop-rotate",
      "--loop-simplify",
      "--functionattrs",
      "--strip"
    ],
    "performance_vs_Oz": "+3.0%"
  }
}