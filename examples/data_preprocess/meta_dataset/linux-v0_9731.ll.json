{
  "program_id": "linux-v0_9731.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 54,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 13,
    "oneSuccessor": 51,
    "twoPred": 16,
    "twoPredOneSuc": 9,
    "twoEach": 4,
    "twoSuccessor": 20,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 79,
    "BeginPhi": 1,
    "BranchCount": 71,
    "returnInt": 11,
    "CriticalCount": 14,
    "NumEdges": 101,
    "const32Bit": 106,
    "const64Bit": 11,
    "numConstZeroes": 45,
    "numConstOnes": 69,
    "UncondBranches": 51,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 45,
    "NumAndInst": 6,
    "BlockMid": 5,
    "BlockLow": 75,
    "NumBitCastInst": 22,
    "NumBrInst": 71,
    "NumCallInst": 30,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 27,
    "NumLShrInst": 0,
    "NumLoadInst": 108,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 7,
    "NumSExtInst": 19,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 67,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 18,
    "NumZExtInst": 11,
    "TotalBlocks": 80,
    "TotalInsts": 448,
    "TotalMemInst": 258,
    "TotalFuncs": 20,
    "ArgsPhi": 2,
    "testUnary": 209
  },
  "baseline_oz_instcount": 448,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--jump-threading",
    "--mergefunc",
    "--instcombine",
    "--dce",
    "--gvn-hoist",
    "--nary-reassociate",
    "--newgvn",
    "--dse",
    "--inline",
    "--nary-reassociate",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipconstprop",
          "--strip",
          "--lower-expect",
          "--indvars",
          "--loop-rotate",
          "--canonicalize-aliases",
          "--newgvn",
          "--constprop",
          "--mergefunc",
          "--loop-simplifycfg",
          "--loop-instsimplify",
          "--sink",
          "--insert-gcov-profiling",
          "--instcombine",
          "-loop-reduce",
          "--loop-load-elim",
          "--functionattrs",
          "--argpromotion",
          "--mldst-motion",
          "--loop-versioning-licm",
          "--mergereturn",
          "--loop-unroll",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipconstprop",
      "--strip",
      "--lower-expect",
      "--indvars",
      "--loop-rotate",
      "--canonicalize-aliases",
      "--newgvn",
      "--constprop",
      "--mergefunc",
      "--loop-simplifycfg",
      "--loop-instsimplify",
      "--sink",
      "--insert-gcov-profiling",
      "--instcombine",
      "-loop-reduce",
      "--loop-load-elim",
      "--functionattrs",
      "--argpromotion",
      "--mldst-motion",
      "--loop-versioning-licm",
      "--mergereturn",
      "--loop-unroll",
      "--dce"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}