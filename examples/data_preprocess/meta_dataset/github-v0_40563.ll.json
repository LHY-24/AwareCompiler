{
  "program_id": "github-v0_40563.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 36,
    "const64Bit": 40,
    "numConstZeroes": 42,
    "numConstOnes": 23,
    "UncondBranches": 15,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 13,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 23,
    "NumBitCastInst": 4,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 21,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 1,
    "NumZExtInst": 11,
    "TotalBlocks": 27,
    "TotalInsts": 185,
    "TotalMemInst": 114,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 78
  },
  "baseline_oz_instcount": 185,
  "knowledge_base_entry": [
    "--bdce",
    "--licm",
    "--mergefunc",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--instsimplify",
    "--early-cse",
    "--memcpyopt",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--newgvn",
    "--loop-deletion",
    "--gvn-hoist",
    "--sccp",
    "--reassociate",
    "--aggressive-instcombine",
    "--loweratomic",
    "--globalopt",
    "--instcombine",
    "--early-cse",
    "--ipsccp",
    "--newgvn",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--sroa",
    "--instcombine",
    "--mem2reg",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--coro-early",
          "--loop-vectorize",
          "--partially-inline-libcalls",
          "--lcssa",
          "--canonicalize-aliases",
          "--globaldce",
          "--mergefunc",
          "--inferattrs",
          "--consthoist",
          "--loop-simplify",
          "--indvars",
          "--constmerge",
          "--loop-sink",
          "--prune-eh",
          "--callsite-splitting",
          "--sccp",
          "--loweratomic",
          "--coro-elide",
          "--sancov",
          "--loop-instsimplify",
          "--name-anon-globals",
          "--ipsccp",
          "--loop-idiom",
          "--called-value-propagation",
          "--loop-guard-widening",
          "--redundant-dbg-inst-elim",
          "--speculative-execution",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--coro-early",
      "--loop-vectorize",
      "--partially-inline-libcalls",
      "--lcssa",
      "--canonicalize-aliases",
      "--globaldce",
      "--mergefunc",
      "--inferattrs",
      "--consthoist",
      "--loop-simplify",
      "--indvars",
      "--constmerge",
      "--loop-sink",
      "--prune-eh",
      "--callsite-splitting",
      "--sccp",
      "--loweratomic",
      "--coro-elide",
      "--sancov",
      "--loop-instsimplify",
      "--name-anon-globals",
      "--ipsccp",
      "--loop-idiom",
      "--called-value-propagation",
      "--loop-guard-widening",
      "--redundant-dbg-inst-elim",
      "--speculative-execution",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+2.2%"
  }
}