{
  "program_id": "github-v0_49312.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 0,
    "oneSuccessor": 27,
    "twoPred": 7,
    "twoPredOneSuc": 6,
    "twoEach": 1,
    "twoSuccessor": 1,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 0,
    "CriticalCount": 7,
    "NumEdges": 38,
    "const32Bit": 29,
    "const64Bit": 188,
    "numConstZeroes": 9,
    "numConstOnes": 21,
    "UncondBranches": 27,
    "binaryConstArg": 138,
    "NumAShrInst": 0,
    "NumAddInst": 32,
    "NumAllocaInst": 14,
    "NumAndInst": 1,
    "BlockMid": 11,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 28,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 1,
    "NumLShrInst": 58,
    "NumLoadInst": 339,
    "NumMulInst": 0,
    "NumOrInst": 76,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 76,
    "NumStoreInst": 152,
    "NumSubInst": 1,
    "NumTruncInst": 17,
    "NumXorInst": 44,
    "NumZExtInst": 31,
    "TotalBlocks": 30,
    "TotalInsts": 927,
    "TotalMemInst": 559,
    "TotalFuncs": 1,
    "ArgsPhi": 0,
    "testUnary": 401
  },
  "baseline_oz_instcount": 927,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--licm",
    "--adce",
    "--loop-instsimplify",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--ipconstprop",
          "--slp-vectorizer",
          "--correlated-propagation",
          "--loop-load-elim",
          "--instcombine",
          "--partially-inline-libcalls",
          "--called-value-propagation",
          "--functionattrs",
          "--aggressive-instcombine",
          "--tailcallelim",
          "--constprop",
          "--coro-early",
          "--lcssa",
          "--inject-tli-mappings",
          "--callsite-splitting",
          "--newgvn",
          "--jump-threading",
          "--instsimplify",
          "--loop-simplify",
          "--rewrite-statepoints-for-gc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--ipconstprop",
      "--slp-vectorizer",
      "--correlated-propagation",
      "--loop-load-elim",
      "--instcombine",
      "--partially-inline-libcalls",
      "--called-value-propagation",
      "--functionattrs",
      "--aggressive-instcombine",
      "--tailcallelim",
      "--constprop",
      "--coro-early",
      "--lcssa",
      "--inject-tli-mappings",
      "--callsite-splitting",
      "--newgvn",
      "--jump-threading",
      "--instsimplify",
      "--loop-simplify",
      "--rewrite-statepoints-for-gc"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}