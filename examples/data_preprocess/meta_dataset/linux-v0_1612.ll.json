{
  "program_id": "linux-v0_1612.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 57,
    "onePredOneSuc": 44,
    "onePredTwoSuc": 12,
    "oneSuccessor": 52,
    "twoPred": 23,
    "twoPredOneSuc": 3,
    "twoEach": 13,
    "twoSuccessor": 30,
    "morePreds": 2,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 3,
    "BranchCount": 82,
    "returnInt": 17,
    "CriticalCount": 7,
    "NumEdges": 112,
    "const32Bit": 223,
    "const64Bit": 15,
    "numConstZeroes": 113,
    "numConstOnes": 98,
    "UncondBranches": 52,
    "binaryConstArg": 24,
    "NumAShrInst": 1,
    "NumAddInst": 7,
    "NumAllocaInst": 56,
    "NumAndInst": 7,
    "BlockMid": 8,
    "BlockLow": 89,
    "NumBitCastInst": 0,
    "NumBrInst": 82,
    "NumCallInst": 80,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 34,
    "NumLShrInst": 1,
    "NumLoadInst": 184,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 3,
    "NumRetInst": 15,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 8,
    "NumStoreInst": 85,
    "NumSubInst": 2,
    "NumTruncInst": 9,
    "NumXorInst": 3,
    "NumZExtInst": 22,
    "TotalBlocks": 97,
    "TotalInsts": 640,
    "TotalMemInst": 439,
    "TotalFuncs": 17,
    "ArgsPhi": 6,
    "testUnary": 271
  },
  "baseline_oz_instcount": 641,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--loweratomic"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loweratomic",
          "--loop-simplifycfg",
          "--post-inline-ee-instrument",
          "--partial-inliner",
          "--mem2reg",
          "--mergereturn",
          "--loop-idiom",
          "--lowerinvoke",
          "--strip-dead-prototypes",
          "--ipsccp",
          "--aggressive-instcombine",
          "--alignment-from-assumptions",
          "--forceattrs",
          "--coro-cleanup",
          "--infer-address-spaces",
          "--loop-load-elim",
          "--lower-constant-intrinsics",
          "--load-store-vectorizer",
          "--loop-instsimplify",
          "--always-inline",
          "--sccp",
          "--globalopt",
          "--dce",
          "--loop-unroll",
          "--name-anon-globals",
          "--instcombine",
          "--loop-versioning-licm",
          "--argpromotion",
          "--loop-unswitch",
          "--sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loweratomic",
      "--loop-simplifycfg",
      "--post-inline-ee-instrument",
      "--partial-inliner",
      "--mem2reg",
      "--mergereturn",
      "--loop-idiom",
      "--lowerinvoke",
      "--strip-dead-prototypes",
      "--ipsccp",
      "--aggressive-instcombine",
      "--alignment-from-assumptions",
      "--forceattrs",
      "--coro-cleanup",
      "--infer-address-spaces",
      "--loop-load-elim",
      "--lower-constant-intrinsics",
      "--load-store-vectorizer",
      "--loop-instsimplify",
      "--always-inline",
      "--sccp",
      "--globalopt",
      "--dce",
      "--loop-unroll",
      "--name-anon-globals",
      "--instcombine",
      "--loop-versioning-licm",
      "--argpromotion",
      "--loop-unswitch",
      "--sink"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}