{
  "program_id": "linux-v0_10009.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 5,
    "oneSuccessor": 9,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 35,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 15,
    "CriticalCount": 3,
    "NumEdges": 23,
    "const32Bit": 185,
    "const64Bit": 13,
    "numConstZeroes": 85,
    "numConstOnes": 57,
    "UncondBranches": 9,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 42,
    "NumAndInst": 1,
    "BlockMid": 7,
    "BlockLow": 28,
    "NumBitCastInst": 28,
    "NumBrInst": 16,
    "NumCallInst": 47,
    "NumGetElementPtrInst": 59,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 103,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 65,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 35,
    "TotalInsts": 408,
    "TotalMemInst": 316,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 189
  },
  "baseline_oz_instcount": 409,
  "knowledge_base_entry": [
    "--sroa",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--inline",
    "--sroa",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--dse",
    "--dse",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--globalopt",
          "--aggressive-instcombine",
          "--ipsccp",
          "--called-value-propagation",
          "--redundant-dbg-inst-elim",
          "--sink",
          "--strip",
          "--adce",
          "--irce",
          "--post-inline-ee-instrument",
          "--infer-address-spaces",
          "--loop-unswitch",
          "--loweratomic",
          "--cross-dso-cfi",
          "--loop-simplify",
          "--loop-distribute",
          "--name-anon-globals",
          "--inferattrs",
          "--memcpyopt",
          "--scalarizer",
          "--loop-predication",
          "--globalsplit",
          "--coro-elide",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--globalopt",
      "--aggressive-instcombine",
      "--ipsccp",
      "--called-value-propagation",
      "--redundant-dbg-inst-elim",
      "--sink",
      "--strip",
      "--adce",
      "--irce",
      "--post-inline-ee-instrument",
      "--infer-address-spaces",
      "--loop-unswitch",
      "--loweratomic",
      "--cross-dso-cfi",
      "--loop-simplify",
      "--loop-distribute",
      "--name-anon-globals",
      "--inferattrs",
      "--memcpyopt",
      "--scalarizer",
      "--loop-predication",
      "--globalsplit",
      "--coro-elide",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}