{
  "program_id": "github-v0_46710.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 8,
    "oneSuccessor": 21,
    "twoPred": 15,
    "twoPredOneSuc": 7,
    "twoEach": 4,
    "twoSuccessor": 15,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 47,
    "BeginPhi": 0,
    "BranchCount": 36,
    "returnInt": 11,
    "CriticalCount": 9,
    "NumEdges": 56,
    "const32Bit": 55,
    "const64Bit": 9,
    "numConstZeroes": 11,
    "numConstOnes": 19,
    "UncondBranches": 21,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 47,
    "NumBitCastInst": 7,
    "NumBrInst": 36,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 49,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 47,
    "TotalInsts": 215,
    "TotalMemInst": 127,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 72
  },
  "baseline_oz_instcount": 215,
  "knowledge_base_entry": [
    "--jump-threading",
    "--mergefunc",
    "--globaldce",
    "--ipsccp",
    "--dce",
    "--sroa",
    "--early-cse",
    "--correlated-propagation",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--early-cse",
    "--sroa",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--nary-reassociate",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--newgvn",
    "--globalopt",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-split",
          "--lower-widenable-condition",
          "--functionattrs",
          "--cross-dso-cfi",
          "--consthoist",
          "--strip-debug-declare",
          "--slp-vectorizer",
          "--lowerinvoke",
          "--forceattrs",
          "--constmerge",
          "--ipsccp",
          "--attributor",
          "--loop-distribute",
          "--reassociate",
          "--pgo-memop-opt",
          "--libcalls-shrinkwrap",
          "--ipconstprop",
          "--adce",
          "--ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-split",
      "--lower-widenable-condition",
      "--functionattrs",
      "--cross-dso-cfi",
      "--consthoist",
      "--strip-debug-declare",
      "--slp-vectorizer",
      "--lowerinvoke",
      "--forceattrs",
      "--constmerge",
      "--ipsccp",
      "--attributor",
      "--loop-distribute",
      "--reassociate",
      "--pgo-memop-opt",
      "--libcalls-shrinkwrap",
      "--ipconstprop",
      "--adce",
      "--ee-instrument"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}