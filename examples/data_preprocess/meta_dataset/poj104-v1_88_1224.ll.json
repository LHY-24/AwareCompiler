{
  "program_id": "poj104-v1_88_1224.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 4,
    "oneSuccessor": 11,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 9,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 6,
    "NumEdges": 29,
    "const32Bit": 34,
    "const64Bit": 26,
    "numConstZeroes": 22,
    "numConstOnes": 21,
    "UncondBranches": 11,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 29,
    "NumBitCastInst": 11,
    "NumBrInst": 20,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 37,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 17,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 31,
    "TotalInsts": 180,
    "TotalMemInst": 113,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 77
  },
  "baseline_oz_instcount": 64,
  "knowledge_base_entry": [
    "--lower-expect",
    "--elim-avail-extern",
    "--flattencfg",
    "--instcombine",
    "--loop-reroll",
    "--gvn",
    "--slsr",
    "-loop-reduce",
    "--simplifycfg",
    "--gvn",
    "--loop-reroll",
    "--sroa",
    "--licm",
    "--slp-vectorizer",
    "--dce",
    "--correlated-propagation",
    "--jump-threading",
    "--slp-vectorizer",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--die",
    "--mergefunc",
    "--early-cse",
    "--sccp",
    "--inline",
    "--jump-threading",
    "--slsr",
    "--gvn",
    "--mldst-motion",
    "--elim-avail-extern",
    "--mldst-motion",
    "--simplifycfg",
    "--sroa",
    "--licm",
    "--slp-vectorizer",
    "--dce",
    "--correlated-propagation",
    "--adce",
    "--mem2reg",
    "--gvn",
    "--simplifycfg",
    "--lower-expect",
    "--elim-avail-extern",
    "--flattencfg",
    "--instcombine",
    "--loop-reroll",
    "--gvn",
    "--lower-constant-intrinsics",
    "--die",
    "--mergefunc",
    "--early-cse",
    "--sccp",
    "--inline",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globaldce",
          "--loop-instsimplify",
          "--constprop",
          "--elim-avail-extern",
          "--partially-inline-libcalls",
          "--globalopt",
          "--loop-load-elim",
          "--lowerinvoke",
          "--loop-idiom",
          "--loop-interchange",
          "--mem2reg",
          "--early-cse-memssa",
          "--lower-guard-intrinsic",
          "--mergeicmps",
          "--attributor",
          "--redundant-dbg-inst-elim",
          "--strip-dead-prototypes",
          "--functionattrs",
          "--lcssa",
          "--slsr",
          "--strip-debug-declare",
          "--called-value-propagation",
          "--scalarizer",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+15.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globaldce",
      "--loop-instsimplify",
      "--constprop",
      "--elim-avail-extern",
      "--partially-inline-libcalls",
      "--globalopt",
      "--loop-load-elim",
      "--lowerinvoke",
      "--loop-idiom",
      "--loop-interchange",
      "--mem2reg",
      "--early-cse-memssa",
      "--lower-guard-intrinsic",
      "--mergeicmps",
      "--attributor",
      "--redundant-dbg-inst-elim",
      "--strip-dead-prototypes",
      "--functionattrs",
      "--lcssa",
      "--slsr",
      "--strip-debug-declare",
      "--called-value-propagation",
      "--scalarizer",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+15.6%"
  }
}