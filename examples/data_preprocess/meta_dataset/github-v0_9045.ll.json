{
  "program_id": "github-v0_9045.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 0,
    "oneSuccessor": 4,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 4,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 8,
    "const32Bit": 31,
    "const64Bit": 0,
    "numConstZeroes": 1,
    "numConstOnes": 28,
    "UncondBranches": 4,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 27,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 20,
    "NumBitCastInst": 4,
    "NumBrInst": 4,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 20,
    "TotalInsts": 80,
    "TotalMemInst": 56,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 46
  },
  "baseline_oz_instcount": 80,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--dse",
    "--nary-reassociate",
    "--simplifycfg",
    "--loop-reroll",
    "--instsimplify",
    "--adce",
    "--loop-simplifycfg",
    "--globalopt",
    "--reassociate",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--loop-simplify",
          "--infer-address-spaces",
          "--attributor",
          "--flattencfg",
          "--loop-predication",
          "--loweratomic",
          "--mergefunc",
          "--sccp",
          "--licm",
          "--slsr",
          "--strip-nondebug",
          "--speculative-execution",
          "--globalsplit",
          "--load-store-vectorizer",
          "-loop-reduce",
          "--loop-versioning",
          "--break-crit-edges",
          "--lower-expect"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--loop-simplify",
      "--infer-address-spaces",
      "--attributor",
      "--flattencfg",
      "--loop-predication",
      "--loweratomic",
      "--mergefunc",
      "--sccp",
      "--licm",
      "--slsr",
      "--strip-nondebug",
      "--speculative-execution",
      "--globalsplit",
      "--load-store-vectorizer",
      "-loop-reduce",
      "--loop-versioning",
      "--break-crit-edges",
      "--lower-expect"
    ],
    "performance_vs_Oz": "+11.2%"
  }
}