{
  "program_id": "linux-v0_1656.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 61,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 15,
    "oneSuccessor": 53,
    "twoPred": 18,
    "twoPredOneSuc": 6,
    "twoEach": 5,
    "twoSuccessor": 29,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 120,
    "BeginPhi": 0,
    "BranchCount": 82,
    "returnInt": 31,
    "CriticalCount": 14,
    "NumEdges": 116,
    "const32Bit": 424,
    "const64Bit": 9,
    "numConstZeroes": 189,
    "numConstOnes": 144,
    "UncondBranches": 53,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 115,
    "NumAndInst": 1,
    "BlockMid": 13,
    "BlockLow": 107,
    "NumBitCastInst": 35,
    "NumBrInst": 82,
    "NumCallInst": 92,
    "NumGetElementPtrInst": 115,
    "NumICmpInst": 30,
    "NumLShrInst": 1,
    "NumLoadInst": 267,
    "NumMulInst": 5,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 37,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 152,
    "NumSubInst": 5,
    "NumTruncInst": 6,
    "NumXorInst": 9,
    "NumZExtInst": 9,
    "TotalBlocks": 120,
    "TotalInsts": 986,
    "TotalMemInst": 741,
    "TotalFuncs": 69,
    "ArgsPhi": 0,
    "testUnary": 442
  },
  "baseline_oz_instcount": 987,
  "knowledge_base_entry": [
    "--instcombine",
    "--simplifycfg",
    "--gvn",
    "--early-cse",
    "--mergefunc",
    "--dse",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--strip",
          "--correlated-propagation",
          "--always-inline",
          "--instnamer",
          "--mergereturn",
          "--strip-debug-declare",
          "--callsite-splitting",
          "--mergefunc",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--strip",
      "--correlated-propagation",
      "--always-inline",
      "--instnamer",
      "--mergereturn",
      "--strip-debug-declare",
      "--callsite-splitting",
      "--mergefunc",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}