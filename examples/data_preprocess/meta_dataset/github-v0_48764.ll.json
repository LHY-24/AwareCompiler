{
  "program_id": "github-v0_48764.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 12,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 26,
    "const32Bit": 38,
    "const64Bit": 29,
    "numConstZeroes": 38,
    "numConstOnes": 20,
    "UncondBranches": 12,
    "binaryConstArg": 11,
    "NumAShrInst": 3,
    "NumAddInst": 6,
    "NumAllocaInst": 11,
    "NumAndInst": 3,
    "BlockMid": 3,
    "BlockLow": 20,
    "NumBitCastInst": 0,
    "NumBrInst": 19,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 23,
    "TotalInsts": 146,
    "TotalMemInst": 80,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 60
  },
  "baseline_oz_instcount": 146,
  "knowledge_base_entry": [
    "--loop-deletion",
    "--sccp",
    "--mem2reg",
    "--inline",
    "--mldst-motion",
    "--elim-avail-extern",
    "--instsimplify",
    "--ipsccp",
    "--newgvn",
    "--early-cse",
    "--loop-fusion",
    "--early-cse-memssa",
    "--slsr",
    "-loop-reduce",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--gvn",
    "--indvars",
    "--early-cse",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--slsr",
    "-loop-reduce",
    "--newgvn",
    "--mldst-motion",
    "--elim-avail-extern",
    "--loop-rotate",
    "--mem2reg",
    "--slp-vectorizer",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--early-cse",
    "--slp-vectorizer",
    "--gvn",
    "--aggressive-instcombine",
    "--bdce",
    "--mergefunc",
    "--flattencfg",
    "--aggressive-instcombine",
    "--lower-expect",
    "--early-cse",
    "--adce",
    "--dce",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--instsimplify",
    "--dse",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip",
          "--always-inline",
          "--partially-inline-libcalls",
          "--simplifycfg",
          "--loop-versioning-licm",
          "--pgo-memop-opt",
          "--loop-data-prefetch",
          "--loop-sink",
          "--sink",
          "--aggressive-instcombine",
          "--insert-gcov-profiling",
          "--attributor",
          "--memcpyopt",
          "--partial-inliner",
          "--loop-idiom",
          "--rewrite-statepoints-for-gc",
          "--loop-load-elim",
          "--loop-unswitch",
          "--constprop",
          "--coro-split",
          "--slsr",
          "--globalsplit",
          "--mergefunc",
          "--barrier",
          "--float2int",
          "--loop-simplifycfg",
          "--lower-expect",
          "--hotcoldsplit",
          "--lower-constant-intrinsics",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip",
      "--always-inline",
      "--partially-inline-libcalls",
      "--simplifycfg",
      "--loop-versioning-licm",
      "--pgo-memop-opt",
      "--loop-data-prefetch",
      "--loop-sink",
      "--sink",
      "--aggressive-instcombine",
      "--insert-gcov-profiling",
      "--attributor",
      "--memcpyopt",
      "--partial-inliner",
      "--loop-idiom",
      "--rewrite-statepoints-for-gc",
      "--loop-load-elim",
      "--loop-unswitch",
      "--constprop",
      "--coro-split",
      "--slsr",
      "--globalsplit",
      "--mergefunc",
      "--barrier",
      "--float2int",
      "--loop-simplifycfg",
      "--lower-expect",
      "--hotcoldsplit",
      "--lower-constant-intrinsics",
      "--instcombine"
    ],
    "performance_vs_Oz": "+8.9%"
  }
}