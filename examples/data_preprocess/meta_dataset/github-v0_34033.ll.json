{
  "program_id": "github-v0_34033.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 10,
    "oneSuccessor": 50,
    "twoPred": 21,
    "twoPredOneSuc": 4,
    "twoEach": 13,
    "twoSuccessor": 27,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 87,
    "BeginPhi": 0,
    "BranchCount": 77,
    "returnInt": 3,
    "CriticalCount": 6,
    "NumEdges": 104,
    "const32Bit": 218,
    "const64Bit": 3,
    "numConstZeroes": 100,
    "numConstOnes": 69,
    "UncondBranches": 50,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 40,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 76,
    "NumBitCastInst": 11,
    "NumBrInst": 77,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 206,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 85,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 87,
    "TotalInsts": 586,
    "TotalMemInst": 436,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 269
  },
  "baseline_oz_instcount": 588,
  "knowledge_base_entry": [
    "--newgvn",
    "--elim-avail-extern",
    "--early-cse",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--sccp",
          "--constmerge",
          "--aggressive-instcombine",
          "--inject-tli-mappings",
          "--canonicalize-aliases",
          "--inferattrs",
          "--lower-widenable-condition",
          "--strip-nondebug",
          "--constprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--sccp",
      "--constmerge",
      "--aggressive-instcombine",
      "--inject-tli-mappings",
      "--canonicalize-aliases",
      "--inferattrs",
      "--lower-widenable-condition",
      "--strip-nondebug",
      "--constprop"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}