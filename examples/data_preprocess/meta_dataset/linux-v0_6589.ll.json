{
  "program_id": "linux-v0_6589.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 60,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 22,
    "oneSuccessor": 47,
    "twoPred": 18,
    "twoPredOneSuc": 9,
    "twoEach": 9,
    "twoSuccessor": 33,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 87,
    "BeginPhi": 1,
    "BranchCount": 80,
    "returnInt": 12,
    "CriticalCount": 8,
    "NumEdges": 113,
    "const32Bit": 129,
    "const64Bit": 41,
    "numConstZeroes": 18,
    "numConstOnes": 85,
    "UncondBranches": 47,
    "binaryConstArg": 68,
    "NumAShrInst": 8,
    "NumAddInst": 29,
    "NumAllocaInst": 47,
    "NumAndInst": 13,
    "BlockMid": 11,
    "BlockLow": 77,
    "NumBitCastInst": 2,
    "NumBrInst": 80,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 37,
    "NumLShrInst": 7,
    "NumLoadInst": 192,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 8,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 112,
    "NumSubInst": 17,
    "NumTruncInst": 6,
    "NumXorInst": 1,
    "NumZExtInst": 22,
    "TotalBlocks": 88,
    "TotalInsts": 646,
    "TotalMemInst": 395,
    "TotalFuncs": 11,
    "ArgsPhi": 2,
    "testUnary": 278
  },
  "baseline_oz_instcount": 646,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--aggressive-instcombine",
    "--instcombine",
    "--loop-simplifycfg",
    "--ipsccp",
    "--loweratomic"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--nary-reassociate",
          "--add-discriminators",
          "--elim-avail-extern",
          "--cross-dso-cfi",
          "--aggressive-instcombine",
          "--partial-inliner",
          "--loweratomic",
          "--mem2reg",
          "--lower-expect",
          "--guard-widening",
          "--loop-reroll",
          "--redundant-dbg-inst-elim",
          "--lowerswitch",
          "--globalopt",
          "--canonicalize-aliases",
          "--always-inline",
          "--inline",
          "--loop-unroll-and-jam",
          "--loop-simplifycfg",
          "--newgvn",
          "--mergefunc",
          "--strip-debug-declare",
          "--bdce",
          "--separate-const-offset-from-gep",
          "--barrier",
          "--lowerinvoke",
          "--ipconstprop",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--nary-reassociate",
      "--add-discriminators",
      "--elim-avail-extern",
      "--cross-dso-cfi",
      "--aggressive-instcombine",
      "--partial-inliner",
      "--loweratomic",
      "--mem2reg",
      "--lower-expect",
      "--guard-widening",
      "--loop-reroll",
      "--redundant-dbg-inst-elim",
      "--lowerswitch",
      "--globalopt",
      "--canonicalize-aliases",
      "--always-inline",
      "--inline",
      "--loop-unroll-and-jam",
      "--loop-simplifycfg",
      "--newgvn",
      "--mergefunc",
      "--strip-debug-declare",
      "--bdce",
      "--separate-const-offset-from-gep",
      "--barrier",
      "--lowerinvoke",
      "--ipconstprop",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}