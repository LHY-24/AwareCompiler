{
  "program_id": "linux-v0_7041.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 66,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 13,
    "oneSuccessor": 63,
    "twoPred": 18,
    "twoPredOneSuc": 9,
    "twoEach": 5,
    "twoSuccessor": 23,
    "morePreds": 5,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 112,
    "BeginPhi": 2,
    "BranchCount": 86,
    "returnInt": 24,
    "CriticalCount": 18,
    "NumEdges": 124,
    "const32Bit": 442,
    "const64Bit": 26,
    "numConstZeroes": 200,
    "numConstOnes": 143,
    "UncondBranches": 63,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 101,
    "NumAndInst": 6,
    "BlockMid": 13,
    "BlockLow": 101,
    "NumBitCastInst": 38,
    "NumBrInst": 86,
    "NumCallInst": 81,
    "NumGetElementPtrInst": 138,
    "NumICmpInst": 28,
    "NumLShrInst": 2,
    "NumLoadInst": 282,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 2,
    "NumRetInst": 25,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 136,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 6,
    "NumZExtInst": 7,
    "TotalBlocks": 114,
    "TotalInsts": 966,
    "TotalMemInst": 738,
    "TotalFuncs": 55,
    "ArgsPhi": 4,
    "testUnary": 440
  },
  "baseline_oz_instcount": 966,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--gvn",
    "--slp-vectorizer",
    "--gvn",
    "--loop-deletion",
    "--sccp",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--loop-instsimplify",
    "--sroa",
    "--dce",
    "--mergefunc",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--loop-idiom",
          "--loop-guard-widening",
          "--irce",
          "--div-rem-pairs",
          "--flattencfg",
          "--loop-instsimplify",
          "--instsimplify",
          "--guard-widening",
          "--die",
          "--loop-predication",
          "--coro-elide",
          "--mergereturn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--loop-idiom",
      "--loop-guard-widening",
      "--irce",
      "--div-rem-pairs",
      "--flattencfg",
      "--loop-instsimplify",
      "--instsimplify",
      "--guard-widening",
      "--die",
      "--loop-predication",
      "--coro-elide",
      "--mergereturn"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}