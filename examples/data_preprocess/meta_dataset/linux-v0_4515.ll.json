{
  "program_id": "linux-v0_4515.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 82,
    "onePredOneSuc": 58,
    "onePredTwoSuc": 23,
    "oneSuccessor": 65,
    "twoPred": 19,
    "twoPredOneSuc": 6,
    "twoEach": 7,
    "twoSuccessor": 40,
    "morePreds": 7,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 125,
    "BeginPhi": 2,
    "BranchCount": 105,
    "returnInt": 35,
    "CriticalCount": 13,
    "NumEdges": 156,
    "const32Bit": 321,
    "const64Bit": 37,
    "numConstZeroes": 151,
    "numConstOnes": 128,
    "UncondBranches": 65,
    "binaryConstArg": 16,
    "NumAShrInst": 2,
    "NumAddInst": 7,
    "NumAllocaInst": 91,
    "NumAndInst": 4,
    "BlockMid": 14,
    "BlockLow": 113,
    "NumBitCastInst": 9,
    "NumBrInst": 105,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 91,
    "NumICmpInst": 41,
    "NumLShrInst": 0,
    "NumLoadInst": 239,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 19,
    "NumSExtInst": 7,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 168,
    "NumSubInst": 2,
    "NumTruncInst": 13,
    "NumXorInst": 0,
    "NumZExtInst": 19,
    "TotalBlocks": 127,
    "TotalInsts": 888,
    "TotalMemInst": 644,
    "TotalFuncs": 31,
    "ArgsPhi": 4,
    "testUnary": 378
  },
  "baseline_oz_instcount": 890,
  "knowledge_base_entry": [
    "--mergefunc",
    "--early-cse-memssa",
    "--lower-expect",
    "--die",
    "--gvn-hoist",
    "--newgvn",
    "--globalopt",
    "--instsimplify",
    "--sroa",
    "--aggressive-instcombine",
    "--mem2reg",
    "--mldst-motion",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--memcpyopt",
    "--jump-threading",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--sccp",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--add-discriminators",
          "--partially-inline-libcalls",
          "--speculative-execution",
          "--functionattrs",
          "--prune-eh",
          "--dce",
          "--forceattrs",
          "--simplifycfg",
          "--globalopt",
          "--mergereturn",
          "--hotcoldsplit",
          "--early-cse-memssa",
          "--lower-constant-intrinsics",
          "--loop-fusion",
          "--slsr",
          "--rpo-functionattrs",
          "--bdce",
          "--instnamer",
          "--instcombine",
          "--aggressive-instcombine",
          "--early-cse",
          "--rewrite-statepoints-for-gc",
          "--gvn",
          "--callsite-splitting"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--add-discriminators",
      "--partially-inline-libcalls",
      "--speculative-execution",
      "--functionattrs",
      "--prune-eh",
      "--dce",
      "--forceattrs",
      "--simplifycfg",
      "--globalopt",
      "--mergereturn",
      "--hotcoldsplit",
      "--early-cse-memssa",
      "--lower-constant-intrinsics",
      "--loop-fusion",
      "--slsr",
      "--rpo-functionattrs",
      "--bdce",
      "--instnamer",
      "--instcombine",
      "--aggressive-instcombine",
      "--early-cse",
      "--rewrite-statepoints-for-gc",
      "--gvn",
      "--callsite-splitting"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}