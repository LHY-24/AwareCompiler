{
  "program_id": "poj104-v1_90_1715.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 6,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 8,
    "CriticalCount": 2,
    "NumEdges": 14,
    "const32Bit": 17,
    "const64Bit": 8,
    "numConstZeroes": 2,
    "numConstOnes": 15,
    "UncondBranches": 6,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 13,
    "NumBitCastInst": 8,
    "NumBrInst": 10,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 17,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 8,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 14,
    "TotalInsts": 82,
    "TotalMemInst": 51,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 33
  },
  "baseline_oz_instcount": 48,
  "knowledge_base_entry": [
    "--reg2mem",
    "--sroa",
    "--adce",
    "--simplifycfg",
    "--jump-threading",
    "--bdce",
    "--early-cse",
    "--simplifycfg",
    "--slp-vectorizer",
    "--early-cse",
    "--loop-simplifycfg",
    "--reassociate",
    "--simplifycfg",
    "--prune-eh",
    "--sroa",
    "--loop-simplifycfg",
    "--dce",
    "--gvn",
    "--sroa",
    "-loop-reduce",
    "--slp-vectorizer",
    "--instsimplify",
    "--mem2reg",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--jump-threading",
    "--loop-reroll",
    "--instcombine",
    "--dse",
    "--inline",
    "--mldst-motion",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-fusion",
          "--coro-split",
          "--flattencfg",
          "--loop-predication",
          "--coro-early",
          "--loop-reroll",
          "--inline",
          "--ipconstprop",
          "--deadargelim",
          "--mem2reg",
          "--callsite-splitting",
          "--loop-versioning-licm",
          "--lowerinvoke",
          "--coro-elide",
          "--coro-cleanup",
          "--inferattrs",
          "--globaldce",
          "--gvn",
          "--loop-distribute",
          "--jump-threading",
          "--reassociate",
          "--inject-tli-mappings",
          "--attributor",
          "--loop-unroll",
          "--lower-expect",
          "--libcalls-shrinkwrap",
          "--bdce",
          "--add-discriminators",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-fusion",
      "--coro-split",
      "--flattencfg",
      "--loop-predication",
      "--coro-early",
      "--loop-reroll",
      "--inline",
      "--ipconstprop",
      "--deadargelim",
      "--mem2reg",
      "--callsite-splitting",
      "--loop-versioning-licm",
      "--lowerinvoke",
      "--coro-elide",
      "--coro-cleanup",
      "--inferattrs",
      "--globaldce",
      "--gvn",
      "--loop-distribute",
      "--jump-threading",
      "--reassociate",
      "--inject-tli-mappings",
      "--attributor",
      "--loop-unroll",
      "--lower-expect",
      "--libcalls-shrinkwrap",
      "--bdce",
      "--add-discriminators",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+4.2%"
  }
}