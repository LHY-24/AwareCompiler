{
  "program_id": "github-v0_16977.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 58,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 22,
    "oneSuccessor": 49,
    "twoPred": 19,
    "twoPredOneSuc": 9,
    "twoEach": 7,
    "twoSuccessor": 33,
    "morePreds": 5,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 90,
    "BeginPhi": 3,
    "BranchCount": 82,
    "returnInt": 5,
    "CriticalCount": 17,
    "NumEdges": 124,
    "const32Bit": 279,
    "const64Bit": 115,
    "numConstZeroes": 146,
    "numConstOnes": 135,
    "UncondBranches": 49,
    "binaryConstArg": 75,
    "NumAShrInst": 5,
    "NumAddInst": 23,
    "NumAllocaInst": 55,
    "NumAndInst": 18,
    "BlockMid": 20,
    "BlockLow": 73,
    "NumBitCastInst": 3,
    "NumBrInst": 82,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 124,
    "NumICmpInst": 36,
    "NumLShrInst": 15,
    "NumLoadInst": 241,
    "NumMulInst": 0,
    "NumOrInst": 12,
    "NumPHIInst": 3,
    "NumRetInst": 9,
    "NumSExtInst": 4,
    "NumSelectInst": 3,
    "NumShlInst": 13,
    "NumStoreInst": 198,
    "NumSubInst": 2,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 44,
    "TotalBlocks": 93,
    "TotalInsts": 910,
    "TotalMemInst": 628,
    "TotalFuncs": 10,
    "ArgsPhi": 6,
    "testUnary": 355
  },
  "baseline_oz_instcount": 909,
  "knowledge_base_entry": [
    "--mergefunc",
    "--dse",
    "--aggressive-instcombine",
    "--globalopt",
    "--sroa",
    "--aggressive-instcombine",
    "--instcombine",
    "--simplifycfg",
    "--correlated-propagation",
    "--dse",
    "--sroa",
    "--bdce",
    "--early-cse-memssa",
    "--slsr",
    "--gvn",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--slp-vectorizer",
          "--coro-elide",
          "--loop-versioning",
          "--rewrite-statepoints-for-gc",
          "--separate-const-offset-from-gep",
          "--instcombine",
          "--slsr",
          "--functionattrs",
          "--lower-widenable-condition",
          "--callsite-splitting",
          "--loop-unroll",
          "--globalopt",
          "--loop-simplify",
          "--argpromotion",
          "--sccp",
          "--attributor",
          "--simple-loop-unswitch",
          "--speculative-execution",
          "--loop-unswitch",
          "--loop-rotate",
          "--aggressive-instcombine",
          "--loop-predication",
          "--strip",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--slp-vectorizer",
      "--coro-elide",
      "--loop-versioning",
      "--rewrite-statepoints-for-gc",
      "--separate-const-offset-from-gep",
      "--instcombine",
      "--slsr",
      "--functionattrs",
      "--lower-widenable-condition",
      "--callsite-splitting",
      "--loop-unroll",
      "--globalopt",
      "--loop-simplify",
      "--argpromotion",
      "--sccp",
      "--attributor",
      "--simple-loop-unswitch",
      "--speculative-execution",
      "--loop-unswitch",
      "--loop-rotate",
      "--aggressive-instcombine",
      "--loop-predication",
      "--strip",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}