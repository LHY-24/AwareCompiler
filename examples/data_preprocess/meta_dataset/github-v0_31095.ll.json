{
  "program_id": "github-v0_31095.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 21,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 4,
    "oneSuccessor": 21,
    "twoPred": 11,
    "twoPredOneSuc": 4,
    "twoEach": 7,
    "twoSuccessor": 11,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 34,
    "BeginPhi": 1,
    "BranchCount": 32,
    "returnInt": 4,
    "CriticalCount": 4,
    "NumEdges": 43,
    "const32Bit": 33,
    "const64Bit": 0,
    "numConstZeroes": 12,
    "numConstOnes": 18,
    "UncondBranches": 21,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 34,
    "NumBitCastInst": 0,
    "NumBrInst": 32,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 59,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 1,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 27,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 35,
    "TotalInsts": 184,
    "TotalMemInst": 115,
    "TotalFuncs": 3,
    "ArgsPhi": 2,
    "testUnary": 86
  },
  "baseline_oz_instcount": 183,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--sroa",
    "--instsimplify",
    "--die",
    "--mergefunc",
    "--globalopt",
    "--loweratomic",
    "--early-cse",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--reassociate",
          "--div-rem-pairs",
          "--sink",
          "--early-cse-memssa",
          "--loop-distribute",
          "--strip-dead-prototypes",
          "--globalopt",
          "--coro-elide",
          "--correlated-propagation",
          "--sroa",
          "--aggressive-instcombine",
          "--slp-vectorizer",
          "--ee-instrument",
          "--simplifycfg",
          "--globalsplit",
          "--ipconstprop",
          "--sccp",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--reassociate",
      "--div-rem-pairs",
      "--sink",
      "--early-cse-memssa",
      "--loop-distribute",
      "--strip-dead-prototypes",
      "--globalopt",
      "--coro-elide",
      "--correlated-propagation",
      "--sroa",
      "--aggressive-instcombine",
      "--slp-vectorizer",
      "--ee-instrument",
      "--simplifycfg",
      "--globalsplit",
      "--ipconstprop",
      "--sccp",
      "--dse"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}