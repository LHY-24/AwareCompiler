{
  "program_id": "poj104-v1_44_1075.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 0,
    "oneSuccessor": 7,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 8,
    "CriticalCount": 1,
    "NumEdges": 13,
    "const32Bit": 22,
    "const64Bit": 14,
    "numConstZeroes": 7,
    "numConstOnes": 11,
    "UncondBranches": 7,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 13,
    "NumBitCastInst": 14,
    "NumBrInst": 10,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 13,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 11,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 15,
    "TotalInsts": 95,
    "TotalMemInst": 57,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 36
  },
  "baseline_oz_instcount": 46,
  "knowledge_base_entry": [
    "--loop-sink",
    "--instcombine",
    "--sccp",
    "--sroa",
    "--globalopt",
    "--gvn",
    "--reassociate",
    "--slsr",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--newgvn",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--dce",
    "--jump-threading",
    "--bdce",
    "--reassociate",
    "--slsr",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--newgvn",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--dce",
    "--elim-avail-extern",
    "--adce",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--dce",
    "--mem2reg",
    "--loop-instsimplify",
    "--ipsccp",
    "--mem2reg",
    "--simplifycfg",
    "--ipsccp",
    "--instsimplify",
    "--sroa",
    "--dce",
    "--jump-threading",
    "--bdce",
    "--load-store-vectorizer",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--newgvn",
          "--consthoist",
          "--dce",
          "--ipsccp",
          "--correlated-propagation",
          "--die",
          "--mem2reg",
          "--globalsplit",
          "--break-crit-edges",
          "--speculative-execution",
          "--loop-predication",
          "--loop-fusion",
          "--simplifycfg",
          "--loop-rotate",
          "--elim-avail-extern",
          "--loop-data-prefetch",
          "--forceattrs",
          "--redundant-dbg-inst-elim",
          "--rewrite-statepoints-for-gc",
          "--called-value-propagation",
          "--jump-threading",
          "--insert-gcov-profiling",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+15.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--newgvn",
      "--consthoist",
      "--dce",
      "--ipsccp",
      "--correlated-propagation",
      "--die",
      "--mem2reg",
      "--globalsplit",
      "--break-crit-edges",
      "--speculative-execution",
      "--loop-predication",
      "--loop-fusion",
      "--simplifycfg",
      "--loop-rotate",
      "--elim-avail-extern",
      "--loop-data-prefetch",
      "--forceattrs",
      "--redundant-dbg-inst-elim",
      "--rewrite-statepoints-for-gc",
      "--called-value-propagation",
      "--jump-threading",
      "--insert-gcov-profiling",
      "--licm"
    ],
    "performance_vs_Oz": "+15.2%"
  }
}