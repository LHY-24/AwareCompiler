{
  "program_id": "github-v0_16676.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 12,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 14,
    "const32Bit": 13,
    "const64Bit": 3,
    "numConstZeroes": 2,
    "numConstOnes": 15,
    "UncondBranches": 8,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 11,
    "NumBitCastInst": 0,
    "NumBrInst": 11,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 18,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 12,
    "TotalInsts": 70,
    "TotalMemInst": 46,
    "TotalFuncs": 1,
    "ArgsPhi": 0,
    "testUnary": 33
  },
  "baseline_oz_instcount": 70,
  "knowledge_base_entry": [
    "--reg2mem",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--lower-expect",
    "--gvn",
    "--nary-reassociate",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--loop-simplifycfg",
          "--loop-unswitch",
          "--break-crit-edges",
          "--reg2mem",
          "--mem2reg",
          "--partial-inliner",
          "--strip-debug-declare",
          "--libcalls-shrinkwrap",
          "--coro-elide",
          "--deadargelim",
          "--coro-cleanup",
          "--argpromotion",
          "--sink",
          "--inferattrs",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--loop-simplifycfg",
      "--loop-unswitch",
      "--break-crit-edges",
      "--reg2mem",
      "--mem2reg",
      "--partial-inliner",
      "--strip-debug-declare",
      "--libcalls-shrinkwrap",
      "--coro-elide",
      "--deadargelim",
      "--coro-cleanup",
      "--argpromotion",
      "--sink",
      "--inferattrs",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}