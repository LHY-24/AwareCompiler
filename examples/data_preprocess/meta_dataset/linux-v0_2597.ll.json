{
  "program_id": "linux-v0_2597.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 6,
    "oneSuccessor": 29,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 18,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 67,
    "BeginPhi": 0,
    "BranchCount": 47,
    "returnInt": 10,
    "CriticalCount": 11,
    "NumEdges": 72,
    "const32Bit": 250,
    "const64Bit": 7,
    "numConstZeroes": 123,
    "numConstOnes": 74,
    "UncondBranches": 29,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 53,
    "NumAndInst": 4,
    "BlockMid": 7,
    "BlockLow": 60,
    "NumBitCastInst": 15,
    "NumBrInst": 47,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 18,
    "NumLShrInst": 1,
    "NumLoadInst": 153,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 83,
    "NumSubInst": 6,
    "NumTruncInst": 4,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 67,
    "TotalInsts": 532,
    "TotalMemInst": 400,
    "TotalFuncs": 37,
    "ArgsPhi": 0,
    "testUnary": 233
  },
  "baseline_oz_instcount": 532,
  "knowledge_base_entry": [
    "--loop-predication",
    "--early-cse",
    "--slsr",
    "--loop-simplifycfg",
    "--newgvn",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--instsimplify",
    "--elim-avail-extern",
    "--memcpyopt",
    "--loop-reroll",
    "--jump-threading",
    "--loop-deletion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sink",
          "--loop-fusion",
          "--load-store-vectorizer",
          "--forceattrs",
          "--coro-elide",
          "--lcssa",
          "--guard-widening",
          "--add-discriminators",
          "--inline",
          "--loop-distribute",
          "--memcpyopt",
          "--libcalls-shrinkwrap",
          "--functionattrs",
          "--aggressive-instcombine",
          "--mergefunc",
          "--lower-constant-intrinsics",
          "--partial-inliner",
          "--newgvn",
          "--canonicalize-aliases",
          "--die",
          "--flattencfg",
          "--loop-unswitch",
          "--loop-interchange",
          "--reassociate",
          "--lowerinvoke",
          "--slsr",
          "--strip",
          "--cross-dso-cfi",
          "--simple-loop-unswitch",
          "--coro-early"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sink",
      "--loop-fusion",
      "--load-store-vectorizer",
      "--forceattrs",
      "--coro-elide",
      "--lcssa",
      "--guard-widening",
      "--add-discriminators",
      "--inline",
      "--loop-distribute",
      "--memcpyopt",
      "--libcalls-shrinkwrap",
      "--functionattrs",
      "--aggressive-instcombine",
      "--mergefunc",
      "--lower-constant-intrinsics",
      "--partial-inliner",
      "--newgvn",
      "--canonicalize-aliases",
      "--die",
      "--flattencfg",
      "--loop-unswitch",
      "--loop-interchange",
      "--reassociate",
      "--lowerinvoke",
      "--slsr",
      "--strip",
      "--cross-dso-cfi",
      "--simple-loop-unswitch",
      "--coro-early"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}