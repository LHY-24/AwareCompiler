{
  "program_id": "linux-v0_11171.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 57,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 18,
    "oneSuccessor": 52,
    "twoPred": 16,
    "twoPredOneSuc": 6,
    "twoEach": 3,
    "twoSuccessor": 28,
    "morePreds": 10,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 107,
    "BeginPhi": 2,
    "BranchCount": 80,
    "returnInt": 22,
    "CriticalCount": 28,
    "NumEdges": 130,
    "const32Bit": 308,
    "const64Bit": 8,
    "numConstZeroes": 126,
    "numConstOnes": 92,
    "UncondBranches": 52,
    "binaryConstArg": 13,
    "NumAShrInst": 2,
    "NumAddInst": 0,
    "NumAllocaInst": 74,
    "NumAndInst": 5,
    "BlockMid": 12,
    "BlockLow": 97,
    "NumBitCastInst": 17,
    "NumBrInst": 80,
    "NumCallInst": 59,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 238,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 26,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 116,
    "NumSubInst": 1,
    "NumTruncInst": 9,
    "NumXorInst": 4,
    "NumZExtInst": 12,
    "TotalBlocks": 109,
    "TotalInsts": 771,
    "TotalMemInst": 574,
    "TotalFuncs": 44,
    "ArgsPhi": 4,
    "testUnary": 356
  },
  "baseline_oz_instcount": 771,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--ipsccp",
    "--mergefunc",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--simplifycfg",
    "--mem2reg",
    "--instsimplify",
    "--reassociate",
    "--sroa",
    "--licm",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--licm",
          "--ee-instrument",
          "--coro-cleanup",
          "--lower-expect",
          "--strip",
          "--inject-tli-mappings",
          "--partial-inliner",
          "--loop-data-prefetch",
          "--aggressive-instcombine",
          "--deadargelim",
          "--instcombine",
          "--lcssa",
          "--sink",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--licm",
      "--ee-instrument",
      "--coro-cleanup",
      "--lower-expect",
      "--strip",
      "--inject-tli-mappings",
      "--partial-inliner",
      "--loop-data-prefetch",
      "--aggressive-instcombine",
      "--deadargelim",
      "--instcombine",
      "--lcssa",
      "--sink",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}