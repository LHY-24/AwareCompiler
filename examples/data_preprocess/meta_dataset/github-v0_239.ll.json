{
  "program_id": "github-v0_239.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 2,
    "oneSuccessor": 6,
    "twoPred": 1,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 12,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 7,
    "CriticalCount": 0,
    "NumEdges": 14,
    "const32Bit": 19,
    "const64Bit": 2,
    "numConstZeroes": 8,
    "numConstOnes": 9,
    "UncondBranches": 6,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 11,
    "NumBitCastInst": 2,
    "NumBrInst": 10,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 18,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 5,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 12,
    "TotalInsts": 67,
    "TotalMemInst": 47,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 29
  },
  "baseline_oz_instcount": 68,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--correlated-propagation",
    "--die",
    "--elim-avail-extern",
    "--prune-eh",
    "--sroa",
    "--prune-eh",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--correlated-propagation",
    "--globalopt",
    "--instsimplify",
    "--load-store-vectorizer",
    "--die",
    "--inline",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--inline",
          "--gvn-hoist",
          "--name-anon-globals",
          "--guard-widening",
          "--post-inline-ee-instrument",
          "--flattencfg",
          "--lower-expect",
          "--always-inline",
          "--strip",
          "--coro-early",
          "--rewrite-statepoints-for-gc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--inline",
      "--gvn-hoist",
      "--name-anon-globals",
      "--guard-widening",
      "--post-inline-ee-instrument",
      "--flattencfg",
      "--lower-expect",
      "--always-inline",
      "--strip",
      "--coro-early",
      "--rewrite-statepoints-for-gc"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}