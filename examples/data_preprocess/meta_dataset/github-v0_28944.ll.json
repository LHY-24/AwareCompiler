{
  "program_id": "github-v0_28944.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 35,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 12,
    "oneSuccessor": 28,
    "twoPred": 5,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 14,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 0,
    "BranchCount": 42,
    "returnInt": 8,
    "CriticalCount": 3,
    "NumEdges": 66,
    "const32Bit": 62,
    "const64Bit": 18,
    "numConstZeroes": 38,
    "numConstOnes": 19,
    "UncondBranches": 28,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 44,
    "NumBitCastInst": 10,
    "NumBrInst": 42,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 27,
    "NumICmpInst": 16,
    "NumLShrInst": 1,
    "NumLoadInst": 75,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 33,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 6,
    "TotalBlocks": 46,
    "TotalInsts": 248,
    "TotalMemInst": 160,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 109
  },
  "baseline_oz_instcount": 249,
  "knowledge_base_entry": [
    "--float2int",
    "--newgvn",
    "--aggressive-instcombine",
    "--loweratomic",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--slsr",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--scalarizer",
          "--aggressive-instcombine",
          "--mldst-motion",
          "--correlated-propagation",
          "--loweratomic",
          "--called-value-propagation",
          "--flattencfg",
          "--loop-reroll",
          "--loop-unroll-and-jam",
          "--mergefunc",
          "--add-discriminators",
          "--lower-matrix-intrinsics",
          "--sink",
          "--callsite-splitting",
          "--lower-constant-intrinsics",
          "--forceattrs",
          "--memcpyopt",
          "--sancov",
          "--deadargelim",
          "--loop-fusion",
          "--load-store-vectorizer",
          "--dse",
          "--redundant-dbg-inst-elim",
          "--loop-distribute",
          "--loop-sink",
          "--dce",
          "--nary-reassociate",
          "--loop-guard-widening",
          "--simple-loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--scalarizer",
      "--aggressive-instcombine",
      "--mldst-motion",
      "--correlated-propagation",
      "--loweratomic",
      "--called-value-propagation",
      "--flattencfg",
      "--loop-reroll",
      "--loop-unroll-and-jam",
      "--mergefunc",
      "--add-discriminators",
      "--lower-matrix-intrinsics",
      "--sink",
      "--callsite-splitting",
      "--lower-constant-intrinsics",
      "--forceattrs",
      "--memcpyopt",
      "--sancov",
      "--deadargelim",
      "--loop-fusion",
      "--load-store-vectorizer",
      "--dse",
      "--redundant-dbg-inst-elim",
      "--loop-distribute",
      "--loop-sink",
      "--dce",
      "--nary-reassociate",
      "--loop-guard-widening",
      "--simple-loop-unswitch"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}