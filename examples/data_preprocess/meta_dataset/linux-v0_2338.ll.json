{
  "program_id": "linux-v0_2338.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 43,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 17,
    "oneSuccessor": 37,
    "twoPred": 12,
    "twoPredOneSuc": 7,
    "twoEach": 2,
    "twoSuccessor": 23,
    "morePreds": 6,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 2,
    "BranchCount": 60,
    "returnInt": 10,
    "CriticalCount": 14,
    "NumEdges": 86,
    "const32Bit": 219,
    "const64Bit": 36,
    "numConstZeroes": 101,
    "numConstOnes": 91,
    "UncondBranches": 37,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 71,
    "NumAndInst": 6,
    "BlockMid": 11,
    "BlockLow": 63,
    "NumBitCastInst": 19,
    "NumBrInst": 60,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 61,
    "NumICmpInst": 30,
    "NumLShrInst": 0,
    "NumLoadInst": 139,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 2,
    "NumRetInst": 13,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 97,
    "NumSubInst": 3,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 10,
    "TotalBlocks": 74,
    "TotalInsts": 577,
    "TotalMemInst": 412,
    "TotalFuncs": 31,
    "ArgsPhi": 5,
    "testUnary": 253
  },
  "baseline_oz_instcount": 577,
  "knowledge_base_entry": [
    "--irce",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--licm",
    "--inline",
    "--dce",
    "--mergefunc",
    "--aggressive-instcombine",
    "--reassociate",
    "--newgvn",
    "--slp-vectorizer",
    "--lower-expect",
    "--loop-simplifycfg",
    "--dse",
    "--dce",
    "--aggressive-instcombine",
    "--licm",
    "--inline",
    "--dce",
    "--mergefunc",
    "--gvn",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--globalopt",
    "--gvn",
    "--slsr",
    "--instcombine",
    "--flattencfg",
    "--early-cse",
    "--adce",
    "--dse",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--hotcoldsplit",
          "--loop-sink",
          "--sccp",
          "--early-cse-memssa",
          "--indvars",
          "--forceattrs",
          "--load-store-vectorizer",
          "--constmerge",
          "--aggressive-instcombine",
          "--sroa",
          "--div-rem-pairs",
          "--loop-simplifycfg",
          "--newgvn",
          "--loop-predication",
          "--licm",
          "--post-inline-ee-instrument",
          "--rewrite-statepoints-for-gc",
          "--lowerinvoke",
          "--strip-dead-prototypes",
          "--constprop",
          "--float2int",
          "--mergefunc",
          "--instcombine",
          "--called-value-propagation",
          "--instsimplify",
          "--mergeicmps",
          "--prune-eh",
          "--loop-versioning-licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--hotcoldsplit",
      "--loop-sink",
      "--sccp",
      "--early-cse-memssa",
      "--indvars",
      "--forceattrs",
      "--load-store-vectorizer",
      "--constmerge",
      "--aggressive-instcombine",
      "--sroa",
      "--div-rem-pairs",
      "--loop-simplifycfg",
      "--newgvn",
      "--loop-predication",
      "--licm",
      "--post-inline-ee-instrument",
      "--rewrite-statepoints-for-gc",
      "--lowerinvoke",
      "--strip-dead-prototypes",
      "--constprop",
      "--float2int",
      "--mergefunc",
      "--instcombine",
      "--called-value-propagation",
      "--instsimplify",
      "--mergeicmps",
      "--prune-eh",
      "--loop-versioning-licm"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}