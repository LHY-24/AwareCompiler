{
  "program_id": "github-v0_33000.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 7,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 11,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 1,
    "CriticalCount": 1,
    "NumEdges": 13,
    "const32Bit": 10,
    "const64Bit": 1,
    "numConstZeroes": 4,
    "numConstOnes": 5,
    "UncondBranches": 7,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 3,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 11,
    "NumBitCastInst": 0,
    "NumBrInst": 10,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 9,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 5,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 11,
    "TotalInsts": 37,
    "TotalMemInst": 19,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 14
  },
  "baseline_oz_instcount": 38,
  "knowledge_base_entry": [
    "--newgvn",
    "--die",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--prune-eh",
    "--gvn",
    "--adce",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--dce",
          "--strip",
          "--partial-inliner",
          "--sroa",
          "--memcpyopt",
          "--load-store-vectorizer",
          "--guard-widening",
          "--argpromotion",
          "--coro-early",
          "--alignment-from-assumptions",
          "--barrier",
          "--loop-versioning",
          "--gvn",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--dce",
      "--strip",
      "--partial-inliner",
      "--sroa",
      "--memcpyopt",
      "--load-store-vectorizer",
      "--guard-widening",
      "--argpromotion",
      "--coro-early",
      "--alignment-from-assumptions",
      "--barrier",
      "--loop-versioning",
      "--gvn",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}