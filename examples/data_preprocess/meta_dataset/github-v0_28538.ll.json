{
  "program_id": "github-v0_28538.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 7,
    "BeginPhi": 0,
    "BranchCount": 6,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 8,
    "const32Bit": 8,
    "const64Bit": 2,
    "numConstZeroes": 5,
    "numConstOnes": 5,
    "UncondBranches": 4,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 3,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 7,
    "NumBitCastInst": 0,
    "NumBrInst": 6,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 7,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 5,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 7,
    "TotalInsts": 32,
    "TotalMemInst": 18,
    "TotalFuncs": 1,
    "ArgsPhi": 0,
    "testUnary": 14
  },
  "baseline_oz_instcount": 33,
  "knowledge_base_entry": [
    "--sroa",
    "--correlated-propagation",
    "--dse",
    "--aggressive-instcombine",
    "--inline",
    "--dse",
    "--instsimplify",
    "--dse",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--elim-avail-extern",
    "--adce",
    "--dce",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--insert-gcov-profiling",
          "--load-store-vectorizer",
          "--lowerswitch",
          "--gvn-hoist",
          "--mldst-motion",
          "--coro-elide",
          "--globalopt",
          "--gvn",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--insert-gcov-profiling",
      "--load-store-vectorizer",
      "--lowerswitch",
      "--gvn-hoist",
      "--mldst-motion",
      "--coro-elide",
      "--globalopt",
      "--gvn",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+3.0%"
  }
}