{
  "program_id": "linux-v0_13197.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 38,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 10,
    "oneSuccessor": 33,
    "twoPred": 10,
    "twoPredOneSuc": 5,
    "twoEach": 1,
    "twoSuccessor": 19,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 27,
    "CriticalCount": 5,
    "NumEdges": 75,
    "const32Bit": 317,
    "const64Bit": 37,
    "numConstZeroes": 140,
    "numConstOnes": 88,
    "UncondBranches": 33,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 61,
    "NumAndInst": 9,
    "BlockMid": 18,
    "BlockLow": 53,
    "NumBitCastInst": 7,
    "NumBrInst": 51,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 106,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 232,
    "NumMulInst": 0,
    "NumOrInst": 14,
    "NumPHIInst": 0,
    "NumRetInst": 18,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 131,
    "NumSubInst": 1,
    "NumTruncInst": 14,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 71,
    "TotalInsts": 728,
    "TotalMemInst": 572,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 318
  },
  "baseline_oz_instcount": 729,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--gvn-hoist",
    "--slsr",
    "--loop-reroll",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--flattencfg",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--loop-reroll",
          "--dse",
          "--scalarizer",
          "--lcssa",
          "--libcalls-shrinkwrap",
          "--loop-interchange",
          "--early-cse",
          "--jump-threading",
          "--infer-address-spaces",
          "--canonicalize-aliases",
          "--argpromotion",
          "--correlated-propagation",
          "--loop-vectorize",
          "--instsimplify",
          "--globalsplit",
          "--lower-expect",
          "--globaldce",
          "--ipsccp",
          "--die",
          "--strip-debug-declare",
          "--aggressive-instcombine",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--loop-reroll",
      "--dse",
      "--scalarizer",
      "--lcssa",
      "--libcalls-shrinkwrap",
      "--loop-interchange",
      "--early-cse",
      "--jump-threading",
      "--infer-address-spaces",
      "--canonicalize-aliases",
      "--argpromotion",
      "--correlated-propagation",
      "--loop-vectorize",
      "--instsimplify",
      "--globalsplit",
      "--lower-expect",
      "--globaldce",
      "--ipsccp",
      "--die",
      "--strip-debug-declare",
      "--aggressive-instcombine",
      "--reassociate"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}