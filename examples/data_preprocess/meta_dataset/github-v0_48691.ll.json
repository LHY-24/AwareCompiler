{
  "program_id": "github-v0_48691.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 2,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 22,
    "const32Bit": 32,
    "const64Bit": 28,
    "numConstZeroes": 32,
    "numConstOnes": 22,
    "UncondBranches": 10,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 16,
    "NumBitCastInst": 4,
    "NumBrInst": 16,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 20,
    "TotalInsts": 146,
    "TotalMemInst": 89,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 66
  },
  "baseline_oz_instcount": 146,
  "knowledge_base_entry": [
    "--instcombine",
    "--aggressive-instcombine",
    "--mergefunc",
    "--jump-threading",
    "--newgvn",
    "--indvars",
    "--loop-fusion",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--mergefunc",
    "--bdce",
    "--gvn-hoist",
    "--newgvn",
    "--sroa",
    "--elim-avail-extern",
    "--globalopt",
    "--loweratomic",
    "--early-cse-memssa",
    "--flattencfg",
    "--mem2reg",
    "--slp-vectorizer",
    "--slsr",
    "-loop-reduce",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--early-cse",
    "--instcombine",
    "--aggressive-instcombine",
    "--instsimplify",
    "--bdce",
    "--reassociate",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--libcalls-shrinkwrap",
          "--partially-inline-libcalls",
          "--deadargelim",
          "--lcssa",
          "--lower-constant-intrinsics",
          "--post-inline-ee-instrument",
          "--float2int",
          "--instcombine",
          "--pgo-memop-opt",
          "--aggressive-instcombine",
          "--lower-matrix-intrinsics",
          "--loop-instsimplify",
          "--bdce",
          "--hotcoldsplit",
          "--prune-eh",
          "--load-store-vectorizer",
          "--memcpyopt",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--libcalls-shrinkwrap",
      "--partially-inline-libcalls",
      "--deadargelim",
      "--lcssa",
      "--lower-constant-intrinsics",
      "--post-inline-ee-instrument",
      "--float2int",
      "--instcombine",
      "--pgo-memop-opt",
      "--aggressive-instcombine",
      "--lower-matrix-intrinsics",
      "--loop-instsimplify",
      "--bdce",
      "--hotcoldsplit",
      "--prune-eh",
      "--load-store-vectorizer",
      "--memcpyopt",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+6.2%"
  }
}