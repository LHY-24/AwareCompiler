{
  "program_id": "linux-v0_2014.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 52,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 20,
    "oneSuccessor": 45,
    "twoPred": 27,
    "twoPredOneSuc": 11,
    "twoEach": 11,
    "twoSuccessor": 38,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 100,
    "BeginPhi": 0,
    "BranchCount": 83,
    "returnInt": 14,
    "CriticalCount": 40,
    "NumEdges": 133,
    "const32Bit": 361,
    "const64Bit": 32,
    "numConstZeroes": 146,
    "numConstOnes": 85,
    "UncondBranches": 45,
    "binaryConstArg": 35,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 75,
    "NumAndInst": 8,
    "BlockMid": 14,
    "BlockLow": 86,
    "NumBitCastInst": 11,
    "NumBrInst": 83,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 115,
    "NumICmpInst": 37,
    "NumLShrInst": 0,
    "NumLoadInst": 265,
    "NumMulInst": 1,
    "NumOrInst": 27,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 117,
    "NumSubInst": 0,
    "NumTruncInst": 16,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 100,
    "TotalInsts": 842,
    "TotalMemInst": 623,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 386
  },
  "baseline_oz_instcount": 842,
  "knowledge_base_entry": [
    "--mergereturn",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--newgvn",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--pgo-memop-opt",
          "--partial-inliner",
          "--loop-reroll",
          "--aggressive-instcombine",
          "--lowerinvoke",
          "--licm",
          "--loop-simplifycfg",
          "--loweratomic",
          "--always-inline",
          "--deadargelim",
          "--loop-distribute",
          "--gvn",
          "--lower-expect",
          "--loop-vectorize",
          "--early-cse",
          "--coro-cleanup",
          "--mldst-motion",
          "--newgvn",
          "--early-cse-memssa",
          "--post-inline-ee-instrument",
          "--lower-guard-intrinsic",
          "--adce",
          "--coro-elide",
          "--loop-guard-widening",
          "--sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--pgo-memop-opt",
      "--partial-inliner",
      "--loop-reroll",
      "--aggressive-instcombine",
      "--lowerinvoke",
      "--licm",
      "--loop-simplifycfg",
      "--loweratomic",
      "--always-inline",
      "--deadargelim",
      "--loop-distribute",
      "--gvn",
      "--lower-expect",
      "--loop-vectorize",
      "--early-cse",
      "--coro-cleanup",
      "--mldst-motion",
      "--newgvn",
      "--early-cse-memssa",
      "--post-inline-ee-instrument",
      "--lower-guard-intrinsic",
      "--adce",
      "--coro-elide",
      "--loop-guard-widening",
      "--sink"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}