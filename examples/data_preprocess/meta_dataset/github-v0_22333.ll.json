{
  "program_id": "github-v0_22333.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 50,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 15,
    "oneSuccessor": 50,
    "twoPred": 29,
    "twoPredOneSuc": 15,
    "twoEach": 13,
    "twoSuccessor": 29,
    "morePreds": 0,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 78,
    "BeginPhi": 3,
    "BranchCount": 79,
    "returnInt": 0,
    "CriticalCount": 14,
    "NumEdges": 108,
    "const32Bit": 45,
    "const64Bit": 7,
    "numConstZeroes": 17,
    "numConstOnes": 30,
    "UncondBranches": 50,
    "binaryConstArg": 12,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 22,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 73,
    "NumBitCastInst": 7,
    "NumBrInst": 79,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 159,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 2,
    "NumSExtInst": 18,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 81,
    "NumSubInst": 10,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 81,
    "TotalInsts": 462,
    "TotalMemInst": 297,
    "TotalFuncs": 2,
    "ArgsPhi": 6,
    "testUnary": 215
  },
  "baseline_oz_instcount": 463,
  "knowledge_base_entry": [
    "--dce",
    "--ipsccp",
    "--early-cse-memssa",
    "--lower-expect",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--newgvn",
    "--lower-expect",
    "--early-cse",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--adce",
    "--dce",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mldst-motion",
          "--float2int",
          "--load-store-vectorizer",
          "--constprop",
          "--early-cse-memssa",
          "--inject-tli-mappings",
          "--loop-unroll-and-jam",
          "--memcpyopt",
          "--guard-widening",
          "--instnamer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mldst-motion",
      "--float2int",
      "--load-store-vectorizer",
      "--constprop",
      "--early-cse-memssa",
      "--inject-tli-mappings",
      "--loop-unroll-and-jam",
      "--memcpyopt",
      "--guard-widening",
      "--instnamer"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}