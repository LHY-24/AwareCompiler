{
  "program_id": "github-v0_13112.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 36,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 9,
    "oneSuccessor": 33,
    "twoPred": 13,
    "twoPredOneSuc": 6,
    "twoEach": 4,
    "twoSuccessor": 18,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 1,
    "BranchCount": 50,
    "returnInt": 1,
    "CriticalCount": 10,
    "NumEdges": 76,
    "const32Bit": 152,
    "const64Bit": 20,
    "numConstZeroes": 76,
    "numConstOnes": 47,
    "UncondBranches": 33,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 33,
    "NumAndInst": 0,
    "BlockMid": 10,
    "BlockLow": 50,
    "NumBitCastInst": 12,
    "NumBrInst": 50,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 13,
    "NumLShrInst": 0,
    "NumLoadInst": 140,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 8,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 75,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 16,
    "TotalBlocks": 60,
    "TotalInsts": 448,
    "TotalMemInst": 323,
    "TotalFuncs": 15,
    "ArgsPhi": 2,
    "testUnary": 209
  },
  "baseline_oz_instcount": 449,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--early-cse",
    "--slsr",
    "--slp-vectorizer",
    "--die",
    "--simplifycfg",
    "--flattencfg",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--lower-expect",
    "--correlated-propagation",
    "--dce",
    "--die",
    "--simplifycfg",
    "--flattencfg",
    "--aggressive-instcombine",
    "--jump-threading",
    "--nary-reassociate",
    "--newgvn",
    "--gvn",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--insert-gcov-profiling",
          "--loop-deletion",
          "--loop-vectorize",
          "--gvn",
          "--div-rem-pairs",
          "--loop-fusion",
          "--partial-inliner",
          "--strip-dead-prototypes",
          "--loop-distribute",
          "--cross-dso-cfi"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--insert-gcov-profiling",
      "--loop-deletion",
      "--loop-vectorize",
      "--gvn",
      "--div-rem-pairs",
      "--loop-fusion",
      "--partial-inliner",
      "--strip-dead-prototypes",
      "--loop-distribute",
      "--cross-dso-cfi"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}