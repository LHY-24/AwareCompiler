{
  "program_id": "linux-v0_3947.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 69,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 18,
    "oneSuccessor": 66,
    "twoPred": 20,
    "twoPredOneSuc": 13,
    "twoEach": 3,
    "twoSuccessor": 26,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 116,
    "BeginPhi": 1,
    "BranchCount": 91,
    "returnInt": 38,
    "CriticalCount": 16,
    "NumEdges": 128,
    "const32Bit": 283,
    "const64Bit": 31,
    "numConstZeroes": 123,
    "numConstOnes": 129,
    "UncondBranches": 66,
    "binaryConstArg": 77,
    "NumAShrInst": 2,
    "NumAddInst": 8,
    "NumAllocaInst": 64,
    "NumAndInst": 28,
    "BlockMid": 16,
    "BlockLow": 101,
    "NumBitCastInst": 28,
    "NumBrInst": 91,
    "NumCallInst": 80,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 45,
    "NumLShrInst": 8,
    "NumLoadInst": 190,
    "NumMulInst": 0,
    "NumOrInst": 9,
    "NumPHIInst": 1,
    "NumRetInst": 23,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 98,
    "NumSubInst": 9,
    "NumTruncInst": 29,
    "NumXorInst": 25,
    "NumZExtInst": 73,
    "TotalBlocks": 117,
    "TotalInsts": 892,
    "TotalMemInst": 492,
    "TotalFuncs": 32,
    "ArgsPhi": 2,
    "testUnary": 400
  },
  "baseline_oz_instcount": 890,
  "knowledge_base_entry": [
    "--licm",
    "--early-cse",
    "--gvn-hoist",
    "--ipsccp",
    "--inline",
    "--simplifycfg",
    "--loop-reroll",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--bdce",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--sroa",
    "--elim-avail-extern",
    "--mergefunc",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--pgo-memop-opt",
          "--globalsplit",
          "--post-inline-ee-instrument",
          "-loop-reduce",
          "--libcalls-shrinkwrap",
          "--loop-deletion",
          "--adce",
          "--coro-early",
          "--simple-loop-unswitch",
          "--globaldce",
          "--loop-unswitch",
          "--ipsccp",
          "--inject-tli-mappings",
          "--inline",
          "--lower-constant-intrinsics",
          "--aggressive-instcombine",
          "--functionattrs",
          "--bdce",
          "--lcssa",
          "--partial-inliner",
          "--sancov",
          "--memcpyopt",
          "--early-cse-memssa",
          "--gvn-hoist",
          "--div-rem-pairs",
          "--slp-vectorizer",
          "--cross-dso-cfi",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--pgo-memop-opt",
      "--globalsplit",
      "--post-inline-ee-instrument",
      "-loop-reduce",
      "--libcalls-shrinkwrap",
      "--loop-deletion",
      "--adce",
      "--coro-early",
      "--simple-loop-unswitch",
      "--globaldce",
      "--loop-unswitch",
      "--ipsccp",
      "--inject-tli-mappings",
      "--inline",
      "--lower-constant-intrinsics",
      "--aggressive-instcombine",
      "--functionattrs",
      "--bdce",
      "--lcssa",
      "--partial-inliner",
      "--sancov",
      "--memcpyopt",
      "--early-cse-memssa",
      "--gvn-hoist",
      "--div-rem-pairs",
      "--slp-vectorizer",
      "--cross-dso-cfi",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}