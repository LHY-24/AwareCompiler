{
  "program_id": "github-v0_20147.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 61,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 8,
    "oneSuccessor": 60,
    "twoPred": 39,
    "twoPredOneSuc": 7,
    "twoEach": 20,
    "twoSuccessor": 41,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 149,
    "BeginPhi": 2,
    "BranchCount": 101,
    "returnInt": 81,
    "CriticalCount": 27,
    "NumEdges": 147,
    "const32Bit": 188,
    "const64Bit": 6,
    "numConstZeroes": 57,
    "numConstOnes": 121,
    "UncondBranches": 60,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 96,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 146,
    "NumBitCastInst": 7,
    "NumBrInst": 101,
    "NumCallInst": 148,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 41,
    "NumLShrInst": 0,
    "NumLoadInst": 231,
    "NumMulInst": 7,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 47,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 127,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 151,
    "TotalInsts": 866,
    "TotalMemInst": 630,
    "TotalFuncs": 86,
    "ArgsPhi": 4,
    "testUnary": 352
  },
  "baseline_oz_instcount": 870,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--instcombine",
    "--ipsccp",
    "--instsimplify",
    "--jump-threading",
    "--adce",
    "--bdce",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--dse",
    "--gvn-hoist",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse-memssa",
          "--ipconstprop",
          "--functionattrs",
          "--separate-const-offset-from-gep",
          "--deadargelim",
          "--nary-reassociate",
          "--argpromotion",
          "--float2int",
          "--lower-matrix-intrinsics",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse-memssa",
      "--ipconstprop",
      "--functionattrs",
      "--separate-const-offset-from-gep",
      "--deadargelim",
      "--nary-reassociate",
      "--argpromotion",
      "--float2int",
      "--lower-matrix-intrinsics",
      "--gvn"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}