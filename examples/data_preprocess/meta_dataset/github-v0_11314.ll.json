{
  "program_id": "github-v0_11314.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 80,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 25,
    "oneSuccessor": 76,
    "twoPred": 48,
    "twoPredOneSuc": 24,
    "twoEach": 21,
    "twoSuccessor": 50,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 137,
    "BeginPhi": 0,
    "BranchCount": 126,
    "returnInt": 50,
    "CriticalCount": 34,
    "NumEdges": 176,
    "const32Bit": 364,
    "const64Bit": 12,
    "numConstZeroes": 211,
    "numConstOnes": 73,
    "UncondBranches": 76,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 49,
    "NumAndInst": 12,
    "BlockMid": 14,
    "BlockLow": 123,
    "NumBitCastInst": 10,
    "NumBrInst": 126,
    "NumCallInst": 82,
    "NumGetElementPtrInst": 150,
    "NumICmpInst": 50,
    "NumLShrInst": 0,
    "NumLoadInst": 287,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 32,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 72,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 137,
    "TotalInsts": 901,
    "TotalMemInst": 640,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 378
  },
  "baseline_oz_instcount": 903,
  "knowledge_base_entry": [
    "--mergefunc",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--slsr",
    "--jump-threading",
    "--dse",
    "--early-cse-memssa",
    "--simplifycfg",
    "--instsimplify",
    "--globalopt",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--flattencfg",
          "--loop-data-prefetch",
          "--mergereturn",
          "--callsite-splitting",
          "--mergefunc",
          "--forceattrs",
          "--mem2reg",
          "--always-inline",
          "--sancov",
          "--slp-vectorizer",
          "--loweratomic",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--flattencfg",
      "--loop-data-prefetch",
      "--mergereturn",
      "--callsite-splitting",
      "--mergefunc",
      "--forceattrs",
      "--mem2reg",
      "--always-inline",
      "--sancov",
      "--slp-vectorizer",
      "--loweratomic",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}