{
  "program_id": "linux-v0_5475.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 36,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 11,
    "oneSuccessor": 30,
    "twoPred": 12,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 23,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 0,
    "BranchCount": 53,
    "returnInt": 32,
    "CriticalCount": 10,
    "NumEdges": 76,
    "const32Bit": 253,
    "const64Bit": 26,
    "numConstZeroes": 120,
    "numConstOnes": 72,
    "UncondBranches": 30,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 56,
    "NumAndInst": 6,
    "BlockMid": 11,
    "BlockLow": 61,
    "NumBitCastInst": 12,
    "NumBrInst": 53,
    "NumCallInst": 58,
    "NumGetElementPtrInst": 98,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 190,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 94,
    "NumSubInst": 1,
    "NumTruncInst": 18,
    "NumXorInst": 4,
    "NumZExtInst": 15,
    "TotalBlocks": 72,
    "TotalInsts": 655,
    "TotalMemInst": 496,
    "TotalFuncs": 36,
    "ArgsPhi": 0,
    "testUnary": 296
  },
  "baseline_oz_instcount": 655,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--mem2reg",
    "--prune-eh",
    "--elim-avail-extern",
    "--memcpyopt",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--coro-split",
          "--ipsccp",
          "--simple-loop-unswitch",
          "--die",
          "--loop-vectorize",
          "--bdce",
          "--loop-load-elim",
          "--coro-cleanup",
          "--nary-reassociate",
          "--mergefunc",
          "--guard-widening",
          "--loop-fusion",
          "--infer-address-spaces",
          "--aggressive-instcombine",
          "--loop-instsimplify",
          "--loop-unroll",
          "--loop-unroll-and-jam",
          "--strip-debug-declare",
          "--instsimplify",
          "--constmerge"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--coro-split",
      "--ipsccp",
      "--simple-loop-unswitch",
      "--die",
      "--loop-vectorize",
      "--bdce",
      "--loop-load-elim",
      "--coro-cleanup",
      "--nary-reassociate",
      "--mergefunc",
      "--guard-widening",
      "--loop-fusion",
      "--infer-address-spaces",
      "--aggressive-instcombine",
      "--loop-instsimplify",
      "--loop-unroll",
      "--loop-unroll-and-jam",
      "--strip-debug-declare",
      "--instsimplify",
      "--constmerge"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}