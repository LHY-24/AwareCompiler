{
  "program_id": "linux-v0_12346.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 61,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 5,
    "oneSuccessor": 58,
    "twoPred": 3,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 8,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 0,
    "BranchCount": 66,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 99,
    "const32Bit": 128,
    "const64Bit": 7,
    "numConstZeroes": 49,
    "numConstOnes": 63,
    "UncondBranches": 58,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 45,
    "NumAndInst": 1,
    "BlockMid": 2,
    "BlockLow": 75,
    "NumBitCastInst": 53,
    "NumBrInst": 66,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 128,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 65,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 8,
    "NumZExtInst": 4,
    "TotalBlocks": 77,
    "TotalInsts": 455,
    "TotalMemInst": 290,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 240
  },
  "baseline_oz_instcount": 457,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--newgvn",
    "--adce",
    "--correlated-propagation",
    "--ipsccp",
    "--gvn",
    "--flattencfg",
    "--mergefunc",
    "--mergefunc",
    "--gvn",
    "--sroa",
    "--dce",
    "--aggressive-instcombine",
    "--reassociate",
    "--sccp",
    "--early-cse-memssa",
    "--dce",
    "--mergefunc",
    "--instsimplify",
    "--lower-expect",
    "--nary-reassociate",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--partial-inliner",
          "--mergefunc",
          "--prune-eh",
          "--loop-versioning",
          "--cross-dso-cfi",
          "--loop-unroll-and-jam",
          "--simplifycfg",
          "--instsimplify",
          "--mergeicmps",
          "--inline",
          "--slsr",
          "--strip-dead-prototypes",
          "--loop-data-prefetch",
          "--gvn",
          "--memcpyopt",
          "--gvn-hoist",
          "--reassociate",
          "--redundant-dbg-inst-elim",
          "--newgvn",
          "--strip-debug-declare",
          "--infer-address-spaces"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--partial-inliner",
      "--mergefunc",
      "--prune-eh",
      "--loop-versioning",
      "--cross-dso-cfi",
      "--loop-unroll-and-jam",
      "--simplifycfg",
      "--instsimplify",
      "--mergeicmps",
      "--inline",
      "--slsr",
      "--strip-dead-prototypes",
      "--loop-data-prefetch",
      "--gvn",
      "--memcpyopt",
      "--gvn-hoist",
      "--reassociate",
      "--redundant-dbg-inst-elim",
      "--newgvn",
      "--strip-debug-declare",
      "--infer-address-spaces"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}