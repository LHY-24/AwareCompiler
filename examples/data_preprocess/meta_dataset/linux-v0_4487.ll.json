{
  "program_id": "linux-v0_4487.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 42,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 15,
    "oneSuccessor": 33,
    "twoPred": 13,
    "twoPredOneSuc": 2,
    "twoEach": 8,
    "twoSuccessor": 27,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 69,
    "BeginPhi": 0,
    "BranchCount": 60,
    "returnInt": 18,
    "CriticalCount": 12,
    "NumEdges": 87,
    "const32Bit": 245,
    "const64Bit": 20,
    "numConstZeroes": 118,
    "numConstOnes": 68,
    "UncondBranches": 33,
    "binaryConstArg": 36,
    "NumAShrInst": 1,
    "NumAddInst": 8,
    "NumAllocaInst": 45,
    "NumAndInst": 12,
    "BlockMid": 15,
    "BlockLow": 54,
    "NumBitCastInst": 14,
    "NumBrInst": 60,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 83,
    "NumICmpInst": 25,
    "NumLShrInst": 8,
    "NumLoadInst": 200,
    "NumMulInst": 3,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 72,
    "NumSubInst": 4,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 33,
    "TotalBlocks": 69,
    "TotalInsts": 636,
    "TotalMemInst": 434,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 305
  },
  "baseline_oz_instcount": 636,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--flattencfg",
    "--aggressive-instcombine",
    "--newgvn",
    "--loop-rotate",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--mem2reg",
    "--load-store-vectorizer",
    "--die",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--hotcoldsplit",
          "--alignment-from-assumptions",
          "--mergeicmps",
          "--loop-fusion",
          "--loop-simplifycfg",
          "--instnamer",
          "--strip",
          "-loop-reduce",
          "--insert-gcov-profiling",
          "--instsimplify",
          "--name-anon-globals",
          "--loop-versioning",
          "--libcalls-shrinkwrap",
          "--newgvn",
          "--inline",
          "--mergefunc",
          "--nary-reassociate",
          "--barrier",
          "--lower-expect",
          "--constmerge",
          "--load-store-vectorizer",
          "--float2int",
          "--gvn-hoist",
          "--aggressive-instcombine",
          "--inject-tli-mappings"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--hotcoldsplit",
      "--alignment-from-assumptions",
      "--mergeicmps",
      "--loop-fusion",
      "--loop-simplifycfg",
      "--instnamer",
      "--strip",
      "-loop-reduce",
      "--insert-gcov-profiling",
      "--instsimplify",
      "--name-anon-globals",
      "--loop-versioning",
      "--libcalls-shrinkwrap",
      "--newgvn",
      "--inline",
      "--mergefunc",
      "--nary-reassociate",
      "--barrier",
      "--lower-expect",
      "--constmerge",
      "--load-store-vectorizer",
      "--float2int",
      "--gvn-hoist",
      "--aggressive-instcombine",
      "--inject-tli-mappings"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}