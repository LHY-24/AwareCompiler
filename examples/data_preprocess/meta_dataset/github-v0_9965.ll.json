{
  "program_id": "github-v0_9965.ll",
  "autophase_features": {
    "BBNumArgsHi": 9,
    "BBNumArgsLo": 20,
    "onePred": 35,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 12,
    "oneSuccessor": 28,
    "twoPred": 34,
    "twoPredOneSuc": 2,
    "twoEach": 31,
    "twoSuccessor": 48,
    "morePreds": 7,
    "BB03Phi": 29,
    "BBHiPhi": 0,
    "BBNoPhi": 48,
    "BeginPhi": 29,
    "BranchCount": 76,
    "returnInt": 2,
    "CriticalCount": 61,
    "NumEdges": 124,
    "const32Bit": 99,
    "const64Bit": 3,
    "numConstZeroes": 24,
    "numConstOnes": 37,
    "UncondBranches": 28,
    "binaryConstArg": 66,
    "NumAShrInst": 1,
    "NumAddInst": 71,
    "NumAllocaInst": 0,
    "NumAndInst": 9,
    "BlockMid": 11,
    "BlockLow": 66,
    "NumBitCastInst": 13,
    "NumBrInst": 76,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 45,
    "NumLShrInst": 0,
    "NumLoadInst": 65,
    "NumMulInst": 10,
    "NumOrInst": 2,
    "NumPHIInst": 53,
    "NumRetInst": 1,
    "NumSExtInst": 29,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 32,
    "NumSubInst": 10,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 22,
    "TotalBlocks": 77,
    "TotalInsts": 570,
    "TotalMemInst": 195,
    "TotalFuncs": 6,
    "ArgsPhi": 108,
    "testUnary": 131
  },
  "baseline_oz_instcount": 549,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--indvars",
    "--slp-vectorizer",
    "--newgvn",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--globalopt",
    "--correlated-propagation",
    "--lower-expect",
    "--correlated-propagation",
    "--ipsccp",
    "--sccp",
    "--early-cse-memssa",
    "--reassociate",
    "--simplifycfg",
    "--prune-eh",
    "--lower-expect",
    "--loop-rotate",
    "--early-cse",
    "--flattencfg",
    "--instcombine",
    "--newgvn",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--gvn-hoist",
    "--instcombine",
    "--adce",
    "--gvn",
    "--newgvn",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--mem2reg",
    "--prune-eh",
    "--reassociate",
    "--loop-simplifycfg",
    "--lower-expect",
    "--gvn",
    "--mldst-motion",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--jump-threading",
    "--loop-reroll",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--mem2reg",
    "--inline",
    "--mem2reg",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--bdce",
    "--load-store-vectorizer",
    "--dse",
    "--early-cse",
    "--loop-instsimplify",
    "--lower-expect",
    "--instcombine",
    "--globalopt",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--mergefunc",
    "--dce",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--early-cse",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--inline",
    "--mem2reg",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--bdce",
    "--load-store-vectorizer",
    "--dse",
    "--early-cse",
    "--loop-instsimplify",
    "--lower-expect",
    "--instcombine",
    "--globalopt",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--mergefunc",
    "--dce",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--early-cse",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--inline",
    "--newgvn",
    "--loop-reroll",
    "--nary-reassociate",
    "--slsr",
    "--early-cse",
    "--bdce",
    "--correlated-propagation",
    "--nary-reassociate",
    "--simplifycfg",
    "--ipsccp",
    "--early-cse-memssa",
    "--sccp",
    "--lower-expect",
    "--correlated-propagation",
    "--globalopt",
    "--flattencfg",
    "--mergefunc",
    "--die",
    "--early-cse-memssa",
    "--inline",
    "--dce",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--strip-debug-declare",
          "--loop-reroll",
          "--lowerswitch",
          "--tailcallelim",
          "--insert-gcov-profiling",
          "--aggressive-instcombine",
          "--inject-tli-mappings",
          "--early-cse",
          "--loop-idiom",
          "--strip-nondebug",
          "--functionattrs",
          "--speculative-execution",
          "--licm",
          "--partial-inliner",
          "--always-inline",
          "--instnamer",
          "--canonicalize-aliases",
          "--dse",
          "--infer-address-spaces",
          "--pgo-memop-opt",
          "--loop-versioning-licm",
          "--coro-early",
          "--partially-inline-libcalls",
          "--callsite-splitting",
          "--loop-sink",
          "--adce",
          "--die",
          "--jump-threading",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--strip-debug-declare",
      "--loop-reroll",
      "--lowerswitch",
      "--tailcallelim",
      "--insert-gcov-profiling",
      "--aggressive-instcombine",
      "--inject-tli-mappings",
      "--early-cse",
      "--loop-idiom",
      "--strip-nondebug",
      "--functionattrs",
      "--speculative-execution",
      "--licm",
      "--partial-inliner",
      "--always-inline",
      "--instnamer",
      "--canonicalize-aliases",
      "--dse",
      "--infer-address-spaces",
      "--pgo-memop-opt",
      "--loop-versioning-licm",
      "--coro-early",
      "--partially-inline-libcalls",
      "--callsite-splitting",
      "--loop-sink",
      "--adce",
      "--die",
      "--jump-threading",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}