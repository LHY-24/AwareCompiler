{
  "program_id": "linux-v0_9773.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 33,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 6,
    "oneSuccessor": 30,
    "twoPred": 11,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 16,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 72,
    "BeginPhi": 2,
    "BranchCount": 46,
    "returnInt": 13,
    "CriticalCount": 7,
    "NumEdges": 62,
    "const32Bit": 255,
    "const64Bit": 18,
    "numConstZeroes": 111,
    "numConstOnes": 103,
    "UncondBranches": 30,
    "binaryConstArg": 35,
    "NumAShrInst": 1,
    "NumAddInst": 6,
    "NumAllocaInst": 72,
    "NumAndInst": 11,
    "BlockMid": 13,
    "BlockLow": 61,
    "NumBitCastInst": 27,
    "NumBrInst": 46,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 74,
    "NumICmpInst": 22,
    "NumLShrInst": 3,
    "NumLoadInst": 181,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 2,
    "NumRetInst": 28,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 104,
    "NumSubInst": 5,
    "NumTruncInst": 11,
    "NumXorInst": 11,
    "NumZExtInst": 21,
    "TotalBlocks": 74,
    "TotalInsts": 699,
    "TotalMemInst": 481,
    "TotalFuncs": 39,
    "ArgsPhi": 5,
    "testUnary": 328
  },
  "baseline_oz_instcount": 689,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--aggressive-instcombine",
    "--early-cse",
    "--mergefunc",
    "--ipsccp",
    "--ipsccp",
    "--reassociate",
    "--sccp",
    "--globalopt",
    "--loweratomic",
    "--aggressive-instcombine",
    "--early-cse",
    "--mergefunc",
    "--aggressive-instcombine",
    "--dce",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--inline",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--tailcallelim",
          "--loop-distribute",
          "--nary-reassociate",
          "--adce",
          "--canonicalize-aliases",
          "--aggressive-instcombine",
          "--ipsccp",
          "--guard-widening",
          "--inline",
          "--div-rem-pairs",
          "--globaldce",
          "--loop-vectorize",
          "--reassociate",
          "--separate-const-offset-from-gep",
          "--loop-predication",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--tailcallelim",
      "--loop-distribute",
      "--nary-reassociate",
      "--adce",
      "--canonicalize-aliases",
      "--aggressive-instcombine",
      "--ipsccp",
      "--guard-widening",
      "--inline",
      "--div-rem-pairs",
      "--globaldce",
      "--loop-vectorize",
      "--reassociate",
      "--separate-const-offset-from-gep",
      "--loop-predication",
      "--strip"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}