{
  "program_id": "linux-v0_3305.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 5,
    "oneSuccessor": 29,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 9,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 58,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 8,
    "CriticalCount": 5,
    "NumEdges": 61,
    "const32Bit": 114,
    "const64Bit": 15,
    "numConstZeroes": 43,
    "numConstOnes": 70,
    "UncondBranches": 29,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 55,
    "NumAndInst": 2,
    "BlockMid": 7,
    "BlockLow": 51,
    "NumBitCastInst": 28,
    "NumBrInst": 38,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 12,
    "NumLShrInst": 1,
    "NumLoadInst": 101,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 70,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 6,
    "NumZExtInst": 5,
    "TotalBlocks": 58,
    "TotalInsts": 407,
    "TotalMemInst": 274,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 205
  },
  "baseline_oz_instcount": 407,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--reassociate",
    "--reassociate",
    "--dce",
    "--loop-instsimplify",
    "--instcombine",
    "--mldst-motion",
    "--instsimplify",
    "--globalopt",
    "--elim-avail-extern",
    "--licm",
    "--gvn-hoist",
    "--dse",
    "--slp-vectorizer",
    "--indvars",
    "--correlated-propagation",
    "--sroa",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--slsr",
    "--early-cse-memssa",
    "--lower-expect",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--hotcoldsplit",
          "--dce",
          "--infer-address-spaces",
          "--loop-unroll-and-jam",
          "--redundant-dbg-inst-elim",
          "--loop-unroll",
          "--loop-reroll",
          "--loop-predication",
          "--loop-sink",
          "--barrier",
          "--cross-dso-cfi",
          "--early-cse",
          "--lcssa",
          "--flattencfg",
          "--inject-tli-mappings",
          "--name-anon-globals",
          "--loop-guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--hotcoldsplit",
      "--dce",
      "--infer-address-spaces",
      "--loop-unroll-and-jam",
      "--redundant-dbg-inst-elim",
      "--loop-unroll",
      "--loop-reroll",
      "--loop-predication",
      "--loop-sink",
      "--barrier",
      "--cross-dso-cfi",
      "--early-cse",
      "--lcssa",
      "--flattencfg",
      "--inject-tli-mappings",
      "--name-anon-globals",
      "--loop-guard-widening"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}