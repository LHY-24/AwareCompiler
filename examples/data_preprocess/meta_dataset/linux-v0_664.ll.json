{
  "program_id": "linux-v0_664.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 70,
    "onePredOneSuc": 54,
    "onePredTwoSuc": 13,
    "oneSuccessor": 69,
    "twoPred": 22,
    "twoPredOneSuc": 10,
    "twoEach": 7,
    "twoSuccessor": 24,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 115,
    "BeginPhi": 0,
    "BranchCount": 93,
    "returnInt": 12,
    "CriticalCount": 9,
    "NumEdges": 127,
    "const32Bit": 255,
    "const64Bit": 21,
    "numConstZeroes": 121,
    "numConstOnes": 122,
    "UncondBranches": 69,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 86,
    "NumAndInst": 1,
    "BlockMid": 12,
    "BlockLow": 103,
    "NumBitCastInst": 26,
    "NumBrInst": 93,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 28,
    "NumLShrInst": 0,
    "NumLoadInst": 163,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 113,
    "NumSubInst": 2,
    "NumTruncInst": 3,
    "NumXorInst": 10,
    "NumZExtInst": 13,
    "TotalBlocks": 115,
    "TotalInsts": 696,
    "TotalMemInst": 470,
    "TotalFuncs": 30,
    "ArgsPhi": 0,
    "testUnary": 309
  },
  "baseline_oz_instcount": 690,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--correlated-propagation",
    "--sroa",
    "--adce",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--prune-eh",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--jump-threading",
    "--simplifycfg",
    "--sroa",
    "--newgvn",
    "--instsimplify",
    "--sccp",
    "--bdce",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--prune-eh",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--jump-threading",
    "--simplifycfg",
    "--sroa",
    "--lower-expect",
    "--early-cse",
    "--flattencfg",
    "--ipsccp",
    "--correlated-propagation",
    "--early-cse",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--nary-reassociate",
          "--globalopt",
          "--lower-guard-intrinsic",
          "--div-rem-pairs",
          "--loop-unroll-and-jam",
          "--constprop",
          "--licm",
          "--loop-load-elim",
          "--strip",
          "--early-cse",
          "--loop-vectorize",
          "--loop-distribute",
          "--loop-sink",
          "--loop-fusion",
          "--mergefunc",
          "--canonicalize-aliases",
          "--inline",
          "--loop-interchange",
          "--loop-unroll",
          "--loop-instsimplify",
          "--flattencfg",
          "--coro-cleanup",
          "--post-inline-ee-instrument",
          "--sink",
          "--mldst-motion",
          "--aggressive-instcombine",
          "--lower-widenable-condition"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--nary-reassociate",
      "--globalopt",
      "--lower-guard-intrinsic",
      "--div-rem-pairs",
      "--loop-unroll-and-jam",
      "--constprop",
      "--licm",
      "--loop-load-elim",
      "--strip",
      "--early-cse",
      "--loop-vectorize",
      "--loop-distribute",
      "--loop-sink",
      "--loop-fusion",
      "--mergefunc",
      "--canonicalize-aliases",
      "--inline",
      "--loop-interchange",
      "--loop-unroll",
      "--loop-instsimplify",
      "--flattencfg",
      "--coro-cleanup",
      "--post-inline-ee-instrument",
      "--sink",
      "--mldst-motion",
      "--aggressive-instcombine",
      "--lower-widenable-condition"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}