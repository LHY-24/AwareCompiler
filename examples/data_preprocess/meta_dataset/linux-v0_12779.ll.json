{
  "program_id": "linux-v0_12779.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 65,
    "onePredOneSuc": 54,
    "onePredTwoSuc": 9,
    "oneSuccessor": 63,
    "twoPred": 23,
    "twoPredOneSuc": 5,
    "twoEach": 14,
    "twoSuccessor": 26,
    "morePreds": 3,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 4,
    "BranchCount": 89,
    "returnInt": 16,
    "CriticalCount": 9,
    "NumEdges": 125,
    "const32Bit": 249,
    "const64Bit": 74,
    "numConstZeroes": 159,
    "numConstOnes": 100,
    "UncondBranches": 63,
    "binaryConstArg": 52,
    "NumAShrInst": 5,
    "NumAddInst": 21,
    "NumAllocaInst": 39,
    "NumAndInst": 11,
    "BlockMid": 13,
    "BlockLow": 85,
    "NumBitCastInst": 6,
    "NumBrInst": 89,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 103,
    "NumICmpInst": 31,
    "NumLShrInst": 0,
    "NumLoadInst": 210,
    "NumMulInst": 4,
    "NumOrInst": 11,
    "NumPHIInst": 4,
    "NumRetInst": 7,
    "NumSExtInst": 32,
    "NumSelectInst": 1,
    "NumShlInst": 5,
    "NumStoreInst": 102,
    "NumSubInst": 3,
    "NumTruncInst": 19,
    "NumXorInst": 6,
    "NumZExtInst": 49,
    "TotalBlocks": 98,
    "TotalInsts": 784,
    "TotalMemInst": 477,
    "TotalFuncs": 11,
    "ArgsPhi": 8,
    "testUnary": 355
  },
  "baseline_oz_instcount": 778,
  "knowledge_base_entry": [
    "--die",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--licm",
    "--dce",
    "--ipsccp",
    "--globalopt",
    "--correlated-propagation",
    "--ipsccp",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--early-cse",
    "--early-cse-memssa",
    "--ipsccp",
    "--globalopt",
    "--correlated-propagation",
    "--ipsccp",
    "--aggressive-instcombine",
    "--prune-eh",
    "--elim-avail-extern",
    "--flattencfg",
    "--elim-avail-extern",
    "--loop-deletion",
    "--sccp",
    "--loop-simplifycfg",
    "--sroa",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--ipsccp",
          "--coro-cleanup",
          "--simple-loop-unswitch",
          "--forceattrs",
          "--post-inline-ee-instrument",
          "--nary-reassociate",
          "--deadargelim",
          "--redundant-dbg-inst-elim",
          "--loop-rotate",
          "--slsr",
          "--infer-address-spaces",
          "--tailcallelim",
          "--loop-sink",
          "--reassociate",
          "--rewrite-statepoints-for-gc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--ipsccp",
      "--coro-cleanup",
      "--simple-loop-unswitch",
      "--forceattrs",
      "--post-inline-ee-instrument",
      "--nary-reassociate",
      "--deadargelim",
      "--redundant-dbg-inst-elim",
      "--loop-rotate",
      "--slsr",
      "--infer-address-spaces",
      "--tailcallelim",
      "--loop-sink",
      "--reassociate",
      "--rewrite-statepoints-for-gc"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}