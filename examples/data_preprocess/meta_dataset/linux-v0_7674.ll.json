{
  "program_id": "linux-v0_7674.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 53,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 14,
    "oneSuccessor": 43,
    "twoPred": 13,
    "twoPredOneSuc": 4,
    "twoEach": 5,
    "twoSuccessor": 25,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 95,
    "BeginPhi": 0,
    "BranchCount": 68,
    "returnInt": 21,
    "CriticalCount": 7,
    "NumEdges": 93,
    "const32Bit": 302,
    "const64Bit": 36,
    "numConstZeroes": 130,
    "numConstOnes": 128,
    "UncondBranches": 43,
    "binaryConstArg": 37,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 92,
    "NumAndInst": 8,
    "BlockMid": 18,
    "BlockLow": 77,
    "NumBitCastInst": 12,
    "NumBrInst": 68,
    "NumCallInst": 72,
    "NumGetElementPtrInst": 80,
    "NumICmpInst": 34,
    "NumLShrInst": 1,
    "NumLoadInst": 234,
    "NumMulInst": 2,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 27,
    "NumSExtInst": 9,
    "NumSelectInst": 2,
    "NumShlInst": 5,
    "NumStoreInst": 134,
    "NumSubInst": 2,
    "NumTruncInst": 8,
    "NumXorInst": 20,
    "NumZExtInst": 21,
    "TotalBlocks": 95,
    "TotalInsts": 845,
    "TotalMemInst": 612,
    "TotalFuncs": 48,
    "ArgsPhi": 0,
    "testUnary": 380
  },
  "baseline_oz_instcount": 845,
  "knowledge_base_entry": [
    "--lower-expect",
    "--elim-avail-extern",
    "--newgvn",
    "--gvn-hoist",
    "--loop-rotate",
    "--dse",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--adce",
    "--correlated-propagation",
    "--jump-threading",
    "--mem2reg",
    "--nary-reassociate",
    "--dse",
    "--elim-avail-extern",
    "--dce",
    "--aggressive-instcombine",
    "--early-cse",
    "--dse",
    "--simplifycfg",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--simple-loop-unswitch",
          "--globalopt",
          "--hotcoldsplit",
          "--barrier",
          "--correlated-propagation",
          "--scalarizer",
          "--ee-instrument",
          "--nary-reassociate",
          "--aggressive-instcombine",
          "--globalsplit",
          "-loop-reduce",
          "--consthoist",
          "--ipsccp",
          "--constmerge",
          "--loop-unswitch",
          "--load-store-vectorizer",
          "--instnamer",
          "--libcalls-shrinkwrap",
          "--coro-split",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--simple-loop-unswitch",
      "--globalopt",
      "--hotcoldsplit",
      "--barrier",
      "--correlated-propagation",
      "--scalarizer",
      "--ee-instrument",
      "--nary-reassociate",
      "--aggressive-instcombine",
      "--globalsplit",
      "-loop-reduce",
      "--consthoist",
      "--ipsccp",
      "--constmerge",
      "--loop-unswitch",
      "--load-store-vectorizer",
      "--instnamer",
      "--libcalls-shrinkwrap",
      "--coro-split",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}