{
  "program_id": "github-v0_45421.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 63,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 21,
    "oneSuccessor": 60,
    "twoPred": 33,
    "twoPredOneSuc": 16,
    "twoEach": 16,
    "twoSuccessor": 39,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 106,
    "BeginPhi": 0,
    "BranchCount": 99,
    "returnInt": 27,
    "CriticalCount": 25,
    "NumEdges": 138,
    "const32Bit": 180,
    "const64Bit": 17,
    "numConstZeroes": 98,
    "numConstOnes": 88,
    "UncondBranches": 60,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 58,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 98,
    "NumBitCastInst": 4,
    "NumBrInst": 99,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 53,
    "NumICmpInst": 39,
    "NumLShrInst": 0,
    "NumLoadInst": 143,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 55,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 79,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 106,
    "TotalInsts": 592,
    "TotalMemInst": 376,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 260
  },
  "baseline_oz_instcount": 592,
  "knowledge_base_entry": [
    "--gvn",
    "--dce",
    "--aggressive-instcombine",
    "--inline",
    "--loop-rotate",
    "--instcombine",
    "--mergefunc",
    "--load-store-vectorizer",
    "--jump-threading",
    "--mergefunc",
    "--mem2reg",
    "--sccp",
    "--gvn-hoist",
    "--newgvn",
    "--early-cse-memssa",
    "--gvn",
    "--loop-simplifycfg",
    "--licm",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--lower-expect",
          "-loop-reduce",
          "--loop-unroll",
          "--mergeicmps",
          "--redundant-dbg-inst-elim",
          "--sancov",
          "--infer-address-spaces",
          "--newgvn",
          "--mergefunc",
          "--loop-versioning-licm",
          "--loop-vectorize",
          "--functionattrs",
          "--tailcallelim",
          "--rpo-functionattrs",
          "--sink",
          "--indvars",
          "--die",
          "--partially-inline-libcalls",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--lower-expect",
      "-loop-reduce",
      "--loop-unroll",
      "--mergeicmps",
      "--redundant-dbg-inst-elim",
      "--sancov",
      "--infer-address-spaces",
      "--newgvn",
      "--mergefunc",
      "--loop-versioning-licm",
      "--loop-vectorize",
      "--functionattrs",
      "--tailcallelim",
      "--rpo-functionattrs",
      "--sink",
      "--indvars",
      "--die",
      "--partially-inline-libcalls",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+7.9%"
  }
}