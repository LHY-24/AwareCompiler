{
  "program_id": "github-v0_40005.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 14,
    "const32Bit": 64,
    "const64Bit": 0,
    "numConstZeroes": 5,
    "numConstOnes": 37,
    "UncondBranches": 8,
    "binaryConstArg": 42,
    "NumAShrInst": 12,
    "NumAddInst": 2,
    "NumAllocaInst": 16,
    "NumAndInst": 15,
    "BlockMid": 5,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 11,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 3,
    "NumLoadInst": 58,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 7,
    "NumStoreInst": 39,
    "NumSubInst": 1,
    "NumTruncInst": 21,
    "NumXorInst": 18,
    "NumZExtInst": 39,
    "TotalBlocks": 14,
    "TotalInsts": 254,
    "TotalMemInst": 115,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 134
  },
  "baseline_oz_instcount": 254,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--dse",
    "--correlated-propagation",
    "--bdce",
    "--correlated-propagation",
    "--dce",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--dce",
    "--slp-vectorizer",
    "--sroa",
    "--loop-reroll",
    "--instsimplify",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--reg2mem",
          "--reassociate",
          "--coro-cleanup",
          "--globalsplit",
          "--aggressive-instcombine",
          "--loop-interchange",
          "--sroa",
          "--lower-constant-intrinsics",
          "--licm",
          "--loop-unswitch",
          "--mldst-motion",
          "--ipsccp",
          "--loop-simplify",
          "--loop-simplifycfg",
          "--slp-vectorizer",
          "--lower-matrix-intrinsics",
          "--loop-versioning",
          "--insert-gcov-profiling",
          "--lower-guard-intrinsic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--reg2mem",
      "--reassociate",
      "--coro-cleanup",
      "--globalsplit",
      "--aggressive-instcombine",
      "--loop-interchange",
      "--sroa",
      "--lower-constant-intrinsics",
      "--licm",
      "--loop-unswitch",
      "--mldst-motion",
      "--ipsccp",
      "--loop-simplify",
      "--loop-simplifycfg",
      "--slp-vectorizer",
      "--lower-matrix-intrinsics",
      "--loop-versioning",
      "--insert-gcov-profiling",
      "--lower-guard-intrinsic"
    ],
    "performance_vs_Oz": "+3.1%"
  }
}