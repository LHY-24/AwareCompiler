{
  "program_id": "linux-v0_2957.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 43,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 24,
    "oneSuccessor": 23,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 30,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 66,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 4,
    "CriticalCount": 23,
    "NumEdges": 83,
    "const32Bit": 257,
    "const64Bit": 28,
    "numConstZeroes": 117,
    "numConstOnes": 84,
    "UncondBranches": 23,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 58,
    "NumAndInst": 6,
    "BlockMid": 8,
    "BlockLow": 58,
    "NumBitCastInst": 11,
    "NumBrInst": 51,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 79,
    "NumICmpInst": 30,
    "NumLShrInst": 6,
    "NumLoadInst": 170,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 81,
    "NumSubInst": 9,
    "NumTruncInst": 3,
    "NumXorInst": 4,
    "NumZExtInst": 14,
    "TotalBlocks": 66,
    "TotalInsts": 578,
    "TotalMemInst": 410,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 264
  },
  "baseline_oz_instcount": 580,
  "knowledge_base_entry": [
    "--indvars",
    "--sroa",
    "--loop-deletion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "-loop-reduce",
          "--scalarizer",
          "--insert-gcov-profiling",
          "--reassociate",
          "--gvn",
          "--loop-reroll",
          "--loop-sink",
          "--lcssa",
          "--loop-rotate",
          "--loop-interchange",
          "--bdce",
          "--dse",
          "--partially-inline-libcalls",
          "--loop-idiom",
          "--libcalls-shrinkwrap",
          "--slp-vectorizer",
          "--loop-load-elim",
          "--loop-guard-widening",
          "--sroa",
          "--infer-address-spaces",
          "--float2int",
          "--canonicalize-aliases",
          "--consthoist",
          "--add-discriminators",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "-loop-reduce",
      "--scalarizer",
      "--insert-gcov-profiling",
      "--reassociate",
      "--gvn",
      "--loop-reroll",
      "--loop-sink",
      "--lcssa",
      "--loop-rotate",
      "--loop-interchange",
      "--bdce",
      "--dse",
      "--partially-inline-libcalls",
      "--loop-idiom",
      "--libcalls-shrinkwrap",
      "--slp-vectorizer",
      "--loop-load-elim",
      "--loop-guard-widening",
      "--sroa",
      "--infer-address-spaces",
      "--float2int",
      "--canonicalize-aliases",
      "--consthoist",
      "--add-discriminators",
      "--licm"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}