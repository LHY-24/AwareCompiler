{
  "program_id": "linux-v0_2920.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 16,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 0,
    "oneSuccessor": 16,
    "twoPred": 12,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 12,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 2,
    "BranchCount": 28,
    "returnInt": 36,
    "CriticalCount": 8,
    "NumEdges": 40,
    "const32Bit": 225,
    "const64Bit": 5,
    "numConstZeroes": 64,
    "numConstOnes": 88,
    "UncondBranches": 16,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 52,
    "NumAndInst": 6,
    "BlockMid": 11,
    "BlockLow": 35,
    "NumBitCastInst": 4,
    "NumBrInst": 28,
    "NumCallInst": 47,
    "NumGetElementPtrInst": 42,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 133,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 2,
    "NumRetInst": 18,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 68,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 46,
    "TotalInsts": 427,
    "TotalMemInst": 342,
    "TotalFuncs": 25,
    "ArgsPhi": 4,
    "testUnary": 195
  },
  "baseline_oz_instcount": 427,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--aggressive-instcombine",
    "--sroa",
    "--die",
    "--jump-threading",
    "--prune-eh",
    "--licm",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--bdce",
          "--strip",
          "--forceattrs",
          "--mldst-motion",
          "--lower-matrix-intrinsics",
          "--loop-fusion",
          "--ee-instrument",
          "--constprop",
          "--callsite-splitting",
          "--globaldce",
          "--add-discriminators",
          "--loop-simplifycfg",
          "--partial-inliner",
          "--inject-tli-mappings",
          "--early-cse-memssa",
          "--strip-nondebug",
          "--canonicalize-aliases",
          "--instsimplify",
          "--globalopt",
          "--loop-unroll-and-jam",
          "--gvn-hoist",
          "--lowerswitch",
          "--loop-reroll",
          "--speculative-execution",
          "--tailcallelim",
          "--infer-address-spaces",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--bdce",
      "--strip",
      "--forceattrs",
      "--mldst-motion",
      "--lower-matrix-intrinsics",
      "--loop-fusion",
      "--ee-instrument",
      "--constprop",
      "--callsite-splitting",
      "--globaldce",
      "--add-discriminators",
      "--loop-simplifycfg",
      "--partial-inliner",
      "--inject-tli-mappings",
      "--early-cse-memssa",
      "--strip-nondebug",
      "--canonicalize-aliases",
      "--instsimplify",
      "--globalopt",
      "--loop-unroll-and-jam",
      "--gvn-hoist",
      "--lowerswitch",
      "--loop-reroll",
      "--speculative-execution",
      "--tailcallelim",
      "--infer-address-spaces",
      "--newgvn"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}