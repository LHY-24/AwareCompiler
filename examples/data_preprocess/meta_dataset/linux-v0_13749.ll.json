{
  "program_id": "linux-v0_13749.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 4,
    "const32Bit": 20,
    "const64Bit": 0,
    "numConstZeroes": 9,
    "numConstOnes": 9,
    "UncondBranches": 2,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 3,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 10,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 8,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 47,
    "TotalMemInst": 36,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 18
  },
  "baseline_oz_instcount": 47,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--instcombine",
    "--correlated-propagation",
    "--lower-expect",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--jump-threading",
    "--licm",
    "--sroa",
    "--early-cse",
    "--loop-reroll",
    "--correlated-propagation",
    "--mergefunc",
    "--dse",
    "--early-cse-memssa",
    "--loop-reroll",
    "-loop-reduce",
    "--gvn-hoist",
    "--nary-reassociate",
    "--slsr",
    "--newgvn",
    "--gvn",
    "--inline",
    "--adce",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--adce",
          "--called-value-propagation",
          "--loop-unswitch",
          "--pgo-memop-opt",
          "--inline",
          "--die",
          "--correlated-propagation",
          "--reassociate",
          "--separate-const-offset-from-gep",
          "--insert-gcov-profiling",
          "--attributor",
          "--break-crit-edges",
          "--instsimplify",
          "--lowerinvoke",
          "--barrier",
          "--div-rem-pairs",
          "--lowerswitch",
          "--canonicalize-aliases",
          "--newgvn",
          "--reg2mem",
          "--sccp",
          "--cross-dso-cfi",
          "--memcpyopt",
          "--instnamer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--adce",
      "--called-value-propagation",
      "--loop-unswitch",
      "--pgo-memop-opt",
      "--inline",
      "--die",
      "--correlated-propagation",
      "--reassociate",
      "--separate-const-offset-from-gep",
      "--insert-gcov-profiling",
      "--attributor",
      "--break-crit-edges",
      "--instsimplify",
      "--lowerinvoke",
      "--barrier",
      "--div-rem-pairs",
      "--lowerswitch",
      "--canonicalize-aliases",
      "--newgvn",
      "--reg2mem",
      "--sccp",
      "--cross-dso-cfi",
      "--memcpyopt",
      "--instnamer"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}