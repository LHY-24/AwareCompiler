{
  "program_id": "linux-v0_10643.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 24,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 1,
    "oneSuccessor": 24,
    "twoPred": 9,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 9,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 1,
    "BranchCount": 33,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 46,
    "const32Bit": 121,
    "const64Bit": 11,
    "numConstZeroes": 58,
    "numConstOnes": 56,
    "UncondBranches": 24,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 48,
    "NumAndInst": 0,
    "BlockMid": 7,
    "BlockLow": 44,
    "NumBitCastInst": 11,
    "NumBrInst": 33,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 96,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 17,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 61,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 51,
    "TotalInsts": 344,
    "TotalMemInst": 267,
    "TotalFuncs": 25,
    "ArgsPhi": 2,
    "testUnary": 158
  },
  "baseline_oz_instcount": 344,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--ipsccp",
    "--early-cse",
    "--dce",
    "--aggressive-instcombine",
    "--inline",
    "--loop-simplifycfg",
    "--adce",
    "--mergefunc",
    "--sroa",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--flattencfg",
    "--newgvn",
    "--globalopt",
    "--instsimplify",
    "--sccp",
    "--early-cse",
    "--bdce",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--loop-reroll",
    "--gvn",
    "--slsr",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipconstprop",
          "--constprop",
          "--speculative-execution",
          "--ee-instrument",
          "--lower-constant-intrinsics",
          "--add-discriminators",
          "--mergefunc",
          "--early-cse-memssa",
          "--strip",
          "--gvn-hoist",
          "--reg2mem",
          "--load-store-vectorizer",
          "--dce",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipconstprop",
      "--constprop",
      "--speculative-execution",
      "--ee-instrument",
      "--lower-constant-intrinsics",
      "--add-discriminators",
      "--mergefunc",
      "--early-cse-memssa",
      "--strip",
      "--gvn-hoist",
      "--reg2mem",
      "--load-store-vectorizer",
      "--dce",
      "--globaldce"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}