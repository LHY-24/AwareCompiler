{
  "program_id": "linux-v0_13420.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 12,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 3,
    "NumEdges": 26,
    "const32Bit": 40,
    "const64Bit": 12,
    "numConstZeroes": 18,
    "numConstOnes": 22,
    "UncondBranches": 12,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 15,
    "NumAndInst": 5,
    "BlockMid": 2,
    "BlockLow": 22,
    "NumBitCastInst": 2,
    "NumBrInst": 17,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 18,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 1,
    "TotalBlocks": 24,
    "TotalInsts": 108,
    "TotalMemInst": 69,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 37
  },
  "baseline_oz_instcount": 108,
  "knowledge_base_entry": [
    "--dse",
    "--early-cse-memssa",
    "--simplifycfg",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--gvn",
    "--bdce",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "--loop-unswitch",
          "--redundant-dbg-inst-elim",
          "--attributor",
          "--name-anon-globals",
          "--dce",
          "--bdce",
          "--memcpyopt",
          "--mergeicmps",
          "--dse",
          "--constmerge",
          "--mergefunc",
          "--mem2reg",
          "--loop-versioning",
          "--loop-deletion",
          "--newgvn",
          "--ee-instrument",
          "--forceattrs",
          "--simple-loop-unswitch",
          "--barrier",
          "--strip-nondebug",
          "-loop-reduce",
          "--canonicalize-aliases",
          "--die",
          "--loop-data-prefetch",
          "--separate-const-offset-from-gep"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "--loop-unswitch",
      "--redundant-dbg-inst-elim",
      "--attributor",
      "--name-anon-globals",
      "--dce",
      "--bdce",
      "--memcpyopt",
      "--mergeicmps",
      "--dse",
      "--constmerge",
      "--mergefunc",
      "--mem2reg",
      "--loop-versioning",
      "--loop-deletion",
      "--newgvn",
      "--ee-instrument",
      "--forceattrs",
      "--simple-loop-unswitch",
      "--barrier",
      "--strip-nondebug",
      "-loop-reduce",
      "--canonicalize-aliases",
      "--die",
      "--loop-data-prefetch",
      "--separate-const-offset-from-gep"
    ],
    "performance_vs_Oz": "+2.8%"
  }
}