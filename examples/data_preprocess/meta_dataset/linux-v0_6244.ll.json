{
  "program_id": "linux-v0_6244.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 30,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 9,
    "oneSuccessor": 27,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 15,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 55,
    "BeginPhi": 1,
    "BranchCount": 42,
    "returnInt": 19,
    "CriticalCount": 3,
    "NumEdges": 57,
    "const32Bit": 117,
    "const64Bit": 35,
    "numConstZeroes": 52,
    "numConstOnes": 59,
    "UncondBranches": 27,
    "binaryConstArg": 33,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 40,
    "NumAndInst": 10,
    "BlockMid": 6,
    "BlockLow": 50,
    "NumBitCastInst": 10,
    "NumBrInst": 42,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 15,
    "NumLShrInst": 1,
    "NumLoadInst": 109,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 1,
    "NumRetInst": 14,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 69,
    "NumSubInst": 5,
    "NumTruncInst": 11,
    "NumXorInst": 4,
    "NumZExtInst": 12,
    "TotalBlocks": 56,
    "TotalInsts": 439,
    "TotalMemInst": 287,
    "TotalFuncs": 25,
    "ArgsPhi": 2,
    "testUnary": 192
  },
  "baseline_oz_instcount": 439,
  "knowledge_base_entry": [
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--mergefunc",
    "--memcpyopt",
    "--inline",
    "--early-cse",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--inject-tli-mappings",
          "--functionattrs",
          "--hotcoldsplit",
          "--coro-cleanup",
          "--speculative-execution",
          "--licm",
          "--dse",
          "--gvn-hoist",
          "--aggressive-instcombine",
          "--loop-unswitch",
          "--adce",
          "--argpromotion",
          "--loop-simplifycfg",
          "--instsimplify",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--inject-tli-mappings",
      "--functionattrs",
      "--hotcoldsplit",
      "--coro-cleanup",
      "--speculative-execution",
      "--licm",
      "--dse",
      "--gvn-hoist",
      "--aggressive-instcombine",
      "--loop-unswitch",
      "--adce",
      "--argpromotion",
      "--loop-simplifycfg",
      "--instsimplify",
      "--sancov"
    ],
    "performance_vs_Oz": "+3.4%"
  }
}