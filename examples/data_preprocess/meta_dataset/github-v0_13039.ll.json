{
  "program_id": "github-v0_13039.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 0,
    "oneSuccessor": 23,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 29,
    "returnInt": 26,
    "CriticalCount": 2,
    "NumEdges": 45,
    "const32Bit": 307,
    "const64Bit": 99,
    "numConstZeroes": 226,
    "numConstOnes": 126,
    "UncondBranches": 23,
    "binaryConstArg": 42,
    "NumAShrInst": 9,
    "NumAddInst": 8,
    "NumAllocaInst": 101,
    "NumAndInst": 15,
    "BlockMid": 21,
    "BlockLow": 29,
    "NumBitCastInst": 36,
    "NumBrInst": 29,
    "NumCallInst": 71,
    "NumGetElementPtrInst": 133,
    "NumICmpInst": 6,
    "NumLShrInst": 6,
    "NumLoadInst": 242,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 114,
    "NumSubInst": 9,
    "NumTruncInst": 1,
    "NumXorInst": 9,
    "NumZExtInst": 28,
    "TotalBlocks": 50,
    "TotalInsts": 850,
    "TotalMemInst": 661,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 414
  },
  "baseline_oz_instcount": 850,
  "knowledge_base_entry": [
    "--lower-expect",
    "--die",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--inline",
    "--adce",
    "--simplifycfg",
    "--loop-reroll",
    "--early-cse-memssa",
    "--sroa",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--jump-threading",
          "--lower-expect",
          "--mergereturn",
          "--memcpyopt",
          "--instnamer",
          "--coro-cleanup",
          "--loop-fusion",
          "--loop-distribute",
          "--infer-address-spaces",
          "--functionattrs",
          "--simple-loop-unswitch",
          "--elim-avail-extern",
          "--loop-unroll-and-jam",
          "--adce",
          "--loop-predication",
          "--hotcoldsplit",
          "--div-rem-pairs",
          "--early-cse",
          "--canonicalize-aliases",
          "--strip-dead-prototypes",
          "-loop-reduce",
          "--called-value-propagation",
          "--cross-dso-cfi",
          "--loweratomic",
          "--loop-sink",
          "--loop-vectorize",
          "--barrier",
          "--redundant-dbg-inst-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--jump-threading",
      "--lower-expect",
      "--mergereturn",
      "--memcpyopt",
      "--instnamer",
      "--coro-cleanup",
      "--loop-fusion",
      "--loop-distribute",
      "--infer-address-spaces",
      "--functionattrs",
      "--simple-loop-unswitch",
      "--elim-avail-extern",
      "--loop-unroll-and-jam",
      "--adce",
      "--loop-predication",
      "--hotcoldsplit",
      "--div-rem-pairs",
      "--early-cse",
      "--canonicalize-aliases",
      "--strip-dead-prototypes",
      "-loop-reduce",
      "--called-value-propagation",
      "--cross-dso-cfi",
      "--loweratomic",
      "--loop-sink",
      "--loop-vectorize",
      "--barrier",
      "--redundant-dbg-inst-elim"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}