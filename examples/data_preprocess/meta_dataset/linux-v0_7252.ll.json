{
  "program_id": "linux-v0_7252.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 61,
    "onePredOneSuc": 44,
    "onePredTwoSuc": 15,
    "oneSuccessor": 58,
    "twoPred": 23,
    "twoPredOneSuc": 7,
    "twoEach": 11,
    "twoSuccessor": 29,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 110,
    "BeginPhi": 0,
    "BranchCount": 87,
    "returnInt": 15,
    "CriticalCount": 10,
    "NumEdges": 120,
    "const32Bit": 420,
    "const64Bit": 33,
    "numConstZeroes": 199,
    "numConstOnes": 118,
    "UncondBranches": 58,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 71,
    "NumAndInst": 9,
    "BlockMid": 17,
    "BlockLow": 93,
    "NumBitCastInst": 5,
    "NumBrInst": 87,
    "NumCallInst": 53,
    "NumGetElementPtrInst": 148,
    "NumICmpInst": 30,
    "NumLShrInst": 0,
    "NumLoadInst": 240,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 135,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 3,
    "NumZExtInst": 19,
    "TotalBlocks": 110,
    "TotalInsts": 858,
    "TotalMemInst": 647,
    "TotalFuncs": 36,
    "ArgsPhi": 0,
    "testUnary": 352
  },
  "baseline_oz_instcount": 861,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--dce",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--mergeicmps",
          "--strip-dead-prototypes",
          "--insert-gcov-profiling",
          "--strip-debug-declare",
          "--forceattrs",
          "--mem2reg",
          "--lower-matrix-intrinsics",
          "--load-store-vectorizer",
          "--add-discriminators",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--mergeicmps",
      "--strip-dead-prototypes",
      "--insert-gcov-profiling",
      "--strip-debug-declare",
      "--forceattrs",
      "--mem2reg",
      "--lower-matrix-intrinsics",
      "--load-store-vectorizer",
      "--add-discriminators",
      "--inline"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}