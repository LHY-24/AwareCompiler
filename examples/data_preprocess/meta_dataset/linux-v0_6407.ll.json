{
  "program_id": "linux-v0_6407.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 87,
    "onePredOneSuc": 66,
    "onePredTwoSuc": 17,
    "oneSuccessor": 77,
    "twoPred": 19,
    "twoPredOneSuc": 9,
    "twoEach": 6,
    "twoSuccessor": 36,
    "morePreds": 13,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 146,
    "BeginPhi": 0,
    "BranchCount": 113,
    "returnInt": 33,
    "CriticalCount": 18,
    "NumEdges": 173,
    "const32Bit": 396,
    "const64Bit": 28,
    "numConstZeroes": 168,
    "numConstOnes": 145,
    "UncondBranches": 77,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 101,
    "NumAndInst": 11,
    "BlockMid": 14,
    "BlockLow": 132,
    "NumBitCastInst": 25,
    "NumBrInst": 113,
    "NumCallInst": 86,
    "NumGetElementPtrInst": 94,
    "NumICmpInst": 38,
    "NumLShrInst": 0,
    "NumLoadInst": 284,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 27,
    "NumSExtInst": 6,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 154,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 146,
    "TotalInsts": 973,
    "TotalMemInst": 719,
    "TotalFuncs": 54,
    "ArgsPhi": 0,
    "testUnary": 438
  },
  "baseline_oz_instcount": 973,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loweratomic",
          "--lowerinvoke",
          "--libcalls-shrinkwrap",
          "-loop-reduce",
          "--gvn",
          "--insert-gcov-profiling",
          "--slp-vectorizer",
          "--consthoist",
          "--globalsplit",
          "--lower-widenable-condition",
          "--ipsccp",
          "--loop-deletion",
          "--lower-matrix-intrinsics",
          "--partial-inliner",
          "--rpo-functionattrs",
          "--sccp",
          "--loop-unswitch",
          "--aggressive-instcombine",
          "--gvn-hoist",
          "--sink",
          "--loop-sink",
          "--loop-distribute",
          "--loop-load-elim",
          "--loop-unroll",
          "--forceattrs",
          "--sancov",
          "--name-anon-globals",
          "--constprop",
          "--partially-inline-libcalls",
          "--barrier"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loweratomic",
      "--lowerinvoke",
      "--libcalls-shrinkwrap",
      "-loop-reduce",
      "--gvn",
      "--insert-gcov-profiling",
      "--slp-vectorizer",
      "--consthoist",
      "--globalsplit",
      "--lower-widenable-condition",
      "--ipsccp",
      "--loop-deletion",
      "--lower-matrix-intrinsics",
      "--partial-inliner",
      "--rpo-functionattrs",
      "--sccp",
      "--loop-unswitch",
      "--aggressive-instcombine",
      "--gvn-hoist",
      "--sink",
      "--loop-sink",
      "--loop-distribute",
      "--loop-load-elim",
      "--loop-unroll",
      "--forceattrs",
      "--sancov",
      "--name-anon-globals",
      "--constprop",
      "--partially-inline-libcalls",
      "--barrier"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}