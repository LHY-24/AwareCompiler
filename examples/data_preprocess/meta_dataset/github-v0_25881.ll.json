{
  "program_id": "github-v0_25881.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 2,
    "oneSuccessor": 4,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 3,
    "CriticalCount": 0,
    "NumEdges": 10,
    "const32Bit": 11,
    "const64Bit": 0,
    "numConstZeroes": 2,
    "numConstOnes": 4,
    "UncondBranches": 4,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 3,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 10,
    "NumBitCastInst": 0,
    "NumBrInst": 7,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 1,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 7,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 32,
    "TotalMemInst": 19,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 4
  },
  "baseline_oz_instcount": 32,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--sroa",
    "--loop-deletion",
    "--early-cse-memssa",
    "--mldst-motion",
    "--early-cse",
    "--bdce",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partial-inliner",
          "--nary-reassociate",
          "--callsite-splitting",
          "--lowerswitch",
          "--newgvn",
          "--mldst-motion",
          "--loop-deletion",
          "--constmerge",
          "--forceattrs",
          "--lower-matrix-intrinsics",
          "--lcssa",
          "--mergefunc",
          "--pgo-memop-opt",
          "--scalarizer",
          "--deadargelim",
          "--lowerinvoke",
          "--lower-guard-intrinsic",
          "--argpromotion",
          "--dse",
          "--lower-widenable-condition",
          "--simple-loop-unswitch",
          "--loop-interchange",
          "--mem2reg",
          "--loweratomic",
          "--rewrite-statepoints-for-gc",
          "--jump-threading",
          "--memcpyopt",
          "--coro-early"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partial-inliner",
      "--nary-reassociate",
      "--callsite-splitting",
      "--lowerswitch",
      "--newgvn",
      "--mldst-motion",
      "--loop-deletion",
      "--constmerge",
      "--forceattrs",
      "--lower-matrix-intrinsics",
      "--lcssa",
      "--mergefunc",
      "--pgo-memop-opt",
      "--scalarizer",
      "--deadargelim",
      "--lowerinvoke",
      "--lower-guard-intrinsic",
      "--argpromotion",
      "--dse",
      "--lower-widenable-condition",
      "--simple-loop-unswitch",
      "--loop-interchange",
      "--mem2reg",
      "--loweratomic",
      "--rewrite-statepoints-for-gc",
      "--jump-threading",
      "--memcpyopt",
      "--coro-early"
    ],
    "performance_vs_Oz": "+6.2%"
  }
}