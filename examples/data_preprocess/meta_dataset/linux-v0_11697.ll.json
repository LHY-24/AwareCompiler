{
  "program_id": "linux-v0_11697.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 4,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 0,
    "oneSuccessor": 4,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 1,
    "BranchCount": 7,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 10,
    "const32Bit": 53,
    "const64Bit": 3,
    "numConstZeroes": 25,
    "numConstOnes": 18,
    "UncondBranches": 4,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 14,
    "NumAndInst": 2,
    "BlockMid": 2,
    "BlockLow": 13,
    "NumBitCastInst": 3,
    "NumBrInst": 7,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 8,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 19,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 4,
    "TotalBlocks": 15,
    "TotalInsts": 130,
    "TotalMemInst": 92,
    "TotalFuncs": 11,
    "ArgsPhi": 2,
    "testUnary": 58
  },
  "baseline_oz_instcount": 127,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--early-cse",
    "--sroa",
    "--simplifycfg",
    "--instsimplify",
    "--globalopt",
    "--loweratomic",
    "--aggressive-instcombine",
    "--ipsccp",
    "--mem2reg",
    "--lower-expect",
    "--loop-instsimplify",
    "--gvn",
    "--ipsccp",
    "--ipsccp",
    "--mem2reg",
    "--gvn",
    "--licm",
    "--inline",
    "--instsimplify",
    "--gvn-hoist",
    "--globalopt",
    "--elim-avail-extern",
    "--early-cse",
    "--sroa",
    "--simplifycfg",
    "--instsimplify",
    "--adce",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--inline",
    "--instsimplify",
    "--gvn-hoist",
    "--globalopt",
    "--elim-avail-extern",
    "--early-cse",
    "--lower-expect",
    "--early-cse",
    "--globalopt",
    "--inline",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--newgvn",
    "--aggressive-instcombine",
    "--gvn",
    "--dse",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--slp-vectorizer",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--inline",
          "--loop-data-prefetch",
          "--constprop",
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--lowerswitch",
          "--speculative-execution",
          "--infer-address-spaces",
          "--always-inline",
          "--break-crit-edges",
          "--argpromotion",
          "--tailcallelim",
          "--loop-distribute",
          "--partially-inline-libcalls",
          "--reg2mem",
          "--loop-instsimplify",
          "--lower-guard-intrinsic",
          "--strip-dead-prototypes",
          "--gvn",
          "--barrier",
          "--deadargelim",
          "--lowerinvoke",
          "--attributor",
          "--forceattrs",
          "--mergeicmps",
          "--loop-deletion",
          "--sroa",
          "--loop-rotate",
          "--ipsccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--inline",
      "--loop-data-prefetch",
      "--constprop",
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--lowerswitch",
      "--speculative-execution",
      "--infer-address-spaces",
      "--always-inline",
      "--break-crit-edges",
      "--argpromotion",
      "--tailcallelim",
      "--loop-distribute",
      "--partially-inline-libcalls",
      "--reg2mem",
      "--loop-instsimplify",
      "--lower-guard-intrinsic",
      "--strip-dead-prototypes",
      "--gvn",
      "--barrier",
      "--deadargelim",
      "--lowerinvoke",
      "--attributor",
      "--forceattrs",
      "--mergeicmps",
      "--loop-deletion",
      "--sroa",
      "--loop-rotate",
      "--ipsccp"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}