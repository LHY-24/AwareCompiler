{
  "program_id": "linux-v0_6903.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 84,
    "onePredOneSuc": 58,
    "onePredTwoSuc": 24,
    "oneSuccessor": 85,
    "twoPred": 40,
    "twoPredOneSuc": 25,
    "twoEach": 9,
    "twoSuccessor": 38,
    "morePreds": 2,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 140,
    "BeginPhi": 4,
    "BranchCount": 121,
    "returnInt": 32,
    "CriticalCount": 11,
    "NumEdges": 173,
    "const32Bit": 300,
    "const64Bit": 20,
    "numConstZeroes": 135,
    "numConstOnes": 107,
    "UncondBranches": 85,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 82,
    "NumAndInst": 2,
    "BlockMid": 16,
    "BlockLow": 128,
    "NumBitCastInst": 21,
    "NumBrInst": 121,
    "NumCallInst": 84,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 28,
    "NumLShrInst": 0,
    "NumLoadInst": 250,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 4,
    "NumRetInst": 18,
    "NumSExtInst": 9,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 108,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 8,
    "NumZExtInst": 23,
    "TotalBlocks": 144,
    "TotalInsts": 859,
    "TotalMemInst": 611,
    "TotalFuncs": 38,
    "ArgsPhi": 8,
    "testUnary": 390
  },
  "baseline_oz_instcount": 861,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--early-cse",
    "--slp-vectorizer",
    "--simplifycfg",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--die",
    "--mem2reg",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--reassociate",
    "--inline",
    "--memcpyopt",
    "--gvn-hoist",
    "--die",
    "--early-cse-memssa",
    "--sccp",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--instsimplify",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--die",
    "--jump-threading",
    "--dce",
    "--reassociate",
    "--inline",
    "--memcpyopt",
    "--gvn-hoist",
    "--die",
    "--early-cse-memssa",
    "--sccp",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--instsimplify",
    "--aggressive-instcombine",
    "--reassociate",
    "--inline",
    "--licm",
    "--die",
    "--loop-instsimplify",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipconstprop",
          "--pgo-memop-opt",
          "--correlated-propagation",
          "-loop-reduce",
          "--libcalls-shrinkwrap",
          "--bdce",
          "--sancov",
          "--sroa",
          "--loop-simplify",
          "--lower-widenable-condition",
          "--globaldce",
          "--aggressive-instcombine",
          "--lower-expect",
          "--loop-predication",
          "--loop-interchange",
          "--attributor",
          "--loop-reroll",
          "--lower-constant-intrinsics",
          "--loop-guard-widening",
          "--loop-instsimplify",
          "--loop-deletion",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipconstprop",
      "--pgo-memop-opt",
      "--correlated-propagation",
      "-loop-reduce",
      "--libcalls-shrinkwrap",
      "--bdce",
      "--sancov",
      "--sroa",
      "--loop-simplify",
      "--lower-widenable-condition",
      "--globaldce",
      "--aggressive-instcombine",
      "--lower-expect",
      "--loop-predication",
      "--loop-interchange",
      "--attributor",
      "--loop-reroll",
      "--lower-constant-intrinsics",
      "--loop-guard-widening",
      "--loop-instsimplify",
      "--loop-deletion",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}