{
  "program_id": "github-v0_13220.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 95,
    "onePredOneSuc": 56,
    "onePredTwoSuc": 39,
    "oneSuccessor": 74,
    "twoPred": 30,
    "twoPredOneSuc": 12,
    "twoEach": 17,
    "twoSuccessor": 60,
    "morePreds": 9,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 137,
    "BeginPhi": 4,
    "BranchCount": 134,
    "returnInt": 37,
    "CriticalCount": 30,
    "NumEdges": 194,
    "const32Bit": 222,
    "const64Bit": 9,
    "numConstZeroes": 95,
    "numConstOnes": 72,
    "UncondBranches": 74,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 48,
    "NumAndInst": 5,
    "BlockMid": 5,
    "BlockLow": 136,
    "NumBitCastInst": 4,
    "NumBrInst": 134,
    "NumCallInst": 47,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 60,
    "NumLShrInst": 0,
    "NumLoadInst": 201,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 7,
    "NumSExtInst": 25,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 101,
    "NumSubInst": 2,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 141,
    "TotalInsts": 709,
    "TotalMemInst": 445,
    "TotalFuncs": 16,
    "ArgsPhi": 8,
    "testUnary": 291
  },
  "baseline_oz_instcount": 710,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--bdce",
    "--load-store-vectorizer",
    "--adce",
    "--newgvn",
    "--aggressive-instcombine",
    "--mergefunc",
    "--correlated-propagation",
    "--sroa",
    "--gvn",
    "--flattencfg",
    "--simplifycfg",
    "--instsimplify",
    "--prune-eh",
    "--inline",
    "--prune-eh",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--bdce",
          "--coro-early",
          "--inline",
          "--lower-constant-intrinsics",
          "--ee-instrument",
          "--die",
          "--constmerge",
          "--loop-unroll-and-jam",
          "--aggressive-instcombine",
          "--div-rem-pairs",
          "--infer-address-spaces",
          "--lower-widenable-condition"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--bdce",
      "--coro-early",
      "--inline",
      "--lower-constant-intrinsics",
      "--ee-instrument",
      "--die",
      "--constmerge",
      "--loop-unroll-and-jam",
      "--aggressive-instcombine",
      "--div-rem-pairs",
      "--infer-address-spaces",
      "--lower-widenable-condition"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}