{
  "program_id": "github-v0_7611.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 41,
    "const64Bit": 61,
    "numConstZeroes": 60,
    "numConstOnes": 24,
    "UncondBranches": 9,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 4,
    "BlockMid": 5,
    "BlockLow": 13,
    "NumBitCastInst": 12,
    "NumBrInst": 14,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 5,
    "NumLShrInst": 2,
    "NumLoadInst": 34,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 18,
    "TotalInsts": 178,
    "TotalMemInst": 119,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 65
  },
  "baseline_oz_instcount": 178,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--simplifycfg",
    "--mergefunc",
    "--instsimplify",
    "--slp-vectorizer",
    "--early-cse",
    "--gvn",
    "--loop-rotate",
    "--inline",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--dse",
    "--sccp",
    "--dce",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--gvn-hoist",
    "--licm",
    "--gvn-hoist",
    "--jump-threading",
    "--early-cse",
    "--ipsccp",
    "--dce",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--early-cse",
    "--bdce",
    "--reassociate",
    "--loop-instsimplify",
    "--instcombine",
    "--dse",
    "--early-cse",
    "--lower-expect",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--dse",
    "--early-cse",
    "--lower-expect",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--gvn",
    "--die",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--dse",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--bdce",
          "--coro-elide",
          "--cross-dso-cfi",
          "--loweratomic",
          "--float2int",
          "--loop-interchange",
          "--die",
          "--loop-unroll",
          "--aggressive-instcombine",
          "--globalopt",
          "--licm",
          "--strip-debug-declare",
          "--instcombine",
          "--ipconstprop",
          "--irce",
          "--mldst-motion",
          "--loop-instsimplify",
          "--break-crit-edges",
          "--coro-split",
          "--loop-rotate",
          "--ipsccp",
          "--functionattrs",
          "--loop-versioning",
          "--separate-const-offset-from-gep",
          "--add-discriminators",
          "--loop-fusion",
          "--loop-deletion",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--bdce",
      "--coro-elide",
      "--cross-dso-cfi",
      "--loweratomic",
      "--float2int",
      "--loop-interchange",
      "--die",
      "--loop-unroll",
      "--aggressive-instcombine",
      "--globalopt",
      "--licm",
      "--strip-debug-declare",
      "--instcombine",
      "--ipconstprop",
      "--irce",
      "--mldst-motion",
      "--loop-instsimplify",
      "--break-crit-edges",
      "--coro-split",
      "--loop-rotate",
      "--ipsccp",
      "--functionattrs",
      "--loop-versioning",
      "--separate-const-offset-from-gep",
      "--add-discriminators",
      "--loop-fusion",
      "--loop-deletion",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}