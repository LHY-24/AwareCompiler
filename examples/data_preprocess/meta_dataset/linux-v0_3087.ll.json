{
  "program_id": "linux-v0_3087.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 60,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 10,
    "oneSuccessor": 56,
    "twoPred": 15,
    "twoPredOneSuc": 5,
    "twoEach": 7,
    "twoSuccessor": 23,
    "morePreds": 5,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 104,
    "BeginPhi": 2,
    "BranchCount": 79,
    "returnInt": 3,
    "CriticalCount": 5,
    "NumEdges": 107,
    "const32Bit": 216,
    "const64Bit": 30,
    "numConstZeroes": 80,
    "numConstOnes": 115,
    "UncondBranches": 56,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 92,
    "NumAndInst": 7,
    "BlockMid": 8,
    "BlockLow": 98,
    "NumBitCastInst": 15,
    "NumBrInst": 79,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 32,
    "NumLShrInst": 0,
    "NumLoadInst": 158,
    "NumMulInst": 2,
    "NumOrInst": 5,
    "NumPHIInst": 2,
    "NumRetInst": 26,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 126,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 14,
    "NumZExtInst": 14,
    "TotalBlocks": 106,
    "TotalInsts": 689,
    "TotalMemInst": 471,
    "TotalFuncs": 39,
    "ArgsPhi": 4,
    "testUnary": 294
  },
  "baseline_oz_instcount": 689,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--instsimplify",
    "--lower-expect",
    "--aggressive-instcombine",
    "--dse",
    "--instcombine",
    "--licm",
    "--instsimplify",
    "--load-store-vectorizer",
    "--slsr",
    "--simplifycfg",
    "--inline",
    "--loop-simplifycfg",
    "--bdce",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--gvn-hoist",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rewrite-statepoints-for-gc",
          "--loop-vectorize",
          "--name-anon-globals",
          "--sink",
          "--inline",
          "--ee-instrument",
          "--callsite-splitting",
          "--simplifycfg",
          "--aggressive-instcombine",
          "--strip-nondebug",
          "--bdce",
          "--memcpyopt",
          "--mldst-motion",
          "--lower-matrix-intrinsics",
          "--loop-idiom",
          "--load-store-vectorizer",
          "--mem2reg",
          "--coro-early",
          "--add-discriminators",
          "--lower-widenable-condition",
          "--instnamer",
          "--mergefunc",
          "--loop-simplifycfg",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rewrite-statepoints-for-gc",
      "--loop-vectorize",
      "--name-anon-globals",
      "--sink",
      "--inline",
      "--ee-instrument",
      "--callsite-splitting",
      "--simplifycfg",
      "--aggressive-instcombine",
      "--strip-nondebug",
      "--bdce",
      "--memcpyopt",
      "--mldst-motion",
      "--lower-matrix-intrinsics",
      "--loop-idiom",
      "--load-store-vectorizer",
      "--mem2reg",
      "--coro-early",
      "--add-discriminators",
      "--lower-widenable-condition",
      "--instnamer",
      "--mergefunc",
      "--loop-simplifycfg",
      "--float2int"
    ],
    "performance_vs_Oz": "+3.0%"
  }
}