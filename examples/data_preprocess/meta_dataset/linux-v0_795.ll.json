{
  "program_id": "linux-v0_795.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 50,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 21,
    "oneSuccessor": 40,
    "twoPred": 18,
    "twoPredOneSuc": 10,
    "twoEach": 5,
    "twoSuccessor": 33,
    "morePreds": 5,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 88,
    "BeginPhi": 2,
    "BranchCount": 73,
    "returnInt": 15,
    "CriticalCount": 22,
    "NumEdges": 106,
    "const32Bit": 220,
    "const64Bit": 27,
    "numConstZeroes": 116,
    "numConstOnes": 82,
    "UncondBranches": 40,
    "binaryConstArg": 34,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 47,
    "NumAndInst": 8,
    "BlockMid": 11,
    "BlockLow": 79,
    "NumBitCastInst": 4,
    "NumBrInst": 73,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 40,
    "NumLShrInst": 8,
    "NumLoadInst": 208,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 17,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 93,
    "NumSubInst": 15,
    "NumTruncInst": 14,
    "NumXorInst": 13,
    "NumZExtInst": 26,
    "TotalBlocks": 90,
    "TotalInsts": 697,
    "TotalMemInst": 452,
    "TotalFuncs": 23,
    "ArgsPhi": 5,
    "testUnary": 310
  },
  "baseline_oz_instcount": 697,
  "knowledge_base_entry": [
    "--newgvn",
    "--gvn-hoist",
    "--reassociate",
    "--die",
    "--aggressive-instcombine",
    "--mergefunc",
    "--dse",
    "--jump-threading",
    "--mldst-motion",
    "--simplifycfg",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--post-inline-ee-instrument",
          "--load-store-vectorizer",
          "--strip",
          "--div-rem-pairs",
          "--sancov",
          "--aggressive-instcombine",
          "--elim-avail-extern",
          "--lower-matrix-intrinsics",
          "--strip-dead-prototypes",
          "--instcombine",
          "--simplifycfg",
          "--coro-early",
          "--loweratomic",
          "--adce",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--post-inline-ee-instrument",
      "--load-store-vectorizer",
      "--strip",
      "--div-rem-pairs",
      "--sancov",
      "--aggressive-instcombine",
      "--elim-avail-extern",
      "--lower-matrix-intrinsics",
      "--strip-dead-prototypes",
      "--instcombine",
      "--simplifycfg",
      "--coro-early",
      "--loweratomic",
      "--adce",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}