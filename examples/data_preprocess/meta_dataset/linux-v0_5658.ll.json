{
  "program_id": "linux-v0_5658.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 4,
    "oneSuccessor": 12,
    "twoPred": 3,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 5,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 28,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 10,
    "CriticalCount": 3,
    "NumEdges": 22,
    "const32Bit": 86,
    "const64Bit": 7,
    "numConstZeroes": 31,
    "numConstOnes": 48,
    "UncondBranches": 12,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 40,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 22,
    "NumBitCastInst": 5,
    "NumBrInst": 17,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 46,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 48,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 4,
    "NumZExtInst": 3,
    "TotalBlocks": 28,
    "TotalInsts": 236,
    "TotalMemInst": 180,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 102
  },
  "baseline_oz_instcount": 238,
  "knowledge_base_entry": [
    "--reassociate",
    "--dse",
    "--newgvn",
    "--newgvn",
    "--instcombine",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--loop-versioning",
          "--dse",
          "--ipsccp",
          "--instnamer",
          "--forceattrs",
          "--mergereturn",
          "--mem2reg",
          "--strip-nondebug",
          "--libcalls-shrinkwrap"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--loop-versioning",
      "--dse",
      "--ipsccp",
      "--instnamer",
      "--forceattrs",
      "--mergereturn",
      "--mem2reg",
      "--strip-nondebug",
      "--libcalls-shrinkwrap"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}