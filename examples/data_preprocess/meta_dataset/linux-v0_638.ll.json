{
  "program_id": "linux-v0_638.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 106,
    "onePredOneSuc": 72,
    "onePredTwoSuc": 31,
    "oneSuccessor": 93,
    "twoPred": 43,
    "twoPredOneSuc": 17,
    "twoEach": 20,
    "twoSuccessor": 61,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 169,
    "BeginPhi": 0,
    "BranchCount": 154,
    "returnInt": 41,
    "CriticalCount": 28,
    "NumEdges": 219,
    "const32Bit": 323,
    "const64Bit": 23,
    "numConstZeroes": 167,
    "numConstOnes": 160,
    "UncondBranches": 93,
    "binaryConstArg": 104,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 56,
    "NumAndInst": 53,
    "BlockMid": 9,
    "BlockLow": 160,
    "NumBitCastInst": 3,
    "NumBrInst": 154,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 87,
    "NumICmpInst": 62,
    "NumLShrInst": 22,
    "NumLoadInst": 257,
    "NumMulInst": 0,
    "NumOrInst": 12,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 7,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 135,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 28,
    "TotalBlocks": 169,
    "TotalInsts": 963,
    "TotalMemInst": 587,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 353
  },
  "baseline_oz_instcount": 965,
  "knowledge_base_entry": [
    "--bdce",
    "--early-cse",
    "--slp-vectorizer",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--constprop",
          "--loop-vectorize",
          "--alignment-from-assumptions",
          "--deadargelim",
          "--mergefunc",
          "--attributor",
          "--early-cse",
          "--strip-dead-prototypes",
          "--callsite-splitting"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--constprop",
      "--loop-vectorize",
      "--alignment-from-assumptions",
      "--deadargelim",
      "--mergefunc",
      "--attributor",
      "--early-cse",
      "--strip-dead-prototypes",
      "--callsite-splitting"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}