{
  "program_id": "linux-v0_980.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 7,
    "oneSuccessor": 18,
    "twoPred": 8,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 0,
    "BranchCount": 30,
    "returnInt": 9,
    "CriticalCount": 4,
    "NumEdges": 42,
    "const32Bit": 95,
    "const64Bit": 1,
    "numConstZeroes": 25,
    "numConstOnes": 47,
    "UncondBranches": 18,
    "binaryConstArg": 19,
    "NumAShrInst": 2,
    "NumAddInst": 7,
    "NumAllocaInst": 37,
    "NumAndInst": 6,
    "BlockMid": 6,
    "BlockLow": 36,
    "NumBitCastInst": 7,
    "NumBrInst": 30,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 12,
    "NumLShrInst": 1,
    "NumLoadInst": 91,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 46,
    "NumSubInst": 2,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 27,
    "TotalBlocks": 42,
    "TotalInsts": 334,
    "TotalMemInst": 212,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 170
  },
  "baseline_oz_instcount": 334,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--ipsccp",
    "--aggressive-instcombine",
    "--dse",
    "--mergefunc",
    "--die",
    "--ipsccp",
    "--bdce",
    "--lower-expect",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--irce",
          "--hotcoldsplit",
          "--load-store-vectorizer",
          "--dce",
          "--insert-gcov-profiling",
          "--forceattrs",
          "--mldst-motion",
          "--deadargelim",
          "--globalopt",
          "--loop-sink",
          "--dse",
          "--ee-instrument",
          "--inferattrs",
          "--aggressive-instcombine",
          "--mergefunc",
          "--loop-rotate",
          "--elim-avail-extern",
          "--loop-interchange",
          "-loop-reduce",
          "--loop-simplify",
          "--lower-widenable-condition",
          "--loop-vectorize",
          "--lowerswitch",
          "--loop-load-elim",
          "--loweratomic",
          "--jump-threading",
          "--slp-vectorizer",
          "--called-value-propagation",
          "--flattencfg",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--irce",
      "--hotcoldsplit",
      "--load-store-vectorizer",
      "--dce",
      "--insert-gcov-profiling",
      "--forceattrs",
      "--mldst-motion",
      "--deadargelim",
      "--globalopt",
      "--loop-sink",
      "--dse",
      "--ee-instrument",
      "--inferattrs",
      "--aggressive-instcombine",
      "--mergefunc",
      "--loop-rotate",
      "--elim-avail-extern",
      "--loop-interchange",
      "-loop-reduce",
      "--loop-simplify",
      "--lower-widenable-condition",
      "--loop-vectorize",
      "--lowerswitch",
      "--loop-load-elim",
      "--loweratomic",
      "--jump-threading",
      "--slp-vectorizer",
      "--called-value-propagation",
      "--flattencfg",
      "--newgvn"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}