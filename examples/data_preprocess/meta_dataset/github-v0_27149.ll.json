{
  "program_id": "github-v0_27149.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 5,
    "oneSuccessor": 8,
    "twoPred": 8,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 0,
    "CriticalCount": 8,
    "NumEdges": 24,
    "const32Bit": 70,
    "const64Bit": 6,
    "numConstZeroes": 51,
    "numConstOnes": 15,
    "UncondBranches": 8,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 17,
    "NumBitCastInst": 2,
    "NumBrInst": 16,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 40,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 11,
    "NumSubInst": 2,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 19,
    "TotalInsts": 138,
    "TotalMemInst": 101,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 57
  },
  "baseline_oz_instcount": 139,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--load-store-vectorizer",
    "--lower-constant-intrinsics",
    "--die",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--adce",
    "--slp-vectorizer",
    "--mergefunc",
    "--load-store-vectorizer",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--gvn-hoist",
          "--float2int",
          "--always-inline",
          "--mem2reg",
          "--prune-eh",
          "--canonicalize-aliases",
          "--strip-debug-declare",
          "--infer-address-spaces",
          "--lower-widenable-condition",
          "--nary-reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--gvn-hoist",
      "--float2int",
      "--always-inline",
      "--mem2reg",
      "--prune-eh",
      "--canonicalize-aliases",
      "--strip-debug-declare",
      "--infer-address-spaces",
      "--lower-widenable-condition",
      "--nary-reassociate"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}