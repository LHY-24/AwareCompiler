{
  "program_id": "linux-v0_3428.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 70,
    "onePredOneSuc": 56,
    "onePredTwoSuc": 12,
    "oneSuccessor": 64,
    "twoPred": 11,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 19,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 98,
    "BeginPhi": 1,
    "BranchCount": 83,
    "returnInt": 24,
    "CriticalCount": 3,
    "NumEdges": 114,
    "const32Bit": 298,
    "const64Bit": 19,
    "numConstZeroes": 143,
    "numConstOnes": 94,
    "UncondBranches": 64,
    "binaryConstArg": 25,
    "NumAShrInst": 1,
    "NumAddInst": 11,
    "NumAllocaInst": 78,
    "NumAndInst": 5,
    "BlockMid": 9,
    "BlockLow": 90,
    "NumBitCastInst": 30,
    "NumBrInst": 83,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 70,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 159,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 14,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 2,
    "NumStoreInst": 114,
    "NumSubInst": 0,
    "NumTruncInst": 11,
    "NumXorInst": 5,
    "NumZExtInst": 14,
    "TotalBlocks": 99,
    "TotalInsts": 682,
    "TotalMemInst": 470,
    "TotalFuncs": 34,
    "ArgsPhi": 2,
    "testUnary": 297
  },
  "baseline_oz_instcount": 683,
  "knowledge_base_entry": [
    "--functionattrs",
    "--mergefunc",
    "--early-cse-memssa",
    "--slsr",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--lower-matrix-intrinsics",
          "--mergefunc",
          "--add-discriminators",
          "--aggressive-instcombine",
          "--lower-expect",
          "--loweratomic",
          "--loop-unswitch",
          "--elim-avail-extern",
          "--attributor",
          "--gvn-hoist",
          "--loop-guard-widening",
          "--strip-nondebug",
          "--memcpyopt",
          "--deadargelim",
          "--cross-dso-cfi",
          "--globalsplit",
          "--lowerinvoke",
          "--strip",
          "--indvars",
          "--adce",
          "--pgo-memop-opt",
          "--rpo-functionattrs",
          "--reassociate",
          "--alignment-from-assumptions",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--lower-matrix-intrinsics",
      "--mergefunc",
      "--add-discriminators",
      "--aggressive-instcombine",
      "--lower-expect",
      "--loweratomic",
      "--loop-unswitch",
      "--elim-avail-extern",
      "--attributor",
      "--gvn-hoist",
      "--loop-guard-widening",
      "--strip-nondebug",
      "--memcpyopt",
      "--deadargelim",
      "--cross-dso-cfi",
      "--globalsplit",
      "--lowerinvoke",
      "--strip",
      "--indvars",
      "--adce",
      "--pgo-memop-opt",
      "--rpo-functionattrs",
      "--reassociate",
      "--alignment-from-assumptions",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}