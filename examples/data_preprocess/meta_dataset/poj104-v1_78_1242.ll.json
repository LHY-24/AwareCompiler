{
  "program_id": "poj104-v1_78_1242.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 36,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 10,
    "oneSuccessor": 30,
    "twoPred": 13,
    "twoPredOneSuc": 5,
    "twoEach": 6,
    "twoSuccessor": 19,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 65,
    "BeginPhi": 0,
    "BranchCount": 49,
    "returnInt": 7,
    "CriticalCount": 7,
    "NumEdges": 68,
    "const32Bit": 68,
    "const64Bit": 37,
    "numConstZeroes": 8,
    "numConstOnes": 47,
    "UncondBranches": 30,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 37,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 61,
    "NumBitCastInst": 34,
    "NumBrInst": 49,
    "NumCallInst": 69,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 109,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 73,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 65,
    "TotalInsts": 431,
    "TotalMemInst": 298,
    "TotalFuncs": 28,
    "ArgsPhi": 0,
    "testUnary": 181
  },
  "baseline_oz_instcount": 155,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--reassociate",
    "--aggressive-instcombine",
    "--dce",
    "--elim-avail-extern",
    "--dse",
    "--instcombine",
    "--memcpyopt",
    "--newgvn",
    "--die",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--flattencfg",
    "--ipsccp",
    "--aggressive-instcombine",
    "--flattencfg",
    "--elim-avail-extern",
    "--inline",
    "--jump-threading",
    "--mldst-motion",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--loop-vectorize",
          "--hotcoldsplit",
          "--mergeicmps",
          "--elim-avail-extern",
          "--memcpyopt",
          "--inline",
          "--called-value-propagation",
          "--instnamer",
          "--simplifycfg",
          "--alignment-from-assumptions",
          "--forceattrs",
          "--speculative-execution",
          "--loop-sink",
          "--loop-load-elim",
          "--ipsccp",
          "--correlated-propagation",
          "--canonicalize-aliases",
          "--gvn-hoist",
          "--loop-guard-widening",
          "--sroa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+29.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--loop-vectorize",
      "--hotcoldsplit",
      "--mergeicmps",
      "--elim-avail-extern",
      "--memcpyopt",
      "--inline",
      "--called-value-propagation",
      "--instnamer",
      "--simplifycfg",
      "--alignment-from-assumptions",
      "--forceattrs",
      "--speculative-execution",
      "--loop-sink",
      "--loop-load-elim",
      "--ipsccp",
      "--correlated-propagation",
      "--canonicalize-aliases",
      "--gvn-hoist",
      "--loop-guard-widening",
      "--sroa"
    ],
    "performance_vs_Oz": "+29.0%"
  }
}