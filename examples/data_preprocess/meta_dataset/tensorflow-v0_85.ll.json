{
  "program_id": "tensorflow-v0_85.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 5,
    "onePred": 12,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 7,
    "oneSuccessor": 7,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 9,
    "morePreds": 1,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 5,
    "BranchCount": 12,
    "returnInt": 2,
    "CriticalCount": 6,
    "NumEdges": 25,
    "const32Bit": 21,
    "const64Bit": 22,
    "numConstZeroes": 31,
    "numConstOnes": 7,
    "UncondBranches": 7,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 1,
    "NumAndInst": 1,
    "BlockMid": 0,
    "BlockLow": 20,
    "NumBitCastInst": 3,
    "NumBrInst": 12,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 1,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 6,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 6,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 20,
    "TotalInsts": 69,
    "TotalMemInst": 31,
    "TotalFuncs": 16,
    "ArgsPhi": 12,
    "testUnary": 6
  },
  "baseline_oz_instcount": 68,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--instcombine",
    "--licm",
    "--lower-expect",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--inline",
    "--dce",
    "--ipsccp",
    "--gvn",
    "--nary-reassociate",
    "--mem2reg",
    "--adce",
    "--early-cse-memssa",
    "--newgvn",
    "--jump-threading",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--dce",
          "--memcpyopt",
          "--libcalls-shrinkwrap",
          "--sancov",
          "--lowerinvoke",
          "--pgo-memop-opt",
          "--infer-address-spaces",
          "--loop-instsimplify",
          "--simplifycfg",
          "--slp-vectorizer",
          "--loweratomic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--dce",
      "--memcpyopt",
      "--libcalls-shrinkwrap",
      "--sancov",
      "--lowerinvoke",
      "--pgo-memop-opt",
      "--infer-address-spaces",
      "--loop-instsimplify",
      "--simplifycfg",
      "--slp-vectorizer",
      "--loweratomic"
    ],
    "performance_vs_Oz": "+4.4%"
  }
}