{
  "program_id": "linux-v0_11247.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 10,
    "onePred": 37,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 7,
    "oneSuccessor": 36,
    "twoPred": 14,
    "twoPredOneSuc": 6,
    "twoEach": 5,
    "twoSuccessor": 16,
    "morePreds": 2,
    "BB03Phi": 10,
    "BBHiPhi": 0,
    "BBNoPhi": 52,
    "BeginPhi": 10,
    "BranchCount": 52,
    "returnInt": 4,
    "CriticalCount": 3,
    "NumEdges": 75,
    "const32Bit": 341,
    "const64Bit": 2,
    "numConstZeroes": 142,
    "numConstOnes": 88,
    "UncondBranches": 36,
    "binaryConstArg": 12,
    "NumAShrInst": 2,
    "NumAddInst": 1,
    "NumAllocaInst": 66,
    "NumAndInst": 9,
    "BlockMid": 14,
    "BlockLow": 48,
    "NumBitCastInst": 4,
    "NumBrInst": 52,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 109,
    "NumICmpInst": 22,
    "NumLShrInst": 1,
    "NumLoadInst": 160,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 10,
    "NumRetInst": 9,
    "NumSExtInst": 2,
    "NumSelectInst": 5,
    "NumShlInst": 1,
    "NumStoreInst": 117,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 16,
    "TotalBlocks": 62,
    "TotalInsts": 601,
    "TotalMemInst": 462,
    "TotalFuncs": 11,
    "ArgsPhi": 20,
    "testUnary": 250
  },
  "baseline_oz_instcount": 601,
  "knowledge_base_entry": [
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--dce",
    "--die",
    "--aggressive-instcombine",
    "--gvn",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--globalopt",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--indvars",
    "--loop-reroll",
    "--instcombine",
    "--simplifycfg",
    "--slsr",
    "--gvn",
    "--die",
    "--simplifycfg",
    "--early-cse",
    "--early-cse",
    "--loop-deletion",
    "--jump-threading",
    "--bdce",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--dce",
    "--die",
    "--aggressive-instcombine",
    "--lower-expect",
    "--load-store-vectorizer",
    "--indvars",
    "--loop-reroll",
    "--instcombine",
    "--die",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-elide",
          "--aggressive-instcombine",
          "--coro-early",
          "--redundant-dbg-inst-elim",
          "--bdce",
          "--strip",
          "--float2int",
          "--reassociate",
          "--loop-simplify",
          "--coro-cleanup",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-elide",
      "--aggressive-instcombine",
      "--coro-early",
      "--redundant-dbg-inst-elim",
      "--bdce",
      "--strip",
      "--float2int",
      "--reassociate",
      "--loop-simplify",
      "--coro-cleanup",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}