{
  "program_id": "poj104-v1_32_1004.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 10,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 13,
    "CriticalCount": 1,
    "NumEdges": 22,
    "const32Bit": 47,
    "const64Bit": 34,
    "numConstZeroes": 24,
    "numConstOnes": 31,
    "UncondBranches": 10,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 28,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 27,
    "NumBitCastInst": 26,
    "NumBrInst": 16,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 64,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 31,
    "NumSubInst": 8,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 33,
    "TotalInsts": 285,
    "TotalMemInst": 189,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 132
  },
  "baseline_oz_instcount": 73,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--mldst-motion",
    "--sroa",
    "--loop-instsimplify",
    "--newgvn",
    "--inline",
    "--gvn",
    "--elim-avail-extern",
    "--instcombine",
    "--nary-reassociate",
    "--slsr",
    "--loop-simplifycfg",
    "--lower-expect",
    "--gvn-hoist",
    "--prune-eh",
    "--early-cse-memssa",
    "--memcpyopt",
    "--instcombine",
    "--jump-threading",
    "--sccp",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-elide",
          "--rewrite-statepoints-for-gc",
          "--mergeicmps",
          "--early-cse-memssa",
          "--slsr",
          "--dce",
          "--lower-guard-intrinsic",
          "--loop-simplifycfg",
          "--sccp",
          "--instcombine",
          "--elim-avail-extern",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-elide",
      "--rewrite-statepoints-for-gc",
      "--mergeicmps",
      "--early-cse-memssa",
      "--slsr",
      "--dce",
      "--lower-guard-intrinsic",
      "--loop-simplifycfg",
      "--sccp",
      "--instcombine",
      "--elim-avail-extern",
      "--globaldce"
    ],
    "performance_vs_Oz": "+9.6%"
  }
}