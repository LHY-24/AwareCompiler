{
  "program_id": "linux-v0_8889.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 9,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 3,
    "oneSuccessor": 7,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 6,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 22,
    "BeginPhi": 1,
    "BranchCount": 13,
    "returnInt": 8,
    "CriticalCount": 4,
    "NumEdges": 19,
    "const32Bit": 66,
    "const64Bit": 5,
    "numConstZeroes": 26,
    "numConstOnes": 41,
    "UncondBranches": 7,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 30,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 19,
    "NumBitCastInst": 7,
    "NumBrInst": 13,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 65,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 10,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 5,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 7,
    "TotalBlocks": 23,
    "TotalInsts": 235,
    "TotalMemInst": 163,
    "TotalFuncs": 12,
    "ArgsPhi": 3,
    "testUnary": 120
  },
  "baseline_oz_instcount": 235,
  "knowledge_base_entry": [
    "--sroa",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--licm",
    "--reassociate",
    "--early-cse",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--coro-cleanup",
          "--loop-simplifycfg",
          "--add-discriminators",
          "--post-inline-ee-instrument",
          "--forceattrs",
          "--consthoist",
          "--always-inline",
          "--die",
          "--sccp",
          "--canonicalize-aliases",
          "--lower-constant-intrinsics",
          "--cross-dso-cfi",
          "--strip-dead-prototypes",
          "--instsimplify",
          "--dse",
          "--bdce",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--coro-cleanup",
      "--loop-simplifycfg",
      "--add-discriminators",
      "--post-inline-ee-instrument",
      "--forceattrs",
      "--consthoist",
      "--always-inline",
      "--die",
      "--sccp",
      "--canonicalize-aliases",
      "--lower-constant-intrinsics",
      "--cross-dso-cfi",
      "--strip-dead-prototypes",
      "--instsimplify",
      "--dse",
      "--bdce",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}