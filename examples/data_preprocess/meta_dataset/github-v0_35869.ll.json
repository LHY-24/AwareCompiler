{
  "program_id": "github-v0_35869.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 54,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 10,
    "oneSuccessor": 49,
    "twoPred": 18,
    "twoPredOneSuc": 4,
    "twoEach": 13,
    "twoSuccessor": 24,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 80,
    "BeginPhi": 0,
    "BranchCount": 73,
    "returnInt": 1,
    "CriticalCount": 7,
    "NumEdges": 100,
    "const32Bit": 209,
    "const64Bit": 22,
    "numConstZeroes": 123,
    "numConstOnes": 65,
    "UncondBranches": 49,
    "binaryConstArg": 40,
    "NumAShrInst": 1,
    "NumAddInst": 23,
    "NumAllocaInst": 39,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 71,
    "NumBitCastInst": 0,
    "NumBrInst": 73,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 83,
    "NumICmpInst": 24,
    "NumLShrInst": 9,
    "NumLoadInst": 189,
    "NumMulInst": 9,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 27,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 83,
    "NumSubInst": 13,
    "NumTruncInst": 11,
    "NumXorInst": 1,
    "NumZExtInst": 22,
    "TotalBlocks": 80,
    "TotalInsts": 635,
    "TotalMemInst": 408,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 288
  },
  "baseline_oz_instcount": 635,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--newgvn",
    "--early-cse-memssa",
    "--loop-reroll",
    "--sroa",
    "--loop-deletion",
    "--jump-threading",
    "--reassociate",
    "--lower-expect",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--gvn",
    "--globalopt",
    "--inline",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--adce",
          "--barrier",
          "--lowerinvoke",
          "--consthoist",
          "--jump-threading",
          "--loop-versioning",
          "--aggressive-instcombine",
          "--loop-unroll-and-jam",
          "--guard-widening",
          "--loop-distribute",
          "--early-cse",
          "--irce",
          "--instsimplify",
          "--separate-const-offset-from-gep",
          "--mldst-motion",
          "--loop-guard-widening",
          "--strip",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--adce",
      "--barrier",
      "--lowerinvoke",
      "--consthoist",
      "--jump-threading",
      "--loop-versioning",
      "--aggressive-instcombine",
      "--loop-unroll-and-jam",
      "--guard-widening",
      "--loop-distribute",
      "--early-cse",
      "--irce",
      "--instsimplify",
      "--separate-const-offset-from-gep",
      "--mldst-motion",
      "--loop-guard-widening",
      "--strip",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}