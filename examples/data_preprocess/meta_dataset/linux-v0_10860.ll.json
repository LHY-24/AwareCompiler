{
  "program_id": "linux-v0_10860.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 7,
    "oneSuccessor": 24,
    "twoPred": 12,
    "twoPredOneSuc": 6,
    "twoEach": 3,
    "twoSuccessor": 14,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 49,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 6,
    "CriticalCount": 7,
    "NumEdges": 52,
    "const32Bit": 222,
    "const64Bit": 11,
    "numConstZeroes": 37,
    "numConstOnes": 87,
    "UncondBranches": 24,
    "binaryConstArg": 75,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 72,
    "NumAndInst": 40,
    "BlockMid": 12,
    "BlockLow": 37,
    "NumBitCastInst": 4,
    "NumBrInst": 38,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 16,
    "NumLShrInst": 1,
    "NumLoadInst": 170,
    "NumMulInst": 1,
    "NumOrInst": 24,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 4,
    "NumSelectInst": 1,
    "NumShlInst": 15,
    "NumStoreInst": 92,
    "NumSubInst": 4,
    "NumTruncInst": 4,
    "NumXorInst": 4,
    "NumZExtInst": 9,
    "TotalBlocks": 49,
    "TotalInsts": 595,
    "TotalMemInst": 397,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 263
  },
  "baseline_oz_instcount": 595,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--loop-fusion",
    "--jump-threading",
    "--loop-deletion",
    "--sccp",
    "--dse",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--licm",
    "--loop-simplifycfg",
    "--sccp",
    "--adce",
    "--sccp",
    "--instsimplify",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--bdce",
    "--slp-vectorizer",
    "-loop-reduce",
    "--gvn-hoist",
    "--lower-expect",
    "--loop-instsimplify",
    "--mergefunc",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--instcombine",
    "--memcpyopt",
    "--sroa",
    "--lower-expect",
    "--loop-instsimplify",
    "--globalopt",
    "--gvn",
    "--newgvn",
    "--newgvn",
    "--ipsccp",
    "--instcombine",
    "--mergefunc",
    "--aggressive-instcombine",
    "--instcombine",
    "--gvn-hoist",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--loop-unroll",
          "--indvars",
          "--lower-constant-intrinsics",
          "--always-inline",
          "--loop-versioning-licm",
          "--partially-inline-libcalls",
          "--coro-split",
          "--redundant-dbg-inst-elim",
          "--lowerinvoke",
          "--strip",
          "--dse",
          "--memcpyopt",
          "--constmerge",
          "--infer-address-spaces",
          "--guard-widening",
          "--aggressive-instcombine",
          "--lowerswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--loop-unroll",
      "--indvars",
      "--lower-constant-intrinsics",
      "--always-inline",
      "--loop-versioning-licm",
      "--partially-inline-libcalls",
      "--coro-split",
      "--redundant-dbg-inst-elim",
      "--lowerinvoke",
      "--strip",
      "--dse",
      "--memcpyopt",
      "--constmerge",
      "--infer-address-spaces",
      "--guard-widening",
      "--aggressive-instcombine",
      "--lowerswitch"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}