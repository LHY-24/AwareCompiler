{
  "program_id": "github-v0_12526.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 67,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 17,
    "oneSuccessor": 59,
    "twoPred": 26,
    "twoPredOneSuc": 7,
    "twoEach": 17,
    "twoSuccessor": 38,
    "morePreds": 5,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 104,
    "BeginPhi": 3,
    "BranchCount": 97,
    "returnInt": 20,
    "CriticalCount": 21,
    "NumEdges": 140,
    "const32Bit": 143,
    "const64Bit": 16,
    "numConstZeroes": 63,
    "numConstOnes": 64,
    "UncondBranches": 59,
    "binaryConstArg": 39,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 35,
    "NumAndInst": 21,
    "BlockMid": 4,
    "BlockLow": 103,
    "NumBitCastInst": 0,
    "NumBrInst": 97,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 16,
    "NumICmpInst": 40,
    "NumLShrInst": 0,
    "NumLoadInst": 122,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 3,
    "NumRetInst": 9,
    "NumSExtInst": 17,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 93,
    "NumSubInst": 4,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 107,
    "TotalInsts": 529,
    "TotalMemInst": 292,
    "TotalFuncs": 17,
    "ArgsPhi": 6,
    "testUnary": 196
  },
  "baseline_oz_instcount": 531,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--dse",
    "--correlated-propagation",
    "--die",
    "--lower-constant-intrinsics",
    "--adce",
    "--jump-threading",
    "--newgvn",
    "--inline",
    "--memcpyopt",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--gvn",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalsplit",
          "--post-inline-ee-instrument",
          "--redundant-dbg-inst-elim",
          "--globalopt",
          "-loop-reduce",
          "--aggressive-instcombine",
          "--mldst-motion",
          "--early-cse",
          "--coro-split",
          "--early-cse-memssa",
          "--sink",
          "--loop-idiom",
          "--slsr",
          "--rewrite-statepoints-for-gc",
          "--globaldce",
          "--simplifycfg",
          "--loop-vectorize",
          "--loweratomic",
          "--lower-widenable-condition",
          "--adce",
          "--loop-versioning-licm",
          "--loop-reroll"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalsplit",
      "--post-inline-ee-instrument",
      "--redundant-dbg-inst-elim",
      "--globalopt",
      "-loop-reduce",
      "--aggressive-instcombine",
      "--mldst-motion",
      "--early-cse",
      "--coro-split",
      "--early-cse-memssa",
      "--sink",
      "--loop-idiom",
      "--slsr",
      "--rewrite-statepoints-for-gc",
      "--globaldce",
      "--simplifycfg",
      "--loop-vectorize",
      "--loweratomic",
      "--lower-widenable-condition",
      "--adce",
      "--loop-versioning-licm",
      "--loop-reroll"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}