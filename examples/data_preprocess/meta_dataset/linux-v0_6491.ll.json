{
  "program_id": "linux-v0_6491.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 39,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 14,
    "oneSuccessor": 29,
    "twoPred": 5,
    "twoPredOneSuc": 4,
    "twoEach": 0,
    "twoSuccessor": 19,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 0,
    "BranchCount": 46,
    "returnInt": 28,
    "CriticalCount": 2,
    "NumEdges": 70,
    "const32Bit": 180,
    "const64Bit": 6,
    "numConstZeroes": 80,
    "numConstOnes": 50,
    "UncondBranches": 29,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 41,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 53,
    "NumBitCastInst": 1,
    "NumBrInst": 46,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 39,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 128,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 69,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 59,
    "TotalInsts": 396,
    "TotalMemInst": 313,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 171
  },
  "baseline_oz_instcount": 398,
  "knowledge_base_entry": [
    "--gvn",
    "--sccp",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--loop-reroll",
    "-loop-reduce",
    "--load-store-vectorizer",
    "--die",
    "--ipsccp",
    "--loop-instsimplify",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--slp-vectorizer",
          "--simple-loop-unswitch",
          "--loop-instsimplify",
          "--inferattrs",
          "--loop-versioning",
          "--coro-cleanup",
          "--slsr",
          "--reassociate",
          "--coro-elide",
          "--lower-matrix-intrinsics",
          "--rpo-functionattrs",
          "--libcalls-shrinkwrap",
          "--loop-reroll",
          "--loop-predication",
          "--loop-simplifycfg",
          "--globalsplit",
          "--load-store-vectorizer",
          "--globaldce",
          "--argpromotion",
          "--loop-unswitch",
          "--dce",
          "--strip-debug-declare",
          "--inject-tli-mappings",
          "--newgvn",
          "--tailcallelim",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--slp-vectorizer",
      "--simple-loop-unswitch",
      "--loop-instsimplify",
      "--inferattrs",
      "--loop-versioning",
      "--coro-cleanup",
      "--slsr",
      "--reassociate",
      "--coro-elide",
      "--lower-matrix-intrinsics",
      "--rpo-functionattrs",
      "--libcalls-shrinkwrap",
      "--loop-reroll",
      "--loop-predication",
      "--loop-simplifycfg",
      "--globalsplit",
      "--load-store-vectorizer",
      "--globaldce",
      "--argpromotion",
      "--loop-unswitch",
      "--dce",
      "--strip-debug-declare",
      "--inject-tli-mappings",
      "--newgvn",
      "--tailcallelim",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}