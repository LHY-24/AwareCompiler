{
  "program_id": "github-v0_28677.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 0,
    "oneSuccessor": 6,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 1,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 7,
    "CriticalCount": 1,
    "NumEdges": 12,
    "const32Bit": 24,
    "const64Bit": 1,
    "numConstZeroes": 10,
    "numConstOnes": 13,
    "UncondBranches": 6,
    "binaryConstArg": 4,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 9,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 6,
    "NumBitCastInst": 1,
    "NumBrInst": 7,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 44,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 13,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 9,
    "TotalInsts": 111,
    "TotalMemInst": 84,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 65
  },
  "baseline_oz_instcount": 111,
  "knowledge_base_entry": [
    "--adce",
    "--simplifycfg",
    "--ipsccp",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--licm",
    "--early-cse",
    "--loop-fusion",
    "--jump-threading",
    "--correlated-propagation",
    "--dce",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipconstprop",
          "--lowerinvoke",
          "--attributor",
          "--loop-unroll-and-jam",
          "--called-value-propagation",
          "--gvn",
          "--loop-deletion",
          "--aggressive-instcombine",
          "--cross-dso-cfi",
          "--div-rem-pairs",
          "--ee-instrument",
          "--loop-instsimplify",
          "--inject-tli-mappings",
          "--speculative-execution",
          "--inline",
          "--instnamer",
          "--instcombine",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipconstprop",
      "--lowerinvoke",
      "--attributor",
      "--loop-unroll-and-jam",
      "--called-value-propagation",
      "--gvn",
      "--loop-deletion",
      "--aggressive-instcombine",
      "--cross-dso-cfi",
      "--div-rem-pairs",
      "--ee-instrument",
      "--loop-instsimplify",
      "--inject-tli-mappings",
      "--speculative-execution",
      "--inline",
      "--instnamer",
      "--instcombine",
      "--float2int"
    ],
    "performance_vs_Oz": "+4.5%"
  }
}