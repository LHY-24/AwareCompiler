{
  "program_id": "github-v0_7497.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 28,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 2,
    "oneSuccessor": 28,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 8,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 0,
    "BranchCount": 38,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 48,
    "const32Bit": 63,
    "const64Bit": 0,
    "numConstZeroes": 11,
    "numConstOnes": 48,
    "UncondBranches": 28,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 36,
    "NumAndInst": 2,
    "BlockMid": 6,
    "BlockLow": 40,
    "NumBitCastInst": 0,
    "NumBrInst": 38,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 78,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 56,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 6,
    "NumZExtInst": 18,
    "TotalBlocks": 46,
    "TotalInsts": 286,
    "TotalMemInst": 189,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 140
  },
  "baseline_oz_instcount": 286,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--early-cse",
    "--lower-expect",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--sroa",
    "--gvn",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partial-inliner",
          "--forceattrs",
          "--rewrite-statepoints-for-gc",
          "--ipconstprop",
          "--instcombine",
          "--instsimplify",
          "--mem2reg",
          "--libcalls-shrinkwrap",
          "--mldst-motion",
          "--pgo-memop-opt",
          "--bdce",
          "--loop-versioning-licm",
          "--separate-const-offset-from-gep",
          "--globalsplit",
          "--simplifycfg",
          "--hotcoldsplit",
          "--mergefunc",
          "--constprop",
          "--reg2mem",
          "--slp-vectorizer",
          "--ipsccp",
          "--dce",
          "--loop-unswitch",
          "--deadargelim",
          "--lower-constant-intrinsics",
          "--loop-reroll",
          "--aggressive-instcombine",
          "--lcssa",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partial-inliner",
      "--forceattrs",
      "--rewrite-statepoints-for-gc",
      "--ipconstprop",
      "--instcombine",
      "--instsimplify",
      "--mem2reg",
      "--libcalls-shrinkwrap",
      "--mldst-motion",
      "--pgo-memop-opt",
      "--bdce",
      "--loop-versioning-licm",
      "--separate-const-offset-from-gep",
      "--globalsplit",
      "--simplifycfg",
      "--hotcoldsplit",
      "--mergefunc",
      "--constprop",
      "--reg2mem",
      "--slp-vectorizer",
      "--ipsccp",
      "--dce",
      "--loop-unswitch",
      "--deadargelim",
      "--lower-constant-intrinsics",
      "--loop-reroll",
      "--aggressive-instcombine",
      "--lcssa",
      "--globalopt"
    ],
    "performance_vs_Oz": "+3.1%"
  }
}