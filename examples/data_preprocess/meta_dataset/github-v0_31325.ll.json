{
  "program_id": "github-v0_31325.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 11,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 47,
    "const64Bit": 3,
    "numConstZeroes": 13,
    "numConstOnes": 14,
    "UncondBranches": 0,
    "binaryConstArg": 34,
    "NumAShrInst": 2,
    "NumAddInst": 14,
    "NumAllocaInst": 0,
    "NumAndInst": 15,
    "BlockMid": 6,
    "BlockLow": 0,
    "NumBitCastInst": 9,
    "NumBrInst": 0,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 1,
    "NumLShrInst": 7,
    "NumLoadInst": 7,
    "NumMulInst": 9,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 3,
    "NumSelectInst": 1,
    "NumShlInst": 8,
    "NumStoreInst": 7,
    "NumSubInst": 2,
    "NumTruncInst": 11,
    "NumXorInst": 3,
    "NumZExtInst": 6,
    "TotalBlocks": 6,
    "TotalInsts": 170,
    "TotalMemInst": 40,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 42
  },
  "baseline_oz_instcount": 169,
  "knowledge_base_entry": [
    "--ipsccp",
    "--flattencfg",
    "--mem2reg",
    "--adce",
    "--gvn",
    "-loop-reduce",
    "--instcombine",
    "--correlated-propagation",
    "--reassociate",
    "--licm",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--memcpyopt",
    "--sroa",
    "--aggressive-instcombine",
    "--dse",
    "--instcombine",
    "--reassociate",
    "--instcombine",
    "--nary-reassociate",
    "--early-cse",
    "--elim-avail-extern",
    "--flattencfg",
    "--mergefunc",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--irce",
          "--ipconstprop",
          "--aggressive-instcombine",
          "--lowerinvoke",
          "--globalopt",
          "--loop-deletion",
          "--lcssa",
          "--hotcoldsplit",
          "--mergefunc",
          "--loop-simplifycfg",
          "--adce",
          "-loop-reduce",
          "--instcombine",
          "--dse",
          "--constmerge",
          "--break-crit-edges",
          "--pgo-memop-opt",
          "--coro-split",
          "--strip-dead-prototypes",
          "--coro-cleanup",
          "--lower-widenable-condition",
          "--constprop",
          "--simplifycfg",
          "--gvn",
          "--nary-reassociate",
          "--consthoist",
          "--sccp",
          "--separate-const-offset-from-gep",
          "--insert-gcov-profiling"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--irce",
      "--ipconstprop",
      "--aggressive-instcombine",
      "--lowerinvoke",
      "--globalopt",
      "--loop-deletion",
      "--lcssa",
      "--hotcoldsplit",
      "--mergefunc",
      "--loop-simplifycfg",
      "--adce",
      "-loop-reduce",
      "--instcombine",
      "--dse",
      "--constmerge",
      "--break-crit-edges",
      "--pgo-memop-opt",
      "--coro-split",
      "--strip-dead-prototypes",
      "--coro-cleanup",
      "--lower-widenable-condition",
      "--constprop",
      "--simplifycfg",
      "--gvn",
      "--nary-reassociate",
      "--consthoist",
      "--sccp",
      "--separate-const-offset-from-gep",
      "--insert-gcov-profiling"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}