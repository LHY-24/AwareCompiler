{
  "program_id": "github-v0_26304.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 108,
    "onePredOneSuc": 97,
    "onePredTwoSuc": 9,
    "oneSuccessor": 105,
    "twoPred": 37,
    "twoPredOneSuc": 5,
    "twoEach": 27,
    "twoSuccessor": 42,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 155,
    "BeginPhi": 2,
    "BranchCount": 147,
    "returnInt": 21,
    "CriticalCount": 1,
    "NumEdges": 189,
    "const32Bit": 153,
    "const64Bit": 9,
    "numConstZeroes": 65,
    "numConstOnes": 93,
    "UncondBranches": 105,
    "binaryConstArg": 35,
    "NumAShrInst": 0,
    "NumAddInst": 49,
    "NumAllocaInst": 52,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 146,
    "NumBitCastInst": 16,
    "NumBrInst": 147,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 41,
    "NumLShrInst": 0,
    "NumLoadInst": 276,
    "NumMulInst": 37,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 10,
    "NumSExtInst": 34,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 110,
    "NumSubInst": 4,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 157,
    "TotalInsts": 891,
    "TotalMemInst": 525,
    "TotalFuncs": 23,
    "ArgsPhi": 4,
    "testUnary": 393
  },
  "baseline_oz_instcount": 891,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--jump-threading",
    "--dce",
    "--mem2reg",
    "--newgvn",
    "--dse",
    "--lower-expect",
    "--instcombine",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--insert-gcov-profiling",
          "--loop-unroll",
          "--dse",
          "--argpromotion",
          "--coro-cleanup",
          "--forceattrs",
          "--lower-matrix-intrinsics",
          "--nary-reassociate",
          "--jump-threading",
          "--strip",
          "--loop-simplifycfg",
          "--gvn",
          "--deadargelim",
          "--loop-versioning",
          "--ipconstprop",
          "--mergeicmps",
          "--functionattrs",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--insert-gcov-profiling",
      "--loop-unroll",
      "--dse",
      "--argpromotion",
      "--coro-cleanup",
      "--forceattrs",
      "--lower-matrix-intrinsics",
      "--nary-reassociate",
      "--jump-threading",
      "--strip",
      "--loop-simplifycfg",
      "--gvn",
      "--deadargelim",
      "--loop-versioning",
      "--ipconstprop",
      "--mergeicmps",
      "--functionattrs",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}