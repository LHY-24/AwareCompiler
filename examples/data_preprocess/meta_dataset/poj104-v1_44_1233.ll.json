{
  "program_id": "poj104-v1_44_1233.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 3,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 3,
    "twoEach": 1,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 21,
    "const32Bit": 27,
    "const64Bit": 10,
    "numConstZeroes": 9,
    "numConstOnes": 9,
    "UncondBranches": 11,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 19,
    "NumBitCastInst": 10,
    "NumBrInst": 16,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 23,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 20,
    "TotalInsts": 112,
    "TotalMemInst": 64,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 40
  },
  "baseline_oz_instcount": 63,
  "knowledge_base_entry": [
    "--sroa",
    "--gvn-hoist",
    "--simplifycfg",
    "-loop-reduce",
    "--instcombine",
    "--die",
    "--simplifycfg",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--loweratomic",
    "--instcombine",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--sroa",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--licm",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--slp-vectorizer",
    "--gvn",
    "--bdce",
    "--ipsccp",
    "--early-cse",
    "--prune-eh",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rewrite-statepoints-for-gc",
          "--lower-widenable-condition",
          "--coro-cleanup",
          "--speculative-execution",
          "--redundant-dbg-inst-elim",
          "--loop-unswitch",
          "--jump-threading",
          "--correlated-propagation",
          "--loop-versioning",
          "--slsr",
          "--instcombine",
          "--loop-sink",
          "--lower-constant-intrinsics",
          "--forceattrs",
          "--lcssa",
          "--loop-deletion",
          "--loop-load-elim",
          "--constprop",
          "--early-cse",
          "--mem2reg",
          "--adce",
          "--partial-inliner",
          "--strip-debug-declare",
          "--slp-vectorizer",
          "--ipconstprop",
          "--elim-avail-extern",
          "--mergeicmps",
          "--tailcallelim",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+17.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rewrite-statepoints-for-gc",
      "--lower-widenable-condition",
      "--coro-cleanup",
      "--speculative-execution",
      "--redundant-dbg-inst-elim",
      "--loop-unswitch",
      "--jump-threading",
      "--correlated-propagation",
      "--loop-versioning",
      "--slsr",
      "--instcombine",
      "--loop-sink",
      "--lower-constant-intrinsics",
      "--forceattrs",
      "--lcssa",
      "--loop-deletion",
      "--loop-load-elim",
      "--constprop",
      "--early-cse",
      "--mem2reg",
      "--adce",
      "--partial-inliner",
      "--strip-debug-declare",
      "--slp-vectorizer",
      "--ipconstprop",
      "--elim-avail-extern",
      "--mergeicmps",
      "--tailcallelim",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+17.5%"
  }
}