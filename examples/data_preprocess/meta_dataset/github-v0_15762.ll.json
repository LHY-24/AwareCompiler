{
  "program_id": "github-v0_15762.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 5,
    "oneSuccessor": 20,
    "twoPred": 9,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 29,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 38,
    "const32Bit": 75,
    "const64Bit": 5,
    "numConstZeroes": 28,
    "numConstOnes": 22,
    "UncondBranches": 20,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 26,
    "NumBitCastInst": 0,
    "NumBrInst": 29,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 104,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 22,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 5,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 30,
    "TotalInsts": 275,
    "TotalMemInst": 195,
    "TotalFuncs": 1,
    "ArgsPhi": 0,
    "testUnary": 141
  },
  "baseline_oz_instcount": 276,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--bdce",
    "--mergefunc",
    "--instcombine",
    "--slp-vectorizer",
    "--dse",
    "--jump-threading",
    "--instcombine",
    "--sccp",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--flattencfg",
          "--lower-matrix-intrinsics",
          "--strip-nondebug",
          "--instcombine",
          "--pgo-memop-opt",
          "--argpromotion",
          "--loop-versioning",
          "--deadargelim",
          "--add-discriminators",
          "--early-cse-memssa",
          "--lower-expect",
          "--strip-dead-prototypes"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--flattencfg",
      "--lower-matrix-intrinsics",
      "--strip-nondebug",
      "--instcombine",
      "--pgo-memop-opt",
      "--argpromotion",
      "--loop-versioning",
      "--deadargelim",
      "--add-discriminators",
      "--early-cse-memssa",
      "--lower-expect",
      "--strip-dead-prototypes"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}