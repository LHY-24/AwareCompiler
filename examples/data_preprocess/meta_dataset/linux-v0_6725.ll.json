{
  "program_id": "linux-v0_6725.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 7,
    "oneSuccessor": 31,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 6,
    "twoSuccessor": 17,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 0,
    "BranchCount": 48,
    "returnInt": 31,
    "CriticalCount": 1,
    "NumEdges": 65,
    "const32Bit": 89,
    "const64Bit": 9,
    "numConstZeroes": 49,
    "numConstOnes": 38,
    "UncondBranches": 31,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 28,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 56,
    "NumBitCastInst": 0,
    "NumBrInst": 48,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 66,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 44,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 59,
    "TotalInsts": 290,
    "TotalMemInst": 193,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 104
  },
  "baseline_oz_instcount": 273,
  "knowledge_base_entry": [
    "--deadargelim",
    "--mergefunc",
    "--loop-instsimplify",
    "--bdce",
    "--mem2reg",
    "--jump-threading",
    "--early-cse",
    "--nary-reassociate",
    "--gvn-hoist",
    "--globalopt",
    "--correlated-propagation",
    "--lower-expect",
    "--instcombine",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--bdce",
    "--instcombine",
    "--mldst-motion",
    "--gvn-hoist",
    "--gvn-hoist",
    "--newgvn",
    "--prune-eh",
    "--licm",
    "--loop-rotate",
    "--sroa",
    "--adce",
    "--dce",
    "--ipsccp",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--nary-reassociate",
          "--functionattrs",
          "--globalopt",
          "--ipconstprop",
          "--rewrite-statepoints-for-gc",
          "--infer-address-spaces",
          "--div-rem-pairs",
          "--loop-interchange",
          "--jump-threading",
          "--ipsccp",
          "--newgvn",
          "--dse",
          "--early-cse-memssa",
          "--mldst-motion",
          "--loop-unroll-and-jam",
          "--strip-dead-prototypes",
          "--loop-versioning-licm",
          "--loop-load-elim",
          "--mergeicmps",
          "--lower-widenable-condition",
          "--irce",
          "--slp-vectorizer",
          "--inject-tli-mappings",
          "--mergefunc",
          "--loop-unroll",
          "--partially-inline-libcalls",
          "--lower-guard-intrinsic",
          "--cross-dso-cfi",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--nary-reassociate",
      "--functionattrs",
      "--globalopt",
      "--ipconstprop",
      "--rewrite-statepoints-for-gc",
      "--infer-address-spaces",
      "--div-rem-pairs",
      "--loop-interchange",
      "--jump-threading",
      "--ipsccp",
      "--newgvn",
      "--dse",
      "--early-cse-memssa",
      "--mldst-motion",
      "--loop-unroll-and-jam",
      "--strip-dead-prototypes",
      "--loop-versioning-licm",
      "--loop-load-elim",
      "--mergeicmps",
      "--lower-widenable-condition",
      "--irce",
      "--slp-vectorizer",
      "--inject-tli-mappings",
      "--mergefunc",
      "--loop-unroll",
      "--partially-inline-libcalls",
      "--lower-guard-intrinsic",
      "--cross-dso-cfi",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}