{
  "program_id": "linux-v0_9640.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 55,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 21,
    "oneSuccessor": 50,
    "twoPred": 22,
    "twoPredOneSuc": 16,
    "twoEach": 5,
    "twoSuccessor": 32,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 85,
    "BeginPhi": 0,
    "BranchCount": 82,
    "returnInt": 46,
    "CriticalCount": 23,
    "NumEdges": 128,
    "const32Bit": 148,
    "const64Bit": 32,
    "numConstZeroes": 83,
    "numConstOnes": 29,
    "UncondBranches": 50,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 77,
    "NumBitCastInst": 1,
    "NumBrInst": 82,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 61,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 168,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 35,
    "NumSubInst": 0,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 85,
    "TotalInsts": 460,
    "TotalMemInst": 325,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 204
  },
  "baseline_oz_instcount": 462,
  "knowledge_base_entry": [
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--sroa",
    "--gvn",
    "--adce",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lcssa",
          "--jump-threading",
          "--load-store-vectorizer",
          "--globaldce",
          "--div-rem-pairs",
          "--sink",
          "--lower-expect",
          "--early-cse",
          "--coro-early",
          "--libcalls-shrinkwrap",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lcssa",
      "--jump-threading",
      "--load-store-vectorizer",
      "--globaldce",
      "--div-rem-pairs",
      "--sink",
      "--lower-expect",
      "--early-cse",
      "--coro-early",
      "--libcalls-shrinkwrap",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}