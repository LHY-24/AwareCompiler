{
  "program_id": "poj104-v1_78_977.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 4,
    "oneSuccessor": 18,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 11,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 0,
    "BranchCount": 29,
    "returnInt": 7,
    "CriticalCount": 3,
    "NumEdges": 40,
    "const32Bit": 48,
    "const64Bit": 12,
    "numConstZeroes": 8,
    "numConstOnes": 30,
    "UncondBranches": 18,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 23,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 41,
    "NumBitCastInst": 18,
    "NumBrInst": 29,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 69,
    "NumMulInst": 4,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 31,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 44,
    "TotalInsts": 273,
    "TotalMemInst": 185,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 111
  },
  "baseline_oz_instcount": 104,
  "knowledge_base_entry": [
    "--simple-loop-unswitch",
    "--newgvn",
    "--mergefunc",
    "--simplifycfg",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--mergefunc",
    "--licm",
    "--slp-vectorizer",
    "--early-cse",
    "--adce",
    "--reassociate",
    "--slp-vectorizer",
    "--dce",
    "--mergefunc",
    "--sroa",
    "--adce",
    "--elim-avail-extern",
    "--dce",
    "--jump-threading",
    "--globalopt",
    "--gvn-hoist",
    "--loop-reroll",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--ipsccp",
    "--aggressive-instcombine",
    "--bdce",
    "--lower-expect",
    "--instcombine",
    "--ipsccp",
    "--gvn",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--bdce",
    "--mergefunc",
    "--aggressive-instcombine",
    "--loweratomic",
    "--ipsccp",
    "--reassociate",
    "--simplifycfg",
    "--elim-avail-extern",
    "--instsimplify",
    "--sccp",
    "--inline",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--constmerge",
          "--constprop",
          "--flattencfg",
          "--loop-fusion",
          "--pgo-memop-opt",
          "--slsr",
          "--sccp",
          "--elim-avail-extern",
          "--memcpyopt",
          "--lower-widenable-condition",
          "--coro-elide",
          "--globaldce",
          "--loop-guard-widening",
          "--ipsccp",
          "--gvn-hoist",
          "--sroa",
          "--loop-versioning",
          "--mergereturn",
          "--inline",
          "--instnamer",
          "--rewrite-statepoints-for-gc",
          "--separate-const-offset-from-gep",
          "--loop-vectorize"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+21.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--constmerge",
      "--constprop",
      "--flattencfg",
      "--loop-fusion",
      "--pgo-memop-opt",
      "--slsr",
      "--sccp",
      "--elim-avail-extern",
      "--memcpyopt",
      "--lower-widenable-condition",
      "--coro-elide",
      "--globaldce",
      "--loop-guard-widening",
      "--ipsccp",
      "--gvn-hoist",
      "--sroa",
      "--loop-versioning",
      "--mergereturn",
      "--inline",
      "--instnamer",
      "--rewrite-statepoints-for-gc",
      "--separate-const-offset-from-gep",
      "--loop-vectorize"
    ],
    "performance_vs_Oz": "+21.2%"
  }
}