{
  "program_id": "github-v0_40555.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 12,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 26,
    "const32Bit": 45,
    "const64Bit": 66,
    "numConstZeroes": 68,
    "numConstOnes": 26,
    "UncondBranches": 12,
    "binaryConstArg": 20,
    "NumAShrInst": 2,
    "NumAddInst": 6,
    "NumAllocaInst": 12,
    "NumAndInst": 7,
    "BlockMid": 6,
    "BlockLow": 17,
    "NumBitCastInst": 8,
    "NumBrInst": 19,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 38,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 24,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 2,
    "NumZExtInst": 18,
    "TotalBlocks": 23,
    "TotalInsts": 214,
    "TotalMemInst": 121,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 87
  },
  "baseline_oz_instcount": 214,
  "knowledge_base_entry": [
    "--die",
    "--gvn-hoist",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--dce",
    "--correlated-propagation",
    "--reassociate",
    "--loop-simplifycfg",
    "--reassociate",
    "--newgvn",
    "--flattencfg",
    "--sroa",
    "--instsimplify",
    "--dse",
    "--early-cse-memssa",
    "--slsr",
    "--jump-threading",
    "--licm",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--licm",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--lower-expect",
          "--coro-early",
          "--separate-const-offset-from-gep",
          "--attributor",
          "--slp-vectorizer",
          "--loop-versioning-licm",
          "--indvars",
          "--forceattrs",
          "--aggressive-instcombine",
          "--simplifycfg",
          "--called-value-propagation",
          "--name-anon-globals",
          "--coro-elide",
          "--lower-guard-intrinsic",
          "--slsr",
          "--post-inline-ee-instrument",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--lower-expect",
      "--coro-early",
      "--separate-const-offset-from-gep",
      "--attributor",
      "--slp-vectorizer",
      "--loop-versioning-licm",
      "--indvars",
      "--forceattrs",
      "--aggressive-instcombine",
      "--simplifycfg",
      "--called-value-propagation",
      "--name-anon-globals",
      "--coro-elide",
      "--lower-guard-intrinsic",
      "--slsr",
      "--post-inline-ee-instrument",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+3.3%"
  }
}