{
  "program_id": "linux-v0_13416.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 53,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 16,
    "oneSuccessor": 50,
    "twoPred": 27,
    "twoPredOneSuc": 7,
    "twoEach": 15,
    "twoSuccessor": 33,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 1,
    "BranchCount": 83,
    "returnInt": 29,
    "CriticalCount": 23,
    "NumEdges": 116,
    "const32Bit": 254,
    "const64Bit": 21,
    "numConstZeroes": 90,
    "numConstOnes": 83,
    "UncondBranches": 50,
    "binaryConstArg": 35,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 66,
    "NumAndInst": 22,
    "BlockMid": 11,
    "BlockLow": 84,
    "NumBitCastInst": 8,
    "NumBrInst": 83,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 41,
    "NumLShrInst": 0,
    "NumLoadInst": 210,
    "NumMulInst": 2,
    "NumOrInst": 15,
    "NumPHIInst": 1,
    "NumRetInst": 12,
    "NumSExtInst": 1,
    "NumSelectInst": 7,
    "NumShlInst": 10,
    "NumStoreInst": 76,
    "NumSubInst": 4,
    "NumTruncInst": 27,
    "NumXorInst": 7,
    "NumZExtInst": 84,
    "TotalBlocks": 95,
    "TotalInsts": 771,
    "TotalMemInst": 444,
    "TotalFuncs": 29,
    "ArgsPhi": 2,
    "testUnary": 396
  },
  "baseline_oz_instcount": 771,
  "knowledge_base_entry": [
    "--reassociate",
    "--mem2reg",
    "--bdce",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--jump-threading",
    "--gvn",
    "--ipsccp",
    "--flattencfg",
    "--globalopt",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--newgvn",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--globalopt",
    "--instsimplify",
    "--early-cse-memssa",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globaldce",
          "--indvars",
          "--lowerswitch",
          "--dce",
          "--post-inline-ee-instrument",
          "--reassociate",
          "--lower-widenable-condition",
          "--alignment-from-assumptions",
          "--flattencfg",
          "--mldst-motion",
          "--loop-unroll-and-jam",
          "--aggressive-instcombine",
          "--inject-tli-mappings",
          "--loop-versioning-licm",
          "--callsite-splitting",
          "--loop-versioning",
          "--loop-instsimplify",
          "--ipconstprop",
          "--name-anon-globals",
          "--coro-early",
          "--bdce",
          "--early-cse",
          "--slp-vectorizer",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globaldce",
      "--indvars",
      "--lowerswitch",
      "--dce",
      "--post-inline-ee-instrument",
      "--reassociate",
      "--lower-widenable-condition",
      "--alignment-from-assumptions",
      "--flattencfg",
      "--mldst-motion",
      "--loop-unroll-and-jam",
      "--aggressive-instcombine",
      "--inject-tli-mappings",
      "--loop-versioning-licm",
      "--callsite-splitting",
      "--loop-versioning",
      "--loop-instsimplify",
      "--ipconstprop",
      "--name-anon-globals",
      "--coro-early",
      "--bdce",
      "--early-cse",
      "--slp-vectorizer",
      "--globalopt"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}