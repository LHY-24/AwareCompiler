{
  "program_id": "linux-v0_12867.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 47,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 12,
    "oneSuccessor": 39,
    "twoPred": 15,
    "twoPredOneSuc": 3,
    "twoEach": 9,
    "twoSuccessor": 26,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 2,
    "BranchCount": 65,
    "returnInt": 11,
    "CriticalCount": 15,
    "NumEdges": 91,
    "const32Bit": 195,
    "const64Bit": 22,
    "numConstZeroes": 79,
    "numConstOnes": 76,
    "UncondBranches": 39,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 57,
    "NumAndInst": 6,
    "BlockMid": 9,
    "BlockLow": 70,
    "NumBitCastInst": 8,
    "NumBrInst": 65,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 46,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 121,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 2,
    "NumRetInst": 14,
    "NumSExtInst": 13,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 79,
    "NumSubInst": 3,
    "NumTruncInst": 9,
    "NumXorInst": 14,
    "NumZExtInst": 15,
    "TotalBlocks": 79,
    "TotalInsts": 522,
    "TotalMemInst": 334,
    "TotalFuncs": 24,
    "ArgsPhi": 4,
    "testUnary": 223
  },
  "baseline_oz_instcount": 523,
  "knowledge_base_entry": [
    "--instcombine",
    "--inline",
    "--aggressive-instcombine",
    "--lower-expect",
    "--mergefunc",
    "--elim-avail-extern",
    "--globalopt",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--loweratomic",
          "--load-store-vectorizer",
          "--lower-constant-intrinsics",
          "--aggressive-instcombine",
          "--instcombine",
          "--ee-instrument",
          "--mergereturn",
          "--lowerinvoke",
          "--flattencfg",
          "--sancov",
          "--coro-split",
          "--lower-matrix-intrinsics"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--loweratomic",
      "--load-store-vectorizer",
      "--lower-constant-intrinsics",
      "--aggressive-instcombine",
      "--instcombine",
      "--ee-instrument",
      "--mergereturn",
      "--lowerinvoke",
      "--flattencfg",
      "--sancov",
      "--coro-split",
      "--lower-matrix-intrinsics"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}