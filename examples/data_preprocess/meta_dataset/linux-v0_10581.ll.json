{
  "program_id": "linux-v0_10581.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 51,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 18,
    "oneSuccessor": 42,
    "twoPred": 13,
    "twoPredOneSuc": 8,
    "twoEach": 2,
    "twoSuccessor": 24,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 89,
    "BeginPhi": 2,
    "BranchCount": 66,
    "returnInt": 17,
    "CriticalCount": 10,
    "NumEdges": 95,
    "const32Bit": 306,
    "const64Bit": 39,
    "numConstZeroes": 155,
    "numConstOnes": 112,
    "UncondBranches": 42,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 71,
    "NumAndInst": 6,
    "BlockMid": 13,
    "BlockLow": 78,
    "NumBitCastInst": 15,
    "NumBrInst": 66,
    "NumCallInst": 65,
    "NumGetElementPtrInst": 104,
    "NumICmpInst": 26,
    "NumLShrInst": 1,
    "NumLoadInst": 231,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 2,
    "NumRetInst": 24,
    "NumSExtInst": 23,
    "NumSelectInst": 3,
    "NumShlInst": 3,
    "NumStoreInst": 105,
    "NumSubInst": 1,
    "NumTruncInst": 12,
    "NumXorInst": 4,
    "NumZExtInst": 21,
    "TotalBlocks": 91,
    "TotalInsts": 798,
    "TotalMemInst": 576,
    "TotalFuncs": 48,
    "ArgsPhi": 4,
    "testUnary": 377
  },
  "baseline_oz_instcount": 798,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--early-cse",
    "--aggressive-instcombine",
    "--mem2reg",
    "--prune-eh",
    "--reassociate",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-reroll",
          "--jump-threading",
          "--aggressive-instcombine",
          "--loop-predication",
          "--indvars",
          "--loop-interchange",
          "--coro-elide",
          "--load-store-vectorizer",
          "--loop-deletion",
          "--loop-rotate",
          "--prune-eh",
          "--lcssa",
          "--newgvn",
          "--separate-const-offset-from-gep",
          "--rewrite-statepoints-for-gc",
          "--loop-guard-widening",
          "--loop-sink",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-reroll",
      "--jump-threading",
      "--aggressive-instcombine",
      "--loop-predication",
      "--indvars",
      "--loop-interchange",
      "--coro-elide",
      "--load-store-vectorizer",
      "--loop-deletion",
      "--loop-rotate",
      "--prune-eh",
      "--lcssa",
      "--newgvn",
      "--separate-const-offset-from-gep",
      "--rewrite-statepoints-for-gc",
      "--loop-guard-widening",
      "--loop-sink",
      "--globaldce"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}