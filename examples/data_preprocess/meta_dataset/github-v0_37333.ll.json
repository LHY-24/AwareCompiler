{
  "program_id": "github-v0_37333.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 10,
    "CriticalCount": 2,
    "NumEdges": 10,
    "const32Bit": 39,
    "const64Bit": 0,
    "numConstZeroes": 3,
    "numConstOnes": 36,
    "UncondBranches": 4,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 36,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 25,
    "NumBitCastInst": 8,
    "NumBrInst": 7,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 18,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 35,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 26,
    "TotalInsts": 154,
    "TotalMemInst": 110,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 69
  },
  "baseline_oz_instcount": 154,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--adce",
    "--early-cse-memssa",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--nary-reassociate",
          "--lower-guard-intrinsic",
          "--sink",
          "--loop-unswitch",
          "--loop-reroll",
          "--ee-instrument",
          "--die",
          "--always-inline",
          "--strip-dead-prototypes",
          "--loweratomic",
          "--float2int",
          "-loop-reduce",
          "--mergefunc",
          "--loop-sink",
          "--forceattrs",
          "--guard-widening",
          "--flattencfg",
          "--tailcallelim",
          "--speculative-execution",
          "--insert-gcov-profiling",
          "--separate-const-offset-from-gep",
          "--memcpyopt",
          "--libcalls-shrinkwrap",
          "--lowerinvoke",
          "--sroa",
          "--loop-rotate",
          "--slp-vectorizer",
          "--coro-split",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+30.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--nary-reassociate",
      "--lower-guard-intrinsic",
      "--sink",
      "--loop-unswitch",
      "--loop-reroll",
      "--ee-instrument",
      "--die",
      "--always-inline",
      "--strip-dead-prototypes",
      "--loweratomic",
      "--float2int",
      "-loop-reduce",
      "--mergefunc",
      "--loop-sink",
      "--forceattrs",
      "--guard-widening",
      "--flattencfg",
      "--tailcallelim",
      "--speculative-execution",
      "--insert-gcov-profiling",
      "--separate-const-offset-from-gep",
      "--memcpyopt",
      "--libcalls-shrinkwrap",
      "--lowerinvoke",
      "--sroa",
      "--loop-rotate",
      "--slp-vectorizer",
      "--coro-split",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+30.5%"
  }
}