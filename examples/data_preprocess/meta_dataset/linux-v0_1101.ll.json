{
  "program_id": "linux-v0_1101.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 44,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 14,
    "oneSuccessor": 41,
    "twoPred": 18,
    "twoPredOneSuc": 7,
    "twoEach": 4,
    "twoSuccessor": 24,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 84,
    "BeginPhi": 1,
    "BranchCount": 65,
    "returnInt": 14,
    "CriticalCount": 9,
    "NumEdges": 89,
    "const32Bit": 224,
    "const64Bit": 8,
    "numConstZeroes": 105,
    "numConstOnes": 73,
    "UncondBranches": 41,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 51,
    "NumAndInst": 6,
    "BlockMid": 6,
    "BlockLow": 79,
    "NumBitCastInst": 7,
    "NumBrInst": 65,
    "NumCallInst": 48,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 26,
    "NumLShrInst": 2,
    "NumLoadInst": 169,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 81,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 7,
    "NumZExtInst": 7,
    "TotalBlocks": 85,
    "TotalInsts": 583,
    "TotalMemInst": 417,
    "TotalFuncs": 38,
    "ArgsPhi": 2,
    "testUnary": 244
  },
  "baseline_oz_instcount": 584,
  "knowledge_base_entry": [
    "--slsr",
    "--instcombine",
    "--sccp",
    "--dse",
    "--elim-avail-extern",
    "--flattencfg",
    "--aggressive-instcombine",
    "--adce",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--sccp",
          "--loop-versioning",
          "--inline",
          "--hotcoldsplit",
          "--consthoist",
          "--lower-constant-intrinsics",
          "--instnamer",
          "--globalopt",
          "--coro-elide",
          "--barrier",
          "--functionattrs",
          "--lower-expect",
          "--strip-dead-prototypes"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--sccp",
      "--loop-versioning",
      "--inline",
      "--hotcoldsplit",
      "--consthoist",
      "--lower-constant-intrinsics",
      "--instnamer",
      "--globalopt",
      "--coro-elide",
      "--barrier",
      "--functionattrs",
      "--lower-expect",
      "--strip-dead-prototypes"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}