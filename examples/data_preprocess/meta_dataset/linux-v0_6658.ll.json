{
  "program_id": "linux-v0_6658.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 125,
    "onePredOneSuc": 107,
    "onePredTwoSuc": 15,
    "oneSuccessor": 121,
    "twoPred": 17,
    "twoPredOneSuc": 7,
    "twoEach": 4,
    "twoSuccessor": 23,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 166,
    "BeginPhi": 0,
    "BranchCount": 144,
    "returnInt": 19,
    "CriticalCount": 11,
    "NumEdges": 167,
    "const32Bit": 172,
    "const64Bit": 16,
    "numConstZeroes": 37,
    "numConstOnes": 147,
    "UncondBranches": 121,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 130,
    "NumAndInst": 3,
    "BlockMid": 15,
    "BlockLow": 151,
    "NumBitCastInst": 7,
    "NumBrInst": 144,
    "NumCallInst": 74,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 22,
    "NumLShrInst": 1,
    "NumLoadInst": 166,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 141,
    "NumSubInst": 2,
    "NumTruncInst": 13,
    "NumXorInst": 4,
    "NumZExtInst": 15,
    "TotalBlocks": 166,
    "TotalInsts": 780,
    "TotalMemInst": 524,
    "TotalFuncs": 39,
    "ArgsPhi": 0,
    "testUnary": 345
  },
  "baseline_oz_instcount": 781,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--gvn",
    "--ipsccp",
    "--mergefunc",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--consthoist",
          "--lower-constant-intrinsics",
          "--gvn-hoist",
          "--rewrite-statepoints-for-gc",
          "--infer-address-spaces",
          "--loop-distribute",
          "--globalopt",
          "--hotcoldsplit",
          "--mergeicmps",
          "--attributor",
          "--add-discriminators",
          "--loop-guard-widening",
          "--div-rem-pairs",
          "--sccp",
          "--partial-inliner",
          "--coro-elide",
          "--slsr",
          "--mergefunc",
          "--scalarizer",
          "--lowerswitch",
          "--loop-deletion",
          "--cross-dso-cfi",
          "--constprop",
          "--speculative-execution",
          "--simple-loop-unswitch",
          "--correlated-propagation",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--consthoist",
      "--lower-constant-intrinsics",
      "--gvn-hoist",
      "--rewrite-statepoints-for-gc",
      "--infer-address-spaces",
      "--loop-distribute",
      "--globalopt",
      "--hotcoldsplit",
      "--mergeicmps",
      "--attributor",
      "--add-discriminators",
      "--loop-guard-widening",
      "--div-rem-pairs",
      "--sccp",
      "--partial-inliner",
      "--coro-elide",
      "--slsr",
      "--mergefunc",
      "--scalarizer",
      "--lowerswitch",
      "--loop-deletion",
      "--cross-dso-cfi",
      "--constprop",
      "--speculative-execution",
      "--simple-loop-unswitch",
      "--correlated-propagation",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}