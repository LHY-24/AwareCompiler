{
  "program_id": "github-v0_5123.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 90,
    "onePredOneSuc": 53,
    "onePredTwoSuc": 37,
    "oneSuccessor": 71,
    "twoPred": 28,
    "twoPredOneSuc": 15,
    "twoEach": 12,
    "twoSuccessor": 55,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 130,
    "BeginPhi": 0,
    "BranchCount": 126,
    "returnInt": 43,
    "CriticalCount": 25,
    "NumEdges": 181,
    "const32Bit": 160,
    "const64Bit": 19,
    "numConstZeroes": 87,
    "numConstOnes": 55,
    "UncondBranches": 71,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 11,
    "NumAllocaInst": 36,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 125,
    "NumBitCastInst": 0,
    "NumBrInst": 126,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 28,
    "NumICmpInst": 55,
    "NumLShrInst": 0,
    "NumLoadInst": 160,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 90,
    "NumSubInst": 4,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 130,
    "TotalInsts": 596,
    "TotalMemInst": 368,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 224
  },
  "baseline_oz_instcount": 600,
  "knowledge_base_entry": [
    "--speculative-execution",
    "--early-cse",
    "--sroa",
    "--globalopt",
    "--instcombine",
    "--load-store-vectorizer",
    "--mergefunc",
    "--slp-vectorizer",
    "--mem2reg",
    "--dce",
    "--simplifycfg",
    "--memcpyopt",
    "--elim-avail-extern",
    "--adce",
    "--gvn-hoist",
    "--instsimplify",
    "--newgvn",
    "--slsr",
    "--early-cse-memssa",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-early",
          "--deadargelim",
          "--sccp",
          "--gvn",
          "--mergereturn",
          "--scalarizer",
          "--nary-reassociate",
          "--jump-threading",
          "--dse",
          "--coro-elide",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-early",
      "--deadargelim",
      "--sccp",
      "--gvn",
      "--mergereturn",
      "--scalarizer",
      "--nary-reassociate",
      "--jump-threading",
      "--dse",
      "--coro-elide",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}