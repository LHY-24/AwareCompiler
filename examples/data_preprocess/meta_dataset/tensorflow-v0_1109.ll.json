{
  "program_id": "tensorflow-v0_1109.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 3,
    "oneSuccessor": 2,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 4,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 10,
    "const32Bit": 7,
    "const64Bit": 8,
    "numConstZeroes": 10,
    "numConstOnes": 3,
    "UncondBranches": 2,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 0,
    "BlockLow": 10,
    "NumBitCastInst": 4,
    "NumBrInst": 4,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 3,
    "NumLShrInst": 1,
    "NumLoadInst": 2,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 2,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 10,
    "TotalInsts": 35,
    "TotalMemInst": 12,
    "TotalFuncs": 9,
    "ArgsPhi": 0,
    "testUnary": 9
  },
  "baseline_oz_instcount": 33,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--nary-reassociate",
    "--ipsccp",
    "--instsimplify",
    "--loop-simplifycfg",
    "--globalopt",
    "--mem2reg",
    "--licm",
    "--dse",
    "--reassociate",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--lowerswitch",
          "--slp-vectorizer",
          "--guard-widening",
          "--post-inline-ee-instrument",
          "--strip",
          "--lower-widenable-condition",
          "--deadargelim",
          "--loop-predication",
          "--loop-versioning",
          "--lowerinvoke",
          "--loop-reroll",
          "--ipsccp",
          "--globaldce",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+18.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--lowerswitch",
      "--slp-vectorizer",
      "--guard-widening",
      "--post-inline-ee-instrument",
      "--strip",
      "--lower-widenable-condition",
      "--deadargelim",
      "--loop-predication",
      "--loop-versioning",
      "--lowerinvoke",
      "--loop-reroll",
      "--ipsccp",
      "--globaldce",
      "--indvars"
    ],
    "performance_vs_Oz": "+18.2%"
  }
}