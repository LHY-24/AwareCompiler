{
  "program_id": "linux-v0_12198.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 56,
    "onePredOneSuc": 46,
    "onePredTwoSuc": 10,
    "oneSuccessor": 47,
    "twoPred": 10,
    "twoPredOneSuc": 0,
    "twoEach": 9,
    "twoSuccessor": 24,
    "morePreds": 5,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 4,
    "BranchCount": 71,
    "returnInt": 6,
    "CriticalCount": 4,
    "NumEdges": 95,
    "const32Bit": 233,
    "const64Bit": 39,
    "numConstZeroes": 109,
    "numConstOnes": 113,
    "UncondBranches": 47,
    "binaryConstArg": 52,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 62,
    "NumAndInst": 6,
    "BlockMid": 19,
    "BlockLow": 62,
    "NumBitCastInst": 24,
    "NumBrInst": 71,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 93,
    "NumICmpInst": 36,
    "NumLShrInst": 3,
    "NumLoadInst": 189,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 4,
    "NumRetInst": 10,
    "NumSExtInst": 23,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 96,
    "NumSubInst": 2,
    "NumTruncInst": 11,
    "NumXorInst": 28,
    "NumZExtInst": 14,
    "TotalBlocks": 81,
    "TotalInsts": 718,
    "TotalMemInst": 466,
    "TotalFuncs": 15,
    "ArgsPhi": 8,
    "testUnary": 326
  },
  "baseline_oz_instcount": 718,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--die",
    "--gvn",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--mem2reg",
    "--inline",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--globalopt",
    "--loop-deletion",
    "--mem2reg",
    "--die",
    "--sroa",
    "--prune-eh",
    "--instsimplify",
    "--sccp",
    "--adce",
    "--early-cse",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--gvn-hoist",
          "--guard-widening",
          "--rpo-functionattrs",
          "--forceattrs",
          "--newgvn",
          "--functionattrs",
          "--simple-loop-unswitch",
          "--strip",
          "--simplifycfg",
          "--sroa",
          "--coro-cleanup",
          "--aggressive-instcombine",
          "--always-inline",
          "--redundant-dbg-inst-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--gvn-hoist",
      "--guard-widening",
      "--rpo-functionattrs",
      "--forceattrs",
      "--newgvn",
      "--functionattrs",
      "--simple-loop-unswitch",
      "--strip",
      "--simplifycfg",
      "--sroa",
      "--coro-cleanup",
      "--aggressive-instcombine",
      "--always-inline",
      "--redundant-dbg-inst-elim"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}