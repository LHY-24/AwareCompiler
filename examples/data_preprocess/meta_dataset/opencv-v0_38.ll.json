{
  "program_id": "opencv-v0_38.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 3,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 7,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 74,
    "const64Bit": 60,
    "numConstZeroes": 12,
    "numConstOnes": 6,
    "UncondBranches": 0,
    "binaryConstArg": 56,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 2,
    "NumAndInst": 14,
    "BlockMid": 2,
    "BlockLow": 1,
    "NumBitCastInst": 2,
    "NumBrInst": 0,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 0,
    "NumLShrInst": 21,
    "NumLoadInst": 56,
    "NumMulInst": 0,
    "NumOrInst": 21,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 21,
    "NumStoreInst": 28,
    "NumSubInst": 0,
    "NumTruncInst": 28,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 3,
    "TotalInsts": 304,
    "TotalMemInst": 166,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 116
  },
  "baseline_oz_instcount": 304,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--newgvn",
    "--slp-vectorizer",
    "--instsimplify",
    "--reassociate",
    "--dse",
    "--slp-vectorizer",
    "-loop-reduce",
    "--slp-vectorizer",
    "--newgvn",
    "--mergefunc",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--loop-fusion",
    "--jump-threading",
    "--sccp",
    "--dce",
    "--gvn",
    "--dce",
    "--dse",
    "--instsimplify",
    "--sroa",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--coro-early",
          "--partially-inline-libcalls",
          "--newgvn",
          "--functionattrs",
          "--consthoist",
          "--prune-eh",
          "--callsite-splitting",
          "--strip",
          "--slp-vectorizer",
          "--simple-loop-unswitch",
          "--lower-matrix-intrinsics",
          "--flattencfg",
          "--add-discriminators",
          "--forceattrs",
          "--lowerswitch",
          "--lcssa",
          "--loop-unroll",
          "--loop-versioning",
          "--called-value-propagation",
          "--rpo-functionattrs",
          "--tailcallelim",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--coro-early",
      "--partially-inline-libcalls",
      "--newgvn",
      "--functionattrs",
      "--consthoist",
      "--prune-eh",
      "--callsite-splitting",
      "--strip",
      "--slp-vectorizer",
      "--simple-loop-unswitch",
      "--lower-matrix-intrinsics",
      "--flattencfg",
      "--add-discriminators",
      "--forceattrs",
      "--lowerswitch",
      "--lcssa",
      "--loop-unroll",
      "--loop-versioning",
      "--called-value-propagation",
      "--rpo-functionattrs",
      "--tailcallelim",
      "--early-cse"
    ],
    "performance_vs_Oz": "+4.6%"
  }
}