{
  "program_id": "linux-v0_6641.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 75,
    "onePredOneSuc": 55,
    "onePredTwoSuc": 10,
    "oneSuccessor": 73,
    "twoPred": 10,
    "twoPredOneSuc": 7,
    "twoEach": 1,
    "twoSuccessor": 14,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 120,
    "BeginPhi": 1,
    "BranchCount": 87,
    "returnInt": 26,
    "CriticalCount": 2,
    "NumEdges": 116,
    "const32Bit": 310,
    "const64Bit": 25,
    "numConstZeroes": 127,
    "numConstOnes": 198,
    "UncondBranches": 73,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 132,
    "NumAndInst": 3,
    "BlockMid": 11,
    "BlockLow": 110,
    "NumBitCastInst": 31,
    "NumBrInst": 87,
    "NumCallInst": 65,
    "NumGetElementPtrInst": 62,
    "NumICmpInst": 35,
    "NumLShrInst": 1,
    "NumLoadInst": 210,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 31,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 143,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 18,
    "NumZExtInst": 25,
    "TotalBlocks": 121,
    "TotalInsts": 878,
    "TotalMemInst": 612,
    "TotalFuncs": 39,
    "ArgsPhi": 2,
    "testUnary": 422
  },
  "baseline_oz_instcount": 876,
  "knowledge_base_entry": [
    "--loop-versioning-licm",
    "--instcombine",
    "--newgvn",
    "--instcombine",
    "--loop-reroll",
    "--instcombine",
    "--inline",
    "--elim-avail-extern",
    "--licm",
    "--aggressive-instcombine",
    "--adce",
    "--dce",
    "--lower-expect",
    "--correlated-propagation",
    "--ipsccp",
    "--dce",
    "--slp-vectorizer",
    "--instsimplify",
    "--dce",
    "--early-cse-memssa",
    "--sccp",
    "--mem2reg",
    "--jump-threading",
    "--loop-rotate",
    "--instsimplify",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partial-inliner",
          "--loop-versioning",
          "--argpromotion",
          "--lower-expect",
          "--mergefunc",
          "--early-cse",
          "--loop-unswitch",
          "--mem2reg",
          "--rewrite-statepoints-for-gc",
          "--reassociate",
          "--instcombine",
          "--lower-constant-intrinsics",
          "--simplifycfg",
          "--strip-nondebug",
          "--aggressive-instcombine",
          "--float2int",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partial-inliner",
      "--loop-versioning",
      "--argpromotion",
      "--lower-expect",
      "--mergefunc",
      "--early-cse",
      "--loop-unswitch",
      "--mem2reg",
      "--rewrite-statepoints-for-gc",
      "--reassociate",
      "--instcombine",
      "--lower-constant-intrinsics",
      "--simplifycfg",
      "--strip-nondebug",
      "--aggressive-instcombine",
      "--float2int",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}