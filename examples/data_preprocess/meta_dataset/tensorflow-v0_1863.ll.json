{
  "program_id": "tensorflow-v0_1863.ll",
  "autophase_features": {
    "BBNumArgsHi": 8,
    "BBNumArgsLo": 15,
    "onePred": 116,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 50,
    "oneSuccessor": 59,
    "twoPred": 50,
    "twoPredOneSuc": 8,
    "twoEach": 32,
    "twoSuccessor": 95,
    "morePreds": 9,
    "BB03Phi": 23,
    "BBHiPhi": 0,
    "BBNoPhi": 166,
    "BeginPhi": 23,
    "BranchCount": 124,
    "returnInt": 1,
    "CriticalCount": 74,
    "NumEdges": 249,
    "const32Bit": 275,
    "const64Bit": 213,
    "numConstZeroes": 296,
    "numConstOnes": 83,
    "UncondBranches": 59,
    "binaryConstArg": 23,
    "NumAShrInst": 5,
    "NumAddInst": 4,
    "NumAllocaInst": 15,
    "NumAndInst": 8,
    "BlockMid": 5,
    "BlockLow": 184,
    "NumBitCastInst": 76,
    "NumBrInst": 124,
    "NumCallInst": 114,
    "NumGetElementPtrInst": 118,
    "NumICmpInst": 71,
    "NumLShrInst": 2,
    "NumLoadInst": 104,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 41,
    "NumRetInst": 13,
    "NumSExtInst": 2,
    "NumSelectInst": 8,
    "NumShlInst": 3,
    "NumStoreInst": 43,
    "NumSubInst": 10,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 189,
    "TotalInsts": 880,
    "TotalMemInst": 424,
    "TotalFuncs": 51,
    "ArgsPhi": 86,
    "testUnary": 234
  },
  "baseline_oz_instcount": 861,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--loop-deletion",
    "--gvn",
    "--instcombine",
    "--correlated-propagation",
    "--gvn-hoist",
    "--simplifycfg",
    "--newgvn",
    "--adce",
    "--inline",
    "--adce",
    "--mergefunc",
    "--gvn",
    "--slsr",
    "--slp-vectorizer",
    "--gvn",
    "--inline",
    "--simplifycfg",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-interchange",
          "--slsr",
          "--lowerswitch",
          "--loop-predication",
          "--licm",
          "--lowerinvoke",
          "--sink",
          "--dse",
          "--ee-instrument",
          "--coro-cleanup",
          "--attributor",
          "--coro-elide",
          "--partially-inline-libcalls",
          "--sancov",
          "--constprop",
          "--sroa",
          "--mergeicmps",
          "--div-rem-pairs",
          "--lower-guard-intrinsic",
          "--nary-reassociate",
          "--lcssa",
          "--float2int",
          "--loop-load-elim",
          "--early-cse-memssa",
          "--always-inline",
          "--loop-reroll",
          "--insert-gcov-profiling",
          "--rpo-functionattrs",
          "--instcombine",
          "--loop-guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-interchange",
      "--slsr",
      "--lowerswitch",
      "--loop-predication",
      "--licm",
      "--lowerinvoke",
      "--sink",
      "--dse",
      "--ee-instrument",
      "--coro-cleanup",
      "--attributor",
      "--coro-elide",
      "--partially-inline-libcalls",
      "--sancov",
      "--constprop",
      "--sroa",
      "--mergeicmps",
      "--div-rem-pairs",
      "--lower-guard-intrinsic",
      "--nary-reassociate",
      "--lcssa",
      "--float2int",
      "--loop-load-elim",
      "--early-cse-memssa",
      "--always-inline",
      "--loop-reroll",
      "--insert-gcov-profiling",
      "--rpo-functionattrs",
      "--instcombine",
      "--loop-guard-widening"
    ],
    "performance_vs_Oz": "+4.8%"
  }
}