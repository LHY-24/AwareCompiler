{
  "program_id": "opencv-v0_401.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 16,
    "onePred": 56,
    "onePredOneSuc": 44,
    "onePredTwoSuc": 12,
    "oneSuccessor": 50,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 12,
    "morePreds": 16,
    "BB03Phi": 16,
    "BBHiPhi": 0,
    "BBNoPhi": 66,
    "BeginPhi": 16,
    "BranchCount": 62,
    "returnInt": 41,
    "CriticalCount": 14,
    "NumEdges": 120,
    "const32Bit": 72,
    "const64Bit": 16,
    "numConstZeroes": 10,
    "numConstOnes": 20,
    "UncondBranches": 50,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 82,
    "NumBitCastInst": 56,
    "NumBrInst": 62,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 0,
    "NumLShrInst": 6,
    "NumLoadInst": 4,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 16,
    "NumRetInst": 10,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 82,
    "TotalInsts": 281,
    "TotalMemInst": 81,
    "TotalFuncs": 39,
    "ArgsPhi": 64,
    "testUnary": 74
  },
  "baseline_oz_instcount": 281,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--licm",
    "--newgvn",
    "--lower-expect",
    "--mergefunc",
    "--newgvn",
    "--gvn-hoist",
    "--loop-rotate",
    "--elim-avail-extern",
    "--instcombine",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--loop-rotate",
    "--lower-expect",
    "--early-cse",
    "--jump-threading",
    "--inline",
    "--newgvn",
    "--jump-threading",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--load-store-vectorizer",
          "--consthoist",
          "--insert-gcov-profiling",
          "--ee-instrument",
          "--globalopt",
          "--coro-split",
          "--flattencfg",
          "--instcombine",
          "--loop-unroll",
          "--instsimplify",
          "--loop-interchange",
          "--memcpyopt",
          "--loop-reroll",
          "--always-inline",
          "--lower-widenable-condition",
          "--break-crit-edges",
          "--alignment-from-assumptions",
          "--mergefunc",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+21.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--load-store-vectorizer",
      "--consthoist",
      "--insert-gcov-profiling",
      "--ee-instrument",
      "--globalopt",
      "--coro-split",
      "--flattencfg",
      "--instcombine",
      "--loop-unroll",
      "--instsimplify",
      "--loop-interchange",
      "--memcpyopt",
      "--loop-reroll",
      "--always-inline",
      "--lower-widenable-condition",
      "--break-crit-edges",
      "--alignment-from-assumptions",
      "--mergefunc",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+21.4%"
  }
}