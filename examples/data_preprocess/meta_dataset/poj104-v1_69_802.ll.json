{
  "program_id": "poj104-v1_69_802.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 35,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 6,
    "oneSuccessor": 32,
    "twoPred": 15,
    "twoPredOneSuc": 3,
    "twoEach": 8,
    "twoSuccessor": 18,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 74,
    "BeginPhi": 0,
    "BranchCount": 50,
    "returnInt": 18,
    "CriticalCount": 9,
    "NumEdges": 68,
    "const32Bit": 106,
    "const64Bit": 90,
    "numConstZeroes": 70,
    "numConstOnes": 66,
    "UncondBranches": 32,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 47,
    "NumAndInst": 0,
    "BlockMid": 10,
    "BlockLow": 64,
    "NumBitCastInst": 68,
    "NumBrInst": 50,
    "NumCallInst": 83,
    "NumGetElementPtrInst": 50,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 128,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 18,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 66,
    "NumSubInst": 8,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 74,
    "TotalInsts": 585,
    "TotalMemInst": 374,
    "TotalFuncs": 39,
    "ArgsPhi": 0,
    "testUnary": 269
  },
  "baseline_oz_instcount": 211,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--newgvn",
    "--ipsccp",
    "--dse",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--die",
    "--sccp",
    "--early-cse",
    "--instcombine",
    "--ipsccp",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--gvn-hoist",
    "--sroa",
    "--flattencfg",
    "--adce",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--adce",
    "--correlated-propagation",
    "--bdce",
    "--instcombine",
    "--correlated-propagation",
    "--early-cse",
    "--dce",
    "--correlated-propagation",
    "--nary-reassociate",
    "--jump-threading",
    "--loop-reroll",
    "--slsr",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--inline",
    "--instsimplify",
    "--ipsccp",
    "--mem2reg",
    "--globalopt",
    "--early-cse-memssa",
    "--sroa",
    "--globalopt",
    "--instsimplify",
    "--simplifycfg",
    "--gvn-hoist",
    "--die",
    "--correlated-propagation",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--loop-unswitch",
          "--hotcoldsplit",
          "--loweratomic",
          "--pgo-memop-opt",
          "--lower-constant-intrinsics",
          "--loop-load-elim",
          "--gvn-hoist",
          "--die",
          "--bdce",
          "--redundant-dbg-inst-elim",
          "--gvn",
          "--float2int",
          "--elim-avail-extern",
          "--globaldce",
          "--instnamer",
          "--loop-simplifycfg",
          "--coro-elide",
          "--loop-predication",
          "--globalopt",
          "--loop-simplify",
          "--ipsccp",
          "--simplifycfg",
          "--slsr",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--loop-unswitch",
      "--hotcoldsplit",
      "--loweratomic",
      "--pgo-memop-opt",
      "--lower-constant-intrinsics",
      "--loop-load-elim",
      "--gvn-hoist",
      "--die",
      "--bdce",
      "--redundant-dbg-inst-elim",
      "--gvn",
      "--float2int",
      "--elim-avail-extern",
      "--globaldce",
      "--instnamer",
      "--loop-simplifycfg",
      "--coro-elide",
      "--loop-predication",
      "--globalopt",
      "--loop-simplify",
      "--ipsccp",
      "--simplifycfg",
      "--slsr",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+4.7%"
  }
}