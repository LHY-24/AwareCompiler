{
  "program_id": "github-v0_5125.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 1,
    "oneSuccessor": 15,
    "twoPred": 8,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 3,
    "NumEdges": 31,
    "const32Bit": 406,
    "const64Bit": 40,
    "numConstZeroes": 223,
    "numConstOnes": 71,
    "UncondBranches": 15,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 48,
    "NumAndInst": 1,
    "BlockMid": 16,
    "BlockLow": 21,
    "NumBitCastInst": 28,
    "NumBrInst": 23,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 175,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 262,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 149,
    "NumSubInst": 2,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 37,
    "TotalInsts": 787,
    "TotalMemInst": 676,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 363
  },
  "baseline_oz_instcount": 787,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--mldst-motion",
    "--early-cse",
    "--loop-rotate",
    "--lower-expect",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--slsr",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--instsimplify",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--dse",
    "--slp-vectorizer",
    "--early-cse",
    "--aggressive-instcombine",
    "--licm",
    "--simplifycfg",
    "--dse",
    "--mergefunc",
    "--dce",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--jump-threading",
    "--aggressive-instcombine",
    "--licm",
    "--reassociate",
    "--instsimplify",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--dse",
    "--slp-vectorizer",
    "--indvars",
    "--instcombine",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instnamer",
          "--deadargelim",
          "--inferattrs",
          "--insert-gcov-profiling",
          "--dse",
          "--instcombine",
          "--strip-debug-declare",
          "--callsite-splitting",
          "-loop-reduce",
          "--instsimplify",
          "--loop-reroll",
          "--post-inline-ee-instrument",
          "--coro-early",
          "--indvars",
          "--gvn",
          "--loop-simplifycfg",
          "--coro-cleanup",
          "--simplifycfg",
          "--barrier",
          "--adce",
          "--aggressive-instcombine",
          "--argpromotion",
          "--ipconstprop",
          "--alignment-from-assumptions",
          "--constmerge",
          "--memcpyopt",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instnamer",
      "--deadargelim",
      "--inferattrs",
      "--insert-gcov-profiling",
      "--dse",
      "--instcombine",
      "--strip-debug-declare",
      "--callsite-splitting",
      "-loop-reduce",
      "--instsimplify",
      "--loop-reroll",
      "--post-inline-ee-instrument",
      "--coro-early",
      "--indvars",
      "--gvn",
      "--loop-simplifycfg",
      "--coro-cleanup",
      "--simplifycfg",
      "--barrier",
      "--adce",
      "--aggressive-instcombine",
      "--argpromotion",
      "--ipconstprop",
      "--alignment-from-assumptions",
      "--constmerge",
      "--memcpyopt",
      "--globaldce"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}