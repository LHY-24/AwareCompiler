{
  "program_id": "poj104-v1_33_1069.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 10,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 16,
    "returnInt": 9,
    "CriticalCount": 4,
    "NumEdges": 22,
    "const32Bit": 20,
    "const64Bit": 26,
    "numConstZeroes": 12,
    "numConstOnes": 20,
    "UncondBranches": 10,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 17,
    "NumBitCastInst": 10,
    "NumBrInst": 16,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 7,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 19,
    "TotalInsts": 113,
    "TotalMemInst": 67,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 44
  },
  "baseline_oz_instcount": 55,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--flattencfg",
    "--adce",
    "--lower-expect",
    "--jump-threading",
    "--globalopt",
    "--inline",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--adce",
    "--instcombine",
    "--loop-instsimplify",
    "--early-cse",
    "--dce",
    "--licm",
    "--jump-threading",
    "--flattencfg",
    "--load-store-vectorizer",
    "--newgvn",
    "--dse",
    "--gvn-hoist",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--sroa",
    "--indvars",
    "--slsr",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--scalarizer",
          "--loop-reroll",
          "--loop-guard-widening",
          "--globalopt",
          "--instcombine",
          "--coro-early",
          "--sancov",
          "--loop-vectorize",
          "--irce",
          "--hotcoldsplit",
          "--sink",
          "--slp-vectorizer",
          "--loweratomic",
          "--infer-address-spaces",
          "--lower-guard-intrinsic",
          "--lcssa",
          "--simple-loop-unswitch",
          "--inline",
          "--early-cse-memssa",
          "--partial-inliner",
          "--mergeicmps",
          "--inject-tli-mappings"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--scalarizer",
      "--loop-reroll",
      "--loop-guard-widening",
      "--globalopt",
      "--instcombine",
      "--coro-early",
      "--sancov",
      "--loop-vectorize",
      "--irce",
      "--hotcoldsplit",
      "--sink",
      "--slp-vectorizer",
      "--loweratomic",
      "--infer-address-spaces",
      "--lower-guard-intrinsic",
      "--lcssa",
      "--simple-loop-unswitch",
      "--inline",
      "--early-cse-memssa",
      "--partial-inliner",
      "--mergeicmps",
      "--inject-tli-mappings"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}