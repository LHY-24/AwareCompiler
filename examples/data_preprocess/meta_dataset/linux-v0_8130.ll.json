{
  "program_id": "linux-v0_8130.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 28,
    "BeginPhi": 0,
    "BranchCount": 15,
    "returnInt": 4,
    "CriticalCount": 415,
    "NumEdges": 437,
    "const32Bit": 442,
    "const64Bit": 0,
    "numConstZeroes": 8,
    "numConstOnes": 29,
    "UncondBranches": 13,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 20,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 28,
    "NumBitCastInst": 1,
    "NumBrInst": 15,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 27,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 28,
    "TotalInsts": 113,
    "TotalMemInst": 82,
    "TotalFuncs": 7,
    "ArgsPhi": 0,
    "testUnary": 48
  },
  "baseline_oz_instcount": 114,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--slp-vectorizer",
    "--mergefunc",
    "--adce",
    "--slp-vectorizer",
    "--dse",
    "--instcombine",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--lower-guard-intrinsic",
          "--loop-data-prefetch",
          "--partial-inliner",
          "--loop-sink",
          "--gvn-hoist",
          "--deadargelim",
          "--mergeicmps",
          "--sccp",
          "--partially-inline-libcalls",
          "--pgo-memop-opt",
          "--scalarizer",
          "--coro-split",
          "--lcssa",
          "--barrier",
          "-loop-reduce",
          "--instcombine",
          "--add-discriminators",
          "--insert-gcov-profiling",
          "--flattencfg",
          "--strip-nondebug",
          "--irce",
          "--infer-address-spaces"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--lower-guard-intrinsic",
      "--loop-data-prefetch",
      "--partial-inliner",
      "--loop-sink",
      "--gvn-hoist",
      "--deadargelim",
      "--mergeicmps",
      "--sccp",
      "--partially-inline-libcalls",
      "--pgo-memop-opt",
      "--scalarizer",
      "--coro-split",
      "--lcssa",
      "--barrier",
      "-loop-reduce",
      "--instcombine",
      "--add-discriminators",
      "--insert-gcov-profiling",
      "--flattencfg",
      "--strip-nondebug",
      "--irce",
      "--infer-address-spaces"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}