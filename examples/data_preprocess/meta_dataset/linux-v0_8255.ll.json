{
  "program_id": "linux-v0_8255.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 43,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 13,
    "oneSuccessor": 32,
    "twoPred": 10,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 24,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 76,
    "BeginPhi": 1,
    "BranchCount": 56,
    "returnInt": 32,
    "CriticalCount": 6,
    "NumEdges": 80,
    "const32Bit": 323,
    "const64Bit": 5,
    "numConstZeroes": 172,
    "numConstOnes": 69,
    "UncondBranches": 32,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 48,
    "NumAndInst": 5,
    "BlockMid": 9,
    "BlockLow": 68,
    "NumBitCastInst": 9,
    "NumBrInst": 56,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 117,
    "NumICmpInst": 27,
    "NumLShrInst": 1,
    "NumLoadInst": 237,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 21,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 92,
    "NumSubInst": 0,
    "NumTruncInst": 15,
    "NumXorInst": 3,
    "NumZExtInst": 14,
    "TotalBlocks": 77,
    "TotalInsts": 708,
    "TotalMemInst": 546,
    "TotalFuncs": 30,
    "ArgsPhi": 2,
    "testUnary": 328
  },
  "baseline_oz_instcount": 708,
  "knowledge_base_entry": [
    "--dse",
    "--globalopt",
    "--aggressive-instcombine",
    "--gvn",
    "--loop-simplifycfg",
    "--reassociate",
    "--gvn-hoist",
    "--ipsccp",
    "--sroa",
    "--dce",
    "--lower-expect",
    "--sccp",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--inline",
          "--rewrite-statepoints-for-gc",
          "--aggressive-instcombine",
          "--mergeicmps",
          "--elim-avail-extern",
          "--sccp",
          "--loop-simplify",
          "--partially-inline-libcalls",
          "--tailcallelim",
          "--pgo-memop-opt",
          "--loop-predication",
          "--strip-debug-declare",
          "--ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--inline",
      "--rewrite-statepoints-for-gc",
      "--aggressive-instcombine",
      "--mergeicmps",
      "--elim-avail-extern",
      "--sccp",
      "--loop-simplify",
      "--partially-inline-libcalls",
      "--tailcallelim",
      "--pgo-memop-opt",
      "--loop-predication",
      "--strip-debug-declare",
      "--ee-instrument"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}