{
  "program_id": "poj104-v1_22_247.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 14,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 3,
    "oneSuccessor": 14,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 21,
    "returnInt": 6,
    "CriticalCount": 4,
    "NumEdges": 28,
    "const32Bit": 21,
    "const64Bit": 21,
    "numConstZeroes": 15,
    "numConstOnes": 16,
    "UncondBranches": 14,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 23,
    "NumBitCastInst": 10,
    "NumBrInst": 21,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 32,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 25,
    "TotalInsts": 139,
    "TotalMemInst": 78,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 57
  },
  "baseline_oz_instcount": 66,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--mergefunc",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--die",
    "--simplifycfg",
    "--sroa",
    "--memcpyopt",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--loop-simplifycfg",
    "--lower-expect",
    "--adce",
    "--jump-threading",
    "--slsr",
    "--simplifycfg",
    "--sroa",
    "--instsimplify",
    "--early-cse-memssa",
    "--instcombine",
    "--jump-threading",
    "--globalopt",
    "--mergefunc",
    "--inline",
    "--elim-avail-extern",
    "--instcombine",
    "--sroa",
    "--mergefunc",
    "--loop-simplifycfg",
    "--mem2reg",
    "--aggressive-instcombine",
    "--reassociate",
    "--mergefunc",
    "--mem2reg",
    "--aggressive-instcombine",
    "--adce",
    "--gvn",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--inject-tli-mappings",
          "--barrier",
          "--attributor",
          "--infer-address-spaces",
          "--name-anon-globals",
          "--canonicalize-aliases",
          "--load-store-vectorizer",
          "--lower-expect",
          "--dce",
          "--constmerge",
          "--slp-vectorizer",
          "--globaldce",
          "--memcpyopt",
          "--forceattrs",
          "--sroa",
          "--mldst-motion",
          "--partially-inline-libcalls",
          "--break-crit-edges",
          "--ipsccp",
          "--licm",
          "--post-inline-ee-instrument",
          "--rpo-functionattrs",
          "--early-cse",
          "--simplifycfg",
          "--argpromotion",
          "--die"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--inject-tli-mappings",
      "--barrier",
      "--attributor",
      "--infer-address-spaces",
      "--name-anon-globals",
      "--canonicalize-aliases",
      "--load-store-vectorizer",
      "--lower-expect",
      "--dce",
      "--constmerge",
      "--slp-vectorizer",
      "--globaldce",
      "--memcpyopt",
      "--forceattrs",
      "--sroa",
      "--mldst-motion",
      "--partially-inline-libcalls",
      "--break-crit-edges",
      "--ipsccp",
      "--licm",
      "--post-inline-ee-instrument",
      "--rpo-functionattrs",
      "--early-cse",
      "--simplifycfg",
      "--argpromotion",
      "--die"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}