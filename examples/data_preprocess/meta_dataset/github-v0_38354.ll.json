{
  "program_id": "github-v0_38354.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 51,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 7,
    "oneSuccessor": 51,
    "twoPred": 21,
    "twoPredOneSuc": 7,
    "twoEach": 12,
    "twoSuccessor": 21,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 86,
    "BeginPhi": 2,
    "BranchCount": 72,
    "returnInt": 34,
    "CriticalCount": 6,
    "NumEdges": 93,
    "const32Bit": 131,
    "const64Bit": 6,
    "numConstZeroes": 19,
    "numConstOnes": 75,
    "UncondBranches": 51,
    "binaryConstArg": 51,
    "NumAShrInst": 1,
    "NumAddInst": 22,
    "NumAllocaInst": 51,
    "NumAndInst": 11,
    "BlockMid": 7,
    "BlockLow": 81,
    "NumBitCastInst": 2,
    "NumBrInst": 72,
    "NumCallInst": 47,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 25,
    "NumLShrInst": 2,
    "NumLoadInst": 135,
    "NumMulInst": 4,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 16,
    "NumSExtInst": 18,
    "NumSelectInst": 4,
    "NumShlInst": 4,
    "NumStoreInst": 71,
    "NumSubInst": 13,
    "NumTruncInst": 6,
    "NumXorInst": 7,
    "NumZExtInst": 16,
    "TotalBlocks": 88,
    "TotalInsts": 549,
    "TotalMemInst": 322,
    "TotalFuncs": 17,
    "ArgsPhi": 4,
    "testUnary": 230
  },
  "baseline_oz_instcount": 549,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--gvn",
    "--slsr",
    "--loop-simplifycfg",
    "--dce",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--dse",
    "--instcombine",
    "--globalopt",
    "--mergefunc",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergeicmps",
          "--lowerinvoke",
          "--sroa",
          "--canonicalize-aliases",
          "--speculative-execution",
          "--div-rem-pairs",
          "--early-cse",
          "--strip",
          "--globalopt",
          "--aggressive-instcombine",
          "--callsite-splitting",
          "--sccp",
          "--lowerswitch",
          "--bdce",
          "--strip-dead-prototypes",
          "--mergefunc",
          "--coro-elide",
          "--constmerge",
          "--coro-early",
          "--cross-dso-cfi",
          "--loop-load-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergeicmps",
      "--lowerinvoke",
      "--sroa",
      "--canonicalize-aliases",
      "--speculative-execution",
      "--div-rem-pairs",
      "--early-cse",
      "--strip",
      "--globalopt",
      "--aggressive-instcombine",
      "--callsite-splitting",
      "--sccp",
      "--lowerswitch",
      "--bdce",
      "--strip-dead-prototypes",
      "--mergefunc",
      "--coro-elide",
      "--constmerge",
      "--coro-early",
      "--cross-dso-cfi",
      "--loop-load-elim"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}