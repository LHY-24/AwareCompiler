{
  "program_id": "github-v0_15449.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 0,
    "oneSuccessor": 5,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 7,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 9,
    "const32Bit": 55,
    "const64Bit": 6,
    "numConstZeroes": 14,
    "numConstOnes": 39,
    "UncondBranches": 5,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 38,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 29,
    "NumBitCastInst": 6,
    "NumBrInst": 7,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 38,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 23,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 46,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 30,
    "TotalInsts": 206,
    "TotalMemInst": 159,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 89
  },
  "baseline_oz_instcount": 206,
  "knowledge_base_entry": [
    "--mergefunc",
    "--early-cse-memssa",
    "--loop-rotate",
    "--newgvn",
    "--aggressive-instcombine",
    "--prune-eh",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--add-discriminators",
          "--loop-instsimplify",
          "--post-inline-ee-instrument",
          "--lowerinvoke",
          "--redundant-dbg-inst-elim",
          "-loop-reduce",
          "--flattencfg",
          "--newgvn",
          "--separate-const-offset-from-gep",
          "--consthoist",
          "--loop-idiom",
          "--elim-avail-extern",
          "--forceattrs",
          "--coro-cleanup",
          "--mergefunc",
          "--loop-interchange",
          "--licm",
          "--irce",
          "--alignment-from-assumptions",
          "--loop-unroll-and-jam",
          "--lcssa",
          "--loop-versioning",
          "--loop-versioning-licm",
          "--lower-constant-intrinsics",
          "--pgo-memop-opt",
          "--ipconstprop",
          "--coro-early",
          "--loweratomic",
          "--load-store-vectorizer",
          "--memcpyopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+22.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--add-discriminators",
      "--loop-instsimplify",
      "--post-inline-ee-instrument",
      "--lowerinvoke",
      "--redundant-dbg-inst-elim",
      "-loop-reduce",
      "--flattencfg",
      "--newgvn",
      "--separate-const-offset-from-gep",
      "--consthoist",
      "--loop-idiom",
      "--elim-avail-extern",
      "--forceattrs",
      "--coro-cleanup",
      "--mergefunc",
      "--loop-interchange",
      "--licm",
      "--irce",
      "--alignment-from-assumptions",
      "--loop-unroll-and-jam",
      "--lcssa",
      "--loop-versioning",
      "--loop-versioning-licm",
      "--lower-constant-intrinsics",
      "--pgo-memop-opt",
      "--ipconstprop",
      "--coro-early",
      "--loweratomic",
      "--load-store-vectorizer",
      "--memcpyopt"
    ],
    "performance_vs_Oz": "+22.8%"
  }
}