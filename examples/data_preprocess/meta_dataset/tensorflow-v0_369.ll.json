{
  "program_id": "tensorflow-v0_369.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 8,
    "onePred": 109,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 59,
    "oneSuccessor": 35,
    "twoPred": 27,
    "twoPredOneSuc": 2,
    "twoEach": 9,
    "twoSuccessor": 87,
    "morePreds": 11,
    "BB03Phi": 9,
    "BBHiPhi": 0,
    "BBNoPhi": 160,
    "BeginPhi": 9,
    "BranchCount": 71,
    "returnInt": 32,
    "CriticalCount": 69,
    "NumEdges": 213,
    "const32Bit": 231,
    "const64Bit": 216,
    "numConstZeroes": 211,
    "numConstOnes": 106,
    "UncondBranches": 35,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 33,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 160,
    "NumBitCastInst": 71,
    "NumBrInst": 71,
    "NumCallInst": 154,
    "NumGetElementPtrInst": 128,
    "NumICmpInst": 38,
    "NumLShrInst": 1,
    "NumLoadInst": 96,
    "NumMulInst": 1,
    "NumOrInst": 14,
    "NumPHIInst": 10,
    "NumRetInst": 20,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 88,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 169,
    "TotalInsts": 864,
    "TotalMemInst": 550,
    "TotalFuncs": 76,
    "ArgsPhi": 25,
    "testUnary": 227
  },
  "baseline_oz_instcount": 849,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--licm",
    "--reassociate",
    "--slsr",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--bdce",
    "--inline",
    "--globalopt",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lcssa",
          "--lower-constant-intrinsics",
          "--loop-load-elim",
          "--hotcoldsplit",
          "--ipsccp",
          "--canonicalize-aliases",
          "--speculative-execution",
          "--globalsplit",
          "--loop-unroll-and-jam",
          "--aggressive-instcombine",
          "--nary-reassociate",
          "--guard-widening",
          "--lowerinvoke",
          "--die",
          "--bdce",
          "--flattencfg",
          "--loop-reroll",
          "--rpo-functionattrs",
          "--strip",
          "--dce",
          "--jump-threading",
          "--loop-unroll",
          "--loop-data-prefetch",
          "--coro-cleanup",
          "--insert-gcov-profiling",
          "--ee-instrument",
          "--globalopt",
          "--forceattrs",
          "--loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+12.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lcssa",
      "--lower-constant-intrinsics",
      "--loop-load-elim",
      "--hotcoldsplit",
      "--ipsccp",
      "--canonicalize-aliases",
      "--speculative-execution",
      "--globalsplit",
      "--loop-unroll-and-jam",
      "--aggressive-instcombine",
      "--nary-reassociate",
      "--guard-widening",
      "--lowerinvoke",
      "--die",
      "--bdce",
      "--flattencfg",
      "--loop-reroll",
      "--rpo-functionattrs",
      "--strip",
      "--dce",
      "--jump-threading",
      "--loop-unroll",
      "--loop-data-prefetch",
      "--coro-cleanup",
      "--insert-gcov-profiling",
      "--ee-instrument",
      "--globalopt",
      "--forceattrs",
      "--loop-unswitch"
    ],
    "performance_vs_Oz": "+12.6%"
  }
}