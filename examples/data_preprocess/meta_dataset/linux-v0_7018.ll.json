{
  "program_id": "linux-v0_7018.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 4,
    "oneSuccessor": 22,
    "twoPred": 1,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 6,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 0,
    "BranchCount": 28,
    "returnInt": 7,
    "CriticalCount": 3,
    "NumEdges": 44,
    "const32Bit": 126,
    "const64Bit": 3,
    "numConstZeroes": 52,
    "numConstOnes": 45,
    "UncondBranches": 22,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 34,
    "NumAndInst": 4,
    "BlockMid": 5,
    "BlockLow": 37,
    "NumBitCastInst": 7,
    "NumBrInst": 28,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 87,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 58,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 42,
    "TotalInsts": 316,
    "TotalMemInst": 239,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 141
  },
  "baseline_oz_instcount": 316,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--aggressive-instcombine",
    "--ipsccp",
    "--instsimplify",
    "--jump-threading",
    "--loop-deletion",
    "--mem2reg",
    "--inline",
    "--newgvn",
    "--loop-instsimplify",
    "--bdce",
    "--loop-instsimplify",
    "--ipsccp",
    "--adce",
    "--bdce",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--newgvn",
    "--mldst-motion",
    "--sroa",
    "--lower-expect",
    "--gvn",
    "--licm",
    "--prune-eh",
    "--jump-threading",
    "--loop-deletion",
    "--mem2reg",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--barrier",
          "--early-cse",
          "--dce",
          "--slsr",
          "--aggressive-instcombine",
          "--jump-threading",
          "--licm",
          "--loop-distribute",
          "--simplifycfg",
          "--inferattrs",
          "--constprop",
          "--forceattrs",
          "--ipconstprop",
          "--reassociate",
          "--mergefunc",
          "--instsimplify",
          "--post-inline-ee-instrument",
          "--loop-simplifycfg",
          "--separate-const-offset-from-gep"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--barrier",
      "--early-cse",
      "--dce",
      "--slsr",
      "--aggressive-instcombine",
      "--jump-threading",
      "--licm",
      "--loop-distribute",
      "--simplifycfg",
      "--inferattrs",
      "--constprop",
      "--forceattrs",
      "--ipconstprop",
      "--reassociate",
      "--mergefunc",
      "--instsimplify",
      "--post-inline-ee-instrument",
      "--loop-simplifycfg",
      "--separate-const-offset-from-gep"
    ],
    "performance_vs_Oz": "+3.2%"
  }
}