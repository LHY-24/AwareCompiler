{
  "program_id": "github-v0_10105.ll",
  "autophase_features": {
    "BBNumArgsHi": 3,
    "BBNumArgsLo": 1,
    "onePred": 7,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 4,
    "oneSuccessor": 3,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 2,
    "BBNoPhi": 9,
    "BeginPhi": 4,
    "BranchCount": 11,
    "returnInt": 3,
    "CriticalCount": 9,
    "NumEdges": 19,
    "const32Bit": 23,
    "const64Bit": 24,
    "numConstZeroes": 10,
    "numConstOnes": 11,
    "UncondBranches": 3,
    "binaryConstArg": 9,
    "NumAShrInst": 2,
    "NumAddInst": 4,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 10,
    "NumBitCastInst": 0,
    "NumBrInst": 11,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 14,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 13,
    "NumRetInst": 2,
    "NumSExtInst": 2,
    "NumSelectInst": 1,
    "NumShlInst": 3,
    "NumStoreInst": 2,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 13,
    "TotalInsts": 133,
    "TotalMemInst": 47,
    "TotalFuncs": 10,
    "ArgsPhi": 42,
    "testUnary": 25
  },
  "baseline_oz_instcount": 137,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--gvn",
    "--aggressive-instcombine",
    "--adce",
    "--dce",
    "--early-cse",
    "--loop-simplifycfg",
    "--dse",
    "--mergefunc",
    "-loop-reduce",
    "--indvars",
    "--slsr",
    "--gvn-hoist",
    "--jump-threading",
    "--slp-vectorizer",
    "--dce",
    "--lower-constant-intrinsics",
    "--dce",
    "--correlated-propagation",
    "--die",
    "--loop-instsimplify",
    "--ipsccp",
    "--newgvn",
    "--globalopt",
    "--mem2reg",
    "--loop-deletion",
    "--gvn",
    "--mergefunc",
    "--early-cse",
    "--instcombine",
    "--slp-vectorizer",
    "--lower-expect",
    "--gvn",
    "--dse",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--instsimplify",
    "--simplifycfg",
    "--licm",
    "--slp-vectorizer",
    "--instcombine",
    "-loop-reduce",
    "--sroa",
    "--simplifycfg",
    "--reassociate",
    "--early-cse",
    "--jump-threading",
    "--prune-eh",
    "--inline",
    "--instcombine",
    "--gvn-hoist",
    "-loop-reduce",
    "--indvars",
    "--slsr",
    "--gvn-hoist",
    "--jump-threading",
    "--slp-vectorizer",
    "--dce",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--coro-elide",
          "--name-anon-globals",
          "--instsimplify",
          "--post-inline-ee-instrument",
          "--loop-predication",
          "--sancov",
          "--sink",
          "--globalopt",
          "--nary-reassociate",
          "--slp-vectorizer",
          "--dse",
          "--irce",
          "--instcombine",
          "--partially-inline-libcalls",
          "--lower-expect",
          "--lower-guard-intrinsic",
          "--ipconstprop",
          "--inject-tli-mappings",
          "--lowerswitch",
          "--instnamer",
          "--coro-cleanup",
          "--mergeicmps",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--coro-elide",
      "--name-anon-globals",
      "--instsimplify",
      "--post-inline-ee-instrument",
      "--loop-predication",
      "--sancov",
      "--sink",
      "--globalopt",
      "--nary-reassociate",
      "--slp-vectorizer",
      "--dse",
      "--irce",
      "--instcombine",
      "--partially-inline-libcalls",
      "--lower-expect",
      "--lower-guard-intrinsic",
      "--ipconstprop",
      "--inject-tli-mappings",
      "--lowerswitch",
      "--instnamer",
      "--coro-cleanup",
      "--mergeicmps",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+4.4%"
  }
}