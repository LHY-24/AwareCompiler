{
  "program_id": "github-v0_30028.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 31,
    "const64Bit": 50,
    "numConstZeroes": 50,
    "numConstOnes": 23,
    "UncondBranches": 13,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 20,
    "NumBitCastInst": 8,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 37,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 17,
    "TotalBlocks": 24,
    "TotalInsts": 188,
    "TotalMemInst": 113,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 84
  },
  "baseline_oz_instcount": 188,
  "knowledge_base_entry": [
    "--loop-versioning-licm",
    "--early-cse",
    "--flattencfg",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--gvn",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--instcombine",
    "--nary-reassociate",
    "--jump-threading",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--infer-address-spaces",
          "--newgvn",
          "--loop-instsimplify",
          "--lowerswitch",
          "--globalopt",
          "--lower-constant-intrinsics",
          "--slsr",
          "--loop-vectorize",
          "--dce",
          "--lower-widenable-condition",
          "--loop-data-prefetch",
          "--coro-elide",
          "-loop-reduce",
          "--sccp",
          "--slp-vectorizer",
          "--strip-dead-prototypes",
          "--loop-unswitch",
          "--instcombine",
          "--instsimplify",
          "--early-cse",
          "--called-value-propagation",
          "--pgo-memop-opt",
          "--strip-debug-declare",
          "--jump-threading",
          "--alignment-from-assumptions",
          "--bdce",
          "--separate-const-offset-from-gep",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--infer-address-spaces",
      "--newgvn",
      "--loop-instsimplify",
      "--lowerswitch",
      "--globalopt",
      "--lower-constant-intrinsics",
      "--slsr",
      "--loop-vectorize",
      "--dce",
      "--lower-widenable-condition",
      "--loop-data-prefetch",
      "--coro-elide",
      "-loop-reduce",
      "--sccp",
      "--slp-vectorizer",
      "--strip-dead-prototypes",
      "--loop-unswitch",
      "--instcombine",
      "--instsimplify",
      "--early-cse",
      "--called-value-propagation",
      "--pgo-memop-opt",
      "--strip-debug-declare",
      "--jump-threading",
      "--alignment-from-assumptions",
      "--bdce",
      "--separate-const-offset-from-gep",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+6.4%"
  }
}