{
  "program_id": "github-v0_15666.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 5,
    "oneSuccessor": 18,
    "twoPred": 12,
    "twoPredOneSuc": 2,
    "twoEach": 7,
    "twoSuccessor": 15,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 40,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 6,
    "CriticalCount": 11,
    "NumEdges": 48,
    "const32Bit": 58,
    "const64Bit": 3,
    "numConstZeroes": 30,
    "numConstOnes": 20,
    "UncondBranches": 18,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 38,
    "NumBitCastInst": 6,
    "NumBrInst": 33,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 43,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 40,
    "TotalInsts": 196,
    "TotalMemInst": 126,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 65
  },
  "baseline_oz_instcount": 196,
  "knowledge_base_entry": [
    "--mergefunc",
    "--ipsccp",
    "--early-cse",
    "--correlated-propagation",
    "--gvn",
    "--indvars",
    "--slp-vectorizer",
    "--sroa",
    "--loop-reroll",
    "--loop-simplifycfg",
    "--nary-reassociate",
    "--simplifycfg",
    "--memcpyopt",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse-memssa",
          "--aggressive-instcombine",
          "--loop-simplifycfg",
          "--globaldce",
          "--loop-idiom",
          "--load-store-vectorizer",
          "--infer-address-spaces",
          "--irce",
          "--rewrite-statepoints-for-gc",
          "--strip-nondebug",
          "--loop-load-elim",
          "--ipsccp",
          "--flattencfg",
          "--sccp",
          "--sink",
          "--mergeicmps",
          "--partially-inline-libcalls",
          "--strip-debug-declare",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse-memssa",
      "--aggressive-instcombine",
      "--loop-simplifycfg",
      "--globaldce",
      "--loop-idiom",
      "--load-store-vectorizer",
      "--infer-address-spaces",
      "--irce",
      "--rewrite-statepoints-for-gc",
      "--strip-nondebug",
      "--loop-load-elim",
      "--ipsccp",
      "--flattencfg",
      "--sccp",
      "--sink",
      "--mergeicmps",
      "--partially-inline-libcalls",
      "--strip-debug-declare",
      "--instcombine"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}