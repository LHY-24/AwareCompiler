{
  "program_id": "poj104-v1_93_2394.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 30,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 16,
    "oneSuccessor": 12,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 27,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 54,
    "BeginPhi": 0,
    "BranchCount": 39,
    "returnInt": 8,
    "CriticalCount": 24,
    "NumEdges": 66,
    "const32Bit": 78,
    "const64Bit": 6,
    "numConstZeroes": 31,
    "numConstOnes": 21,
    "UncondBranches": 12,
    "binaryConstArg": 24,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 20,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 53,
    "NumBitCastInst": 12,
    "NumBrInst": 39,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 27,
    "NumLShrInst": 0,
    "NumLoadInst": 60,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 54,
    "TotalInsts": 268,
    "TotalMemInst": 149,
    "TotalFuncs": 27,
    "ArgsPhi": 0,
    "testUnary": 93
  },
  "baseline_oz_instcount": 196,
  "knowledge_base_entry": [
    "--bdce",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--instsimplify",
    "--loop-simplifycfg",
    "--bdce",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--instsimplify",
    "--inline",
    "--mergefunc",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--adce",
    "--early-cse",
    "--early-cse",
    "--mldst-motion",
    "--instcombine",
    "--correlated-propagation",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--inline",
    "--loop-simplifycfg",
    "--dce",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--sccp",
    "--instcombine",
    "--slsr",
    "--simplifycfg",
    "--ipsccp",
    "--dce",
    "--early-cse",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--inline",
    "--simplifycfg",
    "--licm",
    "--aggressive-instcombine",
    "--instsimplify",
    "--loop-simplifycfg",
    "--bdce",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--bdce",
    "--ipsccp",
    "--elim-avail-extern",
    "--sccp",
    "--jump-threading",
    "--load-store-vectorizer",
    "--sroa",
    "--mergefunc",
    "--instcombine",
    "--die",
    "--newgvn",
    "--inline",
    "--early-cse",
    "--loop-instsimplify",
    "--early-cse",
    "--indvars",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--mem2reg",
          "--globalsplit",
          "--elim-avail-extern",
          "--lowerinvoke",
          "--coro-split",
          "--loop-vectorize",
          "--loop-data-prefetch",
          "--reassociate",
          "--inject-tli-mappings",
          "--loop-versioning-licm",
          "--libcalls-shrinkwrap",
          "--callsite-splitting",
          "--loop-distribute",
          "--constprop",
          "--inline",
          "--newgvn",
          "--indvars",
          "--loop-guard-widening",
          "--mergefunc",
          "--coro-cleanup"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+42.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--mem2reg",
      "--globalsplit",
      "--elim-avail-extern",
      "--lowerinvoke",
      "--coro-split",
      "--loop-vectorize",
      "--loop-data-prefetch",
      "--reassociate",
      "--inject-tli-mappings",
      "--loop-versioning-licm",
      "--libcalls-shrinkwrap",
      "--callsite-splitting",
      "--loop-distribute",
      "--constprop",
      "--inline",
      "--newgvn",
      "--indvars",
      "--loop-guard-widening",
      "--mergefunc",
      "--coro-cleanup"
    ],
    "performance_vs_Oz": "+42.3%"
  }
}