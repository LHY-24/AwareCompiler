{
  "program_id": "github-v0_7741.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 19,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 5,
    "oneSuccessor": 17,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 30,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 35,
    "const32Bit": 56,
    "const64Bit": 114,
    "numConstZeroes": 106,
    "numConstOnes": 45,
    "UncondBranches": 17,
    "binaryConstArg": 33,
    "NumAShrInst": 11,
    "NumAddInst": 3,
    "NumAllocaInst": 14,
    "NumAndInst": 12,
    "BlockMid": 8,
    "BlockLow": 22,
    "NumBitCastInst": 20,
    "NumBrInst": 26,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 67,
    "NumICmpInst": 9,
    "NumLShrInst": 1,
    "NumLoadInst": 50,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 34,
    "NumSubInst": 0,
    "NumTruncInst": 15,
    "NumXorInst": 0,
    "NumZExtInst": 21,
    "TotalBlocks": 30,
    "TotalInsts": 315,
    "TotalMemInst": 172,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 129
  },
  "baseline_oz_instcount": 315,
  "knowledge_base_entry": [
    "--functionattrs",
    "--adce",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--globalopt",
    "--instsimplify",
    "--instcombine",
    "--adce",
    "--instsimplify",
    "--bdce",
    "--aggressive-instcombine",
    "--lower-expect",
    "--early-cse",
    "--flattencfg",
    "--simplifycfg",
    "-loop-reduce",
    "--gvn",
    "--loop-reroll",
    "--simplifycfg",
    "--dse",
    "--instsimplify",
    "--load-store-vectorizer",
    "--gvn",
    "--load-store-vectorizer",
    "--inline",
    "--aggressive-instcombine",
    "--gvn",
    "--gvn-hoist",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--loop-fusion",
          "--loop-guard-widening",
          "--jump-threading",
          "--lowerinvoke",
          "--separate-const-offset-from-gep",
          "--deadargelim",
          "--prune-eh",
          "--sancov",
          "--mergefunc",
          "--memcpyopt",
          "--adce",
          "--early-cse",
          "--ipsccp",
          "--lower-guard-intrinsic",
          "--loop-unroll-and-jam",
          "--ipconstprop",
          "--loop-unroll",
          "--globaldce",
          "--simplifycfg",
          "--loop-simplify",
          "--aggressive-instcombine",
          "--correlated-propagation",
          "--div-rem-pairs",
          "--infer-address-spaces",
          "--barrier",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--loop-fusion",
      "--loop-guard-widening",
      "--jump-threading",
      "--lowerinvoke",
      "--separate-const-offset-from-gep",
      "--deadargelim",
      "--prune-eh",
      "--sancov",
      "--mergefunc",
      "--memcpyopt",
      "--adce",
      "--early-cse",
      "--ipsccp",
      "--lower-guard-intrinsic",
      "--loop-unroll-and-jam",
      "--ipconstprop",
      "--loop-unroll",
      "--globaldce",
      "--simplifycfg",
      "--loop-simplify",
      "--aggressive-instcombine",
      "--correlated-propagation",
      "--div-rem-pairs",
      "--infer-address-spaces",
      "--barrier",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+3.8%"
  }
}