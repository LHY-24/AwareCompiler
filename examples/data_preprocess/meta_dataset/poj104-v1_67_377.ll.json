{
  "program_id": "poj104-v1_67_377.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 2,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 15,
    "returnInt": 6,
    "CriticalCount": 4,
    "NumEdges": 21,
    "const32Bit": 12,
    "const64Bit": 33,
    "numConstZeroes": 26,
    "numConstOnes": 9,
    "UncondBranches": 9,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 16,
    "NumBitCastInst": 10,
    "NumBrInst": 15,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 16,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 7,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 18,
    "TotalInsts": 133,
    "TotalMemInst": 74,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 60
  },
  "baseline_oz_instcount": 78,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--reassociate",
    "--inline",
    "--jump-threading",
    "--loop-reroll",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--mem2reg",
    "--early-cse",
    "--inline",
    "--jump-threading",
    "--loop-reroll",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--mem2reg",
    "--gvn-hoist",
    "--instsimplify",
    "--mldst-motion",
    "--instcombine",
    "--early-cse",
    "--loop-instsimplify",
    "--newgvn",
    "--mldst-motion",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--licm",
    "--bdce",
    "--loop-instsimplify",
    "--newgvn",
    "--die",
    "--loop-simplifycfg",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--called-value-propagation",
          "--constprop",
          "--memcpyopt",
          "--coro-early",
          "--inline",
          "--loop-versioning",
          "--newgvn",
          "--sccp",
          "--aggressive-instcombine",
          "--slsr",
          "--coro-cleanup",
          "--tailcallelim",
          "--mem2reg",
          "--argpromotion",
          "--loop-idiom",
          "--simplifycfg",
          "--hotcoldsplit",
          "--partial-inliner",
          "--rpo-functionattrs",
          "--mergefunc",
          "--loop-predication",
          "--mldst-motion",
          "--die",
          "--elim-avail-extern",
          "--loop-versioning-licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--called-value-propagation",
      "--constprop",
      "--memcpyopt",
      "--coro-early",
      "--inline",
      "--loop-versioning",
      "--newgvn",
      "--sccp",
      "--aggressive-instcombine",
      "--slsr",
      "--coro-cleanup",
      "--tailcallelim",
      "--mem2reg",
      "--argpromotion",
      "--loop-idiom",
      "--simplifycfg",
      "--hotcoldsplit",
      "--partial-inliner",
      "--rpo-functionattrs",
      "--mergefunc",
      "--loop-predication",
      "--mldst-motion",
      "--die",
      "--elim-avail-extern",
      "--loop-versioning-licm"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}