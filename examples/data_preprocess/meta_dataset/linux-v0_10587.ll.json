{
  "program_id": "linux-v0_10587.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 56,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 25,
    "oneSuccessor": 43,
    "twoPred": 19,
    "twoPredOneSuc": 10,
    "twoEach": 8,
    "twoSuccessor": 37,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 1,
    "BranchCount": 80,
    "returnInt": 16,
    "CriticalCount": 20,
    "NumEdges": 117,
    "const32Bit": 261,
    "const64Bit": 34,
    "numConstZeroes": 106,
    "numConstOnes": 82,
    "UncondBranches": 43,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 63,
    "NumAndInst": 8,
    "BlockMid": 9,
    "BlockLow": 86,
    "NumBitCastInst": 11,
    "NumBrInst": 80,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 62,
    "NumICmpInst": 39,
    "NumLShrInst": 0,
    "NumLoadInst": 206,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 15,
    "NumSExtInst": 5,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 99,
    "NumSubInst": 6,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 37,
    "TotalBlocks": 95,
    "TotalInsts": 704,
    "TotalMemInst": 486,
    "TotalFuncs": 35,
    "ArgsPhi": 2,
    "testUnary": 328
  },
  "baseline_oz_instcount": 706,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--dce",
    "--gvn-hoist",
    "--correlated-propagation",
    "--gvn",
    "--dce",
    "--gvn-hoist",
    "--die",
    "--sroa",
    "--nary-reassociate",
    "--jump-threading",
    "--slp-vectorizer",
    "--inline",
    "--sccp",
    "--globalopt",
    "--dse",
    "--simplifycfg",
    "--memcpyopt",
    "--early-cse-memssa",
    "--adce",
    "--early-cse",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--instsimplify",
          "--speculative-execution",
          "--early-cse-memssa",
          "--dce",
          "--gvn-hoist",
          "--simplifycfg",
          "--mergereturn",
          "--sroa",
          "--elim-avail-extern",
          "--jump-threading",
          "--alignment-from-assumptions",
          "--tailcallelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--instsimplify",
      "--speculative-execution",
      "--early-cse-memssa",
      "--dce",
      "--gvn-hoist",
      "--simplifycfg",
      "--mergereturn",
      "--sroa",
      "--elim-avail-extern",
      "--jump-threading",
      "--alignment-from-assumptions",
      "--tailcallelim"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}