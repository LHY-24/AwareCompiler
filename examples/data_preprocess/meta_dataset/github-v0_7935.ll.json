{
  "program_id": "github-v0_7935.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 32,
    "const64Bit": 38,
    "numConstZeroes": 37,
    "numConstOnes": 26,
    "UncondBranches": 13,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 20,
    "NumBitCastInst": 8,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 24,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 21,
    "TotalBlocks": 24,
    "TotalInsts": 194,
    "TotalMemInst": 115,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 93
  },
  "baseline_oz_instcount": 194,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--gvn",
    "--loop-deletion",
    "--sroa",
    "--inline",
    "--dce",
    "--mergefunc",
    "--slp-vectorizer",
    "--indvars",
    "--gvn",
    "-loop-reduce",
    "--newgvn",
    "--early-cse-memssa",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--sroa",
          "--globalsplit",
          "--strip-nondebug",
          "--break-crit-edges",
          "--aggressive-instcombine",
          "--loop-deletion",
          "--rewrite-statepoints-for-gc",
          "--sink",
          "--partial-inliner",
          "--bdce",
          "--ipsccp",
          "--consthoist",
          "--memcpyopt",
          "--float2int",
          "--loop-predication",
          "--functionattrs",
          "--constmerge",
          "--mldst-motion",
          "--sccp",
          "--gvn-hoist",
          "--separate-const-offset-from-gep",
          "--strip",
          "--instsimplify",
          "--loop-simplifycfg",
          "--coro-cleanup",
          "--lower-matrix-intrinsics",
          "--forceattrs",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--sroa",
      "--globalsplit",
      "--strip-nondebug",
      "--break-crit-edges",
      "--aggressive-instcombine",
      "--loop-deletion",
      "--rewrite-statepoints-for-gc",
      "--sink",
      "--partial-inliner",
      "--bdce",
      "--ipsccp",
      "--consthoist",
      "--memcpyopt",
      "--float2int",
      "--loop-predication",
      "--functionattrs",
      "--constmerge",
      "--mldst-motion",
      "--sccp",
      "--gvn-hoist",
      "--separate-const-offset-from-gep",
      "--strip",
      "--instsimplify",
      "--loop-simplifycfg",
      "--coro-cleanup",
      "--lower-matrix-intrinsics",
      "--forceattrs",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+5.7%"
  }
}