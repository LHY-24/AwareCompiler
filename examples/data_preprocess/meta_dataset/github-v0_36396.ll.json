{
  "program_id": "github-v0_36396.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 53,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 15,
    "oneSuccessor": 50,
    "twoPred": 23,
    "twoPredOneSuc": 12,
    "twoEach": 9,
    "twoSuccessor": 26,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 80,
    "BeginPhi": 1,
    "BranchCount": 75,
    "returnInt": 29,
    "CriticalCount": 17,
    "NumEdges": 111,
    "const32Bit": 76,
    "const64Bit": 71,
    "numConstZeroes": 39,
    "numConstOnes": 56,
    "UncondBranches": 50,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 33,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 73,
    "NumBitCastInst": 7,
    "NumBrInst": 75,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 186,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 2,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 78,
    "NumSubInst": 4,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 81,
    "TotalInsts": 529,
    "TotalMemInst": 376,
    "TotalFuncs": 11,
    "ArgsPhi": 2,
    "testUnary": 247
  },
  "baseline_oz_instcount": 455,
  "knowledge_base_entry": [
    "--sccp",
    "--newgvn",
    "--jump-threading",
    "--newgvn",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--ipsccp",
    "--sroa",
    "--nary-reassociate",
    "--ipsccp",
    "--loweratomic",
    "--ipsccp",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--partially-inline-libcalls",
          "--correlated-propagation",
          "--cross-dso-cfi",
          "--globaldce",
          "--loop-fusion",
          "--ipsccp",
          "--loop-simplifycfg",
          "--bdce",
          "--lower-guard-intrinsic",
          "--deadargelim",
          "--guard-widening",
          "--globalsplit",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--partially-inline-libcalls",
      "--correlated-propagation",
      "--cross-dso-cfi",
      "--globaldce",
      "--loop-fusion",
      "--ipsccp",
      "--loop-simplifycfg",
      "--bdce",
      "--lower-guard-intrinsic",
      "--deadargelim",
      "--guard-widening",
      "--globalsplit",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}