{
  "program_id": "github-v0_29593.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 32,
    "const64Bit": 21,
    "numConstZeroes": 22,
    "numConstOnes": 20,
    "UncondBranches": 9,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 12,
    "NumAndInst": 1,
    "BlockMid": 4,
    "BlockLow": 14,
    "NumBitCastInst": 0,
    "NumBrInst": 14,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 5,
    "NumLShrInst": 2,
    "NumLoadInst": 22,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 18,
    "TotalInsts": 117,
    "TotalMemInst": 69,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 47
  },
  "baseline_oz_instcount": 117,
  "knowledge_base_entry": [
    "--indvars",
    "--gvn",
    "--sroa",
    "--aggressive-instcombine",
    "--flattencfg",
    "--newgvn",
    "--instsimplify",
    "--simplifycfg",
    "--licm",
    "--gvn",
    "--dce",
    "--reassociate",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--licm",
    "--globalopt",
    "--jump-threading",
    "--instcombine",
    "--memcpyopt",
    "--licm",
    "--mem2reg",
    "--newgvn",
    "--ipsccp",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--correlated-propagation",
    "--die",
    "--sccp",
    "--inline",
    "--load-store-vectorizer",
    "--loop-fusion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--constprop",
          "--forceattrs",
          "--break-crit-edges",
          "--loop-rotate",
          "--ipconstprop",
          "--ee-instrument",
          "--loop-sink",
          "--elim-avail-extern",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--constprop",
      "--forceattrs",
      "--break-crit-edges",
      "--loop-rotate",
      "--ipconstprop",
      "--ee-instrument",
      "--loop-sink",
      "--elim-avail-extern",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+5.1%"
  }
}