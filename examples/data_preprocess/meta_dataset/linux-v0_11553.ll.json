{
  "program_id": "linux-v0_11553.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 70,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 23,
    "oneSuccessor": 58,
    "twoPred": 20,
    "twoPredOneSuc": 9,
    "twoEach": 6,
    "twoSuccessor": 36,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 121,
    "BeginPhi": 0,
    "BranchCount": 94,
    "returnInt": 48,
    "CriticalCount": 14,
    "NumEdges": 138,
    "const32Bit": 294,
    "const64Bit": 11,
    "numConstZeroes": 128,
    "numConstOnes": 98,
    "UncondBranches": 58,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 79,
    "NumAndInst": 0,
    "BlockMid": 14,
    "BlockLow": 107,
    "NumBitCastInst": 28,
    "NumBrInst": 94,
    "NumCallInst": 79,
    "NumGetElementPtrInst": 85,
    "NumICmpInst": 32,
    "NumLShrInst": 0,
    "NumLoadInst": 229,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 134,
    "NumSubInst": 0,
    "NumTruncInst": 12,
    "NumXorInst": 4,
    "NumZExtInst": 8,
    "TotalBlocks": 121,
    "TotalInsts": 832,
    "TotalMemInst": 606,
    "TotalFuncs": 48,
    "ArgsPhi": 0,
    "testUnary": 369
  },
  "baseline_oz_instcount": 832,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--globalopt",
    "--correlated-propagation",
    "--reassociate",
    "--inline",
    "--gvn",
    "--sccp",
    "--gvn-hoist",
    "--jump-threading",
    "--dse",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn-hoist",
          "--argpromotion",
          "--aggressive-instcombine",
          "--inline",
          "--globalsplit",
          "--jump-threading",
          "--loop-vectorize",
          "--div-rem-pairs",
          "--loop-reroll",
          "--globalopt",
          "--loop-instsimplify",
          "--lcssa",
          "--speculative-execution",
          "--dce",
          "--indvars",
          "--loop-simplifycfg",
          "--instnamer",
          "--strip",
          "--hotcoldsplit",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn-hoist",
      "--argpromotion",
      "--aggressive-instcombine",
      "--inline",
      "--globalsplit",
      "--jump-threading",
      "--loop-vectorize",
      "--div-rem-pairs",
      "--loop-reroll",
      "--globalopt",
      "--loop-instsimplify",
      "--lcssa",
      "--speculative-execution",
      "--dce",
      "--indvars",
      "--loop-simplifycfg",
      "--instnamer",
      "--strip",
      "--hotcoldsplit",
      "--coro-split"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}