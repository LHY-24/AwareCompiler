{
  "program_id": "github-v0_48825.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 39,
    "const64Bit": 25,
    "numConstZeroes": 33,
    "numConstOnes": 21,
    "UncondBranches": 13,
    "binaryConstArg": 14,
    "NumAShrInst": 1,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 19,
    "NumSubInst": 3,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 18,
    "TotalBlocks": 24,
    "TotalInsts": 166,
    "TotalMemInst": 89,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 73
  },
  "baseline_oz_instcount": 166,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse-memssa",
    "--loop-fusion",
    "--gvn-hoist",
    "--early-cse",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--bdce",
    "--sccp",
    "--dce",
    "--mem2reg",
    "--jump-threading",
    "--gvn",
    "--sroa",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-rotate",
          "--cross-dso-cfi",
          "-loop-reduce",
          "--coro-elide",
          "--partial-inliner",
          "--loop-instsimplify",
          "--coro-early",
          "--aggressive-instcombine",
          "--mem2reg",
          "--constprop",
          "--sccp",
          "--speculative-execution",
          "--infer-address-spaces",
          "--argpromotion",
          "--simplifycfg",
          "--rpo-functionattrs",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-rotate",
      "--cross-dso-cfi",
      "-loop-reduce",
      "--coro-elide",
      "--partial-inliner",
      "--loop-instsimplify",
      "--coro-early",
      "--aggressive-instcombine",
      "--mem2reg",
      "--constprop",
      "--sccp",
      "--speculative-execution",
      "--infer-address-spaces",
      "--argpromotion",
      "--simplifycfg",
      "--rpo-functionattrs",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+2.4%"
  }
}