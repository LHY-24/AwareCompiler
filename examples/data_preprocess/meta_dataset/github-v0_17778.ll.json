{
  "program_id": "github-v0_17778.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 13,
    "oneSuccessor": 34,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 21,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 63,
    "BeginPhi": 0,
    "BranchCount": 55,
    "returnInt": 12,
    "CriticalCount": 3,
    "NumEdges": 81,
    "const32Bit": 335,
    "const64Bit": 0,
    "numConstZeroes": 234,
    "numConstOnes": 64,
    "UncondBranches": 34,
    "binaryConstArg": 7,
    "NumAShrInst": 1,
    "NumAddInst": 11,
    "NumAllocaInst": 24,
    "NumAndInst": 1,
    "BlockMid": 13,
    "BlockLow": 50,
    "NumBitCastInst": 0,
    "NumBrInst": 55,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 147,
    "NumICmpInst": 21,
    "NumLShrInst": 0,
    "NumLoadInst": 155,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 67,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 78,
    "NumSubInst": 12,
    "NumTruncInst": 19,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 63,
    "TotalInsts": 614,
    "TotalMemInst": 417,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 267
  },
  "baseline_oz_instcount": 614,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--adce",
    "--instsimplify",
    "--gvn",
    "--early-cse",
    "--prune-eh",
    "--jump-threading",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--irce",
          "--loop-rotate",
          "--loop-data-prefetch",
          "--coro-elide",
          "--reassociate",
          "--called-value-propagation",
          "--lower-constant-intrinsics",
          "--aggressive-instcombine",
          "--inject-tli-mappings",
          "--attributor",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--irce",
      "--loop-rotate",
      "--loop-data-prefetch",
      "--coro-elide",
      "--reassociate",
      "--called-value-propagation",
      "--lower-constant-intrinsics",
      "--aggressive-instcombine",
      "--inject-tli-mappings",
      "--attributor",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+9.1%"
  }
}