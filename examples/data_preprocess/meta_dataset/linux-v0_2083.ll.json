{
  "program_id": "linux-v0_2083.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 27,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 7,
    "oneSuccessor": 22,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 11,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 56,
    "BeginPhi": 1,
    "BranchCount": 33,
    "returnInt": 12,
    "CriticalCount": 1,
    "NumEdges": 44,
    "const32Bit": 167,
    "const64Bit": 6,
    "numConstZeroes": 55,
    "numConstOnes": 67,
    "UncondBranches": 22,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 63,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 49,
    "NumBitCastInst": 15,
    "NumBrInst": 33,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 40,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 100,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 24,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 81,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 1,
    "TotalBlocks": 57,
    "TotalInsts": 407,
    "TotalMemInst": 311,
    "TotalFuncs": 36,
    "ArgsPhi": 2,
    "testUnary": 186
  },
  "baseline_oz_instcount": 407,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--gvn",
    "--memcpyopt",
    "--loop-reroll",
    "--instsimplify",
    "--loop-reroll",
    "--mergefunc",
    "--simplifycfg",
    "--mem2reg",
    "--load-store-vectorizer",
    "--sroa",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--globalopt",
    "--correlated-propagation",
    "--newgvn",
    "--lower-expect",
    "--early-cse",
    "--loop-deletion",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--ipconstprop",
          "--inferattrs",
          "--irce",
          "--correlated-propagation",
          "--scalarizer",
          "--lower-constant-intrinsics",
          "--loop-fusion",
          "--slsr",
          "--rewrite-statepoints-for-gc",
          "--instnamer",
          "--mergefunc",
          "--simplifycfg",
          "--rpo-functionattrs",
          "--loop-unswitch",
          "--attributor",
          "--separate-const-offset-from-gep",
          "--die",
          "--coro-cleanup",
          "--load-store-vectorizer",
          "--flattencfg",
          "--globaldce",
          "--dce",
          "--newgvn",
          "--lcssa",
          "--called-value-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--ipconstprop",
      "--inferattrs",
      "--irce",
      "--correlated-propagation",
      "--scalarizer",
      "--lower-constant-intrinsics",
      "--loop-fusion",
      "--slsr",
      "--rewrite-statepoints-for-gc",
      "--instnamer",
      "--mergefunc",
      "--simplifycfg",
      "--rpo-functionattrs",
      "--loop-unswitch",
      "--attributor",
      "--separate-const-offset-from-gep",
      "--die",
      "--coro-cleanup",
      "--load-store-vectorizer",
      "--flattencfg",
      "--globaldce",
      "--dce",
      "--newgvn",
      "--lcssa",
      "--called-value-propagation"
    ],
    "performance_vs_Oz": "+5.2%"
  }
}