{
  "program_id": "linux-v0_13503.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 51,
    "onePredOneSuc": 34,
    "onePredTwoSuc": 15,
    "oneSuccessor": 47,
    "twoPred": 13,
    "twoPredOneSuc": 8,
    "twoEach": 1,
    "twoSuccessor": 19,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 83,
    "BeginPhi": 0,
    "BranchCount": 64,
    "returnInt": 9,
    "CriticalCount": 16,
    "NumEdges": 102,
    "const32Bit": 342,
    "const64Bit": 62,
    "numConstZeroes": 208,
    "numConstOnes": 72,
    "UncondBranches": 47,
    "binaryConstArg": 14,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 58,
    "NumAndInst": 6,
    "BlockMid": 12,
    "BlockLow": 71,
    "NumBitCastInst": 20,
    "NumBrInst": 64,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 141,
    "NumICmpInst": 20,
    "NumLShrInst": 1,
    "NumLoadInst": 227,
    "NumMulInst": 2,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 103,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 5,
    "TotalBlocks": 83,
    "TotalInsts": 712,
    "TotalMemInst": 565,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 315
  },
  "baseline_oz_instcount": 714,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--gvn",
    "--licm",
    "--loop-instsimplify",
    "--mem2reg",
    "--dse",
    "--instsimplify",
    "--adce",
    "--inline",
    "--memcpyopt",
    "--instsimplify",
    "--mergefunc",
    "--adce",
    "--dse",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--redundant-dbg-inst-elim",
          "--memcpyopt",
          "--strip",
          "--loop-interchange",
          "--jump-threading",
          "--reassociate",
          "--rewrite-statepoints-for-gc",
          "--flattencfg",
          "--lower-expect",
          "--loop-reroll",
          "--loop-vectorize",
          "--loop-rotate",
          "--loop-simplifycfg",
          "--name-anon-globals",
          "--loop-idiom",
          "--lower-constant-intrinsics",
          "--loop-unroll",
          "--instcombine",
          "--inferattrs",
          "--loop-guard-widening",
          "--always-inline",
          "--attributor",
          "--loop-instsimplify",
          "--irce",
          "--div-rem-pairs",
          "--simple-loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--redundant-dbg-inst-elim",
      "--memcpyopt",
      "--strip",
      "--loop-interchange",
      "--jump-threading",
      "--reassociate",
      "--rewrite-statepoints-for-gc",
      "--flattencfg",
      "--lower-expect",
      "--loop-reroll",
      "--loop-vectorize",
      "--loop-rotate",
      "--loop-simplifycfg",
      "--name-anon-globals",
      "--loop-idiom",
      "--lower-constant-intrinsics",
      "--loop-unroll",
      "--instcombine",
      "--inferattrs",
      "--loop-guard-widening",
      "--always-inline",
      "--attributor",
      "--loop-instsimplify",
      "--irce",
      "--div-rem-pairs",
      "--simple-loop-unswitch"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}