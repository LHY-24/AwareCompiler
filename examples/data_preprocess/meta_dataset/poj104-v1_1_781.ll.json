{
  "program_id": "poj104-v1_1_781.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 28,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 23,
    "const32Bit": 37,
    "const64Bit": 19,
    "numConstZeroes": 9,
    "numConstOnes": 26,
    "UncondBranches": 11,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 21,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 25,
    "NumBitCastInst": 21,
    "NumBrInst": 17,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 28,
    "TotalInsts": 181,
    "TotalMemInst": 120,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 79
  },
  "baseline_oz_instcount": 57,
  "knowledge_base_entry": [
    "--instsimplify",
    "--aggressive-instcombine",
    "--reassociate",
    "--instcombine",
    "--lower-expect",
    "--licm",
    "--sccp",
    "--globalopt",
    "--gvn",
    "--lower-constant-intrinsics",
    "--gvn",
    "--early-cse-memssa",
    "--correlated-propagation",
    "--mergefunc",
    "--simplifycfg",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--licm",
    "--simplifycfg",
    "--mem2reg",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--inline",
    "--mem2reg",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--jump-threading",
    "--reassociate",
    "--licm",
    "--slp-vectorizer",
    "--mergefunc",
    "--loop-reroll",
    "--newgvn",
    "--adce",
    "--simplifycfg",
    "--ipsccp",
    "--aggressive-instcombine",
    "--dce",
    "--lower-expect",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-guard-widening",
          "--inject-tli-mappings",
          "--mldst-motion",
          "--elim-avail-extern",
          "--ipconstprop",
          "--deadargelim",
          "--sroa",
          "--mergefunc",
          "--insert-gcov-profiling",
          "--loop-unroll",
          "--irce",
          "--mergereturn",
          "--loop-sink",
          "--add-discriminators",
          "--newgvn",
          "--constprop",
          "--forceattrs",
          "--attributor",
          "--loop-interchange",
          "--loop-fusion",
          "--lowerswitch",
          "--barrier",
          "--simple-loop-unswitch",
          "--strip",
          "--inline",
          "--pgo-memop-opt",
          "--loop-rotate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-guard-widening",
      "--inject-tli-mappings",
      "--mldst-motion",
      "--elim-avail-extern",
      "--ipconstprop",
      "--deadargelim",
      "--sroa",
      "--mergefunc",
      "--insert-gcov-profiling",
      "--loop-unroll",
      "--irce",
      "--mergereturn",
      "--loop-sink",
      "--add-discriminators",
      "--newgvn",
      "--constprop",
      "--forceattrs",
      "--attributor",
      "--loop-interchange",
      "--loop-fusion",
      "--lowerswitch",
      "--barrier",
      "--simple-loop-unswitch",
      "--strip",
      "--inline",
      "--pgo-memop-opt",
      "--loop-rotate"
    ],
    "performance_vs_Oz": "+3.5%"
  }
}