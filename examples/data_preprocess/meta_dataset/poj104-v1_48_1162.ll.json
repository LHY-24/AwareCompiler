{
  "program_id": "poj104-v1_48_1162.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 6,
    "oneSuccessor": 35,
    "twoPred": 14,
    "twoPredOneSuc": 2,
    "twoEach": 8,
    "twoSuccessor": 19,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 0,
    "BranchCount": 54,
    "returnInt": 15,
    "CriticalCount": 6,
    "NumEdges": 73,
    "const32Bit": 96,
    "const64Bit": 47,
    "numConstZeroes": 42,
    "numConstOnes": 59,
    "UncondBranches": 35,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 22,
    "NumAllocaInst": 37,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 65,
    "NumBitCastInst": 36,
    "NumBrInst": 54,
    "NumCallInst": 62,
    "NumGetElementPtrInst": 31,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 119,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 18,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 47,
    "NumSubInst": 7,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 71,
    "TotalInsts": 473,
    "TotalMemInst": 296,
    "TotalFuncs": 31,
    "ArgsPhi": 0,
    "testUnary": 211
  },
  "baseline_oz_instcount": 256,
  "knowledge_base_entry": [
    "--dse",
    "--slp-vectorizer",
    "--adce",
    "--early-cse",
    "--loop-reroll",
    "-loop-reduce",
    "--load-store-vectorizer",
    "--bdce",
    "--lower-expect",
    "--instsimplify",
    "--mergefunc",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--mergefunc",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--instcombine",
    "--gvn-hoist",
    "--gvn-hoist",
    "--mem2reg",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--dce",
    "--die",
    "--newgvn",
    "--memcpyopt",
    "--mergefunc",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--mergefunc",
    "--simplifycfg",
    "--bdce",
    "--reassociate",
    "--elim-avail-extern",
    "--prune-eh",
    "--mem2reg",
    "--newgvn",
    "--sroa",
    "--adce",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--mergefunc",
    "--licm",
    "--globalopt",
    "--dse",
    "--instsimplify",
    "--newgvn",
    "--correlated-propagation",
    "--sroa",
    "--globalopt",
    "--loop-instsimplify",
    "--reassociate",
    "--dce",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse",
    "--instcombine",
    "--gvn-hoist",
    "--gvn-hoist",
    "--mem2reg",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--dce",
    "--die",
    "--newgvn",
    "--memcpyopt",
    "--mergefunc",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--mergefunc",
    "--simplifycfg",
    "--bdce",
    "--reassociate",
    "--elim-avail-extern",
    "--jump-threading",
    "--correlated-propagation",
    "--gvn-hoist",
    "--loop-rotate",
    "--instcombine",
    "--loop-instsimplify",
    "--licm",
    "--lower-expect",
    "--mergefunc",
    "--instcombine",
    "--licm",
    "--aggressive-instcombine",
    "--ipsccp",
    "--gvn",
    "--aggressive-instcombine",
    "--gvn",
    "--early-cse",
    "--dce",
    "--loop-instsimplify",
    "--dce",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--loop-reroll",
    "--correlated-propagation",
    "--lower-expect",
    "--die",
    "--simplifycfg",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--bdce",
          "--sroa",
          "--scalarizer",
          "--sancov",
          "--redundant-dbg-inst-elim",
          "--early-cse-memssa",
          "--canonicalize-aliases",
          "--lcssa",
          "--mem2reg",
          "--deadargelim",
          "--inferattrs",
          "--instcombine",
          "--gvn",
          "--add-discriminators",
          "--lower-widenable-condition",
          "--constprop",
          "--coro-cleanup",
          "--slsr",
          "--guard-widening",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+26.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--bdce",
      "--sroa",
      "--scalarizer",
      "--sancov",
      "--redundant-dbg-inst-elim",
      "--early-cse-memssa",
      "--canonicalize-aliases",
      "--lcssa",
      "--mem2reg",
      "--deadargelim",
      "--inferattrs",
      "--instcombine",
      "--gvn",
      "--add-discriminators",
      "--lower-widenable-condition",
      "--constprop",
      "--coro-cleanup",
      "--slsr",
      "--guard-widening",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+26.6%"
  }
}