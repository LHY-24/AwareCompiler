{
  "program_id": "linux-v0_10931.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 16,
    "const32Bit": 43,
    "const64Bit": 4,
    "numConstZeroes": 17,
    "numConstOnes": 22,
    "UncondBranches": 8,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 18,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 22,
    "NumBitCastInst": 4,
    "NumBrInst": 12,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 11,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 1,
    "TotalBlocks": 23,
    "TotalInsts": 140,
    "TotalMemInst": 99,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 64
  },
  "baseline_oz_instcount": 141,
  "knowledge_base_entry": [
    "--instsimplify",
    "--die",
    "--early-cse",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--adce",
          "--loop-versioning",
          "--lower-widenable-condition",
          "--name-anon-globals",
          "--slsr",
          "--instcombine",
          "--argpromotion",
          "--mergereturn",
          "--ee-instrument",
          "--coro-early",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--adce",
      "--loop-versioning",
      "--lower-widenable-condition",
      "--name-anon-globals",
      "--slsr",
      "--instcombine",
      "--argpromotion",
      "--mergereturn",
      "--ee-instrument",
      "--coro-early",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}