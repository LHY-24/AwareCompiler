{
  "program_id": "poj104-v1_95_1535.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 2,
    "oneSuccessor": 8,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 8,
    "CriticalCount": 1,
    "NumEdges": 16,
    "const32Bit": 18,
    "const64Bit": 30,
    "numConstZeroes": 25,
    "numConstOnes": 10,
    "UncondBranches": 8,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 14,
    "NumBitCastInst": 10,
    "NumBrInst": 12,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 9,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 16,
    "TotalInsts": 111,
    "TotalMemInst": 70,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 42
  },
  "baseline_oz_instcount": 67,
  "knowledge_base_entry": [
    "--break-crit-edges",
    "--simplifycfg",
    "--mergefunc",
    "--loop-instsimplify",
    "--instcombine",
    "--correlated-propagation",
    "--bdce",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--sroa",
    "--loop-instsimplify",
    "--simplifycfg",
    "--mldst-motion",
    "--gvn",
    "--mergefunc",
    "--early-cse",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slp-vectorizer",
          "--speculative-execution",
          "--loop-instsimplify",
          "--coro-early",
          "--elim-avail-extern",
          "--globalsplit",
          "--mem2reg",
          "--inferattrs",
          "--loweratomic",
          "--post-inline-ee-instrument",
          "--partially-inline-libcalls",
          "--mldst-motion",
          "--lower-guard-intrinsic",
          "--die",
          "--flattencfg",
          "--instcombine",
          "--newgvn",
          "--deadargelim",
          "--infer-address-spaces",
          "--dce",
          "-loop-reduce",
          "--loop-sink",
          "--div-rem-pairs",
          "--loop-deletion",
          "--gvn",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+26.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slp-vectorizer",
      "--speculative-execution",
      "--loop-instsimplify",
      "--coro-early",
      "--elim-avail-extern",
      "--globalsplit",
      "--mem2reg",
      "--inferattrs",
      "--loweratomic",
      "--post-inline-ee-instrument",
      "--partially-inline-libcalls",
      "--mldst-motion",
      "--lower-guard-intrinsic",
      "--die",
      "--flattencfg",
      "--instcombine",
      "--newgvn",
      "--deadargelim",
      "--infer-address-spaces",
      "--dce",
      "-loop-reduce",
      "--loop-sink",
      "--div-rem-pairs",
      "--loop-deletion",
      "--gvn",
      "--coro-split"
    ],
    "performance_vs_Oz": "+26.9%"
  }
}