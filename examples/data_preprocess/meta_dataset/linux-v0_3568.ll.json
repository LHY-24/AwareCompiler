{
  "program_id": "linux-v0_3568.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 64,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 24,
    "oneSuccessor": 57,
    "twoPred": 28,
    "twoPredOneSuc": 16,
    "twoEach": 9,
    "twoSuccessor": 40,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 106,
    "BeginPhi": 0,
    "BranchCount": 97,
    "returnInt": 19,
    "CriticalCount": 18,
    "NumEdges": 137,
    "const32Bit": 232,
    "const64Bit": 87,
    "numConstZeroes": 119,
    "numConstOnes": 80,
    "UncondBranches": 57,
    "binaryConstArg": 64,
    "NumAShrInst": 0,
    "NumAddInst": 33,
    "NumAllocaInst": 48,
    "NumAndInst": 21,
    "BlockMid": 9,
    "BlockLow": 97,
    "NumBitCastInst": 2,
    "NumBrInst": 97,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 65,
    "NumICmpInst": 39,
    "NumLShrInst": 1,
    "NumLoadInst": 165,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 108,
    "NumSubInst": 7,
    "NumTruncInst": 30,
    "NumXorInst": 0,
    "NumZExtInst": 33,
    "TotalBlocks": 106,
    "TotalInsts": 699,
    "TotalMemInst": 412,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 286
  },
  "baseline_oz_instcount": 700,
  "knowledge_base_entry": [
    "--sccp",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--die",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--guard-widening",
          "--early-cse-memssa",
          "--loop-idiom",
          "--lower-widenable-condition",
          "--memcpyopt",
          "--loop-unroll-and-jam",
          "--strip-nondebug",
          "--cross-dso-cfi",
          "--lowerswitch",
          "--indvars",
          "--consthoist",
          "--strip-dead-prototypes",
          "--loop-instsimplify",
          "--loweratomic",
          "--aggressive-instcombine",
          "--strip-debug-declare",
          "-loop-reduce",
          "--mergeicmps",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--guard-widening",
      "--early-cse-memssa",
      "--loop-idiom",
      "--lower-widenable-condition",
      "--memcpyopt",
      "--loop-unroll-and-jam",
      "--strip-nondebug",
      "--cross-dso-cfi",
      "--lowerswitch",
      "--indvars",
      "--consthoist",
      "--strip-dead-prototypes",
      "--loop-instsimplify",
      "--loweratomic",
      "--aggressive-instcombine",
      "--strip-debug-declare",
      "-loop-reduce",
      "--mergeicmps",
      "--coro-split"
    ],
    "performance_vs_Oz": "+8.0%"
  }
}