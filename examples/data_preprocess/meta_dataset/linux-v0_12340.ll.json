{
  "program_id": "linux-v0_12340.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 65,
    "onePredOneSuc": 61,
    "onePredTwoSuc": 0,
    "oneSuccessor": 65,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 87,
    "BeginPhi": 0,
    "BranchCount": 72,
    "returnInt": 1,
    "CriticalCount": 4,
    "NumEdges": 114,
    "const32Bit": 183,
    "const64Bit": 8,
    "numConstZeroes": 67,
    "numConstOnes": 106,
    "UncondBranches": 65,
    "binaryConstArg": 26,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 70,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 76,
    "NumBitCastInst": 72,
    "NumBrInst": 72,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 178,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 93,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 26,
    "NumZExtInst": 13,
    "TotalBlocks": 87,
    "TotalInsts": 640,
    "TotalMemInst": 407,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 350
  },
  "baseline_oz_instcount": 640,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--inline",
    "--dce",
    "--reassociate",
    "--mergefunc",
    "--lower-constant-intrinsics",
    "--load-store-vectorizer",
    "--licm",
    "--aggressive-instcombine",
    "--early-cse",
    "--instsimplify",
    "--adce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--correlated-propagation",
          "--loop-unswitch",
          "--partially-inline-libcalls",
          "--ipconstprop",
          "--bdce",
          "--loop-fusion",
          "--cross-dso-cfi",
          "--gvn",
          "--guard-widening",
          "--ipsccp",
          "--loop-rotate",
          "--deadargelim",
          "--elim-avail-extern",
          "--mldst-motion",
          "--adce",
          "--partial-inliner",
          "--simple-loop-unswitch",
          "--constmerge",
          "--callsite-splitting",
          "--functionattrs",
          "--loop-interchange",
          "--loop-load-elim",
          "--post-inline-ee-instrument",
          "--mergefunc",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--correlated-propagation",
      "--loop-unswitch",
      "--partially-inline-libcalls",
      "--ipconstprop",
      "--bdce",
      "--loop-fusion",
      "--cross-dso-cfi",
      "--gvn",
      "--guard-widening",
      "--ipsccp",
      "--loop-rotate",
      "--deadargelim",
      "--elim-avail-extern",
      "--mldst-motion",
      "--adce",
      "--partial-inliner",
      "--simple-loop-unswitch",
      "--constmerge",
      "--callsite-splitting",
      "--functionattrs",
      "--loop-interchange",
      "--loop-load-elim",
      "--post-inline-ee-instrument",
      "--mergefunc",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}