{
  "program_id": "github-v0_31582.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 1,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 0,
    "oneSuccessor": 1,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 3,
    "BeginPhi": 1,
    "BranchCount": 3,
    "returnInt": 2,
    "CriticalCount": 3,
    "NumEdges": 5,
    "const32Bit": 7,
    "const64Bit": 6,
    "numConstZeroes": 4,
    "numConstOnes": 3,
    "UncondBranches": 1,
    "binaryConstArg": 5,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 1,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 3,
    "NumBitCastInst": 1,
    "NumBrInst": 3,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 1,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 2,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 4,
    "TotalInsts": 35,
    "TotalMemInst": 14,
    "TotalFuncs": 9,
    "ArgsPhi": 2,
    "testUnary": 7
  },
  "baseline_oz_instcount": 36,
  "knowledge_base_entry": [
    "--slsr",
    "--newgvn",
    "--indvars",
    "--loop-fusion",
    "--jump-threading",
    "--simplifycfg",
    "--slsr",
    "--slp-vectorizer",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--mergefunc",
    "--instcombine",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--bdce",
    "--instcombine",
    "--early-cse-memssa",
    "--loop-instsimplify",
    "--bdce",
    "--instcombine",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--sccp",
    "--die",
    "--jump-threading",
    "--early-cse",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--attributor",
          "--lowerinvoke",
          "--elim-avail-extern",
          "--loop-simplify",
          "--simple-loop-unswitch",
          "--coro-split",
          "--mem2reg",
          "--slp-vectorizer",
          "--slsr",
          "--argpromotion",
          "--loop-fusion",
          "--inject-tli-mappings",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--attributor",
      "--lowerinvoke",
      "--elim-avail-extern",
      "--loop-simplify",
      "--simple-loop-unswitch",
      "--coro-split",
      "--mem2reg",
      "--slp-vectorizer",
      "--slsr",
      "--argpromotion",
      "--loop-fusion",
      "--inject-tli-mappings",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+5.6%"
  }
}