{
  "program_id": "github-v0_21074.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 2,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 1,
    "oneSuccessor": 1,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 3,
    "BeginPhi": 2,
    "BranchCount": 4,
    "returnInt": 1,
    "CriticalCount": 4,
    "NumEdges": 7,
    "const32Bit": 4,
    "const64Bit": 2,
    "numConstZeroes": 3,
    "numConstOnes": 1,
    "UncondBranches": 1,
    "binaryConstArg": 3,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 5,
    "NumBitCastInst": 0,
    "NumBrInst": 4,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 3,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 1,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 5,
    "TotalInsts": 30,
    "TotalMemInst": 12,
    "TotalFuncs": 5,
    "ArgsPhi": 7,
    "testUnary": 4
  },
  "baseline_oz_instcount": 31,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--dce",
    "--loop-instsimplify",
    "--sccp",
    "--simplifycfg",
    "--bdce",
    "--licm",
    "--lower-constant-intrinsics",
    "--loop-instsimplify",
    "--reassociate",
    "--reassociate",
    "--die",
    "--jump-threading",
    "--adce",
    "--load-store-vectorizer",
    "--jump-threading",
    "--lower-expect",
    "--dse",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--early-cse",
    "--dce",
    "--sroa",
    "--simplifycfg",
    "--bdce",
    "--mem2reg",
    "--globalopt",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--lower-expect",
          "--flattencfg",
          "--elim-avail-extern",
          "--lower-matrix-intrinsics",
          "--cross-dso-cfi",
          "--ee-instrument",
          "--coro-elide",
          "--coro-early",
          "--strip-debug-declare",
          "--attributor",
          "--simplifycfg",
          "--alignment-from-assumptions",
          "--mergeicmps",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--lower-expect",
      "--flattencfg",
      "--elim-avail-extern",
      "--lower-matrix-intrinsics",
      "--cross-dso-cfi",
      "--ee-instrument",
      "--coro-elide",
      "--coro-early",
      "--strip-debug-declare",
      "--attributor",
      "--simplifycfg",
      "--alignment-from-assumptions",
      "--mergeicmps",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+6.5%"
  }
}