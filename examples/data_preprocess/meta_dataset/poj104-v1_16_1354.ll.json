{
  "program_id": "poj104-v1_16_1354.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 2,
    "oneSuccessor": 7,
    "twoPred": 4,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 14,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 7,
    "CriticalCount": 1,
    "NumEdges": 15,
    "const32Bit": 21,
    "const64Bit": 10,
    "numConstZeroes": 2,
    "numConstOnes": 6,
    "UncondBranches": 7,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 13,
    "NumBitCastInst": 10,
    "NumBrInst": 11,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 24,
    "NumMulInst": 6,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 5,
    "NumSubInst": 6,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 14,
    "TotalInsts": 97,
    "TotalMemInst": 54,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 40
  },
  "baseline_oz_instcount": 39,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--newgvn",
    "--jump-threading",
    "--flattencfg",
    "--newgvn",
    "--bdce",
    "--sroa",
    "--reassociate",
    "--prune-eh",
    "--lower-expect",
    "--adce",
    "--elim-avail-extern",
    "--jump-threading",
    "--globalopt",
    "--instcombine",
    "--inline",
    "--dce",
    "--dse",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--simplifycfg",
          "--consthoist",
          "--early-cse-memssa",
          "--loop-unroll-and-jam",
          "--loop-simplifycfg",
          "--mem2reg",
          "--correlated-propagation",
          "--sink",
          "--loop-distribute",
          "--bdce",
          "--lower-expect",
          "--libcalls-shrinkwrap",
          "--inline",
          "--globaldce",
          "--loop-simplify",
          "--loop-deletion",
          "--loop-reroll",
          "--lower-guard-intrinsic",
          "--coro-early",
          "--slsr",
          "--attributor",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--simplifycfg",
      "--consthoist",
      "--early-cse-memssa",
      "--loop-unroll-and-jam",
      "--loop-simplifycfg",
      "--mem2reg",
      "--correlated-propagation",
      "--sink",
      "--loop-distribute",
      "--bdce",
      "--lower-expect",
      "--libcalls-shrinkwrap",
      "--inline",
      "--globaldce",
      "--loop-simplify",
      "--loop-deletion",
      "--loop-reroll",
      "--lower-guard-intrinsic",
      "--coro-early",
      "--slsr",
      "--attributor",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}