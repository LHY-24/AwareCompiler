{
  "program_id": "poj104-v1_49_106.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 35,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 7,
    "oneSuccessor": 31,
    "twoPred": 12,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 17,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 74,
    "BeginPhi": 0,
    "BranchCount": 48,
    "returnInt": 17,
    "CriticalCount": 7,
    "NumEdges": 65,
    "const32Bit": 83,
    "const64Bit": 62,
    "numConstZeroes": 30,
    "numConstOnes": 76,
    "UncondBranches": 31,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 50,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 65,
    "NumBitCastInst": 53,
    "NumBrInst": 48,
    "NumCallInst": 74,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 123,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 21,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 61,
    "NumSubInst": 3,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 74,
    "TotalInsts": 532,
    "TotalMemInst": 343,
    "TotalFuncs": 40,
    "ArgsPhi": 0,
    "testUnary": 255
  },
  "baseline_oz_instcount": 121,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--early-cse",
    "--early-cse",
    "--aggressive-instcombine",
    "--mergefunc",
    "--sroa",
    "--nary-reassociate",
    "--lower-expect",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--dse",
    "--dse",
    "--dce",
    "--die",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--licm",
    "--sccp",
    "--gvn",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--newgvn",
    "--dce",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--die",
    "--early-cse",
    "--load-store-vectorizer",
    "--slsr",
    "--newgvn",
    "--early-cse-memssa",
    "--loop-deletion",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--dce",
    "--elim-avail-extern",
    "--globalopt",
    "--gvn-hoist",
    "--flattencfg",
    "--early-cse",
    "--mldst-motion",
    "--instcombine",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--newgvn",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lcssa",
          "--libcalls-shrinkwrap",
          "--strip-nondebug",
          "--called-value-propagation",
          "--consthoist",
          "--lower-constant-intrinsics",
          "--rpo-functionattrs",
          "--mem2reg",
          "--gvn",
          "--loop-unswitch",
          "--lower-matrix-intrinsics",
          "--indvars",
          "--loop-reroll",
          "--coro-elide",
          "--irce",
          "--simplifycfg",
          "--slsr",
          "--lowerinvoke",
          "--simple-loop-unswitch",
          "--partially-inline-libcalls",
          "--constmerge",
          "--lower-widenable-condition",
          "--loop-fusion",
          "--forceattrs",
          "--instcombine",
          "--loop-instsimplify",
          "--canonicalize-aliases",
          "--inline",
          "--rewrite-statepoints-for-gc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lcssa",
      "--libcalls-shrinkwrap",
      "--strip-nondebug",
      "--called-value-propagation",
      "--consthoist",
      "--lower-constant-intrinsics",
      "--rpo-functionattrs",
      "--mem2reg",
      "--gvn",
      "--loop-unswitch",
      "--lower-matrix-intrinsics",
      "--indvars",
      "--loop-reroll",
      "--coro-elide",
      "--irce",
      "--simplifycfg",
      "--slsr",
      "--lowerinvoke",
      "--simple-loop-unswitch",
      "--partially-inline-libcalls",
      "--constmerge",
      "--lower-widenable-condition",
      "--loop-fusion",
      "--forceattrs",
      "--instcombine",
      "--loop-instsimplify",
      "--canonicalize-aliases",
      "--inline",
      "--rewrite-statepoints-for-gc"
    ],
    "performance_vs_Oz": "+8.3%"
  }
}