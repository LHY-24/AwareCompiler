{
  "program_id": "github-v0_30055.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 37,
    "const64Bit": 71,
    "numConstZeroes": 72,
    "numConstOnes": 27,
    "UncondBranches": 13,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 14,
    "NumAndInst": 3,
    "BlockMid": 5,
    "BlockLow": 19,
    "NumBitCastInst": 12,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 38,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 24,
    "TotalInsts": 194,
    "TotalMemInst": 130,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 72
  },
  "baseline_oz_instcount": 194,
  "knowledge_base_entry": [
    "--loop-idiom",
    "--newgvn",
    "--aggressive-instcombine",
    "--sroa",
    "--die",
    "--ipsccp",
    "--loop-deletion",
    "--jump-threading",
    "--loop-simplifycfg",
    "--lower-expect",
    "--elim-avail-extern",
    "--flattencfg",
    "--sroa",
    "-loop-reduce",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loweratomic",
          "--indvars",
          "--globalsplit",
          "--loop-unroll-and-jam",
          "-loop-reduce",
          "--constprop",
          "--post-inline-ee-instrument",
          "--speculative-execution",
          "--instcombine",
          "--adce",
          "--loop-guard-widening",
          "--slp-vectorizer",
          "--lowerswitch",
          "--coro-elide",
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--mergefunc",
          "--rewrite-statepoints-for-gc",
          "--coro-early",
          "--name-anon-globals",
          "--separate-const-offset-from-gep",
          "--cross-dso-cfi",
          "--coro-split",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loweratomic",
      "--indvars",
      "--globalsplit",
      "--loop-unroll-and-jam",
      "-loop-reduce",
      "--constprop",
      "--post-inline-ee-instrument",
      "--speculative-execution",
      "--instcombine",
      "--adce",
      "--loop-guard-widening",
      "--slp-vectorizer",
      "--lowerswitch",
      "--coro-elide",
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--mergefunc",
      "--rewrite-statepoints-for-gc",
      "--coro-early",
      "--name-anon-globals",
      "--separate-const-offset-from-gep",
      "--cross-dso-cfi",
      "--coro-split",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+2.1%"
  }
}