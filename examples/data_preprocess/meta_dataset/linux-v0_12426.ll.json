{
  "program_id": "linux-v0_12426.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 7,
    "BeginPhi": 0,
    "BranchCount": 6,
    "returnInt": 1,
    "CriticalCount": 1,
    "NumEdges": 8,
    "const32Bit": 8,
    "const64Bit": 2,
    "numConstZeroes": 2,
    "numConstOnes": 7,
    "UncondBranches": 4,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 7,
    "NumBitCastInst": 0,
    "NumBrInst": 6,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 2,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 8,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 7,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 7,
    "TotalInsts": 33,
    "TotalMemInst": 22,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 13
  },
  "baseline_oz_instcount": 34,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--gvn-hoist",
    "--instsimplify",
    "--bdce",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--die",
    "--early-cse-memssa",
    "--bdce",
    "--mem2reg",
    "--reassociate",
    "--newgvn",
    "--simplifycfg",
    "--elim-avail-extern",
    "--early-cse",
    "--flattencfg",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--cross-dso-cfi",
          "--reassociate",
          "--inline",
          "--attributor",
          "--add-discriminators",
          "--correlated-propagation",
          "--redundant-dbg-inst-elim",
          "--sink",
          "--callsite-splitting",
          "--slp-vectorizer",
          "--strip-nondebug"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--cross-dso-cfi",
      "--reassociate",
      "--inline",
      "--attributor",
      "--add-discriminators",
      "--correlated-propagation",
      "--redundant-dbg-inst-elim",
      "--sink",
      "--callsite-splitting",
      "--slp-vectorizer",
      "--strip-nondebug"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}