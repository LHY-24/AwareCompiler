{
  "program_id": "linux-v0_10447.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 31,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 7,
    "oneSuccessor": 26,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 12,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 1,
    "BranchCount": 38,
    "returnInt": 12,
    "CriticalCount": 3,
    "NumEdges": 53,
    "const32Bit": 132,
    "const64Bit": 13,
    "numConstZeroes": 50,
    "numConstOnes": 54,
    "UncondBranches": 26,
    "binaryConstArg": 8,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 45,
    "NumAndInst": 5,
    "BlockMid": 6,
    "BlockLow": 48,
    "NumBitCastInst": 14,
    "NumBrInst": 38,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 99,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 15,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 75,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 54,
    "TotalInsts": 392,
    "TotalMemInst": 286,
    "TotalFuncs": 27,
    "ArgsPhi": 2,
    "testUnary": 173
  },
  "baseline_oz_instcount": 392,
  "knowledge_base_entry": [
    "--sroa",
    "--instcombine",
    "--sccp",
    "--newgvn",
    "--memcpyopt",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--lower-expect",
    "--dce",
    "--ipsccp",
    "--sroa",
    "--reassociate",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mldst-motion",
          "--slp-vectorizer",
          "--mem2reg",
          "--coro-split",
          "--canonicalize-aliases",
          "--loop-versioning-licm",
          "--attributor",
          "--partially-inline-libcalls",
          "--loop-idiom",
          "--lower-expect",
          "--lcssa",
          "--rpo-functionattrs",
          "--argpromotion",
          "--irce",
          "--flattencfg",
          "--aggressive-instcombine",
          "--prune-eh",
          "--mergereturn",
          "--coro-cleanup"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mldst-motion",
      "--slp-vectorizer",
      "--mem2reg",
      "--coro-split",
      "--canonicalize-aliases",
      "--loop-versioning-licm",
      "--attributor",
      "--partially-inline-libcalls",
      "--loop-idiom",
      "--lower-expect",
      "--lcssa",
      "--rpo-functionattrs",
      "--argpromotion",
      "--irce",
      "--flattencfg",
      "--aggressive-instcombine",
      "--prune-eh",
      "--mergereturn",
      "--coro-cleanup"
    ],
    "performance_vs_Oz": "+2.0%"
  }
}