{
  "program_id": "linux-v0_110.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 65,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 22,
    "oneSuccessor": 55,
    "twoPred": 23,
    "twoPredOneSuc": 9,
    "twoEach": 6,
    "twoSuccessor": 39,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 114,
    "BeginPhi": 1,
    "BranchCount": 94,
    "returnInt": 39,
    "CriticalCount": 18,
    "NumEdges": 133,
    "const32Bit": 244,
    "const64Bit": 13,
    "numConstZeroes": 93,
    "numConstOnes": 84,
    "UncondBranches": 55,
    "binaryConstArg": 18,
    "NumAShrInst": 2,
    "NumAddInst": 10,
    "NumAllocaInst": 72,
    "NumAndInst": 7,
    "BlockMid": 12,
    "BlockLow": 103,
    "NumBitCastInst": 10,
    "NumBrInst": 94,
    "NumCallInst": 81,
    "NumGetElementPtrInst": 73,
    "NumICmpInst": 39,
    "NumLShrInst": 1,
    "NumLoadInst": 286,
    "NumMulInst": 2,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 21,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 105,
    "NumSubInst": 0,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 20,
    "TotalBlocks": 115,
    "TotalInsts": 848,
    "TotalMemInst": 617,
    "TotalFuncs": 30,
    "ArgsPhi": 2,
    "testUnary": 407
  },
  "baseline_oz_instcount": 848,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse",
    "--mergefunc",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--licm",
    "--early-cse-memssa",
    "--flattencfg",
    "--newgvn",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--prune-eh",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--sroa",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--licm",
    "--loop-simplifycfg",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--licm",
    "--gvn-hoist",
    "--simplifycfg",
    "--mem2reg",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning-licm",
          "--newgvn",
          "--coro-early",
          "--reassociate",
          "--mergefunc",
          "--coro-elide",
          "--name-anon-globals",
          "--sancov",
          "--cross-dso-cfi",
          "--mergeicmps",
          "--lower-guard-intrinsic",
          "--lowerswitch",
          "--constprop",
          "--mem2reg",
          "--die",
          "--sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning-licm",
      "--newgvn",
      "--coro-early",
      "--reassociate",
      "--mergefunc",
      "--coro-elide",
      "--name-anon-globals",
      "--sancov",
      "--cross-dso-cfi",
      "--mergeicmps",
      "--lower-guard-intrinsic",
      "--lowerswitch",
      "--constprop",
      "--mem2reg",
      "--die",
      "--sink"
    ],
    "performance_vs_Oz": "+6.1%"
  }
}