{
  "program_id": "github-v0_25295.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 3,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 0,
    "BranchCount": 4,
    "returnInt": 1,
    "CriticalCount": 0,
    "NumEdges": 5,
    "const32Bit": 17,
    "const64Bit": 0,
    "numConstZeroes": 1,
    "numConstOnes": 8,
    "UncondBranches": 3,
    "binaryConstArg": 9,
    "NumAShrInst": 4,
    "NumAddInst": 1,
    "NumAllocaInst": 6,
    "NumAndInst": 2,
    "BlockMid": 1,
    "BlockLow": 5,
    "NumBitCastInst": 0,
    "NumBrInst": 4,
    "NumCallInst": 1,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 19,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 14,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 4,
    "NumZExtInst": 10,
    "TotalBlocks": 6,
    "TotalInsts": 77,
    "TotalMemInst": 41,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 40
  },
  "baseline_oz_instcount": 77,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--instsimplify",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--lower-expect",
    "--globalopt",
    "--newgvn",
    "--mldst-motion",
    "--licm",
    "--prune-eh",
    "--early-cse-memssa",
    "--gvn-hoist",
    "--ipsccp",
    "--loweratomic",
    "--instcombine",
    "--adce",
    "--load-store-vectorizer",
    "--mem2reg",
    "--elim-avail-extern",
    "--loop-instsimplify",
    "--sccp",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--separate-const-offset-from-gep",
          "--name-anon-globals",
          "--mldst-motion",
          "--coro-early",
          "--licm",
          "--loop-deletion",
          "--simple-loop-unswitch",
          "--always-inline",
          "--bdce",
          "--loop-unswitch",
          "--slsr",
          "--aggressive-instcombine",
          "--redundant-dbg-inst-elim",
          "--lower-constant-intrinsics",
          "--forceattrs",
          "--loop-data-prefetch",
          "--loop-idiom",
          "--functionattrs",
          "--irce",
          "--load-store-vectorizer",
          "--loop-simplifycfg",
          "--mem2reg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--separate-const-offset-from-gep",
      "--name-anon-globals",
      "--mldst-motion",
      "--coro-early",
      "--licm",
      "--loop-deletion",
      "--simple-loop-unswitch",
      "--always-inline",
      "--bdce",
      "--loop-unswitch",
      "--slsr",
      "--aggressive-instcombine",
      "--redundant-dbg-inst-elim",
      "--lower-constant-intrinsics",
      "--forceattrs",
      "--loop-data-prefetch",
      "--loop-idiom",
      "--functionattrs",
      "--irce",
      "--load-store-vectorizer",
      "--loop-simplifycfg",
      "--mem2reg"
    ],
    "performance_vs_Oz": "+2.6%"
  }
}