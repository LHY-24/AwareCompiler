{
  "program_id": "github-v0_15961.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 106,
    "onePredOneSuc": 62,
    "onePredTwoSuc": 43,
    "oneSuccessor": 98,
    "twoPred": 55,
    "twoPredOneSuc": 31,
    "twoEach": 23,
    "twoSuccessor": 72,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 173,
    "BeginPhi": 0,
    "BranchCount": 170,
    "returnInt": 13,
    "CriticalCount": 44,
    "NumEdges": 242,
    "const32Bit": 257,
    "const64Bit": 37,
    "numConstZeroes": 75,
    "numConstOnes": 60,
    "UncondBranches": 98,
    "binaryConstArg": 43,
    "NumAShrInst": 1,
    "NumAddInst": 21,
    "NumAllocaInst": 18,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 169,
    "NumBitCastInst": 0,
    "NumBrInst": 170,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 59,
    "NumICmpInst": 72,
    "NumLShrInst": 0,
    "NumLoadInst": 240,
    "NumMulInst": 10,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 56,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 92,
    "NumSubInst": 10,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 173,
    "TotalInsts": 806,
    "TotalMemInst": 452,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 317
  },
  "baseline_oz_instcount": 806,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--simplifycfg",
    "--ipsccp",
    "--instsimplify",
    "--ipsccp",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--adce",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--loop-rotate",
          "--aggressive-instcombine",
          "--instcombine",
          "--flattencfg",
          "--insert-gcov-profiling",
          "--gvn-hoist",
          "--die",
          "--pgo-memop-opt",
          "--speculative-execution",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--loop-rotate",
      "--aggressive-instcombine",
      "--instcombine",
      "--flattencfg",
      "--insert-gcov-profiling",
      "--gvn-hoist",
      "--die",
      "--pgo-memop-opt",
      "--speculative-execution",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}