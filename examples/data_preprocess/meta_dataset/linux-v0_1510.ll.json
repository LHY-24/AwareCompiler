{
  "program_id": "linux-v0_1510.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 49,
    "onePredOneSuc": 35,
    "onePredTwoSuc": 12,
    "oneSuccessor": 43,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 21,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 98,
    "BeginPhi": 0,
    "BranchCount": 64,
    "returnInt": 33,
    "CriticalCount": 6,
    "NumEdges": 93,
    "const32Bit": 302,
    "const64Bit": 34,
    "numConstZeroes": 125,
    "numConstOnes": 125,
    "UncondBranches": 43,
    "binaryConstArg": 14,
    "NumAShrInst": 1,
    "NumAddInst": 3,
    "NumAllocaInst": 94,
    "NumAndInst": 5,
    "BlockMid": 13,
    "BlockLow": 85,
    "NumBitCastInst": 28,
    "NumBrInst": 64,
    "NumCallInst": 70,
    "NumGetElementPtrInst": 83,
    "NumICmpInst": 23,
    "NumLShrInst": 0,
    "NumLoadInst": 207,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 32,
    "NumSExtInst": 4,
    "NumSelectInst": 2,
    "NumShlInst": 1,
    "NumStoreInst": 145,
    "NumSubInst": 1,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 98,
    "TotalInsts": 790,
    "TotalMemInst": 599,
    "TotalFuncs": 59,
    "ArgsPhi": 0,
    "testUnary": 353
  },
  "baseline_oz_instcount": 791,
  "knowledge_base_entry": [
    "--prune-eh",
    "--aggressive-instcombine",
    "--mem2reg",
    "--flattencfg",
    "--ipsccp",
    "--gvn-hoist",
    "--correlated-propagation",
    "--gvn",
    "--slsr",
    "--newgvn",
    "--dce",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--aggressive-instcombine",
          "--slsr",
          "--cross-dso-cfi",
          "--dse",
          "--loop-distribute",
          "--speculative-execution",
          "--called-value-propagation",
          "--nary-reassociate",
          "--hotcoldsplit",
          "--coro-split",
          "--strip",
          "--mldst-motion",
          "--lower-widenable-condition",
          "--deadargelim",
          "--sancov"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--aggressive-instcombine",
      "--slsr",
      "--cross-dso-cfi",
      "--dse",
      "--loop-distribute",
      "--speculative-execution",
      "--called-value-propagation",
      "--nary-reassociate",
      "--hotcoldsplit",
      "--coro-split",
      "--strip",
      "--mldst-motion",
      "--lower-widenable-condition",
      "--deadargelim",
      "--sancov"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}