{
  "program_id": "poj104-v1_50_183.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 35,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 7,
    "oneSuccessor": 32,
    "twoPred": 12,
    "twoPredOneSuc": 2,
    "twoEach": 10,
    "twoSuccessor": 17,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 52,
    "BeginPhi": 0,
    "BranchCount": 49,
    "returnInt": 3,
    "CriticalCount": 8,
    "NumEdges": 66,
    "const32Bit": 58,
    "const64Bit": 42,
    "numConstZeroes": 37,
    "numConstOnes": 24,
    "UncondBranches": 32,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 14,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 48,
    "NumBitCastInst": 14,
    "NumBrInst": 49,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 17,
    "NumLShrInst": 0,
    "NumLoadInst": 57,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 22,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 28,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 52,
    "TotalInsts": 263,
    "TotalMemInst": 137,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 101
  },
  "baseline_oz_instcount": 183,
  "knowledge_base_entry": [
    "--globaldce",
    "--mergefunc",
    "--mem2reg",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--elim-avail-extern",
    "--mergefunc",
    "--aggressive-instcombine",
    "--reassociate",
    "--dce",
    "--inline",
    "--newgvn",
    "--dse",
    "--load-store-vectorizer",
    "--mldst-motion",
    "--jump-threading",
    "--loop-instsimplify",
    "--sroa",
    "--indvars",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--loop-reroll",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--indvars",
    "--early-cse",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--prune-eh",
    "--instcombine",
    "--dce",
    "--loop-instsimplify",
    "--lower-expect",
    "--loop-simplifycfg",
    "--mem2reg",
    "--lower-constant-intrinsics",
    "--sroa",
    "--early-cse-memssa",
    "--indvars",
    "--gvn",
    "--dce",
    "--licm",
    "--instcombine",
    "--gvn",
    "--flattencfg",
    "--globalopt",
    "--loop-instsimplify",
    "--sroa",
    "--indvars",
    "--simplifycfg",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--instcombine",
          "--loweratomic",
          "--loop-load-elim",
          "--mergeicmps",
          "--lowerinvoke",
          "--constmerge",
          "--rewrite-statepoints-for-gc",
          "--ipsccp",
          "--mem2reg",
          "--reassociate",
          "--loop-data-prefetch",
          "--aggressive-instcombine",
          "--licm",
          "--strip-debug-declare",
          "--irce",
          "--insert-gcov-profiling",
          "--add-discriminators",
          "--gvn",
          "--always-inline",
          "--indvars",
          "--lower-expect",
          "--jump-threading",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+16.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--instcombine",
      "--loweratomic",
      "--loop-load-elim",
      "--mergeicmps",
      "--lowerinvoke",
      "--constmerge",
      "--rewrite-statepoints-for-gc",
      "--ipsccp",
      "--mem2reg",
      "--reassociate",
      "--loop-data-prefetch",
      "--aggressive-instcombine",
      "--licm",
      "--strip-debug-declare",
      "--irce",
      "--insert-gcov-profiling",
      "--add-discriminators",
      "--gvn",
      "--always-inline",
      "--indvars",
      "--lower-expect",
      "--jump-threading",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+16.4%"
  }
}