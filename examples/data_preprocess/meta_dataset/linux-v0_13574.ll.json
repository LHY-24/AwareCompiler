{
  "program_id": "linux-v0_13574.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 58,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 22,
    "oneSuccessor": 56,
    "twoPred": 26,
    "twoPredOneSuc": 18,
    "twoEach": 5,
    "twoSuccessor": 30,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 98,
    "BeginPhi": 1,
    "BranchCount": 86,
    "returnInt": 15,
    "CriticalCount": 31,
    "NumEdges": 127,
    "const32Bit": 160,
    "const64Bit": 16,
    "numConstZeroes": 64,
    "numConstOnes": 66,
    "UncondBranches": 56,
    "binaryConstArg": 67,
    "NumAShrInst": 1,
    "NumAddInst": 5,
    "NumAllocaInst": 28,
    "NumAndInst": 33,
    "BlockMid": 4,
    "BlockLow": 95,
    "NumBitCastInst": 5,
    "NumBrInst": 86,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 39,
    "NumLShrInst": 8,
    "NumLoadInst": 93,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 1,
    "NumRetInst": 11,
    "NumSExtInst": 16,
    "NumSelectInst": 1,
    "NumShlInst": 5,
    "NumStoreInst": 57,
    "NumSubInst": 1,
    "NumTruncInst": 11,
    "NumXorInst": 16,
    "NumZExtInst": 35,
    "TotalBlocks": 99,
    "TotalInsts": 526,
    "TotalMemInst": 245,
    "TotalFuncs": 25,
    "ArgsPhi": 2,
    "testUnary": 188
  },
  "baseline_oz_instcount": 526,
  "knowledge_base_entry": [
    "--loop-sink",
    "--early-cse-memssa",
    "--bdce",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--globalopt",
    "--reassociate",
    "--slsr",
    "--load-store-vectorizer",
    "--loop-fusion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--load-store-vectorizer",
          "--lower-constant-intrinsics",
          "--coro-elide",
          "--rpo-functionattrs",
          "--globalsplit",
          "--ipsccp",
          "--aggressive-instcombine",
          "--lower-expect",
          "--hotcoldsplit",
          "--loop-data-prefetch",
          "--partially-inline-libcalls",
          "--speculative-execution",
          "--inferattrs",
          "--gvn",
          "--early-cse",
          "--functionattrs",
          "--inline",
          "--loop-versioning",
          "--loop-simplifycfg",
          "--elim-avail-extern",
          "--loop-sink",
          "--reassociate",
          "--scalarizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--load-store-vectorizer",
      "--lower-constant-intrinsics",
      "--coro-elide",
      "--rpo-functionattrs",
      "--globalsplit",
      "--ipsccp",
      "--aggressive-instcombine",
      "--lower-expect",
      "--hotcoldsplit",
      "--loop-data-prefetch",
      "--partially-inline-libcalls",
      "--speculative-execution",
      "--inferattrs",
      "--gvn",
      "--early-cse",
      "--functionattrs",
      "--inline",
      "--loop-versioning",
      "--loop-simplifycfg",
      "--elim-avail-extern",
      "--loop-sink",
      "--reassociate",
      "--scalarizer"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}