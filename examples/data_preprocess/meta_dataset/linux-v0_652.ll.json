{
  "program_id": "linux-v0_652.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 60,
    "onePredOneSuc": 51,
    "onePredTwoSuc": 7,
    "oneSuccessor": 55,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 15,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 86,
    "BeginPhi": 0,
    "BranchCount": 70,
    "returnInt": 9,
    "CriticalCount": 2,
    "NumEdges": 100,
    "const32Bit": 138,
    "const64Bit": 9,
    "numConstZeroes": 68,
    "numConstOnes": 66,
    "UncondBranches": 55,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 51,
    "NumAndInst": 1,
    "BlockMid": 5,
    "BlockLow": 81,
    "NumBitCastInst": 43,
    "NumBrInst": 70,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 133,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 77,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 86,
    "TotalInsts": 485,
    "TotalMemInst": 331,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 240
  },
  "baseline_oz_instcount": 484,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--early-cse",
    "--mem2reg",
    "--inline",
    "--ipsccp",
    "--instsimplify",
    "--dce",
    "--lower-expect",
    "--dce",
    "--gvn-hoist",
    "--dse",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipsccp",
          "--barrier",
          "--lower-widenable-condition",
          "--mergereturn",
          "--pgo-memop-opt",
          "--consthoist",
          "--loop-data-prefetch",
          "--load-store-vectorizer",
          "--cross-dso-cfi",
          "--lowerinvoke",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipsccp",
      "--barrier",
      "--lower-widenable-condition",
      "--mergereturn",
      "--pgo-memop-opt",
      "--consthoist",
      "--loop-data-prefetch",
      "--load-store-vectorizer",
      "--cross-dso-cfi",
      "--lowerinvoke",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}