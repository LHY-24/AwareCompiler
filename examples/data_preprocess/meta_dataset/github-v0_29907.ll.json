{
  "program_id": "github-v0_29907.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 1,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 18,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 19,
    "const32Bit": 30,
    "const64Bit": 18,
    "numConstZeroes": 23,
    "numConstOnes": 20,
    "UncondBranches": 9,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 14,
    "NumBitCastInst": 0,
    "NumBrInst": 14,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 13,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 23,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 18,
    "TotalInsts": 117,
    "TotalMemInst": 71,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 50
  },
  "baseline_oz_instcount": 117,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--loweratomic",
    "--globalopt",
    "--gvn",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--mergefunc",
    "--sroa",
    "--die",
    "--jump-threading",
    "--loop-reroll",
    "--instcombine",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--instcombine",
    "--bdce",
    "--early-cse-memssa",
    "--early-cse",
    "--bdce",
    "--dse",
    "--mldst-motion",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--memcpyopt",
    "--mem2reg",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--loop-predication",
          "--libcalls-shrinkwrap",
          "--aggressive-instcombine",
          "--newgvn",
          "--globaldce",
          "--partial-inliner",
          "--div-rem-pairs",
          "--rewrite-statepoints-for-gc",
          "--lowerinvoke",
          "--sink",
          "--ipconstprop",
          "--early-cse-memssa",
          "--gvn",
          "--loop-rotate",
          "--attributor",
          "--globalsplit",
          "--forceattrs",
          "--consthoist",
          "--constmerge",
          "--reassociate",
          "--inject-tli-mappings",
          "--lowerswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--loop-predication",
      "--libcalls-shrinkwrap",
      "--aggressive-instcombine",
      "--newgvn",
      "--globaldce",
      "--partial-inliner",
      "--div-rem-pairs",
      "--rewrite-statepoints-for-gc",
      "--lowerinvoke",
      "--sink",
      "--ipconstprop",
      "--early-cse-memssa",
      "--gvn",
      "--loop-rotate",
      "--attributor",
      "--globalsplit",
      "--forceattrs",
      "--consthoist",
      "--constmerge",
      "--reassociate",
      "--inject-tli-mappings",
      "--lowerswitch"
    ],
    "performance_vs_Oz": "+6.0%"
  }
}