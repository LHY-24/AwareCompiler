{
  "program_id": "github-v0_45272.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 61,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 15,
    "oneSuccessor": 54,
    "twoPred": 26,
    "twoPredOneSuc": 8,
    "twoEach": 11,
    "twoSuccessor": 39,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 113,
    "BeginPhi": 0,
    "BranchCount": 93,
    "returnInt": 7,
    "CriticalCount": 23,
    "NumEdges": 132,
    "const32Bit": 327,
    "const64Bit": 16,
    "numConstZeroes": 174,
    "numConstOnes": 95,
    "UncondBranches": 54,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 22,
    "NumAllocaInst": 57,
    "NumAndInst": 0,
    "BlockMid": 11,
    "BlockLow": 102,
    "NumBitCastInst": 0,
    "NumBrInst": 93,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 121,
    "NumICmpInst": 39,
    "NumLShrInst": 0,
    "NumLoadInst": 252,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 21,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 105,
    "NumSubInst": 6,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 113,
    "TotalInsts": 771,
    "TotalMemInst": 558,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 340
  },
  "baseline_oz_instcount": 772,
  "knowledge_base_entry": [
    "--globalopt",
    "--instsimplify",
    "--ipsccp",
    "--inline",
    "--simplifycfg",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--strip-dead-prototypes",
          "--mergereturn",
          "--sccp",
          "--loop-distribute",
          "--gvn-hoist",
          "--libcalls-shrinkwrap",
          "--slsr",
          "--hotcoldsplit",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--strip-dead-prototypes",
      "--mergereturn",
      "--sccp",
      "--loop-distribute",
      "--gvn-hoist",
      "--libcalls-shrinkwrap",
      "--slsr",
      "--hotcoldsplit",
      "--newgvn"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}