{
  "program_id": "linux-v0_1385.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 73,
    "onePredOneSuc": 61,
    "onePredTwoSuc": 9,
    "oneSuccessor": 71,
    "twoPred": 26,
    "twoPredOneSuc": 5,
    "twoEach": 16,
    "twoSuccessor": 29,
    "morePreds": 3,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 107,
    "BeginPhi": 4,
    "BranchCount": 100,
    "returnInt": 22,
    "CriticalCount": 9,
    "NumEdges": 139,
    "const32Bit": 258,
    "const64Bit": 79,
    "numConstZeroes": 152,
    "numConstOnes": 105,
    "UncondBranches": 71,
    "binaryConstArg": 61,
    "NumAShrInst": 5,
    "NumAddInst": 30,
    "NumAllocaInst": 44,
    "NumAndInst": 12,
    "BlockMid": 12,
    "BlockLow": 99,
    "NumBitCastInst": 6,
    "NumBrInst": 100,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 105,
    "NumICmpInst": 36,
    "NumLShrInst": 0,
    "NumLoadInst": 241,
    "NumMulInst": 4,
    "NumOrInst": 11,
    "NumPHIInst": 4,
    "NumRetInst": 9,
    "NumSExtInst": 32,
    "NumSelectInst": 4,
    "NumShlInst": 5,
    "NumStoreInst": 109,
    "NumSubInst": 3,
    "NumTruncInst": 23,
    "NumXorInst": 7,
    "NumZExtInst": 50,
    "TotalBlocks": 111,
    "TotalInsts": 875,
    "TotalMemInst": 531,
    "TotalFuncs": 13,
    "ArgsPhi": 8,
    "testUnary": 396
  },
  "baseline_oz_instcount": 875,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--instsimplify",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--sccp",
    "--mem2reg",
    "--lower-expect",
    "--globalopt",
    "--flattencfg",
    "--mergefunc",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--consthoist",
          "--ipconstprop",
          "--lower-matrix-intrinsics",
          "--tailcallelim",
          "--newgvn",
          "--strip-nondebug",
          "--loop-unroll",
          "--irce",
          "--loop-idiom",
          "--lower-widenable-condition",
          "--loop-unswitch",
          "--reassociate",
          "--nary-reassociate",
          "--lower-constant-intrinsics",
          "--redundant-dbg-inst-elim",
          "--inject-tli-mappings",
          "--pgo-memop-opt",
          "--lower-guard-intrinsic",
          "--libcalls-shrinkwrap",
          "--loop-fusion",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--consthoist",
      "--ipconstprop",
      "--lower-matrix-intrinsics",
      "--tailcallelim",
      "--newgvn",
      "--strip-nondebug",
      "--loop-unroll",
      "--irce",
      "--loop-idiom",
      "--lower-widenable-condition",
      "--loop-unswitch",
      "--reassociate",
      "--nary-reassociate",
      "--lower-constant-intrinsics",
      "--redundant-dbg-inst-elim",
      "--inject-tli-mappings",
      "--pgo-memop-opt",
      "--lower-guard-intrinsic",
      "--libcalls-shrinkwrap",
      "--loop-fusion",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}