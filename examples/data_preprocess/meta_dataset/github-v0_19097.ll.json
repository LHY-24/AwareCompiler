{
  "program_id": "github-v0_19097.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 31,
    "const64Bit": 41,
    "numConstZeroes": 41,
    "numConstOnes": 22,
    "UncondBranches": 13,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 20,
    "NumBitCastInst": 4,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 20,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 24,
    "TotalInsts": 159,
    "TotalMemInst": 100,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 65
  },
  "baseline_oz_instcount": 159,
  "knowledge_base_entry": [
    "--jump-threading",
    "--aggressive-instcombine",
    "--lower-expect",
    "--bdce",
    "--dse",
    "--dce",
    "--gvn",
    "--ipsccp",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rewrite-statepoints-for-gc",
          "--attributor",
          "--inline",
          "-loop-reduce",
          "--separate-const-offset-from-gep",
          "--loop-sink",
          "--elim-avail-extern",
          "--loop-predication",
          "--loop-instsimplify",
          "--correlated-propagation",
          "--argpromotion",
          "--loop-interchange",
          "--loweratomic",
          "--scalarizer",
          "--globaldce",
          "--irce",
          "--alignment-from-assumptions",
          "--constprop",
          "--loop-vectorize",
          "--licm",
          "--aggressive-instcombine",
          "--lower-constant-intrinsics",
          "--instnamer",
          "--float2int"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rewrite-statepoints-for-gc",
      "--attributor",
      "--inline",
      "-loop-reduce",
      "--separate-const-offset-from-gep",
      "--loop-sink",
      "--elim-avail-extern",
      "--loop-predication",
      "--loop-instsimplify",
      "--correlated-propagation",
      "--argpromotion",
      "--loop-interchange",
      "--loweratomic",
      "--scalarizer",
      "--globaldce",
      "--irce",
      "--alignment-from-assumptions",
      "--constprop",
      "--loop-vectorize",
      "--licm",
      "--aggressive-instcombine",
      "--lower-constant-intrinsics",
      "--instnamer",
      "--float2int"
    ],
    "performance_vs_Oz": "+3.8%"
  }
}