{
  "program_id": "linux-v0_12583.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 30,
    "onePredOneSuc": 22,
    "onePredTwoSuc": 8,
    "oneSuccessor": 30,
    "twoPred": 17,
    "twoPredOneSuc": 8,
    "twoEach": 6,
    "twoSuccessor": 17,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 51,
    "BeginPhi": 2,
    "BranchCount": 47,
    "returnInt": 15,
    "CriticalCount": 7,
    "NumEdges": 64,
    "const32Bit": 112,
    "const64Bit": 6,
    "numConstZeroes": 50,
    "numConstOnes": 43,
    "UncondBranches": 30,
    "binaryConstArg": 20,
    "NumAShrInst": 1,
    "NumAddInst": 6,
    "NumAllocaInst": 23,
    "NumAndInst": 7,
    "BlockMid": 4,
    "BlockLow": 49,
    "NumBitCastInst": 17,
    "NumBrInst": 47,
    "NumCallInst": 17,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 89,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 2,
    "NumRetInst": 6,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 45,
    "NumSubInst": 4,
    "NumTruncInst": 7,
    "NumXorInst": 2,
    "NumZExtInst": 17,
    "TotalBlocks": 53,
    "TotalInsts": 347,
    "TotalMemInst": 206,
    "TotalFuncs": 8,
    "ArgsPhi": 4,
    "testUnary": 154
  },
  "baseline_oz_instcount": 347,
  "knowledge_base_entry": [
    "--early-cse",
    "--adce",
    "--ipsccp",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--mem2reg",
    "--lower-expect",
    "--instcombine",
    "--elim-avail-extern",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--die",
          "--name-anon-globals",
          "--libcalls-shrinkwrap",
          "--separate-const-offset-from-gep",
          "--guard-widening",
          "--aggressive-instcombine",
          "--mldst-motion",
          "--strip-debug-declare",
          "--sccp",
          "--loop-simplify",
          "--canonicalize-aliases",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--die",
      "--name-anon-globals",
      "--libcalls-shrinkwrap",
      "--separate-const-offset-from-gep",
      "--guard-widening",
      "--aggressive-instcombine",
      "--mldst-motion",
      "--strip-debug-declare",
      "--sccp",
      "--loop-simplify",
      "--canonicalize-aliases",
      "--globaldce"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}