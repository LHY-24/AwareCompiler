{
  "program_id": "poj104-v1_44_823.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 2,
    "oneSuccessor": 7,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 0,
    "BranchCount": 11,
    "returnInt": 4,
    "CriticalCount": 3,
    "NumEdges": 15,
    "const32Bit": 24,
    "const64Bit": 10,
    "numConstZeroes": 8,
    "numConstOnes": 12,
    "UncondBranches": 7,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 15,
    "NumBitCastInst": 10,
    "NumBrInst": 11,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 14,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 16,
    "TotalInsts": 94,
    "TotalMemInst": 55,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 35
  },
  "baseline_oz_instcount": 53,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--ipsccp",
    "--newgvn",
    "-loop-reduce",
    "--early-cse-memssa",
    "--loop-rotate",
    "--instcombine",
    "--mem2reg",
    "--instsimplify",
    "--prune-eh",
    "--jump-threading",
    "--licm",
    "--instcombine",
    "--mldst-motion",
    "--simplifycfg",
    "--globalopt",
    "--mem2reg",
    "--dse",
    "--sccp",
    "--globalopt",
    "--newgvn",
    "--loop-deletion",
    "--mem2reg",
    "--loop-rotate",
    "--instcombine",
    "--memcpyopt",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipconstprop",
          "--pgo-memop-opt",
          "--bdce",
          "--insert-gcov-profiling",
          "--licm",
          "--instsimplify",
          "--callsite-splitting",
          "--functionattrs",
          "--globaldce",
          "--loop-simplifycfg",
          "--forceattrs",
          "--instcombine",
          "--sroa",
          "--sccp",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+13.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipconstprop",
      "--pgo-memop-opt",
      "--bdce",
      "--insert-gcov-profiling",
      "--licm",
      "--instsimplify",
      "--callsite-splitting",
      "--functionattrs",
      "--globaldce",
      "--loop-simplifycfg",
      "--forceattrs",
      "--instcombine",
      "--sroa",
      "--sccp",
      "--early-cse"
    ],
    "performance_vs_Oz": "+13.2%"
  }
}