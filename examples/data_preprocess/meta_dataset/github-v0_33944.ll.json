{
  "program_id": "github-v0_33944.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 46,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 15,
    "oneSuccessor": 40,
    "twoPred": 14,
    "twoPredOneSuc": 7,
    "twoEach": 4,
    "twoSuccessor": 24,
    "morePreds": 4,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 77,
    "BeginPhi": 1,
    "BranchCount": 64,
    "returnInt": 8,
    "CriticalCount": 12,
    "NumEdges": 88,
    "const32Bit": 285,
    "const64Bit": 25,
    "numConstZeroes": 187,
    "numConstOnes": 115,
    "UncondBranches": 40,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 56,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 70,
    "NumBitCastInst": 75,
    "NumBrInst": 64,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 106,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 113,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 85,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 78,
    "TotalInsts": 627,
    "TotalMemInst": 404,
    "TotalFuncs": 26,
    "ArgsPhi": 2,
    "testUnary": 277
  },
  "baseline_oz_instcount": 598,
  "knowledge_base_entry": [
    "--adce",
    "--reassociate",
    "--mem2reg",
    "--load-store-vectorizer",
    "--inline",
    "--sccp",
    "--lower-expect",
    "--simplifycfg",
    "--sroa",
    "--indvars",
    "--correlated-propagation",
    "--gvn",
    "--ipsccp",
    "--aggressive-instcombine",
    "--ipsccp",
    "--jump-threading",
    "--aggressive-instcombine",
    "--instsimplify",
    "--load-store-vectorizer",
    "--inline",
    "--sccp",
    "--simplifycfg",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--ipsccp",
    "--mem2reg",
    "--loop-deletion",
    "--early-cse-memssa",
    "--mem2reg",
    "--globalopt",
    "--loop-instsimplify",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergereturn",
          "--gvn-hoist",
          "--memcpyopt",
          "--adce",
          "--aggressive-instcombine",
          "--reassociate",
          "--tailcallelim",
          "--die",
          "--rewrite-statepoints-for-gc",
          "--slsr",
          "--functionattrs",
          "--elim-avail-extern",
          "--loop-vectorize",
          "--newgvn",
          "--argpromotion",
          "--lower-constant-intrinsics",
          "--lowerinvoke",
          "--prune-eh",
          "--always-inline",
          "--globalopt",
          "--loop-interchange",
          "--strip",
          "--ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergereturn",
      "--gvn-hoist",
      "--memcpyopt",
      "--adce",
      "--aggressive-instcombine",
      "--reassociate",
      "--tailcallelim",
      "--die",
      "--rewrite-statepoints-for-gc",
      "--slsr",
      "--functionattrs",
      "--elim-avail-extern",
      "--loop-vectorize",
      "--newgvn",
      "--argpromotion",
      "--lower-constant-intrinsics",
      "--lowerinvoke",
      "--prune-eh",
      "--always-inline",
      "--globalopt",
      "--loop-interchange",
      "--strip",
      "--ee-instrument"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}