{
  "program_id": "github-v0_23271.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 37,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 6,
    "oneSuccessor": 36,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 7,
    "twoSuccessor": 15,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 63,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 5,
    "CriticalCount": 5,
    "NumEdges": 73,
    "const32Bit": 96,
    "const64Bit": 5,
    "numConstZeroes": 31,
    "numConstOnes": 67,
    "UncondBranches": 36,
    "binaryConstArg": 24,
    "NumAShrInst": 2,
    "NumAddInst": 16,
    "NumAllocaInst": 46,
    "NumAndInst": 2,
    "BlockMid": 9,
    "BlockLow": 54,
    "NumBitCastInst": 6,
    "NumBrInst": 51,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 15,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 151,
    "NumMulInst": 17,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 88,
    "NumSubInst": 4,
    "NumTruncInst": 10,
    "NumXorInst": 0,
    "NumZExtInst": 48,
    "TotalBlocks": 63,
    "TotalInsts": 525,
    "TotalMemInst": 337,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 266
  },
  "baseline_oz_instcount": 525,
  "knowledge_base_entry": [
    "--die",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--jump-threading",
    "--die",
    "--loop-simplifycfg",
    "--loop-rotate",
    "--gvn",
    "--aggressive-instcombine",
    "--dce",
    "--dse",
    "--loop-instsimplify",
    "--bdce",
    "--licm",
    "--mem2reg",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--adce",
    "--mergefunc",
    "--aggressive-instcombine",
    "--dce",
    "--newgvn",
    "--memcpyopt",
    "--instcombine",
    "--early-cse-memssa",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--bdce",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ee-instrument",
          "--redundant-dbg-inst-elim",
          "--dse",
          "--jump-threading",
          "--adce",
          "--infer-address-spaces",
          "--canonicalize-aliases",
          "--loop-rotate",
          "--strip",
          "--loop-simplify",
          "--separate-const-offset-from-gep",
          "--sancov",
          "--coro-early",
          "--strip-debug-declare",
          "--simple-loop-unswitch",
          "--loweratomic",
          "--hotcoldsplit",
          "--mldst-motion",
          "--add-discriminators",
          "--prune-eh",
          "--lower-widenable-condition",
          "--ipsccp",
          "--aggressive-instcombine",
          "--barrier",
          "--licm",
          "--tailcallelim",
          "--forceattrs",
          "--early-cse-memssa",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ee-instrument",
      "--redundant-dbg-inst-elim",
      "--dse",
      "--jump-threading",
      "--adce",
      "--infer-address-spaces",
      "--canonicalize-aliases",
      "--loop-rotate",
      "--strip",
      "--loop-simplify",
      "--separate-const-offset-from-gep",
      "--sancov",
      "--coro-early",
      "--strip-debug-declare",
      "--simple-loop-unswitch",
      "--loweratomic",
      "--hotcoldsplit",
      "--mldst-motion",
      "--add-discriminators",
      "--prune-eh",
      "--lower-widenable-condition",
      "--ipsccp",
      "--aggressive-instcombine",
      "--barrier",
      "--licm",
      "--tailcallelim",
      "--forceattrs",
      "--early-cse-memssa",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}