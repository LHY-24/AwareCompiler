{
  "program_id": "poj104-v1_44_982.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 1,
    "oneSuccessor": 13,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 6,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 6,
    "CriticalCount": 3,
    "NumEdges": 27,
    "const32Bit": 27,
    "const64Bit": 20,
    "numConstZeroes": 23,
    "numConstOnes": 9,
    "UncondBranches": 13,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 20,
    "NumBitCastInst": 6,
    "NumBrInst": 20,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 15,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 23,
    "TotalInsts": 142,
    "TotalMemInst": 82,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 58
  },
  "baseline_oz_instcount": 72,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--instcombine",
    "--sroa",
    "--lower-expect",
    "--elim-avail-extern",
    "--gvn-hoist",
    "--correlated-propagation",
    "--jump-threading",
    "--loop-reroll",
    "--indvars",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--instcombine",
    "--sroa",
    "--flattencfg",
    "--sroa",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--inline",
    "--bdce",
    "--correlated-propagation",
    "--dse",
    "--dce",
    "--loop-instsimplify",
    "--early-cse-memssa",
    "--simplifycfg",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-expect",
          "--sroa",
          "--indvars",
          "--loop-instsimplify",
          "--loop-unswitch",
          "--jump-threading",
          "--mergefunc",
          "--ipconstprop",
          "--consthoist",
          "--simple-loop-unswitch",
          "--attributor",
          "--lowerswitch",
          "--mldst-motion",
          "--partially-inline-libcalls",
          "--memcpyopt",
          "--loop-interchange",
          "--die",
          "--scalarizer",
          "--partial-inliner",
          "--dce",
          "--early-cse-memssa",
          "--functionattrs",
          "--alignment-from-assumptions"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-expect",
      "--sroa",
      "--indvars",
      "--loop-instsimplify",
      "--loop-unswitch",
      "--jump-threading",
      "--mergefunc",
      "--ipconstprop",
      "--consthoist",
      "--simple-loop-unswitch",
      "--attributor",
      "--lowerswitch",
      "--mldst-motion",
      "--partially-inline-libcalls",
      "--memcpyopt",
      "--loop-interchange",
      "--die",
      "--scalarizer",
      "--partial-inliner",
      "--dce",
      "--early-cse-memssa",
      "--functionattrs",
      "--alignment-from-assumptions"
    ],
    "performance_vs_Oz": "+8.3%"
  }
}