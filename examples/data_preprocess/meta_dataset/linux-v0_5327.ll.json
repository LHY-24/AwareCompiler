{
  "program_id": "linux-v0_5327.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 17,
    "onePred": 70,
    "onePredOneSuc": 49,
    "onePredTwoSuc": 21,
    "oneSuccessor": 66,
    "twoPred": 40,
    "twoPredOneSuc": 13,
    "twoEach": 21,
    "twoSuccessor": 48,
    "morePreds": 4,
    "BB03Phi": 17,
    "BBHiPhi": 0,
    "BBNoPhi": 103,
    "BeginPhi": 17,
    "BranchCount": 114,
    "returnInt": 3,
    "CriticalCount": 27,
    "NumEdges": 162,
    "const32Bit": 299,
    "const64Bit": 13,
    "numConstZeroes": 120,
    "numConstOnes": 76,
    "UncondBranches": 66,
    "binaryConstArg": 39,
    "NumAShrInst": 0,
    "NumAddInst": 15,
    "NumAllocaInst": 51,
    "NumAndInst": 12,
    "BlockMid": 7,
    "BlockLow": 113,
    "NumBitCastInst": 3,
    "NumBrInst": 114,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 93,
    "NumICmpInst": 47,
    "NumLShrInst": 0,
    "NumLoadInst": 248,
    "NumMulInst": 8,
    "NumOrInst": 0,
    "NumPHIInst": 17,
    "NumRetInst": 6,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 83,
    "NumSubInst": 12,
    "NumTruncInst": 22,
    "NumXorInst": 0,
    "NumZExtInst": 91,
    "TotalBlocks": 120,
    "TotalInsts": 842,
    "TotalMemInst": 485,
    "TotalFuncs": 8,
    "ArgsPhi": 34,
    "testUnary": 415
  },
  "baseline_oz_instcount": 842,
  "knowledge_base_entry": [
    "--inferattrs",
    "--instcombine",
    "--prune-eh",
    "--lower-expect",
    "--mergefunc",
    "--aggressive-instcombine",
    "--dce",
    "--inline",
    "--load-store-vectorizer",
    "--die",
    "--gvn",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "--loop-sink",
          "--name-anon-globals",
          "--lowerswitch",
          "--aggressive-instcombine",
          "--gvn-hoist",
          "--consthoist",
          "--load-store-vectorizer",
          "--float2int",
          "--loweratomic",
          "--ipsccp",
          "--loop-deletion",
          "--argpromotion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "--loop-sink",
      "--name-anon-globals",
      "--lowerswitch",
      "--aggressive-instcombine",
      "--gvn-hoist",
      "--consthoist",
      "--load-store-vectorizer",
      "--float2int",
      "--loweratomic",
      "--ipsccp",
      "--loop-deletion",
      "--argpromotion"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}