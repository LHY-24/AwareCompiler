{
  "program_id": "github-v0_49701.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 98,
    "onePredOneSuc": 71,
    "onePredTwoSuc": 25,
    "oneSuccessor": 88,
    "twoPred": 38,
    "twoPredOneSuc": 9,
    "twoEach": 27,
    "twoSuccessor": 54,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 147,
    "BeginPhi": 1,
    "BranchCount": 142,
    "returnInt": 45,
    "CriticalCount": 24,
    "NumEdges": 196,
    "const32Bit": 182,
    "const64Bit": 26,
    "numConstZeroes": 104,
    "numConstOnes": 75,
    "UncondBranches": 88,
    "binaryConstArg": 29,
    "NumAShrInst": 0,
    "NumAddInst": 17,
    "NumAllocaInst": 44,
    "NumAndInst": 10,
    "BlockMid": 8,
    "BlockLow": 140,
    "NumBitCastInst": 0,
    "NumBrInst": 142,
    "NumCallInst": 71,
    "NumGetElementPtrInst": 80,
    "NumICmpInst": 54,
    "NumLShrInst": 0,
    "NumLoadInst": 256,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 6,
    "NumSExtInst": 57,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 91,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 10,
    "TotalBlocks": 148,
    "TotalInsts": 846,
    "TotalMemInst": 542,
    "TotalFuncs": 20,
    "ArgsPhi": 2,
    "testUnary": 371
  },
  "baseline_oz_instcount": 854,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--newgvn",
    "--early-cse-memssa",
    "--instsimplify",
    "--lower-expect",
    "--dse",
    "--slp-vectorizer",
    "--dce",
    "--sroa",
    "--simplifycfg",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simplifycfg",
          "--add-discriminators",
          "--inline",
          "--mldst-motion",
          "--scalarizer",
          "--elim-avail-extern",
          "--sccp",
          "--prune-eh",
          "--argpromotion",
          "--strip-dead-prototypes",
          "--slsr"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simplifycfg",
      "--add-discriminators",
      "--inline",
      "--mldst-motion",
      "--scalarizer",
      "--elim-avail-extern",
      "--sccp",
      "--prune-eh",
      "--argpromotion",
      "--strip-dead-prototypes",
      "--slsr"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}