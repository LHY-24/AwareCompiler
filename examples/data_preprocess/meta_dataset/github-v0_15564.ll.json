{
  "program_id": "github-v0_15564.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 0,
    "oneSuccessor": 6,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 12,
    "const32Bit": 20,
    "const64Bit": 0,
    "numConstZeroes": 5,
    "numConstOnes": 13,
    "UncondBranches": 6,
    "binaryConstArg": 43,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 4,
    "NumAndInst": 20,
    "BlockMid": 1,
    "BlockLow": 12,
    "NumBitCastInst": 0,
    "NumBrInst": 9,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 3,
    "NumLShrInst": 2,
    "NumLoadInst": 38,
    "NumMulInst": 0,
    "NumOrInst": 19,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 43,
    "NumSubInst": 0,
    "NumTruncInst": 12,
    "NumXorInst": 1,
    "NumZExtInst": 11,
    "TotalBlocks": 13,
    "TotalInsts": 172,
    "TotalMemInst": 88,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 67
  },
  "baseline_oz_instcount": 172,
  "knowledge_base_entry": [
    "--reg2mem",
    "--gvn",
    "--bdce",
    "--inline",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--mem2reg",
    "--lower-expect",
    "--correlated-propagation",
    "--reassociate",
    "--elim-avail-extern",
    "--ipsccp",
    "--globalopt",
    "--loop-deletion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--scalarizer",
          "--break-crit-edges",
          "--mergefunc",
          "--inline",
          "--callsite-splitting",
          "--loop-data-prefetch",
          "--rpo-functionattrs",
          "--aggressive-instcombine",
          "-loop-reduce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+11.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--scalarizer",
      "--break-crit-edges",
      "--mergefunc",
      "--inline",
      "--callsite-splitting",
      "--loop-data-prefetch",
      "--rpo-functionattrs",
      "--aggressive-instcombine",
      "-loop-reduce"
    ],
    "performance_vs_Oz": "+11.6%"
  }
}