{
  "program_id": "github-v0_24904.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 34,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 11,
    "oneSuccessor": 33,
    "twoPred": 21,
    "twoPredOneSuc": 8,
    "twoEach": 5,
    "twoSuccessor": 23,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 65,
    "BeginPhi": 3,
    "BranchCount": 56,
    "returnInt": 6,
    "CriticalCount": 14,
    "NumEdges": 79,
    "const32Bit": 160,
    "const64Bit": 3,
    "numConstZeroes": 86,
    "numConstOnes": 58,
    "UncondBranches": 33,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 38,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 59,
    "NumBitCastInst": 3,
    "NumBrInst": 56,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 155,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 3,
    "NumRetInst": 12,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 73,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 21,
    "TotalBlocks": 68,
    "TotalInsts": 480,
    "TotalMemInst": 350,
    "TotalFuncs": 24,
    "ArgsPhi": 6,
    "testUnary": 220
  },
  "baseline_oz_instcount": 480,
  "knowledge_base_entry": [
    "--load-store-vectorizer",
    "--memcpyopt",
    "--gvn",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--loweratomic",
    "--ipsccp",
    "--gvn-hoist",
    "--loop-deletion",
    "--jump-threading",
    "--bdce",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--instcombine",
    "--bdce",
    "--elim-avail-extern",
    "--mldst-motion",
    "--licm",
    "--mergefunc",
    "--loop-simplifycfg",
    "--correlated-propagation",
    "--gvn",
    "--die",
    "--slp-vectorizer",
    "--adce",
    "--loop-instsimplify",
    "--sroa",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--sccp",
    "--lower-expect",
    "--aggressive-instcombine",
    "--instcombine",
    "--dse",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--bdce",
    "--early-cse",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--loop-unswitch",
          "--cross-dso-cfi",
          "--inject-tli-mappings",
          "--lower-guard-intrinsic",
          "--post-inline-ee-instrument",
          "--irce",
          "--infer-address-spaces",
          "--loop-unroll",
          "--strip-dead-prototypes",
          "--pgo-memop-opt",
          "--loop-vectorize",
          "--loop-distribute",
          "--loop-idiom",
          "--mergeicmps",
          "--canonicalize-aliases",
          "--aggressive-instcombine",
          "--loop-instsimplify",
          "--instnamer",
          "--sccp",
          "--early-cse-memssa",
          "--slp-vectorizer",
          "--lower-matrix-intrinsics",
          "--mldst-motion",
          "--loop-predication"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--loop-unswitch",
      "--cross-dso-cfi",
      "--inject-tli-mappings",
      "--lower-guard-intrinsic",
      "--post-inline-ee-instrument",
      "--irce",
      "--infer-address-spaces",
      "--loop-unroll",
      "--strip-dead-prototypes",
      "--pgo-memop-opt",
      "--loop-vectorize",
      "--loop-distribute",
      "--loop-idiom",
      "--mergeicmps",
      "--canonicalize-aliases",
      "--aggressive-instcombine",
      "--loop-instsimplify",
      "--instnamer",
      "--sccp",
      "--early-cse-memssa",
      "--slp-vectorizer",
      "--lower-matrix-intrinsics",
      "--mldst-motion",
      "--loop-predication"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}