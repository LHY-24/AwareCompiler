{
  "program_id": "linux-v0_12005.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 1,
    "oneSuccessor": 24,
    "twoPred": 9,
    "twoPredOneSuc": 0,
    "twoEach": 7,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 42,
    "const32Bit": 91,
    "const64Bit": 10,
    "numConstZeroes": 41,
    "numConstOnes": 25,
    "UncondBranches": 24,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 15,
    "NumAndInst": 1,
    "BlockMid": 2,
    "BlockLow": 35,
    "NumBitCastInst": 1,
    "NumBrInst": 33,
    "NumCallInst": 10,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 74,
    "NumMulInst": 8,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 15,
    "TotalBlocks": 37,
    "TotalInsts": 244,
    "TotalMemInst": 166,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 105
  },
  "baseline_oz_instcount": 245,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--mem2reg",
    "--bdce",
    "--early-cse-memssa",
    "--newgvn",
    "--mem2reg",
    "--instsimplify",
    "--newgvn",
    "--globalopt",
    "--sccp",
    "--elim-avail-extern",
    "--newgvn",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--infer-address-spaces",
          "--mldst-motion",
          "--mergefunc",
          "--div-rem-pairs",
          "--callsite-splitting",
          "--bdce",
          "--strip-debug-declare",
          "--load-store-vectorizer",
          "--simplifycfg",
          "--loop-unroll-and-jam",
          "--correlated-propagation",
          "--ipsccp",
          "--strip-nondebug"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--infer-address-spaces",
      "--mldst-motion",
      "--mergefunc",
      "--div-rem-pairs",
      "--callsite-splitting",
      "--bdce",
      "--strip-debug-declare",
      "--load-store-vectorizer",
      "--simplifycfg",
      "--loop-unroll-and-jam",
      "--correlated-propagation",
      "--ipsccp",
      "--strip-nondebug"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}