{
  "program_id": "github-v0_16896.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 21,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 5,
    "oneSuccessor": 21,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 32,
    "BeginPhi": 0,
    "BranchCount": 30,
    "returnInt": 0,
    "CriticalCount": 3,
    "NumEdges": 39,
    "const32Bit": 35,
    "const64Bit": 0,
    "numConstZeroes": 11,
    "numConstOnes": 20,
    "UncondBranches": 21,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 31,
    "NumBitCastInst": 0,
    "NumBrInst": 30,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 38,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 32,
    "TotalInsts": 144,
    "TotalMemInst": 79,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 63
  },
  "baseline_oz_instcount": 145,
  "knowledge_base_entry": [
    "--mem2reg",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--simplifycfg",
    "--early-cse-memssa",
    "--mem2reg",
    "--load-store-vectorizer",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instcombine",
          "--elim-avail-extern",
          "--ipconstprop",
          "--redundant-dbg-inst-elim",
          "--slsr",
          "--canonicalize-aliases",
          "--strip-dead-prototypes",
          "--infer-address-spaces",
          "--strip",
          "--correlated-propagation",
          "--div-rem-pairs",
          "--adce",
          "--attributor",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instcombine",
      "--elim-avail-extern",
      "--ipconstprop",
      "--redundant-dbg-inst-elim",
      "--slsr",
      "--canonicalize-aliases",
      "--strip-dead-prototypes",
      "--infer-address-spaces",
      "--strip",
      "--correlated-propagation",
      "--div-rem-pairs",
      "--adce",
      "--attributor",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}