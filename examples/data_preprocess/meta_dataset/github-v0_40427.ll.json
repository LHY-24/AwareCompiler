{
  "program_id": "github-v0_40427.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 29,
    "const64Bit": 20,
    "numConstZeroes": 21,
    "numConstOnes": 20,
    "UncondBranches": 11,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 12,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 26,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 18,
    "NumSubInst": 1,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 21,
    "TotalInsts": 133,
    "TotalMemInst": 75,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 59
  },
  "baseline_oz_instcount": 133,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--early-cse",
    "--slsr",
    "--early-cse",
    "--aggressive-instcombine",
    "--jump-threading",
    "--reassociate",
    "--die",
    "--gvn",
    "--gvn-hoist",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--strip-nondebug",
          "--instsimplify",
          "--cross-dso-cfi",
          "--reg2mem",
          "--early-cse-memssa",
          "--dse",
          "--loop-deletion",
          "--loop-data-prefetch",
          "--loop-rotate",
          "--barrier",
          "--gvn-hoist",
          "--loop-versioning-licm",
          "--ipsccp",
          "--lowerinvoke",
          "--loop-fusion",
          "--inline",
          "-loop-reduce",
          "--aggressive-instcombine",
          "--separate-const-offset-from-gep",
          "--ee-instrument",
          "--div-rem-pairs",
          "--sancov",
          "--loop-sink",
          "--add-discriminators",
          "--elim-avail-extern",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--strip-nondebug",
      "--instsimplify",
      "--cross-dso-cfi",
      "--reg2mem",
      "--early-cse-memssa",
      "--dse",
      "--loop-deletion",
      "--loop-data-prefetch",
      "--loop-rotate",
      "--barrier",
      "--gvn-hoist",
      "--loop-versioning-licm",
      "--ipsccp",
      "--lowerinvoke",
      "--loop-fusion",
      "--inline",
      "-loop-reduce",
      "--aggressive-instcombine",
      "--separate-const-offset-from-gep",
      "--ee-instrument",
      "--div-rem-pairs",
      "--sancov",
      "--loop-sink",
      "--add-discriminators",
      "--elim-avail-extern",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+8.3%"
  }
}