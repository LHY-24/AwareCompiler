{
  "program_id": "linux-v0_7326.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 79,
    "onePredOneSuc": 59,
    "onePredTwoSuc": 18,
    "oneSuccessor": 65,
    "twoPred": 11,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 37,
    "morePreds": 13,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 120,
    "BeginPhi": 0,
    "BranchCount": 102,
    "returnInt": 42,
    "CriticalCount": 13,
    "NumEdges": 143,
    "const32Bit": 269,
    "const64Bit": 18,
    "numConstZeroes": 119,
    "numConstOnes": 124,
    "UncondBranches": 65,
    "binaryConstArg": 17,
    "NumAShrInst": 3,
    "NumAddInst": 0,
    "NumAllocaInst": 100,
    "NumAndInst": 6,
    "BlockMid": 14,
    "BlockLow": 106,
    "NumBitCastInst": 19,
    "NumBrInst": 102,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 33,
    "NumLShrInst": 0,
    "NumLoadInst": 185,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 147,
    "NumSubInst": 3,
    "NumTruncInst": 14,
    "NumXorInst": 0,
    "NumZExtInst": 26,
    "TotalBlocks": 120,
    "TotalInsts": 759,
    "TotalMemInst": 526,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 344
  },
  "baseline_oz_instcount": 739,
  "knowledge_base_entry": [
    "--loop-reroll",
    "--sroa",
    "--load-store-vectorizer",
    "--early-cse",
    "--slsr",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--die",
    "--ipsccp",
    "--aggressive-instcombine",
    "--prune-eh",
    "--early-cse-memssa",
    "--lower-expect",
    "--licm",
    "--lower-constant-intrinsics",
    "--bdce",
    "--inline",
    "--dse",
    "--load-store-vectorizer",
    "--jump-threading",
    "--slp-vectorizer",
    "--reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--name-anon-globals",
          "--infer-address-spaces",
          "--functionattrs",
          "--float2int",
          "--loop-fusion",
          "--lower-matrix-intrinsics",
          "--ipsccp",
          "--inject-tli-mappings",
          "--mergeicmps",
          "--strip-debug-declare",
          "--constmerge",
          "--strip-nondebug",
          "--prune-eh",
          "--lower-widenable-condition",
          "--die",
          "--partial-inliner",
          "--argpromotion",
          "--coro-split",
          "--cross-dso-cfi",
          "--reassociate",
          "--scalarizer",
          "--aggressive-instcombine",
          "--loop-data-prefetch",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--name-anon-globals",
      "--infer-address-spaces",
      "--functionattrs",
      "--float2int",
      "--loop-fusion",
      "--lower-matrix-intrinsics",
      "--ipsccp",
      "--inject-tli-mappings",
      "--mergeicmps",
      "--strip-debug-declare",
      "--constmerge",
      "--strip-nondebug",
      "--prune-eh",
      "--lower-widenable-condition",
      "--die",
      "--partial-inliner",
      "--argpromotion",
      "--coro-split",
      "--cross-dso-cfi",
      "--reassociate",
      "--scalarizer",
      "--aggressive-instcombine",
      "--loop-data-prefetch",
      "--globalopt"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}