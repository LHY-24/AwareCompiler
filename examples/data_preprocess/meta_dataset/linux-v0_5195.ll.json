{
  "program_id": "linux-v0_5195.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 62,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 18,
    "oneSuccessor": 52,
    "twoPred": 18,
    "twoPredOneSuc": 6,
    "twoEach": 4,
    "twoSuccessor": 32,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 103,
    "BeginPhi": 0,
    "BranchCount": 83,
    "returnInt": 29,
    "CriticalCount": 22,
    "NumEdges": 128,
    "const32Bit": 380,
    "const64Bit": 5,
    "numConstZeroes": 204,
    "numConstOnes": 87,
    "UncondBranches": 52,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 61,
    "NumAndInst": 6,
    "BlockMid": 17,
    "BlockLow": 86,
    "NumBitCastInst": 7,
    "NumBrInst": 83,
    "NumCallInst": 88,
    "NumGetElementPtrInst": 113,
    "NumICmpInst": 31,
    "NumLShrInst": 2,
    "NumLoadInst": 272,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 101,
    "NumSubInst": 0,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 103,
    "TotalInsts": 821,
    "TotalMemInst": 635,
    "TotalFuncs": 40,
    "ArgsPhi": 0,
    "testUnary": 364
  },
  "baseline_oz_instcount": 822,
  "knowledge_base_entry": [
    "--bdce",
    "--die",
    "--mem2reg",
    "--sccp",
    "--inline",
    "--elim-avail-extern",
    "--gvn",
    "--jump-threading",
    "--ipsccp",
    "--licm",
    "--aggressive-instcombine",
    "--sroa",
    "--early-cse-memssa",
    "--simplifycfg",
    "--mergefunc",
    "--loop-reroll"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--loop-simplifycfg",
          "--loop-load-elim",
          "--mergeicmps",
          "--loop-rotate",
          "--loop-idiom",
          "--separate-const-offset-from-gep",
          "--rpo-functionattrs",
          "--lower-matrix-intrinsics",
          "--correlated-propagation",
          "--die",
          "-loop-reduce",
          "--prune-eh",
          "--flattencfg",
          "--post-inline-ee-instrument",
          "--name-anon-globals",
          "--ee-instrument",
          "--irce",
          "--aggressive-instcombine",
          "--slp-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--loop-simplifycfg",
      "--loop-load-elim",
      "--mergeicmps",
      "--loop-rotate",
      "--loop-idiom",
      "--separate-const-offset-from-gep",
      "--rpo-functionattrs",
      "--lower-matrix-intrinsics",
      "--correlated-propagation",
      "--die",
      "-loop-reduce",
      "--prune-eh",
      "--flattencfg",
      "--post-inline-ee-instrument",
      "--name-anon-globals",
      "--ee-instrument",
      "--irce",
      "--aggressive-instcombine",
      "--slp-vectorizer"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}