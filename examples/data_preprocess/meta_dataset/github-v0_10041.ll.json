{
  "program_id": "github-v0_10041.ll",
  "autophase_features": {
    "BBNumArgsHi": 5,
    "BBNumArgsLo": 4,
    "onePred": 11,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 5,
    "oneSuccessor": 7,
    "twoPred": 7,
    "twoPredOneSuc": 0,
    "twoEach": 7,
    "twoSuccessor": 14,
    "morePreds": 3,
    "BB03Phi": 7,
    "BBHiPhi": 2,
    "BBNoPhi": 13,
    "BeginPhi": 9,
    "BranchCount": 21,
    "returnInt": 2,
    "CriticalCount": 17,
    "NumEdges": 35,
    "const32Bit": 29,
    "const64Bit": 2,
    "numConstZeroes": 9,
    "numConstOnes": 5,
    "UncondBranches": 7,
    "binaryConstArg": 26,
    "NumAShrInst": 1,
    "NumAddInst": 14,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 21,
    "NumCallInst": 39,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 13,
    "NumMulInst": 4,
    "NumOrInst": 2,
    "NumPHIInst": 26,
    "NumRetInst": 1,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 1,
    "NumSubInst": 3,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 22,
    "TotalInsts": 233,
    "TotalMemInst": 67,
    "TotalFuncs": 5,
    "ArgsPhi": 65,
    "testUnary": 50
  },
  "baseline_oz_instcount": 226,
  "knowledge_base_entry": [
    "--break-crit-edges",
    "--simplifycfg",
    "--correlated-propagation",
    "--newgvn",
    "--mergefunc",
    "--instcombine",
    "--prune-eh",
    "--jump-threading",
    "--dse",
    "--early-cse-memssa",
    "--sroa",
    "--instcombine",
    "--early-cse-memssa",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--ipsccp",
    "--newgvn",
    "--dce",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--sroa",
    "--early-cse-memssa",
    "--lower-expect",
    "--instsimplify",
    "--ipsccp",
    "--loop-deletion",
    "--early-cse",
    "--loop-instsimplify",
    "--lower-expect",
    "--globalopt",
    "--globaldce",
    "--mergefunc",
    "--mem2reg",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--simplifycfg",
    "--correlated-propagation",
    "--newgvn",
    "--mergefunc",
    "--instcombine",
    "--prune-eh",
    "--jump-threading",
    "--dse",
    "--early-cse-memssa",
    "--sroa",
    "--instcombine",
    "--early-cse-memssa",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--ipsccp",
    "--newgvn",
    "--dce",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--sroa",
    "--early-cse-memssa",
    "--lower-expect",
    "--dse",
    "--load-store-vectorizer",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-instsimplify",
          "--coro-elide",
          "--infer-address-spaces",
          "--float2int",
          "--ipsccp",
          "--coro-cleanup",
          "--constprop",
          "--ee-instrument",
          "--lower-expect",
          "--called-value-propagation",
          "--partial-inliner",
          "--strip-nondebug",
          "--constmerge",
          "--lowerinvoke",
          "--strip",
          "--strip-dead-prototypes",
          "--newgvn",
          "--slp-vectorizer",
          "--inline",
          "--lcssa",
          "--loop-simplifycfg",
          "--inferattrs",
          "--libcalls-shrinkwrap",
          "--rpo-functionattrs",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-instsimplify",
      "--coro-elide",
      "--infer-address-spaces",
      "--float2int",
      "--ipsccp",
      "--coro-cleanup",
      "--constprop",
      "--ee-instrument",
      "--lower-expect",
      "--called-value-propagation",
      "--partial-inliner",
      "--strip-nondebug",
      "--constmerge",
      "--lowerinvoke",
      "--strip",
      "--strip-dead-prototypes",
      "--newgvn",
      "--slp-vectorizer",
      "--inline",
      "--lcssa",
      "--loop-simplifycfg",
      "--inferattrs",
      "--libcalls-shrinkwrap",
      "--rpo-functionattrs",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}