{
  "program_id": "poj104-v1_57_1118.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 1,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 6,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 25,
    "BeginPhi": 0,
    "BranchCount": 22,
    "returnInt": 10,
    "CriticalCount": 3,
    "NumEdges": 29,
    "const32Bit": 24,
    "const64Bit": 23,
    "numConstZeroes": 19,
    "numConstOnes": 13,
    "UncondBranches": 15,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 6,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 23,
    "NumBitCastInst": 10,
    "NumBrInst": 22,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 10,
    "NumSubInst": 6,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 25,
    "TotalInsts": 138,
    "TotalMemInst": 73,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 54
  },
  "baseline_oz_instcount": 83,
  "knowledge_base_entry": [
    "--mem2reg",
    "--nary-reassociate",
    "--instsimplify",
    "--prune-eh",
    "--simplifycfg",
    "--instcombine",
    "--slp-vectorizer",
    "--loop-reroll",
    "--early-cse-memssa",
    "--sroa",
    "--elim-avail-extern",
    "--dce",
    "--sccp",
    "--gvn-hoist",
    "--gvn-hoist",
    "--newgvn",
    "--nary-reassociate",
    "--gvn-hoist",
    "--loop-reroll",
    "--early-cse-memssa",
    "--sroa",
    "--elim-avail-extern",
    "--dce",
    "--inline",
    "--simplifycfg",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse",
          "--loop-distribute",
          "--forceattrs",
          "--adce",
          "--newgvn",
          "--reassociate",
          "--dce",
          "--early-cse-memssa",
          "--irce",
          "--functionattrs",
          "--mem2reg",
          "--ipsccp",
          "--loop-unswitch",
          "--mergeicmps",
          "--memcpyopt",
          "--loop-predication",
          "--attributor",
          "--coro-cleanup",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse",
      "--loop-distribute",
      "--forceattrs",
      "--adce",
      "--newgvn",
      "--reassociate",
      "--dce",
      "--early-cse-memssa",
      "--irce",
      "--functionattrs",
      "--mem2reg",
      "--ipsccp",
      "--loop-unswitch",
      "--mergeicmps",
      "--memcpyopt",
      "--loop-predication",
      "--attributor",
      "--coro-cleanup",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+2.4%"
  }
}