{
  "program_id": "linux-v0_13531.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 4,
    "oneSuccessor": 21,
    "twoPred": 7,
    "twoPredOneSuc": 1,
    "twoEach": 5,
    "twoSuccessor": 12,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 49,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 20,
    "CriticalCount": 4,
    "NumEdges": 45,
    "const32Bit": 204,
    "const64Bit": 3,
    "numConstZeroes": 83,
    "numConstOnes": 61,
    "UncondBranches": 21,
    "binaryConstArg": 24,
    "NumAShrInst": 1,
    "NumAddInst": 6,
    "NumAllocaInst": 38,
    "NumAndInst": 10,
    "BlockMid": 6,
    "BlockLow": 43,
    "NumBitCastInst": 9,
    "NumBrInst": 33,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 64,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 120,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 70,
    "NumSubInst": 2,
    "NumTruncInst": 18,
    "NumXorInst": 2,
    "NumZExtInst": 23,
    "TotalBlocks": 49,
    "TotalInsts": 479,
    "TotalMemInst": 333,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 215
  },
  "baseline_oz_instcount": 479,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--dse",
    "--newgvn",
    "--adce",
    "--aggressive-instcombine",
    "--early-cse",
    "--flattencfg",
    "--globalopt",
    "--lower-expect",
    "--simplifycfg",
    "--licm",
    "--instcombine",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--loop-deletion",
          "--loop-unroll-and-jam",
          "--lower-constant-intrinsics",
          "-loop-reduce",
          "--globaldce",
          "--aggressive-instcombine",
          "--loop-versioning-licm",
          "--inject-tli-mappings",
          "--mem2reg",
          "--early-cse",
          "--div-rem-pairs",
          "--barrier",
          "--functionattrs",
          "--hotcoldsplit",
          "--strip-debug-declare",
          "--canonicalize-aliases",
          "--licm",
          "--dce",
          "--strip",
          "--constmerge",
          "--loop-fusion",
          "--separate-const-offset-from-gep",
          "--partially-inline-libcalls",
          "--redundant-dbg-inst-elim",
          "--coro-early",
          "--guard-widening"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--loop-deletion",
      "--loop-unroll-and-jam",
      "--lower-constant-intrinsics",
      "-loop-reduce",
      "--globaldce",
      "--aggressive-instcombine",
      "--loop-versioning-licm",
      "--inject-tli-mappings",
      "--mem2reg",
      "--early-cse",
      "--div-rem-pairs",
      "--barrier",
      "--functionattrs",
      "--hotcoldsplit",
      "--strip-debug-declare",
      "--canonicalize-aliases",
      "--licm",
      "--dce",
      "--strip",
      "--constmerge",
      "--loop-fusion",
      "--separate-const-offset-from-gep",
      "--partially-inline-libcalls",
      "--redundant-dbg-inst-elim",
      "--coro-early",
      "--guard-widening"
    ],
    "performance_vs_Oz": "+5.6%"
  }
}