{
  "program_id": "github-v0_50657.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 1,
    "onePred": 20,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 4,
    "oneSuccessor": 19,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 0,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 45,
    "BeginPhi": 2,
    "BranchCount": 31,
    "returnInt": 8,
    "CriticalCount": 4,
    "NumEdges": 43,
    "const32Bit": 69,
    "const64Bit": 48,
    "numConstZeroes": 18,
    "numConstOnes": 39,
    "UncondBranches": 19,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 20,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 38,
    "NumBitCastInst": 126,
    "NumBrInst": 31,
    "NumCallInst": 45,
    "NumGetElementPtrInst": 58,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 54,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 3,
    "NumRetInst": 16,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 1,
    "TotalBlocks": 47,
    "TotalInsts": 404,
    "TotalMemInst": 200,
    "TotalFuncs": 27,
    "ArgsPhi": 8,
    "testUnary": 207
  },
  "baseline_oz_instcount": 295,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--gvn-hoist",
    "--jump-threading",
    "--aggressive-instcombine",
    "--instsimplify",
    "--loop-simplifycfg",
    "--slp-vectorizer",
    "--mem2reg",
    "--gvn-hoist",
    "--loop-reroll",
    "-loop-reduce",
    "--newgvn",
    "--flattencfg",
    "--mem2reg",
    "--gvn",
    "--sroa",
    "--sccp",
    "--early-cse",
    "--nary-reassociate",
    "--jump-threading",
    "--inline",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--infer-address-spaces",
          "--redundant-dbg-inst-elim",
          "--partial-inliner",
          "--lowerinvoke",
          "--cross-dso-cfi",
          "--sroa",
          "--constmerge",
          "--early-cse",
          "--attributor",
          "--loweratomic",
          "--add-discriminators",
          "--pgo-memop-opt",
          "--jump-threading",
          "--always-inline",
          "--lcssa",
          "--globaldce",
          "--div-rem-pairs",
          "--slp-vectorizer",
          "--dse",
          "--gvn",
          "--loop-unswitch",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--infer-address-spaces",
      "--redundant-dbg-inst-elim",
      "--partial-inliner",
      "--lowerinvoke",
      "--cross-dso-cfi",
      "--sroa",
      "--constmerge",
      "--early-cse",
      "--attributor",
      "--loweratomic",
      "--add-discriminators",
      "--pgo-memop-opt",
      "--jump-threading",
      "--always-inline",
      "--lcssa",
      "--globaldce",
      "--div-rem-pairs",
      "--slp-vectorizer",
      "--dse",
      "--gvn",
      "--loop-unswitch",
      "--instcombine"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}