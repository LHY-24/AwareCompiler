{
  "program_id": "github-v0_49858.ll",
  "autophase_features": {
    "BBNumArgsHi": 5,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 13,
    "oneSuccessor": 11,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 4,
    "twoSuccessor": 22,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 5,
    "BBNoPhi": 29,
    "BeginPhi": 5,
    "BranchCount": 33,
    "returnInt": 1,
    "CriticalCount": 20,
    "NumEdges": 55,
    "const32Bit": 52,
    "const64Bit": 60,
    "numConstZeroes": 47,
    "numConstOnes": 22,
    "UncondBranches": 11,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 23,
    "BlockMid": 12,
    "BlockLow": 22,
    "NumBitCastInst": 0,
    "NumBrInst": 33,
    "NumCallInst": 60,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 36,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 3,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 34,
    "TotalInsts": 439,
    "TotalMemInst": 113,
    "TotalFuncs": 6,
    "ArgsPhi": 172,
    "testUnary": 43
  },
  "baseline_oz_instcount": 439,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--gvn-hoist",
    "--loop-deletion",
    "--jump-threading",
    "--slp-vectorizer",
    "--indvars",
    "--early-cse",
    "--early-cse-memssa",
    "--lower-expect",
    "--aggressive-instcombine",
    "--gvn",
    "--memcpyopt",
    "--gvn-hoist",
    "--mergefunc",
    "--gvn",
    "--jump-threading",
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--dse",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalsplit",
          "--partially-inline-libcalls",
          "--tailcallelim",
          "--strip-dead-prototypes",
          "--loop-vectorize",
          "--div-rem-pairs",
          "--strip-debug-declare",
          "--irce",
          "--functionattrs",
          "--rewrite-statepoints-for-gc",
          "--rpo-functionattrs",
          "--ipconstprop",
          "--lower-guard-intrinsic",
          "--loop-load-elim",
          "--insert-gcov-profiling",
          "--attributor",
          "--name-anon-globals",
          "--loop-deletion",
          "-loop-reduce",
          "--called-value-propagation",
          "--loop-versioning",
          "--loop-rotate",
          "--cross-dso-cfi",
          "--gvn-hoist",
          "--mergefunc",
          "--forceattrs",
          "--post-inline-ee-instrument",
          "--inline",
          "--ipsccp",
          "--constprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalsplit",
      "--partially-inline-libcalls",
      "--tailcallelim",
      "--strip-dead-prototypes",
      "--loop-vectorize",
      "--div-rem-pairs",
      "--strip-debug-declare",
      "--irce",
      "--functionattrs",
      "--rewrite-statepoints-for-gc",
      "--rpo-functionattrs",
      "--ipconstprop",
      "--lower-guard-intrinsic",
      "--loop-load-elim",
      "--insert-gcov-profiling",
      "--attributor",
      "--name-anon-globals",
      "--loop-deletion",
      "-loop-reduce",
      "--called-value-propagation",
      "--loop-versioning",
      "--loop-rotate",
      "--cross-dso-cfi",
      "--gvn-hoist",
      "--mergefunc",
      "--forceattrs",
      "--post-inline-ee-instrument",
      "--inline",
      "--ipsccp",
      "--constprop"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}