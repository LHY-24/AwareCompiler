{
  "program_id": "github-v0_48863.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 2,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 58,
    "const64Bit": 68,
    "numConstZeroes": 69,
    "numConstOnes": 36,
    "UncondBranches": 15,
    "binaryConstArg": 39,
    "NumAShrInst": 14,
    "NumAddInst": 3,
    "NumAllocaInst": 11,
    "NumAndInst": 14,
    "BlockMid": 8,
    "BlockLow": 19,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 34,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 0,
    "NumOrInst": 10,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 13,
    "NumSelectInst": 0,
    "NumShlInst": 7,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 23,
    "NumXorInst": 1,
    "NumZExtInst": 28,
    "TotalBlocks": 27,
    "TotalInsts": 265,
    "TotalMemInst": 117,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 117
  },
  "baseline_oz_instcount": 265,
  "knowledge_base_entry": [
    "--reg2mem",
    "--gvn",
    "--gvn-hoist",
    "--loop-deletion",
    "--gvn",
    "--instcombine",
    "--adce",
    "--early-cse",
    "--mergefunc",
    "--aggressive-instcombine",
    "--die",
    "--slp-vectorizer",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--lower-expect",
    "--bdce",
    "--newgvn",
    "--lower-expect",
    "--instcombine",
    "--prune-eh",
    "--reassociate",
    "--adce",
    "--lower-constant-intrinsics",
    "--gvn",
    "--lower-expect",
    "--jump-threading",
    "--sroa",
    "--sccp",
    "--early-cse",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--jump-threading",
    "--gvn",
    "--sroa",
    "--loop-rotate",
    "--instcombine",
    "--ipsccp",
    "--aggressive-instcombine",
    "--die",
    "--slp-vectorizer",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--early-cse-memssa",
    "--inline",
    "--die",
    "--sroa",
    "--newgvn",
    "--prune-eh",
    "--reassociate",
    "--adce",
    "--lower-constant-intrinsics",
    "--gvn",
    "--slp-vectorizer",
    "--bdce",
    "--simplifycfg",
    "--prune-eh",
    "--instcombine",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--early-cse",
    "--instsimplify",
    "--lower-expect",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--always-inline",
          "--lcssa",
          "--loop-data-prefetch",
          "--strip",
          "--dce",
          "--adce",
          "--gvn",
          "--loop-sink",
          "--sancov",
          "--strip-dead-prototypes",
          "--dse",
          "--aggressive-instcombine",
          "--separate-const-offset-from-gep",
          "--die",
          "--lower-expect",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--always-inline",
      "--lcssa",
      "--loop-data-prefetch",
      "--strip",
      "--dce",
      "--adce",
      "--gvn",
      "--loop-sink",
      "--sancov",
      "--strip-dead-prototypes",
      "--dse",
      "--aggressive-instcombine",
      "--separate-const-offset-from-gep",
      "--die",
      "--lower-expect",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+8.3%"
  }
}