{
  "program_id": "linux-v0_11251.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 80,
    "onePredOneSuc": 56,
    "onePredTwoSuc": 23,
    "oneSuccessor": 68,
    "twoPred": 29,
    "twoPredOneSuc": 10,
    "twoEach": 15,
    "twoSuccessor": 47,
    "morePreds": 6,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 140,
    "BeginPhi": 2,
    "BranchCount": 113,
    "returnInt": 23,
    "CriticalCount": 25,
    "NumEdges": 162,
    "const32Bit": 241,
    "const64Bit": 41,
    "numConstZeroes": 100,
    "numConstOnes": 122,
    "UncondBranches": 68,
    "binaryConstArg": 27,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 95,
    "NumAndInst": 1,
    "BlockMid": 8,
    "BlockLow": 134,
    "NumBitCastInst": 11,
    "NumBrInst": 113,
    "NumCallInst": 66,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 46,
    "NumLShrInst": 2,
    "NumLoadInst": 217,
    "NumMulInst": 1,
    "NumOrInst": 3,
    "NumPHIInst": 2,
    "NumRetInst": 27,
    "NumSExtInst": 19,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 144,
    "NumSubInst": 3,
    "NumTruncInst": 11,
    "NumXorInst": 10,
    "NumZExtInst": 15,
    "TotalBlocks": 142,
    "TotalInsts": 847,
    "TotalMemInst": 567,
    "TotalFuncs": 42,
    "ArgsPhi": 4,
    "testUnary": 368
  },
  "baseline_oz_instcount": 852,
  "knowledge_base_entry": [
    "--mergereturn",
    "--simplifycfg",
    "--adce",
    "--instsimplify",
    "--gvn-hoist",
    "--inline",
    "--reassociate",
    "--early-cse-memssa",
    "--prune-eh",
    "--instsimplify",
    "--mldst-motion",
    "--slp-vectorizer",
    "--simplifycfg",
    "--sccp",
    "--inline",
    "--early-cse-memssa",
    "--lower-expect",
    "--aggressive-instcombine",
    "--bdce",
    "--instcombine",
    "--slsr",
    "--newgvn",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loweratomic",
          "--slsr",
          "--speculative-execution",
          "--aggressive-instcombine",
          "--nary-reassociate",
          "--jump-threading",
          "--mem2reg",
          "--loop-rotate",
          "--lower-expect",
          "--loop-deletion",
          "--sccp",
          "--coro-elide",
          "--inline",
          "--strip",
          "--mldst-motion",
          "--loop-versioning",
          "--loop-simplify",
          "--constprop",
          "--simplifycfg",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loweratomic",
      "--slsr",
      "--speculative-execution",
      "--aggressive-instcombine",
      "--nary-reassociate",
      "--jump-threading",
      "--mem2reg",
      "--loop-rotate",
      "--lower-expect",
      "--loop-deletion",
      "--sccp",
      "--coro-elide",
      "--inline",
      "--strip",
      "--mldst-motion",
      "--loop-versioning",
      "--loop-simplify",
      "--constprop",
      "--simplifycfg",
      "--bdce"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}