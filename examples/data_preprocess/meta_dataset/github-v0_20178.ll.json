{
  "program_id": "github-v0_20178.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 21,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 6,
    "oneSuccessor": 21,
    "twoPred": 14,
    "twoPredOneSuc": 5,
    "twoEach": 6,
    "twoSuccessor": 14,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 1,
    "BranchCount": 35,
    "returnInt": 0,
    "CriticalCount": 9,
    "NumEdges": 49,
    "const32Bit": 75,
    "const64Bit": 8,
    "numConstZeroes": 50,
    "numConstOnes": 29,
    "UncondBranches": 21,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 33,
    "NumBitCastInst": 34,
    "NumBrInst": 35,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 87,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 36,
    "NumSubInst": 2,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 5,
    "TotalBlocks": 38,
    "TotalInsts": 277,
    "TotalMemInst": 174,
    "TotalFuncs": 4,
    "ArgsPhi": 2,
    "testUnary": 140
  },
  "baseline_oz_instcount": 278,
  "knowledge_base_entry": [
    "--newgvn",
    "--gvn-hoist",
    "--sroa",
    "--ipsccp",
    "--loweratomic",
    "--ipsccp",
    "--nary-reassociate",
    "--ipsccp",
    "--aggressive-instcombine",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipconstprop",
          "--mergeicmps",
          "--dce",
          "--mem2reg",
          "--instsimplify",
          "--inline",
          "--add-discriminators",
          "--loop-unroll-and-jam",
          "--sroa",
          "--bdce",
          "--strip",
          "--jump-threading",
          "--aggressive-instcombine",
          "--sink",
          "--name-anon-globals"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipconstprop",
      "--mergeicmps",
      "--dce",
      "--mem2reg",
      "--instsimplify",
      "--inline",
      "--add-discriminators",
      "--loop-unroll-and-jam",
      "--sroa",
      "--bdce",
      "--strip",
      "--jump-threading",
      "--aggressive-instcombine",
      "--sink",
      "--name-anon-globals"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}