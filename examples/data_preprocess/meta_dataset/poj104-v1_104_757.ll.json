{
  "program_id": "poj104-v1_104_757.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 5,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 7,
    "const32Bit": 11,
    "const64Bit": 4,
    "numConstZeroes": 2,
    "numConstOnes": 7,
    "UncondBranches": 3,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 8,
    "NumBitCastInst": 4,
    "NumBrInst": 5,
    "NumCallInst": 13,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 7,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 56,
    "TotalMemInst": 39,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 23
  },
  "baseline_oz_instcount": 44,
  "knowledge_base_entry": [
    "--slsr",
    "--jump-threading",
    "--lower-expect",
    "--elim-avail-extern",
    "--mem2reg",
    "--jump-threading",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--die",
    "--inline",
    "--sroa",
    "--loop-rotate",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-guard-intrinsic",
          "--gvn",
          "--forceattrs",
          "--constprop",
          "--slsr",
          "--loop-unswitch",
          "--infer-address-spaces",
          "--loop-guard-widening",
          "--memcpyopt",
          "--insert-gcov-profiling",
          "--mergereturn",
          "--loop-simplifycfg",
          "--instcombine",
          "--simple-loop-unswitch",
          "--instnamer",
          "--loop-fusion",
          "--inline",
          "-loop-reduce",
          "--loop-idiom",
          "--separate-const-offset-from-gep",
          "--reassociate",
          "--speculative-execution",
          "--strip",
          "--called-value-propagation",
          "--float2int",
          "--sancov",
          "--newgvn",
          "--slp-vectorizer",
          "--die",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+29.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-guard-intrinsic",
      "--gvn",
      "--forceattrs",
      "--constprop",
      "--slsr",
      "--loop-unswitch",
      "--infer-address-spaces",
      "--loop-guard-widening",
      "--memcpyopt",
      "--insert-gcov-profiling",
      "--mergereturn",
      "--loop-simplifycfg",
      "--instcombine",
      "--simple-loop-unswitch",
      "--instnamer",
      "--loop-fusion",
      "--inline",
      "-loop-reduce",
      "--loop-idiom",
      "--separate-const-offset-from-gep",
      "--reassociate",
      "--speculative-execution",
      "--strip",
      "--called-value-propagation",
      "--float2int",
      "--sancov",
      "--newgvn",
      "--slp-vectorizer",
      "--die",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+29.5%"
  }
}