{
  "program_id": "github-v0_9586.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 9,
    "const64Bit": 30,
    "numConstZeroes": 20,
    "numConstOnes": 19,
    "UncondBranches": 0,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 0,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 0,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 78,
    "TotalMemInst": 9,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 0
  },
  "baseline_oz_instcount": 78,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--instsimplify",
    "--die",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--globaldce",
    "--mergefunc",
    "--globalopt",
    "--instsimplify",
    "--inline",
    "--gvn",
    "--instsimplify",
    "--die",
    "--loop-instsimplify",
    "--die",
    "--licm",
    "--reassociate",
    "--early-cse",
    "--slp-vectorizer",
    "--jump-threading",
    "--loop-deletion",
    "--sroa",
    "--dse",
    "--loop-instsimplify",
    "--instcombine",
    "--flattencfg",
    "--gvn",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--die",
    "--dse",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loweratomic",
          "--reassociate",
          "--loop-predication",
          "--prune-eh",
          "--functionattrs",
          "--rpo-functionattrs",
          "-loop-reduce",
          "--globalsplit",
          "--loop-versioning-licm",
          "--always-inline",
          "--elim-avail-extern",
          "--slsr",
          "--instnamer",
          "--sancov",
          "--early-cse-memssa",
          "--deadargelim",
          "--loop-rotate",
          "--gvn",
          "--globaldce",
          "--slp-vectorizer",
          "--loop-unswitch",
          "--nary-reassociate",
          "--simplifycfg",
          "--aggressive-instcombine",
          "--infer-address-spaces",
          "--lower-expect",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+17.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loweratomic",
      "--reassociate",
      "--loop-predication",
      "--prune-eh",
      "--functionattrs",
      "--rpo-functionattrs",
      "-loop-reduce",
      "--globalsplit",
      "--loop-versioning-licm",
      "--always-inline",
      "--elim-avail-extern",
      "--slsr",
      "--instnamer",
      "--sancov",
      "--early-cse-memssa",
      "--deadargelim",
      "--loop-rotate",
      "--gvn",
      "--globaldce",
      "--slp-vectorizer",
      "--loop-unswitch",
      "--nary-reassociate",
      "--simplifycfg",
      "--aggressive-instcombine",
      "--infer-address-spaces",
      "--lower-expect",
      "--instcombine"
    ],
    "performance_vs_Oz": "+17.9%"
  }
}