{
  "program_id": "github-v0_32072.ll",
  "autophase_features": {
    "BBNumArgsHi": 4,
    "BBNumArgsLo": 12,
    "onePred": 13,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 11,
    "twoPred": 15,
    "twoPredOneSuc": 1,
    "twoEach": 11,
    "twoSuccessor": 19,
    "morePreds": 2,
    "BB03Phi": 16,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 16,
    "BranchCount": 30,
    "returnInt": 15,
    "CriticalCount": 25,
    "NumEdges": 49,
    "const32Bit": 55,
    "const64Bit": 23,
    "numConstZeroes": 34,
    "numConstOnes": 19,
    "UncondBranches": 11,
    "binaryConstArg": 31,
    "NumAShrInst": 6,
    "NumAddInst": 40,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 31,
    "NumBitCastInst": 0,
    "NumBrInst": 30,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 19,
    "NumLShrInst": 0,
    "NumLoadInst": 21,
    "NumMulInst": 14,
    "NumOrInst": 1,
    "NumPHIInst": 30,
    "NumRetInst": 5,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 7,
    "NumSubInst": 2,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 35,
    "TotalInsts": 277,
    "TotalMemInst": 81,
    "TotalFuncs": 15,
    "ArgsPhi": 62,
    "testUnary": 47
  },
  "baseline_oz_instcount": 280,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--load-store-vectorizer",
    "--slsr",
    "--jump-threading",
    "--early-cse",
    "--load-store-vectorizer",
    "--adce",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--elim-avail-extern",
    "--jump-threading",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--newgvn",
    "--simplifycfg",
    "--memcpyopt",
    "--elim-avail-extern",
    "--simplifycfg",
    "--ipsccp",
    "--mergefunc",
    "--flattencfg",
    "--ipsccp",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-matrix-intrinsics",
          "--deadargelim",
          "--mergereturn",
          "--name-anon-globals",
          "--break-crit-edges",
          "--elim-avail-extern",
          "--irce",
          "--sccp",
          "--coro-split",
          "--loop-simplify",
          "--forceattrs",
          "--rewrite-statepoints-for-gc",
          "--loop-rotate",
          "--strip-dead-prototypes",
          "--sroa",
          "--instsimplify",
          "--instnamer",
          "--post-inline-ee-instrument",
          "--guard-widening",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-matrix-intrinsics",
      "--deadargelim",
      "--mergereturn",
      "--name-anon-globals",
      "--break-crit-edges",
      "--elim-avail-extern",
      "--irce",
      "--sccp",
      "--coro-split",
      "--loop-simplify",
      "--forceattrs",
      "--rewrite-statepoints-for-gc",
      "--loop-rotate",
      "--strip-dead-prototypes",
      "--sroa",
      "--instsimplify",
      "--instnamer",
      "--post-inline-ee-instrument",
      "--guard-widening",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}