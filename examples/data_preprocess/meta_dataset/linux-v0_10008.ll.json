{
  "program_id": "linux-v0_10008.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 30,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 10,
    "oneSuccessor": 25,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 14,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 3,
    "BranchCount": 39,
    "returnInt": 16,
    "CriticalCount": 4,
    "NumEdges": 53,
    "const32Bit": 127,
    "const64Bit": 34,
    "numConstZeroes": 56,
    "numConstOnes": 71,
    "UncondBranches": 25,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 48,
    "NumAndInst": 8,
    "BlockMid": 8,
    "BlockLow": 41,
    "NumBitCastInst": 9,
    "NumBrInst": 39,
    "NumCallInst": 37,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 126,
    "NumMulInst": 1,
    "NumOrInst": 5,
    "NumPHIInst": 3,
    "NumRetInst": 10,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 79,
    "NumSubInst": 5,
    "NumTruncInst": 7,
    "NumXorInst": 2,
    "NumZExtInst": 12,
    "TotalBlocks": 49,
    "TotalInsts": 463,
    "TotalMemInst": 338,
    "TotalFuncs": 22,
    "ArgsPhi": 7,
    "testUnary": 207
  },
  "baseline_oz_instcount": 463,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--newgvn",
    "--instsimplify",
    "--aggressive-instcombine",
    "--reassociate",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--called-value-propagation",
          "--strip-dead-prototypes",
          "--name-anon-globals",
          "--loop-idiom",
          "--nary-reassociate",
          "--gvn-hoist",
          "--lower-expect",
          "--dce",
          "--lower-guard-intrinsic",
          "--memcpyopt",
          "--consthoist",
          "--instcombine",
          "--loop-reroll",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--called-value-propagation",
      "--strip-dead-prototypes",
      "--name-anon-globals",
      "--loop-idiom",
      "--nary-reassociate",
      "--gvn-hoist",
      "--lower-expect",
      "--dce",
      "--lower-guard-intrinsic",
      "--memcpyopt",
      "--consthoist",
      "--instcombine",
      "--loop-reroll",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}