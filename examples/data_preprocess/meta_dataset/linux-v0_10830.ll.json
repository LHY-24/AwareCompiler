{
  "program_id": "linux-v0_10830.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 6,
    "oneSuccessor": 22,
    "twoPred": 8,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 11,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 16,
    "CriticalCount": 9,
    "NumEdges": 51,
    "const32Bit": 152,
    "const64Bit": 9,
    "numConstZeroes": 37,
    "numConstOnes": 63,
    "UncondBranches": 22,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 56,
    "NumAndInst": 11,
    "BlockMid": 9,
    "BlockLow": 37,
    "NumBitCastInst": 6,
    "NumBrInst": 33,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 18,
    "NumICmpInst": 15,
    "NumLShrInst": 5,
    "NumLoadInst": 98,
    "NumMulInst": 1,
    "NumOrInst": 7,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 5,
    "NumSelectInst": 1,
    "NumShlInst": 5,
    "NumStoreInst": 65,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 1,
    "NumZExtInst": 11,
    "TotalBlocks": 46,
    "TotalInsts": 384,
    "TotalMemInst": 261,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 180
  },
  "baseline_oz_instcount": 384,
  "knowledge_base_entry": [
    "--inline",
    "--memcpyopt",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--inline",
    "--ipsccp",
    "--sroa",
    "-loop-reduce",
    "--indvars",
    "--slsr",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-instsimplify",
          "--coro-split",
          "--globalopt",
          "--barrier",
          "--div-rem-pairs",
          "--mem2reg",
          "--redundant-dbg-inst-elim",
          "--early-cse",
          "-loop-reduce",
          "--argpromotion",
          "--coro-elide",
          "--consthoist",
          "--lower-constant-intrinsics",
          "--aggressive-instcombine",
          "--loop-rotate",
          "--indvars",
          "--prune-eh",
          "--globaldce",
          "--simplifycfg",
          "--libcalls-shrinkwrap",
          "--forceattrs",
          "--rewrite-statepoints-for-gc",
          "--slsr",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-instsimplify",
      "--coro-split",
      "--globalopt",
      "--barrier",
      "--div-rem-pairs",
      "--mem2reg",
      "--redundant-dbg-inst-elim",
      "--early-cse",
      "-loop-reduce",
      "--argpromotion",
      "--coro-elide",
      "--consthoist",
      "--lower-constant-intrinsics",
      "--aggressive-instcombine",
      "--loop-rotate",
      "--indvars",
      "--prune-eh",
      "--globaldce",
      "--simplifycfg",
      "--libcalls-shrinkwrap",
      "--forceattrs",
      "--rewrite-statepoints-for-gc",
      "--slsr",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+1.8%"
  }
}