{
  "program_id": "linux-v0_10904.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 3,
    "oneSuccessor": 17,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 14,
    "CriticalCount": 2,
    "NumEdges": 32,
    "const32Bit": 89,
    "const64Bit": 17,
    "numConstZeroes": 43,
    "numConstOnes": 37,
    "UncondBranches": 17,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 26,
    "NumAndInst": 4,
    "BlockMid": 4,
    "BlockLow": 32,
    "NumBitCastInst": 6,
    "NumBrInst": 23,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 25,
    "NumICmpInst": 8,
    "NumLShrInst": 1,
    "NumLoadInst": 60,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 7,
    "TotalBlocks": 36,
    "TotalInsts": 251,
    "TotalMemInst": 176,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 104
  },
  "baseline_oz_instcount": 251,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--newgvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-predication",
          "--aggressive-instcombine",
          "--instnamer",
          "--guard-widening",
          "--inject-tli-mappings",
          "--partially-inline-libcalls",
          "--loop-interchange",
          "--loop-unroll-and-jam",
          "--ipsccp",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-predication",
      "--aggressive-instcombine",
      "--instnamer",
      "--guard-widening",
      "--inject-tli-mappings",
      "--partially-inline-libcalls",
      "--loop-interchange",
      "--loop-unroll-and-jam",
      "--ipsccp",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}