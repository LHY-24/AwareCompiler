{
  "program_id": "github-v0_49718.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 10,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 4,
    "oneSuccessor": 8,
    "twoPred": 10,
    "twoPredOneSuc": 1,
    "twoEach": 9,
    "twoSuccessor": 16,
    "morePreds": 3,
    "BB03Phi": 10,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 10,
    "BranchCount": 24,
    "returnInt": 2,
    "CriticalCount": 21,
    "NumEdges": 40,
    "const32Bit": 61,
    "const64Bit": 36,
    "numConstZeroes": 44,
    "numConstOnes": 9,
    "UncondBranches": 8,
    "binaryConstArg": 28,
    "NumAShrInst": 3,
    "NumAddInst": 25,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 21,
    "NumBitCastInst": 22,
    "NumBrInst": 24,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 16,
    "NumLShrInst": 1,
    "NumLoadInst": 29,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 11,
    "NumRetInst": 1,
    "NumSExtInst": 18,
    "NumSelectInst": 2,
    "NumShlInst": 3,
    "NumStoreInst": 7,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 25,
    "TotalInsts": 246,
    "TotalMemInst": 97,
    "TotalFuncs": 7,
    "ArgsPhi": 23,
    "testUnary": 74
  },
  "baseline_oz_instcount": 242,
  "knowledge_base_entry": [
    "--scalarizer",
    "--early-cse-memssa",
    "--loop-deletion",
    "--gvn",
    "--indvars",
    "--loop-reroll",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--nary-reassociate",
    "--instsimplify",
    "--gvn",
    "--dce",
    "--die",
    "--simplifycfg",
    "--mergefunc",
    "--globaldce",
    "--mergefunc",
    "--slp-vectorizer",
    "--mem2reg",
    "--inline",
    "--newgvn",
    "--mergefunc",
    "--globalopt",
    "--inline",
    "--instsimplify",
    "--sccp",
    "--lower-constant-intrinsics",
    "--nary-reassociate",
    "--simplifycfg",
    "--dce",
    "--sccp",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sccp",
          "--slsr",
          "--post-inline-ee-instrument",
          "--loop-reroll",
          "--loop-distribute",
          "--indvars",
          "--tailcallelim",
          "--guard-widening",
          "--lower-constant-intrinsics",
          "--rewrite-statepoints-for-gc",
          "--aggressive-instcombine",
          "--nary-reassociate",
          "--coro-split",
          "--rpo-functionattrs",
          "--loop-unswitch",
          "--argpromotion",
          "--loop-simplifycfg",
          "--gvn",
          "--loop-load-elim",
          "--globalopt",
          "--loop-unroll-and-jam",
          "--coro-elide",
          "--loop-instsimplify",
          "--called-value-propagation",
          "--deadargelim",
          "--lower-widenable-condition",
          "--loop-vectorize",
          "--loop-versioning"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sccp",
      "--slsr",
      "--post-inline-ee-instrument",
      "--loop-reroll",
      "--loop-distribute",
      "--indvars",
      "--tailcallelim",
      "--guard-widening",
      "--lower-constant-intrinsics",
      "--rewrite-statepoints-for-gc",
      "--aggressive-instcombine",
      "--nary-reassociate",
      "--coro-split",
      "--rpo-functionattrs",
      "--loop-unswitch",
      "--argpromotion",
      "--loop-simplifycfg",
      "--gvn",
      "--loop-load-elim",
      "--globalopt",
      "--loop-unroll-and-jam",
      "--coro-elide",
      "--loop-instsimplify",
      "--called-value-propagation",
      "--deadargelim",
      "--lower-widenable-condition",
      "--loop-vectorize",
      "--loop-versioning"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}