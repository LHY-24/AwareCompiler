{
  "program_id": "poj104-v1_26_874.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 6,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 2,
    "oneSuccessor": 6,
    "twoPred": 3,
    "twoPredOneSuc": 2,
    "twoEach": 1,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 13,
    "BeginPhi": 0,
    "BranchCount": 9,
    "returnInt": 1,
    "CriticalCount": 1,
    "NumEdges": 12,
    "const32Bit": 12,
    "const64Bit": 9,
    "numConstZeroes": 7,
    "numConstOnes": 8,
    "UncondBranches": 6,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 5,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 13,
    "NumBitCastInst": 4,
    "NumBrInst": 9,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 13,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 6,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 13,
    "TotalInsts": 63,
    "TotalMemInst": 40,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 25
  },
  "baseline_oz_instcount": 42,
  "knowledge_base_entry": [
    "--sink",
    "--gvn",
    "--instcombine",
    "--lower-expect",
    "--adce",
    "--elim-avail-extern",
    "--licm",
    "--flattencfg",
    "--early-cse-memssa",
    "--instcombine",
    "--nary-reassociate",
    "--simplifycfg",
    "--mergefunc",
    "--simplifycfg",
    "--flattencfg",
    "--ipsccp",
    "--die",
    "--jump-threading",
    "--inline",
    "--early-cse-memssa",
    "--adce",
    "--aggressive-instcombine",
    "--die",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--adce",
    "--inline",
    "--sroa",
    "--prune-eh",
    "--sroa",
    "--inline",
    "--mldst-motion",
    "--inline",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-constant-intrinsics",
          "--instcombine",
          "--ipconstprop",
          "--infer-address-spaces",
          "--flattencfg",
          "--sroa",
          "--gvn-hoist",
          "--coro-cleanup",
          "--coro-elide",
          "--mergeicmps",
          "--early-cse-memssa",
          "--functionattrs",
          "--attributor",
          "--jump-threading",
          "--partial-inliner",
          "--loop-versioning",
          "--prune-eh",
          "--ipsccp",
          "--rpo-functionattrs",
          "--constmerge",
          "--instnamer",
          "--lower-matrix-intrinsics",
          "--mergefunc",
          "--load-store-vectorizer",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+14.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-constant-intrinsics",
      "--instcombine",
      "--ipconstprop",
      "--infer-address-spaces",
      "--flattencfg",
      "--sroa",
      "--gvn-hoist",
      "--coro-cleanup",
      "--coro-elide",
      "--mergeicmps",
      "--early-cse-memssa",
      "--functionattrs",
      "--attributor",
      "--jump-threading",
      "--partial-inliner",
      "--loop-versioning",
      "--prune-eh",
      "--ipsccp",
      "--rpo-functionattrs",
      "--constmerge",
      "--instnamer",
      "--lower-matrix-intrinsics",
      "--mergefunc",
      "--load-store-vectorizer",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+14.3%"
  }
}