{
  "program_id": "linux-v0_10139.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 32,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 7,
    "oneSuccessor": 30,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 14,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 56,
    "BeginPhi": 0,
    "BranchCount": 44,
    "returnInt": 10,
    "CriticalCount": 3,
    "NumEdges": 58,
    "const32Bit": 200,
    "const64Bit": 11,
    "numConstZeroes": 94,
    "numConstOnes": 92,
    "UncondBranches": 30,
    "binaryConstArg": 16,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 60,
    "NumAndInst": 6,
    "BlockMid": 11,
    "BlockLow": 45,
    "NumBitCastInst": 4,
    "NumBrInst": 44,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 65,
    "NumICmpInst": 14,
    "NumLShrInst": 2,
    "NumLoadInst": 170,
    "NumMulInst": 2,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 12,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 8,
    "NumStoreInst": 78,
    "NumSubInst": 4,
    "NumTruncInst": 4,
    "NumXorInst": 4,
    "NumZExtInst": 31,
    "TotalBlocks": 56,
    "TotalInsts": 535,
    "TotalMemInst": 395,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 269
  },
  "baseline_oz_instcount": 536,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--gvn",
    "--nary-reassociate",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--lower-matrix-intrinsics",
          "--infer-address-spaces",
          "--barrier",
          "--prune-eh",
          "--add-discriminators",
          "--tailcallelim",
          "--float2int",
          "--mem2reg",
          "--instnamer",
          "--ee-instrument",
          "--gvn-hoist"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--lower-matrix-intrinsics",
      "--infer-address-spaces",
      "--barrier",
      "--prune-eh",
      "--add-discriminators",
      "--tailcallelim",
      "--float2int",
      "--mem2reg",
      "--instnamer",
      "--ee-instrument",
      "--gvn-hoist"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}