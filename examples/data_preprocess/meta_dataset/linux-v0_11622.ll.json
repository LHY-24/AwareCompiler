{
  "program_id": "linux-v0_11622.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 49,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 12,
    "oneSuccessor": 44,
    "twoPred": 7,
    "twoPredOneSuc": 6,
    "twoEach": 1,
    "twoSuccessor": 13,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 65,
    "BeginPhi": 0,
    "BranchCount": 57,
    "returnInt": 12,
    "CriticalCount": 6,
    "NumEdges": 70,
    "const32Bit": 225,
    "const64Bit": 12,
    "numConstZeroes": 87,
    "numConstOnes": 90,
    "UncondBranches": 44,
    "binaryConstArg": 54,
    "NumAShrInst": 0,
    "NumAddInst": 12,
    "NumAllocaInst": 59,
    "NumAndInst": 18,
    "BlockMid": 9,
    "BlockLow": 56,
    "NumBitCastInst": 15,
    "NumBrInst": 57,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 58,
    "NumICmpInst": 27,
    "NumLShrInst": 6,
    "NumLoadInst": 129,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 6,
    "NumSelectInst": 3,
    "NumShlInst": 0,
    "NumStoreInst": 61,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 16,
    "NumZExtInst": 39,
    "TotalBlocks": 65,
    "TotalInsts": 567,
    "TotalMemInst": 348,
    "TotalFuncs": 25,
    "ArgsPhi": 0,
    "testUnary": 256
  },
  "baseline_oz_instcount": 567,
  "knowledge_base_entry": [
    "--dce",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--globalopt",
    "--dse",
    "--gvn-hoist",
    "--gvn",
    "--ipsccp",
    "--inline",
    "--licm",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--barrier",
          "--sink",
          "--aggressive-instcombine",
          "--prune-eh",
          "--loop-vectorize",
          "--ipsccp",
          "--instcombine",
          "--rewrite-statepoints-for-gc",
          "--die",
          "--argpromotion",
          "--loop-unswitch",
          "--cross-dso-cfi",
          "--mergefunc",
          "--lowerswitch",
          "--mergeicmps",
          "--licm",
          "--rpo-functionattrs",
          "--gvn",
          "--infer-address-spaces",
          "--correlated-propagation",
          "--simple-loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--barrier",
      "--sink",
      "--aggressive-instcombine",
      "--prune-eh",
      "--loop-vectorize",
      "--ipsccp",
      "--instcombine",
      "--rewrite-statepoints-for-gc",
      "--die",
      "--argpromotion",
      "--loop-unswitch",
      "--cross-dso-cfi",
      "--mergefunc",
      "--lowerswitch",
      "--mergeicmps",
      "--licm",
      "--rpo-functionattrs",
      "--gvn",
      "--infer-address-spaces",
      "--correlated-propagation",
      "--simple-loop-unswitch"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}