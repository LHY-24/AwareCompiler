{
  "program_id": "github-v0_18274.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 32,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 7,
    "oneSuccessor": 30,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 6,
    "twoSuccessor": 14,
    "morePreds": 4,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 44,
    "BeginPhi": 2,
    "BranchCount": 44,
    "returnInt": 3,
    "CriticalCount": 8,
    "NumEdges": 68,
    "const32Bit": 49,
    "const64Bit": 0,
    "numConstZeroes": 14,
    "numConstOnes": 19,
    "UncondBranches": 30,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 45,
    "NumBitCastInst": 0,
    "NumBrInst": 44,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 36,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 1,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 33,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 46,
    "TotalInsts": 167,
    "TotalMemInst": 89,
    "TotalFuncs": 2,
    "ArgsPhi": 5,
    "testUnary": 56
  },
  "baseline_oz_instcount": 168,
  "knowledge_base_entry": [
    "--slp-vectorizer",
    "--lower-expect",
    "--aggressive-instcombine",
    "--mem2reg",
    "--adce",
    "--lower-expect",
    "--aggressive-instcombine",
    "--mem2reg",
    "--aggressive-instcombine",
    "--reassociate",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--libcalls-shrinkwrap",
          "--forceattrs",
          "--infer-address-spaces",
          "--partial-inliner",
          "--loop-versioning",
          "--lcssa",
          "--inferattrs",
          "--simplifycfg",
          "--prune-eh",
          "--elim-avail-extern",
          "--bdce",
          "--rpo-functionattrs",
          "--guard-widening",
          "--name-anon-globals",
          "--mergereturn",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--libcalls-shrinkwrap",
      "--forceattrs",
      "--infer-address-spaces",
      "--partial-inliner",
      "--loop-versioning",
      "--lcssa",
      "--inferattrs",
      "--simplifycfg",
      "--prune-eh",
      "--elim-avail-extern",
      "--bdce",
      "--rpo-functionattrs",
      "--guard-widening",
      "--name-anon-globals",
      "--mergereturn",
      "--dce"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}