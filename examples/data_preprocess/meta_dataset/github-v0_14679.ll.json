{
  "program_id": "github-v0_14679.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 34,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 11,
    "oneSuccessor": 22,
    "twoPred": 8,
    "twoPredOneSuc": 4,
    "twoEach": 1,
    "twoSuccessor": 14,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 2,
    "BranchCount": 36,
    "returnInt": 6,
    "CriticalCount": 7,
    "NumEdges": 50,
    "const32Bit": 128,
    "const64Bit": 1,
    "numConstZeroes": 69,
    "numConstOnes": 41,
    "UncondBranches": 22,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 32,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 58,
    "NumBitCastInst": 25,
    "NumBrInst": 36,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 69,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 18,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 30,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 62,
    "TotalInsts": 348,
    "TotalMemInst": 212,
    "TotalFuncs": 28,
    "ArgsPhi": 4,
    "testUnary": 144
  },
  "baseline_oz_instcount": 347,
  "knowledge_base_entry": [
    "--hotcoldsplit",
    "--mergefunc",
    "--reassociate",
    "--dse",
    "--ipsccp",
    "--early-cse",
    "--die",
    "--sroa",
    "--elim-avail-extern",
    "--globalopt",
    "--licm",
    "--loop-simplifycfg",
    "--mem2reg",
    "--slp-vectorizer",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--ipconstprop",
          "--div-rem-pairs",
          "--early-cse",
          "--globalopt",
          "--mergefunc",
          "--infer-address-spaces",
          "--adce",
          "--loop-versioning-licm",
          "--scalarizer",
          "--dse",
          "--rpo-functionattrs",
          "--early-cse-memssa",
          "--mergeicmps",
          "--redundant-dbg-inst-elim",
          "--irce",
          "--constprop",
          "--loop-vectorize",
          "--globalsplit",
          "--aggressive-instcombine",
          "--inferattrs",
          "--indvars"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--ipconstprop",
      "--div-rem-pairs",
      "--early-cse",
      "--globalopt",
      "--mergefunc",
      "--infer-address-spaces",
      "--adce",
      "--loop-versioning-licm",
      "--scalarizer",
      "--dse",
      "--rpo-functionattrs",
      "--early-cse-memssa",
      "--mergeicmps",
      "--redundant-dbg-inst-elim",
      "--irce",
      "--constprop",
      "--loop-vectorize",
      "--globalsplit",
      "--aggressive-instcombine",
      "--inferattrs",
      "--indvars"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}