{
  "program_id": "linux-v0_7877.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 9,
    "oneSuccessor": 38,
    "twoPred": 16,
    "twoPredOneSuc": 1,
    "twoEach": 12,
    "twoSuccessor": 27,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 74,
    "BeginPhi": 0,
    "BranchCount": 65,
    "returnInt": 14,
    "CriticalCount": 12,
    "NumEdges": 92,
    "const32Bit": 118,
    "const64Bit": 25,
    "numConstZeroes": 38,
    "numConstOnes": 47,
    "UncondBranches": 38,
    "binaryConstArg": 28,
    "NumAShrInst": 1,
    "NumAddInst": 2,
    "NumAllocaInst": 37,
    "NumAndInst": 15,
    "BlockMid": 10,
    "BlockLow": 64,
    "NumBitCastInst": 0,
    "NumBrInst": 65,
    "NumCallInst": 59,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 27,
    "NumLShrInst": 0,
    "NumLoadInst": 159,
    "NumMulInst": 0,
    "NumOrInst": 8,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 61,
    "NumSubInst": 1,
    "NumTruncInst": 29,
    "NumXorInst": 0,
    "NumZExtInst": 53,
    "TotalBlocks": 74,
    "TotalInsts": 542,
    "TotalMemInst": 330,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 278
  },
  "baseline_oz_instcount": 542,
  "knowledge_base_entry": [
    "--scalarizer",
    "--early-cse-memssa",
    "--bdce",
    "--gvn",
    "--licm",
    "--aggressive-instcombine",
    "--newgvn",
    "--load-store-vectorizer",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "-loop-reduce",
          "--name-anon-globals",
          "--aggressive-instcombine",
          "--loop-sink",
          "--mem2reg",
          "--instcombine",
          "--simple-loop-unswitch",
          "--inline",
          "--slp-vectorizer",
          "--always-inline",
          "--licm",
          "--mergeicmps",
          "--early-cse",
          "--tailcallelim",
          "--attributor",
          "--loop-simplifycfg",
          "--sroa",
          "--loop-reroll",
          "--add-discriminators",
          "--prune-eh",
          "--deadargelim",
          "--loop-distribute",
          "--canonicalize-aliases",
          "--load-store-vectorizer",
          "--partially-inline-libcalls",
          "--strip",
          "--loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "-loop-reduce",
      "--name-anon-globals",
      "--aggressive-instcombine",
      "--loop-sink",
      "--mem2reg",
      "--instcombine",
      "--simple-loop-unswitch",
      "--inline",
      "--slp-vectorizer",
      "--always-inline",
      "--licm",
      "--mergeicmps",
      "--early-cse",
      "--tailcallelim",
      "--attributor",
      "--loop-simplifycfg",
      "--sroa",
      "--loop-reroll",
      "--add-discriminators",
      "--prune-eh",
      "--deadargelim",
      "--loop-distribute",
      "--canonicalize-aliases",
      "--load-store-vectorizer",
      "--partially-inline-libcalls",
      "--strip",
      "--loop-unswitch"
    ],
    "performance_vs_Oz": "+7.4%"
  }
}