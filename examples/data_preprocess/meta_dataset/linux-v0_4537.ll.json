{
  "program_id": "linux-v0_4537.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 8,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 2,
    "oneSuccessor": 8,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 12,
    "const32Bit": 96,
    "const64Bit": 21,
    "numConstZeroes": 57,
    "numConstOnes": 35,
    "UncondBranches": 8,
    "binaryConstArg": 9,
    "NumAShrInst": 1,
    "NumAddInst": 0,
    "NumAllocaInst": 26,
    "NumAndInst": 2,
    "BlockMid": 5,
    "BlockLow": 15,
    "NumBitCastInst": 11,
    "NumBrInst": 10,
    "NumCallInst": 12,
    "NumGetElementPtrInst": 39,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 50,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 4,
    "NumStoreInst": 38,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 9,
    "TotalBlocks": 20,
    "TotalInsts": 224,
    "TotalMemInst": 165,
    "TotalFuncs": 16,
    "ArgsPhi": 0,
    "testUnary": 99
  },
  "baseline_oz_instcount": 224,
  "knowledge_base_entry": [
    "--partially-inline-libcalls",
    "--gvn",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--reassociate",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instsimplify",
          "--barrier",
          "--canonicalize-aliases",
          "--inject-tli-mappings",
          "--simple-loop-unswitch",
          "--rpo-functionattrs",
          "--mem2reg",
          "--loop-simplify",
          "--lower-widenable-condition",
          "--adce",
          "--indvars",
          "--loop-load-elim",
          "--gvn-hoist",
          "--mldst-motion",
          "--aggressive-instcombine",
          "--coro-early",
          "--loop-unswitch",
          "--loop-fusion",
          "--dce",
          "--lowerswitch",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instsimplify",
      "--barrier",
      "--canonicalize-aliases",
      "--inject-tli-mappings",
      "--simple-loop-unswitch",
      "--rpo-functionattrs",
      "--mem2reg",
      "--loop-simplify",
      "--lower-widenable-condition",
      "--adce",
      "--indvars",
      "--loop-load-elim",
      "--gvn-hoist",
      "--mldst-motion",
      "--aggressive-instcombine",
      "--coro-early",
      "--loop-unswitch",
      "--loop-fusion",
      "--dce",
      "--lowerswitch",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}