{
  "program_id": "github-v0_1681.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 8,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 12,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 19,
    "CriticalCount": 4,
    "NumEdges": 35,
    "const32Bit": 66,
    "const64Bit": 23,
    "numConstZeroes": 34,
    "numConstOnes": 34,
    "UncondBranches": 11,
    "binaryConstArg": 3,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 14,
    "NumAndInst": 1,
    "BlockMid": 3,
    "BlockLow": 26,
    "NumBitCastInst": 2,
    "NumBrInst": 23,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 22,
    "NumICmpInst": 12,
    "NumLShrInst": 1,
    "NumLoadInst": 51,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 30,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 29,
    "TotalInsts": 199,
    "TotalMemInst": 146,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 71
  },
  "baseline_oz_instcount": 200,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--ipsccp",
    "--simplifycfg",
    "--inline",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--slp-vectorizer",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--redundant-dbg-inst-elim",
          "--early-cse-memssa",
          "--early-cse",
          "--float2int",
          "--bdce",
          "--inject-tli-mappings",
          "--consthoist",
          "--mem2reg",
          "--always-inline",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--redundant-dbg-inst-elim",
      "--early-cse-memssa",
      "--early-cse",
      "--float2int",
      "--bdce",
      "--inject-tli-mappings",
      "--consthoist",
      "--mem2reg",
      "--always-inline",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}