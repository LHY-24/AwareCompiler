{
  "program_id": "github-v0_1400.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 38,
    "onePredTwoSuc": 7,
    "oneSuccessor": 45,
    "twoPred": 24,
    "twoPredOneSuc": 7,
    "twoEach": 6,
    "twoSuccessor": 24,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 0,
    "BranchCount": 69,
    "returnInt": 2,
    "CriticalCount": 7,
    "NumEdges": 93,
    "const32Bit": 197,
    "const64Bit": 2,
    "numConstZeroes": 66,
    "numConstOnes": 104,
    "UncondBranches": 45,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 69,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 88,
    "NumBitCastInst": 5,
    "NumBrInst": 69,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 47,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 144,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 25,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 95,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 94,
    "TotalInsts": 510,
    "TotalMemInst": 382,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 221
  },
  "baseline_oz_instcount": 510,
  "knowledge_base_entry": [
    "--dce",
    "--reassociate",
    "--mergefunc",
    "--instcombine",
    "--ipsccp",
    "--dse",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--newgvn",
    "--prune-eh",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--flattencfg",
    "--jump-threading",
    "--licm",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--libcalls-shrinkwrap",
          "--ee-instrument",
          "--loop-fusion",
          "--loweratomic",
          "--jump-threading",
          "--instsimplify",
          "--gvn",
          "--loop-rotate",
          "--consthoist",
          "--rewrite-statepoints-for-gc",
          "--instnamer",
          "--sroa",
          "--prune-eh",
          "--called-value-propagation",
          "--coro-elide",
          "--mergefunc",
          "--lower-widenable-condition",
          "--guard-widening",
          "--strip-debug-declare",
          "--slp-vectorizer",
          "--globaldce",
          "--post-inline-ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--libcalls-shrinkwrap",
      "--ee-instrument",
      "--loop-fusion",
      "--loweratomic",
      "--jump-threading",
      "--instsimplify",
      "--gvn",
      "--loop-rotate",
      "--consthoist",
      "--rewrite-statepoints-for-gc",
      "--instnamer",
      "--sroa",
      "--prune-eh",
      "--called-value-propagation",
      "--coro-elide",
      "--mergefunc",
      "--lower-widenable-condition",
      "--guard-widening",
      "--strip-debug-declare",
      "--slp-vectorizer",
      "--globaldce",
      "--post-inline-ee-instrument"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}