{
  "program_id": "linux-v0_5185.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 74,
    "onePredOneSuc": 48,
    "onePredTwoSuc": 24,
    "oneSuccessor": 90,
    "twoPred": 25,
    "twoPredOneSuc": 10,
    "twoEach": 8,
    "twoSuccessor": 36,
    "morePreds": 32,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 158,
    "BeginPhi": 0,
    "BranchCount": 126,
    "returnInt": 23,
    "CriticalCount": 489,
    "NumEdges": 646,
    "const32Bit": 792,
    "const64Bit": 39,
    "numConstZeroes": 152,
    "numConstOnes": 135,
    "UncondBranches": 90,
    "binaryConstArg": 26,
    "NumAShrInst": 3,
    "NumAddInst": 12,
    "NumAllocaInst": 99,
    "NumAndInst": 6,
    "BlockMid": 15,
    "BlockLow": 143,
    "NumBitCastInst": 12,
    "NumBrInst": 126,
    "NumCallInst": 63,
    "NumGetElementPtrInst": 93,
    "NumICmpInst": 36,
    "NumLShrInst": 0,
    "NumLoadInst": 290,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 27,
    "NumSExtInst": 24,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 147,
    "NumSubInst": 0,
    "NumTruncInst": 10,
    "NumXorInst": 2,
    "NumZExtInst": 18,
    "TotalBlocks": 158,
    "TotalInsts": 981,
    "TotalMemInst": 692,
    "TotalFuncs": 43,
    "ArgsPhi": 0,
    "testUnary": 457
  },
  "baseline_oz_instcount": 981,
  "knowledge_base_entry": [
    "--adce",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--mem2reg",
    "--early-cse",
    "--load-store-vectorizer",
    "--die",
    "--mergefunc",
    "--correlated-propagation",
    "--gvn",
    "--instsimplify",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--guard-widening",
          "--forceattrs",
          "--separate-const-offset-from-gep",
          "--mergeicmps",
          "--aggressive-instcombine",
          "--strip",
          "--early-cse-memssa",
          "--instsimplify",
          "--loop-load-elim",
          "--float2int",
          "--argpromotion",
          "--bdce",
          "--add-discriminators",
          "--reassociate",
          "--loop-vectorize"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--guard-widening",
      "--forceattrs",
      "--separate-const-offset-from-gep",
      "--mergeicmps",
      "--aggressive-instcombine",
      "--strip",
      "--early-cse-memssa",
      "--instsimplify",
      "--loop-load-elim",
      "--float2int",
      "--argpromotion",
      "--bdce",
      "--add-discriminators",
      "--reassociate",
      "--loop-vectorize"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}