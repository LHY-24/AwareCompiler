{
  "program_id": "linux-v0_4813.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 6,
    "oneSuccessor": 23,
    "twoPred": 10,
    "twoPredOneSuc": 6,
    "twoEach": 2,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 0,
    "BranchCount": 33,
    "returnInt": 15,
    "CriticalCount": 7,
    "NumEdges": 43,
    "const32Bit": 280,
    "const64Bit": 38,
    "numConstZeroes": 149,
    "numConstOnes": 87,
    "UncondBranches": 23,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 52,
    "NumAndInst": 2,
    "BlockMid": 12,
    "BlockLow": 34,
    "NumBitCastInst": 11,
    "NumBrInst": 33,
    "NumCallInst": 38,
    "NumGetElementPtrInst": 107,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 143,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 13,
    "NumSExtInst": 13,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 72,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 8,
    "NumZExtInst": 6,
    "TotalBlocks": 46,
    "TotalInsts": 526,
    "TotalMemInst": 412,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 227
  },
  "baseline_oz_instcount": 527,
  "knowledge_base_entry": [
    "--inferattrs",
    "--instcombine",
    "--bdce",
    "--inline",
    "--nary-reassociate",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--die",
    "--newgvn",
    "--ipsccp",
    "--sccp",
    "--instcombine",
    "--bdce",
    "--inline",
    "--nary-reassociate",
    "--slsr",
    "--gvn",
    "--sroa",
    "--gvn-hoist",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--dse",
    "--die",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--deadargelim",
          "--bdce",
          "--load-store-vectorizer",
          "--adce",
          "--float2int",
          "--attributor",
          "--cross-dso-cfi",
          "--guard-widening",
          "--rpo-functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--deadargelim",
      "--bdce",
      "--load-store-vectorizer",
      "--adce",
      "--float2int",
      "--attributor",
      "--cross-dso-cfi",
      "--guard-widening",
      "--rpo-functionattrs"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}