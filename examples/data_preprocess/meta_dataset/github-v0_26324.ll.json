{
  "program_id": "github-v0_26324.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 3,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 2,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 5,
    "returnInt": 10,
    "CriticalCount": 1,
    "NumEdges": 7,
    "const32Bit": 45,
    "const64Bit": 0,
    "numConstZeroes": 8,
    "numConstOnes": 37,
    "UncondBranches": 3,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 37,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 23,
    "NumBitCastInst": 8,
    "NumBrInst": 5,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 20,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 36,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 24,
    "TotalInsts": 158,
    "TotalMemInst": 117,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 72
  },
  "baseline_oz_instcount": 158,
  "knowledge_base_entry": [
    "--gvn",
    "--newgvn",
    "--reassociate",
    "--mem2reg",
    "--mergefunc",
    "--loop-instsimplify",
    "--adce",
    "--lower-constant-intrinsics",
    "--dse",
    "--ipsccp",
    "--jump-threading",
    "-loop-reduce",
    "--nary-reassociate",
    "--correlated-propagation",
    "--early-cse-memssa",
    "--flattencfg",
    "--sroa",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--gvn-hoist",
    "--slsr",
    "--loop-reroll",
    "--load-store-vectorizer",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--indvars",
          "--loop-simplifycfg",
          "--loop-idiom",
          "-loop-reduce",
          "--float2int",
          "--irce",
          "--inline",
          "--loop-unswitch",
          "--gvn-hoist",
          "--add-discriminators",
          "--hotcoldsplit",
          "--guard-widening",
          "--lower-matrix-intrinsics",
          "--speculative-execution",
          "--strip",
          "--cross-dso-cfi",
          "--ipsccp",
          "--rpo-functionattrs",
          "--loop-deletion",
          "--simplifycfg",
          "--sancov",
          "--mergefunc",
          "--newgvn",
          "--lowerswitch",
          "--strip-debug-declare",
          "--dse",
          "--div-rem-pairs",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+29.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--indvars",
      "--loop-simplifycfg",
      "--loop-idiom",
      "-loop-reduce",
      "--float2int",
      "--irce",
      "--inline",
      "--loop-unswitch",
      "--gvn-hoist",
      "--add-discriminators",
      "--hotcoldsplit",
      "--guard-widening",
      "--lower-matrix-intrinsics",
      "--speculative-execution",
      "--strip",
      "--cross-dso-cfi",
      "--ipsccp",
      "--rpo-functionattrs",
      "--loop-deletion",
      "--simplifycfg",
      "--sancov",
      "--mergefunc",
      "--newgvn",
      "--lowerswitch",
      "--strip-debug-declare",
      "--dse",
      "--div-rem-pairs",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+29.7%"
  }
}