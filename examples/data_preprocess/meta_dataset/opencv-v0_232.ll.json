{
  "program_id": "opencv-v0_232.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 3,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 1,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 6,
    "BeginPhi": 2,
    "BranchCount": 5,
    "returnInt": 1,
    "CriticalCount": 3,
    "NumEdges": 8,
    "const32Bit": 18,
    "const64Bit": 14,
    "numConstZeroes": 19,
    "numConstOnes": 2,
    "UncondBranches": 2,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 1,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 7,
    "NumBitCastInst": 1,
    "NumBrInst": 5,
    "NumCallInst": 6,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 6,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 4,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 8,
    "TotalInsts": 44,
    "TotalMemInst": 27,
    "TotalFuncs": 20,
    "ArgsPhi": 5,
    "testUnary": 10
  },
  "baseline_oz_instcount": 44,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--newgvn",
    "--memcpyopt",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--memcpyopt",
    "--inline",
    "--dse",
    "--early-cse-memssa",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--early-cse-memssa",
          "--mergeicmps",
          "--loop-load-elim",
          "--flattencfg",
          "--speculative-execution",
          "--simplifycfg",
          "--loop-unroll",
          "--coro-elide",
          "--loop-vectorize",
          "--coro-cleanup",
          "--nary-reassociate",
          "--memcpyopt",
          "--coro-split",
          "--guard-widening",
          "--loop-deletion",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--early-cse-memssa",
      "--mergeicmps",
      "--loop-load-elim",
      "--flattencfg",
      "--speculative-execution",
      "--simplifycfg",
      "--loop-unroll",
      "--coro-elide",
      "--loop-vectorize",
      "--coro-cleanup",
      "--nary-reassociate",
      "--memcpyopt",
      "--coro-split",
      "--guard-widening",
      "--loop-deletion",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+2.3%"
  }
}