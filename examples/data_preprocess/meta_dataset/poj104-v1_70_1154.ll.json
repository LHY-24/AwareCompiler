{
  "program_id": "poj104-v1_70_1154.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 1,
    "oneSuccessor": 10,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 17,
    "BeginPhi": 0,
    "BranchCount": 14,
    "returnInt": 4,
    "CriticalCount": 1,
    "NumEdges": 18,
    "const32Bit": 16,
    "const64Bit": 16,
    "numConstZeroes": 3,
    "numConstOnes": 13,
    "UncondBranches": 10,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 8,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 14,
    "NumBitCastInst": 18,
    "NumBrInst": 14,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 10,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 47,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 17,
    "TotalInsts": 167,
    "TotalMemInst": 102,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 85
  },
  "baseline_oz_instcount": 68,
  "knowledge_base_entry": [
    "--prune-eh",
    "--aggressive-instcombine",
    "--instsimplify",
    "--adce",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--inline",
    "--newgvn",
    "--flattencfg",
    "--mergefunc",
    "--globaldce",
    "--ipsccp",
    "--sroa",
    "--mem2reg",
    "--slp-vectorizer",
    "--gvn-hoist",
    "--newgvn",
    "--dce",
    "--elim-avail-extern",
    "--early-cse",
    "--sroa",
    "--early-cse",
    "--aggressive-instcombine",
    "--early-cse",
    "--globalopt",
    "--mem2reg",
    "--dce",
    "--newgvn",
    "--ipsccp",
    "--lower-expect",
    "--sroa",
    "--reassociate",
    "--instcombine",
    "--slp-vectorizer",
    "--loop-simplifycfg",
    "--simplifycfg",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--inline",
    "--newgvn",
    "--flattencfg",
    "--mergefunc",
    "--globaldce",
    "--ipsccp",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergereturn",
          "--partial-inliner",
          "--name-anon-globals",
          "--strip-nondebug",
          "--sancov",
          "--bdce",
          "--loop-unswitch",
          "--consthoist",
          "--canonicalize-aliases",
          "--loop-simplifycfg",
          "--rewrite-statepoints-for-gc",
          "--break-crit-edges",
          "--lcssa",
          "--sroa",
          "--lowerswitch",
          "--loop-guard-widening",
          "--load-store-vectorizer",
          "--ipsccp",
          "--jump-threading",
          "--instnamer",
          "--inline",
          "--newgvn",
          "--instcombine",
          "--forceattrs",
          "--reassociate",
          "--lower-widenable-condition",
          "--constmerge",
          "--tailcallelim",
          "--loweratomic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergereturn",
      "--partial-inliner",
      "--name-anon-globals",
      "--strip-nondebug",
      "--sancov",
      "--bdce",
      "--loop-unswitch",
      "--consthoist",
      "--canonicalize-aliases",
      "--loop-simplifycfg",
      "--rewrite-statepoints-for-gc",
      "--break-crit-edges",
      "--lcssa",
      "--sroa",
      "--lowerswitch",
      "--loop-guard-widening",
      "--load-store-vectorizer",
      "--ipsccp",
      "--jump-threading",
      "--instnamer",
      "--inline",
      "--newgvn",
      "--instcombine",
      "--forceattrs",
      "--reassociate",
      "--lower-widenable-condition",
      "--constmerge",
      "--tailcallelim",
      "--loweratomic"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}