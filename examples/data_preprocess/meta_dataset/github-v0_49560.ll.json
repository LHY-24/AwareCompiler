{
  "program_id": "github-v0_49560.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 16,
    "oneSuccessor": 27,
    "twoPred": 8,
    "twoPredOneSuc": 4,
    "twoEach": 4,
    "twoSuccessor": 20,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 0,
    "BranchCount": 46,
    "returnInt": 16,
    "CriticalCount": 3,
    "NumEdges": 67,
    "const32Bit": 53,
    "const64Bit": 9,
    "numConstZeroes": 29,
    "numConstOnes": 23,
    "UncondBranches": 27,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 51,
    "NumBitCastInst": 2,
    "NumBrInst": 46,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 89,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 10,
    "NumSelectInst": 3,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 53,
    "TotalInsts": 283,
    "TotalMemInst": 185,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 117
  },
  "baseline_oz_instcount": 283,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--loop-instsimplify",
    "--inline",
    "--simplifycfg",
    "--loop-deletion",
    "--sroa",
    "--bdce",
    "--correlated-propagation",
    "--loop-reroll",
    "--slsr",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-idiom",
          "--argpromotion",
          "--gvn",
          "--always-inline",
          "--sccp",
          "--alignment-from-assumptions",
          "--loop-sink",
          "--flattencfg",
          "--strip",
          "--lower-expect",
          "--early-cse",
          "--ipsccp",
          "--loop-load-elim",
          "--sroa",
          "--lower-widenable-condition",
          "--elim-avail-extern",
          "--slp-vectorizer",
          "--sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-idiom",
      "--argpromotion",
      "--gvn",
      "--always-inline",
      "--sccp",
      "--alignment-from-assumptions",
      "--loop-sink",
      "--flattencfg",
      "--strip",
      "--lower-expect",
      "--early-cse",
      "--ipsccp",
      "--loop-load-elim",
      "--sroa",
      "--lower-widenable-condition",
      "--elim-avail-extern",
      "--slp-vectorizer",
      "--sink"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}