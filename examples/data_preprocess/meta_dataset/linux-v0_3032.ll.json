{
  "program_id": "linux-v0_3032.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 49,
    "onePredOneSuc": 39,
    "onePredTwoSuc": 7,
    "oneSuccessor": 45,
    "twoPred": 17,
    "twoPredOneSuc": 3,
    "twoEach": 6,
    "twoSuccessor": 23,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 86,
    "BeginPhi": 1,
    "BranchCount": 68,
    "returnInt": 17,
    "CriticalCount": 10,
    "NumEdges": 104,
    "const32Bit": 206,
    "const64Bit": 11,
    "numConstZeroes": 75,
    "numConstOnes": 61,
    "UncondBranches": 45,
    "binaryConstArg": 38,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 41,
    "NumAndInst": 20,
    "BlockMid": 3,
    "BlockLow": 84,
    "NumBitCastInst": 0,
    "NumBrInst": 68,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 23,
    "NumICmpInst": 27,
    "NumLShrInst": 0,
    "NumLoadInst": 123,
    "NumMulInst": 0,
    "NumOrInst": 18,
    "NumPHIInst": 1,
    "NumRetInst": 16,
    "NumSExtInst": 0,
    "NumSelectInst": 4,
    "NumShlInst": 2,
    "NumStoreInst": 94,
    "NumSubInst": 0,
    "NumTruncInst": 17,
    "NumXorInst": 1,
    "NumZExtInst": 18,
    "TotalBlocks": 87,
    "TotalInsts": 494,
    "TotalMemInst": 299,
    "TotalFuncs": 18,
    "ArgsPhi": 2,
    "testUnary": 199
  },
  "baseline_oz_instcount": 494,
  "knowledge_base_entry": [
    "--mergefunc",
    "--early-cse-memssa",
    "--slsr",
    "--simplifycfg",
    "--mem2reg",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--gvn-hoist",
    "--jump-threading",
    "--nary-reassociate",
    "--ipsccp",
    "--flattencfg",
    "--instcombine",
    "--mergefunc",
    "--early-cse-memssa",
    "--slsr",
    "--simplifycfg",
    "--mem2reg",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--gvn-hoist",
    "--jump-threading",
    "--nary-reassociate",
    "--ipsccp",
    "--flattencfg",
    "--instcombine",
    "--mergefunc",
    "--sroa",
    "--instcombine",
    "--sccp",
    "--simplifycfg",
    "-loop-reduce",
    "--simplifycfg",
    "--loop-simplifycfg",
    "--mergefunc",
    "--gvn-hoist",
    "--early-cse-memssa",
    "--slsr",
    "--simplifycfg",
    "--mem2reg",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--gvn-hoist",
    "--aggressive-instcombine",
    "--loweratomic",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-instsimplify",
          "--gvn-hoist",
          "--aggressive-instcombine",
          "--lowerinvoke",
          "--deadargelim",
          "--sccp",
          "--loop-unroll-and-jam",
          "--loop-deletion",
          "--simple-loop-unswitch",
          "-loop-reduce",
          "--mergefunc",
          "--libcalls-shrinkwrap",
          "--cross-dso-cfi",
          "--loop-interchange",
          "--strip-dead-prototypes"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-instsimplify",
      "--gvn-hoist",
      "--aggressive-instcombine",
      "--lowerinvoke",
      "--deadargelim",
      "--sccp",
      "--loop-unroll-and-jam",
      "--loop-deletion",
      "--simple-loop-unswitch",
      "-loop-reduce",
      "--mergefunc",
      "--libcalls-shrinkwrap",
      "--cross-dso-cfi",
      "--loop-interchange",
      "--strip-dead-prototypes"
    ],
    "performance_vs_Oz": "+4.3%"
  }
}