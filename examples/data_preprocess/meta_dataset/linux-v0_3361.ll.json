{
  "program_id": "linux-v0_3361.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 39,
    "onePredOneSuc": 31,
    "onePredTwoSuc": 6,
    "oneSuccessor": 36,
    "twoPred": 10,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 15,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 92,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 25,
    "CriticalCount": 5,
    "NumEdges": 73,
    "const32Bit": 466,
    "const64Bit": 37,
    "numConstZeroes": 223,
    "numConstOnes": 141,
    "UncondBranches": 36,
    "binaryConstArg": 17,
    "NumAShrInst": 0,
    "NumAddInst": 16,
    "NumAllocaInst": 103,
    "NumAndInst": 0,
    "BlockMid": 17,
    "BlockLow": 75,
    "NumBitCastInst": 25,
    "NumBrInst": 51,
    "NumCallInst": 74,
    "NumGetElementPtrInst": 164,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 314,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 40,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 147,
    "NumSubInst": 2,
    "NumTruncInst": 20,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 92,
    "TotalInsts": 989,
    "TotalMemInst": 802,
    "TotalFuncs": 59,
    "ArgsPhi": 0,
    "testUnary": 476
  },
  "baseline_oz_instcount": 989,
  "knowledge_base_entry": [
    "--gvn-hoist",
    "--loop-reroll",
    "--instsimplify",
    "--jump-threading",
    "--instsimplify",
    "--inline",
    "--loop-instsimplify",
    "--reassociate",
    "--globalopt",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--gvn",
    "--instcombine",
    "--loop-deletion",
    "--gvn",
    "--elim-avail-extern",
    "--bdce",
    "--reassociate",
    "--sccp",
    "--inline",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--globalsplit",
          "--loweratomic",
          "--ipconstprop",
          "--loop-simplify",
          "--inferattrs",
          "--loop-unroll-and-jam",
          "--redundant-dbg-inst-elim",
          "--lower-widenable-condition",
          "--sccp",
          "--inline",
          "--loop-sink",
          "--sroa",
          "--consthoist",
          "--barrier",
          "--strip-debug-declare",
          "--callsite-splitting",
          "--aggressive-instcombine",
          "--licm",
          "--div-rem-pairs",
          "--load-store-vectorizer",
          "--separate-const-offset-from-gep",
          "--insert-gcov-profiling",
          "--mem2reg",
          "--indvars",
          "--rewrite-statepoints-for-gc",
          "--coro-cleanup"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--globalsplit",
      "--loweratomic",
      "--ipconstprop",
      "--loop-simplify",
      "--inferattrs",
      "--loop-unroll-and-jam",
      "--redundant-dbg-inst-elim",
      "--lower-widenable-condition",
      "--sccp",
      "--inline",
      "--loop-sink",
      "--sroa",
      "--consthoist",
      "--barrier",
      "--strip-debug-declare",
      "--callsite-splitting",
      "--aggressive-instcombine",
      "--licm",
      "--div-rem-pairs",
      "--load-store-vectorizer",
      "--separate-const-offset-from-gep",
      "--insert-gcov-profiling",
      "--mem2reg",
      "--indvars",
      "--rewrite-statepoints-for-gc",
      "--coro-cleanup"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}