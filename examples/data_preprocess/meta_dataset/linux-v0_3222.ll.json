{
  "program_id": "linux-v0_3222.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 1,
    "onePredOneSuc": 1,
    "onePredTwoSuc": 0,
    "oneSuccessor": 1,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 5,
    "BeginPhi": 0,
    "BranchCount": 2,
    "returnInt": 0,
    "CriticalCount": 1,
    "NumEdges": 3,
    "const32Bit": 60,
    "const64Bit": 3,
    "numConstZeroes": 30,
    "numConstOnes": 11,
    "UncondBranches": 1,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 8,
    "NumAndInst": 3,
    "BlockMid": 1,
    "BlockLow": 4,
    "NumBitCastInst": 6,
    "NumBrInst": 2,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 21,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 19,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 17,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 5,
    "TotalInsts": 90,
    "TotalMemInst": 67,
    "TotalFuncs": 4,
    "ArgsPhi": 0,
    "testUnary": 38
  },
  "baseline_oz_instcount": 90,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--nary-reassociate",
    "--inline",
    "--slp-vectorizer",
    "--simplifycfg",
    "--adce",
    "--mergefunc",
    "--reassociate",
    "--licm",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--mergereturn",
          "--dce",
          "--loop-unroll-and-jam",
          "--div-rem-pairs",
          "--licm",
          "--mem2reg",
          "--sancov",
          "--sccp",
          "--cross-dso-cfi",
          "--lower-expect",
          "--aggressive-instcombine",
          "--loop-idiom",
          "--loop-simplifycfg",
          "--simple-loop-unswitch",
          "--globalopt",
          "--loop-guard-widening",
          "--gvn",
          "--inline",
          "--correlated-propagation",
          "--loop-distribute",
          "--forceattrs",
          "--inject-tli-mappings",
          "--coro-early"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--mergereturn",
      "--dce",
      "--loop-unroll-and-jam",
      "--div-rem-pairs",
      "--licm",
      "--mem2reg",
      "--sancov",
      "--sccp",
      "--cross-dso-cfi",
      "--lower-expect",
      "--aggressive-instcombine",
      "--loop-idiom",
      "--loop-simplifycfg",
      "--simple-loop-unswitch",
      "--globalopt",
      "--loop-guard-widening",
      "--gvn",
      "--inline",
      "--correlated-propagation",
      "--loop-distribute",
      "--forceattrs",
      "--inject-tli-mappings",
      "--coro-early"
    ],
    "performance_vs_Oz": "+3.3%"
  }
}