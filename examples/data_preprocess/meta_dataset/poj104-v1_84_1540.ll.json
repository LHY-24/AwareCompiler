{
  "program_id": "poj104-v1_84_1540.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 2,
    "oneSuccessor": 7,
    "twoPred": 5,
    "twoPredOneSuc": 3,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 4,
    "CriticalCount": 4,
    "NumEdges": 17,
    "const32Bit": 14,
    "const64Bit": 16,
    "numConstZeroes": 2,
    "numConstOnes": 10,
    "UncondBranches": 7,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 9,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 14,
    "NumBitCastInst": 16,
    "NumBrInst": 12,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 24,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 15,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 15,
    "TotalInsts": 107,
    "TotalMemInst": 70,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 49
  },
  "baseline_oz_instcount": 52,
  "knowledge_base_entry": [
    "--functionattrs",
    "--die",
    "--sroa",
    "--instcombine",
    "--sccp",
    "--sroa",
    "--jump-threading",
    "--simplifycfg",
    "--adce",
    "--dse",
    "--newgvn",
    "--loop-rotate",
    "--mem2reg",
    "--gvn-hoist",
    "--loop-deletion",
    "--sccp",
    "--inline",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--inline",
    "--aggressive-instcombine",
    "--licm",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--jump-threading",
          "--strip-nondebug",
          "--early-cse-memssa",
          "--lower-matrix-intrinsics",
          "--loop-sink",
          "--lowerswitch",
          "--mergeicmps",
          "--loop-data-prefetch",
          "--simple-loop-unswitch",
          "--deadargelim",
          "--lower-guard-intrinsic",
          "--strip-dead-prototypes",
          "--loop-interchange",
          "--nary-reassociate",
          "--lower-constant-intrinsics",
          "--instcombine",
          "--infer-address-spaces",
          "--ipconstprop",
          "--licm",
          "--loop-vectorize",
          "--dce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--jump-threading",
      "--strip-nondebug",
      "--early-cse-memssa",
      "--lower-matrix-intrinsics",
      "--loop-sink",
      "--lowerswitch",
      "--mergeicmps",
      "--loop-data-prefetch",
      "--simple-loop-unswitch",
      "--deadargelim",
      "--lower-guard-intrinsic",
      "--strip-dead-prototypes",
      "--loop-interchange",
      "--nary-reassociate",
      "--lower-constant-intrinsics",
      "--instcombine",
      "--infer-address-spaces",
      "--ipconstprop",
      "--licm",
      "--loop-vectorize",
      "--dce"
    ],
    "performance_vs_Oz": "+1.9%"
  }
}