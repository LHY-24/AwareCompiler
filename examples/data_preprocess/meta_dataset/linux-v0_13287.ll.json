{
  "program_id": "linux-v0_13287.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 73,
    "onePredOneSuc": 53,
    "onePredTwoSuc": 19,
    "oneSuccessor": 65,
    "twoPred": 35,
    "twoPredOneSuc": 10,
    "twoEach": 18,
    "twoSuccessor": 46,
    "morePreds": 3,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 124,
    "BeginPhi": 3,
    "BranchCount": 111,
    "returnInt": 34,
    "CriticalCount": 25,
    "NumEdges": 157,
    "const32Bit": 283,
    "const64Bit": 35,
    "numConstZeroes": 160,
    "numConstOnes": 78,
    "UncondBranches": 65,
    "binaryConstArg": 19,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 55,
    "NumAndInst": 7,
    "BlockMid": 11,
    "BlockLow": 116,
    "NumBitCastInst": 2,
    "NumBrInst": 111,
    "NumCallInst": 70,
    "NumGetElementPtrInst": 103,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 206,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 3,
    "NumRetInst": 16,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 82,
    "NumSubInst": 0,
    "NumTruncInst": 17,
    "NumXorInst": 0,
    "NumZExtInst": 48,
    "TotalBlocks": 127,
    "TotalInsts": 765,
    "TotalMemInst": 516,
    "TotalFuncs": 39,
    "ArgsPhi": 6,
    "testUnary": 331
  },
  "baseline_oz_instcount": 766,
  "knowledge_base_entry": [
    "--flattencfg",
    "--simplifycfg",
    "--sccp",
    "--jump-threading",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--sccp",
    "--jump-threading",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--lower-expect",
    "--instsimplify",
    "--mem2reg",
    "--aggressive-instcombine",
    "--inline",
    "--early-cse",
    "--ipsccp",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--canonicalize-aliases",
          "--newgvn",
          "--lower-matrix-intrinsics",
          "--libcalls-shrinkwrap",
          "--insert-gcov-profiling",
          "--lower-constant-intrinsics",
          "--barrier",
          "--div-rem-pairs",
          "--aggressive-instcombine",
          "--partial-inliner"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--canonicalize-aliases",
      "--newgvn",
      "--lower-matrix-intrinsics",
      "--libcalls-shrinkwrap",
      "--insert-gcov-profiling",
      "--lower-constant-intrinsics",
      "--barrier",
      "--div-rem-pairs",
      "--aggressive-instcombine",
      "--partial-inliner"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}