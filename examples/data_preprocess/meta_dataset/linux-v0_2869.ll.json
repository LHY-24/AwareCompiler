{
  "program_id": "linux-v0_2869.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 42,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 16,
    "oneSuccessor": 38,
    "twoPred": 25,
    "twoPredOneSuc": 12,
    "twoEach": 12,
    "twoSuccessor": 31,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 86,
    "BeginPhi": 0,
    "BranchCount": 69,
    "returnInt": 8,
    "CriticalCount": 24,
    "NumEdges": 100,
    "const32Bit": 255,
    "const64Bit": 8,
    "numConstZeroes": 121,
    "numConstOnes": 56,
    "UncondBranches": 38,
    "binaryConstArg": 31,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 43,
    "NumAndInst": 7,
    "BlockMid": 11,
    "BlockLow": 75,
    "NumBitCastInst": 9,
    "NumBrInst": 69,
    "NumCallInst": 44,
    "NumGetElementPtrInst": 81,
    "NumICmpInst": 33,
    "NumLShrInst": 2,
    "NumLoadInst": 178,
    "NumMulInst": 1,
    "NumOrInst": 12,
    "NumPHIInst": 0,
    "NumRetInst": 17,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 81,
    "NumSubInst": 4,
    "NumTruncInst": 13,
    "NumXorInst": 4,
    "NumZExtInst": 18,
    "TotalBlocks": 86,
    "TotalInsts": 629,
    "TotalMemInst": 427,
    "TotalFuncs": 33,
    "ArgsPhi": 0,
    "testUnary": 268
  },
  "baseline_oz_instcount": 571,
  "knowledge_base_entry": [
    "--slsr",
    "-loop-reduce",
    "--load-store-vectorizer",
    "--reassociate",
    "--inline",
    "--gvn",
    "--instsimplify",
    "--newgvn",
    "--flattencfg",
    "--aggressive-instcombine",
    "--globaldce",
    "--ipsccp",
    "--elim-avail-extern",
    "--globalopt",
    "--gvn-hoist",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--speculative-execution",
          "--inject-tli-mappings",
          "--gvn",
          "--loop-unroll",
          "--aggressive-instcombine",
          "--post-inline-ee-instrument",
          "--lower-expect",
          "--scalarizer",
          "--prune-eh",
          "--canonicalize-aliases",
          "--ipsccp",
          "--licm",
          "--loop-fusion",
          "--consthoist",
          "--instsimplify",
          "--hotcoldsplit",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--speculative-execution",
      "--inject-tli-mappings",
      "--gvn",
      "--loop-unroll",
      "--aggressive-instcombine",
      "--post-inline-ee-instrument",
      "--lower-expect",
      "--scalarizer",
      "--prune-eh",
      "--canonicalize-aliases",
      "--ipsccp",
      "--licm",
      "--loop-fusion",
      "--consthoist",
      "--instsimplify",
      "--hotcoldsplit",
      "--dse"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}