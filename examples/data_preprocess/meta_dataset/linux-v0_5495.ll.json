{
  "program_id": "linux-v0_5495.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 42,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 13,
    "oneSuccessor": 32,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 20,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 80,
    "BeginPhi": 0,
    "BranchCount": 52,
    "returnInt": 25,
    "CriticalCount": 5,
    "NumEdges": 72,
    "const32Bit": 277,
    "const64Bit": 31,
    "numConstZeroes": 122,
    "numConstOnes": 122,
    "UncondBranches": 32,
    "binaryConstArg": 49,
    "NumAShrInst": 1,
    "NumAddInst": 20,
    "NumAllocaInst": 77,
    "NumAndInst": 3,
    "BlockMid": 13,
    "BlockLow": 67,
    "NumBitCastInst": 15,
    "NumBrInst": 52,
    "NumCallInst": 54,
    "NumGetElementPtrInst": 65,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 198,
    "NumMulInst": 5,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 28,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 8,
    "NumStoreInst": 102,
    "NumSubInst": 1,
    "NumTruncInst": 9,
    "NumXorInst": 9,
    "NumZExtInst": 16,
    "TotalBlocks": 80,
    "TotalInsts": 709,
    "TotalMemInst": 496,
    "TotalFuncs": 41,
    "ArgsPhi": 0,
    "testUnary": 329
  },
  "baseline_oz_instcount": 708,
  "knowledge_base_entry": [
    "--sccp",
    "--loop-instsimplify",
    "--reassociate",
    "--ipsccp",
    "--die",
    "--mergefunc",
    "--mem2reg",
    "--adce",
    "--ipsccp",
    "--dce",
    "--lower-expect",
    "--instsimplify",
    "--aggressive-instcombine",
    "--flattencfg",
    "--simplifycfg",
    "--loop-instsimplify",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--coro-split",
          "--ee-instrument",
          "--flattencfg",
          "--instnamer",
          "--coro-early",
          "--mergeicmps",
          "--slp-vectorizer",
          "--add-discriminators",
          "--globalsplit",
          "--speculative-execution",
          "--mergefunc",
          "--elim-avail-extern",
          "--jump-threading",
          "--tailcallelim",
          "--rewrite-statepoints-for-gc",
          "--ipconstprop",
          "--ipsccp",
          "--loop-simplifycfg",
          "--strip-nondebug",
          "--loop-simplify",
          "--lower-widenable-condition",
          "--float2int",
          "--strip-dead-prototypes",
          "--coro-cleanup",
          "--strip-debug-declare"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--coro-split",
      "--ee-instrument",
      "--flattencfg",
      "--instnamer",
      "--coro-early",
      "--mergeicmps",
      "--slp-vectorizer",
      "--add-discriminators",
      "--globalsplit",
      "--speculative-execution",
      "--mergefunc",
      "--elim-avail-extern",
      "--jump-threading",
      "--tailcallelim",
      "--rewrite-statepoints-for-gc",
      "--ipconstprop",
      "--ipsccp",
      "--loop-simplifycfg",
      "--strip-nondebug",
      "--loop-simplify",
      "--lower-widenable-condition",
      "--float2int",
      "--strip-dead-prototypes",
      "--coro-cleanup",
      "--strip-debug-declare"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}