{
  "program_id": "poj104-v1_52_2383.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 9,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 0,
    "oneSuccessor": 9,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 15,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 6,
    "CriticalCount": 0,
    "NumEdges": 15,
    "const32Bit": 18,
    "const64Bit": 16,
    "numConstZeroes": 8,
    "numConstOnes": 14,
    "UncondBranches": 9,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 7,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 13,
    "NumBitCastInst": 12,
    "NumBrInst": 12,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 22,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 12,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 15,
    "TotalInsts": 105,
    "TotalMemInst": 67,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 43
  },
  "baseline_oz_instcount": 60,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--mem2reg",
    "--die",
    "--simplifycfg",
    "--mem2reg",
    "--prune-eh",
    "--inline",
    "--aggressive-instcombine",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--dse",
    "--mldst-motion",
    "--early-cse",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--guard-widening",
          "--mem2reg",
          "--early-cse-memssa",
          "--elim-avail-extern",
          "--lowerinvoke",
          "--simplifycfg",
          "--flattencfg",
          "--lower-constant-intrinsics",
          "--insert-gcov-profiling",
          "--coro-elide",
          "--lower-expect"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--guard-widening",
      "--mem2reg",
      "--early-cse-memssa",
      "--elim-avail-extern",
      "--lowerinvoke",
      "--simplifycfg",
      "--flattencfg",
      "--lower-constant-intrinsics",
      "--insert-gcov-profiling",
      "--coro-elide",
      "--lower-expect"
    ],
    "performance_vs_Oz": "+1.7%"
  }
}