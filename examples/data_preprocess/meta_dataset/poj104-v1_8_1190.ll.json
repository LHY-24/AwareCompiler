{
  "program_id": "poj104-v1_8_1190.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 26,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 2,
    "oneSuccessor": 26,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 8,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 42,
    "BeginPhi": 0,
    "BranchCount": 36,
    "returnInt": 7,
    "CriticalCount": 2,
    "NumEdges": 46,
    "const32Bit": 37,
    "const64Bit": 35,
    "numConstZeroes": 14,
    "numConstOnes": 30,
    "UncondBranches": 26,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 19,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 36,
    "NumBitCastInst": 28,
    "NumBrInst": 36,
    "NumCallInst": 40,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 74,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 42,
    "TotalInsts": 287,
    "TotalMemInst": 181,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 137
  },
  "baseline_oz_instcount": 127,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--early-cse",
    "--instsimplify",
    "--sroa",
    "--nary-reassociate",
    "--ipsccp",
    "--instsimplify",
    "--dce",
    "--sccp",
    "--loop-deletion",
    "--sroa",
    "--nary-reassociate",
    "--ipsccp",
    "--instsimplify",
    "--dce",
    "--slp-vectorizer",
    "--dce",
    "--slp-vectorizer",
    "--bdce",
    "--early-cse-memssa",
    "--newgvn",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--load-store-vectorizer",
    "--reassociate",
    "--sroa",
    "--prune-eh",
    "--lower-expect",
    "--simplifycfg",
    "--die",
    "--early-cse-memssa",
    "--mldst-motion",
    "--newgvn",
    "--ipsccp",
    "--sroa",
    "--slp-vectorizer",
    "--sroa",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--lower-constant-intrinsics",
          "--barrier",
          "--constprop",
          "--dce",
          "--loop-unroll",
          "--coro-early",
          "--bdce",
          "--loop-simplifycfg",
          "--callsite-splitting",
          "--infer-address-spaces",
          "--jump-threading",
          "--prune-eh",
          "--early-cse-memssa",
          "--strip-dead-prototypes",
          "--slp-vectorizer",
          "--forceattrs",
          "--consthoist",
          "--correlated-propagation",
          "--deadargelim",
          "--instcombine",
          "--simplifycfg",
          "--coro-split",
          "--dse",
          "--loop-guard-widening",
          "--loop-sink",
          "--loop-predication",
          "--scalarizer",
          "--ipsccp",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--lower-constant-intrinsics",
      "--barrier",
      "--constprop",
      "--dce",
      "--loop-unroll",
      "--coro-early",
      "--bdce",
      "--loop-simplifycfg",
      "--callsite-splitting",
      "--infer-address-spaces",
      "--jump-threading",
      "--prune-eh",
      "--early-cse-memssa",
      "--strip-dead-prototypes",
      "--slp-vectorizer",
      "--forceattrs",
      "--consthoist",
      "--correlated-propagation",
      "--deadargelim",
      "--instcombine",
      "--simplifycfg",
      "--coro-split",
      "--dse",
      "--loop-guard-widening",
      "--loop-sink",
      "--loop-predication",
      "--scalarizer",
      "--ipsccp",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+7.9%"
  }
}