{
  "program_id": "poj104-v1_80_91.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 84,
    "onePredOneSuc": 68,
    "onePredTwoSuc": 12,
    "oneSuccessor": 84,
    "twoPred": 18,
    "twoPredOneSuc": 11,
    "twoEach": 6,
    "twoSuccessor": 18,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 109,
    "BeginPhi": 0,
    "BranchCount": 102,
    "returnInt": 4,
    "CriticalCount": 4,
    "NumEdges": 172,
    "const32Bit": 113,
    "const64Bit": 298,
    "numConstZeroes": 26,
    "numConstOnes": 35,
    "UncondBranches": 84,
    "binaryConstArg": 282,
    "NumAShrInst": 0,
    "NumAddInst": 318,
    "NumAllocaInst": 15,
    "NumAndInst": 0,
    "BlockMid": 14,
    "BlockLow": 95,
    "NumBitCastInst": 28,
    "NumBrInst": 102,
    "NumCallInst": 34,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 16,
    "NumLShrInst": 0,
    "NumLoadInst": 127,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 48,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 78,
    "NumSubInst": 1,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 109,
    "TotalInsts": 787,
    "TotalMemInst": 254,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 219
  },
  "baseline_oz_instcount": 213,
  "knowledge_base_entry": [
    "--mem2reg",
    "--elim-avail-extern",
    "--adce",
    "--simplifycfg",
    "--globalopt",
    "--reassociate",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--early-cse",
    "--newgvn",
    "--mergefunc",
    "--die",
    "--simplifycfg",
    "--bdce",
    "--inline",
    "--instsimplify",
    "--gvn-hoist",
    "--newgvn",
    "--ipsccp",
    "--elim-avail-extern",
    "--prune-eh",
    "--simplifycfg",
    "--lower-expect",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--load-store-vectorizer",
    "--instcombine",
    "--loop-instsimplify",
    "--simplifycfg",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--dse",
    "--reassociate",
    "--mergefunc",
    "--ipsccp",
    "--globaldce",
    "--ipsccp",
    "--correlated-propagation",
    "--adce",
    "--bdce",
    "--simplifycfg",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--inline",
    "--dse",
    "--inline",
    "--mem2reg",
    "--aggressive-instcombine",
    "--newgvn",
    "-loop-reduce",
    "--mergefunc",
    "--sroa",
    "--bdce",
    "--inline",
    "--instsimplify",
    "--gvn-hoist",
    "--newgvn",
    "--ipsccp",
    "--elim-avail-extern",
    "--mergefunc",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--mem2reg",
    "--load-store-vectorizer",
    "--early-cse-memssa",
    "--prune-eh",
    "--gvn-hoist",
    "--mem2reg",
    "--newgvn",
    "-loop-reduce",
    "--mergefunc",
    "--sroa",
    "--bdce",
    "--inline",
    "--instsimplify",
    "--gvn-hoist",
    "--newgvn",
    "--ipsccp",
    "--globaldce",
    "--ipsccp",
    "--correlated-propagation",
    "--adce",
    "--bdce",
    "--simplifycfg",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--inline",
    "--dse",
    "--inline",
    "--mem2reg",
    "--aggressive-instcombine",
    "--newgvn",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--instcombine",
    "--loop-instsimplify",
    "--simplifycfg",
    "--slp-vectorizer",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--dse",
    "--gvn-hoist",
    "--correlated-propagation",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn-hoist",
          "--sancov",
          "--mem2reg",
          "--loop-vectorize",
          "-loop-reduce",
          "--lower-matrix-intrinsics",
          "--called-value-propagation",
          "--rewrite-statepoints-for-gc",
          "--early-cse-memssa",
          "--simplifycfg",
          "--instcombine",
          "--ee-instrument"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn-hoist",
      "--sancov",
      "--mem2reg",
      "--loop-vectorize",
      "-loop-reduce",
      "--lower-matrix-intrinsics",
      "--called-value-propagation",
      "--rewrite-statepoints-for-gc",
      "--early-cse-memssa",
      "--simplifycfg",
      "--instcombine",
      "--ee-instrument"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}