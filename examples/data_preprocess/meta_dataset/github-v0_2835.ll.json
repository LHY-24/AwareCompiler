{
  "program_id": "github-v0_2835.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 50,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 6,
    "oneSuccessor": 48,
    "twoPred": 27,
    "twoPredOneSuc": 5,
    "twoEach": 20,
    "twoSuccessor": 28,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 83,
    "BeginPhi": 0,
    "BranchCount": 75,
    "returnInt": 4,
    "CriticalCount": 14,
    "NumEdges": 104,
    "const32Bit": 104,
    "const64Bit": 40,
    "numConstZeroes": 41,
    "numConstOnes": 82,
    "UncondBranches": 48,
    "binaryConstArg": 57,
    "NumAShrInst": 0,
    "NumAddInst": 24,
    "NumAllocaInst": 41,
    "NumAndInst": 5,
    "BlockMid": 11,
    "BlockLow": 72,
    "NumBitCastInst": 3,
    "NumBrInst": 75,
    "NumCallInst": 11,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 25,
    "NumLShrInst": 1,
    "NumLoadInst": 215,
    "NumMulInst": 24,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 81,
    "NumSubInst": 14,
    "NumTruncInst": 15,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 83,
    "TotalInsts": 669,
    "TotalMemInst": 396,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 308
  },
  "baseline_oz_instcount": 670,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--jump-threading",
    "--memcpyopt",
    "--early-cse",
    "--load-store-vectorizer",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dse",
          "--simple-loop-unswitch",
          "--slsr",
          "--loop-versioning",
          "--sccp",
          "--mergefunc",
          "--hotcoldsplit",
          "--loop-guard-widening",
          "--loop-predication",
          "--called-value-propagation",
          "--div-rem-pairs",
          "--loop-vectorize",
          "--lower-constant-intrinsics",
          "--loop-reroll",
          "--globalsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dse",
      "--simple-loop-unswitch",
      "--slsr",
      "--loop-versioning",
      "--sccp",
      "--mergefunc",
      "--hotcoldsplit",
      "--loop-guard-widening",
      "--loop-predication",
      "--called-value-propagation",
      "--div-rem-pairs",
      "--loop-vectorize",
      "--lower-constant-intrinsics",
      "--loop-reroll",
      "--globalsplit"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}