{
  "program_id": "github-v0_4466.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 35,
    "const64Bit": 0,
    "numConstZeroes": 2,
    "numConstOnes": 33,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 33,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 18,
    "NumBitCastInst": 3,
    "NumBrInst": 0,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 15,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 33,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 19,
    "TotalInsts": 129,
    "TotalMemInst": 100,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 58
  },
  "baseline_oz_instcount": 129,
  "knowledge_base_entry": [
    "--simplifycfg",
    "--loop-instsimplify",
    "--mergefunc",
    "--mergefunc",
    "--mem2reg",
    "--ipsccp",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--inline",
    "--newgvn",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--loop-reroll",
    "--sroa",
    "-loop-reduce",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--mergefunc",
          "--partial-inliner",
          "--inferattrs",
          "--argpromotion",
          "--strip-dead-prototypes",
          "--break-crit-edges",
          "--partially-inline-libcalls",
          "--callsite-splitting",
          "--inject-tli-mappings",
          "--slp-vectorizer",
          "--lowerinvoke",
          "--strip-nondebug",
          "--loweratomic",
          "--coro-elide",
          "-loop-reduce",
          "--indvars",
          "--jump-threading",
          "--deadargelim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+36.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--mergefunc",
      "--partial-inliner",
      "--inferattrs",
      "--argpromotion",
      "--strip-dead-prototypes",
      "--break-crit-edges",
      "--partially-inline-libcalls",
      "--callsite-splitting",
      "--inject-tli-mappings",
      "--slp-vectorizer",
      "--lowerinvoke",
      "--strip-nondebug",
      "--loweratomic",
      "--coro-elide",
      "-loop-reduce",
      "--indvars",
      "--jump-threading",
      "--deadargelim"
    ],
    "performance_vs_Oz": "+36.4%"
  }
}