{
  "program_id": "linux-v0_596.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 8,
    "BeginPhi": 0,
    "BranchCount": 6,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 8,
    "const32Bit": 45,
    "const64Bit": 13,
    "numConstZeroes": 17,
    "numConstOnes": 35,
    "UncondBranches": 4,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 22,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 4,
    "NumBitCastInst": 0,
    "NumBrInst": 6,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 41,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 106,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 26,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 47,
    "NumSubInst": 11,
    "NumTruncInst": 4,
    "NumXorInst": 7,
    "NumZExtInst": 19,
    "TotalBlocks": 8,
    "TotalInsts": 297,
    "TotalMemInst": 218,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 177
  },
  "baseline_oz_instcount": 297,
  "knowledge_base_entry": [
    "--instsimplify",
    "--die",
    "--licm",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--early-cse-memssa",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerswitch",
          "--loop-unswitch",
          "--mem2reg",
          "--flattencfg",
          "--loop-unroll",
          "--partially-inline-libcalls",
          "--called-value-propagation",
          "--loop-distribute",
          "--loop-reroll",
          "--loop-versioning",
          "--inline",
          "--aggressive-instcombine",
          "--speculative-execution",
          "--mergefunc",
          "--name-anon-globals",
          "--mergereturn",
          "--loop-load-elim",
          "--libcalls-shrinkwrap",
          "--break-crit-edges",
          "--simplifycfg",
          "--globalsplit",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerswitch",
      "--loop-unswitch",
      "--mem2reg",
      "--flattencfg",
      "--loop-unroll",
      "--partially-inline-libcalls",
      "--called-value-propagation",
      "--loop-distribute",
      "--loop-reroll",
      "--loop-versioning",
      "--inline",
      "--aggressive-instcombine",
      "--speculative-execution",
      "--mergefunc",
      "--name-anon-globals",
      "--mergereturn",
      "--loop-load-elim",
      "--libcalls-shrinkwrap",
      "--break-crit-edges",
      "--simplifycfg",
      "--globalsplit",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+4.0%"
  }
}