{
  "program_id": "github-v0_24.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 5,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 0,
    "BranchCount": 8,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 11,
    "const32Bit": 13,
    "const64Bit": 0,
    "numConstZeroes": 5,
    "numConstOnes": 6,
    "UncondBranches": 5,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 4,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 8,
    "NumCallInst": 3,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 5,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 5,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 9,
    "TotalInsts": 31,
    "TotalMemInst": 17,
    "TotalFuncs": 3,
    "ArgsPhi": 0,
    "testUnary": 9
  },
  "baseline_oz_instcount": 32,
  "knowledge_base_entry": [
    "--globalopt",
    "--sroa",
    "--sccp",
    "--sroa",
    "--elim-avail-extern",
    "--flattencfg",
    "--newgvn",
    "--correlated-propagation",
    "--gvn-hoist",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergefunc",
          "--loweratomic",
          "--adce",
          "--globalsplit",
          "--gvn",
          "--always-inline",
          "--lower-guard-intrinsic",
          "--lower-widenable-condition",
          "--inject-tli-mappings",
          "--partial-inliner",
          "--lowerinvoke",
          "--post-inline-ee-instrument",
          "--insert-gcov-profiling",
          "--cross-dso-cfi",
          "--slsr",
          "--strip-debug-declare",
          "--tailcallelim",
          "--mem2reg",
          "--guard-widening",
          "--bdce",
          "--mldst-motion",
          "--strip"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergefunc",
      "--loweratomic",
      "--adce",
      "--globalsplit",
      "--gvn",
      "--always-inline",
      "--lower-guard-intrinsic",
      "--lower-widenable-condition",
      "--inject-tli-mappings",
      "--partial-inliner",
      "--lowerinvoke",
      "--post-inline-ee-instrument",
      "--insert-gcov-profiling",
      "--cross-dso-cfi",
      "--slsr",
      "--strip-debug-declare",
      "--tailcallelim",
      "--mem2reg",
      "--guard-widening",
      "--bdce",
      "--mldst-motion",
      "--strip"
    ],
    "performance_vs_Oz": "+3.1%"
  }
}