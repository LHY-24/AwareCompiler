{
  "program_id": "linux-v0_2725.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 73,
    "onePredOneSuc": 46,
    "onePredTwoSuc": 27,
    "oneSuccessor": 59,
    "twoPred": 20,
    "twoPredOneSuc": 12,
    "twoEach": 6,
    "twoSuccessor": 39,
    "morePreds": 5,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 115,
    "BeginPhi": 1,
    "BranchCount": 98,
    "returnInt": 29,
    "CriticalCount": 20,
    "NumEdges": 137,
    "const32Bit": 392,
    "const64Bit": 12,
    "numConstZeroes": 151,
    "numConstOnes": 116,
    "UncondBranches": 59,
    "binaryConstArg": 79,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 65,
    "NumAndInst": 32,
    "BlockMid": 9,
    "BlockLow": 107,
    "NumBitCastInst": 7,
    "NumBrInst": 98,
    "NumCallInst": 86,
    "NumGetElementPtrInst": 92,
    "NumICmpInst": 47,
    "NumLShrInst": 7,
    "NumLoadInst": 304,
    "NumMulInst": 5,
    "NumOrInst": 15,
    "NumPHIInst": 1,
    "NumRetInst": 18,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 12,
    "NumStoreInst": 127,
    "NumSubInst": 4,
    "NumTruncInst": 3,
    "NumXorInst": 16,
    "NumZExtInst": 12,
    "TotalBlocks": 116,
    "TotalInsts": 979,
    "TotalMemInst": 674,
    "TotalFuncs": 37,
    "ArgsPhi": 3,
    "testUnary": 403
  },
  "baseline_oz_instcount": 980,
  "knowledge_base_entry": [
    "--inferattrs",
    "--dse",
    "--slp-vectorizer",
    "--instcombine",
    "--flattencfg",
    "--simplifycfg",
    "--globalopt",
    "--gvn-hoist",
    "--jump-threading",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--cross-dso-cfi",
          "--lower-guard-intrinsic",
          "--lcssa",
          "--attributor",
          "--lowerswitch",
          "--sancov",
          "--gvn-hoist",
          "--globalopt",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--cross-dso-cfi",
      "--lower-guard-intrinsic",
      "--lcssa",
      "--attributor",
      "--lowerswitch",
      "--sancov",
      "--gvn-hoist",
      "--globalopt",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}