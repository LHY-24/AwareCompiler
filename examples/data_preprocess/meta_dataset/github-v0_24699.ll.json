{
  "program_id": "github-v0_24699.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 25,
    "onePredOneSuc": 11,
    "onePredTwoSuc": 8,
    "oneSuccessor": 19,
    "twoPred": 11,
    "twoPredOneSuc": 7,
    "twoEach": 3,
    "twoSuccessor": 13,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 43,
    "BeginPhi": 2,
    "BranchCount": 32,
    "returnInt": 11,
    "CriticalCount": 8,
    "NumEdges": 52,
    "const32Bit": 82,
    "const64Bit": 3,
    "numConstZeroes": 30,
    "numConstOnes": 43,
    "UncondBranches": 19,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 28,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 42,
    "NumBitCastInst": 0,
    "NumBrInst": 32,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 65,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 7,
    "NumSExtInst": 0,
    "NumSelectInst": 1,
    "NumShlInst": 0,
    "NumStoreInst": 38,
    "NumSubInst": 4,
    "NumTruncInst": 1,
    "NumXorInst": 1,
    "NumZExtInst": 3,
    "TotalBlocks": 45,
    "TotalInsts": 273,
    "TotalMemInst": 189,
    "TotalFuncs": 36,
    "ArgsPhi": 4,
    "testUnary": 99
  },
  "baseline_oz_instcount": 271,
  "knowledge_base_entry": [
    "--loop-simplifycfg",
    "--dse",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--sccp",
    "--globalopt",
    "--instsimplify",
    "--early-cse-memssa",
    "--licm",
    "--mem2reg",
    "--adce",
    "--sroa",
    "--mergefunc",
    "--aggressive-instcombine",
    "--dce",
    "--reassociate",
    "--prune-eh",
    "--gvn",
    "--flattencfg",
    "--mem2reg",
    "--ipsccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-guard-widening",
          "--loop-idiom",
          "--bdce",
          "--redundant-dbg-inst-elim",
          "--memcpyopt",
          "--loop-vectorize",
          "--newgvn",
          "--elim-avail-extern",
          "--loop-distribute",
          "--ipsccp",
          "--aggressive-instcombine",
          "--lowerinvoke",
          "--sancov",
          "--pgo-memop-opt",
          "--early-cse-memssa",
          "--infer-address-spaces",
          "--argpromotion",
          "--mldst-motion",
          "--strip-dead-prototypes",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-guard-widening",
      "--loop-idiom",
      "--bdce",
      "--redundant-dbg-inst-elim",
      "--memcpyopt",
      "--loop-vectorize",
      "--newgvn",
      "--elim-avail-extern",
      "--loop-distribute",
      "--ipsccp",
      "--aggressive-instcombine",
      "--lowerinvoke",
      "--sancov",
      "--pgo-memop-opt",
      "--early-cse-memssa",
      "--infer-address-spaces",
      "--argpromotion",
      "--mldst-motion",
      "--strip-dead-prototypes",
      "--globaldce"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}