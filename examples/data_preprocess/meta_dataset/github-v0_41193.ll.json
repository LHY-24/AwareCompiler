{
  "program_id": "github-v0_41193.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 86,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 40,
    "oneSuccessor": 70,
    "twoPred": 38,
    "twoPredOneSuc": 21,
    "twoEach": 14,
    "twoSuccessor": 62,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 137,
    "BeginPhi": 0,
    "BranchCount": 132,
    "returnInt": 7,
    "CriticalCount": 38,
    "NumEdges": 194,
    "const32Bit": 565,
    "const64Bit": 19,
    "numConstZeroes": 369,
    "numConstOnes": 109,
    "UncondBranches": 70,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 43,
    "NumAndInst": 2,
    "BlockMid": 18,
    "BlockLow": 119,
    "NumBitCastInst": 12,
    "NumBrInst": 132,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 226,
    "NumICmpInst": 66,
    "NumLShrInst": 0,
    "NumLoadInst": 332,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 118,
    "NumSubInst": 9,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 4,
    "TotalBlocks": 137,
    "TotalInsts": 997,
    "TotalMemInst": 745,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 405
  },
  "baseline_oz_instcount": 1002,
  "knowledge_base_entry": [
    "--functionattrs",
    "--instcombine",
    "--mergefunc",
    "--adce",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--lowerswitch",
          "--gvn",
          "--guard-widening",
          "--early-cse-memssa",
          "--infer-address-spaces",
          "--argpromotion",
          "--coro-split",
          "--slp-vectorizer",
          "--sccp",
          "--newgvn",
          "--scalarizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--lowerswitch",
      "--gvn",
      "--guard-widening",
      "--early-cse-memssa",
      "--infer-address-spaces",
      "--argpromotion",
      "--coro-split",
      "--slp-vectorizer",
      "--sccp",
      "--newgvn",
      "--scalarizer"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}