{
  "program_id": "github-v0_8001.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 44,
    "const64Bit": 47,
    "numConstZeroes": 44,
    "numConstOnes": 26,
    "UncondBranches": 13,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 5,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 8,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 38,
    "NumICmpInst": 7,
    "NumLShrInst": 4,
    "NumLoadInst": 55,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 24,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 17,
    "TotalBlocks": 24,
    "TotalInsts": 226,
    "TotalMemInst": 137,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 100
  },
  "baseline_oz_instcount": 226,
  "knowledge_base_entry": [
    "--instsimplify",
    "--loop-instsimplify",
    "--adce",
    "--ipsccp",
    "--dce",
    "--aggressive-instcombine",
    "--gvn",
    "--newgvn",
    "--sccp",
    "--instcombine",
    "--lower-expect",
    "--reassociate",
    "--slsr",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-dead-prototypes",
          "--sink",
          "--slp-vectorizer",
          "--reassociate",
          "--loop-data-prefetch",
          "--coro-cleanup",
          "--instnamer",
          "--strip-nondebug",
          "--lower-widenable-condition",
          "--reg2mem",
          "--nary-reassociate",
          "--elim-avail-extern",
          "--slsr",
          "--sroa",
          "--loop-sink",
          "--instcombine",
          "--gvn-hoist",
          "--libcalls-shrinkwrap",
          "--loop-vectorize",
          "--indvars",
          "--aggressive-instcombine",
          "--globalsplit",
          "--loop-unswitch",
          "--loop-simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-dead-prototypes",
      "--sink",
      "--slp-vectorizer",
      "--reassociate",
      "--loop-data-prefetch",
      "--coro-cleanup",
      "--instnamer",
      "--strip-nondebug",
      "--lower-widenable-condition",
      "--reg2mem",
      "--nary-reassociate",
      "--elim-avail-extern",
      "--slsr",
      "--sroa",
      "--loop-sink",
      "--instcombine",
      "--gvn-hoist",
      "--libcalls-shrinkwrap",
      "--loop-vectorize",
      "--indvars",
      "--aggressive-instcombine",
      "--globalsplit",
      "--loop-unswitch",
      "--loop-simplifycfg"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}