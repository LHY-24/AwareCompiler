{
  "program_id": "linux-v0_10785.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 9,
    "oneSuccessor": 27,
    "twoPred": 9,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 15,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 63,
    "BeginPhi": 0,
    "BranchCount": 42,
    "returnInt": 18,
    "CriticalCount": 6,
    "NumEdges": 57,
    "const32Bit": 205,
    "const64Bit": 14,
    "numConstZeroes": 86,
    "numConstOnes": 71,
    "UncondBranches": 27,
    "binaryConstArg": 18,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 60,
    "NumAndInst": 3,
    "BlockMid": 9,
    "BlockLow": 54,
    "NumBitCastInst": 15,
    "NumBrInst": 42,
    "NumCallInst": 42,
    "NumGetElementPtrInst": 69,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 146,
    "NumMulInst": 2,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 21,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 9,
    "NumStoreInst": 84,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 2,
    "NumZExtInst": 13,
    "TotalBlocks": 63,
    "TotalInsts": 545,
    "TotalMemInst": 401,
    "TotalFuncs": 37,
    "ArgsPhi": 0,
    "testUnary": 250
  },
  "baseline_oz_instcount": 545,
  "knowledge_base_entry": [
    "--tailcallelim",
    "--gvn",
    "--loop-simplifycfg",
    "--newgvn",
    "--correlated-propagation",
    "--die",
    "--mergefunc",
    "--gvn",
    "--simplifycfg",
    "--aggressive-instcombine",
    "--dse",
    "--instcombine",
    "--sccp",
    "--licm",
    "--licm",
    "--aggressive-instcombine",
    "--instsimplify",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--mergefunc",
    "-loop-reduce",
    "--indvars"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--loop-guard-widening",
          "--ipsccp",
          "--lower-expect",
          "--rpo-functionattrs",
          "--aggressive-instcombine",
          "--globalsplit",
          "--loop-vectorize",
          "--lower-matrix-intrinsics",
          "--reassociate",
          "--simplifycfg",
          "--irce",
          "--guard-widening",
          "--mergeicmps",
          "--sroa",
          "--constprop",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--loop-guard-widening",
      "--ipsccp",
      "--lower-expect",
      "--rpo-functionattrs",
      "--aggressive-instcombine",
      "--globalsplit",
      "--loop-vectorize",
      "--lower-matrix-intrinsics",
      "--reassociate",
      "--simplifycfg",
      "--irce",
      "--guard-widening",
      "--mergeicmps",
      "--sroa",
      "--constprop",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}