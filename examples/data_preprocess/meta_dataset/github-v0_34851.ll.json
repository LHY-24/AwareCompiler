{
  "program_id": "github-v0_34851.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 4,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 4,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 2,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 12,
    "BeginPhi": 0,
    "BranchCount": 6,
    "returnInt": 6,
    "CriticalCount": 0,
    "NumEdges": 8,
    "const32Bit": 107,
    "const64Bit": 33,
    "numConstZeroes": 79,
    "numConstOnes": 37,
    "UncondBranches": 4,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 23,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 7,
    "NumBitCastInst": 29,
    "NumBrInst": 6,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 52,
    "NumICmpInst": 2,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 29,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 28,
    "TotalBlocks": 12,
    "TotalInsts": 244,
    "TotalMemInst": 165,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 126
  },
  "baseline_oz_instcount": 240,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--instcombine",
    "--sroa",
    "--globalopt",
    "--sccp",
    "--mem2reg",
    "--die",
    "--mem2reg",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--mergefunc",
    "--reassociate",
    "--instsimplify",
    "--inline",
    "--loop-simplifycfg",
    "--globalopt",
    "--mergefunc",
    "--instcombine",
    "--loop-instsimplify",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--die",
          "--constmerge",
          "--mergereturn",
          "--lower-expect",
          "--sroa",
          "--called-value-propagation",
          "--coro-split",
          "--rpo-functionattrs",
          "--globaldce",
          "--globalopt",
          "--reassociate",
          "--attributor",
          "--redundant-dbg-inst-elim",
          "--loop-load-elim",
          "--mergefunc",
          "--loop-interchange",
          "--aggressive-instcombine",
          "--post-inline-ee-instrument",
          "--barrier",
          "--scalarizer",
          "--guard-widening",
          "--callsite-splitting",
          "--hotcoldsplit",
          "--libcalls-shrinkwrap",
          "--load-store-vectorizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+5.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--die",
      "--constmerge",
      "--mergereturn",
      "--lower-expect",
      "--sroa",
      "--called-value-propagation",
      "--coro-split",
      "--rpo-functionattrs",
      "--globaldce",
      "--globalopt",
      "--reassociate",
      "--attributor",
      "--redundant-dbg-inst-elim",
      "--loop-load-elim",
      "--mergefunc",
      "--loop-interchange",
      "--aggressive-instcombine",
      "--post-inline-ee-instrument",
      "--barrier",
      "--scalarizer",
      "--guard-widening",
      "--callsite-splitting",
      "--hotcoldsplit",
      "--libcalls-shrinkwrap",
      "--load-store-vectorizer"
    ],
    "performance_vs_Oz": "+5.0%"
  }
}