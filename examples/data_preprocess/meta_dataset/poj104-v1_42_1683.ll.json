{
  "program_id": "poj104-v1_42_1683.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 24,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 2,
    "oneSuccessor": 22,
    "twoPred": 8,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 9,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 0,
    "BranchCount": 31,
    "returnInt": 7,
    "CriticalCount": 2,
    "NumEdges": 40,
    "const32Bit": 59,
    "const64Bit": 27,
    "numConstZeroes": 19,
    "numConstOnes": 41,
    "UncondBranches": 22,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 8,
    "NumAllocaInst": 30,
    "NumAndInst": 0,
    "BlockMid": 2,
    "BlockLow": 44,
    "NumBitCastInst": 27,
    "NumBrInst": 31,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 16,
    "NumICmpInst": 9,
    "NumLShrInst": 0,
    "NumLoadInst": 65,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 40,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 46,
    "TotalInsts": 295,
    "TotalMemInst": 194,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 129
  },
  "baseline_oz_instcount": 87,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--memcpyopt",
    "--instcombine",
    "--loop-instsimplify",
    "--inline",
    "--sroa",
    "--early-cse",
    "--indvars",
    "--loop-fusion",
    "--gvn",
    "--elim-avail-extern",
    "--licm",
    "--instcombine",
    "--correlated-propagation",
    "--reassociate",
    "--early-cse",
    "--jump-threading",
    "--loop-deletion",
    "--instcombine",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--ipsccp",
    "--lower-expect",
    "--correlated-propagation",
    "--dce",
    "--ipsccp",
    "--dse",
    "--jump-threading",
    "--adce",
    "--early-cse",
    "--globalopt",
    "--loop-deletion",
    "--early-cse",
    "--lower-expect",
    "--dce",
    "--simplifycfg",
    "--gvn",
    "--memcpyopt",
    "--mem2reg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--elim-avail-extern",
          "--globalsplit",
          "--early-cse",
          "--slsr",
          "--licm",
          "--callsite-splitting",
          "--ee-instrument",
          "--indvars",
          "--mem2reg",
          "--lower-constant-intrinsics",
          "--always-inline",
          "--add-discriminators",
          "--lower-expect",
          "--slp-vectorizer",
          "--name-anon-globals",
          "--newgvn",
          "--lower-matrix-intrinsics",
          "--loop-unswitch",
          "--break-crit-edges",
          "--sccp",
          "--irce",
          "--loop-unroll-and-jam",
          "--inline",
          "--simplifycfg",
          "--gvn",
          "--globaldce",
          "--partially-inline-libcalls",
          "--flattencfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--elim-avail-extern",
      "--globalsplit",
      "--early-cse",
      "--slsr",
      "--licm",
      "--callsite-splitting",
      "--ee-instrument",
      "--indvars",
      "--mem2reg",
      "--lower-constant-intrinsics",
      "--always-inline",
      "--add-discriminators",
      "--lower-expect",
      "--slp-vectorizer",
      "--name-anon-globals",
      "--newgvn",
      "--lower-matrix-intrinsics",
      "--loop-unswitch",
      "--break-crit-edges",
      "--sccp",
      "--irce",
      "--loop-unroll-and-jam",
      "--inline",
      "--simplifycfg",
      "--gvn",
      "--globaldce",
      "--partially-inline-libcalls",
      "--flattencfg"
    ],
    "performance_vs_Oz": "+9.2%"
  }
}