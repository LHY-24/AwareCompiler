{
  "program_id": "opencv-v0_360.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 7,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 1,
    "oneSuccessor": 7,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 4,
    "BranchCount": 13,
    "returnInt": 3,
    "CriticalCount": 6,
    "NumEdges": 19,
    "const32Bit": 9,
    "const64Bit": 9,
    "numConstZeroes": 8,
    "numConstOnes": 3,
    "UncondBranches": 7,
    "binaryConstArg": 10,
    "NumAShrInst": 2,
    "NumAddInst": 5,
    "NumAllocaInst": 0,
    "NumAndInst": 2,
    "BlockMid": 2,
    "BlockLow": 12,
    "NumBitCastInst": 6,
    "NumBrInst": 13,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 4,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 4,
    "NumRetInst": 1,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 5,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 14,
    "TotalInsts": 92,
    "TotalMemInst": 23,
    "TotalFuncs": 3,
    "ArgsPhi": 8,
    "testUnary": 18
  },
  "baseline_oz_instcount": 87,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--instcombine",
    "--newgvn",
    "--slsr",
    "--gvn-hoist",
    "--simplifycfg",
    "--loop-rotate",
    "--gvn-hoist",
    "--flattencfg",
    "--sroa",
    "--correlated-propagation",
    "--loop-reroll",
    "--gvn",
    "--inline",
    "--prune-eh",
    "--elim-avail-extern",
    "--instcombine",
    "--correlated-propagation",
    "--bdce",
    "--early-cse",
    "--adce",
    "--jump-threading",
    "--newgvn",
    "--mergefunc",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lowerinvoke",
          "--loop-reroll",
          "--loop-load-elim",
          "--globaldce",
          "--loop-data-prefetch",
          "--correlated-propagation",
          "--simplifycfg",
          "--partial-inliner",
          "--alignment-from-assumptions",
          "--instsimplify",
          "--dce",
          "--early-cse-memssa",
          "--hotcoldsplit"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lowerinvoke",
      "--loop-reroll",
      "--loop-load-elim",
      "--globaldce",
      "--loop-data-prefetch",
      "--correlated-propagation",
      "--simplifycfg",
      "--partial-inliner",
      "--alignment-from-assumptions",
      "--instsimplify",
      "--dce",
      "--early-cse-memssa",
      "--hotcoldsplit"
    ],
    "performance_vs_Oz": "+2.3%"
  }
}