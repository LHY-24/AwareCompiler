{
  "program_id": "github-v0_27232.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 39,
    "onePredOneSuc": 30,
    "onePredTwoSuc": 7,
    "oneSuccessor": 39,
    "twoPred": 18,
    "twoPredOneSuc": 7,
    "twoEach": 6,
    "twoSuccessor": 18,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 66,
    "BeginPhi": 0,
    "BranchCount": 57,
    "returnInt": 8,
    "CriticalCount": 10,
    "NumEdges": 75,
    "const32Bit": 196,
    "const64Bit": 7,
    "numConstZeroes": 81,
    "numConstOnes": 49,
    "UncondBranches": 39,
    "binaryConstArg": 32,
    "NumAShrInst": 2,
    "NumAddInst": 6,
    "NumAllocaInst": 35,
    "NumAndInst": 11,
    "BlockMid": 14,
    "BlockLow": 52,
    "NumBitCastInst": 27,
    "NumBrInst": 57,
    "NumCallInst": 28,
    "NumGetElementPtrInst": 76,
    "NumICmpInst": 18,
    "NumLShrInst": 5,
    "NumLoadInst": 190,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 56,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 2,
    "NumZExtInst": 36,
    "TotalBlocks": 66,
    "TotalInsts": 590,
    "TotalMemInst": 385,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 301
  },
  "baseline_oz_instcount": 590,
  "knowledge_base_entry": [
    "--globalopt",
    "--mergefunc",
    "--adce",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--ipsccp",
    "--correlated-propagation",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip",
          "--coro-early",
          "--die",
          "--inject-tli-mappings",
          "--correlated-propagation",
          "--always-inline",
          "--inferattrs",
          "--float2int",
          "--licm",
          "--strip-dead-prototypes",
          "--loweratomic",
          "--aggressive-instcombine",
          "--load-store-vectorizer",
          "--loop-versioning-licm",
          "--simplifycfg",
          "--loop-unswitch",
          "--sroa",
          "--jump-threading",
          "--instnamer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip",
      "--coro-early",
      "--die",
      "--inject-tli-mappings",
      "--correlated-propagation",
      "--always-inline",
      "--inferattrs",
      "--float2int",
      "--licm",
      "--strip-dead-prototypes",
      "--loweratomic",
      "--aggressive-instcombine",
      "--load-store-vectorizer",
      "--loop-versioning-licm",
      "--simplifycfg",
      "--loop-unswitch",
      "--sroa",
      "--jump-threading",
      "--instnamer"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}