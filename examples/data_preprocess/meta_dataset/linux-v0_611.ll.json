{
  "program_id": "linux-v0_611.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 48,
    "onePredOneSuc": 40,
    "onePredTwoSuc": 7,
    "oneSuccessor": 47,
    "twoPred": 20,
    "twoPredOneSuc": 4,
    "twoEach": 11,
    "twoSuccessor": 22,
    "morePreds": 1,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 82,
    "BeginPhi": 2,
    "BranchCount": 69,
    "returnInt": 7,
    "CriticalCount": 5,
    "NumEdges": 91,
    "const32Bit": 181,
    "const64Bit": 21,
    "numConstZeroes": 76,
    "numConstOnes": 100,
    "UncondBranches": 47,
    "binaryConstArg": 40,
    "NumAShrInst": 0,
    "NumAddInst": 20,
    "NumAllocaInst": 56,
    "NumAndInst": 6,
    "BlockMid": 13,
    "BlockLow": 71,
    "NumBitCastInst": 9,
    "NumBrInst": 69,
    "NumCallInst": 19,
    "NumGetElementPtrInst": 60,
    "NumICmpInst": 26,
    "NumLShrInst": 0,
    "NumLoadInst": 196,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 15,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 89,
    "NumSubInst": 25,
    "NumTruncInst": 4,
    "NumXorInst": 4,
    "NumZExtInst": 30,
    "TotalBlocks": 84,
    "TotalInsts": 652,
    "TotalMemInst": 420,
    "TotalFuncs": 20,
    "ArgsPhi": 4,
    "testUnary": 315
  },
  "baseline_oz_instcount": 654,
  "knowledge_base_entry": [
    "--bdce",
    "--aggressive-instcombine",
    "--adce",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--sccp",
    "--early-cse-memssa",
    "--die",
    "--aggressive-instcombine",
    "--globalopt",
    "--correlated-propagation",
    "--mergefunc",
    "--simplifycfg",
    "--jump-threading",
    "--sroa",
    "--mldst-motion",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constprop",
          "--redundant-dbg-inst-elim",
          "--lower-expect",
          "--div-rem-pairs",
          "--loop-vectorize",
          "--dse",
          "--ipconstprop",
          "--consthoist",
          "--elim-avail-extern",
          "--loop-unroll-and-jam",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constprop",
      "--redundant-dbg-inst-elim",
      "--lower-expect",
      "--div-rem-pairs",
      "--loop-vectorize",
      "--dse",
      "--ipconstprop",
      "--consthoist",
      "--elim-avail-extern",
      "--loop-unroll-and-jam",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}