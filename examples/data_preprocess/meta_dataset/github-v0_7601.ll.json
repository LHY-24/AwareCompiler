{
  "program_id": "github-v0_7601.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 17,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 4,
    "oneSuccessor": 15,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 3,
    "twoSuccessor": 8,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 27,
    "BeginPhi": 0,
    "BranchCount": 23,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 31,
    "const32Bit": 44,
    "const64Bit": 54,
    "numConstZeroes": 53,
    "numConstOnes": 28,
    "UncondBranches": 15,
    "binaryConstArg": 27,
    "NumAShrInst": 7,
    "NumAddInst": 4,
    "NumAllocaInst": 12,
    "NumAndInst": 8,
    "BlockMid": 7,
    "BlockLow": 20,
    "NumBitCastInst": 0,
    "NumBrInst": 23,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 32,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 52,
    "NumMulInst": 0,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 10,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 19,
    "NumXorInst": 1,
    "NumZExtInst": 38,
    "TotalBlocks": 27,
    "TotalInsts": 263,
    "TotalMemInst": 126,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 131
  },
  "baseline_oz_instcount": 263,
  "knowledge_base_entry": [
    "--inline",
    "--newgvn",
    "--simplifycfg",
    "--newgvn",
    "--bdce",
    "--aggressive-instcombine",
    "--instsimplify",
    "--ipsccp",
    "--jump-threading",
    "--adce",
    "--gvn",
    "--lower-expect",
    "--loop-rotate",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--dce",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--inline",
    "--newgvn",
    "--simplifycfg",
    "--newgvn",
    "--bdce",
    "--aggressive-instcombine",
    "--ipsccp",
    "--flattencfg",
    "--mergefunc",
    "--loop-reroll",
    "--slp-vectorizer",
    "--reassociate",
    "--early-cse-memssa",
    "--loop-reroll",
    "--instcombine",
    "--licm",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--irce",
          "--loop-load-elim",
          "--argpromotion",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--prune-eh",
          "--mergeicmps",
          "--lower-widenable-condition",
          "--mergereturn",
          "--tailcallelim",
          "--nary-reassociate",
          "--globalopt",
          "--loweratomic",
          "--strip-dead-prototypes",
          "--loop-sink",
          "--newgvn",
          "--reg2mem",
          "--post-inline-ee-instrument",
          "--simplifycfg",
          "--loop-unroll",
          "--deadargelim",
          "--lowerinvoke",
          "--inject-tli-mappings",
          "--canonicalize-aliases",
          "--separate-const-offset-from-gep",
          "--loop-instsimplify",
          "--ipconstprop",
          "--early-cse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+8.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--irce",
      "--loop-load-elim",
      "--argpromotion",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--prune-eh",
      "--mergeicmps",
      "--lower-widenable-condition",
      "--mergereturn",
      "--tailcallelim",
      "--nary-reassociate",
      "--globalopt",
      "--loweratomic",
      "--strip-dead-prototypes",
      "--loop-sink",
      "--newgvn",
      "--reg2mem",
      "--post-inline-ee-instrument",
      "--simplifycfg",
      "--loop-unroll",
      "--deadargelim",
      "--lowerinvoke",
      "--inject-tli-mappings",
      "--canonicalize-aliases",
      "--separate-const-offset-from-gep",
      "--loop-instsimplify",
      "--ipconstprop",
      "--early-cse"
    ],
    "performance_vs_Oz": "+8.7%"
  }
}