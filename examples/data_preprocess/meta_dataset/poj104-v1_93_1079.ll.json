{
  "program_id": "poj104-v1_93_1079.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 11,
    "onePredOneSuc": 7,
    "onePredTwoSuc": 4,
    "oneSuccessor": 11,
    "twoPred": 7,
    "twoPredOneSuc": 4,
    "twoEach": 1,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 0,
    "BranchCount": 18,
    "returnInt": 5,
    "CriticalCount": 3,
    "NumEdges": 25,
    "const32Bit": 27,
    "const64Bit": 3,
    "numConstZeroes": 9,
    "numConstOnes": 11,
    "UncondBranches": 11,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 26,
    "NumBitCastInst": 7,
    "NumBrInst": 18,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 21,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 9,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 26,
    "TotalInsts": 110,
    "TotalMemInst": 63,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 38
  },
  "baseline_oz_instcount": 44,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--newgvn",
    "--bdce",
    "--jump-threading",
    "--licm",
    "--bdce",
    "--licm",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--licm",
    "--inline",
    "--gvn-hoist",
    "--licm",
    "--dce",
    "--inline",
    "--dse",
    "--instcombine",
    "--slsr",
    "--early-cse",
    "--elim-avail-extern",
    "--ipsccp",
    "--nary-reassociate",
    "--early-cse-memssa",
    "--early-cse",
    "--licm",
    "--bdce",
    "--jump-threading",
    "--licm",
    "--bdce",
    "--licm",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--licm",
    "--inline",
    "--flattencfg",
    "--newgvn",
    "--bdce",
    "--jump-threading",
    "--licm",
    "--bdce",
    "--licm",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--licm",
    "--inline",
    "--gvn-hoist",
    "--mergefunc",
    "--mergefunc",
    "--die",
    "--early-cse",
    "--dse",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--licm",
    "--inline",
    "--gvn-hoist",
    "--licm",
    "--dce",
    "--elim-avail-extern",
    "--globalopt",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--mem2reg",
    "--lower-expect",
    "--mergefunc",
    "--inline",
    "--adce",
    "--elim-avail-extern",
    "--prune-eh",
    "--newgvn",
    "--bdce",
    "--jump-threading",
    "--licm",
    "--bdce",
    "--licm",
    "--loop-simplifycfg",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--licm",
    "--inline",
    "--flattencfg",
    "--newgvn",
    "--loop-fusion",
    "--loop-reroll",
    "--jump-threading",
    "--flattencfg",
    "--licm",
    "--flattencfg",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--adce",
    "--loop-instsimplify",
    "--sccp",
    "--lower-expect",
    "--licm",
    "--gvn-hoist",
    "--loop-instsimplify",
    "--lower-expect",
    "--simplifycfg",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--dce",
    "--mergefunc",
    "--slp-vectorizer",
    "--die",
    "--early-cse",
    "--aggressive-instcombine",
    "--instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--globalsplit",
          "--infer-address-spaces",
          "--inferattrs",
          "--slsr",
          "--mldst-motion",
          "--pgo-memop-opt",
          "--lower-expect",
          "--mergefunc",
          "--inject-tli-mappings",
          "--loop-sink",
          "--jump-threading",
          "-loop-reduce",
          "--bdce",
          "--barrier",
          "--early-cse-memssa",
          "--adce",
          "--elim-avail-extern",
          "--insert-gcov-profiling",
          "--instcombine",
          "--inline",
          "--dse",
          "--loop-versioning-licm",
          "--slp-vectorizer",
          "--attributor",
          "--functionattrs",
          "--canonicalize-aliases",
          "--constmerge",
          "--callsite-splitting"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--globalsplit",
      "--infer-address-spaces",
      "--inferattrs",
      "--slsr",
      "--mldst-motion",
      "--pgo-memop-opt",
      "--lower-expect",
      "--mergefunc",
      "--inject-tli-mappings",
      "--loop-sink",
      "--jump-threading",
      "-loop-reduce",
      "--bdce",
      "--barrier",
      "--early-cse-memssa",
      "--adce",
      "--elim-avail-extern",
      "--insert-gcov-profiling",
      "--instcombine",
      "--inline",
      "--dse",
      "--loop-versioning-licm",
      "--slp-vectorizer",
      "--attributor",
      "--functionattrs",
      "--canonicalize-aliases",
      "--constmerge",
      "--callsite-splitting"
    ],
    "performance_vs_Oz": "+2.3%"
  }
}