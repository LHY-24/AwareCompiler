{
  "program_id": "github-v0_48667.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 29,
    "const64Bit": 30,
    "numConstZeroes": 34,
    "numConstOnes": 22,
    "UncondBranches": 11,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 16,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 2,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 19,
    "TotalBlocks": 21,
    "TotalInsts": 163,
    "TotalMemInst": 95,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 76
  },
  "baseline_oz_instcount": 163,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--globaldce",
    "--aggressive-instcombine",
    "--simplifycfg",
    "--reassociate",
    "--bdce",
    "--jump-threading",
    "--aggressive-instcombine",
    "--mem2reg",
    "--loop-deletion",
    "--sroa",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--tailcallelim",
          "--hotcoldsplit",
          "--aggressive-instcombine",
          "--instcombine",
          "--loop-data-prefetch",
          "--speculative-execution",
          "--float2int",
          "--lower-expect",
          "--loop-rotate",
          "--early-cse-memssa",
          "--attributor",
          "--globaldce",
          "--simplifycfg",
          "--reg2mem",
          "--memcpyopt",
          "--dse",
          "--gvn",
          "--guard-widening",
          "--partially-inline-libcalls",
          "--loop-load-elim",
          "--mem2reg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--tailcallelim",
      "--hotcoldsplit",
      "--aggressive-instcombine",
      "--instcombine",
      "--loop-data-prefetch",
      "--speculative-execution",
      "--float2int",
      "--lower-expect",
      "--loop-rotate",
      "--early-cse-memssa",
      "--attributor",
      "--globaldce",
      "--simplifycfg",
      "--reg2mem",
      "--memcpyopt",
      "--dse",
      "--gvn",
      "--guard-widening",
      "--partially-inline-libcalls",
      "--loop-load-elim",
      "--mem2reg"
    ],
    "performance_vs_Oz": "+9.8%"
  }
}