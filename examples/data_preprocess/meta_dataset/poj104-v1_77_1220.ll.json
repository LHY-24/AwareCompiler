{
  "program_id": "poj104-v1_77_1220.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 10,
    "onePredOneSuc": 6,
    "onePredTwoSuc": 1,
    "oneSuccessor": 8,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 1,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 12,
    "returnInt": 5,
    "CriticalCount": 0,
    "NumEdges": 16,
    "const32Bit": 38,
    "const64Bit": 26,
    "numConstZeroes": 19,
    "numConstOnes": 30,
    "UncondBranches": 8,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 21,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 20,
    "NumBitCastInst": 17,
    "NumBrInst": 12,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 16,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 41,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 11,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 1,
    "TotalBlocks": 24,
    "TotalInsts": 195,
    "TotalMemInst": 136,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 87
  },
  "baseline_oz_instcount": 60,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--loweratomic",
    "--early-cse-memssa",
    "--instcombine",
    "--simplifycfg",
    "--elim-avail-extern",
    "--nary-reassociate",
    "--inline",
    "--die",
    "--simplifycfg",
    "--mldst-motion",
    "--licm",
    "--nary-reassociate",
    "--jump-threading",
    "--mldst-motion",
    "--gvn-hoist",
    "--loop-deletion",
    "--early-cse-memssa",
    "--gvn",
    "--lower-constant-intrinsics",
    "--globalopt",
    "--elim-avail-extern",
    "--slp-vectorizer",
    "--slsr",
    "--loop-reroll",
    "--correlated-propagation",
    "--dse",
    "--instcombine",
    "--simplifycfg",
    "--elim-avail-extern",
    "--dse",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--gvn",
    "--gvn-hoist",
    "--sroa",
    "--early-cse-memssa",
    "--flattencfg",
    "--inline",
    "--die",
    "--simplifycfg",
    "--mldst-motion",
    "--licm",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergereturn",
          "--dce",
          "--consthoist",
          "--slsr",
          "--loop-vectorize",
          "--flattencfg",
          "--elim-avail-extern",
          "--coro-split",
          "--rpo-functionattrs",
          "--sroa",
          "--aggressive-instcombine",
          "--loop-unroll",
          "--instnamer",
          "--pgo-memop-opt",
          "--globalsplit",
          "--canonicalize-aliases",
          "--lowerswitch",
          "--loop-predication",
          "--globalopt",
          "--partial-inliner",
          "--loop-guard-widening",
          "--jump-threading",
          "--constprop",
          "--strip-debug-declare",
          "--loop-distribute",
          "--lower-widenable-condition",
          "--loop-unroll-and-jam"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergereturn",
      "--dce",
      "--consthoist",
      "--slsr",
      "--loop-vectorize",
      "--flattencfg",
      "--elim-avail-extern",
      "--coro-split",
      "--rpo-functionattrs",
      "--sroa",
      "--aggressive-instcombine",
      "--loop-unroll",
      "--instnamer",
      "--pgo-memop-opt",
      "--globalsplit",
      "--canonicalize-aliases",
      "--lowerswitch",
      "--loop-predication",
      "--globalopt",
      "--partial-inliner",
      "--loop-guard-widening",
      "--jump-threading",
      "--constprop",
      "--strip-debug-declare",
      "--loop-distribute",
      "--lower-widenable-condition",
      "--loop-unroll-and-jam"
    ],
    "performance_vs_Oz": "+3.3%"
  }
}