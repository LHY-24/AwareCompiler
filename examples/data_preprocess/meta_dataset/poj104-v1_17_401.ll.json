{
  "program_id": "poj104-v1_17_401.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 40,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 11,
    "oneSuccessor": 37,
    "twoPred": 19,
    "twoPredOneSuc": 7,
    "twoEach": 6,
    "twoSuccessor": 22,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 91,
    "BeginPhi": 0,
    "BranchCount": 59,
    "returnInt": 28,
    "CriticalCount": 9,
    "NumEdges": 81,
    "const32Bit": 111,
    "const64Bit": 67,
    "numConstZeroes": 40,
    "numConstOnes": 82,
    "UncondBranches": 37,
    "binaryConstArg": 9,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 61,
    "NumAndInst": 1,
    "BlockMid": 7,
    "BlockLow": 84,
    "NumBitCastInst": 65,
    "NumBrInst": 59,
    "NumCallInst": 87,
    "NumGetElementPtrInst": 43,
    "NumICmpInst": 24,
    "NumLShrInst": 0,
    "NumLoadInst": 140,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 31,
    "NumSExtInst": 12,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 74,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 1,
    "NumZExtInst": 5,
    "TotalBlocks": 91,
    "TotalInsts": 615,
    "TotalMemInst": 405,
    "TotalFuncs": 47,
    "ArgsPhi": 0,
    "testUnary": 285
  },
  "baseline_oz_instcount": 140,
  "knowledge_base_entry": [
    "--mergereturn",
    "--simplifycfg",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--gvn",
    "--ipsccp",
    "--newgvn",
    "--simplifycfg",
    "--elim-avail-extern",
    "--licm",
    "--aggressive-instcombine",
    "--flattencfg",
    "--jump-threading",
    "--dce",
    "--aggressive-instcombine",
    "--instcombine",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--nary-reassociate",
    "--gvn",
    "--instsimplify",
    "--sccp",
    "--lower-constant-intrinsics",
    "--die",
    "--load-store-vectorizer",
    "--mem2reg",
    "--licm",
    "--ipsccp",
    "--nary-reassociate",
    "--gvn",
    "--lower-expect",
    "--correlated-propagation",
    "--early-cse",
    "--inline",
    "--dse",
    "--aggressive-instcombine",
    "--lower-constant-intrinsics",
    "--mldst-motion",
    "--sroa",
    "--instsimplify",
    "--prune-eh",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--die",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--float2int",
          "--loop-vectorize",
          "--early-cse-memssa",
          "--instsimplify",
          "--lower-widenable-condition",
          "--instcombine",
          "--mem2reg",
          "--lower-constant-intrinsics",
          "--loop-sink",
          "--indvars",
          "--loop-data-prefetch",
          "--globaldce",
          "--elim-avail-extern",
          "--inline",
          "--gvn-hoist",
          "--loop-unroll",
          "--lower-expect",
          "--hotcoldsplit",
          "--correlated-propagation",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+28.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--float2int",
      "--loop-vectorize",
      "--early-cse-memssa",
      "--instsimplify",
      "--lower-widenable-condition",
      "--instcombine",
      "--mem2reg",
      "--lower-constant-intrinsics",
      "--loop-sink",
      "--indvars",
      "--loop-data-prefetch",
      "--globaldce",
      "--elim-avail-extern",
      "--inline",
      "--gvn-hoist",
      "--loop-unroll",
      "--lower-expect",
      "--hotcoldsplit",
      "--correlated-propagation",
      "--licm"
    ],
    "performance_vs_Oz": "+28.6%"
  }
}