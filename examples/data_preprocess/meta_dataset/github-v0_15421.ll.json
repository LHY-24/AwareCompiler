{
  "program_id": "github-v0_15421.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 33,
    "onePredOneSuc": 20,
    "onePredTwoSuc": 12,
    "oneSuccessor": 29,
    "twoPred": 14,
    "twoPredOneSuc": 3,
    "twoEach": 5,
    "twoSuccessor": 22,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 60,
    "BeginPhi": 0,
    "BranchCount": 51,
    "returnInt": 4,
    "CriticalCount": 15,
    "NumEdges": 73,
    "const32Bit": 104,
    "const64Bit": 9,
    "numConstZeroes": 45,
    "numConstOnes": 49,
    "UncondBranches": 29,
    "binaryConstArg": 8,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 36,
    "NumAndInst": 2,
    "BlockMid": 4,
    "BlockLow": 56,
    "NumBitCastInst": 3,
    "NumBrInst": 51,
    "NumCallInst": 14,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 22,
    "NumLShrInst": 1,
    "NumLoadInst": 117,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 9,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 59,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 2,
    "NumZExtInst": 1,
    "TotalBlocks": 60,
    "TotalInsts": 372,
    "TotalMemInst": 263,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 167
  },
  "baseline_oz_instcount": 373,
  "knowledge_base_entry": [
    "--lower-expect",
    "--aggressive-instcombine",
    "--instcombine",
    "--flattencfg",
    "--mergefunc",
    "--sroa",
    "--mldst-motion",
    "--simplifycfg",
    "--dce",
    "--elim-avail-extern",
    "--adce",
    "--sccp",
    "--lower-constant-intrinsics",
    "--gvn",
    "--aggressive-instcombine",
    "--die",
    "--newgvn",
    "--mem2reg",
    "--die",
    "--dse",
    "--bdce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--consthoist",
          "--aggressive-instcombine",
          "--strip-nondebug",
          "--lower-constant-intrinsics",
          "--globalopt",
          "--flattencfg",
          "--functionattrs",
          "--lower-expect",
          "--elim-avail-extern",
          "--separate-const-offset-from-gep",
          "--partially-inline-libcalls",
          "--dse",
          "--libcalls-shrinkwrap",
          "--ee-instrument",
          "--jump-threading",
          "--prune-eh",
          "--constprop",
          "--infer-address-spaces"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--consthoist",
      "--aggressive-instcombine",
      "--strip-nondebug",
      "--lower-constant-intrinsics",
      "--globalopt",
      "--flattencfg",
      "--functionattrs",
      "--lower-expect",
      "--elim-avail-extern",
      "--separate-const-offset-from-gep",
      "--partially-inline-libcalls",
      "--dse",
      "--libcalls-shrinkwrap",
      "--ee-instrument",
      "--jump-threading",
      "--prune-eh",
      "--constprop",
      "--infer-address-spaces"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}