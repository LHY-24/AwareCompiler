{
  "program_id": "github-v0_14697.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 31,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 13,
    "oneSuccessor": 23,
    "twoPred": 8,
    "twoPredOneSuc": 5,
    "twoEach": 2,
    "twoSuccessor": 20,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 43,
    "returnInt": 0,
    "CriticalCount": 9,
    "NumEdges": 63,
    "const32Bit": 308,
    "const64Bit": 159,
    "numConstZeroes": 200,
    "numConstOnes": 107,
    "UncondBranches": 23,
    "binaryConstArg": 50,
    "NumAShrInst": 6,
    "NumAddInst": 17,
    "NumAllocaInst": 72,
    "NumAndInst": 17,
    "BlockMid": 20,
    "BlockLow": 30,
    "NumBitCastInst": 4,
    "NumBrInst": 43,
    "NumCallInst": 41,
    "NumGetElementPtrInst": 198,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 328,
    "NumMulInst": 3,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 7,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 144,
    "NumSubInst": 7,
    "NumTruncInst": 16,
    "NumXorInst": 0,
    "NumZExtInst": 58,
    "TotalBlocks": 50,
    "TotalInsts": 993,
    "TotalMemInst": 783,
    "TotalFuncs": 15,
    "ArgsPhi": 0,
    "testUnary": 482
  },
  "baseline_oz_instcount": 993,
  "knowledge_base_entry": [
    "--loop-unswitch",
    "--gvn-hoist",
    "--instsimplify",
    "--aggressive-instcombine",
    "--gvn",
    "--indvars",
    "--newgvn",
    "--prune-eh",
    "--instsimplify",
    "--load-store-vectorizer",
    "--instcombine",
    "--mergefunc",
    "--bdce",
    "--newgvn",
    "--prune-eh",
    "--gvn-hoist",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-guard-intrinsic",
          "--instcombine",
          "--load-store-vectorizer",
          "--separate-const-offset-from-gep",
          "--coro-split",
          "--early-cse-memssa",
          "--globalopt",
          "--float2int",
          "--coro-early",
          "--loop-data-prefetch",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--tailcallelim",
          "--redundant-dbg-inst-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-guard-intrinsic",
      "--instcombine",
      "--load-store-vectorizer",
      "--separate-const-offset-from-gep",
      "--coro-split",
      "--early-cse-memssa",
      "--globalopt",
      "--float2int",
      "--coro-early",
      "--loop-data-prefetch",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--tailcallelim",
      "--redundant-dbg-inst-elim"
    ],
    "performance_vs_Oz": "+2.3%"
  }
}