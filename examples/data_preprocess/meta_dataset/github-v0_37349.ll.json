{
  "program_id": "github-v0_37349.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 2,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 0,
    "oneSuccessor": 2,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 1,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 3,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 4,
    "const32Bit": 38,
    "const64Bit": 0,
    "numConstZeroes": 1,
    "numConstOnes": 34,
    "UncondBranches": 2,
    "binaryConstArg": 1,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 33,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 23,
    "NumBitCastInst": 3,
    "NumBrInst": 3,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 1,
    "NumLShrInst": 0,
    "NumLoadInst": 12,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 23,
    "TotalInsts": 136,
    "TotalMemInst": 101,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 55
  },
  "baseline_oz_instcount": 136,
  "knowledge_base_entry": [
    "--newgvn",
    "--ipsccp",
    "--inline",
    "--mergefunc",
    "--reassociate",
    "--reassociate",
    "--slsr",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unswitch",
          "--lowerinvoke",
          "-loop-reduce",
          "--hotcoldsplit",
          "--partial-inliner",
          "--inferattrs",
          "--die",
          "--loop-load-elim",
          "--infer-address-spaces",
          "--elim-avail-extern",
          "--mergefunc",
          "--slsr",
          "--ipconstprop",
          "--loop-vectorize",
          "--loop-simplifycfg",
          "--lower-guard-intrinsic",
          "--redundant-dbg-inst-elim",
          "--sancov",
          "--pgo-memop-opt",
          "--coro-split",
          "--loweratomic",
          "--rewrite-statepoints-for-gc",
          "--name-anon-globals",
          "--adce",
          "--deadargelim",
          "--loop-rotate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+34.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unswitch",
      "--lowerinvoke",
      "-loop-reduce",
      "--hotcoldsplit",
      "--partial-inliner",
      "--inferattrs",
      "--die",
      "--loop-load-elim",
      "--infer-address-spaces",
      "--elim-avail-extern",
      "--mergefunc",
      "--slsr",
      "--ipconstprop",
      "--loop-vectorize",
      "--loop-simplifycfg",
      "--lower-guard-intrinsic",
      "--redundant-dbg-inst-elim",
      "--sancov",
      "--pgo-memop-opt",
      "--coro-split",
      "--loweratomic",
      "--rewrite-statepoints-for-gc",
      "--name-anon-globals",
      "--adce",
      "--deadargelim",
      "--loop-rotate"
    ],
    "performance_vs_Oz": "+34.6%"
  }
}