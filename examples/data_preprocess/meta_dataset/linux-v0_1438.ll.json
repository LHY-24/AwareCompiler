{
  "program_id": "linux-v0_1438.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 16,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 1,
    "oneSuccessor": 21,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 7,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 29,
    "BeginPhi": 1,
    "BranchCount": 25,
    "returnInt": 7,
    "CriticalCount": 44,
    "NumEdges": 80,
    "const32Bit": 339,
    "const64Bit": 54,
    "numConstZeroes": 142,
    "numConstOnes": 58,
    "UncondBranches": 21,
    "binaryConstArg": 74,
    "NumAShrInst": 5,
    "NumAddInst": 10,
    "NumAllocaInst": 16,
    "NumAndInst": 14,
    "BlockMid": 8,
    "BlockLow": 22,
    "NumBitCastInst": 0,
    "NumBrInst": 25,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 144,
    "NumICmpInst": 4,
    "NumLShrInst": 4,
    "NumLoadInst": 180,
    "NumMulInst": 10,
    "NumOrInst": 26,
    "NumPHIInst": 1,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 3,
    "NumShlInst": 16,
    "NumStoreInst": 75,
    "NumSubInst": 3,
    "NumTruncInst": 52,
    "NumXorInst": 0,
    "NumZExtInst": 52,
    "TotalBlocks": 30,
    "TotalInsts": 667,
    "TotalMemInst": 423,
    "TotalFuncs": 7,
    "ArgsPhi": 2,
    "testUnary": 303
  },
  "baseline_oz_instcount": 667,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--simplifycfg",
    "--instcombine",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--elim-avail-extern",
    "--jump-threading",
    "--early-cse-memssa",
    "--memcpyopt",
    "--mem2reg",
    "--early-cse-memssa",
    "--nary-reassociate",
    "--slsr",
    "-loop-reduce",
    "--early-cse",
    "--sccp",
    "--inline",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sancov",
          "--indvars",
          "--scalarizer",
          "--name-anon-globals",
          "--lower-matrix-intrinsics",
          "--cross-dso-cfi",
          "--functionattrs",
          "--add-discriminators",
          "--coro-elide",
          "--aggressive-instcombine",
          "--ipconstprop",
          "--gvn",
          "--pgo-memop-opt",
          "--globalsplit",
          "--loop-simplify",
          "--sccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sancov",
      "--indvars",
      "--scalarizer",
      "--name-anon-globals",
      "--lower-matrix-intrinsics",
      "--cross-dso-cfi",
      "--functionattrs",
      "--add-discriminators",
      "--coro-elide",
      "--aggressive-instcombine",
      "--ipconstprop",
      "--gvn",
      "--pgo-memop-opt",
      "--globalsplit",
      "--loop-simplify",
      "--sccp"
    ],
    "performance_vs_Oz": "+3.6%"
  }
}