{
  "program_id": "poj104-v1_78_637.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 45,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 6,
    "oneSuccessor": 43,
    "twoPred": 19,
    "twoPredOneSuc": 6,
    "twoEach": 11,
    "twoSuccessor": 20,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 79,
    "BeginPhi": 0,
    "BranchCount": 63,
    "returnInt": 7,
    "CriticalCount": 6,
    "NumEdges": 83,
    "const32Bit": 85,
    "const64Bit": 57,
    "numConstZeroes": 32,
    "numConstOnes": 48,
    "UncondBranches": 43,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 39,
    "NumAllocaInst": 36,
    "NumAndInst": 0,
    "BlockMid": 9,
    "BlockLow": 70,
    "NumBitCastInst": 41,
    "NumBrInst": 63,
    "NumCallInst": 56,
    "NumGetElementPtrInst": 30,
    "NumICmpInst": 32,
    "NumLShrInst": 0,
    "NumLoadInst": 135,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 15,
    "NumSExtInst": 16,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 60,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 79,
    "TotalInsts": 538,
    "TotalMemInst": 317,
    "TotalFuncs": 29,
    "ArgsPhi": 0,
    "testUnary": 241
  },
  "baseline_oz_instcount": 299,
  "knowledge_base_entry": [
    "--bdce",
    "--early-cse-memssa",
    "--sroa",
    "--loop-reroll",
    "--newgvn",
    "--sroa",
    "--mergefunc",
    "--jump-threading",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--elim-avail-extern",
    "--memcpyopt",
    "--elim-avail-extern",
    "--mergefunc",
    "--licm",
    "--nary-reassociate",
    "--dse",
    "--load-store-vectorizer",
    "--loop-fusion",
    "--simplifycfg",
    "--correlated-propagation",
    "--instcombine",
    "--globalopt",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--mem2reg",
    "--prune-eh",
    "--newgvn",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--ipsccp",
    "--inline",
    "--globalopt",
    "--dse",
    "--newgvn",
    "--loop-rotate",
    "--instsimplify",
    "--mem2reg",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--loop-reroll",
    "--lower-constant-intrinsics",
    "--early-cse",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--mem2reg",
    "--die",
    "--early-cse-memssa",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--instcombine",
    "--dse",
    "--inline",
    "--bdce",
    "--dse",
    "--loop-rotate",
    "--licm",
    "--mem2reg",
    "--instsimplify",
    "--globalopt",
    "--reassociate",
    "--aggressive-instcombine",
    "--flattencfg",
    "--early-cse-memssa",
    "--lower-expect",
    "--licm",
    "--licm",
    "--elim-avail-extern",
    "--dce",
    "--correlated-propagation",
    "--mergefunc",
    "--inline",
    "--prune-eh",
    "--lower-constant-intrinsics",
    "--dce",
    "--early-cse-memssa",
    "--die",
    "--load-store-vectorizer",
    "--dce",
    "--newgvn",
    "--early-cse-memssa",
    "--loop-simplifycfg",
    "--gvn-hoist",
    "--licm",
    "--mem2reg",
    "--flattencfg",
    "--elim-avail-extern",
    "--mldst-motion",
    "--instsimplify",
    "--loop-rotate",
    "--early-cse",
    "--sroa",
    "--adce",
    "--simplifycfg",
    "--gvn-hoist",
    "--ipsccp",
    "--mem2reg",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--newgvn",
          "--insert-gcov-profiling",
          "--flattencfg",
          "--lowerswitch",
          "--simplifycfg",
          "--correlated-propagation",
          "--constmerge",
          "--consthoist",
          "--lower-matrix-intrinsics",
          "--instcombine",
          "--hotcoldsplit",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+19.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--newgvn",
      "--insert-gcov-profiling",
      "--flattencfg",
      "--lowerswitch",
      "--simplifycfg",
      "--correlated-propagation",
      "--constmerge",
      "--consthoist",
      "--lower-matrix-intrinsics",
      "--instcombine",
      "--hotcoldsplit",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+19.4%"
  }
}