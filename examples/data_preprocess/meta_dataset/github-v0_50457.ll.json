{
  "program_id": "github-v0_50457.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 5,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 4,
    "BranchCount": 11,
    "returnInt": 2,
    "CriticalCount": 7,
    "NumEdges": 17,
    "const32Bit": 28,
    "const64Bit": 78,
    "numConstZeroes": 53,
    "numConstOnes": 8,
    "UncondBranches": 5,
    "binaryConstArg": 18,
    "NumAShrInst": 1,
    "NumAddInst": 12,
    "NumAllocaInst": 2,
    "NumAndInst": 0,
    "BlockMid": 5,
    "BlockLow": 8,
    "NumBitCastInst": 26,
    "NumBrInst": 11,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 53,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 40,
    "NumMulInst": 2,
    "NumOrInst": 7,
    "NumPHIInst": 5,
    "NumRetInst": 2,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 13,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 13,
    "TotalInsts": 240,
    "TotalMemInst": 130,
    "TotalFuncs": 9,
    "ArgsPhi": 10,
    "testUnary": 88
  },
  "baseline_oz_instcount": 383,
  "knowledge_base_entry": [
    "--globaldce",
    "--aggressive-instcombine",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--indvars",
    "--loop-fusion",
    "--indvars",
    "--loop-reroll",
    "--loop-fusion",
    "--loop-reroll",
    "--simplifycfg",
    "--dse",
    "--load-store-vectorizer",
    "--elim-avail-extern",
    "--dce",
    "--ipsccp",
    "--die",
    "--inline",
    "--dse",
    "--adce",
    "--slp-vectorizer",
    "--gvn",
    "--mem2reg",
    "--loop-instsimplify",
    "--gvn-hoist",
    "--slsr",
    "--early-cse-memssa",
    "--inline",
    "--instcombine",
    "--load-store-vectorizer",
    "--slsr",
    "--simplifycfg",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-versioning",
          "--loop-reroll",
          "--mergereturn",
          "--forceattrs",
          "--strip-debug-declare",
          "--loop-guard-widening",
          "--sccp",
          "--separate-const-offset-from-gep",
          "--newgvn",
          "--scalarizer",
          "--flattencfg",
          "--ipsccp",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+55.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-versioning",
      "--loop-reroll",
      "--mergereturn",
      "--forceattrs",
      "--strip-debug-declare",
      "--loop-guard-widening",
      "--sccp",
      "--separate-const-offset-from-gep",
      "--newgvn",
      "--scalarizer",
      "--flattencfg",
      "--ipsccp",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+55.9%"
  }
}