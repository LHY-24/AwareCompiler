{
  "program_id": "linux-v0_3620.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 18,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 2,
    "oneSuccessor": 18,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 26,
    "BeginPhi": 2,
    "BranchCount": 25,
    "returnInt": 0,
    "CriticalCount": 0,
    "NumEdges": 32,
    "const32Bit": 36,
    "const64Bit": 4,
    "numConstZeroes": 12,
    "numConstOnes": 23,
    "UncondBranches": 18,
    "binaryConstArg": 10,
    "NumAShrInst": 2,
    "NumAddInst": 5,
    "NumAllocaInst": 15,
    "NumAndInst": 3,
    "BlockMid": 4,
    "BlockLow": 24,
    "NumBitCastInst": 0,
    "NumBrInst": 25,
    "NumCallInst": 0,
    "NumGetElementPtrInst": 8,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 39,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 28,
    "NumSubInst": 0,
    "NumTruncInst": 4,
    "NumXorInst": 5,
    "NumZExtInst": 12,
    "TotalBlocks": 28,
    "TotalInsts": 166,
    "TotalMemInst": 90,
    "TotalFuncs": 3,
    "ArgsPhi": 4,
    "testUnary": 75
  },
  "baseline_oz_instcount": 166,
  "knowledge_base_entry": [
    "--memcpyopt",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--inline",
    "--nary-reassociate",
    "--elim-avail-extern",
    "--die",
    "--load-store-vectorizer",
    "--slsr",
    "--newgvn",
    "--licm",
    "--mergefunc",
    "--gvn",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--libcalls-shrinkwrap",
          "--gvn",
          "--jump-threading",
          "--loop-unroll",
          "--attributor",
          "--instnamer",
          "--partial-inliner",
          "--speculative-execution",
          "--loop-simplifycfg",
          "--add-discriminators",
          "--prune-eh",
          "--newgvn",
          "--loop-versioning-licm",
          "--called-value-propagation",
          "--ee-instrument",
          "--name-anon-globals",
          "--loop-simplify",
          "--indvars",
          "--aggressive-instcombine",
          "--lower-matrix-intrinsics",
          "--globalsplit",
          "--redundant-dbg-inst-elim"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--libcalls-shrinkwrap",
      "--gvn",
      "--jump-threading",
      "--loop-unroll",
      "--attributor",
      "--instnamer",
      "--partial-inliner",
      "--speculative-execution",
      "--loop-simplifycfg",
      "--add-discriminators",
      "--prune-eh",
      "--newgvn",
      "--loop-versioning-licm",
      "--called-value-propagation",
      "--ee-instrument",
      "--name-anon-globals",
      "--loop-simplify",
      "--indvars",
      "--aggressive-instcombine",
      "--lower-matrix-intrinsics",
      "--globalsplit",
      "--redundant-dbg-inst-elim"
    ],
    "performance_vs_Oz": "+3.6%"
  }
}