{
  "program_id": "github-v0_46131.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 7,
    "oneSuccessor": 15,
    "twoPred": 8,
    "twoPredOneSuc": 2,
    "twoEach": 5,
    "twoSuccessor": 14,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 38,
    "BeginPhi": 0,
    "BranchCount": 29,
    "returnInt": 8,
    "CriticalCount": 7,
    "NumEdges": 43,
    "const32Bit": 35,
    "const64Bit": 2,
    "numConstZeroes": 12,
    "numConstOnes": 16,
    "UncondBranches": 15,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 0,
    "BlockLow": 38,
    "NumBitCastInst": 0,
    "NumBrInst": 29,
    "NumCallInst": 20,
    "NumGetElementPtrInst": 6,
    "NumICmpInst": 14,
    "NumLShrInst": 0,
    "NumLoadInst": 42,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 21,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 38,
    "TotalInsts": 161,
    "TotalMemInst": 99,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 58
  },
  "baseline_oz_instcount": 165,
  "knowledge_base_entry": [
    "--loop-unroll",
    "--gvn",
    "-loop-reduce",
    "--early-cse",
    "--memcpyopt",
    "--gvn",
    "--loop-deletion",
    "--mem2reg",
    "--mldst-motion",
    "--early-cse-memssa",
    "--sccp",
    "--lower-expect",
    "--newgvn",
    "--gvn",
    "-loop-reduce",
    "--early-cse",
    "--memcpyopt",
    "--instsimplify",
    "--loop-reroll",
    "--early-cse",
    "--prune-eh",
    "--reassociate",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-rotate",
          "--loop-unroll",
          "--instcombine",
          "--attributor",
          "--gvn-hoist",
          "--ipsccp",
          "--functionattrs",
          "--loop-versioning",
          "--reassociate",
          "--loop-unroll-and-jam",
          "--always-inline",
          "--lower-guard-intrinsic",
          "--loop-simplifycfg",
          "--separate-const-offset-from-gep",
          "--argpromotion",
          "--aggressive-instcombine",
          "--loop-fusion",
          "--scalarizer"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-rotate",
      "--loop-unroll",
      "--instcombine",
      "--attributor",
      "--gvn-hoist",
      "--ipsccp",
      "--functionattrs",
      "--loop-versioning",
      "--reassociate",
      "--loop-unroll-and-jam",
      "--always-inline",
      "--lower-guard-intrinsic",
      "--loop-simplifycfg",
      "--separate-const-offset-from-gep",
      "--argpromotion",
      "--aggressive-instcombine",
      "--loop-fusion",
      "--scalarizer"
    ],
    "performance_vs_Oz": "+2.4%"
  }
}