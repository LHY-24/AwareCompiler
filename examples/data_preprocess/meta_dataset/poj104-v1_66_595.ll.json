{
  "program_id": "poj104-v1_66_595.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 39,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 10,
    "oneSuccessor": 39,
    "twoPred": 29,
    "twoPredOneSuc": 10,
    "twoEach": 18,
    "twoSuccessor": 29,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 0,
    "BranchCount": 68,
    "returnInt": 9,
    "CriticalCount": 19,
    "NumEdges": 97,
    "const32Bit": 5,
    "const64Bit": 89,
    "numConstZeroes": 14,
    "numConstOnes": 13,
    "UncondBranches": 39,
    "binaryConstArg": 34,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 3,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 70,
    "NumBitCastInst": 4,
    "NumBrInst": 68,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 40,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 26,
    "NumSubInst": 11,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 71,
    "TotalInsts": 230,
    "TotalMemInst": 84,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 47
  },
  "baseline_oz_instcount": 147,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--early-cse-memssa",
    "--sccp",
    "--dse",
    "--bdce",
    "--early-cse",
    "--gvn-hoist",
    "--die",
    "--dse",
    "--instsimplify",
    "--nary-reassociate",
    "--loop-fusion",
    "--load-store-vectorizer",
    "--loop-simplifycfg",
    "--bdce",
    "--newgvn",
    "--lower-expect",
    "--instcombine",
    "--slsr",
    "--nary-reassociate",
    "--mem2reg",
    "--licm",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--load-store-vectorizer",
    "--correlated-propagation",
    "--dse",
    "--sccp",
    "--inline",
    "--simplifycfg",
    "--mldst-motion",
    "--jump-threading",
    "--mergefunc",
    "--loop-simplifycfg",
    "--mergefunc",
    "--early-cse",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--simple-loop-unswitch",
          "--libcalls-shrinkwrap",
          "--called-value-propagation",
          "--early-cse-memssa",
          "--loop-instsimplify",
          "--mergereturn",
          "--insert-gcov-profiling",
          "--coro-early",
          "--loop-fusion",
          "--redundant-dbg-inst-elim",
          "--loop-reroll",
          "--add-discriminators",
          "--adce",
          "--strip-debug-declare",
          "--loop-idiom",
          "--jump-threading",
          "--lower-constant-intrinsics",
          "--simplifycfg",
          "--constprop",
          "--mldst-motion",
          "--irce",
          "--instcombine",
          "--slp-vectorizer",
          "--gvn-hoist",
          "--nary-reassociate",
          "--lower-matrix-intrinsics",
          "--coro-split",
          "--lower-guard-intrinsic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--simple-loop-unswitch",
      "--libcalls-shrinkwrap",
      "--called-value-propagation",
      "--early-cse-memssa",
      "--loop-instsimplify",
      "--mergereturn",
      "--insert-gcov-profiling",
      "--coro-early",
      "--loop-fusion",
      "--redundant-dbg-inst-elim",
      "--loop-reroll",
      "--add-discriminators",
      "--adce",
      "--strip-debug-declare",
      "--loop-idiom",
      "--jump-threading",
      "--lower-constant-intrinsics",
      "--simplifycfg",
      "--constprop",
      "--mldst-motion",
      "--irce",
      "--instcombine",
      "--slp-vectorizer",
      "--gvn-hoist",
      "--nary-reassociate",
      "--lower-matrix-intrinsics",
      "--coro-split",
      "--lower-guard-intrinsic"
    ],
    "performance_vs_Oz": "+4.1%"
  }
}