{
  "program_id": "github-v0_39827.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 3,
    "oneSuccessor": 27,
    "twoPred": 13,
    "twoPredOneSuc": 1,
    "twoEach": 8,
    "twoSuccessor": 13,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 50,
    "BeginPhi": 0,
    "BranchCount": 40,
    "returnInt": 9,
    "CriticalCount": 5,
    "NumEdges": 53,
    "const32Bit": 157,
    "const64Bit": 31,
    "numConstZeroes": 83,
    "numConstOnes": 54,
    "UncondBranches": 27,
    "binaryConstArg": 15,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 34,
    "NumAndInst": 2,
    "BlockMid": 8,
    "BlockLow": 42,
    "NumBitCastInst": 0,
    "NumBrInst": 40,
    "NumCallInst": 15,
    "NumGetElementPtrInst": 59,
    "NumICmpInst": 12,
    "NumLShrInst": 2,
    "NumLoadInst": 146,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 79,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 3,
    "NumZExtInst": 8,
    "TotalBlocks": 50,
    "TotalInsts": 442,
    "TotalMemInst": 333,
    "TotalFuncs": 10,
    "ArgsPhi": 0,
    "testUnary": 199
  },
  "baseline_oz_instcount": 443,
  "knowledge_base_entry": [
    "--globalopt",
    "--flattencfg",
    "--load-store-vectorizer",
    "--indvars",
    "--correlated-propagation",
    "--mergefunc",
    "--globalopt",
    "--flattencfg",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--lower-expect",
    "--adce",
    "--lower-expect",
    "--jump-threading",
    "--instcombine",
    "--slp-vectorizer",
    "--simplifycfg",
    "--load-store-vectorizer",
    "--indvars",
    "--correlated-propagation",
    "--mergefunc",
    "--globalopt",
    "--newgvn",
    "--loop-instsimplify",
    "--mem2reg",
    "--loop-rotate",
    "--early-cse-memssa",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globaldce",
          "--float2int",
          "--globalopt",
          "--ipconstprop",
          "--partially-inline-libcalls",
          "--callsite-splitting",
          "--loop-distribute",
          "--loop-versioning",
          "--infer-address-spaces",
          "--loop-interchange",
          "--loop-idiom",
          "--lower-widenable-condition",
          "--aggressive-instcombine",
          "--rewrite-statepoints-for-gc",
          "--ee-instrument",
          "--argpromotion",
          "--newgvn",
          "--lower-constant-intrinsics",
          "--loop-rotate",
          "--canonicalize-aliases",
          "--lower-matrix-intrinsics",
          "--sroa",
          "--mldst-motion"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globaldce",
      "--float2int",
      "--globalopt",
      "--ipconstprop",
      "--partially-inline-libcalls",
      "--callsite-splitting",
      "--loop-distribute",
      "--loop-versioning",
      "--infer-address-spaces",
      "--loop-interchange",
      "--loop-idiom",
      "--lower-widenable-condition",
      "--aggressive-instcombine",
      "--rewrite-statepoints-for-gc",
      "--ee-instrument",
      "--argpromotion",
      "--newgvn",
      "--lower-constant-intrinsics",
      "--loop-rotate",
      "--canonicalize-aliases",
      "--lower-matrix-intrinsics",
      "--sroa",
      "--mldst-motion"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}