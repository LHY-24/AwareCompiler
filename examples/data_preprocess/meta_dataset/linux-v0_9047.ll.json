{
  "program_id": "linux-v0_9047.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 4,
    "oneSuccessor": 20,
    "twoPred": 6,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 0,
    "BranchCount": 31,
    "returnInt": 9,
    "CriticalCount": 1,
    "NumEdges": 42,
    "const32Bit": 149,
    "const64Bit": 14,
    "numConstZeroes": 59,
    "numConstOnes": 73,
    "UncondBranches": 20,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 61,
    "NumAndInst": 2,
    "BlockMid": 9,
    "BlockLow": 44,
    "NumBitCastInst": 8,
    "NumBrInst": 31,
    "NumCallInst": 27,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 115,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 82,
    "NumSubInst": 2,
    "NumTruncInst": 6,
    "NumXorInst": 3,
    "NumZExtInst": 16,
    "TotalBlocks": 53,
    "TotalInsts": 445,
    "TotalMemInst": 330,
    "TotalFuncs": 35,
    "ArgsPhi": 0,
    "testUnary": 215
  },
  "baseline_oz_instcount": 444,
  "knowledge_base_entry": [
    "--loop-guard-widening",
    "--early-cse-memssa",
    "--mergefunc",
    "--globalopt",
    "--lower-expect",
    "--ipsccp",
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--flattencfg",
    "--early-cse-memssa",
    "--inline",
    "--dse",
    "--jump-threading",
    "--lower-expect",
    "--sroa",
    "--load-store-vectorizer",
    "--instcombine",
    "-loop-reduce",
    "--newgvn",
    "--sroa",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--dce",
    "--correlated-propagation",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--constmerge",
          "--forceattrs",
          "--insert-gcov-profiling",
          "--strip-nondebug",
          "--reg2mem",
          "--loop-interchange",
          "--mergereturn",
          "--mergefunc",
          "--gvn-hoist",
          "--loop-guard-widening",
          "--indvars",
          "--slp-vectorizer",
          "--ipsccp",
          "--loop-vectorize",
          "--loop-idiom",
          "--loop-versioning",
          "--early-cse",
          "--div-rem-pairs",
          "--globaldce",
          "--mergeicmps",
          "--instnamer",
          "--simple-loop-unswitch",
          "--aggressive-instcombine",
          "--constprop",
          "--post-inline-ee-instrument",
          "--loop-deletion",
          "--coro-early"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--constmerge",
      "--forceattrs",
      "--insert-gcov-profiling",
      "--strip-nondebug",
      "--reg2mem",
      "--loop-interchange",
      "--mergereturn",
      "--mergefunc",
      "--gvn-hoist",
      "--loop-guard-widening",
      "--indvars",
      "--slp-vectorizer",
      "--ipsccp",
      "--loop-vectorize",
      "--loop-idiom",
      "--loop-versioning",
      "--early-cse",
      "--div-rem-pairs",
      "--globaldce",
      "--mergeicmps",
      "--instnamer",
      "--simple-loop-unswitch",
      "--aggressive-instcombine",
      "--constprop",
      "--post-inline-ee-instrument",
      "--loop-deletion",
      "--coro-early"
    ],
    "performance_vs_Oz": "+1.4%"
  }
}