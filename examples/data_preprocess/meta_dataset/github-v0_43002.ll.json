{
  "program_id": "github-v0_43002.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 1,
    "onePred": 3,
    "onePredOneSuc": 2,
    "onePredTwoSuc": 1,
    "oneSuccessor": 2,
    "twoPred": 2,
    "twoPredOneSuc": 0,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 1,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 4,
    "BeginPhi": 3,
    "BranchCount": 6,
    "returnInt": 2,
    "CriticalCount": 5,
    "NumEdges": 10,
    "const32Bit": 12,
    "const64Bit": 0,
    "numConstZeroes": 6,
    "numConstOnes": 4,
    "UncondBranches": 2,
    "binaryConstArg": 4,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 6,
    "NumBitCastInst": 0,
    "NumBrInst": 6,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 6,
    "NumMulInst": 4,
    "NumOrInst": 1,
    "NumPHIInst": 7,
    "NumRetInst": 1,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 1,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 7,
    "TotalInsts": 62,
    "TotalMemInst": 19,
    "TotalFuncs": 3,
    "ArgsPhi": 15,
    "testUnary": 15
  },
  "baseline_oz_instcount": 62,
  "knowledge_base_entry": [
    "--loop-load-elim",
    "--early-cse",
    "--memcpyopt",
    "--loop-simplifycfg",
    "--die",
    "--licm",
    "--bdce",
    "--simplifycfg",
    "--early-cse",
    "--simplifycfg",
    "--instcombine",
    "--newgvn",
    "--indvars",
    "--gvn-hoist",
    "--loop-rotate",
    "--loop-simplifycfg",
    "--jump-threading",
    "--dce",
    "--load-store-vectorizer",
    "--newgvn",
    "--loop-fusion",
    "--early-cse",
    "--bdce",
    "--correlated-propagation",
    "--early-cse",
    "--bdce",
    "--sccp",
    "--loop-instsimplify",
    "--sroa",
    "--early-cse",
    "--loop-deletion",
    "--early-cse",
    "--gvn",
    "--slsr",
    "--jump-threading",
    "--elim-avail-extern",
    "--memcpyopt",
    "--mergefunc",
    "--mergefunc",
    "--jump-threading",
    "--instsimplify",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--inline",
    "--globalopt",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--sroa",
          "--functionattrs",
          "--alignment-from-assumptions",
          "--barrier",
          "--bdce",
          "--partially-inline-libcalls",
          "--newgvn",
          "--instnamer",
          "--ipconstprop",
          "--ipsccp",
          "--nary-reassociate",
          "--loop-unroll",
          "--name-anon-globals",
          "--jump-threading",
          "--lcssa",
          "--infer-address-spaces",
          "--forceattrs",
          "--lower-constant-intrinsics",
          "--lowerswitch",
          "--loop-load-elim",
          "--loop-versioning-licm",
          "--hotcoldsplit",
          "--loop-reroll",
          "--coro-elide",
          "--loop-data-prefetch",
          "--callsite-splitting",
          "--called-value-propagation",
          "--lowerinvoke",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--sroa",
      "--functionattrs",
      "--alignment-from-assumptions",
      "--barrier",
      "--bdce",
      "--partially-inline-libcalls",
      "--newgvn",
      "--instnamer",
      "--ipconstprop",
      "--ipsccp",
      "--nary-reassociate",
      "--loop-unroll",
      "--name-anon-globals",
      "--jump-threading",
      "--lcssa",
      "--infer-address-spaces",
      "--forceattrs",
      "--lower-constant-intrinsics",
      "--lowerswitch",
      "--loop-load-elim",
      "--loop-versioning-licm",
      "--hotcoldsplit",
      "--loop-reroll",
      "--coro-elide",
      "--loop-data-prefetch",
      "--callsite-splitting",
      "--called-value-propagation",
      "--lowerinvoke",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}