{
  "program_id": "github-v0_19081.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 46,
    "const64Bit": 88,
    "numConstZeroes": 70,
    "numConstOnes": 33,
    "UncondBranches": 13,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 15,
    "NumAndInst": 7,
    "BlockMid": 7,
    "BlockLow": 17,
    "NumBitCastInst": 20,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 7,
    "NumLShrInst": 4,
    "NumLoadInst": 82,
    "NumMulInst": 2,
    "NumOrInst": 10,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 34,
    "NumSubInst": 4,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 35,
    "TotalBlocks": 24,
    "TotalInsts": 338,
    "TotalMemInst": 206,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 162
  },
  "baseline_oz_instcount": 338,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--elim-avail-extern",
    "--loop-rotate",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--loop-rotate",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--loop-deletion",
    "--sroa",
    "--globalopt",
    "--newgvn",
    "--aggressive-instcombine",
    "--gvn",
    "--sroa",
    "--elim-avail-extern",
    "--mldst-motion",
    "--dse",
    "--aggressive-instcombine",
    "--early-cse",
    "--gvn",
    "--mergefunc",
    "--load-store-vectorizer",
    "--early-cse",
    "--gvn",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip",
          "--nary-reassociate",
          "--memcpyopt",
          "--aggressive-instcombine",
          "--elim-avail-extern",
          "--barrier",
          "--mergereturn",
          "--dce",
          "--libcalls-shrinkwrap",
          "--sink",
          "--lower-constant-intrinsics",
          "--argpromotion",
          "--loop-versioning",
          "--lower-expect",
          "--loop-rotate",
          "--loop-guard-widening",
          "--deadargelim",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip",
      "--nary-reassociate",
      "--memcpyopt",
      "--aggressive-instcombine",
      "--elim-avail-extern",
      "--barrier",
      "--mergereturn",
      "--dce",
      "--libcalls-shrinkwrap",
      "--sink",
      "--lower-constant-intrinsics",
      "--argpromotion",
      "--loop-versioning",
      "--lower-expect",
      "--loop-rotate",
      "--loop-guard-widening",
      "--deadargelim",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+3.6%"
  }
}