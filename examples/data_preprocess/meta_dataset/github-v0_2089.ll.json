{
  "program_id": "github-v0_2089.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 12,
    "onePredTwoSuc": 1,
    "oneSuccessor": 17,
    "twoPred": 8,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 34,
    "BeginPhi": 0,
    "BranchCount": 24,
    "returnInt": 4,
    "CriticalCount": 2,
    "NumEdges": 31,
    "const32Bit": 60,
    "const64Bit": 5,
    "numConstZeroes": 15,
    "numConstOnes": 24,
    "UncondBranches": 17,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 17,
    "NumAndInst": 7,
    "BlockMid": 3,
    "BlockLow": 31,
    "NumBitCastInst": 0,
    "NumBrInst": 24,
    "NumCallInst": 21,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 7,
    "NumLShrInst": 7,
    "NumLoadInst": 42,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 6,
    "NumZExtInst": 4,
    "TotalBlocks": 34,
    "TotalInsts": 193,
    "TotalMemInst": 115,
    "TotalFuncs": 11,
    "ArgsPhi": 0,
    "testUnary": 72
  },
  "baseline_oz_instcount": 189,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--early-cse",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--dse",
    "--correlated-propagation",
    "--bdce",
    "--lower-expect",
    "--ipsccp",
    "--bdce",
    "--mergefunc",
    "--newgvn",
    "--loop-deletion",
    "--elim-avail-extern",
    "--aggressive-instcombine",
    "--early-cse-memssa",
    "--licm",
    "--gvn",
    "--die",
    "--mem2reg",
    "--inline",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inline",
          "--adce",
          "--deadargelim",
          "--loop-distribute",
          "--ipsccp",
          "--scalarizer",
          "--globalopt",
          "--memcpyopt",
          "--lower-widenable-condition",
          "--sroa",
          "--loweratomic",
          "-loop-reduce",
          "--lowerswitch",
          "--aggressive-instcombine",
          "--jump-threading",
          "--coro-split"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inline",
      "--adce",
      "--deadargelim",
      "--loop-distribute",
      "--ipsccp",
      "--scalarizer",
      "--globalopt",
      "--memcpyopt",
      "--lower-widenable-condition",
      "--sroa",
      "--loweratomic",
      "-loop-reduce",
      "--lowerswitch",
      "--aggressive-instcombine",
      "--jump-threading",
      "--coro-split"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}