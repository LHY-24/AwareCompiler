{
  "program_id": "github-v0_40584.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 45,
    "const64Bit": 46,
    "numConstZeroes": 45,
    "numConstOnes": 25,
    "UncondBranches": 13,
    "binaryConstArg": 20,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 13,
    "NumAndInst": 5,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 8,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 37,
    "NumICmpInst": 7,
    "NumLShrInst": 4,
    "NumLoadInst": 53,
    "NumMulInst": 0,
    "NumOrInst": 6,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 24,
    "NumSubInst": 1,
    "NumTruncInst": 4,
    "NumXorInst": 0,
    "NumZExtInst": 17,
    "TotalBlocks": 24,
    "TotalInsts": 223,
    "TotalMemInst": 134,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 98
  },
  "baseline_oz_instcount": 223,
  "knowledge_base_entry": [
    "--early-cse-memssa",
    "--aggressive-instcombine",
    "--lower-expect",
    "--bdce",
    "--load-store-vectorizer",
    "--inline",
    "--instsimplify",
    "--nary-reassociate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--loop-predication",
          "--sink",
          "--loop-interchange",
          "--pgo-memop-opt",
          "--slp-vectorizer",
          "--add-discriminators",
          "--strip-dead-prototypes",
          "--sancov",
          "--mergereturn",
          "--callsite-splitting",
          "--aggressive-instcombine",
          "--inject-tli-mappings",
          "--ee-instrument",
          "--dse",
          "--lower-matrix-intrinsics",
          "--sccp",
          "--scalarizer",
          "--name-anon-globals",
          "--elim-avail-extern",
          "-loop-reduce",
          "--loop-rotate",
          "--lower-guard-intrinsic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--loop-predication",
      "--sink",
      "--loop-interchange",
      "--pgo-memop-opt",
      "--slp-vectorizer",
      "--add-discriminators",
      "--strip-dead-prototypes",
      "--sancov",
      "--mergereturn",
      "--callsite-splitting",
      "--aggressive-instcombine",
      "--inject-tli-mappings",
      "--ee-instrument",
      "--dse",
      "--lower-matrix-intrinsics",
      "--sccp",
      "--scalarizer",
      "--name-anon-globals",
      "--elim-avail-extern",
      "-loop-reduce",
      "--loop-rotate",
      "--lower-guard-intrinsic"
    ],
    "performance_vs_Oz": "+2.7%"
  }
}