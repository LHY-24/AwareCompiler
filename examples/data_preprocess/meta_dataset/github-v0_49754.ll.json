{
  "program_id": "github-v0_49754.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 3,
    "onePred": 4,
    "onePredOneSuc": 3,
    "onePredTwoSuc": 1,
    "oneSuccessor": 3,
    "twoPred": 4,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 1,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 5,
    "BeginPhi": 5,
    "BranchCount": 9,
    "returnInt": 1,
    "CriticalCount": 8,
    "NumEdges": 15,
    "const32Bit": 14,
    "const64Bit": 6,
    "numConstZeroes": 9,
    "numConstOnes": 4,
    "UncondBranches": 3,
    "binaryConstArg": 8,
    "NumAShrInst": 1,
    "NumAddInst": 12,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 1,
    "BlockLow": 9,
    "NumBitCastInst": 0,
    "NumBrInst": 9,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 6,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 10,
    "NumRetInst": 1,
    "NumSExtInst": 6,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 1,
    "NumSubInst": 4,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 10,
    "TotalInsts": 82,
    "TotalMemInst": 18,
    "TotalFuncs": 3,
    "ArgsPhi": 21,
    "testUnary": 13
  },
  "baseline_oz_instcount": 85,
  "knowledge_base_entry": [
    "--loweratomic",
    "--ipsccp",
    "--loweratomic",
    "--aggressive-instcombine",
    "--dce",
    "--inline",
    "--prune-eh",
    "--simplifycfg",
    "--instcombine",
    "--instsimplify",
    "--load-store-vectorizer",
    "--bdce",
    "--lower-expect",
    "--load-store-vectorizer",
    "--instcombine",
    "--aggressive-instcombine",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--inferattrs",
          "--rewrite-statepoints-for-gc",
          "--consthoist",
          "--simplifycfg",
          "--sroa",
          "--newgvn",
          "--partially-inline-libcalls",
          "--loop-data-prefetch",
          "--alignment-from-assumptions",
          "--loop-versioning",
          "--forceattrs",
          "--sink",
          "--coro-elide",
          "--dse"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--inferattrs",
      "--rewrite-statepoints-for-gc",
      "--consthoist",
      "--simplifycfg",
      "--sroa",
      "--newgvn",
      "--partially-inline-libcalls",
      "--loop-data-prefetch",
      "--alignment-from-assumptions",
      "--loop-versioning",
      "--forceattrs",
      "--sink",
      "--coro-elide",
      "--dse"
    ],
    "performance_vs_Oz": "+4.7%"
  }
}