{
  "program_id": "linux-v0_13425.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 38,
    "onePredOneSuc": 26,
    "onePredTwoSuc": 12,
    "oneSuccessor": 32,
    "twoPred": 11,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 20,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 81,
    "BeginPhi": 0,
    "BranchCount": 52,
    "returnInt": 17,
    "CriticalCount": 11,
    "NumEdges": 77,
    "const32Bit": 252,
    "const64Bit": 20,
    "numConstZeroes": 110,
    "numConstOnes": 109,
    "UncondBranches": 32,
    "binaryConstArg": 11,
    "NumAShrInst": 0,
    "NumAddInst": 6,
    "NumAllocaInst": 89,
    "NumAndInst": 0,
    "BlockMid": 13,
    "BlockLow": 68,
    "NumBitCastInst": 22,
    "NumBrInst": 52,
    "NumCallInst": 52,
    "NumGetElementPtrInst": 76,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 203,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 28,
    "NumSExtInst": 20,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 113,
    "NumSubInst": 3,
    "NumTruncInst": 4,
    "NumXorInst": 8,
    "NumZExtInst": 8,
    "TotalBlocks": 81,
    "TotalInsts": 711,
    "TotalMemInst": 533,
    "TotalFuncs": 43,
    "ArgsPhi": 0,
    "testUnary": 350
  },
  "baseline_oz_instcount": 713,
  "knowledge_base_entry": [
    "--strip-nondebug",
    "--mergefunc",
    "--die",
    "--lower-constant-intrinsics",
    "--instsimplify",
    "--correlated-propagation",
    "--instcombine",
    "--dce",
    "--die",
    "--sccp",
    "--early-cse",
    "--elim-avail-extern",
    "--prune-eh",
    "--gvn-hoist",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--float2int",
          "--mem2reg",
          "--instcombine",
          "--instnamer",
          "--mergefunc",
          "--ipconstprop",
          "--add-discriminators",
          "--memcpyopt",
          "--loop-versioning",
          "--elim-avail-extern"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--float2int",
      "--mem2reg",
      "--instcombine",
      "--instnamer",
      "--mergefunc",
      "--ipconstprop",
      "--add-discriminators",
      "--memcpyopt",
      "--loop-versioning",
      "--elim-avail-extern"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}