{
  "program_id": "github-v0_9219.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 40,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 19,
    "oneSuccessor": 35,
    "twoPred": 25,
    "twoPredOneSuc": 13,
    "twoEach": 12,
    "twoSuccessor": 32,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 68,
    "BeginPhi": 1,
    "BranchCount": 67,
    "returnInt": 13,
    "CriticalCount": 26,
    "NumEdges": 99,
    "const32Bit": 165,
    "const64Bit": 27,
    "numConstZeroes": 76,
    "numConstOnes": 76,
    "UncondBranches": 35,
    "binaryConstArg": 35,
    "NumAShrInst": 0,
    "NumAddInst": 22,
    "NumAllocaInst": 38,
    "NumAndInst": 6,
    "BlockMid": 9,
    "BlockLow": 60,
    "NumBitCastInst": 0,
    "NumBrInst": 67,
    "NumCallInst": 24,
    "NumGetElementPtrInst": 59,
    "NumICmpInst": 32,
    "NumLShrInst": 3,
    "NumLoadInst": 204,
    "NumMulInst": 5,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 2,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 86,
    "NumSubInst": 13,
    "NumTruncInst": 0,
    "NumXorInst": 1,
    "NumZExtInst": 0,
    "TotalBlocks": 69,
    "TotalInsts": 573,
    "TotalMemInst": 411,
    "TotalFuncs": 18,
    "ArgsPhi": 2,
    "testUnary": 250
  },
  "baseline_oz_instcount": 574,
  "knowledge_base_entry": [
    "--adce",
    "--early-cse",
    "--reassociate",
    "--slp-vectorizer",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--redundant-dbg-inst-elim",
          "--alignment-from-assumptions",
          "--guard-widening",
          "--sroa",
          "--lowerswitch",
          "--bdce",
          "--inject-tli-mappings",
          "--correlated-propagation",
          "--name-anon-globals",
          "--partial-inliner",
          "--ipconstprop"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--redundant-dbg-inst-elim",
      "--alignment-from-assumptions",
      "--guard-widening",
      "--sroa",
      "--lowerswitch",
      "--bdce",
      "--inject-tli-mappings",
      "--correlated-propagation",
      "--name-anon-globals",
      "--partial-inliner",
      "--ipconstprop"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}