{
  "program_id": "linux-v0_1901.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 7,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 1,
    "oneSuccessor": 7,
    "twoPred": 3,
    "twoPredOneSuc": 1,
    "twoEach": 0,
    "twoSuccessor": 3,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 10,
    "returnInt": 9,
    "CriticalCount": 1,
    "NumEdges": 13,
    "const32Bit": 111,
    "const64Bit": 5,
    "numConstZeroes": 44,
    "numConstOnes": 46,
    "UncondBranches": 7,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 38,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 20,
    "NumBitCastInst": 8,
    "NumBrInst": 10,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 3,
    "NumLShrInst": 0,
    "NumLoadInst": 63,
    "NumMulInst": 2,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 2,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 45,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 24,
    "TotalInsts": 243,
    "TotalMemInst": 198,
    "TotalFuncs": 21,
    "ArgsPhi": 0,
    "testUnary": 113
  },
  "baseline_oz_instcount": 243,
  "knowledge_base_entry": [
    "--reassociate",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--sroa",
    "--lower-expect",
    "--ipsccp",
    "--early-cse",
    "--indvars",
    "--loop-fusion",
    "--gvn",
    "--load-store-vectorizer",
    "--newgvn",
    "--slsr",
    "--simplifycfg",
    "--instsimplify",
    "--loop-rotate"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--globalsplit",
          "--loop-instsimplify",
          "--loop-idiom",
          "--bdce",
          "--early-cse-memssa",
          "--always-inline",
          "--loop-predication",
          "--correlated-propagation",
          "--attributor",
          "--loop-simplifycfg",
          "--loop-versioning",
          "--scalarizer",
          "--rpo-functionattrs",
          "--redundant-dbg-inst-elim",
          "--aggressive-instcombine",
          "--coro-cleanup",
          "--cross-dso-cfi",
          "--loop-deletion",
          "--memcpyopt",
          "--instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--globalsplit",
      "--loop-instsimplify",
      "--loop-idiom",
      "--bdce",
      "--early-cse-memssa",
      "--always-inline",
      "--loop-predication",
      "--correlated-propagation",
      "--attributor",
      "--loop-simplifycfg",
      "--loop-versioning",
      "--scalarizer",
      "--rpo-functionattrs",
      "--redundant-dbg-inst-elim",
      "--aggressive-instcombine",
      "--coro-cleanup",
      "--cross-dso-cfi",
      "--loop-deletion",
      "--memcpyopt",
      "--instcombine"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}