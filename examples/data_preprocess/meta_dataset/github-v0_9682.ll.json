{
  "program_id": "github-v0_9682.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 1,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 4,
    "const64Bit": 10,
    "numConstZeroes": 8,
    "numConstOnes": 2,
    "UncondBranches": 0,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 0,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 0,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 0,
    "NumMulInst": 1,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 0,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 1,
    "TotalInsts": 50,
    "TotalMemInst": 25,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 5
  },
  "baseline_oz_instcount": 44,
  "knowledge_base_entry": [
    "--scalarizer",
    "--instcombine",
    "--ipsccp",
    "--globaldce",
    "--mergefunc",
    "--inline",
    "--slp-vectorizer",
    "--lower-expect",
    "--sccp",
    "--loop-simplifycfg",
    "--licm",
    "--lower-constant-intrinsics",
    "--newgvn",
    "--ipsccp",
    "--gvn",
    "--instcombine",
    "--gvn-hoist",
    "--dce",
    "--slp-vectorizer",
    "--newgvn",
    "--slsr",
    "--gvn-hoist",
    "--prune-eh",
    "--lower-expect",
    "--mergefunc",
    "--gvn-hoist",
    "--loop-simplifycfg",
    "--mldst-motion",
    "--loop-simplifycfg",
    "--instcombine",
    "--load-store-vectorizer",
    "--instsimplify",
    "--early-cse-memssa",
    "--sroa",
    "--reassociate",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "--sroa",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--forceattrs",
          "--slsr",
          "--inject-tli-mappings",
          "--loop-versioning-licm",
          "--coro-early",
          "--ipsccp",
          "--correlated-propagation",
          "--sink",
          "--loop-distribute",
          "--coro-split",
          "--loop-rotate",
          "--elim-avail-extern",
          "--early-cse-memssa",
          "--canonicalize-aliases",
          "--loop-deletion",
          "--loop-load-elim",
          "--instcombine",
          "--strip-debug-declare",
          "--functionattrs",
          "--libcalls-shrinkwrap",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--forceattrs",
      "--slsr",
      "--inject-tli-mappings",
      "--loop-versioning-licm",
      "--coro-early",
      "--ipsccp",
      "--correlated-propagation",
      "--sink",
      "--loop-distribute",
      "--coro-split",
      "--loop-rotate",
      "--elim-avail-extern",
      "--early-cse-memssa",
      "--canonicalize-aliases",
      "--loop-deletion",
      "--loop-load-elim",
      "--instcombine",
      "--strip-debug-declare",
      "--functionattrs",
      "--libcalls-shrinkwrap",
      "--licm"
    ],
    "performance_vs_Oz": "+4.5%"
  }
}