{
  "program_id": "tensorflow-v0_1943.ll",
  "autophase_features": {
    "BBNumArgsHi": 1,
    "BBNumArgsLo": 8,
    "onePred": 56,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 43,
    "oneSuccessor": 10,
    "twoPred": 15,
    "twoPredOneSuc": 1,
    "twoEach": 8,
    "twoSuccessor": 59,
    "morePreds": 4,
    "BB03Phi": 9,
    "BBHiPhi": 0,
    "BBNoPhi": 74,
    "BeginPhi": 9,
    "BranchCount": 30,
    "returnInt": 4,
    "CriticalCount": 62,
    "NumEdges": 128,
    "const32Bit": 60,
    "const64Bit": 85,
    "numConstZeroes": 63,
    "numConstOnes": 33,
    "UncondBranches": 10,
    "binaryConstArg": 7,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 79,
    "NumBitCastInst": 31,
    "NumBrInst": 30,
    "NumCallInst": 43,
    "NumGetElementPtrInst": 48,
    "NumICmpInst": 20,
    "NumLShrInst": 0,
    "NumLoadInst": 52,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 14,
    "NumRetInst": 6,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 32,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 83,
    "TotalInsts": 365,
    "TotalMemInst": 227,
    "TotalFuncs": 36,
    "ArgsPhi": 32,
    "testUnary": 109
  },
  "baseline_oz_instcount": 354,
  "knowledge_base_entry": [
    "--dce",
    "--die",
    "--lower-constant-intrinsics",
    "--gvn",
    "--sroa",
    "--newgvn",
    "--gvn-hoist",
    "--mergefunc",
    "--instsimplify",
    "--bdce",
    "--inline",
    "--simplifycfg",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-widenable-condition",
          "--mergereturn",
          "-loop-reduce",
          "--loop-simplifycfg",
          "--globalopt",
          "--coro-split",
          "--strip",
          "--loop-reroll",
          "--sroa",
          "--callsite-splitting",
          "--indvars",
          "--coro-cleanup",
          "--strip-dead-prototypes",
          "--lower-constant-intrinsics",
          "--lower-matrix-intrinsics",
          "--lowerinvoke",
          "--gvn",
          "--loop-deletion",
          "--simplifycfg",
          "--loop-versioning-licm",
          "--break-crit-edges",
          "--early-cse-memssa",
          "--infer-address-spaces",
          "--globalsplit",
          "--coro-elide",
          "--sccp"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-widenable-condition",
      "--mergereturn",
      "-loop-reduce",
      "--loop-simplifycfg",
      "--globalopt",
      "--coro-split",
      "--strip",
      "--loop-reroll",
      "--sroa",
      "--callsite-splitting",
      "--indvars",
      "--coro-cleanup",
      "--strip-dead-prototypes",
      "--lower-constant-intrinsics",
      "--lower-matrix-intrinsics",
      "--lowerinvoke",
      "--gvn",
      "--loop-deletion",
      "--simplifycfg",
      "--loop-versioning-licm",
      "--break-crit-edges",
      "--early-cse-memssa",
      "--infer-address-spaces",
      "--globalsplit",
      "--coro-elide",
      "--sccp"
    ],
    "performance_vs_Oz": "+2.5%"
  }
}