{
  "program_id": "linux-v0_8364.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 90,
    "onePredOneSuc": 50,
    "onePredTwoSuc": 40,
    "oneSuccessor": 76,
    "twoPred": 31,
    "twoPredOneSuc": 21,
    "twoEach": 3,
    "twoSuccessor": 53,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 145,
    "BeginPhi": 0,
    "BranchCount": 129,
    "returnInt": 24,
    "CriticalCount": 27,
    "NumEdges": 182,
    "const32Bit": 249,
    "const64Bit": 15,
    "numConstZeroes": 95,
    "numConstOnes": 118,
    "UncondBranches": 76,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 92,
    "NumAndInst": 4,
    "BlockMid": 14,
    "BlockLow": 131,
    "NumBitCastInst": 23,
    "NumBrInst": 129,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 51,
    "NumICmpInst": 52,
    "NumLShrInst": 0,
    "NumLoadInst": 217,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 121,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 25,
    "TotalBlocks": 145,
    "TotalInsts": 780,
    "TotalMemInst": 512,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 364
  },
  "baseline_oz_instcount": 782,
  "knowledge_base_entry": [
    "--mergereturn",
    "--jump-threading",
    "--instcombine",
    "--globalopt",
    "--instsimplify",
    "--inline",
    "--gvn",
    "--correlated-propagation",
    "--slp-vectorizer",
    "--lower-expect",
    "--instcombine",
    "--reassociate",
    "--early-cse-memssa",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--flattencfg",
          "--loop-vectorize",
          "--ipsccp",
          "--elim-avail-extern",
          "--early-cse",
          "--coro-split",
          "--lowerinvoke",
          "--always-inline",
          "--coro-elide",
          "--slp-vectorizer",
          "--called-value-propagation",
          "--lower-expect",
          "--sink",
          "--mem2reg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--flattencfg",
      "--loop-vectorize",
      "--ipsccp",
      "--elim-avail-extern",
      "--early-cse",
      "--coro-split",
      "--lowerinvoke",
      "--always-inline",
      "--coro-elide",
      "--slp-vectorizer",
      "--called-value-propagation",
      "--lower-expect",
      "--sink",
      "--mem2reg"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}