{
  "program_id": "github-v0_44628.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 33,
    "onePredOneSuc": 29,
    "onePredTwoSuc": 1,
    "oneSuccessor": 33,
    "twoPred": 14,
    "twoPredOneSuc": 1,
    "twoEach": 12,
    "twoSuccessor": 14,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 52,
    "BeginPhi": 0,
    "BranchCount": 47,
    "returnInt": 0,
    "CriticalCount": 2,
    "NumEdges": 61,
    "const32Bit": 234,
    "const64Bit": 75,
    "numConstZeroes": 151,
    "numConstOnes": 45,
    "UncondBranches": 33,
    "binaryConstArg": 64,
    "NumAShrInst": 1,
    "NumAddInst": 40,
    "NumAllocaInst": 17,
    "NumAndInst": 7,
    "BlockMid": 13,
    "BlockLow": 39,
    "NumBitCastInst": 0,
    "NumBrInst": 47,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 117,
    "NumICmpInst": 14,
    "NumLShrInst": 16,
    "NumLoadInst": 223,
    "NumMulInst": 5,
    "NumOrInst": 15,
    "NumPHIInst": 0,
    "NumRetInst": 5,
    "NumSExtInst": 23,
    "NumSelectInst": 0,
    "NumShlInst": 12,
    "NumStoreInst": 97,
    "NumSubInst": 9,
    "NumTruncInst": 10,
    "NumXorInst": 11,
    "NumZExtInst": 16,
    "TotalBlocks": 52,
    "TotalInsts": 690,
    "TotalMemInst": 459,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 289
  },
  "baseline_oz_instcount": 686,
  "knowledge_base_entry": [
    "--float2int",
    "--newgvn",
    "--mldst-motion",
    "--newgvn",
    "--aggressive-instcombine",
    "--ipsccp",
    "--die",
    "--early-cse-memssa",
    "--lower-expect",
    "--ipsccp",
    "--sccp",
    "--loop-instsimplify"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--loop-instsimplify",
          "--strip",
          "--lowerswitch",
          "--deadargelim",
          "--globalopt",
          "--canonicalize-aliases",
          "--forceattrs",
          "--strip-nondebug",
          "--loop-interchange",
          "--ee-instrument",
          "--scalarizer",
          "--name-anon-globals",
          "--ipconstprop",
          "--ipsccp",
          "--simple-loop-unswitch",
          "--globaldce",
          "--barrier",
          "--tailcallelim",
          "--strip-debug-declare",
          "--attributor",
          "--prune-eh",
          "--newgvn",
          "--early-cse",
          "--indvars",
          "-loop-reduce",
          "--rpo-functionattrs",
          "--loop-vectorize",
          "--gvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--loop-instsimplify",
      "--strip",
      "--lowerswitch",
      "--deadargelim",
      "--globalopt",
      "--canonicalize-aliases",
      "--forceattrs",
      "--strip-nondebug",
      "--loop-interchange",
      "--ee-instrument",
      "--scalarizer",
      "--name-anon-globals",
      "--ipconstprop",
      "--ipsccp",
      "--simple-loop-unswitch",
      "--globaldce",
      "--barrier",
      "--tailcallelim",
      "--strip-debug-declare",
      "--attributor",
      "--prune-eh",
      "--newgvn",
      "--early-cse",
      "--indvars",
      "-loop-reduce",
      "--rpo-functionattrs",
      "--loop-vectorize",
      "--gvn"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}