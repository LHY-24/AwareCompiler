{
  "program_id": "linux-v0_148.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 87,
    "onePredOneSuc": 72,
    "onePredTwoSuc": 6,
    "oneSuccessor": 85,
    "twoPred": 9,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 12,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 132,
    "BeginPhi": 0,
    "BranchCount": 97,
    "returnInt": 5,
    "CriticalCount": 4,
    "NumEdges": 144,
    "const32Bit": 326,
    "const64Bit": 8,
    "numConstZeroes": 151,
    "numConstOnes": 148,
    "UncondBranches": 85,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 112,
    "NumAndInst": 0,
    "BlockMid": 16,
    "BlockLow": 116,
    "NumBitCastInst": 88,
    "NumBrInst": 97,
    "NumCallInst": 81,
    "NumGetElementPtrInst": 86,
    "NumICmpInst": 15,
    "NumLShrInst": 0,
    "NumLoadInst": 261,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 28,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 154,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 6,
    "NumZExtInst": 4,
    "TotalBlocks": 132,
    "TotalInsts": 953,
    "TotalMemInst": 694,
    "TotalFuncs": 36,
    "ArgsPhi": 0,
    "testUnary": 479
  },
  "baseline_oz_instcount": 952,
  "knowledge_base_entry": [
    "--adce",
    "--mergefunc",
    "--inline",
    "--ipsccp",
    "--flattencfg",
    "--globalopt",
    "--correlated-propagation",
    "--sroa",
    "--elim-avail-extern",
    "--prune-eh",
    "--aggressive-instcombine",
    "--globaldce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--slsr",
          "--loweratomic",
          "--consthoist",
          "--lower-expect",
          "--ipsccp",
          "--nary-reassociate",
          "--redundant-dbg-inst-elim",
          "--speculative-execution",
          "--loop-versioning",
          "--globalsplit",
          "--slp-vectorizer",
          "--constmerge",
          "--mergereturn",
          "--memcpyopt",
          "--dce",
          "--globaldce",
          "--licm",
          "-loop-reduce",
          "--prune-eh",
          "--strip-dead-prototypes",
          "--loop-unroll-and-jam",
          "--newgvn",
          "--canonicalize-aliases",
          "--lowerinvoke",
          "--early-cse",
          "--mergefunc",
          "--rpo-functionattrs",
          "--simplifycfg",
          "--lower-widenable-condition",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--slsr",
      "--loweratomic",
      "--consthoist",
      "--lower-expect",
      "--ipsccp",
      "--nary-reassociate",
      "--redundant-dbg-inst-elim",
      "--speculative-execution",
      "--loop-versioning",
      "--globalsplit",
      "--slp-vectorizer",
      "--constmerge",
      "--mergereturn",
      "--memcpyopt",
      "--dce",
      "--globaldce",
      "--licm",
      "-loop-reduce",
      "--prune-eh",
      "--strip-dead-prototypes",
      "--loop-unroll-and-jam",
      "--newgvn",
      "--canonicalize-aliases",
      "--lowerinvoke",
      "--early-cse",
      "--mergefunc",
      "--rpo-functionattrs",
      "--simplifycfg",
      "--lower-widenable-condition",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}