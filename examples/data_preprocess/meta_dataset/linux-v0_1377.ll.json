{
  "program_id": "linux-v0_1377.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 62,
    "onePredOneSuc": 45,
    "onePredTwoSuc": 17,
    "oneSuccessor": 60,
    "twoPred": 21,
    "twoPredOneSuc": 9,
    "twoEach": 1,
    "twoSuccessor": 24,
    "morePreds": 1,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 102,
    "BeginPhi": 1,
    "BranchCount": 83,
    "returnInt": 19,
    "CriticalCount": 7,
    "NumEdges": 108,
    "const32Bit": 313,
    "const64Bit": 27,
    "numConstZeroes": 141,
    "numConstOnes": 111,
    "UncondBranches": 60,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 86,
    "NumAndInst": 2,
    "BlockMid": 13,
    "BlockLow": 90,
    "NumBitCastInst": 20,
    "NumBrInst": 83,
    "NumCallInst": 49,
    "NumGetElementPtrInst": 103,
    "NumICmpInst": 27,
    "NumLShrInst": 1,
    "NumLoadInst": 202,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 19,
    "NumSExtInst": 4,
    "NumSelectInst": 5,
    "NumShlInst": 1,
    "NumStoreInst": 115,
    "NumSubInst": 0,
    "NumTruncInst": 3,
    "NumXorInst": 8,
    "NumZExtInst": 11,
    "TotalBlocks": 103,
    "TotalInsts": 742,
    "TotalMemInst": 555,
    "TotalFuncs": 37,
    "ArgsPhi": 2,
    "testUnary": 326
  },
  "baseline_oz_instcount": 743,
  "knowledge_base_entry": [
    "--licm",
    "--lower-constant-intrinsics",
    "--slp-vectorizer",
    "-loop-reduce",
    "--early-cse-memssa",
    "--load-store-vectorizer",
    "--instcombine",
    "--die",
    "--simplifycfg",
    "--correlated-propagation",
    "--lower-expect"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--gvn",
          "--loop-predication",
          "--sink",
          "--strip-nondebug",
          "--name-anon-globals",
          "--libcalls-shrinkwrap",
          "--loop-versioning",
          "--sroa",
          "--adce",
          "--loop-distribute",
          "--sccp",
          "--mergefunc"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--gvn",
      "--loop-predication",
      "--sink",
      "--strip-nondebug",
      "--name-anon-globals",
      "--libcalls-shrinkwrap",
      "--loop-versioning",
      "--sroa",
      "--adce",
      "--loop-distribute",
      "--sccp",
      "--mergefunc"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}