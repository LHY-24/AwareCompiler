{
  "program_id": "linux-v0_10188.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 87,
    "onePredOneSuc": 61,
    "onePredTwoSuc": 24,
    "oneSuccessor": 83,
    "twoPred": 28,
    "twoPredOneSuc": 20,
    "twoEach": 3,
    "twoSuccessor": 34,
    "morePreds": 9,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 146,
    "BeginPhi": 0,
    "BranchCount": 114,
    "returnInt": 27,
    "CriticalCount": 14,
    "NumEdges": 179,
    "const32Bit": 335,
    "const64Bit": 59,
    "numConstZeroes": 128,
    "numConstOnes": 134,
    "UncondBranches": 83,
    "binaryConstArg": 55,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 87,
    "NumAndInst": 21,
    "BlockMid": 17,
    "BlockLow": 129,
    "NumBitCastInst": 7,
    "NumBrInst": 114,
    "NumCallInst": 46,
    "NumGetElementPtrInst": 80,
    "NumICmpInst": 44,
    "NumLShrInst": 1,
    "NumLoadInst": 258,
    "NumMulInst": 6,
    "NumOrInst": 14,
    "NumPHIInst": 0,
    "NumRetInst": 22,
    "NumSExtInst": 21,
    "NumSelectInst": 6,
    "NumShlInst": 3,
    "NumStoreInst": 158,
    "NumSubInst": 2,
    "NumTruncInst": 29,
    "NumXorInst": 8,
    "NumZExtInst": 51,
    "TotalBlocks": 146,
    "TotalInsts": 998,
    "TotalMemInst": 629,
    "TotalFuncs": 34,
    "ArgsPhi": 0,
    "testUnary": 457
  },
  "baseline_oz_instcount": 1001,
  "knowledge_base_entry": [
    "--mem2reg",
    "--loop-instsimplify",
    "--aggressive-instcombine",
    "--lower-expect",
    "--instcombine",
    "--load-store-vectorizer",
    "--dce",
    "--newgvn",
    "--prune-eh",
    "--gvn",
    "--instsimplify",
    "--mldst-motion",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--correlated-propagation",
          "--loop-versioning-licm",
          "--loop-simplifycfg",
          "--indvars",
          "--newgvn",
          "--aggressive-instcombine",
          "--instnamer",
          "--coro-cleanup",
          "--nary-reassociate",
          "--loop-vectorize",
          "-loop-reduce",
          "--argpromotion",
          "--pgo-memop-opt",
          "--loop-deletion",
          "--name-anon-globals",
          "--loop-simplify",
          "--deadargelim",
          "--sancov",
          "--cross-dso-cfi"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+4.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--correlated-propagation",
      "--loop-versioning-licm",
      "--loop-simplifycfg",
      "--indvars",
      "--newgvn",
      "--aggressive-instcombine",
      "--instnamer",
      "--coro-cleanup",
      "--nary-reassociate",
      "--loop-vectorize",
      "-loop-reduce",
      "--argpromotion",
      "--pgo-memop-opt",
      "--loop-deletion",
      "--name-anon-globals",
      "--loop-simplify",
      "--deadargelim",
      "--sancov",
      "--cross-dso-cfi"
    ],
    "performance_vs_Oz": "+4.9%"
  }
}