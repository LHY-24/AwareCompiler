{
  "program_id": "github-v0_19047.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 1,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 1,
    "twoEach": 4,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 39,
    "const64Bit": 29,
    "numConstZeroes": 31,
    "numConstOnes": 28,
    "UncondBranches": 11,
    "binaryConstArg": 19,
    "NumAShrInst": 3,
    "NumAddInst": 7,
    "NumAllocaInst": 13,
    "NumAndInst": 4,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 20,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 38,
    "NumMulInst": 0,
    "NumOrInst": 5,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 19,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 1,
    "NumZExtInst": 20,
    "TotalBlocks": 21,
    "TotalInsts": 181,
    "TotalMemInst": 97,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 83
  },
  "baseline_oz_instcount": 181,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--loop-rotate",
    "--gvn-hoist",
    "--jump-threading",
    "--gvn-hoist",
    "--lower-expect",
    "--bdce",
    "--licm",
    "--instcombine",
    "--lower-constant-intrinsics",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--partially-inline-libcalls",
          "--early-cse-memssa",
          "--lower-matrix-intrinsics",
          "--loop-data-prefetch",
          "--dse",
          "--break-crit-edges",
          "--licm",
          "--loop-fusion",
          "--aggressive-instcombine",
          "--dce",
          "--mem2reg",
          "--coro-early",
          "--loop-load-elim",
          "--globalopt",
          "--simple-loop-unswitch",
          "--loop-reroll",
          "--die",
          "--newgvn"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--partially-inline-libcalls",
      "--early-cse-memssa",
      "--lower-matrix-intrinsics",
      "--loop-data-prefetch",
      "--dse",
      "--break-crit-edges",
      "--licm",
      "--loop-fusion",
      "--aggressive-instcombine",
      "--dce",
      "--mem2reg",
      "--coro-early",
      "--loop-load-elim",
      "--globalopt",
      "--simple-loop-unswitch",
      "--loop-reroll",
      "--die",
      "--newgvn"
    ],
    "performance_vs_Oz": "+3.3%"
  }
}