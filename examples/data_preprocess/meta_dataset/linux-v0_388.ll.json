{
  "program_id": "linux-v0_388.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 13,
    "onePredTwoSuc": 7,
    "oneSuccessor": 15,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 3,
    "twoSuccessor": 12,
    "morePreds": 3,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 37,
    "BeginPhi": 0,
    "BranchCount": 26,
    "returnInt": 8,
    "CriticalCount": 5,
    "NumEdges": 39,
    "const32Bit": 112,
    "const64Bit": 21,
    "numConstZeroes": 60,
    "numConstOnes": 33,
    "UncondBranches": 15,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 28,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 34,
    "NumBitCastInst": 1,
    "NumBrInst": 26,
    "NumCallInst": 23,
    "NumGetElementPtrInst": 39,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 77,
    "NumMulInst": 2,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 49,
    "NumSubInst": 1,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 37,
    "TotalInsts": 284,
    "TotalMemInst": 216,
    "TotalFuncs": 18,
    "ArgsPhi": 0,
    "testUnary": 115
  },
  "baseline_oz_instcount": 264,
  "knowledge_base_entry": [
    "--scalarizer",
    "--early-cse-memssa",
    "--loop-reroll",
    "--gvn",
    "--indvars",
    "--nary-reassociate",
    "--ipsccp",
    "--newgvn",
    "--bdce",
    "--simplifycfg",
    "--early-cse",
    "--loop-fusion",
    "--gvn",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--memcpyopt",
    "--gvn-hoist",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--jump-threading",
          "--lower-constant-intrinsics",
          "--redundant-dbg-inst-elim",
          "--flattencfg",
          "--loop-reroll",
          "--inject-tli-mappings",
          "--loop-unroll",
          "--loop-versioning",
          "--sroa",
          "--scalarizer",
          "--post-inline-ee-instrument",
          "--loop-guard-widening",
          "--float2int",
          "--libcalls-shrinkwrap",
          "--loop-simplify",
          "--lcssa",
          "--sccp",
          "--adce",
          "--ipsccp",
          "--rewrite-statepoints-for-gc",
          "--slp-vectorizer",
          "--ee-instrument",
          "--gvn",
          "--loop-instsimplify",
          "--loop-unroll-and-jam",
          "--simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--jump-threading",
      "--lower-constant-intrinsics",
      "--redundant-dbg-inst-elim",
      "--flattencfg",
      "--loop-reroll",
      "--inject-tli-mappings",
      "--loop-unroll",
      "--loop-versioning",
      "--sroa",
      "--scalarizer",
      "--post-inline-ee-instrument",
      "--loop-guard-widening",
      "--float2int",
      "--libcalls-shrinkwrap",
      "--loop-simplify",
      "--lcssa",
      "--sccp",
      "--adce",
      "--ipsccp",
      "--rewrite-statepoints-for-gc",
      "--slp-vectorizer",
      "--ee-instrument",
      "--gvn",
      "--loop-instsimplify",
      "--loop-unroll-and-jam",
      "--simplifycfg"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}