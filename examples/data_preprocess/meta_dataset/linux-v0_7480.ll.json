{
  "program_id": "linux-v0_7480.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 56,
    "onePredOneSuc": 43,
    "onePredTwoSuc": 13,
    "oneSuccessor": 49,
    "twoPred": 12,
    "twoPredOneSuc": 3,
    "twoEach": 4,
    "twoSuccessor": 23,
    "morePreds": 7,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 106,
    "BeginPhi": 0,
    "BranchCount": 72,
    "returnInt": 38,
    "CriticalCount": 7,
    "NumEdges": 109,
    "const32Bit": 321,
    "const64Bit": 18,
    "numConstZeroes": 130,
    "numConstOnes": 143,
    "UncondBranches": 49,
    "binaryConstArg": 16,
    "NumAShrInst": 2,
    "NumAddInst": 2,
    "NumAllocaInst": 117,
    "NumAndInst": 3,
    "BlockMid": 17,
    "BlockLow": 89,
    "NumBitCastInst": 44,
    "NumBrInst": 72,
    "NumCallInst": 87,
    "NumGetElementPtrInst": 69,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 262,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 31,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 168,
    "NumSubInst": 1,
    "NumTruncInst": 10,
    "NumXorInst": 6,
    "NumZExtInst": 10,
    "TotalBlocks": 106,
    "TotalInsts": 920,
    "TotalMemInst": 703,
    "TotalFuncs": 65,
    "ArgsPhi": 0,
    "testUnary": 450
  },
  "baseline_oz_instcount": 922,
  "knowledge_base_entry": [
    "--functionattrs",
    "--adce",
    "--correlated-propagation",
    "--lower-expect",
    "--mergefunc",
    "--newgvn",
    "--aggressive-instcombine",
    "--inline",
    "--instcombine",
    "--reassociate",
    "--gvn-hoist",
    "--instsimplify",
    "--adce",
    "--ipsccp",
    "--aggressive-instcombine",
    "--newgvn",
    "--slp-vectorizer",
    "--elim-avail-extern"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mem2reg",
          "--div-rem-pairs",
          "--loop-interchange",
          "--forceattrs",
          "--strip-debug-declare",
          "--lower-expect",
          "--loop-unswitch",
          "--indvars",
          "--aggressive-instcombine",
          "--loweratomic",
          "--attributor",
          "--scalarizer",
          "--slsr",
          "--simplifycfg",
          "--inline",
          "--loop-predication",
          "--rewrite-statepoints-for-gc",
          "--loop-simplifycfg",
          "--reassociate",
          "--loop-sink",
          "--coro-split",
          "--die",
          "--loop-idiom",
          "--float2int",
          "--rpo-functionattrs",
          "--mergefunc",
          "--partially-inline-libcalls",
          "--loop-load-elim",
          "--jump-threading"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mem2reg",
      "--div-rem-pairs",
      "--loop-interchange",
      "--forceattrs",
      "--strip-debug-declare",
      "--lower-expect",
      "--loop-unswitch",
      "--indvars",
      "--aggressive-instcombine",
      "--loweratomic",
      "--attributor",
      "--scalarizer",
      "--slsr",
      "--simplifycfg",
      "--inline",
      "--loop-predication",
      "--rewrite-statepoints-for-gc",
      "--loop-simplifycfg",
      "--reassociate",
      "--loop-sink",
      "--coro-split",
      "--die",
      "--loop-idiom",
      "--float2int",
      "--rpo-functionattrs",
      "--mergefunc",
      "--partially-inline-libcalls",
      "--loop-load-elim",
      "--jump-threading"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}