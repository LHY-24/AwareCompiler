{
  "program_id": "linux-v0_6359.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 5,
    "oneSuccessor": 14,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 6,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 11,
    "CriticalCount": 0,
    "NumEdges": 32,
    "const32Bit": 133,
    "const64Bit": 6,
    "numConstZeroes": 45,
    "numConstOnes": 57,
    "UncondBranches": 14,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 43,
    "NumAndInst": 1,
    "BlockMid": 6,
    "BlockLow": 30,
    "NumBitCastInst": 9,
    "NumBrInst": 20,
    "NumCallInst": 29,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 5,
    "NumLShrInst": 0,
    "NumLoadInst": 100,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 14,
    "NumSExtInst": 1,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 61,
    "NumSubInst": 2,
    "NumTruncInst": 5,
    "NumXorInst": 2,
    "NumZExtInst": 3,
    "TotalBlocks": 36,
    "TotalInsts": 338,
    "TotalMemInst": 268,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 165
  },
  "baseline_oz_instcount": 338,
  "knowledge_base_entry": [
    "--loop-sink",
    "--newgvn",
    "--aggressive-instcombine",
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--mem2reg",
    "--sccp",
    "--dce",
    "--sroa",
    "--elim-avail-extern",
    "--licm",
    "--early-cse",
    "--prune-eh",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--loop-distribute",
          "--loop-reroll",
          "--mergereturn",
          "--loop-rotate",
          "--newgvn",
          "--separate-const-offset-from-gep",
          "--partially-inline-libcalls",
          "--libcalls-shrinkwrap",
          "--simplifycfg",
          "--strip-dead-prototypes",
          "--aggressive-instcombine",
          "--slsr",
          "--sancov",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--loop-distribute",
      "--loop-reroll",
      "--mergereturn",
      "--loop-rotate",
      "--newgvn",
      "--separate-const-offset-from-gep",
      "--partially-inline-libcalls",
      "--libcalls-shrinkwrap",
      "--simplifycfg",
      "--strip-dead-prototypes",
      "--aggressive-instcombine",
      "--slsr",
      "--sancov",
      "--licm"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}