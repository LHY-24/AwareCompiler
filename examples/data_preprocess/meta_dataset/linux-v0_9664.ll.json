{
  "program_id": "linux-v0_9664.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 12,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 12,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 2,
    "twoSuccessor": 5,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 7,
    "CriticalCount": 1,
    "NumEdges": 22,
    "const32Bit": 36,
    "const64Bit": 3,
    "numConstZeroes": 10,
    "numConstOnes": 23,
    "UncondBranches": 12,
    "binaryConstArg": 11,
    "NumAShrInst": 1,
    "NumAddInst": 4,
    "NumAllocaInst": 16,
    "NumAndInst": 4,
    "BlockMid": 2,
    "BlockLow": 21,
    "NumBitCastInst": 1,
    "NumBrInst": 17,
    "NumCallInst": 9,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 4,
    "NumLShrInst": 0,
    "NumLoadInst": 34,
    "NumMulInst": 0,
    "NumOrInst": 2,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 5,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 30,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 23,
    "TotalInsts": 152,
    "TotalMemInst": 96,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 66
  },
  "baseline_oz_instcount": 153,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--jump-threading",
    "--lower-constant-intrinsics",
    "--aggressive-instcombine",
    "--sroa",
    "--jump-threading",
    "--die"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--callsite-splitting",
          "--ipsccp",
          "--functionattrs",
          "--canonicalize-aliases",
          "--consthoist",
          "--coro-early",
          "--load-store-vectorizer",
          "--strip-debug-declare",
          "--post-inline-ee-instrument",
          "--coro-elide"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.7%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--callsite-splitting",
      "--ipsccp",
      "--functionattrs",
      "--canonicalize-aliases",
      "--consthoist",
      "--coro-early",
      "--load-store-vectorizer",
      "--strip-debug-declare",
      "--post-inline-ee-instrument",
      "--coro-elide"
    ],
    "performance_vs_Oz": "+0.7%"
  }
}