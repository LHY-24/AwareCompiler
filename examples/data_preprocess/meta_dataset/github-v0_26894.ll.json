{
  "program_id": "github-v0_26894.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 33,
    "onePredOneSuc": 25,
    "onePredTwoSuc": 8,
    "oneSuccessor": 29,
    "twoPred": 15,
    "twoPredOneSuc": 4,
    "twoEach": 8,
    "twoSuccessor": 21,
    "morePreds": 2,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 53,
    "BeginPhi": 1,
    "BranchCount": 50,
    "returnInt": 19,
    "CriticalCount": 12,
    "NumEdges": 71,
    "const32Bit": 83,
    "const64Bit": 24,
    "numConstZeroes": 49,
    "numConstOnes": 42,
    "UncondBranches": 29,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 24,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 53,
    "NumBitCastInst": 0,
    "NumBrInst": 50,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 24,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 65,
    "NumMulInst": 1,
    "NumOrInst": 1,
    "NumPHIInst": 1,
    "NumRetInst": 4,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 39,
    "NumSubInst": 3,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 3,
    "TotalBlocks": 54,
    "TotalInsts": 277,
    "TotalMemInst": 174,
    "TotalFuncs": 14,
    "ArgsPhi": 2,
    "testUnary": 101
  },
  "baseline_oz_instcount": 278,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--dse",
    "--ipsccp",
    "--adce",
    "--elim-avail-extern",
    "--flattencfg",
    "--inline",
    "--sccp",
    "--gvn"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--jump-threading",
          "--loop-data-prefetch",
          "--lowerinvoke",
          "--lowerswitch",
          "--coro-early",
          "--inject-tli-mappings",
          "--sancov",
          "--barrier",
          "--dse",
          "--coro-split",
          "--loop-distribute"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--jump-threading",
      "--loop-data-prefetch",
      "--lowerinvoke",
      "--lowerswitch",
      "--coro-early",
      "--inject-tli-mappings",
      "--sancov",
      "--barrier",
      "--dse",
      "--coro-split",
      "--loop-distribute"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}