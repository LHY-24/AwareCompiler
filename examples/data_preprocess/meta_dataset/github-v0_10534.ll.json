{
  "program_id": "github-v0_10534.ll",
  "autophase_features": {
    "BBNumArgsHi": 4,
    "BBNumArgsLo": 3,
    "onePred": 7,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 3,
    "oneSuccessor": 5,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 5,
    "twoSuccessor": 10,
    "morePreds": 2,
    "BB03Phi": 7,
    "BBHiPhi": 0,
    "BBNoPhi": 9,
    "BeginPhi": 7,
    "BranchCount": 15,
    "returnInt": 4,
    "CriticalCount": 13,
    "NumEdges": 25,
    "const32Bit": 28,
    "const64Bit": 1,
    "numConstZeroes": 12,
    "numConstOnes": 7,
    "UncondBranches": 5,
    "binaryConstArg": 25,
    "NumAShrInst": 0,
    "NumAddInst": 10,
    "NumAllocaInst": 0,
    "NumAndInst": 3,
    "BlockMid": 2,
    "BlockLow": 14,
    "NumBitCastInst": 0,
    "NumBrInst": 15,
    "NumCallInst": 5,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 5,
    "NumMulInst": 1,
    "NumOrInst": 3,
    "NumPHIInst": 16,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 2,
    "NumSubInst": 1,
    "NumTruncInst": 3,
    "NumXorInst": 0,
    "NumZExtInst": 5,
    "TotalBlocks": 16,
    "TotalInsts": 130,
    "TotalMemInst": 19,
    "TotalFuncs": 6,
    "ArgsPhi": 34,
    "testUnary": 32
  },
  "baseline_oz_instcount": 129,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--gvn-hoist",
    "--load-store-vectorizer",
    "--gvn-hoist",
    "--newgvn",
    "--adce",
    "--load-store-vectorizer",
    "-loop-reduce",
    "--newgvn",
    "--mem2reg",
    "--prune-eh",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--die",
    "--mergefunc",
    "--gvn",
    "--globalopt",
    "--reassociate",
    "--simplifycfg",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "--barrier",
          "--lower-widenable-condition",
          "-loop-reduce",
          "--loop-fusion",
          "--rewrite-statepoints-for-gc",
          "--simplifycfg",
          "--pgo-memop-opt",
          "--coro-cleanup",
          "--lower-constant-intrinsics",
          "--strip-dead-prototypes",
          "--alignment-from-assumptions",
          "--attributor"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "--barrier",
      "--lower-widenable-condition",
      "-loop-reduce",
      "--loop-fusion",
      "--rewrite-statepoints-for-gc",
      "--simplifycfg",
      "--pgo-memop-opt",
      "--coro-cleanup",
      "--lower-constant-intrinsics",
      "--strip-dead-prototypes",
      "--alignment-from-assumptions",
      "--attributor"
    ],
    "performance_vs_Oz": "+1.6%"
  }
}