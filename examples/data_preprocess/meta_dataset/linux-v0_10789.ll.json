{
  "program_id": "linux-v0_10789.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 4,
    "onePred": 51,
    "onePredOneSuc": 32,
    "onePredTwoSuc": 18,
    "oneSuccessor": 41,
    "twoPred": 14,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 29,
    "morePreds": 5,
    "BB03Phi": 4,
    "BBHiPhi": 0,
    "BBNoPhi": 94,
    "BeginPhi": 4,
    "BranchCount": 70,
    "returnInt": 20,
    "CriticalCount": 13,
    "NumEdges": 99,
    "const32Bit": 352,
    "const64Bit": 25,
    "numConstZeroes": 152,
    "numConstOnes": 128,
    "UncondBranches": 41,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 102,
    "NumAndInst": 7,
    "BlockMid": 17,
    "BlockLow": 81,
    "NumBitCastInst": 12,
    "NumBrInst": 70,
    "NumCallInst": 72,
    "NumGetElementPtrInst": 108,
    "NumICmpInst": 28,
    "NumLShrInst": 1,
    "NumLoadInst": 279,
    "NumMulInst": 4,
    "NumOrInst": 6,
    "NumPHIInst": 4,
    "NumRetInst": 28,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 5,
    "NumStoreInst": 133,
    "NumSubInst": 3,
    "NumTruncInst": 11,
    "NumXorInst": 3,
    "NumZExtInst": 23,
    "TotalBlocks": 98,
    "TotalInsts": 916,
    "TotalMemInst": 694,
    "TotalFuncs": 48,
    "ArgsPhi": 10,
    "testUnary": 435
  },
  "baseline_oz_instcount": 915,
  "knowledge_base_entry": [
    "--ipsccp",
    "--jump-threading",
    "--loop-instsimplify",
    "--adce",
    "--lower-expect",
    "--jump-threading",
    "--reassociate",
    "--bdce",
    "--instcombine",
    "--mldst-motion"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unswitch",
          "--indvars",
          "--functionattrs",
          "--always-inline",
          "--gvn-hoist",
          "--instcombine",
          "--coro-split",
          "--ipsccp",
          "--infer-address-spaces",
          "--rewrite-statepoints-for-gc",
          "--tailcallelim",
          "--strip-debug-declare",
          "--loop-instsimplify",
          "--deadargelim",
          "--loop-predication",
          "--loop-idiom",
          "--early-cse",
          "--dce",
          "-loop-reduce",
          "--speculative-execution",
          "--mergefunc",
          "--canonicalize-aliases",
          "--pgo-memop-opt",
          "--prune-eh",
          "--mergereturn",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unswitch",
      "--indvars",
      "--functionattrs",
      "--always-inline",
      "--gvn-hoist",
      "--instcombine",
      "--coro-split",
      "--ipsccp",
      "--infer-address-spaces",
      "--rewrite-statepoints-for-gc",
      "--tailcallelim",
      "--strip-debug-declare",
      "--loop-instsimplify",
      "--deadargelim",
      "--loop-predication",
      "--loop-idiom",
      "--early-cse",
      "--dce",
      "-loop-reduce",
      "--speculative-execution",
      "--mergefunc",
      "--canonicalize-aliases",
      "--pgo-memop-opt",
      "--prune-eh",
      "--mergereturn",
      "--inline"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}