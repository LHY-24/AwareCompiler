{
  "program_id": "github-v0_13255.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 9,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 0,
    "oneSuccessor": 9,
    "twoPred": 4,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 4,
    "morePreds": 0,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 1,
    "BranchCount": 13,
    "returnInt": 3,
    "CriticalCount": 1,
    "NumEdges": 17,
    "const32Bit": 70,
    "const64Bit": 3,
    "numConstZeroes": 34,
    "numConstOnes": 32,
    "UncondBranches": 9,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 3,
    "NumAllocaInst": 20,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 11,
    "NumBrInst": 13,
    "NumCallInst": 16,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 55,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 8,
    "NumSExtInst": 2,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 37,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 2,
    "NumZExtInst": 4,
    "TotalBlocks": 21,
    "TotalInsts": 203,
    "TotalMemInst": 147,
    "TotalFuncs": 12,
    "ArgsPhi": 2,
    "testUnary": 94
  },
  "baseline_oz_instcount": 203,
  "knowledge_base_entry": [
    "--gvn",
    "--reassociate",
    "--instsimplify",
    "--gvn",
    "--aggressive-instcombine",
    "--sroa",
    "--inline",
    "--reassociate",
    "--die",
    "--newgvn",
    "--die",
    "--mergefunc",
    "--instsimplify",
    "--globalopt",
    "--elim-avail-extern",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--slp-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--nary-reassociate",
          "--strip-debug-declare",
          "--aggressive-instcombine",
          "--slp-vectorizer",
          "--loop-data-prefetch",
          "--loop-instsimplify",
          "--loop-simplify",
          "--loop-reroll",
          "--indvars",
          "--globaldce",
          "--coro-cleanup",
          "--gvn-hoist",
          "--licm",
          "--speculative-execution",
          "--strip-dead-prototypes"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--nary-reassociate",
      "--strip-debug-declare",
      "--aggressive-instcombine",
      "--slp-vectorizer",
      "--loop-data-prefetch",
      "--loop-instsimplify",
      "--loop-simplify",
      "--loop-reroll",
      "--indvars",
      "--globaldce",
      "--coro-cleanup",
      "--gvn-hoist",
      "--licm",
      "--speculative-execution",
      "--strip-dead-prototypes"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}