{
  "program_id": "linux-v0_1523.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 42,
    "onePredOneSuc": 33,
    "onePredTwoSuc": 8,
    "oneSuccessor": 38,
    "twoPred": 11,
    "twoPredOneSuc": 5,
    "twoEach": 3,
    "twoSuccessor": 18,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 71,
    "BeginPhi": 1,
    "BranchCount": 55,
    "returnInt": 11,
    "CriticalCount": 6,
    "NumEdges": 85,
    "const32Bit": 263,
    "const64Bit": 8,
    "numConstZeroes": 102,
    "numConstOnes": 98,
    "UncondBranches": 38,
    "binaryConstArg": 28,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 64,
    "NumAndInst": 5,
    "BlockMid": 15,
    "BlockLow": 57,
    "NumBitCastInst": 18,
    "NumBrInst": 55,
    "NumCallInst": 32,
    "NumGetElementPtrInst": 72,
    "NumICmpInst": 18,
    "NumLShrInst": 1,
    "NumLoadInst": 184,
    "NumMulInst": 7,
    "NumOrInst": 5,
    "NumPHIInst": 1,
    "NumRetInst": 13,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 9,
    "NumStoreInst": 113,
    "NumSubInst": 1,
    "NumTruncInst": 8,
    "NumXorInst": 10,
    "NumZExtInst": 11,
    "TotalBlocks": 72,
    "TotalInsts": 641,
    "TotalMemInst": 465,
    "TotalFuncs": 27,
    "ArgsPhi": 2,
    "testUnary": 292
  },
  "baseline_oz_instcount": 642,
  "knowledge_base_entry": [
    "--loop-simplify",
    "--gvn",
    "--aggressive-instcombine",
    "--dce",
    "--die",
    "--sccp",
    "--bdce",
    "--newgvn",
    "--reassociate",
    "--aggressive-instcombine",
    "--instsimplify",
    "--adce",
    "--licm",
    "--elim-avail-extern",
    "--simplifycfg",
    "--correlated-propagation",
    "--instcombine",
    "--loop-simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--instcombine",
          "--mergeicmps",
          "--canonicalize-aliases",
          "--consthoist",
          "--div-rem-pairs",
          "--ipconstprop",
          "--dce",
          "--scalarizer",
          "--loop-unroll-and-jam",
          "--loop-unroll",
          "--loop-idiom",
          "--simple-loop-unswitch",
          "--elim-avail-extern",
          "--hotcoldsplit",
          "--strip-debug-declare",
          "--barrier",
          "--prune-eh",
          "--inline",
          "--constmerge",
          "--loweratomic",
          "--mldst-motion",
          "--aggressive-instcombine",
          "--lower-guard-intrinsic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--instcombine",
      "--mergeicmps",
      "--canonicalize-aliases",
      "--consthoist",
      "--div-rem-pairs",
      "--ipconstprop",
      "--dce",
      "--scalarizer",
      "--loop-unroll-and-jam",
      "--loop-unroll",
      "--loop-idiom",
      "--simple-loop-unswitch",
      "--elim-avail-extern",
      "--hotcoldsplit",
      "--strip-debug-declare",
      "--barrier",
      "--prune-eh",
      "--inline",
      "--constmerge",
      "--loweratomic",
      "--mldst-motion",
      "--aggressive-instcombine",
      "--lower-guard-intrinsic"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}