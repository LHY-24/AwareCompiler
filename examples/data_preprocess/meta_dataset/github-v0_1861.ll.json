{
  "program_id": "github-v0_1861.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 34,
    "onePredOneSuc": 24,
    "onePredTwoSuc": 10,
    "oneSuccessor": 31,
    "twoPred": 17,
    "twoPredOneSuc": 6,
    "twoEach": 7,
    "twoSuccessor": 22,
    "morePreds": 2,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 65,
    "BeginPhi": 2,
    "BranchCount": 53,
    "returnInt": 1,
    "CriticalCount": 12,
    "NumEdges": 75,
    "const32Bit": 156,
    "const64Bit": 21,
    "numConstZeroes": 83,
    "numConstOnes": 50,
    "UncondBranches": 31,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 41,
    "NumAndInst": 0,
    "BlockMid": 8,
    "BlockLow": 59,
    "NumBitCastInst": 3,
    "NumBrInst": 53,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 68,
    "NumICmpInst": 22,
    "NumLShrInst": 0,
    "NumLoadInst": 194,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 2,
    "NumRetInst": 14,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 82,
    "NumSubInst": 5,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 67,
    "TotalInsts": 511,
    "TotalMemInst": 389,
    "TotalFuncs": 16,
    "ArgsPhi": 4,
    "testUnary": 250
  },
  "baseline_oz_instcount": 513,
  "knowledge_base_entry": [
    "--loop-unroll-and-jam",
    "--instcombine",
    "--instsimplify",
    "--mergefunc",
    "--bdce",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-dead-prototypes",
          "--div-rem-pairs",
          "--coro-elide",
          "--partially-inline-libcalls",
          "--lower-widenable-condition",
          "--add-discriminators",
          "--alignment-from-assumptions",
          "--gvn-hoist",
          "--hotcoldsplit",
          "--constprop",
          "--inferattrs",
          "--mergeicmps",
          "--rewrite-statepoints-for-gc",
          "--correlated-propagation"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-dead-prototypes",
      "--div-rem-pairs",
      "--coro-elide",
      "--partially-inline-libcalls",
      "--lower-widenable-condition",
      "--add-discriminators",
      "--alignment-from-assumptions",
      "--gvn-hoist",
      "--hotcoldsplit",
      "--constprop",
      "--inferattrs",
      "--mergeicmps",
      "--rewrite-statepoints-for-gc",
      "--correlated-propagation"
    ],
    "performance_vs_Oz": "+0.4%"
  }
}