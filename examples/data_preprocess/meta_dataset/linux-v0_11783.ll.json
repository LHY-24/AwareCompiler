{
  "program_id": "linux-v0_11783.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 57,
    "onePredOneSuc": 41,
    "onePredTwoSuc": 13,
    "oneSuccessor": 51,
    "twoPred": 17,
    "twoPredOneSuc": 6,
    "twoEach": 9,
    "twoSuccessor": 26,
    "morePreds": 5,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 107,
    "BeginPhi": 0,
    "BranchCount": 77,
    "returnInt": 18,
    "CriticalCount": 15,
    "NumEdges": 111,
    "const32Bit": 363,
    "const64Bit": 18,
    "numConstZeroes": 160,
    "numConstOnes": 113,
    "UncondBranches": 51,
    "binaryConstArg": 22,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 98,
    "NumAndInst": 5,
    "BlockMid": 13,
    "BlockLow": 94,
    "NumBitCastInst": 18,
    "NumBrInst": 77,
    "NumCallInst": 50,
    "NumGetElementPtrInst": 115,
    "NumICmpInst": 29,
    "NumLShrInst": 0,
    "NumLoadInst": 223,
    "NumMulInst": 5,
    "NumOrInst": 9,
    "NumPHIInst": 0,
    "NumRetInst": 28,
    "NumSExtInst": 6,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 141,
    "NumSubInst": 2,
    "NumTruncInst": 16,
    "NumXorInst": 0,
    "NumZExtInst": 12,
    "TotalBlocks": 107,
    "TotalInsts": 843,
    "TotalMemInst": 627,
    "TotalFuncs": 46,
    "ArgsPhi": 0,
    "testUnary": 373
  },
  "baseline_oz_instcount": 843,
  "knowledge_base_entry": [
    "--strip",
    "--mergefunc",
    "--globaldce",
    "--aggressive-instcombine",
    "--jump-threading",
    "--load-store-vectorizer",
    "--instsimplify",
    "--jump-threading",
    "--slsr",
    "--gvn",
    "--loop-reroll",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--sroa",
    "--inline",
    "--licm",
    "--simplifycfg",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergeicmps",
          "--lowerinvoke",
          "--irce",
          "--aggressive-instcombine",
          "--insert-gcov-profiling",
          "--loop-idiom",
          "--alignment-from-assumptions",
          "--mergereturn",
          "--instcombine",
          "--loop-sink",
          "--memcpyopt",
          "--inferattrs",
          "--loop-unswitch",
          "--instnamer",
          "--loop-rotate",
          "--loweratomic",
          "--loop-versioning",
          "--forceattrs",
          "--lcssa",
          "--simple-loop-unswitch",
          "--elim-avail-extern",
          "--redundant-dbg-inst-elim",
          "--consthoist",
          "--pgo-memop-opt",
          "--strip",
          "--infer-address-spaces",
          "--coro-split",
          "--loop-vectorize"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergeicmps",
      "--lowerinvoke",
      "--irce",
      "--aggressive-instcombine",
      "--insert-gcov-profiling",
      "--loop-idiom",
      "--alignment-from-assumptions",
      "--mergereturn",
      "--instcombine",
      "--loop-sink",
      "--memcpyopt",
      "--inferattrs",
      "--loop-unswitch",
      "--instnamer",
      "--loop-rotate",
      "--loweratomic",
      "--loop-versioning",
      "--forceattrs",
      "--lcssa",
      "--simple-loop-unswitch",
      "--elim-avail-extern",
      "--redundant-dbg-inst-elim",
      "--consthoist",
      "--pgo-memop-opt",
      "--strip",
      "--infer-address-spaces",
      "--coro-split",
      "--loop-vectorize"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}