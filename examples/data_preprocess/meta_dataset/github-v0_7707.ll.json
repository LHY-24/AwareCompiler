{
  "program_id": "github-v0_7707.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 2,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 2,
    "twoEach": 4,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 46,
    "const64Bit": 62,
    "numConstZeroes": 61,
    "numConstOnes": 29,
    "UncondBranches": 13,
    "binaryConstArg": 30,
    "NumAShrInst": 7,
    "NumAddInst": 6,
    "NumAllocaInst": 12,
    "NumAndInst": 8,
    "BlockMid": 7,
    "BlockLow": 17,
    "NumBitCastInst": 0,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 36,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 54,
    "NumMulInst": 1,
    "NumOrInst": 11,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 8,
    "NumSelectInst": 0,
    "NumShlInst": 6,
    "NumStoreInst": 23,
    "NumSubInst": 4,
    "NumTruncInst": 16,
    "NumXorInst": 0,
    "NumZExtInst": 39,
    "TotalBlocks": 24,
    "TotalInsts": 269,
    "TotalMemInst": 132,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 129
  },
  "baseline_oz_instcount": 269,
  "knowledge_base_entry": [
    "--float2int",
    "--early-cse-memssa",
    "--adce",
    "--bdce",
    "--lower-constant-intrinsics",
    "--gvn-hoist",
    "--mergefunc",
    "--aggressive-instcombine",
    "--inline",
    "--loop-rotate",
    "--instcombine",
    "--sccp"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--infer-address-spaces",
          "--sroa",
          "--argpromotion",
          "--loop-fusion",
          "--gvn-hoist",
          "--aggressive-instcombine",
          "--loop-instsimplify",
          "--coro-elide",
          "--inject-tli-mappings",
          "--tailcallelim",
          "--ipsccp",
          "--flattencfg",
          "--speculative-execution",
          "--alignment-from-assumptions",
          "--mldst-motion",
          "--sancov",
          "--loop-data-prefetch",
          "--lower-widenable-condition",
          "--loop-guard-widening",
          "--loop-reroll",
          "--ee-instrument",
          "--called-value-propagation",
          "--cross-dso-cfi",
          "--separate-const-offset-from-gep",
          "--post-inline-ee-instrument",
          "--ipconstprop",
          "--float2int",
          "--elim-avail-extern",
          "--forceattrs",
          "--lowerswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+7.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--infer-address-spaces",
      "--sroa",
      "--argpromotion",
      "--loop-fusion",
      "--gvn-hoist",
      "--aggressive-instcombine",
      "--loop-instsimplify",
      "--coro-elide",
      "--inject-tli-mappings",
      "--tailcallelim",
      "--ipsccp",
      "--flattencfg",
      "--speculative-execution",
      "--alignment-from-assumptions",
      "--mldst-motion",
      "--sancov",
      "--loop-data-prefetch",
      "--lower-widenable-condition",
      "--loop-guard-widening",
      "--loop-reroll",
      "--ee-instrument",
      "--called-value-propagation",
      "--cross-dso-cfi",
      "--separate-const-offset-from-gep",
      "--post-inline-ee-instrument",
      "--ipconstprop",
      "--float2int",
      "--elim-avail-extern",
      "--forceattrs",
      "--lowerswitch"
    ],
    "performance_vs_Oz": "+7.4%"
  }
}