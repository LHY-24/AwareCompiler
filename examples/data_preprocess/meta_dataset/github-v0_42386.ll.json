{
  "program_id": "github-v0_42386.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 10,
    "onePredOneSuc": 5,
    "onePredTwoSuc": 5,
    "oneSuccessor": 5,
    "twoPred": 3,
    "twoPredOneSuc": 0,
    "twoEach": 3,
    "twoSuccessor": 11,
    "morePreds": 3,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 16,
    "BeginPhi": 2,
    "BranchCount": 16,
    "returnInt": 2,
    "CriticalCount": 12,
    "NumEdges": 27,
    "const32Bit": 12,
    "const64Bit": 4,
    "numConstZeroes": 12,
    "numConstOnes": 11,
    "UncondBranches": 5,
    "binaryConstArg": 10,
    "NumAShrInst": 2,
    "NumAddInst": 6,
    "NumAllocaInst": 0,
    "NumAndInst": 1,
    "BlockMid": 0,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 16,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 19,
    "NumICmpInst": 12,
    "NumLShrInst": 0,
    "NumLoadInst": 11,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 2,
    "NumRetInst": 2,
    "NumSExtInst": 6,
    "NumSelectInst": 1,
    "NumShlInst": 2,
    "NumStoreInst": 11,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 18,
    "TotalInsts": 96,
    "TotalMemInst": 43,
    "TotalFuncs": 3,
    "ArgsPhi": 5,
    "testUnary": 19
  },
  "baseline_oz_instcount": 96,
  "knowledge_base_entry": [
    "--early-cse",
    "--licm",
    "--adce",
    "--simplifycfg",
    "--correlated-propagation",
    "--sroa",
    "--nary-reassociate",
    "--jump-threading",
    "--flattencfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--alignment-from-assumptions",
          "--forceattrs",
          "--insert-gcov-profiling",
          "--add-discriminators",
          "--simple-loop-unswitch",
          "--lower-expect",
          "--instcombine",
          "--loop-distribute",
          "--ipsccp",
          "--nary-reassociate",
          "--lowerinvoke",
          "--loop-deletion",
          "--loop-instsimplify",
          "--infer-address-spaces",
          "--strip-dead-prototypes",
          "--speculative-execution",
          "--flattencfg",
          "--name-anon-globals",
          "--tailcallelim",
          "--loop-sink",
          "--simplifycfg",
          "--aggressive-instcombine",
          "--inject-tli-mappings",
          "--loweratomic"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+3.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--alignment-from-assumptions",
      "--forceattrs",
      "--insert-gcov-profiling",
      "--add-discriminators",
      "--simple-loop-unswitch",
      "--lower-expect",
      "--instcombine",
      "--loop-distribute",
      "--ipsccp",
      "--nary-reassociate",
      "--lowerinvoke",
      "--loop-deletion",
      "--loop-instsimplify",
      "--infer-address-spaces",
      "--strip-dead-prototypes",
      "--speculative-execution",
      "--flattencfg",
      "--name-anon-globals",
      "--tailcallelim",
      "--loop-sink",
      "--simplifycfg",
      "--aggressive-instcombine",
      "--inject-tli-mappings",
      "--loweratomic"
    ],
    "performance_vs_Oz": "+3.1%"
  }
}