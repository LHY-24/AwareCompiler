{
  "program_id": "github-v0_17494.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 23,
    "onePredOneSuc": 19,
    "onePredTwoSuc": 4,
    "oneSuccessor": 20,
    "twoPred": 8,
    "twoPredOneSuc": 1,
    "twoEach": 2,
    "twoSuccessor": 12,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 41,
    "BeginPhi": 0,
    "BranchCount": 31,
    "returnInt": 11,
    "CriticalCount": 5,
    "NumEdges": 47,
    "const32Bit": 50,
    "const64Bit": 0,
    "numConstZeroes": 17,
    "numConstOnes": 19,
    "UncondBranches": 20,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 40,
    "NumBitCastInst": 0,
    "NumBrInst": 31,
    "NumCallInst": 26,
    "NumGetElementPtrInst": 1,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 27,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 8,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 39,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 41,
    "TotalInsts": 161,
    "TotalMemInst": 109,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 43
  },
  "baseline_oz_instcount": 162,
  "knowledge_base_entry": [
    "--reassociate",
    "--mergefunc",
    "--licm",
    "--early-cse-memssa",
    "--lower-constant-intrinsics",
    "--dse",
    "--gvn-hoist",
    "--slsr",
    "--loop-reroll",
    "--early-cse",
    "--adce",
    "--newgvn",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-debug-declare",
          "--nary-reassociate",
          "--memcpyopt",
          "--inject-tli-mappings",
          "--sccp",
          "--inferattrs",
          "--irce",
          "--constmerge",
          "--loop-instsimplify",
          "--dse",
          "--instsimplify",
          "--jump-threading",
          "--post-inline-ee-instrument",
          "--consthoist",
          "--gvn-hoist",
          "--loop-guard-widening",
          "--ee-instrument",
          "--sancov",
          "--insert-gcov-profiling",
          "--instcombine",
          "--rewrite-statepoints-for-gc",
          "--simple-loop-unswitch",
          "--strip-nondebug",
          "--mergeicmps",
          "--libcalls-shrinkwrap",
          "--loop-sink",
          "--prune-eh"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-debug-declare",
      "--nary-reassociate",
      "--memcpyopt",
      "--inject-tli-mappings",
      "--sccp",
      "--inferattrs",
      "--irce",
      "--constmerge",
      "--loop-instsimplify",
      "--dse",
      "--instsimplify",
      "--jump-threading",
      "--post-inline-ee-instrument",
      "--consthoist",
      "--gvn-hoist",
      "--loop-guard-widening",
      "--ee-instrument",
      "--sancov",
      "--insert-gcov-profiling",
      "--instcombine",
      "--rewrite-statepoints-for-gc",
      "--simple-loop-unswitch",
      "--strip-nondebug",
      "--mergeicmps",
      "--libcalls-shrinkwrap",
      "--loop-sink",
      "--prune-eh"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}