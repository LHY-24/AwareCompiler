{
  "program_id": "github-v0_11013.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 20,
    "onePredOneSuc": 14,
    "onePredTwoSuc": 6,
    "oneSuccessor": 20,
    "twoPred": 10,
    "twoPredOneSuc": 5,
    "twoEach": 4,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 31,
    "BeginPhi": 0,
    "BranchCount": 30,
    "returnInt": 6,
    "CriticalCount": 5,
    "NumEdges": 40,
    "const32Bit": 25,
    "const64Bit": 0,
    "numConstZeroes": 8,
    "numConstOnes": 17,
    "UncondBranches": 20,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 12,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 30,
    "NumBitCastInst": 0,
    "NumBrInst": 30,
    "NumCallInst": 8,
    "NumGetElementPtrInst": 4,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 33,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 16,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 2,
    "TotalBlocks": 31,
    "TotalInsts": 125,
    "TotalMemInst": 73,
    "TotalFuncs": 5,
    "ArgsPhi": 0,
    "testUnary": 51
  },
  "baseline_oz_instcount": 126,
  "knowledge_base_entry": [
    "--lowerinvoke",
    "--instcombine",
    "--load-store-vectorizer",
    "--slp-vectorizer",
    "--die",
    "--early-cse",
    "--correlated-propagation",
    "--dce",
    "--elim-avail-extern",
    "--ipsccp",
    "--mergefunc",
    "--globalopt",
    "--lower-constant-intrinsics"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--functionattrs",
          "--ipsccp",
          "--lowerswitch",
          "--strip-nondebug",
          "--lowerinvoke",
          "--libcalls-shrinkwrap",
          "--simplifycfg",
          "--inferattrs",
          "--nary-reassociate",
          "--instnamer",
          "--coro-early",
          "--canonicalize-aliases",
          "--jump-threading",
          "--newgvn",
          "--insert-gcov-profiling",
          "--loweratomic",
          "--forceattrs",
          "--loop-vectorize"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--functionattrs",
      "--ipsccp",
      "--lowerswitch",
      "--strip-nondebug",
      "--lowerinvoke",
      "--libcalls-shrinkwrap",
      "--simplifycfg",
      "--inferattrs",
      "--nary-reassociate",
      "--instnamer",
      "--coro-early",
      "--canonicalize-aliases",
      "--jump-threading",
      "--newgvn",
      "--insert-gcov-profiling",
      "--loweratomic",
      "--forceattrs",
      "--loop-vectorize"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}