{
  "program_id": "blas-v0_213.ll",
  "autophase_features": {
    "BBNumArgsHi": 9,
    "BBNumArgsLo": 10,
    "onePred": 41,
    "onePredOneSuc": 16,
    "onePredTwoSuc": 25,
    "oneSuccessor": 21,
    "twoPred": 21,
    "twoPredOneSuc": 4,
    "twoEach": 17,
    "twoSuccessor": 49,
    "morePreds": 8,
    "BB03Phi": 14,
    "BBHiPhi": 5,
    "BBNoPhi": 52,
    "BeginPhi": 19,
    "BranchCount": 70,
    "returnInt": 0,
    "CriticalCount": 57,
    "NumEdges": 119,
    "const32Bit": 91,
    "const64Bit": 87,
    "numConstZeroes": 37,
    "numConstOnes": 84,
    "UncondBranches": 21,
    "binaryConstArg": 75,
    "NumAShrInst": 0,
    "NumAddInst": 100,
    "NumAllocaInst": 1,
    "NumAndInst": 18,
    "BlockMid": 16,
    "BlockLow": 55,
    "NumBitCastInst": 49,
    "NumBrInst": 70,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 54,
    "NumICmpInst": 46,
    "NumLShrInst": 1,
    "NumLoadInst": 65,
    "NumMulInst": 20,
    "NumOrInst": 6,
    "NumPHIInst": 48,
    "NumRetInst": 1,
    "NumSExtInst": 15,
    "NumSelectInst": 1,
    "NumShlInst": 2,
    "NumStoreInst": 18,
    "NumSubInst": 21,
    "NumTruncInst": 6,
    "NumXorInst": 0,
    "NumZExtInst": 8,
    "TotalBlocks": 71,
    "TotalInsts": 653,
    "TotalMemInst": 142,
    "TotalFuncs": 3,
    "ArgsPhi": 99,
    "testUnary": 144
  },
  "baseline_oz_instcount": 631,
  "knowledge_base_entry": [
    "--elim-avail-extern",
    "--nary-reassociate",
    "--lower-constant-intrinsics",
    "--dce",
    "--ipsccp",
    "--gvn",
    "--sccp",
    "--reassociate",
    "--simplifycfg",
    "--gvn-hoist",
    "--loop-deletion",
    "--gvn",
    "--slp-vectorizer",
    "--mem2reg",
    "--load-store-vectorizer",
    "--bdce",
    "--simplifycfg",
    "--nary-reassociate",
    "--slsr",
    "--early-cse-memssa",
    "--memcpyopt",
    "--sroa",
    "--loop-simplifycfg",
    "--load-store-vectorizer",
    "--instcombine",
    "--mergefunc",
    "--inline",
    "--jump-threading",
    "--loop-reroll",
    "--slsr",
    "--early-cse-memssa",
    "--memcpyopt",
    "--sroa",
    "--loop-simplifycfg",
    "--gvn",
    "--instcombine",
    "--loop-deletion",
    "--gvn",
    "--sroa",
    "--aggressive-instcombine",
    "--gvn",
    "--sccp",
    "--instcombine",
    "--gvn-hoist",
    "--nary-reassociate",
    "--licm",
    "--sroa",
    "--gvn-hoist",
    "--slsr",
    "--simplifycfg",
    "--die",
    "--lower-expect",
    "--early-cse",
    "--loop-instsimplify",
    "--globalopt",
    "--loop-deletion",
    "--mem2reg",
    "--loop-deletion",
    "--newgvn",
    "--dse",
    "--loop-rotate",
    "--gvn",
    "--loop-deletion",
    "--gvn-hoist",
    "--gvn-hoist",
    "--sroa",
    "--instcombine",
    "--mergefunc",
    "--inline",
    "--jump-threading",
    "--loop-reroll",
    "--slsr",
    "--early-cse-memssa",
    "--memcpyopt",
    "--sroa",
    "--loop-simplifycfg",
    "--gvn",
    "--instcombine",
    "--loop-deletion",
    "--gvn",
    "--sroa",
    "--aggressive-instcombine",
    "--gvn",
    "--sccp",
    "--instcombine",
    "--gvn-hoist",
    "--nary-reassociate",
    "--licm",
    "--sroa",
    "--gvn-hoist",
    "--slsr",
    "--simplifycfg",
    "--die",
    "--lower-expect",
    "--early-cse",
    "--loop-instsimplify",
    "--dce",
    "--loop-instsimplify",
    "--bdce",
    "--licm",
    "--memcpyopt",
    "--gvn",
    "--loop-deletion",
    "--gvn-hoist",
    "--gvn-hoist",
    "--sroa",
    "--instcombine",
    "--early-cse",
    "--simplifycfg",
    "--globalopt",
    "--newgvn",
    "--inline",
    "--dce",
    "--sroa",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--mergeicmps",
          "--mergereturn",
          "--float2int",
          "--add-discriminators",
          "--early-cse-memssa",
          "--inline",
          "--loop-unroll-and-jam",
          "--instcombine",
          "--loop-unroll",
          "--callsite-splitting",
          "--loop-guard-widening",
          "--barrier",
          "--lcssa",
          "--nary-reassociate",
          "--functionattrs",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--mergeicmps",
      "--mergereturn",
      "--float2int",
      "--add-discriminators",
      "--early-cse-memssa",
      "--inline",
      "--loop-unroll-and-jam",
      "--instcombine",
      "--loop-unroll",
      "--callsite-splitting",
      "--loop-guard-widening",
      "--barrier",
      "--lcssa",
      "--nary-reassociate",
      "--functionattrs",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+0.8%"
  }
}