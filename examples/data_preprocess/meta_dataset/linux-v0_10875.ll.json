{
  "program_id": "linux-v0_10875.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 67,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 24,
    "oneSuccessor": 53,
    "twoPred": 16,
    "twoPredOneSuc": 8,
    "twoEach": 4,
    "twoSuccessor": 34,
    "morePreds": 6,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 102,
    "BeginPhi": 1,
    "BranchCount": 87,
    "returnInt": 40,
    "CriticalCount": 14,
    "NumEdges": 131,
    "const32Bit": 249,
    "const64Bit": 40,
    "numConstZeroes": 102,
    "numConstOnes": 89,
    "UncondBranches": 53,
    "binaryConstArg": 45,
    "NumAShrInst": 1,
    "NumAddInst": 24,
    "NumAllocaInst": 63,
    "NumAndInst": 5,
    "BlockMid": 14,
    "BlockLow": 89,
    "NumBitCastInst": 0,
    "NumBrInst": 87,
    "NumCallInst": 53,
    "NumGetElementPtrInst": 65,
    "NumICmpInst": 36,
    "NumLShrInst": 0,
    "NumLoadInst": 227,
    "NumMulInst": 10,
    "NumOrInst": 2,
    "NumPHIInst": 1,
    "NumRetInst": 14,
    "NumSExtInst": 3,
    "NumSelectInst": 1,
    "NumShlInst": 4,
    "NumStoreInst": 131,
    "NumSubInst": 2,
    "NumTruncInst": 29,
    "NumXorInst": 1,
    "NumZExtInst": 16,
    "TotalBlocks": 103,
    "TotalInsts": 781,
    "TotalMemInst": 539,
    "TotalFuncs": 24,
    "ArgsPhi": 3,
    "testUnary": 338
  },
  "baseline_oz_instcount": 781,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--mergefunc",
    "--early-cse-memssa",
    "--ipsccp",
    "--simplifycfg",
    "--licm"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--aggressive-instcombine",
          "--name-anon-globals",
          "--gvn-hoist",
          "--canonicalize-aliases",
          "--nary-reassociate",
          "--sroa",
          "--guard-widening",
          "--sink",
          "--mldst-motion",
          "--lcssa",
          "--tailcallelim",
          "--insert-gcov-profiling",
          "--early-cse-memssa",
          "--consthoist",
          "--lowerinvoke",
          "--loop-simplifycfg",
          "--mergeicmps",
          "--die",
          "--reassociate",
          "--loop-deletion",
          "--ee-instrument",
          "--rewrite-statepoints-for-gc",
          "--sancov",
          "--loweratomic",
          "--infer-address-spaces",
          "--loop-guard-widening",
          "--loop-instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--aggressive-instcombine",
      "--name-anon-globals",
      "--gvn-hoist",
      "--canonicalize-aliases",
      "--nary-reassociate",
      "--sroa",
      "--guard-widening",
      "--sink",
      "--mldst-motion",
      "--lcssa",
      "--tailcallelim",
      "--insert-gcov-profiling",
      "--early-cse-memssa",
      "--consthoist",
      "--lowerinvoke",
      "--loop-simplifycfg",
      "--mergeicmps",
      "--die",
      "--reassociate",
      "--loop-deletion",
      "--ee-instrument",
      "--rewrite-statepoints-for-gc",
      "--sancov",
      "--loweratomic",
      "--infer-address-spaces",
      "--loop-guard-widening",
      "--loop-instsimplify"
    ],
    "performance_vs_Oz": "+0.1%"
  }
}