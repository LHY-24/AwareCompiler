{
  "program_id": "linux-v0_3312.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 88,
    "onePredOneSuc": 65,
    "onePredTwoSuc": 16,
    "oneSuccessor": 85,
    "twoPred": 22,
    "twoPredOneSuc": 10,
    "twoEach": 7,
    "twoSuccessor": 28,
    "morePreds": 4,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 140,
    "BeginPhi": 3,
    "BranchCount": 113,
    "returnInt": 22,
    "CriticalCount": 8,
    "NumEdges": 146,
    "const32Bit": 317,
    "const64Bit": 50,
    "numConstZeroes": 139,
    "numConstOnes": 169,
    "UncondBranches": 85,
    "binaryConstArg": 41,
    "NumAShrInst": 0,
    "NumAddInst": 5,
    "NumAllocaInst": 122,
    "NumAndInst": 7,
    "BlockMid": 11,
    "BlockLow": 132,
    "NumBitCastInst": 34,
    "NumBrInst": 113,
    "NumCallInst": 70,
    "NumGetElementPtrInst": 90,
    "NumICmpInst": 43,
    "NumLShrInst": 4,
    "NumLoadInst": 258,
    "NumMulInst": 1,
    "NumOrInst": 4,
    "NumPHIInst": 3,
    "NumRetInst": 29,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 131,
    "NumSubInst": 5,
    "NumTruncInst": 4,
    "NumXorInst": 15,
    "NumZExtInst": 25,
    "TotalBlocks": 143,
    "TotalInsts": 990,
    "TotalMemInst": 671,
    "TotalFuncs": 54,
    "ArgsPhi": 6,
    "testUnary": 465
  },
  "baseline_oz_instcount": 993,
  "knowledge_base_entry": [
    "--ipsccp",
    "--globaldce",
    "--aggressive-instcombine",
    "--mergefunc",
    "--elim-avail-extern",
    "--newgvn",
    "--lower-expect",
    "--early-cse",
    "--slsr",
    "--early-cse-memssa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--load-store-vectorizer",
          "--globalopt",
          "--correlated-propagation",
          "--loop-data-prefetch",
          "--div-rem-pairs",
          "--die",
          "--partially-inline-libcalls",
          "--lower-guard-intrinsic",
          "--always-inline",
          "--inline",
          "--reassociate",
          "--constmerge",
          "--elim-avail-extern",
          "--mergefunc",
          "--nary-reassociate",
          "--strip-dead-prototypes",
          "--sink"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--load-store-vectorizer",
      "--globalopt",
      "--correlated-propagation",
      "--loop-data-prefetch",
      "--div-rem-pairs",
      "--die",
      "--partially-inline-libcalls",
      "--lower-guard-intrinsic",
      "--always-inline",
      "--inline",
      "--reassociate",
      "--constmerge",
      "--elim-avail-extern",
      "--mergefunc",
      "--nary-reassociate",
      "--strip-dead-prototypes",
      "--sink"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}