{
  "program_id": "github-v0_42833.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 1,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 2,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 44,
    "const64Bit": 0,
    "numConstZeroes": 27,
    "numConstOnes": 6,
    "UncondBranches": 0,
    "binaryConstArg": 13,
    "NumAShrInst": 0,
    "NumAddInst": 58,
    "NumAllocaInst": 0,
    "NumAndInst": 10,
    "BlockMid": 1,
    "BlockLow": 0,
    "NumBitCastInst": 0,
    "NumBrInst": 0,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 26,
    "NumICmpInst": 28,
    "NumLShrInst": 0,
    "NumLoadInst": 25,
    "NumMulInst": 3,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 5,
    "NumShlInst": 1,
    "NumStoreInst": 1,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 48,
    "TotalBlocks": 1,
    "TotalInsts": 217,
    "TotalMemInst": 54,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 75
  },
  "baseline_oz_instcount": 217,
  "knowledge_base_entry": [
    "--loop-vectorize",
    "--gvn-hoist",
    "--globalopt",
    "--early-cse",
    "--mem2reg",
    "--early-cse",
    "--mldst-motion",
    "--early-cse",
    "--jump-threading",
    "--elim-avail-extern",
    "--jump-threading",
    "--reassociate",
    "--slp-vectorizer",
    "--early-cse",
    "--early-cse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplify",
          "--scalarizer",
          "--globalsplit",
          "--loop-versioning-licm",
          "--loop-unswitch",
          "--add-discriminators",
          "--coro-early",
          "--always-inline",
          "--name-anon-globals",
          "--early-cse",
          "--prune-eh",
          "--loweratomic",
          "--partially-inline-libcalls",
          "--consthoist",
          "--float2int",
          "--inline",
          "--inject-tli-mappings",
          "--coro-elide",
          "--post-inline-ee-instrument",
          "--mergeicmps",
          "--reassociate",
          "--loop-fusion",
          "--redundant-dbg-inst-elim",
          "--slp-vectorizer",
          "--irce",
          "--instsimplify"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+9.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplify",
      "--scalarizer",
      "--globalsplit",
      "--loop-versioning-licm",
      "--loop-unswitch",
      "--add-discriminators",
      "--coro-early",
      "--always-inline",
      "--name-anon-globals",
      "--early-cse",
      "--prune-eh",
      "--loweratomic",
      "--partially-inline-libcalls",
      "--consthoist",
      "--float2int",
      "--inline",
      "--inject-tli-mappings",
      "--coro-elide",
      "--post-inline-ee-instrument",
      "--mergeicmps",
      "--reassociate",
      "--loop-fusion",
      "--redundant-dbg-inst-elim",
      "--slp-vectorizer",
      "--irce",
      "--instsimplify"
    ],
    "performance_vs_Oz": "+9.2%"
  }
}