{
  "program_id": "github-v0_18504.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 8,
    "onePredTwoSuc": 2,
    "oneSuccessor": 11,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 6,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 21,
    "BeginPhi": 0,
    "BranchCount": 17,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 23,
    "const32Bit": 35,
    "const64Bit": 36,
    "numConstZeroes": 40,
    "numConstOnes": 24,
    "UncondBranches": 11,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 7,
    "NumAllocaInst": 14,
    "NumAndInst": 0,
    "BlockMid": 4,
    "BlockLow": 17,
    "NumBitCastInst": 8,
    "NumBrInst": 17,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 29,
    "NumICmpInst": 6,
    "NumLShrInst": 0,
    "NumLoadInst": 35,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 22,
    "NumSubInst": 0,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 6,
    "TotalBlocks": 21,
    "TotalInsts": 160,
    "TotalMemInst": 107,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 68
  },
  "baseline_oz_instcount": 160,
  "knowledge_base_entry": [
    "--licm",
    "--aggressive-instcombine",
    "--inline",
    "--instsimplify",
    "--adce",
    "--jump-threading",
    "--dce",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--reassociate",
          "--bdce",
          "--called-value-propagation",
          "--indvars",
          "--coro-early",
          "--strip-debug-declare",
          "--mem2reg",
          "--reg2mem",
          "--gvn-hoist",
          "--strip-dead-prototypes",
          "--loop-simplify",
          "--loop-load-elim",
          "--loop-guard-widening",
          "--alignment-from-assumptions",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--reassociate",
      "--bdce",
      "--called-value-propagation",
      "--indvars",
      "--coro-early",
      "--strip-debug-declare",
      "--mem2reg",
      "--reg2mem",
      "--gvn-hoist",
      "--strip-dead-prototypes",
      "--loop-simplify",
      "--loop-load-elim",
      "--loop-guard-widening",
      "--alignment-from-assumptions",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+1.2%"
  }
}