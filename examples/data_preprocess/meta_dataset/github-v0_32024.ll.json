{
  "program_id": "github-v0_32024.ll",
  "autophase_features": {
    "BBNumArgsHi": 2,
    "BBNumArgsLo": 3,
    "onePred": 6,
    "onePredOneSuc": 4,
    "onePredTwoSuc": 1,
    "oneSuccessor": 5,
    "twoPred": 6,
    "twoPredOneSuc": 0,
    "twoEach": 6,
    "twoSuccessor": 8,
    "morePreds": 2,
    "BB03Phi": 5,
    "BBHiPhi": 0,
    "BBNoPhi": 10,
    "BeginPhi": 5,
    "BranchCount": 13,
    "returnInt": 2,
    "CriticalCount": 13,
    "NumEdges": 24,
    "const32Bit": 15,
    "const64Bit": 0,
    "numConstZeroes": 6,
    "numConstOnes": 7,
    "UncondBranches": 5,
    "binaryConstArg": 6,
    "NumAShrInst": 0,
    "NumAddInst": 13,
    "NumAllocaInst": 0,
    "NumAndInst": 3,
    "BlockMid": 1,
    "BlockLow": 14,
    "NumBitCastInst": 0,
    "NumBrInst": 13,
    "NumCallInst": 2,
    "NumGetElementPtrInst": 7,
    "NumICmpInst": 11,
    "NumLShrInst": 0,
    "NumLoadInst": 6,
    "NumMulInst": 7,
    "NumOrInst": 1,
    "NumPHIInst": 9,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 1,
    "NumSubInst": 1,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 15,
    "TotalInsts": 95,
    "TotalMemInst": 16,
    "TotalFuncs": 2,
    "ArgsPhi": 19,
    "testUnary": 19
  },
  "baseline_oz_instcount": 104,
  "knowledge_base_entry": [
    "--mldst-motion",
    "--mem2reg",
    "--flattencfg",
    "--aggressive-instcombine",
    "--instsimplify",
    "--globalopt",
    "--jump-threading",
    "--newgvn",
    "--sccp",
    "--instcombine",
    "--inline",
    "--elim-avail-extern",
    "--reassociate",
    "--slsr",
    "--gvn-hoist",
    "--nary-reassociate",
    "--gvn",
    "--mergefunc",
    "--correlated-propagation",
    "--dce",
    "--dse",
    "--load-store-vectorizer",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--reassociate",
    "--sccp",
    "--instcombine",
    "--mem2reg",
    "--bdce",
    "--lower-expect",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rpo-functionattrs",
          "--pgo-memop-opt",
          "--adce",
          "--nary-reassociate",
          "--gvn",
          "--lcssa",
          "--lower-matrix-intrinsics",
          "--elim-avail-extern",
          "--ee-instrument",
          "--partial-inliner",
          "--name-anon-globals",
          "--loop-sink",
          "--deadargelim",
          "--partially-inline-libcalls",
          "--alignment-from-assumptions",
          "--cross-dso-cfi",
          "--simplifycfg",
          "--mergefunc",
          "--early-cse-memssa",
          "--lowerinvoke",
          "--speculative-execution"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+10.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rpo-functionattrs",
      "--pgo-memop-opt",
      "--adce",
      "--nary-reassociate",
      "--gvn",
      "--lcssa",
      "--lower-matrix-intrinsics",
      "--elim-avail-extern",
      "--ee-instrument",
      "--partial-inliner",
      "--name-anon-globals",
      "--loop-sink",
      "--deadargelim",
      "--partially-inline-libcalls",
      "--alignment-from-assumptions",
      "--cross-dso-cfi",
      "--simplifycfg",
      "--mergefunc",
      "--early-cse-memssa",
      "--lowerinvoke",
      "--speculative-execution"
    ],
    "performance_vs_Oz": "+10.6%"
  }
}