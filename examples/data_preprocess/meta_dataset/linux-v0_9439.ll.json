{
  "program_id": "linux-v0_9439.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 2,
    "onePred": 109,
    "onePredOneSuc": 88,
    "onePredTwoSuc": 20,
    "oneSuccessor": 93,
    "twoPred": 16,
    "twoPredOneSuc": 5,
    "twoEach": 7,
    "twoSuccessor": 43,
    "morePreds": 12,
    "BB03Phi": 2,
    "BBHiPhi": 0,
    "BBNoPhi": 152,
    "BeginPhi": 2,
    "BranchCount": 136,
    "returnInt": 31,
    "CriticalCount": 10,
    "NumEdges": 184,
    "const32Bit": 358,
    "const64Bit": 21,
    "numConstZeroes": 116,
    "numConstOnes": 154,
    "UncondBranches": 93,
    "binaryConstArg": 122,
    "NumAShrInst": 1,
    "NumAddInst": 20,
    "NumAllocaInst": 86,
    "NumAndInst": 33,
    "BlockMid": 19,
    "BlockLow": 135,
    "NumBitCastInst": 13,
    "NumBrInst": 136,
    "NumCallInst": 55,
    "NumGetElementPtrInst": 46,
    "NumICmpInst": 63,
    "NumLShrInst": 16,
    "NumLoadInst": 231,
    "NumMulInst": 0,
    "NumOrInst": 7,
    "NumPHIInst": 2,
    "NumRetInst": 17,
    "NumSExtInst": 15,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 117,
    "NumSubInst": 2,
    "NumTruncInst": 12,
    "NumXorInst": 45,
    "NumZExtInst": 44,
    "TotalBlocks": 154,
    "TotalInsts": 963,
    "TotalMemInst": 535,
    "TotalFuncs": 24,
    "ArgsPhi": 4,
    "testUnary": 401
  },
  "baseline_oz_instcount": 963,
  "knowledge_base_entry": [
    "--ipconstprop",
    "--instcombine",
    "--loop-instsimplify",
    "--dce",
    "--reassociate",
    "--simplifycfg",
    "--mergefunc",
    "--licm",
    "--elim-avail-extern",
    "--mldst-motion",
    "--newgvn",
    "--flattencfg",
    "--gvn",
    "--newgvn",
    "--die",
    "--aggressive-instcombine",
    "--ipsccp",
    "--die",
    "--reassociate",
    "--dce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--canonicalize-aliases",
          "--loop-fusion",
          "--loop-instsimplify",
          "--float2int",
          "--strip-dead-prototypes",
          "--slsr",
          "--load-store-vectorizer",
          "--mergereturn",
          "--instnamer",
          "--prune-eh",
          "--jump-threading",
          "--aggressive-instcombine",
          "--partial-inliner",
          "--loop-predication",
          "--nary-reassociate",
          "--lower-matrix-intrinsics",
          "--mldst-motion",
          "--loop-versioning",
          "--callsite-splitting",
          "--loop-distribute",
          "--loop-versioning-licm",
          "--globalopt",
          "--mergeicmps",
          "--indvars",
          "--pgo-memop-opt",
          "--slp-vectorizer",
          "--partially-inline-libcalls"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--canonicalize-aliases",
      "--loop-fusion",
      "--loop-instsimplify",
      "--float2int",
      "--strip-dead-prototypes",
      "--slsr",
      "--load-store-vectorizer",
      "--mergereturn",
      "--instnamer",
      "--prune-eh",
      "--jump-threading",
      "--aggressive-instcombine",
      "--partial-inliner",
      "--loop-predication",
      "--nary-reassociate",
      "--lower-matrix-intrinsics",
      "--mldst-motion",
      "--loop-versioning",
      "--callsite-splitting",
      "--loop-distribute",
      "--loop-versioning-licm",
      "--globalopt",
      "--mergeicmps",
      "--indvars",
      "--pgo-memop-opt",
      "--slp-vectorizer",
      "--partially-inline-libcalls"
    ],
    "performance_vs_Oz": "+1.5%"
  }
}