{
  "program_id": "github-v0_26352.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 19,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 47,
    "const64Bit": 0,
    "numConstZeroes": 9,
    "numConstOnes": 38,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 35,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 18,
    "NumBitCastInst": 2,
    "NumBrInst": 0,
    "NumCallInst": 18,
    "NumGetElementPtrInst": 5,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 13,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 19,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 19,
    "TotalInsts": 133,
    "TotalMemInst": 105,
    "TotalFuncs": 22,
    "ArgsPhi": 0,
    "testUnary": 57
  },
  "baseline_oz_instcount": 133,
  "knowledge_base_entry": [
    "--lower-expect",
    "--mergefunc",
    "--loop-instsimplify",
    "--lower-expect",
    "--simplifycfg",
    "--elim-avail-extern",
    "--mldst-motion",
    "--instcombine",
    "--prune-eh",
    "--licm",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--reg2mem",
          "--guard-widening",
          "--mem2reg",
          "--ipconstprop",
          "--strip-nondebug",
          "--lowerswitch",
          "--mergefunc",
          "--hotcoldsplit",
          "--irce",
          "--deadargelim",
          "--dce",
          "--indvars",
          "--die",
          "--ee-instrument",
          "--always-inline",
          "--div-rem-pairs",
          "--strip",
          "--jump-threading",
          "--memcpyopt",
          "--scalarizer",
          "--consthoist",
          "--sink",
          "--loop-instsimplify",
          "--early-cse-memssa",
          "--lower-constant-intrinsics",
          "--licm"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+35.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--reg2mem",
      "--guard-widening",
      "--mem2reg",
      "--ipconstprop",
      "--strip-nondebug",
      "--lowerswitch",
      "--mergefunc",
      "--hotcoldsplit",
      "--irce",
      "--deadargelim",
      "--dce",
      "--indvars",
      "--die",
      "--ee-instrument",
      "--always-inline",
      "--div-rem-pairs",
      "--strip",
      "--jump-threading",
      "--memcpyopt",
      "--scalarizer",
      "--consthoist",
      "--sink",
      "--loop-instsimplify",
      "--early-cse-memssa",
      "--lower-constant-intrinsics",
      "--licm"
    ],
    "performance_vs_Oz": "+35.3%"
  }
}