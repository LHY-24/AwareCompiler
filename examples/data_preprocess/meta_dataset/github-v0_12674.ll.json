{
  "program_id": "github-v0_12674.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 13,
    "onePredOneSuc": 10,
    "onePredTwoSuc": 3,
    "oneSuccessor": 12,
    "twoPred": 5,
    "twoPredOneSuc": 2,
    "twoEach": 0,
    "twoSuccessor": 7,
    "morePreds": 1,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 23,
    "BeginPhi": 0,
    "BranchCount": 19,
    "returnInt": 7,
    "CriticalCount": 1,
    "NumEdges": 26,
    "const32Bit": 67,
    "const64Bit": 14,
    "numConstZeroes": 33,
    "numConstOnes": 28,
    "UncondBranches": 12,
    "binaryConstArg": 15,
    "NumAShrInst": 2,
    "NumAddInst": 0,
    "NumAllocaInst": 23,
    "NumAndInst": 4,
    "BlockMid": 5,
    "BlockLow": 18,
    "NumBitCastInst": 0,
    "NumBrInst": 19,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 17,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 51,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 33,
    "NumSubInst": 1,
    "NumTruncInst": 7,
    "NumXorInst": 0,
    "NumZExtInst": 11,
    "TotalBlocks": 23,
    "TotalInsts": 197,
    "TotalMemInst": 131,
    "TotalFuncs": 8,
    "ArgsPhi": 0,
    "testUnary": 92
  },
  "baseline_oz_instcount": 197,
  "knowledge_base_entry": [
    "--loop-interchange",
    "--gvn-hoist",
    "--loop-deletion",
    "--elim-avail-extern",
    "--load-store-vectorizer",
    "--memcpyopt",
    "--jump-threading",
    "--aggressive-instcombine",
    "--loop-instsimplify",
    "--sccp",
    "--lower-constant-intrinsics",
    "--licm",
    "--die",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--strip-nondebug",
          "--dse",
          "--ipconstprop",
          "--jump-threading",
          "--hotcoldsplit",
          "--coro-elide",
          "--loop-guard-widening",
          "--bdce",
          "--nary-reassociate",
          "--barrier",
          "--aggressive-instcombine",
          "--coro-early",
          "--always-inline",
          "--loop-rotate",
          "--lower-guard-intrinsic",
          "--canonicalize-aliases",
          "--lcssa",
          "--loop-idiom",
          "--div-rem-pairs",
          "--indvars",
          "--simplifycfg",
          "--lower-constant-intrinsics",
          "--mergereturn",
          "--loop-instsimplify",
          "--mem2reg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.0%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--strip-nondebug",
      "--dse",
      "--ipconstprop",
      "--jump-threading",
      "--hotcoldsplit",
      "--coro-elide",
      "--loop-guard-widening",
      "--bdce",
      "--nary-reassociate",
      "--barrier",
      "--aggressive-instcombine",
      "--coro-early",
      "--always-inline",
      "--loop-rotate",
      "--lower-guard-intrinsic",
      "--canonicalize-aliases",
      "--lcssa",
      "--loop-idiom",
      "--div-rem-pairs",
      "--indvars",
      "--simplifycfg",
      "--lower-constant-intrinsics",
      "--mergereturn",
      "--loop-instsimplify",
      "--mem2reg"
    ],
    "performance_vs_Oz": "+1.0%"
  }
}