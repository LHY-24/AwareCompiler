{
  "program_id": "github-v0_15720.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 65,
    "onePredOneSuc": 36,
    "onePredTwoSuc": 23,
    "oneSuccessor": 57,
    "twoPred": 42,
    "twoPredOneSuc": 18,
    "twoEach": 21,
    "twoSuccessor": 46,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 113,
    "BeginPhi": 0,
    "BranchCount": 103,
    "returnInt": 58,
    "CriticalCount": 27,
    "NumEdges": 149,
    "const32Bit": 205,
    "const64Bit": 2,
    "numConstZeroes": 90,
    "numConstOnes": 72,
    "UncondBranches": 57,
    "binaryConstArg": 21,
    "NumAShrInst": 0,
    "NumAddInst": 22,
    "NumAllocaInst": 37,
    "NumAndInst": 0,
    "BlockMid": 6,
    "BlockLow": 107,
    "NumBitCastInst": 8,
    "NumBrInst": 103,
    "NumCallInst": 72,
    "NumGetElementPtrInst": 55,
    "NumICmpInst": 46,
    "NumLShrInst": 0,
    "NumLoadInst": 196,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 6,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 86,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 113,
    "TotalInsts": 636,
    "TotalMemInst": 446,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 241
  },
  "baseline_oz_instcount": 637,
  "knowledge_base_entry": [
    "--lowerswitch",
    "--early-cse",
    "--newgvn",
    "--flattencfg",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--inline",
    "--jump-threading",
    "--correlated-propagation"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--div-rem-pairs",
          "--gvn",
          "--nary-reassociate",
          "--scalarizer",
          "--slp-vectorizer",
          "--aggressive-instcombine",
          "--slsr",
          "--called-value-propagation",
          "--lower-constant-intrinsics",
          "--inline",
          "--sccp",
          "--newgvn",
          "--lower-guard-intrinsic",
          "--strip-debug-declare",
          "--rpo-functionattrs",
          "--float2int",
          "--deadargelim",
          "--globaldce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--div-rem-pairs",
      "--gvn",
      "--nary-reassociate",
      "--scalarizer",
      "--slp-vectorizer",
      "--aggressive-instcombine",
      "--slsr",
      "--called-value-propagation",
      "--lower-constant-intrinsics",
      "--inline",
      "--sccp",
      "--newgvn",
      "--lower-guard-intrinsic",
      "--strip-debug-declare",
      "--rpo-functionattrs",
      "--float2int",
      "--deadargelim",
      "--globaldce"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}