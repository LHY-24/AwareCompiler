{
  "program_id": "linux-v0_3759.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 27,
    "onePredOneSuc": 21,
    "onePredTwoSuc": 6,
    "oneSuccessor": 23,
    "twoPred": 1,
    "twoPredOneSuc": 0,
    "twoEach": 1,
    "twoSuccessor": 7,
    "morePreds": 2,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 33,
    "BeginPhi": 0,
    "BranchCount": 30,
    "returnInt": 12,
    "CriticalCount": 0,
    "NumEdges": 37,
    "const32Bit": 44,
    "const64Bit": 0,
    "numConstZeroes": 14,
    "numConstOnes": 25,
    "UncondBranches": 23,
    "binaryConstArg": 5,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 16,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 32,
    "NumBitCastInst": 2,
    "NumBrInst": 30,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 3,
    "NumICmpInst": 7,
    "NumLShrInst": 0,
    "NumLoadInst": 31,
    "NumMulInst": 3,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 33,
    "TotalInsts": 148,
    "TotalMemInst": 97,
    "TotalFuncs": 17,
    "ArgsPhi": 0,
    "testUnary": 51
  },
  "baseline_oz_instcount": 150,
  "knowledge_base_entry": [
    "--loop-rotate",
    "--mem2reg",
    "--inline",
    "--slp-vectorizer",
    "--gvn-hoist"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-load-elim",
          "--loop-vectorize",
          "--redundant-dbg-inst-elim",
          "--instsimplify",
          "--flattencfg",
          "--slp-vectorizer",
          "--lower-widenable-condition",
          "--licm",
          "--simple-loop-unswitch",
          "--adce",
          "--speculative-execution",
          "--instcombine",
          "--coro-elide",
          "--coro-early",
          "--guard-widening",
          "--cross-dso-cfi",
          "--partial-inliner",
          "--nary-reassociate",
          "--inferattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-load-elim",
      "--loop-vectorize",
      "--redundant-dbg-inst-elim",
      "--instsimplify",
      "--flattencfg",
      "--slp-vectorizer",
      "--lower-widenable-condition",
      "--licm",
      "--simple-loop-unswitch",
      "--adce",
      "--speculative-execution",
      "--instcombine",
      "--coro-elide",
      "--coro-early",
      "--guard-widening",
      "--cross-dso-cfi",
      "--partial-inliner",
      "--nary-reassociate",
      "--inferattrs"
    ],
    "performance_vs_Oz": "+1.3%"
  }
}