{
  "program_id": "linux-v0_9552.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 67,
    "onePredOneSuc": 47,
    "onePredTwoSuc": 19,
    "oneSuccessor": 61,
    "twoPred": 29,
    "twoPredOneSuc": 11,
    "twoEach": 18,
    "twoSuccessor": 38,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 101,
    "BeginPhi": 0,
    "BranchCount": 99,
    "returnInt": 0,
    "CriticalCount": 21,
    "NumEdges": 140,
    "const32Bit": 144,
    "const64Bit": 20,
    "numConstZeroes": 74,
    "numConstOnes": 76,
    "UncondBranches": 61,
    "binaryConstArg": 30,
    "NumAShrInst": 0,
    "NumAddInst": 20,
    "NumAllocaInst": 28,
    "NumAndInst": 7,
    "BlockMid": 9,
    "BlockLow": 92,
    "NumBitCastInst": 8,
    "NumBrInst": 99,
    "NumCallInst": 4,
    "NumGetElementPtrInst": 53,
    "NumICmpInst": 38,
    "NumLShrInst": 4,
    "NumLoadInst": 197,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 1,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 9,
    "NumStoreInst": 109,
    "NumSubInst": 13,
    "NumTruncInst": 9,
    "NumXorInst": 0,
    "NumZExtInst": 42,
    "TotalBlocks": 101,
    "TotalInsts": 645,
    "TotalMemInst": 391,
    "TotalFuncs": 2,
    "ArgsPhi": 0,
    "testUnary": 286
  },
  "baseline_oz_instcount": 648,
  "knowledge_base_entry": [
    "--aggressive-instcombine",
    "--bdce",
    "--newgvn",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--rewrite-statepoints-for-gc",
          "--loop-simplifycfg",
          "--instnamer",
          "--coro-elide",
          "--forceattrs",
          "--correlated-propagation",
          "--sccp",
          "--lowerinvoke",
          "--loop-guard-widening",
          "--indvars",
          "--libcalls-shrinkwrap",
          "--loop-idiom",
          "--strip-debug-declare",
          "--globaldce",
          "--lower-expect",
          "--irce",
          "--aggressive-instcombine",
          "--inferattrs",
          "--coro-split",
          "--deadargelim",
          "--loop-simplify",
          "--attributor",
          "--globalopt",
          "--memcpyopt",
          "--barrier",
          "--strip-dead-prototypes",
          "--loop-data-prefetch",
          "--loop-unswitch"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.5%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--rewrite-statepoints-for-gc",
      "--loop-simplifycfg",
      "--instnamer",
      "--coro-elide",
      "--forceattrs",
      "--correlated-propagation",
      "--sccp",
      "--lowerinvoke",
      "--loop-guard-widening",
      "--indvars",
      "--libcalls-shrinkwrap",
      "--loop-idiom",
      "--strip-debug-declare",
      "--globaldce",
      "--lower-expect",
      "--irce",
      "--aggressive-instcombine",
      "--inferattrs",
      "--coro-split",
      "--deadargelim",
      "--loop-simplify",
      "--attributor",
      "--globalopt",
      "--memcpyopt",
      "--barrier",
      "--strip-dead-prototypes",
      "--loop-data-prefetch",
      "--loop-unswitch"
    ],
    "performance_vs_Oz": "+0.5%"
  }
}