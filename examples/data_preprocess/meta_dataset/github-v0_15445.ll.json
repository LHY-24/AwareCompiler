{
  "program_id": "github-v0_15445.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 0,
    "onePredOneSuc": 0,
    "onePredTwoSuc": 0,
    "oneSuccessor": 0,
    "twoPred": 0,
    "twoPredOneSuc": 0,
    "twoEach": 0,
    "twoSuccessor": 0,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 20,
    "BeginPhi": 0,
    "BranchCount": 0,
    "returnInt": 10,
    "CriticalCount": 0,
    "NumEdges": 0,
    "const32Bit": 38,
    "const64Bit": 0,
    "numConstZeroes": 1,
    "numConstOnes": 37,
    "UncondBranches": 0,
    "binaryConstArg": 0,
    "NumAShrInst": 0,
    "NumAddInst": 0,
    "NumAllocaInst": 35,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 19,
    "NumBitCastInst": 3,
    "NumBrInst": 0,
    "NumCallInst": 22,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 0,
    "NumLShrInst": 0,
    "NumLoadInst": 13,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 20,
    "NumSExtInst": 7,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 34,
    "NumSubInst": 0,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 20,
    "TotalInsts": 134,
    "TotalMemInst": 104,
    "TotalFuncs": 24,
    "ArgsPhi": 0,
    "testUnary": 58
  },
  "baseline_oz_instcount": 134,
  "knowledge_base_entry": [
    "--reg2mem",
    "--simplifycfg",
    "--early-cse",
    "--adce",
    "--sccp",
    "--dse",
    "--adce",
    "--correlated-propagation",
    "--mergefunc",
    "--newgvn",
    "--loop-simplifycfg",
    "--inline",
    "--sroa",
    "--bdce",
    "--instcombine",
    "--loop-rotate",
    "--instsimplify",
    "--lower-expect",
    "--instsimplify",
    "--nary-reassociate",
    "--sroa"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-simplifycfg",
          "--loop-sink",
          "--dce",
          "--name-anon-globals",
          "--lower-matrix-intrinsics",
          "--sroa",
          "--early-cse-memssa",
          "--mergefunc",
          "--instcombine",
          "--add-discriminators",
          "--nary-reassociate",
          "--lower-expect",
          "--strip-nondebug",
          "--loop-predication",
          "--globalopt",
          "--prune-eh",
          "--memcpyopt",
          "--loop-data-prefetch",
          "--globalsplit",
          "--loop-deletion",
          "--simplifycfg",
          "--instsimplify",
          "--deadargelim",
          "--globaldce",
          "--scalarizer",
          "--ee-instrument",
          "--consthoist",
          "--bdce"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+35.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-simplifycfg",
      "--loop-sink",
      "--dce",
      "--name-anon-globals",
      "--lower-matrix-intrinsics",
      "--sroa",
      "--early-cse-memssa",
      "--mergefunc",
      "--instcombine",
      "--add-discriminators",
      "--nary-reassociate",
      "--lower-expect",
      "--strip-nondebug",
      "--loop-predication",
      "--globalopt",
      "--prune-eh",
      "--memcpyopt",
      "--loop-data-prefetch",
      "--globalsplit",
      "--loop-deletion",
      "--simplifycfg",
      "--instsimplify",
      "--deadargelim",
      "--globaldce",
      "--scalarizer",
      "--ee-instrument",
      "--consthoist",
      "--bdce"
    ],
    "performance_vs_Oz": "+35.1%"
  }
}