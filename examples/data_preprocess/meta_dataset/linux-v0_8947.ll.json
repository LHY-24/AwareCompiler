{
  "program_id": "linux-v0_8947.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 57,
    "onePredOneSuc": 42,
    "onePredTwoSuc": 15,
    "oneSuccessor": 50,
    "twoPred": 24,
    "twoPredOneSuc": 8,
    "twoEach": 9,
    "twoSuccessor": 35,
    "morePreds": 4,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 97,
    "BeginPhi": 3,
    "BranchCount": 85,
    "returnInt": 24,
    "CriticalCount": 15,
    "NumEdges": 120,
    "const32Bit": 208,
    "const64Bit": 7,
    "numConstZeroes": 96,
    "numConstOnes": 51,
    "UncondBranches": 50,
    "binaryConstArg": 33,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 35,
    "NumAndInst": 22,
    "BlockMid": 5,
    "BlockLow": 95,
    "NumBitCastInst": 0,
    "NumBrInst": 85,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 35,
    "NumICmpInst": 37,
    "NumLShrInst": 1,
    "NumLoadInst": 130,
    "NumMulInst": 0,
    "NumOrInst": 10,
    "NumPHIInst": 3,
    "NumRetInst": 15,
    "NumSExtInst": 0,
    "NumSelectInst": 2,
    "NumShlInst": 0,
    "NumStoreInst": 84,
    "NumSubInst": 0,
    "NumTruncInst": 8,
    "NumXorInst": 0,
    "NumZExtInst": 10,
    "TotalBlocks": 100,
    "TotalInsts": 504,
    "TotalMemInst": 309,
    "TotalFuncs": 20,
    "ArgsPhi": 7,
    "testUnary": 183
  },
  "baseline_oz_instcount": 504,
  "knowledge_base_entry": [
    "-loop-reduce",
    "--indvars",
    "--load-store-vectorizer",
    "--nary-reassociate",
    "--load-store-vectorizer",
    "--instsimplify",
    "--bdce",
    "--sroa",
    "--mergefunc",
    "--globaldce",
    "--ipsccp",
    "--aggressive-instcombine",
    "--globalopt"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-vectorize",
          "--loop-rotate",
          "--scalarizer",
          "--loop-predication",
          "--loop-unroll",
          "--callsite-splitting",
          "-loop-reduce",
          "--flattencfg",
          "--canonicalize-aliases",
          "--aggressive-instcombine",
          "--cross-dso-cfi",
          "--lowerswitch",
          "--loop-data-prefetch",
          "--partially-inline-libcalls",
          "--deadargelim",
          "--add-discriminators",
          "--memcpyopt",
          "--called-value-propagation",
          "--hotcoldsplit",
          "--redundant-dbg-inst-elim",
          "--globalopt"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-vectorize",
      "--loop-rotate",
      "--scalarizer",
      "--loop-predication",
      "--loop-unroll",
      "--callsite-splitting",
      "-loop-reduce",
      "--flattencfg",
      "--canonicalize-aliases",
      "--aggressive-instcombine",
      "--cross-dso-cfi",
      "--lowerswitch",
      "--loop-data-prefetch",
      "--partially-inline-libcalls",
      "--deadargelim",
      "--add-discriminators",
      "--memcpyopt",
      "--called-value-propagation",
      "--hotcoldsplit",
      "--redundant-dbg-inst-elim",
      "--globalopt"
    ],
    "performance_vs_Oz": "+2.8%"
  }
}