{
  "program_id": "github-v0_35890.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 11,
    "onePred": 83,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 19,
    "oneSuccessor": 82,
    "twoPred": 35,
    "twoPredOneSuc": 20,
    "twoEach": 10,
    "twoSuccessor": 35,
    "morePreds": 1,
    "BB03Phi": 11,
    "BBHiPhi": 0,
    "BBNoPhi": 126,
    "BeginPhi": 11,
    "BranchCount": 117,
    "returnInt": 2,
    "CriticalCount": 5,
    "NumEdges": 164,
    "const32Bit": 270,
    "const64Bit": 24,
    "numConstZeroes": 113,
    "numConstOnes": 88,
    "UncondBranches": 82,
    "binaryConstArg": 39,
    "NumAShrInst": 0,
    "NumAddInst": 29,
    "NumAllocaInst": 68,
    "NumAndInst": 0,
    "BlockMid": 15,
    "BlockLow": 122,
    "NumBitCastInst": 24,
    "NumBrInst": 117,
    "NumCallInst": 51,
    "NumGetElementPtrInst": 98,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 313,
    "NumMulInst": 1,
    "NumOrInst": 2,
    "NumPHIInst": 11,
    "NumRetInst": 18,
    "NumSExtInst": 11,
    "NumSelectInst": 0,
    "NumShlInst": 2,
    "NumStoreInst": 127,
    "NumSubInst": 2,
    "NumTruncInst": 12,
    "NumXorInst": 0,
    "NumZExtInst": 14,
    "TotalBlocks": 137,
    "TotalInsts": 970,
    "TotalMemInst": 657,
    "TotalFuncs": 23,
    "ArgsPhi": 22,
    "testUnary": 460
  },
  "baseline_oz_instcount": 970,
  "knowledge_base_entry": [
    "--loweratomic",
    "--aggressive-instcombine",
    "--sroa",
    "--mem2reg",
    "--dce",
    "--correlated-propagation",
    "--loop-reroll",
    "--correlated-propagation",
    "--adce",
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--ipsccp",
    "--aggressive-instcombine",
    "--jump-threading"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--dce",
          "--loop-fusion",
          "--post-inline-ee-instrument",
          "--reassociate",
          "--gvn-hoist",
          "--consthoist",
          "--loop-distribute",
          "--called-value-propagation",
          "--aggressive-instcombine",
          "--newgvn",
          "--loop-idiom",
          "--partially-inline-libcalls",
          "--cross-dso-cfi",
          "--constprop",
          "--loop-interchange",
          "--lower-constant-intrinsics",
          "--lowerinvoke",
          "--loop-predication",
          "--loop-deletion",
          "--functionattrs"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.6%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--dce",
      "--loop-fusion",
      "--post-inline-ee-instrument",
      "--reassociate",
      "--gvn-hoist",
      "--consthoist",
      "--loop-distribute",
      "--called-value-propagation",
      "--aggressive-instcombine",
      "--newgvn",
      "--loop-idiom",
      "--partially-inline-libcalls",
      "--cross-dso-cfi",
      "--constprop",
      "--loop-interchange",
      "--lower-constant-intrinsics",
      "--lowerinvoke",
      "--loop-predication",
      "--loop-deletion",
      "--functionattrs"
    ],
    "performance_vs_Oz": "+0.6%"
  }
}