{
  "program_id": "github-v0_40465.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 15,
    "onePredOneSuc": 9,
    "onePredTwoSuc": 3,
    "oneSuccessor": 13,
    "twoPred": 6,
    "twoPredOneSuc": 3,
    "twoEach": 3,
    "twoSuccessor": 7,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 24,
    "BeginPhi": 0,
    "BranchCount": 20,
    "returnInt": 4,
    "CriticalCount": 0,
    "NumEdges": 27,
    "const32Bit": 40,
    "const64Bit": 60,
    "numConstZeroes": 55,
    "numConstOnes": 29,
    "UncondBranches": 13,
    "binaryConstArg": 12,
    "NumAShrInst": 0,
    "NumAddInst": 4,
    "NumAllocaInst": 15,
    "NumAndInst": 2,
    "BlockMid": 6,
    "BlockLow": 18,
    "NumBitCastInst": 12,
    "NumBrInst": 20,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 45,
    "NumICmpInst": 7,
    "NumLShrInst": 1,
    "NumLoadInst": 53,
    "NumMulInst": 2,
    "NumOrInst": 3,
    "NumPHIInst": 0,
    "NumRetInst": 3,
    "NumSExtInst": 3,
    "NumSelectInst": 0,
    "NumShlInst": 3,
    "NumStoreInst": 27,
    "NumSubInst": 3,
    "NumTruncInst": 2,
    "NumXorInst": 0,
    "NumZExtInst": 13,
    "TotalBlocks": 24,
    "TotalInsts": 226,
    "TotalMemInst": 147,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 98
  },
  "baseline_oz_instcount": 226,
  "knowledge_base_entry": [
    "--dce",
    "--loop-simplifycfg",
    "--aggressive-instcombine",
    "--elim-avail-extern",
    "--lower-constant-intrinsics",
    "--jump-threading",
    "--flattencfg",
    "--early-cse",
    "--bdce",
    "--lower-expect",
    "--dse",
    "--sccp",
    "--simplifycfg"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--memcpyopt",
          "--mergereturn",
          "--coro-split",
          "--loop-predication",
          "--constprop",
          "--always-inline",
          "--div-rem-pairs",
          "-loop-reduce",
          "--attributor",
          "--rpo-functionattrs",
          "--inline",
          "--indvars",
          "--functionattrs",
          "--strip-nondebug",
          "--insert-gcov-profiling",
          "--lowerswitch",
          "--called-value-propagation",
          "--aggressive-instcombine",
          "--loop-versioning",
          "--newgvn",
          "--adce",
          "--loop-distribute",
          "--simple-loop-unswitch",
          "--redundant-dbg-inst-elim",
          "--add-discriminators"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--memcpyopt",
      "--mergereturn",
      "--coro-split",
      "--loop-predication",
      "--constprop",
      "--always-inline",
      "--div-rem-pairs",
      "-loop-reduce",
      "--attributor",
      "--rpo-functionattrs",
      "--inline",
      "--indvars",
      "--functionattrs",
      "--strip-nondebug",
      "--insert-gcov-profiling",
      "--lowerswitch",
      "--called-value-propagation",
      "--aggressive-instcombine",
      "--loop-versioning",
      "--newgvn",
      "--adce",
      "--loop-distribute",
      "--simple-loop-unswitch",
      "--redundant-dbg-inst-elim",
      "--add-discriminators"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}