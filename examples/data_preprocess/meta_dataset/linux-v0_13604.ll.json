{
  "program_id": "linux-v0_13604.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 76,
    "onePredOneSuc": 57,
    "onePredTwoSuc": 19,
    "oneSuccessor": 66,
    "twoPred": 27,
    "twoPredOneSuc": 9,
    "twoEach": 10,
    "twoSuccessor": 43,
    "morePreds": 7,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 129,
    "BeginPhi": 1,
    "BranchCount": 109,
    "returnInt": 17,
    "CriticalCount": 14,
    "NumEdges": 155,
    "const32Bit": 351,
    "const64Bit": 3,
    "numConstZeroes": 152,
    "numConstOnes": 103,
    "UncondBranches": 66,
    "binaryConstArg": 7,
    "NumAShrInst": 1,
    "NumAddInst": 3,
    "NumAllocaInst": 82,
    "NumAndInst": 3,
    "BlockMid": 14,
    "BlockLow": 116,
    "NumBitCastInst": 14,
    "NumBrInst": 109,
    "NumCallInst": 66,
    "NumGetElementPtrInst": 108,
    "NumICmpInst": 45,
    "NumLShrInst": 0,
    "NumLoadInst": 278,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 1,
    "NumRetInst": 20,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 142,
    "NumSubInst": 2,
    "NumTruncInst": 7,
    "NumXorInst": 2,
    "NumZExtInst": 21,
    "TotalBlocks": 130,
    "TotalInsts": 914,
    "TotalMemInst": 676,
    "TotalFuncs": 33,
    "ArgsPhi": 2,
    "testUnary": 410
  },
  "baseline_oz_instcount": 910,
  "knowledge_base_entry": [
    "--mergereturn",
    "--jump-threading",
    "--aggressive-instcombine",
    "--gvn-hoist",
    "--gvn-hoist",
    "--early-cse",
    "--bdce",
    "--aggressive-instcombine",
    "--mergefunc",
    "--simplifycfg",
    "--newgvn",
    "--instcombine",
    "--loop-deletion",
    "--instcombine",
    "--globalopt",
    "--instsimplify",
    "--lower-constant-intrinsics",
    "--die",
    "--load-store-vectorizer",
    "-loop-reduce"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--separate-const-offset-from-gep",
          "--sccp",
          "--ipconstprop",
          "--loop-unroll-and-jam",
          "--simple-loop-unswitch",
          "--loop-idiom",
          "--early-cse",
          "--add-discriminators",
          "--redundant-dbg-inst-elim",
          "--loop-simplify",
          "--dse",
          "--loop-guard-widening",
          "--name-anon-globals",
          "--globalopt",
          "--attributor",
          "--cross-dso-cfi",
          "--rewrite-statepoints-for-gc",
          "--ipsccp",
          "--aggressive-instcombine"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--separate-const-offset-from-gep",
      "--sccp",
      "--ipconstprop",
      "--loop-unroll-and-jam",
      "--simple-loop-unswitch",
      "--loop-idiom",
      "--early-cse",
      "--add-discriminators",
      "--redundant-dbg-inst-elim",
      "--loop-simplify",
      "--dse",
      "--loop-guard-widening",
      "--name-anon-globals",
      "--globalopt",
      "--attributor",
      "--cross-dso-cfi",
      "--rewrite-statepoints-for-gc",
      "--ipsccp",
      "--aggressive-instcombine"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}