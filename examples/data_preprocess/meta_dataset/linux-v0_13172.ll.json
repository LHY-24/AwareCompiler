{
  "program_id": "linux-v0_13172.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 18,
    "onePredTwoSuc": 11,
    "oneSuccessor": 29,
    "twoPred": 25,
    "twoPredOneSuc": 11,
    "twoEach": 11,
    "twoSuccessor": 25,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 64,
    "BeginPhi": 0,
    "BranchCount": 54,
    "returnInt": 11,
    "CriticalCount": 21,
    "NumEdges": 79,
    "const32Bit": 124,
    "const64Bit": 73,
    "numConstZeroes": 42,
    "numConstOnes": 46,
    "UncondBranches": 29,
    "binaryConstArg": 61,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 26,
    "NumAndInst": 23,
    "BlockMid": 5,
    "BlockLow": 59,
    "NumBitCastInst": 2,
    "NumBrInst": 54,
    "NumCallInst": 36,
    "NumGetElementPtrInst": 30,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 129,
    "NumMulInst": 0,
    "NumOrInst": 27,
    "NumPHIInst": 0,
    "NumRetInst": 10,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 9,
    "NumStoreInst": 57,
    "NumSubInst": 14,
    "NumTruncInst": 23,
    "NumXorInst": 2,
    "NumZExtInst": 15,
    "TotalBlocks": 64,
    "TotalInsts": 483,
    "TotalMemInst": 278,
    "TotalFuncs": 13,
    "ArgsPhi": 0,
    "testUnary": 195
  },
  "baseline_oz_instcount": 484,
  "knowledge_base_entry": [
    "--dce",
    "--lower-constant-intrinsics",
    "--instcombine",
    "--jump-threading",
    "--early-cse",
    "--early-cse-memssa",
    "--globalopt",
    "--aggressive-instcombine",
    "--jump-threading",
    "--memcpyopt",
    "--load-store-vectorizer",
    "--mem2reg",
    "--simplifycfg",
    "--memcpyopt",
    "--simplifycfg",
    "--gvn-hoist",
    "--reassociate",
    "--dce",
    "--elim-avail-extern",
    "--inline",
    "--load-store-vectorizer",
    "--lower-expect",
    "--early-cse",
    "--dse"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--lower-guard-intrinsic",
          "--loweratomic",
          "--globaldce",
          "--newgvn",
          "--lowerswitch",
          "--globalopt",
          "--elim-avail-extern",
          "--mergereturn",
          "--insert-gcov-profiling",
          "--strip",
          "--aggressive-instcombine",
          "--mergefunc",
          "--strip-debug-declare",
          "--loop-simplify",
          "--loop-fusion",
          "--coro-early",
          "--instcombine",
          "--coro-split",
          "--slsr",
          "--alignment-from-assumptions",
          "--nary-reassociate",
          "--inline",
          "--slp-vectorizer",
          "--lower-matrix-intrinsics",
          "--strip-nondebug",
          "--coro-cleanup",
          "--gvn",
          "--reassociate"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+2.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--lower-guard-intrinsic",
      "--loweratomic",
      "--globaldce",
      "--newgvn",
      "--lowerswitch",
      "--globalopt",
      "--elim-avail-extern",
      "--mergereturn",
      "--insert-gcov-profiling",
      "--strip",
      "--aggressive-instcombine",
      "--mergefunc",
      "--strip-debug-declare",
      "--loop-simplify",
      "--loop-fusion",
      "--coro-early",
      "--instcombine",
      "--coro-split",
      "--slsr",
      "--alignment-from-assumptions",
      "--nary-reassociate",
      "--inline",
      "--slp-vectorizer",
      "--lower-matrix-intrinsics",
      "--strip-nondebug",
      "--coro-cleanup",
      "--gvn",
      "--reassociate"
    ],
    "performance_vs_Oz": "+2.9%"
  }
}