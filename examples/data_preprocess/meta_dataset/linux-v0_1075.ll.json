{
  "program_id": "linux-v0_1075.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 3,
    "onePred": 90,
    "onePredOneSuc": 65,
    "onePredTwoSuc": 24,
    "oneSuccessor": 80,
    "twoPred": 20,
    "twoPredOneSuc": 11,
    "twoEach": 1,
    "twoSuccessor": 35,
    "morePreds": 6,
    "BB03Phi": 3,
    "BBHiPhi": 0,
    "BBNoPhi": 154,
    "BeginPhi": 3,
    "BranchCount": 115,
    "returnInt": 28,
    "CriticalCount": 20,
    "NumEdges": 153,
    "const32Bit": 291,
    "const64Bit": 30,
    "numConstZeroes": 98,
    "numConstOnes": 170,
    "UncondBranches": 80,
    "binaryConstArg": 23,
    "NumAShrInst": 0,
    "NumAddInst": 1,
    "NumAllocaInst": 132,
    "NumAndInst": 4,
    "BlockMid": 19,
    "BlockLow": 138,
    "NumBitCastInst": 9,
    "NumBrInst": 115,
    "NumCallInst": 84,
    "NumGetElementPtrInst": 58,
    "NumICmpInst": 36,
    "NumLShrInst": 2,
    "NumLoadInst": 249,
    "NumMulInst": 0,
    "NumOrInst": 1,
    "NumPHIInst": 3,
    "NumRetInst": 41,
    "NumSExtInst": 4,
    "NumSelectInst": 0,
    "NumShlInst": 1,
    "NumStoreInst": 161,
    "NumSubInst": 3,
    "NumTruncInst": 0,
    "NumXorInst": 12,
    "NumZExtInst": 7,
    "TotalBlocks": 157,
    "TotalInsts": 931,
    "TotalMemInst": 684,
    "TotalFuncs": 61,
    "ArgsPhi": 7,
    "testUnary": 408
  },
  "baseline_oz_instcount": 907,
  "knowledge_base_entry": [
    "--lower-constant-intrinsics",
    "--mergefunc",
    "--ipsccp",
    "--instsimplify",
    "--ipsccp",
    "--licm",
    "--lower-expect",
    "--adce",
    "--elim-avail-extern",
    "--dce",
    "--inline",
    "--early-cse",
    "--licm",
    "--sroa",
    "--slp-vectorizer",
    "--mem2reg",
    "--aggressive-instcombine"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--globalopt",
          "--reassociate",
          "--consthoist",
          "--loop-simplify",
          "--post-inline-ee-instrument",
          "--lower-widenable-condition",
          "--ipconstprop",
          "-loop-reduce",
          "--mergeicmps",
          "--always-inline",
          "--loop-interchange",
          "--rewrite-statepoints-for-gc",
          "--guard-widening",
          "--loop-unroll",
          "--canonicalize-aliases",
          "--pgo-memop-opt",
          "--redundant-dbg-inst-elim",
          "--aggressive-instcombine",
          "--globalsplit",
          "--mergefunc",
          "--loop-sink",
          "--barrier",
          "--partial-inliner",
          "--ipsccp",
          "--infer-address-spaces",
          "--loop-instsimplify",
          "--callsite-splitting",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.9%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--globalopt",
      "--reassociate",
      "--consthoist",
      "--loop-simplify",
      "--post-inline-ee-instrument",
      "--lower-widenable-condition",
      "--ipconstprop",
      "-loop-reduce",
      "--mergeicmps",
      "--always-inline",
      "--loop-interchange",
      "--rewrite-statepoints-for-gc",
      "--guard-widening",
      "--loop-unroll",
      "--canonicalize-aliases",
      "--pgo-memop-opt",
      "--redundant-dbg-inst-elim",
      "--aggressive-instcombine",
      "--globalsplit",
      "--mergefunc",
      "--loop-sink",
      "--barrier",
      "--partial-inliner",
      "--ipsccp",
      "--infer-address-spaces",
      "--loop-instsimplify",
      "--callsite-splitting",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+0.9%"
  }
}