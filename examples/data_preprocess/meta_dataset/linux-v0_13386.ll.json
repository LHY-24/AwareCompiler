{
  "program_id": "linux-v0_13386.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 29,
    "onePredOneSuc": 15,
    "onePredTwoSuc": 14,
    "oneSuccessor": 19,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 25,
    "morePreds": 8,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 46,
    "BeginPhi": 0,
    "BranchCount": 44,
    "returnInt": 5,
    "CriticalCount": 22,
    "NumEdges": 69,
    "const32Bit": 39,
    "const64Bit": 10,
    "numConstZeroes": 23,
    "numConstOnes": 20,
    "UncondBranches": 19,
    "binaryConstArg": 2,
    "NumAShrInst": 0,
    "NumAddInst": 2,
    "NumAllocaInst": 10,
    "NumAndInst": 0,
    "BlockMid": 1,
    "BlockLow": 45,
    "NumBitCastInst": 0,
    "NumBrInst": 44,
    "NumCallInst": 7,
    "NumGetElementPtrInst": 9,
    "NumICmpInst": 25,
    "NumLShrInst": 0,
    "NumLoadInst": 48,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 2,
    "NumSExtInst": 9,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 23,
    "NumSubInst": 0,
    "NumTruncInst": 1,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 46,
    "TotalInsts": 180,
    "TotalMemInst": 97,
    "TotalFuncs": 6,
    "ArgsPhi": 0,
    "testUnary": 68
  },
  "baseline_oz_instcount": 182,
  "knowledge_base_entry": [
    "--nary-reassociate",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--newgvn",
    "--gvn",
    "--early-cse",
    "--ipsccp",
    "--nary-reassociate",
    "--gvn-hoist",
    "--slp-vectorizer",
    "--mergefunc",
    "--jump-threading",
    "--prune-eh"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--prune-eh",
          "--die",
          "--strip-dead-prototypes",
          "--load-store-vectorizer",
          "--instnamer",
          "--correlated-propagation",
          "--loop-unroll-and-jam",
          "--simplifycfg",
          "--rewrite-statepoints-for-gc",
          "--lowerinvoke"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+1.1%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--prune-eh",
      "--die",
      "--strip-dead-prototypes",
      "--load-store-vectorizer",
      "--instnamer",
      "--correlated-propagation",
      "--loop-unroll-and-jam",
      "--simplifycfg",
      "--rewrite-statepoints-for-gc",
      "--lowerinvoke"
    ],
    "performance_vs_Oz": "+1.1%"
  }
}