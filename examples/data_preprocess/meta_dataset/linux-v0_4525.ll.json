{
  "program_id": "linux-v0_4525.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 1,
    "onePred": 36,
    "onePredOneSuc": 27,
    "onePredTwoSuc": 9,
    "oneSuccessor": 29,
    "twoPred": 7,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 16,
    "morePreds": 3,
    "BB03Phi": 1,
    "BBHiPhi": 0,
    "BBNoPhi": 59,
    "BeginPhi": 1,
    "BranchCount": 45,
    "returnInt": 12,
    "CriticalCount": 3,
    "NumEdges": 65,
    "const32Bit": 136,
    "const64Bit": 9,
    "numConstZeroes": 54,
    "numConstOnes": 42,
    "UncondBranches": 29,
    "binaryConstArg": 7,
    "NumAShrInst": 1,
    "NumAddInst": 1,
    "NumAllocaInst": 33,
    "NumAndInst": 4,
    "BlockMid": 3,
    "BlockLow": 57,
    "NumBitCastInst": 4,
    "NumBrInst": 45,
    "NumCallInst": 25,
    "NumGetElementPtrInst": 33,
    "NumICmpInst": 18,
    "NumLShrInst": 0,
    "NumLoadInst": 95,
    "NumMulInst": 0,
    "NumOrInst": 3,
    "NumPHIInst": 1,
    "NumRetInst": 14,
    "NumSExtInst": 1,
    "NumSelectInst": 1,
    "NumShlInst": 1,
    "NumStoreInst": 64,
    "NumSubInst": 0,
    "NumTruncInst": 5,
    "NumXorInst": 0,
    "NumZExtInst": 7,
    "TotalBlocks": 60,
    "TotalInsts": 357,
    "TotalMemInst": 250,
    "TotalFuncs": 25,
    "ArgsPhi": 2,
    "testUnary": 145
  },
  "baseline_oz_instcount": 358,
  "knowledge_base_entry": [
    "--bdce",
    "--early-cse-memssa",
    "--sccp",
    "--sroa",
    "--instsimplify",
    "--mergefunc",
    "--memcpyopt",
    "--mergefunc"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--load-store-vectorizer",
          "--always-inline",
          "--add-discriminators",
          "--slsr",
          "--sink",
          "--instcombine",
          "--separate-const-offset-from-gep",
          "--loop-unroll-and-jam",
          "--post-inline-ee-instrument",
          "--early-cse-memssa"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.3%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--load-store-vectorizer",
      "--always-inline",
      "--add-discriminators",
      "--slsr",
      "--sink",
      "--instcombine",
      "--separate-const-offset-from-gep",
      "--loop-unroll-and-jam",
      "--post-inline-ee-instrument",
      "--early-cse-memssa"
    ],
    "performance_vs_Oz": "+0.3%"
  }
}