{
  "program_id": "github-v0_44631.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 25,
    "onePredOneSuc": 23,
    "onePredTwoSuc": 2,
    "oneSuccessor": 26,
    "twoPred": 10,
    "twoPredOneSuc": 2,
    "twoEach": 3,
    "twoSuccessor": 9,
    "morePreds": 4,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 55,
    "BeginPhi": 0,
    "BranchCount": 35,
    "returnInt": 14,
    "CriticalCount": 10,
    "NumEdges": 61,
    "const32Bit": 85,
    "const64Bit": 0,
    "numConstZeroes": 23,
    "numConstOnes": 36,
    "UncondBranches": 26,
    "binaryConstArg": 22,
    "NumAShrInst": 3,
    "NumAddInst": 0,
    "NumAllocaInst": 29,
    "NumAndInst": 12,
    "BlockMid": 7,
    "BlockLow": 48,
    "NumBitCastInst": 0,
    "NumBrInst": 35,
    "NumCallInst": 35,
    "NumGetElementPtrInst": 0,
    "NumICmpInst": 10,
    "NumLShrInst": 0,
    "NumLoadInst": 51,
    "NumMulInst": 0,
    "NumOrInst": 10,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 0,
    "NumSelectInst": 0,
    "NumShlInst": 4,
    "NumStoreInst": 55,
    "NumSubInst": 0,
    "NumTruncInst": 17,
    "NumXorInst": 0,
    "NumZExtInst": 30,
    "TotalBlocks": 55,
    "TotalInsts": 311,
    "TotalMemInst": 170,
    "TotalFuncs": 19,
    "ArgsPhi": 0,
    "testUnary": 127
  },
  "baseline_oz_instcount": 311,
  "knowledge_base_entry": [
    "--loop-instsimplify",
    "--loop-simplifycfg",
    "--loop-reroll",
    "--early-cse",
    "--flattencfg",
    "--aggressive-instcombine",
    "--bdce",
    "--lower-constant-intrinsics",
    "--licm",
    "--loop-instsimplify",
    "--load-store-vectorizer"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-data-prefetch",
          "--instcombine",
          "--ipconstprop",
          "--globalopt",
          "--hotcoldsplit",
          "--aggressive-instcombine",
          "--attributor",
          "--loop-sink",
          "--reassociate",
          "--lower-expect",
          "--inferattrs",
          "--newgvn",
          "--partially-inline-libcalls",
          "--name-anon-globals",
          "--globalsplit",
          "--cross-dso-cfi",
          "--post-inline-ee-instrument",
          "--loop-predication",
          "--pgo-memop-opt",
          "--coro-cleanup",
          "--div-rem-pairs",
          "--strip-debug-declare",
          "--loop-guard-widening",
          "--licm",
          "--sink",
          "--mergereturn",
          "--called-value-propagation",
          "--constmerge",
          "--elim-avail-extern",
          "--inline"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+6.8%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-data-prefetch",
      "--instcombine",
      "--ipconstprop",
      "--globalopt",
      "--hotcoldsplit",
      "--aggressive-instcombine",
      "--attributor",
      "--loop-sink",
      "--reassociate",
      "--lower-expect",
      "--inferattrs",
      "--newgvn",
      "--partially-inline-libcalls",
      "--name-anon-globals",
      "--globalsplit",
      "--cross-dso-cfi",
      "--post-inline-ee-instrument",
      "--loop-predication",
      "--pgo-memop-opt",
      "--coro-cleanup",
      "--div-rem-pairs",
      "--strip-debug-declare",
      "--loop-guard-widening",
      "--licm",
      "--sink",
      "--mergereturn",
      "--called-value-propagation",
      "--constmerge",
      "--elim-avail-extern",
      "--inline"
    ],
    "performance_vs_Oz": "+6.8%"
  }
}