{
  "program_id": "linux-v0_3400.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 54,
    "onePredOneSuc": 37,
    "onePredTwoSuc": 16,
    "oneSuccessor": 44,
    "twoPred": 19,
    "twoPredOneSuc": 4,
    "twoEach": 9,
    "twoSuccessor": 34,
    "morePreds": 6,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 95,
    "BeginPhi": 0,
    "BranchCount": 78,
    "returnInt": 12,
    "CriticalCount": 19,
    "NumEdges": 116,
    "const32Bit": 254,
    "const64Bit": 10,
    "numConstZeroes": 89,
    "numConstOnes": 79,
    "UncondBranches": 44,
    "binaryConstArg": 45,
    "NumAShrInst": 3,
    "NumAddInst": 4,
    "NumAllocaInst": 51,
    "NumAndInst": 17,
    "BlockMid": 7,
    "BlockLow": 88,
    "NumBitCastInst": 0,
    "NumBrInst": 78,
    "NumCallInst": 47,
    "NumGetElementPtrInst": 44,
    "NumICmpInst": 40,
    "NumLShrInst": 1,
    "NumLoadInst": 167,
    "NumMulInst": 0,
    "NumOrInst": 4,
    "NumPHIInst": 0,
    "NumRetInst": 16,
    "NumSExtInst": 2,
    "NumSelectInst": 1,
    "NumShlInst": 3,
    "NumStoreInst": 79,
    "NumSubInst": 2,
    "NumTruncInst": 4,
    "NumXorInst": 10,
    "NumZExtInst": 8,
    "TotalBlocks": 95,
    "TotalInsts": 586,
    "TotalMemInst": 388,
    "TotalFuncs": 23,
    "ArgsPhi": 0,
    "testUnary": 232
  },
  "baseline_oz_instcount": 587,
  "knowledge_base_entry": [
    "--flattencfg",
    "--ipsccp",
    "--ipsccp",
    "--gvn-hoist",
    "--lower-expect",
    "--ipsccp",
    "--loweratomic",
    "--globalopt",
    "--loweratomic",
    "--early-cse",
    "--lower-constant-intrinsics",
    "--elim-avail-extern",
    "--early-cse",
    "--slsr"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--loop-unroll-and-jam",
          "--simplifycfg",
          "--mergeicmps",
          "--loop-distribute",
          "--constmerge",
          "--instnamer",
          "--loweratomic",
          "--adce",
          "--constprop",
          "--strip-nondebug"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+0.2%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--loop-unroll-and-jam",
      "--simplifycfg",
      "--mergeicmps",
      "--loop-distribute",
      "--constmerge",
      "--instnamer",
      "--loweratomic",
      "--adce",
      "--constprop",
      "--strip-nondebug"
    ],
    "performance_vs_Oz": "+0.2%"
  }
}