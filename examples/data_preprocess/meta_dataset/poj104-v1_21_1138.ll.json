{
  "program_id": "poj104-v1_21_1138.ll",
  "autophase_features": {
    "BBNumArgsHi": 0,
    "BBNumArgsLo": 0,
    "onePred": 22,
    "onePredOneSuc": 17,
    "onePredTwoSuc": 4,
    "oneSuccessor": 22,
    "twoPred": 10,
    "twoPredOneSuc": 4,
    "twoEach": 6,
    "twoSuccessor": 10,
    "morePreds": 0,
    "BB03Phi": 0,
    "BBHiPhi": 0,
    "BBNoPhi": 36,
    "BeginPhi": 0,
    "BranchCount": 32,
    "returnInt": 5,
    "CriticalCount": 4,
    "NumEdges": 42,
    "const32Bit": 34,
    "const64Bit": 36,
    "numConstZeroes": 23,
    "numConstOnes": 25,
    "UncondBranches": 22,
    "binaryConstArg": 10,
    "NumAShrInst": 0,
    "NumAddInst": 9,
    "NumAllocaInst": 13,
    "NumAndInst": 0,
    "BlockMid": 3,
    "BlockLow": 33,
    "NumBitCastInst": 22,
    "NumBrInst": 32,
    "NumCallInst": 31,
    "NumGetElementPtrInst": 14,
    "NumICmpInst": 8,
    "NumLShrInst": 0,
    "NumLoadInst": 52,
    "NumMulInst": 0,
    "NumOrInst": 0,
    "NumPHIInst": 0,
    "NumRetInst": 4,
    "NumSExtInst": 14,
    "NumSelectInst": 0,
    "NumShlInst": 0,
    "NumStoreInst": 25,
    "NumSubInst": 2,
    "NumTruncInst": 0,
    "NumXorInst": 0,
    "NumZExtInst": 0,
    "TotalBlocks": 36,
    "TotalInsts": 234,
    "TotalMemInst": 135,
    "TotalFuncs": 12,
    "ArgsPhi": 0,
    "testUnary": 104
  },
  "baseline_oz_instcount": 104,
  "knowledge_base_entry": [
    "--separate-const-offset-from-gep",
    "--gvn",
    "--newgvn",
    "--die",
    "--early-cse-memssa",
    "--early-cse-memssa",
    "--slp-vectorizer",
    "--early-cse",
    "--mergefunc",
    "--gvn",
    "--jump-threading",
    "--loop-instsimplify",
    "--elim-avail-extern",
    "--ipsccp",
    "--reassociate",
    "--gvn",
    "--mergefunc",
    "--instcombine",
    "--dce",
    "--simplifycfg",
    "--instcombine",
    "--simplifycfg",
    "--correlated-propagation",
    "--nary-reassociate",
    "--inline"
  ],
  "trajectory": [
    {
      "turn": 1,
      "thought": "Based on the program's characteristics and my experience, I'll formulate a strong initial optimization sequence.",
      "action": "GENERATE_SEQUENCE",
      "action_input": {
        "pass_sequence": [
          "--scalarizer",
          "--mem2reg",
          "--called-value-propagation",
          "--mergereturn",
          "--loop-unswitch",
          "--coro-cleanup",
          "--insert-gcov-profiling",
          "--constmerge",
          "--flattencfg",
          "--lowerswitch",
          "--attributor",
          "--tailcallelim",
          "--elim-avail-extern",
          "--callsite-splitting",
          "--strip-dead-prototypes",
          "--gvn",
          "--newgvn",
          "--loop-simplifycfg"
        ]
      },
      "observation": {
        "status": "BetterThanOz",
        "performance_vs_Oz": "+15.4%",
        "is_crash": false
      }
    }
  ],
  "final_answer": {
    "pass_sequence": [
      "--scalarizer",
      "--mem2reg",
      "--called-value-propagation",
      "--mergereturn",
      "--loop-unswitch",
      "--coro-cleanup",
      "--insert-gcov-profiling",
      "--constmerge",
      "--flattencfg",
      "--lowerswitch",
      "--attributor",
      "--tailcallelim",
      "--elim-avail-extern",
      "--callsite-splitting",
      "--strip-dead-prototypes",
      "--gvn",
      "--newgvn",
      "--loop-simplifycfg"
    ],
    "performance_vs_Oz": "+15.4%"
  }
}